#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 8
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_4015a4:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_43e304]
            call fopen@PLT

            test RAX,RAX
            je .L_401628

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_40164f

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401632

            mov RSI,RBP
            mov RDI,R12
            call .L_401760

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401622:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401628:

            mov EDI,1
            call exit@PLT
.L_401632:

            lea RSI,QWORD PTR [RIP+.L_43e316]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_40164f:

            lea RSI,QWORD PTR [RIP+.L_43e307]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_40166c:

            nop
            nop
            nop
            nop
.L_4016a0:

            ret 
.L_4016a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4016b0:

            push RBP
            mov EAX,OFFSET 6648472
            cmp RAX,OFFSET 6648472
            mov RBP,RSP
            je .L_4016d8

            mov EAX,0
            test RAX,RAX
            je .L_4016d8

            pop RBP
            mov EDI,OFFSET 6648472
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4016d8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4016e0:

            mov ESI,OFFSET 6648472
            push RBP
            sub RSI,OFFSET 6648472
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_401718

            mov EAX,0
            test RAX,RAX
            je .L_401718

            pop RBP
            mov EDI,OFFSET 6648472
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401718:

            pop RBP
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401750:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_4016e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401760:

            push R15
            push R14
            xor R8D,R8D
            push R13
            push R12
            xor ECX,ECX
            push RBP
            push RBX
            mov EDX,1
            mov R12,RSI
            mov R13,RDI
            sub RSP,104
.L_40177e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_401a90

            xor ESI,ESI
            mov RDI,RAX
            mov R14,RAX
            call .L_406220

            mov RDI,RAX
            mov R15,RAX
            call .L_4096f0

            mov RBX,RAX
            mov RDI,RAX
            call .L_40d370

            mov EDX,12
            mov ESI,12
            mov RDI,RBX
            call .L_409d10

            movdqa XMM0,XMMWORD PTR [RIP+.L_43e330]
            mov DWORD PTR [RSP+80],2171946
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_403320

            mov R8D,4294967295
            lea RSI,QWORD PTR [RSP+64]
            mov RBP,RAX
            mov EDX,R8D
            mov RDI,RAX
            xor ECX,ECX
            call .L_4039b0

            mov RDI,RBP
            call .L_4039a0

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_40a750

            mov RDI,RBP
            call .L_4033e0

            cmp R12,64
            jbe .L_401890

            movdqu XMM0,XMMWORD PTR [R13+R12*1-64]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [R13+R12*1-48]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [R13+R12*1-32]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [R13+R12*1-16]
            movaps XMMWORD PTR [RSP+48],XMM0
            call .L_403320

            mov RSI,RSP
            mov RBP,RAX
            mov RDI,RAX
            mov R8D,4294967295
            xor ECX,ECX
            mov EDX,16
            call .L_4042f0

            mov RDI,RBP
            call .L_4039a0

            mov RDI,RBX
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            call .L_40a750

            mov RDI,RBP
            call .L_4033e0
.L_401890:

            mov RDI,RBX
            call .L_4098c0

            mov RDI,R15
            call .L_406900

            mov RDI,R14
            call .L_401950

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4018c9

            add RSP,104
.L_4018be:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4018c9:

            call __stack_chk_fail@PLT
.L_4018ce:

            nop
            nop
.L_4018d0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4018dd:

            mov R12D,DWORD PTR [RDI+128]
            mov R13,QWORD PTR [RDI+120]
            mov RDI,R12
            call malloc@PLT

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_401945

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call memcpy@PLT

            mov RAX,QWORD PTR [RBX+144]
            test RAX,RAX
            je .L_40191d

            mov RDI,QWORD PTR [RBX+136]
            call RAX
.L_40191d:

            mov RAX,QWORD PTR [RIP+free@GOTPCREL]
            mov DWORD PTR [RBX+132],2
            mov QWORD PTR [RBX+120],RBP
            mov QWORD PTR [RBX+136],RBP
            mov QWORD PTR [RBX+144],RAX
            mov EAX,1
.L_401945:

            add RSP,8
.L_401949:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_401950:

            test RDI,RDI
            je .L_4019a0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4019a0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_401980

            lock sub DWORD PTR [RDI],1
            je .L_4019a8

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401980:

            lea RCX,QWORD PTR [RIP+.L_43e4e0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_4019a0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4019a8:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_401a10

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_4019cb

            call free@PLT
.L_4019cb:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_4019db:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RAX,QWORD PTR [RBX+144]
            test RAX,RAX
            je .L_4019f8

            mov RDI,QWORD PTR [RBX+136]
            call RAX
.L_4019f8:

            mov RDI,RBX
            pop RBX
.L_4019fc:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401a10:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_401a5e
.L_401a1f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_401a10

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_401a1f
.L_401a5e:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_401a6c

            call free@PLT
.L_401a6c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_4019db
.L_401a89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401a90:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,R8
            sub RSP,8
            test ESI,ESI
            jg .L_401ad0
.L_401aa8:

            test RBP,RBP
            je .L_401b78

            lea RBX,QWORD PTR [RIP+.L_43e560]
            mov RDI,R13
            call RBP
.L_401abd:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_401ad0:

            mov R15,RDI
            mov R12D,ESI
            mov EDI,1
            mov ESI,152
            mov R14D,EDX
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_401aa8

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            test R14D,R14D
            mov QWORD PTR [RBX+120],R15
            mov DWORD PTR [RBX+128],R12D
            mov DWORD PTR [RBX+132],R14D
            mov QWORD PTR [RBX+136],R13
            movups XMMWORD PTR [RBX+48],XMM0
            mov QWORD PTR [RBX+144],RBP
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            jne .L_401abd

            cmp BYTE PTR [RBX+112],0
            mov DWORD PTR [RBX+132],1
            jne .L_401b60

            mov RDI,RBX
            call .L_4018d0

            test AL,AL
            jne .L_401abd

            nop
            nop
            nop
            nop
            nop
            nop
.L_401b60:

            mov RDI,RBX
            lea RBX,QWORD PTR [RIP+.L_43e560]
            call .L_401950

            jmp .L_401abd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401b78:

            lea RBX,QWORD PTR [RIP+.L_43e560]
            jmp .L_401abd
.L_401b84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401b90:

            test EDX,EDX
            je .L_401be8

            mov EAX,DWORD PTR [RDI+128]
            cmp EAX,ESI
            jbe .L_401be8

            mov ECX,DWORD PTR [RDI]
            cmp ECX,-1
            je .L_401bb7

            test ECX,ECX
            mov BYTE PTR [RDI+112],1
            jle .L_401bf0

            lock add DWORD PTR [RDI],1
            mov EAX,DWORD PTR [RDI+128]
.L_401bb7:

            sub EAX,ESI
            lea R8,QWORD PTR [RIP+.L_401950]
            mov RCX,RDI
            cmp EAX,EDX
            cmovbe EDX,EAX
            mov EAX,ESI
            add RAX,QWORD PTR [RDI+120]
            mov R9D,EDX
            mov EDX,1
            mov ESI,R9D
            mov RDI,RAX
            jmp .L_401a90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401be8:

            lea RAX,QWORD PTR [RIP+.L_43e560]
            ret 
.L_401bf0:

            lea RCX,QWORD PTR [RIP+.L_43e520]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8

            mov EDX,160
            call __assert_fail@PLT
.L_401c13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c20:

            lea RAX,QWORD PTR [RIP+.L_43e560]
            ret 
.L_401c28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c30:

            test RDI,RDI
            je .L_401c44

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_401c44

            test EAX,EAX
            jle .L_401c50

            lock add DWORD PTR [RDI],1
.L_401c44:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401c50:

            lea RCX,QWORD PTR [RIP+.L_43e520]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_401c73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c80:

            test RDI,RDI
            je .L_401ca8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_401ca8

            sub RSP,8
            test EAX,EAX
            jle .L_401cb0

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401ca8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401cb0:

            lea RCX,QWORD PTR [RIP+.L_43e400]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_401ccf:

            nop
.L_401cd0:

            test RDI,RDI
            je .L_401d18

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_401d18

            test EAX,EAX
            jle .L_401cf0

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401cf0:

            lea RCX,QWORD PTR [RIP+.L_43e380]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401d18:

            xor EAX,EAX
            ret 
.L_401d1b:

            nop
            nop
            nop
            nop
            nop
.L_401d20:

            cmp DWORD PTR [RDI],-1
            je .L_401d29

            mov BYTE PTR [RDI+112],1
.L_401d29:

            ret 
.L_401d2b:

            nop
            nop
            nop
            nop
            nop
.L_401d30:

            movzx EAX,BYTE PTR [RDI+112]
            ret 
.L_401d35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d40:

            mov EAX,DWORD PTR [RDI+128]
            ret 
.L_401d47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d50:

            test RSI,RSI
            je .L_401d5d

            mov EAX,DWORD PTR [RDI+128]
            mov DWORD PTR [RSI],EAX
.L_401d5d:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_401d62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d70:

            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
            cmp BYTE PTR [RDI+112],0
            jne .L_401da2

            mov EAX,DWORD PTR [RDI+132]
            mov RBX,RDI
            cmp EAX,2
            je .L_401e10

            cmp EAX,3
            je .L_401dc0
.L_401d96:

            mov RDI,RBX
            call .L_4018d0

            test AL,AL
            jne .L_401e10
.L_401da2:

            xor EAX,EAX
            test RBP,RBP
            je .L_401e22

            mov DWORD PTR [RBP],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401dc0:

            mov EDI,30
            call sysconf@PLT

            cmp RAX,-1
            je .L_401e30

            mov ESI,DWORD PTR [RBX+128]
            mov RDX,QWORD PTR [RBX+120]
            mov RCX,RAX
            neg RCX
            mov RDI,RCX
            and RDI,RDX
            lea RDX,QWORD PTR [RDX+RSI*1-1]
            lea RSI,QWORD PTR [RDX+RAX*1]
            mov EDX,3
            and RSI,RCX
            sub RSI,RDI
            call mprotect@PLT

            cmp EAX,-1
            je .L_401e30

            mov DWORD PTR [RBX+132],2
            nop
            nop
.L_401e10:

            test RBP,RBP
            je .L_401e1e

            mov EAX,DWORD PTR [RBX+128]
            mov DWORD PTR [RBP],EAX
.L_401e1e:

            mov RAX,QWORD PTR [RBX+120]
.L_401e22:

            add RSP,8
.L_401e26:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401e30:

            call __errno_location@PLT

            mov EDI,DWORD PTR [RAX]
            call strerror@PLT

            mov DWORD PTR [RBX+132],1
            jmp .L_401d96
.L_401e4b:

            nop
            nop
            nop
            nop
            nop
.L_401e50:

            push RBX
            sub EDX,1
            sub RSP,32
.L_401e58:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp EDX,ESI
            jbe .L_401f3c

            mov R8D,EDX
            mov ECX,ESI
            nop
            nop
            nop
.L_401e78:

            mov R10,QWORD PTR [RDI+200]
            mov EAX,ECX
            mov R9D,R8D
            lea R9,QWORD PTR [R9+R9*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add ECX,1
            sub R8D,1
            lea RAX,QWORD PTR [R10+RAX*4]
            movdqu XMM1,XMMWORD PTR [R10+R9*4]
            lea R11,QWORD PTR [R9*4]
            cmp ECX,R8D
            movdqu XMM0,XMMWORD PTR [RAX]
            mov EBX,DWORD PTR [RAX+16]
            movups XMMWORD PTR [RAX],XMM1
            mov R10D,DWORD PTR [R10+R11*1+16]
            movaps XMMWORD PTR [RSP],XMM0
            mov DWORD PTR [RAX+16],R10D
            mov RAX,QWORD PTR [RDI+200]
            mov DWORD PTR [RSP+16],EBX
            movups XMMWORD PTR [RAX+R9*4],XMM0
            mov DWORD PTR [RAX+R11*1+16],EBX
            jb .L_401e78

            cmp BYTE PTR [RDI+178],0
            je .L_401f3c

            nop
.L_401ee0:

            mov R8,QWORD PTR [RDI+216]
            mov EAX,ESI
            mov ECX,EDX
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add ESI,1
            sub EDX,1
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM1,XMMWORD PTR [R8+RCX*4]
            lea R9,QWORD PTR [RCX*4]
            cmp ESI,EDX
            movdqu XMM0,XMMWORD PTR [RAX]
            mov R10D,DWORD PTR [RAX+16]
            movups XMMWORD PTR [RAX],XMM1
            mov R8D,DWORD PTR [R8+R9*1+16]
            movaps XMMWORD PTR [RSP],XMM0
            mov DWORD PTR [RAX+16],R8D
            mov RAX,QWORD PTR [RDI+216]
            mov DWORD PTR [RSP+16],R10D
            movups XMMWORD PTR [RAX+RCX*4],XMM0
            mov DWORD PTR [RAX+R9*1+16],R10D
            jb .L_401ee0
.L_401f3c:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_401f52

            add RSP,32
.L_401f50:

            pop RBX
            ret 
.L_401f52:

            call __stack_chk_fail@PLT
.L_401f57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401f60:

            mov EAX,ESI
            push R13
            mov R10,QWORD PTR [RDI+200]
            push R12
            lea R8D,DWORD PTR [RSI+1]
            push RBP
            push RBX
.L_401f73:

            lea RBX,QWORD PTR [RAX+RAX*4]
            shl RBX,2
            cmp R8D,EDX
            mov EAX,DWORD PTR [R10+RBX*1+8]
            jae .L_401fbb

            lea R9D,DWORD PTR [RDX-2]
            lea RCX,QWORD PTR [R8+R8*4]
            sub R9D,ESI
            lea RCX,QWORD PTR [R10+RCX*4+8]
            add R8,R9
            lea R8,QWORD PTR [R8+R8*4]
            lea R9,QWORD PTR [R10+R8*4+28]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401fa8:

            mov R8D,DWORD PTR [RCX]
            cmp EAX,R8D
            cmova EAX,R8D
            add RCX,20
            cmp RCX,R9
            jne .L_401fa8
.L_401fbb:

            mov R12D,DWORD PTR [RDI+184]
            cmp EDX,R12D
            jae .L_40202c

            mov R11D,EDX
            lea R8D,DWORD PTR [RDX-1]
            lea RCX,QWORD PTR [R11+R11*4]
            lea R8,QWORD PTR [R8+R8*4]
            shl RCX,2
            mov R9D,DWORD PTR [R10+RCX*1+8]
            cmp DWORD PTR [R10+R8*4+8],R9D
            jne .L_40202c

            mov R9,R11
            add EDX,1
            lea R8,QWORD PTR [R10+RCX*1+8]
            neg R9
            lea R13,QWORD PTR [RDX+RDX*4]
            mov RCX,RDX
            shl R9,2
            sub R9,R11
            shl R13,2
            shl R9,2
            jmp .L_402025

            nop
            nop
            nop
            nop
.L_402010:

            mov EBP,DWORD PTR [R8]
            add R8,20
            lea R11,QWORD PTR [R8+R9*1]
            cmp EBP,DWORD PTR [R11+R13*1-20]
            jne .L_40202c

            add ECX,1
.L_402025:

            cmp ECX,R12D
            mov EDX,ECX
            jne .L_402010
.L_40202c:

            mov R11D,DWORD PTR [RDI+180]
            lea RCX,QWORD PTR [R10+RBX*1+8]
            jmp .L_40205c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402040:

            lea R8D,DWORD PTR [RSI-1]
            sub RCX,20
            mov EBX,DWORD PTR [RCX+20]
            mov R9,R8
            lea R8,QWORD PTR [R8+R8*4]
            cmp DWORD PTR [R10+R8*4+8],EBX
            jne .L_4020d0

            mov ESI,R9D
.L_40205c:

            cmp R11D,ESI
            jb .L_402040

            jne .L_4020d0

            mov ECX,DWORD PTR [RDI+188]
            test ECX,ECX
            je .L_4020d0

            lea R8D,DWORD PTR [RCX-1]
            lea R9,QWORD PTR [R8+R8*4]
            mov RCX,R8
            mov R8,QWORD PTR [RDI+208]
            lea R8,QWORD PTR [R8+R9*4]
            mov R9D,ESI
            lea R11,QWORD PTR [R9+R9*4]
            mov EBX,DWORD PTR [R8+8]
            shl R11,2
            cmp DWORD PTR [R10+R11*1+8],EBX
            je .L_4020c8

            jmp .L_4020d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4020a0:

            lea R8D,DWORD PTR [RCX-1]
            lea R9,QWORD PTR [R8+R8*4]
            mov RCX,R8
            mov R8,QWORD PTR [RDI+208]
            lea R8,QWORD PTR [R8+R9*4]
            mov R9,QWORD PTR [RDI+200]
            mov EBX,DWORD PTR [R9+R11*1+8]
            cmp DWORD PTR [R8+8],EBX
            jne .L_4020d0
.L_4020c8:

            test ECX,ECX
            mov DWORD PTR [R8+8],EAX
            jne .L_4020a0
.L_4020d0:

            cmp ESI,EDX
            jae .L_40210c

            sub EDX,1
            mov R8D,ESI
            sub EDX,ESI
            lea RCX,QWORD PTR [R8+R8*4]
            lea RDX,QWORD PTR [R8+RDX*1+1]
            shl RCX,2
            lea RSI,QWORD PTR [RDX+RDX*4]
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4020f8:

            mov RDX,QWORD PTR [RDI+200]
            mov DWORD PTR [RDX+RCX*1+8],EAX
            add RCX,20
            cmp RSI,RCX
            jne .L_4020f8
.L_40210c:

            pop RBX
.L_40210d:

            pop RBP
            pop R12
            pop R13
            ret 
.L_402113:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402120:

            xor EAX,EAX
            mov RDX,QWORD PTR [RSI]
            cmp QWORD PTR [RDI],RDX
            je .L_402130
.L_40212a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402130:

            mov RCX,QWORD PTR [RSI+8]
            cmp QWORD PTR [RDI+8],RCX
            jne .L_40212a

            mov RCX,QWORD PTR [RSI+16]
            cmp QWORD PTR [RDI+16],RCX
            jne .L_40212a

            mov RAX,QWORD PTR [RSI+24]
            cmp QWORD PTR [RDI+24],RAX
            sete AL
            movzx EAX,AL
            ret 
.L_402153:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402160:

            mov EAX,DWORD PTR [RDI]
            xor EAX,DWORD PTR [RDI+4]
            xor EAX,DWORD PTR [RDI+8]
            ret 
.L_402169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402170:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
            movzx R12D,BYTE PTR [RDI+176]
            test R12B,R12B
            je .L_4021a0

            xor R12D,R12D
.L_40218e:

            add RSP,24
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4021a0:

            cmp DWORD PTR [RDI+136],ESI
            jae .L_4021b8

            mov BYTE PTR [RDI+176],1
            jmp .L_40218e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4021b8:

            cmp ESI,214748363
            mov RBP,RDI
            mov EBX,DWORD PTR [RDI+192]
            mov RDX,QWORD PTR [RDI+208]
            mov R15,QWORD PTR [RDI+200]
            jbe .L_402218
.L_4021d7:

            cmp RDX,R15
            mov BYTE PTR [RBP+176],1
            mov EAX,1
            jne .L_402286
.L_4021ec:

            mov RDX,QWORD PTR [RBP+200]
            test AL,AL
            mov QWORD PTR [RBP+208],RDX
            jne .L_40218e
.L_4021fe:

            mov DWORD PTR [RBP+192],EBX
            mov R12D,1
            jmp .L_40218e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402210:

            mov EAX,EBX
            shr EAX,1
            lea EBX,DWORD PTR [RBX+RAX*1+32]
.L_402218:

            cmp ESI,EBX
            jae .L_402210

            cmp EBX,214748363
            ja .L_4021d7

            mov EAX,EBX
            mov RDI,QWORD PTR [RBP+216]
            mov QWORD PTR [RSP+8],RDX
            lea R13,QWORD PTR [RAX+RAX*4]
            shl R13,2
            mov RSI,R13
            call realloc@PLT

            mov RDI,QWORD PTR [RBP+200]
            mov R14,RAX
            mov RSI,R13
            call realloc@PLT

            test R14,R14
            mov RDX,QWORD PTR [RSP+8]
            je .L_4022a1

            test RAX,RAX
            je .L_4022a1
.L_402263:

            mov QWORD PTR [RBP+216],R14
.L_40226a:

            test RAX,RAX
            je .L_402276

            mov QWORD PTR [RBP+200],RAX
.L_402276:

            cmp RDX,R15
            movzx EAX,BYTE PTR [RBP+176]
            je .L_4021ec
.L_402286:

            mov RDX,QWORD PTR [RBP+216]
            test AL,AL
            mov QWORD PTR [RBP+208],RDX
            jne .L_40218e

            jmp .L_4021fe
.L_4022a1:

            test R14,R14
            mov BYTE PTR [RBP+176],1
            jne .L_402263

            jmp .L_40226a
.L_4022af:

            nop
.L_4022b0:

            push R13
            push R12
            mov EAX,EDX
            push RBP
            push RBX
            sub RSP,8
            add EAX,DWORD PTR [RDI+188]
            je .L_4022e4

            cmp EAX,DWORD PTR [RDI+192]
            mov EBP,EDX
            mov R13D,ESI
            mov RBX,RDI
            jae .L_402300

            mov RSI,QWORD PTR [RBX+208]
            cmp RSI,QWORD PTR [RBX+200]
            je .L_40231e
.L_4022e4:

            mov R12D,1
.L_4022ea:

            add RSP,8
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402300:

            mov ESI,EAX
            call .L_402170

            test AL,AL
            mov R12D,EAX
            je .L_4022ea

            mov RSI,QWORD PTR [RBX+208]
            cmp RSI,QWORD PTR [RBX+200]
            jne .L_4022e4
.L_40231e:

            mov EAX,DWORD PTR [RBX+188]
            add R13D,DWORD PTR [RBX+180]
            lea EDX,DWORD PTR [RAX+RBP*1]
            cmp EDX,R13D
            jbe .L_4022e4

            movzx R12D,BYTE PTR [RBX+177]
            test R12B,R12B
            je .L_402369

            mov RDI,QWORD PTR [RBX+216]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            mov QWORD PTR [RBX+208],RDI
            call memcpy@PLT

            add RSP,8
.L_40235f:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_402369:

            lea RCX,QWORD PTR [RIP+.L_43f040]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e605]
            mov EDX,170
            call __assert_fail@PLT
.L_402388:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402390:

            push R12
            push RBP
            push RBX
.L_402394:

            movzx R12D,BYTE PTR [RDI+177]
            test R12B,R12B
            je .L_40246b

            mov EAX,DWORD PTR [RDI+184]
            mov EBP,ESI
            mov RBX,RDI
            mov ESI,EAX
            add ESI,EBP
            jne .L_402410
.L_4023b6:

            mov ECX,DWORD PTR [RBX+180]
            mov RDI,QWORD PTR [RBX+200]
            sub EAX,ECX
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [RDI+RAX*4]
            mov EAX,EBP
            shl RDX,2
            add RAX,RCX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDI,QWORD PTR [RDI+RAX*4]
            call memmove@PLT

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+184]
            add EDX,EBP
            cmp EDX,EAX
            ja .L_402430
.L_4023f9:

            add EBP,EAX
            mov DWORD PTR [RBX+180],EDX
            mov EAX,R12D
            mov DWORD PTR [RBX+184],EBP
            pop RBX
.L_40240b:

            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_402410:

            cmp ESI,DWORD PTR [RDI+192]
            jb .L_4023b6

            call .L_402170

            test AL,AL
            je .L_402460

            mov EAX,DWORD PTR [RBX+184]
            jmp .L_4023b6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402430:

            lea RCX,QWORD PTR [RAX+RAX*4]
            sub EDX,EAX
            mov RAX,QWORD PTR [RBX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            xor ESI,ESI
            lea RDI,QWORD PTR [RAX+RCX*4]
            shl RDX,2
            call memset@PLT

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+184]
            add EDX,EBP
            jmp .L_4023f9
.L_402460:

            xor R12D,R12D
            mov EAX,R12D
            pop RBX
.L_402467:

            pop RBP
            pop R12
            ret 
.L_40246b:

            lea RCX,QWORD PTR [RIP+.L_43f000]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e605]
            mov EDX,182
            call __assert_fail@PLT
.L_40248a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402490:

            test BYTE PTR [RDI+216],7
            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            mov BYTE PTR [RDI+178],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
            jne .L_4024d6

            mov EAX,DWORD PTR [RDI+192]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shr RAX,1
            mov DWORD PTR [RSI],EAX
            mov RAX,QWORD PTR [RDI+216]
            ret 
.L_4024d6:

            lea RCX,QWORD PTR [RIP+.L_43efa0]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e670]
            sub RSP,8

            mov EDX,207
            call __assert_fail@PLT
.L_4024f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402500:

            cmp DWORD PTR [RDI],-1
            je .L_4025bc

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDI+200]
            mov DWORD PTR [RDI+144],0
            mov DWORD PTR [RDI+148],0
            mov QWORD PTR [RDI+152],0
            mov QWORD PTR [RDI+160],0
            mov QWORD PTR [RDI+168],0
            movups XMMWORD PTR [RDI+228],XMM0
            mov DWORD PTR [RDI+132],0
            mov DWORD PTR [RDI+140],0
            movups XMMWORD PTR [RDI+244],XMM0
            mov BYTE PTR [RDI+176],0
            mov BYTE PTR [RDI+177],0
            mov BYTE PTR [RDI+178],0
            mov QWORD PTR [RDI+180],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
            mov DWORD PTR [RDI+224],0
            mov QWORD PTR [RDI+260],0
            mov QWORD PTR [RDI+268],0
.L_4025bc:

            ret 
.L_4025be:

            nop
            nop
.L_4025c0:

            cmp DWORD PTR [RDI],-1
            je .L_4025f8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+112]
            call .L_40bbf0

            call .L_40ba30

            mov DWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+112],RAX
            mov RDI,RBX
            mov DWORD PTR [RBX+128],65533
            pop RBX
            jmp .L_402500
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4025f8:

            ret 
.L_4025fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402600:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,24
.L_40260b:

            mov EAX,DWORD PTR [RDI+184]
            mov ESI,EAX
            add ESI,1
            je .L_402658

            cmp ESI,DWORD PTR [RDI+192]
            jae .L_402660
.L_402620:

            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RCX*4]
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX],EBP
            mov DWORD PTR [RAX+4],1
            mov DWORD PTR [RAX+8],EDX
            add DWORD PTR [RBX+184],1
.L_40264a:

            add RSP,24
.L_40264e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402658:

            mov EAX,4294967295
            jmp .L_402620
          .byte 0x90
.L_402660:

            mov DWORD PTR [RSP+12],EDX
            call .L_402170

            test AL,AL
            je .L_40264a

            mov EAX,DWORD PTR [RBX+184]
            mov EDX,DWORD PTR [RSP+12]
            jmp .L_402620
.L_402679:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402680:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RDI+184]
            mov ESI,EAX
            add ESI,1
            je .L_4026d0

            cmp ESI,DWORD PTR [RDI+192]
            jae .L_4026e0
.L_4026a1:

            mov RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RBP]
            lea RAX,QWORD PTR [RDX+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RBP+16]
            mov DWORD PTR [RAX+16],EDX
            add DWORD PTR [RBX+184],1
.L_4026c5:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4026d0:

            mov EAX,4294967295
            jmp .L_4026a1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4026e0:

            call .L_402170

            test AL,AL
            je .L_4026c5

            mov EAX,DWORD PTR [RBX+184]
            jmp .L_4026a1
.L_4026f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402700:

            cmp DWORD PTR [RDI],-1
            je .L_40272b

            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            mov BYTE PTR [RDI+178],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
.L_40272b:

            ret 
.L_40272d:

            nop
            nop
            nop
.L_402730:

            cmp DWORD PTR [RDI],-1
            je .L_40275b

            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],1
            mov BYTE PTR [RDI+178],0
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
.L_40275b:

            ret 
.L_40275d:

            nop
            nop
            nop
.L_402760:

            cmp DWORD PTR [RDI],-1
            je .L_4027b0

            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            xor ESI,ESI
            mov BYTE PTR [RDI+178],1
            mov DWORD PTR [RDI+188],0
            mov QWORD PTR [RDI+208],RAX
            mov EAX,DWORD PTR [RDI+184]
            mov RDI,QWORD PTR [RDI+216]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            jmp memset@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4027b0:

            ret 
.L_4027b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4027c0:

            cmp BYTE PTR [RDI+176],0
            jne .L_402823

            cmp BYTE PTR [RDI+177],0
            je .L_402825

            mov RDX,QWORD PTR [RDI+208]
            mov RAX,QWORD PTR [RDI+200]
            mov BYTE PTR [RDI+177],0
            cmp RDX,RAX
            je .L_402801

            mov QWORD PTR [RDI+200],RDX
            mov QWORD PTR [RDI+208],RAX
            mov QWORD PTR [RDI+216],RAX
.L_402801:

            mov EAX,DWORD PTR [RDI+184]
            mov EDX,DWORD PTR [RDI+188]
            mov DWORD PTR [RDI+180],0
            mov DWORD PTR [RDI+184],EDX
            mov DWORD PTR [RDI+188],EAX
.L_402823:

            ret 
.L_402825:

            lea RCX,QWORD PTR [RIP+.L_43ef60]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e605]
            sub RSP,8

            mov EDX,333
            call __assert_fail@PLT
.L_402848:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402850:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,EDX
            mov RBX,RCX
            sub RSP,40
.L_402866:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4022b0

            test AL,AL
            je .L_402928

            cmp R13D,1
            mov ECX,DWORD PTR [RBP+180]
            jbe .L_402899

            cmp DWORD PTR [RBP+124],2
            jne .L_402948
.L_402899:

            mov RDX,QWORD PTR [RBP+200]
            mov EAX,ECX
            test R12D,R12D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RAX]
            mov ESI,DWORD PTR [RAX+16]
            mov EAX,DWORD PTR [RBP+188]
            movaps XMMWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RAX+RAX*4]
            mov RDX,RAX
            mov RAX,QWORD PTR [RBP+208]
            mov DWORD PTR [RSP+16],ESI
            lea RAX,QWORD PTR [RAX+RDI*4]
            je .L_402914

            lea EDX,DWORD PTR [R12-1]
            mov RCX,RBX
            lea RDX,QWORD PTR [RDX+RDX*4+5]
            lea RDI,QWORD PTR [RAX+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4028f0:

            movups XMMWORD PTR [RAX],XMM0
            mov DWORD PTR [RAX+16],ESI
            mov EDX,DWORD PTR [RCX]
            add RAX,20
            add RCX,4
            mov DWORD PTR [RAX-20],EDX
            cmp RAX,RDI
            jne .L_4028f0

            mov ECX,DWORD PTR [RBP+180]
            mov EDX,DWORD PTR [RBP+188]
.L_402914:

            add R13D,ECX
            add R12D,EDX
            mov DWORD PTR [RBP+180],R13D
            mov DWORD PTR [RBP+188],R12D
.L_402928:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402961

            add RSP,40
.L_40293c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402948:

            lea EDX,DWORD PTR [RCX+R13*1]
            mov ESI,ECX
            mov RDI,RBP
            call .L_401f60

            mov ECX,DWORD PTR [RBP+180]
            jmp .L_402899
.L_402961:

            call __stack_chk_fail@PLT
.L_402966:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402970:

            push RBP
            push RBX
            mov EBP,ESI
            mov EDX,1
            xor ESI,ESI
            mov RBX,RDI
            sub RSP,8
.L_402982:

            call .L_4022b0

            test AL,AL
            je .L_4029e0

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBX+188]
            mov RSI,QWORD PTR [RBX+208]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov DWORD PTR [RAX],EBP
            add DWORD PTR [RBX+188],1
.L_4029e0:

            add RSP,8
.L_4029e4:

            pop RBX
            pop RBP
            ret 
.L_4029e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4029f0:

            push RBP
            push RBX
            mov RBP,RSI
            mov EDX,1
            xor ESI,ESI
            mov RBX,RDI
            sub RSP,8
            call .L_4022b0

            test AL,AL
            je .L_402a36

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            movdqu XMM0,XMMWORD PTR [RBP]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RBP+16]
            mov DWORD PTR [RAX+16],EDX
            add DWORD PTR [RBX+188],1
.L_402a36:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_402a3d:

            nop
            nop
            nop
.L_402a40:

            push RBX

            xor ESI,ESI
            mov EDX,1
            mov RBX,RDI
            call .L_4022b0

            test AL,AL
            je .L_402a92

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            add DWORD PTR [RBX+188],1
.L_402a92:

            pop RBX

            ret 
.L_402a94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402aa0:

            push R12
            push RBP
            push RBX
            movzx EBP,BYTE PTR [RDI+177]
            mov RBX,RDI
            test BPL,BPL
            jne .L_402ad8

            cmp DWORD PTR [RDI+184],ESI
            jb .L_402bfe

            mov DWORD PTR [RDI+180],ESI
            mov EBP,1
.L_402aca:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402ad8:

            cmp BYTE PTR [RDI+176],0
            jne .L_402b6e

            mov EAX,DWORD PTR [RDI+188]
            mov ECX,DWORD PTR [RDI+184]
            mov EDX,DWORD PTR [RDI+180]
            add ECX,EAX
            sub ECX,EDX
            cmp ECX,ESI
            jb .L_402c1d

            cmp EAX,ESI
            jb .L_402b80

            jbe .L_402aca

            mov R12D,EAX
            sub R12D,ESI
            cmp EDX,R12D
            jb .L_402b60
.L_402b14:

            sub EAX,R12D
            sub EDX,R12D
            mov DWORD PTR [RBX+188],EAX
            lea RSI,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+208]
            mov ECX,EDX
            mov DWORD PTR [RBX+180],EDX
            lea RDX,QWORD PTR [R12+R12*4]
            lea RSI,QWORD PTR [RAX+RSI*4]
            mov EAX,ECX
            shl RDX,2
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RDI,QWORD PTR [RAX+RCX*4]
            call memmove@PLT

            mov EAX,EBP
            pop RBX
.L_402b58:

            pop RBP
            pop R12
            ret 

            nop
            nop
            nop
            nop
.L_402b60:

            lea ESI,DWORD PTR [R12+32]
            call .L_402390

            test AL,AL
            jne .L_402be8
.L_402b6e:

            xor EBP,EBP
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402b80:

            sub ESI,EAX
            mov EDX,ESI
            mov R12D,ESI
            call .L_4022b0

            test AL,AL
            mov EBP,EAX
            je .L_402b6e

            mov EAX,R12D
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov EAX,DWORD PTR [RBX+180]
            shl RDX,2
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RAX+RCX*4]
            mov EAX,DWORD PTR [RBX+188]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+208]
            lea RDI,QWORD PTR [RAX+RCX*4]
            call memmove@PLT

            add DWORD PTR [RBX+180],R12D
            add DWORD PTR [RBX+188],R12D
            mov EAX,EBP
            pop RBX
.L_402bdd:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402be8:

            mov EDX,DWORD PTR [RBX+180]
            cmp EDX,R12D
            jb .L_402c3c

            mov EAX,DWORD PTR [RBX+188]
            jmp .L_402b14
.L_402bfe:

            lea RCX,QWORD PTR [RIP+.L_43ef20]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e611]
            mov EDX,412
            call __assert_fail@PLT
.L_402c1d:

            lea RCX,QWORD PTR [RIP+.L_43ef20]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e61a]
            mov EDX,419
            call __assert_fail@PLT
.L_402c3c:

            lea RCX,QWORD PTR [RIP+.L_43ef20]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e635]
            mov EDX,439
            call __assert_fail@PLT
.L_402c5b:

            nop
            nop
            nop
            nop
            nop
.L_402c60:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
            mov RDX,QWORD PTR [RDI+208]
            cmp RDX,QWORD PTR [RDI+200]
            je .L_402ca0
.L_402c7b:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_402cd0

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402ca0:

            mov EAX,DWORD PTR [RDI+180]
            cmp DWORD PTR [RDI+188],EAX
            jne .L_402c7b
.L_402cae:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov DWORD PTR [RDX+RAX*4],EBP
            add DWORD PTR [RBX+180],1
            add DWORD PTR [RBX+188],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402cd0:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov RDX,QWORD PTR [RBX+208]
            mov EAX,DWORD PTR [RBX+188]
            jmp .L_402cae
.L_402d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d20:

            test EDX,EDX
            je .L_402dcf

            mov R11D,EDX
            and EDX,ESI
            test ECX,ECX
            not R11D
            mov EAX,DWORD PTR [RDI+184]
            jne .L_402d88

            cmp R8D,-1
            jne .L_402d88

            test EAX,EAX
            je .L_402dcf

            sub EAX,1
            lea RSI,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d60:

            mov R8,QWORD PTR [RDI+200]
            add R8,RAX
            add RAX,20
            mov ECX,DWORD PTR [R8+4]
            and ECX,R11D
            or ECX,EDX
            cmp RSI,RAX
            mov DWORD PTR [R8+4],ECX
            jne .L_402d60

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402d88:

            test EAX,EAX
            je .L_402dcf

            sub EAX,1
            lea RSI,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
            nop
.L_402da0:

            mov R10,QWORD PTR [RDI+200]
            add R10,RAX
            mov R9D,DWORD PTR [R10+8]
            cmp R9D,ECX
            jb .L_402dc6

            cmp R9D,R8D
            jae .L_402dc6

            mov R9D,DWORD PTR [R10+4]
            and R9D,R11D
            or R9D,EDX
            mov DWORD PTR [R10+4],R9D
.L_402dc6:

            add RAX,20
            cmp RSI,RAX
            jne .L_402da0
.L_402dcf:

            ret 
.L_402dd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402de0:

            mov EAX,EDX
            sub EAX,ESI
            cmp EAX,1
            jbe .L_402df0

            jmp .L_401e50
          .byte 0x66
          .byte 0x90
.L_402df0:

            ret 
.L_402df2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e00:

            mov EDX,DWORD PTR [RDI+184]
            cmp EDX,1
            ja .L_402e10

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402e10:

            xor ESI,ESI
            jmp .L_401e50
.L_402e17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e20:

            mov EAX,DWORD PTR [RDI+184]
            test EAX,EAX
            jne .L_402e30

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402e30:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_402e3d:

            call .L_402e00

            mov R13D,DWORD PTR [R12+184]
            mov RDX,QWORD PTR [R12+200]
            cmp R13D,1
            mov ECX,DWORD PTR [RDX+8]
            jbe .L_402ed0

            mov EBP,20
            xor ESI,ESI
            mov EBX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e70:

            mov EAX,DWORD PTR [RDX+RBP*1+8]
            cmp ECX,EAX
            je .L_402e9b

            mov ECX,EBX
            sub ECX,ESI
            cmp ECX,1
            jbe .L_402e97

            mov EDX,EBX
            mov RDI,R12
            call .L_401e50

            mov RDX,QWORD PTR [R12+200]
            mov EAX,DWORD PTR [RDX+RBP*1+8]
.L_402e97:

            mov ECX,EAX
            mov ESI,EBX
.L_402e9b:

            add EBX,1
            add RBP,20
            cmp R13D,EBX
            jne .L_402e70

            mov EAX,R13D
            sub EAX,ESI
            cmp EAX,1
            jbe .L_402ed0

            add RSP,8
.L_402eb5:

            mov EDX,R13D
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_401e50
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402ed0:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_402edb:

            nop
            nop
            nop
            nop
            nop
.L_402ee0:

            cmp DWORD PTR [RDI+124],2
            je .L_402ef0

            jmp .L_401f60
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ef0:

            ret 
.L_402ef2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402f00:

            cmp DWORD PTR [RDI+124],2
            je .L_4030f8

            mov R8D,EDX
            sub R8D,ESI
            cmp R8D,1
            jbe .L_4030f8

            mov R10,QWORD PTR [RDI+208]
            mov EAX,ESI
            push R12
            lea RAX,QWORD PTR [RAX+RAX*4]
            push RBP
            push RBX
.L_402f2b:

            mov R11D,DWORD PTR [R10+RAX*4+8]
            lea EAX,DWORD PTR [RSI+1]
            cmp EDX,EAX
            jbe .L_403118

            sub R8D,2
            lea RCX,QWORD PTR [RAX+RAX*4]
            add RAX,R8
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R10+RCX*4+8]
            lea R9,QWORD PTR [R10+RAX*4+28]
            mov EAX,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402f60:

            mov R8D,DWORD PTR [RCX]
            cmp EAX,R8D
            cmova EAX,R8D
            add RCX,20
            cmp RCX,R9
            jne .L_402f60
.L_402f73:

            test ESI,ESI
            je .L_403120

            lea ECX,DWORD PTR [RSI-1]
            mov R8,RCX
            lea RCX,QWORD PTR [RCX+RCX*4]
            shl RCX,2
            cmp R11D,DWORD PTR [R10+RCX*1+8]
            jne .L_403130

            lea RCX,QWORD PTR [R10+RCX*1+8]
            jmp .L_402fbc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402fa0:

            lea ESI,DWORD PTR [R8-1]
            sub RCX,20
            mov EBX,DWORD PTR [RCX+20]
            mov R9,RSI
            lea RSI,QWORD PTR [RSI+RSI*4]
            cmp DWORD PTR [R10+RSI*4+8],EBX
            jne .L_402fc1

            mov R8D,R9D
.L_402fbc:

            test R8D,R8D
            jne .L_402fa0
.L_402fc1:

            mov EBX,DWORD PTR [RDI+188]
            cmp EDX,EBX
            jae .L_403100

            mov R11D,EDX
            lea ESI,DWORD PTR [RDX-1]
            lea RCX,QWORD PTR [R11+R11*4]
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl RCX,2
            mov R9D,DWORD PTR [R10+RCX*1+8]
            cmp DWORD PTR [R10+RSI*4+8],R9D
            jne .L_403110

            mov R9,R11
            add EDX,1
            lea RSI,QWORD PTR [R10+RCX*1+8]
            neg R9
            lea R12,QWORD PTR [RDX+RDX*4]
            mov RCX,RDX
            shl R9,2
            sub R9,R11
            shl R12,2
            shl R9,2
            jmp .L_403038

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403020:

            mov EBP,DWORD PTR [RSI]
            add RSI,20
            lea R11,QWORD PTR [RSI+R9*1]
            cmp EBP,DWORD PTR [R11+R12*1-20]
            jne .L_403110

            add ECX,1
.L_403038:

            cmp ECX,EBX
            mov EDX,ECX
            jne .L_403020
.L_40303e:

            mov ECX,DWORD PTR [RDI+180]
            cmp ECX,DWORD PTR [RDI+184]
            jae .L_4030b0

            mov ESI,ECX
            sub EDX,1
            lea R9,QWORD PTR [RSI+RSI*4]
            mov RSI,QWORD PTR [RDI+200]
            lea RSI,QWORD PTR [RSI+R9*4]
            lea R9,QWORD PTR [RDX+RDX*4]
            shl R9,2
            mov EDX,DWORD PTR [R10+R9*1+8]
            cmp DWORD PTR [RSI+8],EDX
            je .L_40309a

            jmp .L_4030b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403078:

            mov EDX,ECX
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RDI+200]
            lea RSI,QWORD PTR [RDX+RSI*4]
            mov RDX,QWORD PTR [RDI+208]
            mov EDX,DWORD PTR [RDX+R9*1+8]
            cmp DWORD PTR [RSI+8],EDX
            jne .L_4030b0
.L_40309a:

            mov DWORD PTR [RSI+8],EAX
            add ECX,1
            cmp DWORD PTR [RDI+184],ECX
            ja .L_403078

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4030b0:

            cmp EBX,R8D
            jbe .L_4030ec

            mov ECX,R8D
            not R8D
            lea ESI,DWORD PTR [R8+RBX*1]
            lea RDX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RCX+RSI*1+1]
            shl RDX,2
            lea RSI,QWORD PTR [RCX+RCX*4]
            shl RSI,2
            nop
            nop
            nop
            nop
.L_4030d8:

            mov RCX,QWORD PTR [RDI+208]
            mov DWORD PTR [RCX+RDX*1+8],EAX
            add RDX,20
            cmp RSI,RDX
            jne .L_4030d8
.L_4030ec:

            pop RBX
.L_4030ed:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4030f8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403100:

            je .L_40303e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403110:

            mov EBX,EDX
            jmp .L_4030b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403118:

            mov EAX,R11D
            jmp .L_402f73
.L_403120:

            xor R8D,R8D
            jmp .L_402fc1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403130:

            mov R8D,ESI
            jmp .L_402fc1
.L_403138:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403140:

            push RBX
.L_403141:

            mov EAX,DWORD PTR [RDI+180]
            mov RBX,RDI
            mov RDX,QWORD PTR [RDI+200]
            mov RSI,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea ECX,DWORD PTR [RSI+1]
            cmp ECX,DWORD PTR [RBX+184]
            mov EDI,DWORD PTR [RDX+RAX*4+8]
            jae .L_4031a0

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp DWORD PTR [RDX+RAX*4+8],EDI
            je .L_403197

            mov EAX,DWORD PTR [RBX+188]
            test EAX,EAX
            jne .L_4031aa

            cmp DWORD PTR [RBX+124],2
            je .L_403197

            lea EDX,DWORD PTR [RSI+2]
            mov RDI,RBX
            call .L_401f60
.L_40318e:

            mov EAX,DWORD PTR [RBX+180]
            lea ECX,DWORD PTR [RAX+1]
.L_403197:

            mov DWORD PTR [RBX+180],ECX
            pop RBX
.L_40319e:

            ret 
          .byte 0x90
.L_4031a0:

            mov EAX,DWORD PTR [RBX+188]
            test EAX,EAX
            je .L_403197
.L_4031aa:

            lea EDX,DWORD PTR [RAX-1]
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov RAX,RDX
            mov RDX,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RSI*4]
            mov ESI,DWORD PTR [RDX+8]
            cmp ESI,EDI
            ja .L_4031ea

            jmp .L_403197
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4031d0:

            lea EDX,DWORD PTR [RAX-1]
            lea RCX,QWORD PTR [RDX+RDX*4]
            mov RAX,RDX
            mov RDX,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RCX*4]
            cmp ESI,DWORD PTR [RDX+8]
            jne .L_40318e
.L_4031ea:

            test EAX,EAX
            mov DWORD PTR [RDX+8],EDI
            jne .L_4031d0

            mov EAX,DWORD PTR [RBX+180]
            lea ECX,DWORD PTR [RAX+1]
            jmp .L_403197
.L_4031fc:

            nop
            nop
            nop
            nop
.L_403200:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RDI+140]
            cmp EAX,1
            je .L_403248

            or EAX,DWORD PTR [RDI+184]
            jne .L_4032fb
.L_403220:

            mov EAX,DWORD PTR [RBX+144]
            test EAX,EAX
            je .L_4032b8

            cmp QWORD PTR [RBX+152],0
            je .L_4032d7
.L_40323c:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403248:

            mov R8D,DWORD PTR [RDI+148]
            test R8D,R8D
            jne .L_403220

            mov EDI,DWORD PTR [RDI+184]
            test EDI,EDI
            je .L_403220

            xor EBP,EBP
.L_403260:

            mov RSI,QWORD PTR [RBX+200]
            mov EAX,EBP
            mov RCX,QWORD PTR [RBX+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov RDX,QWORD PTR [RCX+224]
            mov RDI,RCX
            mov ESI,DWORD PTR [RAX]
            call QWORD PTR [RCX+160]

            cmp EAX,1517910393
            setne CL
            cmp EAX,1516858984
            setne DL
            test CL,DL
            je .L_4032a2

            cmp EAX,1517976186
            jne .L_4032f0
.L_4032a2:

            add EBP,1
            cmp DWORD PTR [RBX+184],EBP
            ja .L_403260

            jmp .L_403220
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4032b8:

            mov EDI,DWORD PTR [RBX+148]
            call .L_405a10

            cmp QWORD PTR [RBX+152],0
            mov DWORD PTR [RBX+144],EAX
            jne .L_40323c
.L_4032d7:

            call .L_4058e0

            mov QWORD PTR [RBX+152],RAX
            add RSP,8
.L_4032e7:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4032f0:

            mov DWORD PTR [RBX+148],EAX
            jmp .L_403220
.L_4032fb:

            lea RCX,QWORD PTR [RIP+.L_43eee0]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e6a8]
            mov EDX,644
            call __assert_fail@PLT
.L_40331a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403320:

            push RBX

            mov ESI,304
            mov EDI,1
            lea RBX,QWORD PTR [RIP+.L_656260]
            call calloc@PLT

            test RAX,RAX
            je .L_403376

            lea RDI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX],1
            xor ESI,ESI
            mov RBX,RAX
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            mov DWORD PTR [RBX+136],128
            mov RDI,RBX
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            call .L_4025c0
.L_403376:

            mov RAX,RBX
            pop RBX

            ret 
.L_40337b:

            nop
            nop
            nop
            nop
            nop
.L_403380:

            lea RAX,QWORD PTR [RIP+.L_656260]
            ret 
.L_403388:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403390:

            test RDI,RDI
            je .L_4033a4

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4033a4

            test EAX,EAX
            jle .L_4033b0

            lock add DWORD PTR [RDI],1
.L_4033a4:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4033b0:

            lea RCX,QWORD PTR [RIP+.L_43eea0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_4033d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4033e0:

            test RDI,RDI
            je .L_403410

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_403410

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_403418

            lock sub DWORD PTR [RDI],1
            je .L_403440

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403410:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403418:

            lea RCX,QWORD PTR [RIP+.L_43ee60]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403440:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_4034c8

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_403463

            call free@PLT
.L_403463:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_403473:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,QWORD PTR [RBX+112]
            call .L_40bbf0

            mov RDI,QWORD PTR [RBX+200]
            call free@PLT

            mov RDI,QWORD PTR [RBX+216]
            call free@PLT

            mov RAX,QWORD PTR [RBX+296]
            test RAX,RAX
            je .L_4034b1

            mov RDI,QWORD PTR [RBX+288]
            call RAX
.L_4034b1:

            mov RDI,RBX
            pop RBX
.L_4034b5:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4034c8:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_403516
.L_4034d7:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_4034c8

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_4034d7
.L_403516:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_403524

            call free@PLT
.L_403524:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_403473
.L_403541:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403550:

            test RDI,RDI
            je .L_403578

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_403578

            sub RSP,8
            test EAX,EAX
            jle .L_403580

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403578:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403580:

            lea RCX,QWORD PTR [RIP+.L_43ed80]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_40359f:

            nop
.L_4035a0:

            test RDI,RDI
            je .L_4035e8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4035e8

            test EAX,EAX
            jle .L_4035c0

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4035c0:

            lea RCX,QWORD PTR [RIP+.L_43ed00]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4035e8:

            xor EAX,EAX
            ret 
.L_4035eb:

            nop
            nop
            nop
            nop
            nop
.L_4035f0:

            mov DWORD PTR [RDI+140],ESI
            ret 
.L_4035f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403600:

            mov EAX,DWORD PTR [RDI+140]
            ret 
.L_403607:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403610:

            cmp DWORD PTR [RDI],-1
            je .L_403648

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            test RSI,RSI
            je .L_403650
.L_403626:

            mov RDI,RBX
            call .L_40bba0

            mov RDI,QWORD PTR [RBP+112]
            call .L_40bbf0

            mov QWORD PTR [RBP+112],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403648:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403650:

            call .L_40ba30

            mov RBX,RAX
            jmp .L_403626
.L_40365a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403660:

            mov RAX,QWORD PTR [RDI+112]
            ret 
.L_403665:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403670:

            cmp DWORD PTR [RDI],-1
            je .L_40367b

            mov DWORD PTR [RDI+144],ESI
.L_40367b:

            ret 
.L_40367d:

            nop
            nop
            nop
.L_403680:

            mov EAX,DWORD PTR [RDI+144]
            ret 
.L_403687:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403690:

            cmp DWORD PTR [RDI],-1
            je .L_40369b

            mov DWORD PTR [RDI+148],ESI
.L_40369b:

            ret 
.L_40369d:

            nop
            nop
            nop
.L_4036a0:

            mov EAX,DWORD PTR [RDI+148]
            ret 
.L_4036a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036b0:

            cmp DWORD PTR [RDI],-1
            je .L_4036bc

            mov QWORD PTR [RDI+152],RSI
.L_4036bc:

            ret 
.L_4036be:

            nop
            nop
.L_4036c0:

            mov RAX,QWORD PTR [RDI+152]
            ret 
.L_4036c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036d0:

            cmp DWORD PTR [RDI],-1
            je .L_4036ec

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RDI+144],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RDI+160],XMM0
.L_4036ec:

            ret 
.L_4036ee:

            nop
            nop
.L_4036f0:

            movdqu XMM0,XMMWORD PTR [RDI+144]
            movups XMMWORD PTR [RSI],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+160]
            movups XMMWORD PTR [RSI+16],XMM0
            ret 
.L_403708:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403710:

            cmp DWORD PTR [RDI],-1
            je .L_403718

            mov DWORD PTR [RDI+120],ESI
.L_403718:

            ret 
.L_40371a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403720:

            mov EAX,DWORD PTR [RDI+120]
            ret 
.L_403724:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403730:

            cmp DWORD PTR [RDI],-1
            je .L_403738

            mov DWORD PTR [RDI+124],ESI
.L_403738:

            ret 
.L_40373a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403740:

            mov EAX,DWORD PTR [RDI+124]
            ret 
.L_403744:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403750:

            cmp DWORD PTR [RDI],-1
            je .L_40375b

            mov DWORD PTR [RDI+128],ESI
.L_40375b:

            ret 
.L_40375d:

            nop
            nop
            nop
.L_403760:

            mov EAX,DWORD PTR [RDI+128]
            ret 
.L_403767:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403770:

            jmp .L_4025c0
.L_403775:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403780:

            jmp .L_402500
.L_403785:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403790:

            test ESI,ESI
            mov EAX,1
            je .L_4037a1

            cmp ESI,DWORD PTR [RDI+192]
            jae .L_4037a8
.L_4037a1:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4037a8:

            sub RSP,8
            call .L_402170

            add RSP,8
            movzx EAX,AL
            ret 
.L_4037b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4037c0:

            movzx EAX,BYTE PTR [RDI+176]
            xor EAX,1
            movzx EAX,AL
            ret 
.L_4037ce:

            nop
            nop
.L_4037d0:

            push RBX
            mov RBX,RDI
            call .L_402600

            mov DWORD PTR [RBX+272],0
            pop RBX
            ret 
.L_4037e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4037f0:

            cmp DWORD PTR [RDI],-1
            je .L_4038d0

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
            test ESI,ESI
            jne .L_403840

            mov DWORD PTR [RDI+184],0
            mov DWORD PTR [RDI+140],0
            mov DWORD PTR [RDI+268],0
.L_403826:

            mov DWORD PTR [RBX+272],0
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403840:

            cmp ESI,DWORD PTR [RDI+192]
            jb .L_403851

            call .L_402170

            test AL,AL
            je .L_403890
.L_403851:

            mov EAX,DWORD PTR [RBX+184]
            cmp EBP,EAX
            jbe .L_403886

            mov EDX,EBP
            lea RCX,QWORD PTR [RAX+RAX*4]
            xor ESI,ESI
            sub EDX,EAX
            mov RAX,QWORD PTR [RBX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RAX+RCX*4]
            shl RDX,2
            call memset@PLT

            cmp BYTE PTR [RBX+178],0
            jne .L_4038a0
.L_403886:

            mov DWORD PTR [RBX+184],EBP
            jmp .L_403826
          .byte 0x66
          .byte 0x90
.L_403890:

            add RSP,8
.L_403894:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4038a0:

            mov EAX,DWORD PTR [RBX+184]
            mov EDX,EBP
            xor ESI,ESI
            sub EDX,EAX
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+216]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RAX+RCX*4]
            shl RDX,2
            call memset@PLT

            jmp .L_403886
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4038d0:

            xor EAX,EAX
            test ESI,ESI
            sete AL
            ret 
.L_4038d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4038e0:

            mov EAX,DWORD PTR [RDI+184]
            ret 
.L_4038e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4038f0:

            test RSI,RSI
            je .L_4038fd

            mov EAX,DWORD PTR [RDI+184]
            mov DWORD PTR [RSI],EAX
.L_4038fd:

            mov RAX,QWORD PTR [RDI+200]
            ret 
.L_403905:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403910:

            push RBX
            mov RBX,RDI
            sub RSP,16
            cmp BYTE PTR [RDI+178],0
            je .L_403940
.L_403921:

            test RSI,RSI
            je .L_40392e

            mov EAX,DWORD PTR [RBX+184]
            mov DWORD PTR [RSI],EAX
.L_40392e:

            mov RAX,QWORD PTR [RBX+216]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403940:

            mov QWORD PTR [RSP+8],RSI
            call .L_402760

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_403921
.L_403951:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403960:

            jmp .L_402e00
.L_403965:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403970:

            mov EAX,EDX
            sub EAX,ESI
            cmp EAX,1
            jbe .L_403980

            jmp .L_401e50
          .byte 0x66
          .byte 0x90
.L_403980:

            ret 
.L_403982:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403990:

            jmp .L_402e20
.L_403995:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4039a0:

            jmp .L_403200
.L_4039a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4039b0:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            movsxd R12,EDX
            mov RBX,RDI
            sub RSP,24
.L_4039ca:

            mov EAX,DWORD PTR [RDI+140]
            mov EBP,DWORD PTR [RDI+128]
            cmp EAX,1
            je .L_4039e7

            or EAX,DWORD PTR [RDI+184]
            jne .L_403fe5
.L_4039e7:

            cmp DWORD PTR [RBX],-1
            je .L_403b2f

            cmp R12D,-1
            jne .L_403a0b

            mov RDI,R13
            mov DWORD PTR [RSP+12],R8D
            call strlen@PLT

            mov R8D,DWORD PTR [RSP+12]
            movsxd R12,EAX
.L_403a0b:

            mov EAX,R12D
            sub EAX,R15D
            cmp R8D,-1
            cmove R8D,EAX
            mov EAX,DWORD PTR [RBX+184]
            movsxd R14,R8D
            mov RSI,R14
            shr RSI,2
            add ESI,EAX
            jne .L_403d58
.L_403a31:

            mov EDI,R15D
            add RDI,R13
            test R15D,R15D
            je .L_403a44

            test EAX,EAX
            je .L_403db0
.L_403a44:

            add R14,RDI
            cmp R14,RDI
            jbe .L_403b40
.L_403a50:

            movzx ESI,BYTE PTR [RDI]
            mov RDX,RDI
            lea R15,QWORD PTR [RDI+1]
            sub RDX,R13
            cmp ESI,127
            jbe .L_403a98

            lea EAX,DWORD PTR [RSI-194]
            cmp EAX,29
            ja .L_403ab0

            cmp R14,R15
            jbe .L_403cc0

            movzx EAX,BYTE PTR [RDI+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403d98

            shl ESI,6
            lea R15,QWORD PTR [RDI+2]
            and ESI,1984
            or ESI,EAX
            nop
            nop
            nop
.L_403a98:

            mov RDI,RBX
            call .L_402600

            cmp R14,R15
            jbe .L_403b48
.L_403aa9:

            mov RDI,R15
            jmp .L_403a50
          .byte 0x66
          .byte 0x90
.L_403ab0:

            lea EAX,DWORD PTR [RSI-224]
            cmp EAX,15
            ja .L_403cd0

            mov RAX,R14
            sub RAX,R15
            cmp RAX,1
            jle .L_403b10

            movzx EAX,BYTE PTR [RDI+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403b10

            movzx ECX,BYTE PTR [RDI+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403b10

            shl ESI,12
            shl EAX,6
            movzx ESI,SI
            or ESI,EAX
            or ESI,ECX
            cmp ESI,2047
            jbe .L_403b10

            lea EAX,DWORD PTR [RSI-55296]
            cmp EAX,2047
            ja .L_403f10

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403b10:

            mov ESI,EBP
            jmp .L_403a98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403b18:

            mov DWORD PTR [RBX+272],EDI
            mov DWORD PTR [RBX+RDX*4+248],EBP
.L_403b25:

            mov DWORD PTR [RBX+140],1
.L_403b2f:

            add RSP,24
.L_403b33:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_403b40:

            mov R15,RDI
            nop
            nop
            nop
            nop
            nop
.L_403b48:

            add R13,R12
            xor ESI,ESI
            mov DWORD PTR [RBX+272],0
            cmp R13,R15
            jbe .L_403b25

            nop
            nop
            nop
            nop
.L_403b60:

            movzx EAX,BYTE PTR [R15]
            mov EDX,ESI
            lea R8,QWORD PTR [R15+1]
            lea EDI,DWORD PTR [RSI+1]
            cmp EAX,127
            jbe .L_403ba8

            lea ECX,DWORD PTR [RAX-194]
            cmp ECX,29
            ja .L_403be0

            cmp R13,R8
            jbe .L_403b18

            movzx EDX,BYTE PTR [R15+1]
            add EDX,-128
            cmp EDX,63
            ja .L_403d80

            shl EAX,6
            lea R8,QWORD PTR [R15+2]
            and EAX,1984
            or EAX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ba8:

            cmp R13,R8
            mov DWORD PTR [RBX+272],EDI
            mov DWORD PTR [RBX+RSI*4+248],EAX
            jbe .L_403b25
.L_403bbe:

            add RSI,1
            mov R15,R8
            cmp RSI,5
            jne .L_403b60

            mov DWORD PTR [RBX+140],1
            jmp .L_403b2f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403be0:

            lea EDX,DWORD PTR [RAX-224]
            cmp EDX,15
            ja .L_403c50

            mov RDX,R13
            sub RDX,R8
            cmp RDX,1
            jle .L_403c40

            movzx EDX,BYTE PTR [R15+1]
            add EDX,-128
            cmp EDX,63
            ja .L_403c40

            movzx ECX,BYTE PTR [R15+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403c40

            shl EAX,12
            shl EDX,6
            movzx EAX,AX
            or EAX,EDX
            or EAX,ECX
            cmp EAX,2047
            jbe .L_403c40

            lea EDX,DWORD PTR [RAX-55296]
            cmp EDX,2047
            ja .L_403f00

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c40:

            mov EAX,EBP
            jmp .L_403ba8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403c50:

            lea EDX,DWORD PTR [RAX-240]
            cmp EDX,4
            ja .L_403c40

            mov RDX,R13
            sub RDX,R8
            cmp RDX,2
            jle .L_403c40

            movzx EDX,BYTE PTR [R15+1]
            add EDX,-128
            cmp EDX,63
            ja .L_403c40

            movzx ECX,BYTE PTR [R15+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403c40

            movzx R9D,BYTE PTR [R15+3]
            add R9D,-128
            cmp R9D,63
            ja .L_403c40

            shl EAX,18
            shl EDX,12
            shl ECX,6
            and EAX,1835008
            or EAX,EDX
            or EAX,R9D
            or EAX,ECX
            lea EDX,DWORD PTR [RAX-65536]
            cmp EDX,1048575
            ja .L_403c40

            lea R8,QWORD PTR [R15+4]
            jmp .L_403ba8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403cc0:

            mov ESI,EBP
            mov RDI,RBX
            call .L_402600

            jmp .L_403b48
          .byte 0x90
.L_403cd0:

            lea EAX,DWORD PTR [RSI-240]
            cmp EAX,4
            ja .L_403b10

            mov RAX,R14
            sub RAX,R15
            cmp RAX,2
            jle .L_403b10

            movzx EAX,BYTE PTR [RDI+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403b10

            movzx ECX,BYTE PTR [RDI+2]
            add ECX,-128
            cmp ECX,63
            ja .L_403b10

            movzx R8D,BYTE PTR [RDI+3]
            add R8D,-128
            cmp R8D,63
            ja .L_403b10

            shl ESI,18
            shl EAX,12
            shl ECX,6
            and ESI,1835008
            or ESI,EAX
            or ESI,R8D
            or ESI,ECX
            lea EAX,DWORD PTR [RSI-65536]
            cmp EAX,1048575
            ja .L_403b10

            lea R15,QWORD PTR [RDI+4]
            jmp .L_403a98
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403d58:

            cmp ESI,DWORD PTR [RBX+192]
            jb .L_403a31

            mov RDI,RBX
            call .L_402170

            mov EAX,DWORD PTR [RBX+184]
            jmp .L_403a31
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d80:

            mov DWORD PTR [RBX+272],EDI
            mov DWORD PTR [RBX+RSI*4+248],EBP
            jmp .L_403bbe
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403d98:

            mov ESI,EBP
            mov RDI,RBX
            call .L_402600

            jmp .L_403aa9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403db0:

            cmp R13,RDI
            mov DWORD PTR [RBX+268],0
            jae .L_403a44

            mov RSI,RDI
            mov R8D,1
            nop
            nop
            nop
            nop
.L_403dd0:

            lea R9,QWORD PTR [RSI-1]
            movzx ECX,BYTE PTR [RSI-1]
            cmp R13,R9
            jae .L_403e60

            mov EAX,ECX
            and EAX,4294967232
            cmp AL,128
            jne .L_403e60

            mov R10,R9
            jmp .L_403e08
          .byte 0x90
.L_403df0:

            mov EAX,ECX
            and EAX,4294967232
            cmp AL,128
            jne .L_403e16

            mov RAX,RSI
            sub RAX,RDX
            cmp RAX,3
            jg .L_403e16

            mov R10,RDX
.L_403e08:

            lea RDX,QWORD PTR [R10-1]
            movzx ECX,BYTE PTR [R10-1]
            cmp R13,RDX
            jne .L_403df0
.L_403e16:

            cmp ECX,127
            jbe .L_403ec2

            lea EAX,DWORD PTR [RCX-194]
            cmp EAX,29
            ja .L_403e80

            cmp R10,RSI
            jae .L_403ec0

            movzx EAX,BYTE PTR [RDX+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403ec7

            shl ECX,6
            lea R10,QWORD PTR [RDX+2]
            and ECX,1984
            or ECX,EAX
            cmp R10,RSI
            jne .L_403ec7
.L_403e57:

            mov RSI,RDX
            jmp .L_403ecc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403e60:

            cmp ECX,127
            jbe .L_403fd3

            lea EAX,DWORD PTR [RCX-194]
            mov RDX,R9
            mov R10,RSI
            cmp EAX,29
            jbe .L_403fdb

            nop
            nop
.L_403e80:

            lea EAX,DWORD PTR [RCX-224]
            cmp EAX,15
            ja .L_403f20

            mov RAX,RSI
            sub RAX,R10
            cmp RAX,1
            jle .L_403ec0

            movzx EAX,BYTE PTR [RDX+1]
            add EAX,-128
            cmp EAX,63
            ja .L_403ec0

            movzx R11D,BYTE PTR [RDX+2]
            add R11D,-128
            cmp R11D,63
            jbe .L_403f9f

            nop
            nop
            nop
            nop
            nop
            nop
.L_403ec0:

            mov ECX,EBP
.L_403ec2:

            cmp R10,RSI
            je .L_403e57
.L_403ec7:

            mov ECX,EBP
            mov RSI,R9
.L_403ecc:

            cmp R13,RSI
            mov DWORD PTR [RBX+268],R8D
            mov DWORD PTR [RBX+R8*4+224],ECX
            jae .L_403a44

            add R8,1
            cmp R8,6
            jne .L_403dd0

            jmp .L_403a44
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f00:

            lea R8,QWORD PTR [R15+3]
            jmp .L_403ba8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f10:

            lea R15,QWORD PTR [RDI+3]
            jmp .L_403a98
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f20:

            lea EAX,DWORD PTR [RCX-240]
            cmp EAX,4
            ja .L_403ec0

            mov RAX,RSI
            sub RAX,R10
            cmp RAX,2
            jle .L_403ec0

            movzx R11D,BYTE PTR [RDX+1]
            add R11D,-128
            cmp R11D,63
            ja .L_403ec0

            movzx EAX,BYTE PTR [RDX+2]
            add EAX,-128
            cmp EAX,63
            ja .L_403ec0

            movzx R15D,BYTE PTR [RDX+3]
            add R15D,-128
            cmp R15D,63
            ja .L_403ec0

            shl ECX,18
            shl R11D,12
            shl EAX,6
            and ECX,1835008
            or ECX,R15D
            or ECX,R11D
            or ECX,EAX
            lea EAX,DWORD PTR [RCX-65536]
            cmp EAX,1048575
            ja .L_403ec0

            lea R10,QWORD PTR [RDX+4]
            jmp .L_403ec2
.L_403f9f:

            shl ECX,12
            shl EAX,6
            movzx ECX,CX
            or ECX,R11D
            or ECX,EAX
            cmp ECX,2047
            jbe .L_403ec0

            lea EAX,DWORD PTR [RCX-55296]
            cmp EAX,2047
            jbe .L_403ec0

            lea R10,QWORD PTR [RDX+3]
            jmp .L_403ec2
.L_403fd3:

            mov RSI,R9
            jmp .L_403ecc
.L_403fdb:

            mov ECX,EBP
            mov R10,RSI
            jmp .L_403ec2
.L_403fe5:

            lea RCX,QWORD PTR [RIP+.L_43ec20]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e718]
            mov EDX,1471
            call __assert_fail@PLT
.L_404004:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404010:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_404024:

            mov EAX,DWORD PTR [RDI+140]
            mov R12D,DWORD PTR [RDI+128]
            cmp EAX,1
            je .L_404042

            or EAX,DWORD PTR [RDI+184]
            jne .L_4042ca
.L_404042:

            cmp DWORD PTR [RBX],-1
            je .L_40417c

            cmp EDX,-1
            je .L_404278
.L_404054:

            movsxd RAX,EDX
            lea RBP,QWORD PTR [R14+RAX*2]
.L_40405b:

            sub EDX,ECX
            cmp R8D,-1
            mov EAX,DWORD PTR [RBX+184]
            cmove R8D,EDX
            movsxd R13,R8D
            add R13,R13
            mov RSI,R13
            shr RSI,2
            add ESI,EAX
            jne .L_404190
.L_404080:

            mov EDX,ECX
            test EAX,EAX
            lea RDX,QWORD PTR [R14+RDX*2]
            jne .L_404092

            test ECX,ECX
            jne .L_4041e8
.L_404092:

            add R13,RDX
            cmp R13,RDX
            jbe .L_4042b8

            nop
            nop
.L_4040a0:

            movzx ESI,WORD PTR [RDX]
            lea R15,QWORD PTR [RDX+2]
            lea EAX,DWORD PTR [RSI-55296]
            cmp EAX,2047
            ja .L_4040e3

            cmp ESI,56319
            ja .L_4040e0

            cmp R13,R15
            jbe .L_4040e0

            movzx EAX,WORD PTR [RDX+2]
            lea ECX,DWORD PTR [RAX-56320]
            cmp ECX,1023
            jbe .L_4041d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4040e0:

            mov ESI,R12D
.L_4040e3:

            sub RDX,R14
            mov RDI,RBX
            sar RDX,1
            call .L_402600

            cmp R13,R15
            mov RDX,R15
            ja .L_4040a0
.L_4040f9:

            cmp R15,RBP
            mov DWORD PTR [RBX+272],0
            mov EAX,1
            jae .L_404172

            nop
            nop
            nop
.L_404110:

            movzx EDX,WORD PTR [R15]
            lea RCX,QWORD PTR [R15+2]
            lea ESI,DWORD PTR [RDX-55296]
            cmp ESI,2047
            ja .L_404153

            cmp EDX,56319
            ja .L_404150

            cmp RBP,RCX
            jbe .L_404150

            movzx ESI,WORD PTR [R15+2]
            lea EDI,DWORD PTR [RSI-56320]
            cmp EDI,1023
            jbe .L_4041c0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404150:

            mov EDX,R12D
.L_404153:

            cmp RBP,RCX
            mov DWORD PTR [RBX+272],EAX
            mov DWORD PTR [RBX+RAX*4+244],EDX
            jbe .L_404172

            add RAX,1
            mov R15,RCX
            cmp RAX,6
            jne .L_404110
.L_404172:

            mov DWORD PTR [RBX+140],1
.L_40417c:

            add RSP,24
.L_404180:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404190:

            cmp ESI,DWORD PTR [RBX+192]
            jb .L_404080

            mov RDI,RBX
            mov DWORD PTR [RSP+12],ECX
            call .L_402170

            mov EAX,DWORD PTR [RBX+184]
            mov ECX,DWORD PTR [RSP+12]
            jmp .L_404080
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4041c0:

            shl EDX,10
            lea RCX,QWORD PTR [R15+4]
            lea EDX,DWORD PTR [RSI+RDX*1-56613888]
            jmp .L_404153
.L_4041d0:

            shl ESI,10
            lea R15,QWORD PTR [RDX+4]
            lea ESI,DWORD PTR [RAX+RSI*1-56613888]
            jmp .L_4040e3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4041e8:

            cmp R14,RDX
            mov DWORD PTR [RBX+268],0
            jae .L_404092

            mov RDI,RDX
            mov EAX,1
            nop
            nop
            nop
            nop
            nop
.L_404208:

            movzx ECX,WORD PTR [RDI-2]
            lea RSI,QWORD PTR [RDI-2]
            lea R8D,DWORD PTR [RCX-55296]
            cmp R8D,2047
            ja .L_40424b

            cmp ECX,56319
            jbe .L_404248

            cmp R14,RSI
            jae .L_404248

            movzx R8D,WORD PTR [RDI-4]
            lea R9D,DWORD PTR [R8-55296]
            cmp R9D,1023
            jbe .L_4042a0

            nop
            nop
            nop
            nop
            nop
            nop
.L_404248:

            mov ECX,R12D
.L_40424b:

            cmp R14,RSI
            mov DWORD PTR [RBX+268],EAX
            mov DWORD PTR [RBX+RAX*4+224],ECX
            jae .L_404092

            add RAX,1
            mov RDI,RSI
            cmp RAX,6
            jne .L_404208

            jmp .L_404092
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404278:

            cmp WORD PTR [R14],0
            lea RAX,QWORD PTR [R14+2]
            je .L_4042c0

            xor EDX,EDX
            nop
            nop
            nop
.L_404288:

            add RAX,2
            add EDX,1
            cmp WORD PTR [RAX-2],0
            jne .L_404288

            jmp .L_404054
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4042a0:

            shl R8D,10
            lea RSI,QWORD PTR [RDI-4]
            lea ECX,DWORD PTR [RCX+R8*1-56613888]
            jmp .L_40424b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4042b8:

            mov R15,RDX
            jmp .L_4040f9
.L_4042c0:

            mov RBP,R14
            xor EDX,EDX
            jmp .L_40405b
.L_4042ca:

            lea RCX,QWORD PTR [RIP+.L_43eb40]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e718]
            mov EDX,1471
            call __assert_fail@PLT
.L_4042e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_404304:

            mov EAX,DWORD PTR [RDI+140]
            mov EBP,DWORD PTR [RDI+128]
            cmp EAX,1
            je .L_404321

            or EAX,DWORD PTR [RDI+184]
            jne .L_404537
.L_404321:

            cmp DWORD PTR [RBX],-1
            je .L_404452

            cmp EDX,-1
            je .L_404508
.L_404333:

            movsxd RAX,EDX
            lea RAX,QWORD PTR [R14+RAX*4]
            mov QWORD PTR [RSP+8],RAX
.L_40433f:

            sub EDX,ECX
            mov EAX,DWORD PTR [RBX+184]
            cmp R8D,-1
            cmove R8D,EDX
            mov ESI,R8D
            add ESI,EAX
            jne .L_404468
.L_40435a:

            mov EDX,ECX
            test ECX,ECX
            lea R13,QWORD PTR [R14+RDX*4]
            je .L_40436c

            test EAX,EAX
            je .L_4044a0
.L_40436c:

            movsxd R8,R8D
            lea R12,QWORD PTR [R13+R8*4]
            cmp R12,R13
            jbe .L_4043da

            mov RAX,R13
            mov R15,R13
            not RAX
            add RAX,R12
            mov QWORD PTR [RSP+16],RAX
            and RAX,-4
            lea R12,QWORD PTR [R13+RAX*1+4]
            nop
            nop
            nop
            nop
            nop
.L_404398:

            mov ESI,DWORD PTR [R15]
            lea EAX,DWORD PTR [RSI-57344]
            cmp EAX,1056767
            jbe .L_4043b1

            cmp ESI,55295
            cmova ESI,EBP
.L_4043b1:

            mov RDX,R15
            mov RDI,RBX
            add R15,4
            sub RDX,R14
            sar RDX,2
            call .L_402600

            cmp R12,R15
            jne .L_404398

            mov R12,QWORD PTR [RSP+16]
            shr R12,2
            lea R13,QWORD PTR [R13+R12*4+4]
.L_4043da:

            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RBX+272],0
            cmp R13,RDI
            jae .L_404448

            mov RAX,R13
            not RAX
            lea RSI,QWORD PTR [RAX+RDI*1]
            mov EAX,1
            shr RSI,2
            add RSI,1
            jmp .L_40441a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404410:

            add RAX,1
            cmp RAX,6
            je .L_404448
.L_40441a:

            mov EDX,DWORD PTR [R13+RAX*4-4]
            lea ECX,DWORD PTR [RDX-57344]
            cmp ECX,1056767
            jbe .L_404436

            cmp EDX,55295
            cmova EDX,EBP
.L_404436:

            cmp RSI,RAX
            mov DWORD PTR [RBX+272],EAX
            mov DWORD PTR [RBX+RAX*4+244],EDX
            jne .L_404410
.L_404448:

            mov DWORD PTR [RBX+140],1
.L_404452:

            add RSP,40
.L_404456:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404468:

            cmp ESI,DWORD PTR [RBX+192]
            jb .L_40435a

            mov RDI,RBX
            mov DWORD PTR [RSP+28],R8D
            mov DWORD PTR [RSP+16],ECX
            call .L_402170

            mov EAX,DWORD PTR [RBX+184]
            mov R8D,DWORD PTR [RSP+28]
            mov ECX,DWORD PTR [RSP+16]
            jmp .L_40435a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4044a0:

            cmp R14,R13
            mov DWORD PTR [RBX+268],0
            jae .L_40436c

            mov RCX,R13
            mov EDX,1
            jmp .L_4044ce
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4044c0:

            add RDX,1
            cmp RDX,6
            je .L_40436c
.L_4044ce:

            sub RCX,4
            mov EAX,DWORD PTR [RCX]
            lea ESI,DWORD PTR [RAX-57344]
            cmp ESI,1056767
            jbe .L_4044ea

            cmp EAX,55295
            cmova EAX,EBP
.L_4044ea:

            cmp R14,RCX
            mov DWORD PTR [RBX+268],EDX
            mov DWORD PTR [RBX+RDX*4+224],EAX
            jb .L_4044c0

            jmp .L_40436c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404508:

            mov EDI,DWORD PTR [R14]
            lea RAX,QWORD PTR [R14+4]
            test EDI,EDI
            je .L_40452b

            xor EDX,EDX
            nop
            nop
            nop
.L_404518:

            add RAX,4
            mov ESI,DWORD PTR [RAX-4]
            add EDX,1
            test ESI,ESI
            jne .L_404518

            jmp .L_404333
.L_40452b:

            mov QWORD PTR [RSP+8],R14
            xor EDX,EDX
            jmp .L_40433f
.L_404537:

            lea RCX,QWORD PTR [RIP+.L_43ea60]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e718]
            mov EDX,1471
            call __assert_fail@PLT
.L_404556:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404560:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,16
.L_404572:

            mov EAX,DWORD PTR [RDI+140]
            cmp EAX,1
            je .L_404589

            or EAX,DWORD PTR [RDI+184]
            jne .L_40470c
.L_404589:

            cmp DWORD PTR [RBP],-1
            je .L_40464b

            cmp EDX,-1
            je .L_4046e0
.L_40459c:

            movsxd R12,EDX
            add R12,R13
.L_4045a2:

            sub EDX,ECX
            cmp R8D,-1
            mov EAX,DWORD PTR [RBP+184]
            cmove R8D,EDX
            movsxd R14,R8D
            mov RSI,R14
            shr RSI,2
            add ESI,EAX
            jne .L_404660
.L_4045c4:

            mov EBX,ECX
            add RBX,R13
            test ECX,ECX
            je .L_4045d5

            test EAX,EAX
            je .L_404690
.L_4045d5:

            add R14,RBX
            cmp R14,RBX
            jbe .L_4045fd

            nop
            nop
            nop
.L_4045e0:

            movzx ESI,BYTE PTR [RBX]
            mov RDX,RBX
            mov RDI,RBP
            sub RDX,R13
            add RBX,1
            call .L_402600

            cmp R14,RBX
            jne .L_4045e0

            mov RBX,R14
.L_4045fd:

            cmp RBX,R12
            mov DWORD PTR [RBP+272],0
            jae .L_404641

            sub R12,RBX
            mov EAX,1
            jmp .L_40462a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404620:

            add RAX,1
            cmp RAX,6
            je .L_404641
.L_40462a:

            movzx EDX,BYTE PTR [RBX+RAX*1-1]
            cmp R12,RAX
            mov DWORD PTR [RBP+272],EAX
            mov DWORD PTR [RBP+RAX*4+244],EDX
            jne .L_404620
.L_404641:

            mov DWORD PTR [RBP+140],1
.L_40464b:

            add RSP,16
.L_40464f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404660:

            cmp ESI,DWORD PTR [RBP+192]
            jb .L_4045c4

            mov RDI,RBP
            mov DWORD PTR [RSP+12],ECX
            call .L_402170

            mov EAX,DWORD PTR [RBP+184]
            mov ECX,DWORD PTR [RSP+12]
            jmp .L_4045c4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404690:

            cmp R13,RBX
            mov DWORD PTR [RBP+268],0
            jae .L_4045d5

            mov RDX,RBX
            mov EAX,1
            jmp .L_4046be
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4046b0:

            add RAX,1
            cmp RAX,6
            je .L_4045d5
.L_4046be:

            sub RDX,1
            movzx ECX,BYTE PTR [RDX]
            mov DWORD PTR [RBP+268],EAX
            cmp R13,RDX
            mov DWORD PTR [RBP+RAX*4+224],ECX
            jne .L_4046b0

            jmp .L_4045d5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4046e0:

            cmp BYTE PTR [R13],0
            lea RAX,QWORD PTR [R13+1]
            je .L_404702

            xor EDX,EDX
            nop
            nop
            nop
.L_4046f0:

            add RAX,1
            add EDX,1
            cmp BYTE PTR [RAX-1],0
            jne .L_4046f0

            jmp .L_40459c
.L_404702:

            mov R12,R13
            xor EDX,EDX
            jmp .L_4045a2
.L_40470c:

            lea RCX,QWORD PTR [RIP+.L_43e980]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e718]
            mov EDX,1471
            call __assert_fail@PLT
.L_40472b:

            nop
            nop
            nop
            nop
            nop
.L_404730:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_404744:

            mov EAX,DWORD PTR [RDI+140]
            cmp EAX,1
            je .L_40475b

            or EAX,DWORD PTR [RDI+184]
            jne .L_40491e
.L_40475b:

            cmp DWORD PTR [RBP],-1
            je .L_404853

            cmp EDX,-1
            je .L_4048f0
.L_40476e:

            movsxd RAX,EDX
            lea RAX,QWORD PTR [R14+RAX*4]
            mov QWORD PTR [RSP],RAX
.L_404779:

            sub EDX,ECX
            mov EAX,DWORD PTR [RBP+184]
            cmp R8D,-1
            cmove R8D,EDX
            mov ESI,R8D
            add ESI,EAX
            jne .L_404868
.L_404794:

            mov EDX,ECX
            test ECX,ECX
            lea R15,QWORD PTR [R14+RDX*4]
            je .L_4047a6

            test EAX,EAX
            je .L_4048a0
.L_4047a6:

            movsxd R8,R8D
            lea R12,QWORD PTR [R15+R8*4]
            cmp R12,R15
            jbe .L_4047f6

            mov RAX,R15
            mov RBX,R15
            not RAX
            add R12,RAX
            mov RAX,R12
            and RAX,-4
            lea R13,QWORD PTR [R15+RAX*1+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4047d0:

            mov ESI,DWORD PTR [RBX]
            mov RDX,RBX
            mov RDI,RBP
            sub RDX,R14
            add RBX,4
            sar RDX,2
            call .L_402600

            cmp RBX,R13
            jne .L_4047d0

            shr R12,2
            lea R15,QWORD PTR [R15+R12*4+4]
.L_4047f6:

            mov RDI,QWORD PTR [RSP]
            mov DWORD PTR [RBP+272],0
            cmp R15,RDI
            jae .L_404849

            mov RAX,R15
            not RAX
            lea RCX,QWORD PTR [RAX+RDI*1]
            mov EAX,1
            shr RCX,2
            add RCX,1
            jmp .L_404832
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404828:

            add RAX,1
            cmp RAX,6
            je .L_404849
.L_404832:

            mov EDX,DWORD PTR [R15+RAX*4-4]
            cmp RCX,RAX
            mov DWORD PTR [RBP+272],EAX
            mov DWORD PTR [RBP+RAX*4+244],EDX
            jne .L_404828
.L_404849:

            mov DWORD PTR [RBP+140],1
.L_404853:

            add RSP,24
.L_404857:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404868:

            cmp ESI,DWORD PTR [RBP+192]
            jb .L_404794

            mov RDI,RBP
            mov DWORD PTR [RSP+12],R8D
            mov DWORD PTR [RSP+8],ECX
            call .L_402170

            mov EAX,DWORD PTR [RBP+184]
            mov R8D,DWORD PTR [RSP+12]
            mov ECX,DWORD PTR [RSP+8]
            jmp .L_404794
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4048a0:

            cmp R14,R15
            mov DWORD PTR [RBP+268],0
            jae .L_4047a6

            mov RDX,R15
            mov EAX,1
            jmp .L_4048ce
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4048c0:

            add RAX,1
            cmp RAX,6
            je .L_4047a6
.L_4048ce:

            sub RDX,4
            mov ECX,DWORD PTR [RDX]
            mov DWORD PTR [RBP+268],EAX
            cmp R14,RDX
            mov DWORD PTR [RBP+RAX*4+224],ECX
            jb .L_4048c0

            jmp .L_4047a6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4048f0:

            mov EDI,DWORD PTR [R14]
            lea RAX,QWORD PTR [R14+4]
            test EDI,EDI
            je .L_404913

            xor EDX,EDX
            nop
            nop
            nop
.L_404900:

            add RAX,4
            mov ESI,DWORD PTR [RAX-4]
            add EDX,1
            test ESI,ESI
            jne .L_404900

            jmp .L_40476e
.L_404913:

            mov QWORD PTR [RSP],R14
            xor EDX,EDX
            jmp .L_404779
.L_40491e:

            lea RCX,QWORD PTR [RIP+.L_43e8a0]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e718]
            mov EDX,1471
            call __assert_fail@PLT
.L_40493d:

            nop
            nop
            nop
.L_404940:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,136
.L_404951:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RBX
            xor EBX,EBX
            cmp BYTE PTR [RDI+178],0
            mov QWORD PTR [RSP+56],RDI
            je .L_405254

            mov RAX,QWORD PTR [RSP+56]
            cmp DWORD PTR [RAX+140],2
            jne .L_405235

            mov RAX,QWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RAX+144]
            mov DWORD PTR [RSP+8],EBX
            and EBX,4294967293
            mov DWORD PTR [RSP+80],EBX
            mov EBX,DWORD PTR [RAX+184]
            test EBX,EBX
            mov DWORD PTR [RSP+84],EBX
            je .L_404e41

            mov RDI,QWORD PTR [RAX+200]
            cmp EBX,1
            mov RSI,QWORD PTR [RAX+216]
            mov QWORD PTR [RSP+64],RDI
            jbe .L_40520d

            lea EAX,DWORD PTR [RBX-2]
            mov QWORD PTR [RSP+16],20
            mov R14D,1
            xor R9D,R9D
            add RAX,2
            mov QWORD PTR [RSP+72],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4049f0:

            mov EDX,R9D
            mov RAX,QWORD PTR [RSP+64]
            mov R10,QWORD PTR [RSP+16]
            lea RBX,QWORD PTR [RDX+RDX*4]
            mov ECX,R14D
            mov DWORD PTR [RSP+24],R14D
            shl RBX,2
            mov R11D,DWORD PTR [RAX+R10*1+8]
            cmp DWORD PTR [RAX+RBX*1+8],R11D
            mov RDI,RBX
            je .L_404c32

            cmp R9D,R14D
            jae .L_40507d

            sub ECX,R9D
            lea RAX,QWORD PTR [RSI+RBX*1]
            xor R8D,R8D
            sub ECX,1
            xor EDI,EDI
            add RDX,RCX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RSI+RDX*4+20]
            mov RDX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a50:

            add EDI,DWORD PTR [RDX]
            add R8D,DWORD PTR [RDX+4]
            add RDX,20
            cmp RCX,RDX
            jne .L_404a50

            xor R10D,R10D
            xor ECX,ECX
            nop
            nop
            nop
            nop
.L_404a68:

            add DWORD PTR [RAX+8],ECX
            add DWORD PTR [RAX+12],R10D
            add RAX,20
            add ECX,DWORD PTR [RAX-20]
            add R10D,DWORD PTR [RAX-16]
            mov DWORD PTR [RAX-20],0
            mov DWORD PTR [RAX-16],0
            cmp RDX,RAX
            jne .L_404a68
.L_404a8d:

            mov EAX,DWORD PTR [RSP+24]
            lea R13D,DWORD PTR [RAX-1]
            sub R13D,R9D
            cmp DWORD PTR [RSP+80],5
            mov DWORD PTR [RSP+8],R13D
            je .L_404f00

            mov ECX,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RSI+RBX*1]
            lea EDX,DWORD PTR [R9+1]
            add DWORD PTR [RAX],EDI
            add DWORD PTR [RAX+4],R8D
            cmp EDX,ECX
            jae .L_404aef

            sub ECX,R9D
            lea RAX,QWORD PTR [RDX+RDX*4]
            sub ECX,2
            add RDX,RCX
            lea RAX,QWORD PTR [RSI+RAX*4+8]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4+28]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ae0:

            sub DWORD PTR [RAX],EDI
            sub DWORD PTR [RAX+4],R8D
            add RAX,20
            cmp RDX,RAX
            jne .L_404ae0
.L_404aef:

            add RBX,20
            mov RAX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RAX+216]
            lea R13,QWORD PTR [RSI+RBX*1]
            add RBX,QWORD PTR [RAX+200]
            cmp DWORD PTR [RSP+8],1
            jbe .L_405087

            lea RAX,QWORD PTR [RBX-20]
            mov QWORD PTR [RSP+88],R14
            mov EBP,20
            mov R15D,1
            mov R12,RBX
            mov R14,R13
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
.L_404b38:

            mov RAX,QWORD PTR [RSP+32]
            mov EDI,DWORD PTR [R12+RBP*1]
            lea RDX,QWORD PTR [RAX+RBP*1]
            mov EAX,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b50:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_404e70

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_404b50

            mov R13,R12
            mov RBX,RBP
            mov R11D,20
            mov QWORD PTR [RSP+40],0
.L_404b7e:

            mov EAX,DWORD PTR [R12+RBP*1+16]
            lea RDI,QWORD PTR [R12+R11*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R12+RBP*1]
            mov RSI,R13
            mov QWORD PTR [RSP+48],R11
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R14,R14
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [R13+16],EAX
            movups XMMWORD PTR [R13],XMM0
            je .L_404c01

            mov RDX,RBX
            mov R13,QWORD PTR [RSP+40]
            mov R11,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [R14+RBP*1+16]
            movdqu XMM0,XMMWORD PTR [R14+RBP*1]
            add R13,R14
            lea RDI,QWORD PTR [R14+R11*1]
            mov RSI,R13
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R13],XMM0
            mov DWORD PTR [R13+16],EAX
.L_404c01:

            add R15D,1
            add RBP,20
            cmp R15D,DWORD PTR [RSP+8]
            jne .L_404b38
.L_404c14:

            mov RAX,QWORD PTR [RSP+56]
            mov R14,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            mov R9D,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+216]
            mov RDX,R14
.L_404c32:

            add R14,1
            add QWORD PTR [RSP+16],20
            cmp QWORD PTR [RSP+72],R14
            jne .L_4049f0

            mov EAX,DWORD PTR [RSP+84]
            lea EBP,DWORD PTR [RAX-1]
            mov EBX,EBP
            sub EBX,R9D
            cmp R9D,EAX
            jae .L_405225
.L_404c5c:

            mov R11D,DWORD PTR [RSP+84]
            mov EAX,R9D
            xor R10D,R10D
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c70:

            mov ECX,EAX
            add EAX,1
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RSI+RCX*4]
            add R8D,DWORD PTR [RCX]
            add R10D,DWORD PTR [RCX+4]
            cmp R11D,EAX
            ja .L_404c70

            mov R13D,DWORD PTR [RSP+84]
            mov ECX,R9D
            xor R12D,R12D
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ca0:

            mov EAX,ECX
            add ECX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            add DWORD PTR [RAX+8],R11D
            add DWORD PTR [RAX+12],R12D
            add R11D,DWORD PTR [RAX]
            add R12D,DWORD PTR [RAX+4]
            cmp R13D,ECX
            mov QWORD PTR [RAX],0
            ja .L_404ca0
.L_404cc8:

            cmp DWORD PTR [RSP+80],5
            je .L_405099

            mov R11D,DWORD PTR [RSP+84]
            lea ECX,DWORD PTR [R9+1]
            add RDI,RSI
            add DWORD PTR [RDI],R8D
            add DWORD PTR [RDI+4],R10D
            cmp ECX,R11D
            jae .L_404d20

            mov EDI,ECX
            mov ECX,R11D
            sub ECX,2
            lea RAX,QWORD PTR [RDI+RDI*4]
            sub ECX,R9D
            add RCX,RDI
            lea RAX,QWORD PTR [RSI+RAX*4+8]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RSI+RCX*4+28]
            nop
            nop
            nop
            nop
            nop
.L_404d10:

            sub DWORD PTR [RAX],R8D
            sub DWORD PTR [RAX+4],R10D
            add RAX,20
            cmp RCX,RAX
            jne .L_404d10
.L_404d20:

            lea R13,QWORD PTR [RDX+RDX*4+5]
            mov RAX,QWORD PTR [RSP+56]
            shl R13,2
            mov R15,QWORD PTR [RAX+216]
            add R15,R13
            add R13,QWORD PTR [RAX+200]
            cmp EBX,1
            jbe .L_404e41

            lea RAX,QWORD PTR [R13-20]
            mov R14,R15
            mov R12D,20
            mov EBP,1
            mov R15,R13
            mov DWORD PTR [RSP+16],EBX
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d70:

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [R15+R12*1]
            lea RDX,QWORD PTR [RAX+R12*1]
            mov EAX,EBP
            nop
.L_404d80:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_404eb8

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_404d80

            mov R13,R15
            mov RBX,R12
            mov ECX,20
            mov QWORD PTR [RSP+24],0
.L_404dad:

            mov EAX,DWORD PTR [R15+R12*1+16]
            lea RDI,QWORD PTR [R15+RCX*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R15+R12*1]
            mov RSI,R13
            mov QWORD PTR [RSP+32],RCX
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R14,R14
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [R13+16],EAX
            movups XMMWORD PTR [R13],XMM0
            je .L_404e30

            mov RDX,RBX
            mov R13,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R14+R12*1+16]
            movdqu XMM0,XMMWORD PTR [R14+R12*1]
            add R13,R14
            lea RDI,QWORD PTR [R14+RCX*1]
            mov RSI,R13
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R13],XMM0
            mov DWORD PTR [R13+16],EAX
.L_404e30:

            add EBP,1
            add R12,20
            cmp EBP,DWORD PTR [RSP+16]
            jne .L_404d70
.L_404e41:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_405230

            add RSP,136
.L_404e5c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e70:

            cmp R15D,EAX
            je .L_404c01

            mov EDX,R15D
            sub EDX,EAX
            lea R10,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea R13,QWORD PTR [RDX+RDX*4]
            lea R11,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R10*4]
            lea RDI,QWORD PTR [R13*4]
            shl R11,2
            mov QWORD PTR [RSP+40],RDI
            lea R13,QWORD PTR [R12+RDI*1]
            jmp .L_404b7e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404eb8:

            cmp EBP,EAX
            je .L_404e30

            mov EDX,EBP
            sub EDX,EAX
            lea R9,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea R13,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R9*4]
            lea RSI,QWORD PTR [R13*4]
            shl RCX,2
            mov QWORD PTR [RSP+24],RSI
            lea R13,QWORD PTR [R15+RSI*1]
            jmp .L_404dad
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404f00:

            mov RAX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RSI+RAX*1-20]
            mov DWORD PTR [RAX],EDI
            mov DWORD PTR [RAX+4],R8D
            mov RAX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RAX+216]
            lea R13,QWORD PTR [RSI+RBX*1]
            add RBX,QWORD PTR [RAX+200]
            cmp DWORD PTR [RSP+8],1
            jbe .L_405087

            lea RAX,QWORD PTR [RBX-20]
            mov QWORD PTR [RSP+88],R14
            mov EBP,20
            mov R15D,1
            mov R12,RBX
            mov R14,R13
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404f58:

            mov RAX,QWORD PTR [RSP+32]
            mov EDI,DWORD PTR [R12+RBP*1]
            lea RDX,QWORD PTR [RAX+RBP*1]
            mov EAX,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404f70:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_405040

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_404f70

            mov R13,R12
            mov RBX,RBP
            mov R11D,20
            mov QWORD PTR [RSP+48],0
.L_404f9e:

            mov EAX,DWORD PTR [R12+RBP*1+16]
            lea RDI,QWORD PTR [R12+R11*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R12+RBP*1]
            mov RSI,R13
            mov QWORD PTR [RSP+40],R11
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R14,R14
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [R13+16],EAX
            movups XMMWORD PTR [R13],XMM0
            je .L_405021

            mov RDX,RBX
            mov R13,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [R14+RBP*1+16]
            movdqu XMM0,XMMWORD PTR [R14+RBP*1]
            add R13,R14
            lea RDI,QWORD PTR [R14+R11*1]
            mov RSI,R13
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R13],XMM0
            mov DWORD PTR [R13+16],EAX
.L_405021:

            add R15D,1
            add RBP,20
            cmp R15D,DWORD PTR [RSP+8]
            jne .L_404f58

            jmp .L_404c14
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405040:

            cmp R15D,EAX
            je .L_405021

            mov EDX,R15D
            sub EDX,EAX
            lea R10,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea R13,QWORD PTR [RDX+RDX*4]
            lea R11,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R10*4]
            lea RDI,QWORD PTR [R13*4]
            shl R11,2
            mov QWORD PTR [RSP+48],RDI
            lea R13,QWORD PTR [R12+RDI*1]
            jmp .L_404f9e
.L_40507d:

            xor R8D,R8D
            xor EDI,EDI
            jmp .L_404a8d
.L_405087:

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,R14
            mov R9D,DWORD PTR [RSP+24]
            jmp .L_404c32
.L_405099:

            lea RAX,QWORD PTR [RBP+RBP*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov DWORD PTR [RAX],R8D
            mov DWORD PTR [RAX+4],R10D
            mov RAX,QWORD PTR [RSP+56]
            mov R14,QWORD PTR [RAX+216]
            add R14,RDI
            add RDI,QWORD PTR [RAX+200]
            cmp EBX,1
            jbe .L_404e41

            lea RAX,QWORD PTR [RDI-20]
            mov R13,R14
            mov R12D,20
            mov R15D,1
            mov R14,RDI
            mov DWORD PTR [RSP+16],EBX
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4050f0:

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [R14+R12*1]
            lea RDX,QWORD PTR [RAX+R12*1]
            mov EAX,R15D
.L_405100:

            mov ECX,EDI
            sub ECX,DWORD PTR [RDX]
            lea ESI,DWORD PTR [RAX-1]
            test ECX,ECX
            jle .L_4051d0

            sub RDX,20
            test ESI,ESI
            mov EAX,ESI
            jne .L_405100

            mov RBP,R14
            mov RBX,R12
            mov R9D,20
            mov QWORD PTR [RSP+24],0
.L_40512e:

            mov EAX,DWORD PTR [R14+R12*1+16]
            lea RDI,QWORD PTR [R14+R9*1]
            mov RDX,RBX
            movdqu XMM0,XMMWORD PTR [R14+R12*1]
            mov RSI,RBP
            mov QWORD PTR [RSP+32],R9
            movaps XMMWORD PTR [RSP+96],XMM0
            mov DWORD PTR [RSP+112],EAX
            call memmove@PLT

            test R13,R13
            mov EAX,DWORD PTR [RSP+112]
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [RBP+16],EAX
            movups XMMWORD PTR [RBP],XMM0
            je .L_4051af

            mov RDX,RBX
            mov RBP,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R13+R12*1+16]
            movdqu XMM0,XMMWORD PTR [R13+R12*1]
            add RBP,R13
            lea RDI,QWORD PTR [R13+R9*1]
            mov RSI,RBP
            mov DWORD PTR [RSP+112],EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [RBP],XMM0
            mov DWORD PTR [RBP+16],EAX
.L_4051af:

            add R15D,1
            add R12,20
            cmp R15D,DWORD PTR [RSP+16]
            jne .L_4050f0

            jmp .L_404e41
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4051d0:

            cmp R15D,EAX
            je .L_4051af

            mov EDX,R15D
            sub EDX,EAX
            lea R10,QWORD PTR [RDX+RDX*4]
            mov EDX,EAX
            add EAX,1
            lea RBP,QWORD PTR [RDX+RDX*4]
            lea R9,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [R10*4]
            lea RDI,QWORD PTR [RBP*4]
            shl R9,2
            mov QWORD PTR [RSP+24],RDI
            lea RBP,QWORD PTR [R14+RDI*1]
            jmp .L_40512e
.L_40520d:

            xor EBX,EBX
            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov DWORD PTR [RSP+84],1
            xor R9D,R9D
            jmp .L_404c5c
.L_405225:

            xor R10D,R10D
            xor R8D,R8D
            jmp .L_404cc8
.L_405230:

            call __stack_chk_fail@PLT
.L_405235:

            lea RCX,QWORD PTR [RIP+.L_43e860]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e7a0]
            mov EDX,1739
            call __assert_fail@PLT
.L_405254:

            lea RCX,QWORD PTR [RIP+.L_43e860]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e642]
            mov EDX,1738
            call __assert_fail@PLT
.L_405273:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405280:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_40528e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+178],0
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+28],EDX
            mov QWORD PTR [RSP+8],RCX
            jne .L_405402

            mov EAX,DWORD PTR [RSP+4]
            lea R12D,DWORD PTR [RAX+1]
            cmp R12D,DWORD PTR [RSP+28]
            jae .L_4053e3

            mov EAX,R12D
            mov R15,RDI
            lea RBP,QWORD PTR [RAX+RAX*4]
            shl RBP,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4052e0:

            cmp DWORD PTR [RSP+4],R12D
            lea EAX,DWORD PTR [R12+1]
            mov DWORD PTR [RSP+24],EAX
            jae .L_4053cf

            lea EAX,DWORD PTR [R12-1]
            mov R13D,R12D
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [RDX*4]
            jmp .L_40531d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405310:

            sub R14,20
            cmp EBX,DWORD PTR [RSP+4]
            mov R13D,EBX
            je .L_40533a
.L_40531d:

            mov RDI,QWORD PTR [R15+200]
            mov RAX,QWORD PTR [RSP+8]
            lea EBX,DWORD PTR [R13-1]
            lea RSI,QWORD PTR [RDI+RBP*1]
            add RDI,R14
            call RAX

            test EAX,EAX
            jg .L_405310
.L_40533a:

            cmp R12D,R13D
            je .L_4053cf

            mov EDX,DWORD PTR [RSP+24]
            mov EAX,EDX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_405363

            cmp DWORD PTR [R15+124],2
            je .L_405363

            mov ESI,R13D
            mov RDI,R15
            call .L_401f60
.L_405363:

            mov RAX,QWORD PTR [R15+200]
            lea ECX,DWORD PTR [R13+1]
            sub R12D,R13D
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov EDX,DWORD PTR [RAX+RBP*1+16]
            movdqu XMM0,XMMWORD PTR [RAX+RBP*1]
            lea RDI,QWORD PTR [RAX+RCX*4]
            mov DWORD PTR [RSP+48],EDX
            mov EDX,R13D
            lea R9,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+R12*4]
            movaps XMMWORD PTR [RSP+32],XMM0
            lea RBX,QWORD PTR [R9*4]
            shl RDX,2
            mov QWORD PTR [RSP+16],R9
            lea RSI,QWORD PTR [RAX+RBX*1]
            call memmove@PLT

            mov RAX,QWORD PTR [R15+200]
            mov R9,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+48]
            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RAX+R9*4],XMM0
            mov DWORD PTR [RAX+RBX*1+16],EDX
.L_4053cf:

            add RBP,20
            mov R12D,DWORD PTR [RSP+24]
            cmp DWORD PTR [RSP+28],R12D
            jne .L_4052e0
.L_4053e3:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_405421

            add RSP,72
.L_4053f7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_405402:

            lea RCX,QWORD PTR [RIP+.L_43e7e0]
            lea RSI,QWORD PTR [RIP+.L_43e5f8]
            lea RDI,QWORD PTR [RIP+.L_43e659]
            mov EDX,1760
            call __assert_fail@PLT
.L_405421:

            call __stack_chk_fail@PLT
.L_405426:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405430:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov R12,RCX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+296]
            test RAX,RAX
            je .L_40545b

            mov RDI,QWORD PTR [RDI+288]
            call RAX
.L_40545b:

            test RBP,RBP
            je .L_405480

            mov QWORD PTR [RBX+280],RBP
            mov QWORD PTR [RBX+288],R13
            mov QWORD PTR [RBX+296],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_405480:

            mov QWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+296],0
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4054ac:

            nop
            nop
            nop
            nop
.L_4054b0:

            push R12
            push RBP
            mov R8,RDX
            push RBX
            mov R9,RCX
            mov RBX,RDI
            mov R12,RSI
            mov ECX,100
            mov EDX,1
            sub RSP,112
.L_4054ce:

            mov ESI,100
            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call __vsnprintf_chk@PLT

            mov RDX,RBP
            mov RCX,QWORD PTR [RBX+288]
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            test EAX,EAX
            setne AL
            mov RDX,QWORD PTR [RSP+104]
            xor RDX,QWORD PTR FS:[40]
            jne .L_405522

            add RSP,112
.L_40551d:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_405522:

            call __stack_chk_fail@PLT
.L_405527:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405530:

            mov RAX,QWORD PTR [RIP+.L_6572b8]
            test RAX,RAX
            je .L_405570

            push RBX
            nop
            nop
            nop
.L_405540:

            mov RDI,QWORD PTR [RAX+8]
            mov RBX,QWORD PTR [RAX]
            call free@PLT

            mov RDI,QWORD PTR [RIP+.L_6572b8]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RIP+.L_6572b8],RBX
            mov RAX,RBX
            jne .L_405540

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405570:

            ret 
.L_405572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405580:

            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_43f0c0]
            mov RBP,RDI
            sub RSP,8
.L_405594:

            mfence 
            mov R12,QWORD PTR [RIP+.L_6572b8]
            test R12,R12
            je .L_405602

            movzx EAX,BYTE PTR [RBP]
            mov R13,R12
            movsx R8D,BYTE PTR [RBX+RAX*1]
            mov R9D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
.L_4055b8:

            mov RDX,QWORD PTR [R13+8]
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_405668

            cmp EAX,R8D
            jne .L_4055f9

            mov RCX,RBP
            jmp .L_4055dc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4055d8:

            cmp EAX,EDI
            jne .L_4055f9
.L_4055dc:

            add RCX,1
            movzx ESI,BYTE PTR [RCX]
            add RDX,1
            movzx EAX,BYTE PTR [RDX]
            movsx EDI,BYTE PTR [RBX+RSI*1]
            test AL,AL
            mov ESI,EDI
            jne .L_4055d8
.L_4055f4:

            test SIL,SIL
            je .L_405655
.L_4055f9:

            mov R13,QWORD PTR [R13]
            test R13,R13
            jne .L_4055b8
.L_405602:

            mov ESI,16
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_405655

            mov QWORD PTR [RAX],R12
            mov RDI,RBP
            call strdup@PLT

            mov QWORD PTR [R13+8],RAX
            movzx EDX,BYTE PTR [RAX]
            test DL,DL
            je .L_405642

            nop
.L_405630:

            movzx EDX,BYTE PTR [RBX+RDX*1]
            add RAX,1
            mov BYTE PTR [RAX-1],DL
            movzx EDX,BYTE PTR [RAX]
            test DL,DL
            jne .L_405630
.L_405642:

            mov RAX,R12
            lock cmpxchg QWORD PTR [RIP+.L_6572b8],R13
            jne .L_40567b

            test R12,R12
            je .L_40566d
.L_405655:

            add RSP,8
.L_405659:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405668:

            mov ESI,R9D
            jmp .L_4055f4
.L_40566d:

            lea RDI,QWORD PTR [RIP+.L_405530]
            call .L_43e2d0

            jmp .L_405655
.L_40567b:

            mov RDI,QWORD PTR [R13+8]
            call free@PLT

            mov RDI,R13
            call free@PLT

            jmp .L_405594
.L_405691:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4056a0:

            lea RDI,QWORD PTR [RIP+.L_43f07c]
            sub RSP,8
            call getenv@PLT

            xor EDX,EDX
            test RAX,RAX
            je .L_4056cc

            lea RSI,QWORD PTR [RIP+.L_43f087]
            mov RDI,RAX
            call strstr@PLT

            test RAX,RAX
            setne DL
.L_4056cc:

            and EDX,1
            add EDX,EDX
            or EDX,1
            mov DWORD PTR [RIP+.L_6572a8],EDX
            add RSP,8
            ret 
.L_4056df:

            nop
.L_4056e0:

            sub RSP,24
.L_4056e4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_405740

            test ESI,ESI
            je .L_405740

            movzx ECX,BYTE PTR [RDI]
            test CL,CL
            je .L_405742

            mov EAX,4
            cmp ESI,4
            lea R8,QWORD PTR [RSP+3]
            cmova ESI,EAX
            mov EAX,1
            jmp .L_40572d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405720:

            add RAX,1
            movzx ECX,BYTE PTR [RDI+RAX*1-1]
            test CL,CL
            je .L_405760
.L_40572d:

            cmp EAX,ESI
            mov BYTE PTR [R8+RAX*1],CL
            mov EDX,EAX
            jb .L_405720

            jmp .L_40576a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405740:

            xor EAX,EAX
.L_405742:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_405777

            add RSP,24
.L_405756:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405760:

            mov EAX,EDX
            add EDX,1
            mov BYTE PTR [RSP+RAX*1+4],32
.L_40576a:

            cmp EDX,4
            jne .L_405760

            mov EAX,DWORD PTR [RSP+4]
            bswap EAX
            jmp .L_405742
.L_405777:

            call __stack_chk_fail@PLT
.L_40577c:

            nop
            nop
            nop
            nop
.L_405780:

            mov EAX,EDI
            mov BYTE PTR [RSI+3],DIL
            shr EAX,24
            mov BYTE PTR [RSI],AL
            mov EAX,EDI
            shr EAX,16
            mov BYTE PTR [RSI+1],AL
            mov EAX,EDI
            mov BYTE PTR [RSI+2],AH
            ret 
.L_405799:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4057a0:

            test RDI,RDI
            je .L_4057e0

            test ESI,ESI
            je .L_4057e0

            movzx ECX,BYTE PTR [RDI]
            xor EAX,EAX
            test CL,CL
            je .L_4057e2

            lea ESI,DWORD PTR [RCX-65]
            lea EDX,DWORD PTR [RCX+32]
            cmp SIL,26
            cmovae EDX,ECX
            cmp DL,108
            je .L_4057e8

            cmp DL,114
            je .L_4057f0

            cmp DL,116
            je .L_405800

            cmp DL,98
            mov EDX,7
            cmove EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4057e0:

            xor EAX,EAX
.L_4057e2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4057e8:

            mov EAX,4
            ret 
          .byte 0x66
          .byte 0x90
.L_4057f0:

            mov EAX,5
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405800:

            mov EAX,6
            ret 
.L_405806:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405810:

            sub EDI,4
            lea RAX,QWORD PTR [RIP+.L_43f0a0]
            cmp EDI,3
            ja .L_40582d

            lea RAX,QWORD PTR [RIP+.L_43f1c0]
            movsxd RDI,EDI
            lea RAX,QWORD PTR [RAX+RDI*4]
.L_40582d:

            ret 
.L_40582f:

            nop
.L_405830:

            push RBX
            sub RSP,80
.L_405835:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test ESI,ESI
            je .L_4058b0

            test RDI,RDI
            je .L_4058b0

            cmp BYTE PTR [RDI],0
            je .L_4058b0

            test ESI,ESI
            js .L_4058b8

            cmp ESI,62
            jle .L_4058a8

            mov EDX,63
            mov EBX,63
.L_405866:

            mov R8,RSP
            mov RSI,RDI
            mov ECX,64
            mov RDI,R8
            call __memcpy_chk@PLT

            mov RDI,RAX
            mov BYTE PTR [RSP+RBX*1],0
            call .L_405580
.L_405885:

            test RAX,RAX
            je .L_4058b0

            mov RAX,QWORD PTR [RAX+8]
.L_40588e:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4058bf

            add RSP,80
.L_4058a2:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4058a8:

            movsxd RBX,ESI
            mov RDX,RBX
            jmp .L_405866
.L_4058b0:

            xor EAX,EAX
            jmp .L_40588e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4058b8:

            call .L_405580

            jmp .L_405885
.L_4058bf:

            call __stack_chk_fail@PLT
.L_4058c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4058d0:

            mov RAX,RDI
            ret 
.L_4058d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4058e0:

            push RBX
            mfence 
            mov RBX,QWORD PTR [RIP+.L_6572b0]
            test RBX,RBX
            je .L_4058f8

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4058f8:

            xor ESI,ESI
            xor EDI,EDI
            call setlocale@PLT

            mov ESI,4294967295
            mov RDI,RAX
            call .L_405830

            mov RDX,RAX
            mov RAX,RBX
            lock cmpxchg QWORD PTR [RIP+.L_6572b0],RDX
            mov RBX,QWORD PTR [RIP+.L_6572b0]
            mov RAX,RBX
            pop RBX
            ret 
.L_405929:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405930:

            xor EAX,EAX
            test EDI,EDI
            je .L_40597c

            mov EAX,EDI
            and EAX,3755991007
            or EAX,2105376
            cmp EAX,1365336419
            je .L_4059d0

            jbe .L_405980

            cmp EAX,1400468069
            je .L_405966

            jbe .L_405970

            cmp EAX,1400468074
            je .L_405966

            cmp EAX,1400468078
            jne .L_4059a0
.L_405966:

            mov EAX,1400468067
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405970:

            cmp EAX,1365336425
            jne .L_4059a0

            mov EAX,1516858984
.L_40597c:

            ret 
          .byte 0x66
          .byte 0x90
.L_405980:

            cmp EAX,1132032627
            je .L_4059c0

            jb .L_4059a0

            lea EDX,DWORD PTR [RAX-1281455206]
            cmp EDX,1
            ja .L_4059a0

            mov EAX,1281455214
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4059a0:

            and EDI,3233857728
            mov EDX,1517976186
            or EDI,2105376
            cmp EDI,1080057952
            cmovne EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4059c0:

            mov EAX,1132032620
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4059d0:

            mov EAX,1131376756
            ret 
.L_4059d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4059e0:

            sub RSP,8
            call .L_4056e0

            add RSP,8
            mov EDI,EAX
            jmp .L_405930
.L_4059f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405a00:

            mov EAX,EDI
            ret 
.L_405a03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405a10:

            cmp EDI,1298494063
            je .L_405a52

            jbe .L_405a60

            cmp EDI,1349020784
            je .L_405a52

            ja .L_405ac0

            cmp EDI,1315663727
            je .L_405a52

            jbe .L_405b50

            cmp EDI,1348562029
            je .L_405a52

            cmp EDI,1349020777
            je .L_405a52

            cmp EDI,1332898664
            jne .L_405aea
.L_405a52:

            mov EAX,5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405a60:

            cmp EDI,1215655527
            je .L_405a52

            ja .L_405a90

            cmp EDI,1098018153
            je .L_405a52

            jbe .L_405af0

            cmp EDI,1131442804
            je .L_405a52

            cmp EDI,1214603890
            je .L_405a52

            cmp EDI,1098281844
            jne .L_405aea

            jmp .L_405a52
          .byte 0x66
          .byte 0x90
.L_405a90:

            cmp EDI,1298230884
            je .L_405a52

            jbe .L_405b30

            cmp EDI,1298493028
            je .L_405a52

            cmp EDI,1298494051
            je .L_405a52

            cmp EDI,1298230889
            jne .L_405aea

            jmp .L_405a52
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405ac0:

            cmp EDI,1398893938
            je .L_405a52

            jbe .L_405b10

            cmp EDI,1400468067
            je .L_405a52

            cmp EDI,1416126817
            je .L_405a52

            cmp EDI,1398895202
            je .L_405a52
.L_405aea:

            mov EAX,4
            ret 
.L_405af0:

            cmp EDI,1097100397
            je .L_405a52

            cmp EDI,1098015074
            jne .L_405aea

            jmp .L_405a52
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405b10:

            cmp EDI,1349021304
            je .L_405a52

            cmp EDI,1349678185
            jne .L_405aea

            jmp .L_405a52
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405b30:

            cmp EDI,1265131890
            je .L_405a52

            cmp EDI,1283023977
            jne .L_405aea

            jmp .L_405a52
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405b50:

            cmp EDI,1315009122
            je .L_405a52

            cmp EDI,1315070324
            jne .L_405aea

            jmp .L_405a52
.L_405b6d:

            nop
            nop
            nop
.L_405b70:

            push R15
            push R14
            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            sub RSP,24
.L_405b81:

            test RSI,RSI
            je .L_405c48

            test R8D,R8D
            mov R15D,R8D
            mov R14,RCX
            mov R13,RDX
            mov RBX,RSI
            mov RBP,RDI
            je .L_405bb4

            test RDX,RDX
            sete R12B
            test RCX,RCX
            sete AL
            and R12B,AL
            jne .L_405ca8
.L_405bb4:

            call pthread_mutex_lock@PLT

            mov R12D,DWORD PTR [RBP+40]
            mov RCX,QWORD PTR [RBP+48]
            test R12D,R12D
            je .L_405cf0

            cmp QWORD PTR [RCX],RBX
            je .L_405c60

            lea EDX,DWORD PTR [R12-1]
            lea RAX,QWORD PTR [RCX+24]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDI,QWORD PTR [RAX+RDX*8]
            jmp .L_405bfd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405bf0:

            mov RSI,RAX
            add RAX,24
            cmp RBX,QWORD PTR [RAX-24]
            je .L_405c68
.L_405bfd:

            cmp RAX,RDI
            jne .L_405bf0
.L_405c02:

            mov EAX,DWORD PTR [RBP+44]
            cmp R12D,EAX
            jb .L_405d08

            mov EDX,EAX
            shr EDX,1
            lea R15D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBP+56]
            cmp RCX,RDX
            je .L_405de8

            cmp R15D,178956969
            ja .L_405c36

            cmp EAX,R15D
            jbe .L_405dab
.L_405c36:

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405c40:

            mov RDI,RBP
            call pthread_mutex_unlock@PLT
.L_405c48:

            add RSP,24
.L_405c4c:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405c60:

            mov RSI,RCX
            nop
            nop
            nop
            nop
            nop
.L_405c68:

            test R15D,R15D
            je .L_405d90

            mov R15,QWORD PTR [RSI+16]
            mov R12,QWORD PTR [RSI+8]
            mov RDI,RBP
            mov QWORD PTR [RSI],RBX
            mov QWORD PTR [RSI+8],R13
            mov QWORD PTR [RSI+16],R14
            call pthread_mutex_unlock@PLT

            test R15,R15
            je .L_405da0

            mov RDI,R12
            mov R12D,1
            call R15

            jmp .L_405c48
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405ca8:

            call pthread_mutex_lock@PLT

            mov ESI,DWORD PTR [RBP+40]
            test ESI,ESI
            je .L_405c40

            mov RDI,QWORD PTR [RBP+48]
            cmp RBX,QWORD PTR [RDI]
            je .L_405d3e

            lea EDX,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [RDI+24]
            mov RSI,RDX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RCX,QWORD PTR [RAX+RDX*8]
            jmp .L_405ce5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405cd8:

            mov RDX,RAX
            add RAX,24
            cmp RBX,QWORD PTR [RAX-24]
            je .L_405d48
.L_405ce5:

            cmp RAX,RCX
            jne .L_405cd8

            jmp .L_405c40
          .byte 0x90
.L_405cf0:

            test RCX,RCX
            jne .L_405c02

            lea RAX,QWORD PTR [RBP+56]
            mov DWORD PTR [RBP+44],2
            mov QWORD PTR [RBP+48],RAX
.L_405d08:

            lea EDX,DWORD PTR [R12+1]
            mov RAX,QWORD PTR [RBP+48]
            mov DWORD PTR [RBP+40],EDX
            lea RDX,QWORD PTR [R12+R12*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
.L_405d1c:

            xor R12D,R12D
            test RAX,RAX
            je .L_405c40

            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],R13
            mov R12D,1
            mov QWORD PTR [RAX+16],R14
            jmp .L_405c40
.L_405d3e:

            mov RDX,RDI
            sub ESI,1
            nop
            nop
            nop
            nop
.L_405d48:

            mov EAX,ESI
            mov RBX,QWORD PTR [RDX+8]
            mov R13,QWORD PTR [RDX+16]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RDI+RAX*8]
            mov RDI,RBP
            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RDX],XMM0
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RDX+16],RAX
            mov DWORD PTR [RBP+40],ESI
            call pthread_mutex_unlock@PLT

            test R13,R13
            je .L_405c48

            mov RDI,RBX
            call R13

            jmp .L_405c48
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405d90:

            mov RDI,RBP
            xor R12D,R12D
            call pthread_mutex_unlock@PLT

            jmp .L_405c48
.L_405da0:

            mov R12D,1
            jmp .L_405c48
.L_405dab:

            mov EAX,R15D
            mov RDI,RCX
            lea RSI,QWORD PTR [RAX+RAX*2]
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_405c36
.L_405dca:

            mov EAX,DWORD PTR [RBP+40]
            mov QWORD PTR [RBP+48],R8
            mov DWORD PTR [RBP+44],R15D
            lea EDX,DWORD PTR [RAX+1]
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov DWORD PTR [RBP+40],EDX
            lea RAX,QWORD PTR [R8+RAX*8]
            jmp .L_405d1c
.L_405de8:

            mov EDI,R15D
            mov ESI,24
            mov QWORD PTR [RSP+8],RCX
            call calloc@PLT

            test RAX,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_405c36

            mov EDX,R12D
            mov RSI,RCX
            mov RDI,RAX
            imul RDX,RDX,24
            call memcpy@PLT

            mov R8,RAX
            jmp .L_405dca
.L_405e1f:

            nop
.L_405e20:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
.L_405e2c:

            call pthread_mutex_lock@PLT

            mov ECX,DWORD PTR [RBP+40]
            test ECX,ECX
            je .L_405e6a

            mov RDX,QWORD PTR [RBP+48]
            cmp QWORD PTR [RDX],RBX
            je .L_405e80

            lea RAX,QWORD PTR [RDX+24]
            lea EDX,DWORD PTR [RCX-1]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RCX,QWORD PTR [RAX+RDX*8]
            jmp .L_405e65
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405e58:

            mov RDX,RAX
            add RAX,24
            cmp RBX,QWORD PTR [RAX-24]
            je .L_405e80
.L_405e65:

            cmp RCX,RAX
            jne .L_405e58
.L_405e6a:

            mov RDI,RBP
            xor EBX,EBX
            call pthread_mutex_unlock@PLT

            add RSP,8
.L_405e78:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_405e80:

            mov RBX,QWORD PTR [RDX+8]
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_405e96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ea0:

            mov DWORD PTR [RDI],1
            mov DWORD PTR [RSI],3
            mov DWORD PTR [RDX],2
            ret 
.L_405eb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ec0:

            lea RAX,QWORD PTR [RIP+.L_43f0a8]
            ret 
.L_405ec8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ed0:

            imul ESI,ESI,100
            xor EAX,EAX
            imul EDI,EDI,10000
            add EDX,ESI
            add EDX,EDI
            cmp EDX,10302
            setbe AL
            ret 
.L_405ee9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ef0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call .L_401950

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_405f05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405f10:

            test ESI,ESI
            push R12
            push RBP
            push RBX
.L_405f16:

            mov R12,QWORD PTR [RDX]
            je .L_406008

            mov RDI,R12
            mov RBX,RDX
            mov EBP,ESI
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            call .L_401d50

            lea R8,QWORD PTR [RIP+.L_6572c0]
            test RAX,RAX
            cmove RAX,R8
            movzx ESI,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [RAX+3]
            mov EDI,ESI
            shl ECX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RCX*1]
            movzx ECX,BYTE PTR [RAX+2]
            shl ECX,8
            add ECX,ESI
            add ECX,EDX
            cmp ECX,1953658213
            je .L_40613c

            jle .L_406128

            cmp ECX,1953784678
            jne .L_406018

            movzx ECX,BYTE PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX+5]
            shl ECX,8
            lea ECX,DWORD PTR [RCX+RDX*1-1]
            mov RDX,R8
            cmp CX,1
            ja .L_40602b

            movzx ECX,BYTE PTR [RAX+8]
            movzx EDX,BYTE PTR [RAX+9]
            mov EDI,DWORD PTR [RBX+8]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+10]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RAX+11]
            add EDX,ECX
            cmp EDI,EDX
            jb .L_406118
.L_405fcc:

            movzx EDX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EDX,24
            shl ECX,16
            lea EDX,DWORD PTR [RDX+RCX*1]
            movzx ECX,BYTE PTR [R8+2]
            shl ECX,8
            add ECX,EDX
            movzx EDX,BYTE PTR [R8+3]
            add EDX,ECX
            add RAX,RDX
            test EDX,EDX
            lea RDX,QWORD PTR [RIP+.L_6572c0]
            cmovne RDX,RAX
            jmp .L_40602b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406008:

            pop RBX
.L_406009:

            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_401c30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406018:

            cmp ECX,1954115633
            je .L_40613c
.L_406024:

            lea RDX,QWORD PTR [RIP+.L_6572c0]
.L_40602b:

            movzx ECX,BYTE PTR [RDX+4]
            movzx EDI,BYTE PTR [RDX+5]
            mov R8D,EBP
            mov EAX,EBP
            mov ESI,EBP
            shr R8D,24
            shr EAX,16
            shr ESI,8
            shl ECX,8
            add ECX,EDI
            test CX,CX
            movzx R9D,CX
            je .L_406148

            shl EAX,16
            shl R8D,24
            shl ESI,8
            and EAX,16711680
            movzx EBP,BPL
            add EAX,R8D
            movzx R8D,SI
            add R8D,EAX
            lea RAX,QWORD PTR [RDX+12]
            xor EDX,EDX
            add R8D,EBP
            jmp .L_406090
          .byte 0x66
          .byte 0x90
.L_406080:

            add EDX,1
            add RAX,16
            cmp R9D,EDX
            je .L_406148
.L_406090:

            movzx ESI,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            mov EDI,ESI
            shl ECX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RCX*1]
            movzx ECX,BYTE PTR [RAX+2]
            shl ECX,8
            add ECX,ESI
            movzx ESI,BYTE PTR [RAX+3]
            add ECX,ESI
            cmp R8D,ECX
            jne .L_406080

            cmp EDX,R9D
            lea RDX,QWORD PTR [RIP+.L_6572c0]
            cmovae RAX,RDX
.L_4060c4:

            movzx ECX,BYTE PTR [RAX+12]
            movzx EDX,BYTE PTR [RAX+13]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+14]
            movzx ESI,BYTE PTR [RAX+9]
            shl EDX,8
            shl ESI,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RAX+15]
            add EDX,ECX
            movzx ECX,BYTE PTR [RAX+8]
            mov EDI,ECX
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RSI*1]
            movzx ESI,BYTE PTR [RAX+10]
            movzx EAX,BYTE PTR [RAX+11]
            mov RDI,QWORD PTR [RBX]
            pop RBX
.L_406105:

            pop RBP
            pop R12
            shl ESI,8
            add ESI,ECX
            add ESI,EAX
            jmp .L_401b90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406118:

            lea R8,QWORD PTR [RAX+RDI*4+12]
            jmp .L_405fcc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406128:

            cmp ECX,65536
            je .L_40613c

            cmp ECX,1330926671
            jne .L_406024
.L_40613c:

            mov RDX,RAX
            jmp .L_40602b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406148:

            lea RAX,QWORD PTR [RIP+.L_6572c0]
            jmp .L_4060c4
.L_406154:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406160:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,8
.L_406170:

            test RDI,RDI
            je .L_4061e8

            mov R12,RDI
            mov ESI,184
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4061e8

            lea RDI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX],1
            xor ESI,ESI
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            movabs RAX,-4294967296
            mov QWORD PTR [RBX+148],RAX
            mov QWORD PTR [RBX+120],R12
            mov RAX,RBX
            mov QWORD PTR [RBX+128],R13
            mov QWORD PTR [RBX+136],RBP
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            add RSP,8
.L_4061de:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4061e8:

            test RBP,RBP
            je .L_406210

            lea RBX,QWORD PTR [RIP+.L_6571e0]
            mov RDI,R13
            call RBP
.L_4061f9:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406210:

            lea RBX,QWORD PTR [RIP+.L_6571e0]
            jmp .L_4061f9
.L_406219:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406220:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_406231:

            test RDI,RDI
            je .L_406548
.L_40623a:

            call .L_401c30

            mov RDI,RAX
            mov R12,RAX
            xor R13D,R13D
            call .L_401c30

            mov RBP,RAX
.L_406250:

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d50

            mov RDI,RBP
            mov RBX,RAX
            call .L_401d40

            mov EAX,EAX
            add RAX,RBX
            jb .L_406879

            test RBX,RBX
            je .L_4062f0

            cmp RAX,RBX
            jae .L_406300
.L_40627e:

            mov RDI,RBP
            call .L_401950

            mov RDI,R12
            call .L_401950

            call .L_401c20

            mov R12,RAX
.L_406296:

            mov ESI,16
            mov EDI,1
            call calloc@PLT

            mov RSI,RAX
            lea RAX,QWORD PTR [RIP+.L_6571e0]
            test RSI,RSI
            je .L_4062dc

            lea RDX,QWORD PTR [RIP+.L_405ef0]
            lea RDI,QWORD PTR [RIP+.L_405f10]
            mov QWORD PTR [RSI],R12
            mov DWORD PTR [RSI+8],R14D
            call .L_406160

            mov EDX,DWORD PTR [RAX+112]
            test EDX,EDX
            jne .L_4062dc

            mov DWORD PTR [RAX+144],R14D
.L_4062dc:

            add RSP,40
.L_4062e0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4062eb:

            test R8D,R8D
            jne .L_40627e
.L_4062f0:

            mov RDI,RBP
            call .L_401950

            jmp .L_406296
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406300:

            mov RDX,RAX
            sub RDX,RBX
            cmp EDX,3
            mov R10D,EDX
            jbe .L_40627e

            movzx ECX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EDX,ECX
            cmp EDX,1953658213
            je .L_4064dc

            jle .L_4064c8

            cmp EDX,1953784678
            jne .L_406530

            lea R9,QWORD PTR [RBX+4]
            cmp RBX,R9
            ja .L_40627e

            cmp RAX,R9
            jb .L_40627e

            mov RDX,RAX
            sub RDX,R9
            cmp EDX,3
            jbe .L_40627e

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            lea EDX,DWORD PTR [RDX+RCX*1-1]
            cmp DX,1
            ja .L_4062f0

            lea R15,QWORD PTR [RBX+8]
            cmp RBX,R15
            ja .L_40627e

            cmp RAX,R15
            jb .L_40627e

            mov RDX,RAX
            sub RDX,R15
            cmp EDX,3
            jbe .L_40627e

            movzx ECX,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            shl ECX,24
            shl EDX,16
            lea ECX,DWORD PTR [RCX+RDX*1]
            movzx EDX,BYTE PTR [RBX+10]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+11]
            add EDX,ECX
            cmp EDX,1073741822
            ja .L_40627e

            lea RDI,QWORD PTR [RBX+12]
            cmp RBX,RDI
            mov QWORD PTR [RSP+16],RDI
            ja .L_40627e

            cmp RAX,RDI
            jb .L_40627e

            mov RCX,RAX
            lea ESI,DWORD PTR [RDX*4]
            sub RCX,RDI
            cmp ESI,ECX
            ja .L_40627e

            test EDX,EDX
            je .L_4062f0

            cmp ECX,3
            jbe .L_40627e

            lea RCX,QWORD PTR [RBX+16]
            sub EDX,1
            mov DWORD PTR [RSP+12],0
            lea R11,QWORD PTR [R15+RDX*4+8]
            mov QWORD PTR [RSP+24],RCX
            mov RSI,RCX
            mov RCX,RDI
.L_406440:

            movzx EDI,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EDI,24
            shl EDX,16
            lea EDI,DWORD PTR [RDI+RDX*1]
            movzx EDX,BYTE PTR [RCX+2]
            shl EDX,8
            add EDX,EDI
            movzx EDI,BYTE PTR [RCX+3]
            add EDX,EDI
            je .L_406568

            mov EDX,EDX
            add RDX,RBX
            jb .L_406475

            cmp RAX,RDX
            jae .L_4065c0
.L_406475:

            mov EDI,DWORD PTR [RSP+12]
            cmp EDI,2
            ja .L_406590

            add EDI,1
            test R13B,R13B
            mov DWORD PTR [RSP+12],EDI
            jne .L_406555

            nop
            nop
            nop
            nop
            nop
            nop
.L_406498:

            xor ESI,ESI
            mov RDI,R12
            mov R13D,1
            call .L_401d70

            mov RDI,R12
            mov RBX,RAX
            call .L_401d40

            test RBX,RBX
            jne .L_406250

            jmp .L_40627e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4064c8:

            cmp EDX,65536
            je .L_4064dc

            cmp EDX,1330926671
            jne .L_4062f0
.L_4064dc:

            cmp R10D,11
            jbe .L_40627e

            lea RDX,QWORD PTR [RBX+12]
            cmp RBX,RDX
            ja .L_40627e

            cmp RAX,RDX
            jb .L_40627e

            movzx ECX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            sub RAX,RDX
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            shl ECX,4
            cmp ECX,EAX
            ja .L_40627e

            mov RDI,RBP
            call .L_401950

            jmp .L_406296
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406530:

            cmp EDX,1954115633
            je .L_4064dc

            mov RDI,RBP
            call .L_401950

            jmp .L_406296
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406548:

            call .L_401c20

            mov RDI,RAX
            jmp .L_40623a
.L_406555:

            mov BYTE PTR [RCX],0
            mov BYTE PTR [RCX+1],0
            mov BYTE PTR [RCX+2],0
            mov BYTE PTR [RCX+3],0
            nop
            nop
            nop
            nop
.L_406568:

            cmp R11,RSI
            je .L_406618
.L_406571:

            cmp RBX,RSI
            ja .L_40657b

            cmp RAX,RSI
            jae .L_4065a0
.L_40657b:

            cmp DWORD PTR [RSP+12],0
            je .L_40627e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406590:

            test R13B,R13B
            je .L_406498

            jmp .L_40627e
          .byte 0x66
          .byte 0x90
.L_4065a0:

            mov RDX,RAX
            add RCX,4
            sub RDX,RSI
            add RSI,4
            cmp EDX,3
            jbe .L_40657b

            jmp .L_406440
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4065c0:

            mov RDI,RAX
            sub RDI,RDX
            cmp EDI,11
            jbe .L_406475

            lea RDI,QWORD PTR [RDX+12]
            cmp RBX,RDI
            ja .L_406475

            cmp RAX,RDI
            jb .L_406475

            movzx R8D,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl R8D,8
            add EDX,R8D
            mov R8,RAX
            movzx EDX,DX
            sub R8,RDI
            shl EDX,4
            cmp EDX,R8D
            ja .L_406475

            cmp R11,RSI
            jne .L_406571

            nop
            nop
            nop
            nop
            nop
.L_406618:

            mov ECX,DWORD PTR [RSP+12]
            test ECX,ECX
            je .L_4062f0

            movzx ECX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EDX,16
            lea ECX,DWORD PTR [RCX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EDX,ECX
            cmp EDX,1953658213
            je .L_4067d8

            jle .L_4067c4

            cmp EDX,1953784678
            jne .L_40681c

            cmp RBX,R9
            ja .L_40627e

            cmp RAX,R9
            jb .L_40627e

            mov RDX,RAX
            sub RDX,R9
            cmp EDX,3
            jbe .L_40627e

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            lea EDX,DWORD PTR [RDX+RCX*1-1]
            cmp DX,1
            ja .L_4062f0

            cmp RBX,R15
            ja .L_40627e

            cmp RAX,R15
            jb .L_40627e

            mov RDX,RAX
            sub RDX,R15
            cmp EDX,3
            jbe .L_40627e

            movzx EDX,BYTE PTR [RBX+8]
            movzx ECX,BYTE PTR [RBX+9]
            shl EDX,24
            shl ECX,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+10]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RBX+11]
            add EDX,ECX
            cmp EDX,1073741822
            ja .L_40627e

            mov R11,QWORD PTR [RSP+16]
            cmp RBX,R11
            ja .L_40627e

            cmp RAX,R11
            jb .L_40627e

            mov RCX,RAX
            lea ESI,DWORD PTR [RDX*4]
            sub RCX,R11
            cmp ESI,ECX
            ja .L_40627e

            test EDX,EDX
            je .L_4062f0

            cmp ECX,3
            jbe .L_40627e

            sub EDX,1
            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R11
            lea R9,QWORD PTR [R15+RDX*4+8]
            xor R8D,R8D
.L_406737:

            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            shl EDX,24
            shl ECX,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RSI+2]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RSI+3]
            add EDX,ECX
            je .L_40678d

            mov EDX,EDX
            add RDX,RBX
            jb .L_406767

            cmp RAX,RDX
            jae .L_40682a
.L_406767:

            cmp R8D,2
            ja .L_40627e

            add R8D,1
            test R13B,R13B
            je .L_40627e

            mov BYTE PTR [RSI],0
            mov BYTE PTR [RSI+1],0
            mov BYTE PTR [RSI+2],0
            mov BYTE PTR [RSI+3],0
.L_40678d:

            cmp R9,RDI
            je .L_4062eb

            cmp RAX,RDI
            jb .L_40627e

            cmp RBX,RDI
            ja .L_40627e

            mov RDX,RAX
            add RSI,4
            sub RDX,RDI
            add RDI,4
            cmp EDX,3
            jbe .L_40627e

            jmp .L_406737
.L_4067c4:

            cmp EDX,65536
            je .L_4067d8

            cmp EDX,1330926671
            jne .L_4062f0
.L_4067d8:

            cmp R10D,11
            jbe .L_40627e

            mov RSI,QWORD PTR [RSP+16]
            cmp RBX,RSI
            ja .L_40627e

            cmp RAX,RSI
            jb .L_40627e

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            sub RAX,RSI
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            shl EDX,4
            cmp EDX,EAX
            jbe .L_4062f0

            jmp .L_40627e
.L_40681c:

            cmp EDX,1954115633
            jne .L_4062f0

            jmp .L_4067d8
.L_40682a:

            mov RCX,RAX
            sub RCX,RDX
            cmp ECX,11
            jbe .L_406767

            lea RCX,QWORD PTR [RDX+12]
            cmp RAX,RCX
            jb .L_406767

            cmp RBX,RCX
            ja .L_406767

            movzx R10D,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            mov R15,RAX
            sub R15,RCX
            shl R10D,8
            add EDX,R10D
            movzx EDX,DX
            shl EDX,4
            cmp EDX,R15D
            jbe .L_40678d

            jmp .L_406767
.L_406879:

            lea RCX,QWORD PTR [RIP+.L_43f400]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_406898:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068a0:

            lea RAX,QWORD PTR [RIP+.L_6571e0]
            ret 
.L_4068a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068b0:

            test RDI,RDI
            je .L_4068c4

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4068c4

            test EAX,EAX
            jle .L_4068d0

            lock add DWORD PTR [RDI],1
.L_4068c4:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4068d0:

            lea RCX,QWORD PTR [RIP+.L_43f3c0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_4068f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406900:

            test RDI,RDI
            je .L_406950

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_406950

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            jle .L_406930

            lock sub DWORD PTR [RDI],1
            je .L_406958

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406930:

            lea RCX,QWORD PTR [RIP+.L_43f380]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_406950:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406958:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBX,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_406a28

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_40697f

            call free@PLT
.L_40697f:

            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],0
.L_40698f:

            mov RDI,RBX
            call pthread_mutex_destroy@PLT

            mov RBX,QWORD PTR [RBP+176]
            test RBX,RBX
            je .L_4069c4

            nop
            nop
            nop
            nop
            nop
.L_4069a8:

            mov RDI,QWORD PTR [RBX]
            mov R12,QWORD PTR [RBX+8]
            call .L_40ad70

            mov RDI,RBX
            mov RBX,R12
            call free@PLT

            test R12,R12
            jne .L_4069a8
.L_4069c4:

            mov RDI,QWORD PTR [RBP+160]
            test RDI,RDI
            je .L_4069e1

            cmp RDI,-1
            je .L_4069e1

            cmp RDI,1
            je .L_4069e1

            call .L_4106d0
.L_4069e1:

            mov RDI,QWORD PTR [RBP+168]
            test RDI,RDI
            je .L_4069fe

            cmp RDI,-1
            je .L_4069fe

            cmp RDI,1
            je .L_4069fe

            call .L_425090
.L_4069fe:

            mov RAX,QWORD PTR [RBP+136]
            test RAX,RAX
            je .L_406a13

            mov RDI,QWORD PTR [RBP+128]
            call RAX
.L_406a13:

            pop RBX
.L_406a14:

            mov RDI,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406a28:

            mov RDI,RBX
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBP+48]
            test EAX,EAX
            je .L_406a76
.L_406a37:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBX
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBP+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBP+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_406a28

            mov RDI,R13
            call R14

            mov RDI,RBX
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBP+48]
            test EAX,EAX
            jne .L_406a37
.L_406a76:

            mov RDI,QWORD PTR [RBP+56]
            cmp RDI,R12
            je .L_406a84

            call free@PLT
.L_406a84:

            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],0
            mov RDI,RBX
            call pthread_mutex_unlock@PLT

            jmp .L_40698f
.L_406aa1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ab0:

            test RDI,RDI
            je .L_406ad8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_406ad8

            sub RSP,8
            test EAX,EAX
            jle .L_406ae0

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406ad8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ae0:

            lea RCX,QWORD PTR [RIP+.L_43f2a0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_406aff:

            nop
.L_406b00:

            test RDI,RDI
            je .L_406b48

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_406b48

            test EAX,EAX
            jle .L_406b20

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406b20:

            lea RCX,QWORD PTR [RIP+.L_43f220]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406b48:

            xor EAX,EAX
            ret 
.L_406b4b:

            nop
            nop
            nop
            nop
            nop
.L_406b50:

            cmp DWORD PTR [RDI],-1
            je .L_406b5c

            mov DWORD PTR [RDI+112],1
.L_406b5c:

            ret 
.L_406b5e:

            nop
            nop
.L_406b60:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_406b64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406b70:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_406b94

            sub RSP,8
            mov RDX,QWORD PTR [RDI+128]
            call RAX

            test RAX,RAX
            je .L_406b90

            add RSP,8
            ret 
.L_406b90:

            add RSP,8
.L_406b94:

            jmp .L_401c20
.L_406b99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ba0:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_406bcc

            sub RSP,8
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+128]
            call RAX

            test RAX,RAX
            je .L_406bc8

            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406bc8:

            add RSP,8
.L_406bcc:

            jmp .L_401c20
.L_406bd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406be0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_406bed

            mov DWORD PTR [RDI+144],ESI
.L_406bed:

            ret 
.L_406bef:

            nop
.L_406bf0:

            mov EAX,DWORD PTR [RDI+144]
            ret 
.L_406bf7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406c00:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_406c0d

            mov DWORD PTR [RDI+148],ESI
.L_406c0d:

            ret 
.L_406c0f:

            nop
.L_406c10:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_406c1d:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_406d50

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1751474532
            call RAX

            test RAX,RAX
            mov RBX,RAX
            je .L_406d50
.L_406c44:

            mov RDI,RBX
            call .L_401c30

            xor ESI,ESI
            mov RBP,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,RBP
            mov R13,RAX
            call .L_401d40

            mov EDX,EAX
            add RDX,R13
            jb .L_406d5d

            test R13,R13
            je .L_406d3a

            cmp EAX,53
            ja .L_406cf0
.L_406c7d:

            mov RDI,RBP
            call .L_401950

            mov RDI,RBX
            call .L_401950

            call .L_401c20

            mov RBX,RAX
.L_406c95:

            mov RDI,RBX
            call .L_401d20

            mov RDI,RBX
            xor ESI,ESI
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_6572c0]
            test RAX,RAX
            mov RDI,RBX
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+18]
            movzx EAX,BYTE PTR [RAX+19]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            lea EDX,DWORD PTR [RAX-16]
            cmp EDX,16369
            mov EDX,1000
            cmovae EAX,EDX
            mov DWORD PTR [R12+148],EAX
            add RSP,8
.L_406ce5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_401950
.L_406cf0:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_406c7d

            movzx EDX,BYTE PTR [R13+12]
            movzx EAX,BYTE PTR [R13+13]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R13+14]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R13+15]
            add EAX,EDX
            cmp EAX,1594834165
            jne .L_406c7d
.L_406d3a:

            mov RDI,RBP
            call .L_401950

            jmp .L_406c95
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406d50:

            call .L_401c20

            mov RBX,RAX
            jmp .L_406c44
.L_406d5d:

            lea RCX,QWORD PTR [RIP+.L_43f400]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_406d7c:

            nop
            nop
            nop
            nop
.L_406d80:

            mov EAX,DWORD PTR [RDI+148]
            test EAX,EAX
            jne .L_406da0

            push RBX
            mov RBX,RDI
            call .L_406c10

            mov EAX,DWORD PTR [RBX+148]
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406da0:

            ret 
.L_406da2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406db0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_406dbd

            mov DWORD PTR [RDI+152],ESI
.L_406dbd:

            ret 
.L_406dbf:

            nop
.L_406dc0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_406dcd:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_406ee0

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1835104368
            call RAX

            test RAX,RAX
            mov RBX,RAX
            je .L_406ee0
.L_406df4:

            mov RDI,RBX
            call .L_401c30

            xor ESI,ESI
            mov RBP,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,RBP
            mov R13,RAX
            call .L_401d40

            mov EDX,EAX
            add RDX,R13
            jb .L_406eed

            test R13,R13
            je .L_406ed0

            cmp EAX,5
            ja .L_406e90
.L_406e2d:

            mov RDI,RBP
            call .L_401950

            mov RDI,RBX
            call .L_401950

            call .L_401c20

            mov RBX,RAX
.L_406e45:

            mov RDI,RBX
            call .L_401d20

            mov RDI,RBX
            xor ESI,ESI
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_6572c0]
            test RAX,RAX
            mov RDI,RBX
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+5]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R12+152],EAX
            add RSP,8
.L_406e84:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_401950
          .byte 0x90
.L_406e90:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_406ed0

            test AX,AX
            jne .L_406e2d

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            cmp AX,20480
            jne .L_406e2d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ed0:

            mov RDI,RBP
            call .L_401950

            jmp .L_406e45
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406ee0:

            call .L_401c20

            mov RBX,RAX
            jmp .L_406df4
.L_406eed:

            lea RCX,QWORD PTR [RIP+.L_43f400]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_406f0c:

            nop
            nop
            nop
            nop
.L_406f10:

            mov EAX,DWORD PTR [RDI+152]
            cmp EAX,-1
            je .L_406f20

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406f20:

            push RBX
            mov RBX,RDI
            call .L_406dc0

            mov EAX,DWORD PTR [RBX+152]
            pop RBX
            ret 
.L_406f31:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f40:

            mov DWORD PTR [RCX],0
            xor EAX,EAX
            ret 
.L_406f49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f50:

            mov RDI,QWORD PTR [RDI+120]
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jmp R9
.L_406f79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f80:

            mov DWORD PTR [R8],0
            xor EAX,EAX
            ret 
.L_406f8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_406f90:

            mov RDI,QWORD PTR [RDI+120]
            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+368]
            mov R9,QWORD PTR [RAX+144]
            jmp R10
.L_406fba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_406fc0:

            mov EAX,DWORD PTR [RDI+136]
            ret 
.L_406fc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406fd0:

            mov EAX,DWORD PTR [RDI+140]
            ret 
.L_406fd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406fe0:

            mov DWORD PTR [R8],0
            mov EAX,1
            mov DWORD PTR [RCX],0
            ret 
.L_406ff3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407000:

            mov DWORD PTR [R8],0
            xor EAX,EAX
            mov DWORD PTR [RCX],0
            ret 
.L_407010:

            xor EAX,EAX
            ret 
.L_407013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407020:

            mov DWORD PTR [R9],0
            xor EAX,EAX
            mov DWORD PTR [R8],0
            ret 
.L_407031:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407040:

            test R8D,R8D
            je .L_407048

            mov BYTE PTR [RCX],0
.L_407048:

            xor EAX,EAX
            ret 
.L_40704b:

            nop
            nop
            nop
            nop
            nop
.L_407050:

            test R8D,R8D
            mov RDI,QWORD PTR [RDI+120]
            je .L_40705c

            mov BYTE PTR [RCX],0
.L_40705c:

            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+440]
            mov R9,QWORD PTR [RAX+216]
            jmp R10
.L_40707b:

            nop
            nop
            nop
            nop
            nop
.L_407080:

            mov DWORD PTR [R8],0
            xor EAX,EAX
            ret 
.L_40708a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407090:

            mov RAX,QWORD PTR [R8+24]
            mov R9,QWORD PTR [R8]
            mov R8,RCX
            xor ECX,ECX
            jmp RAX
.L_40709e:

            nop
            nop
.L_4070a0:

            mov RAX,QWORD PTR [R9+24]
            mov R9,QWORD PTR [R9]
            jmp RAX
.L_4070a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4070b0:

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,QWORD PTR [RDI+120]
            mov RBP,R8
            mov DWORD PTR [R9],0
            mov DWORD PTR [R8],0
            mov RBX,R9
            sub RSP,8
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            test EAX,EAX
            mov ECX,EAX
            pop RDX
            pop RSI
            jne .L_407100

            pop RBX
            mov EAX,ECX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407100:

            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBP]
            test RDX,RDX
            je .L_40712a

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [R12+136]
            cmp ESI,EDX
            je .L_40712a

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40712a:

            mov DWORD PTR [RBP],EAX
            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_407156

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [R12+140]
            cmp ESI,EDX
            je .L_407156

            imul RAX,RDX
            cqo 
            idiv RSI
.L_407156:

            mov DWORD PTR [RBX],EAX
            mov EAX,ECX
            pop RBX
.L_40715b:

            pop RBP
            pop R12
            ret 
.L_40715f:

            nop
.L_407160:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_4071a9

            movsxd RCX,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBX+136]
            cmp ECX,EDX
            je .L_4071a9

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_4071a9:

            pop RBX

            ret 
.L_4071ab:

            nop
            nop
            nop
            nop
            nop
.L_4071b0:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_4071f9

            movsxd RCX,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBX+140]
            cmp ECX,EDX
            je .L_4071f9

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_4071f9:

            pop RBX

            ret 
.L_4071fb:

            nop
            nop
            nop
            nop
            nop
.L_407200:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+184]
            call QWORD PTR [RAX+408]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_407249

            movsxd RCX,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBX+136]
            cmp ECX,EDX
            je .L_407249

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_407249:

            pop RBX

            ret 
.L_40724b:

            nop
            nop
            nop
            nop
            nop
.L_407250:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+192]
            call QWORD PTR [RAX+416]

            mov RDX,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_407299

            movsxd RCX,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBX+140]
            cmp ECX,EDX
            je .L_407299

            cdqe 
            imul RAX,RDX
            cqo 
            idiv RCX
.L_407299:

            pop RBX

            ret 
.L_40729b:

            nop
            nop
            nop
            nop
            nop
.L_4072a0:

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            ret 
.L_4072b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4072c0:

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RCX],XMM0
            ret 
.L_4072ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4072d0:

            sub DWORD PTR [RDI+16],1
            jne .L_4072f8

            push RBX
            mov RAX,QWORD PTR [RDI+8]
            mov RBX,RDI
            test RAX,RAX
            je .L_4072e8

            mov RDI,QWORD PTR [RDI]
            call RAX
.L_4072e8:

            mov RDI,RBX
            pop RBX
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4072f8:

            ret 
.L_4072fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407300:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RBX,RDX
            sub RSP,8
.L_407310:

            mov RDI,QWORD PTR [RDI+120]
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+120]
            call QWORD PTR [RAX+344]

            test EAX,EAX
            mov ECX,EAX
            je .L_4073bc

            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_407364

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_407364

            imul RAX,RDX
            cqo 
            idiv RSI
.L_407364:

            mov DWORD PTR [RBX],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+4]
            test RDX,RDX
            je .L_40738e

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_40738e

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40738e:

            mov DWORD PTR [RBX+4],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+8]
            test RDX,RDX
            je .L_4073b9

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_4073b9

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4073b9:

            mov DWORD PTR [RBX+8],EAX
.L_4073bc:

            add RSP,8
.L_4073c0:

            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
.L_4073c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073d0:

            xor EAX,EAX
            ret 
.L_4073d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073e0:

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            ret 
.L_4073f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407400:

            push RBX
            sub RSP,16

            cmp ECX,-1
            mov RBX,QWORD PTR [RDI+120]
            mov DWORD PTR [R8],0
            jne .L_407431

            mov RDI,RDX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov ECX,EAX
.L_407431:

            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov R10,QWORD PTR [RAX+448]
            mov R9,QWORD PTR [RAX+224]
            add RSP,16

            pop RBX
            jmp R10
.L_407458:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407460:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RBX,RDX
            sub RSP,8
.L_407470:

            mov RDI,QWORD PTR [RDI+120]
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+128]
            call QWORD PTR [RAX+352]

            test EAX,EAX
            mov ECX,EAX
            je .L_40751f

            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_4074c7

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_4074c7

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4074c7:

            mov DWORD PTR [RBX],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+4]
            test RDX,RDX
            je .L_4074f1

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_4074f1

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4074f1:

            mov DWORD PTR [RBX+4],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+8]
            test RDX,RDX
            je .L_40751c

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_40751c

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40751c:

            mov DWORD PTR [RBX+8],EAX
.L_40751f:

            add RSP,8
.L_407523:

            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
.L_407528:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407530:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RBX,RCX
            sub RSP,8
            mov RDI,QWORD PTR [RDI+120]
            movups XMMWORD PTR [RCX],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov ECX,EAX
            jne .L_407578

            add RSP,8
            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407578:

            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_40759f

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_40759f

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40759f:

            mov DWORD PTR [RBX],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+4]
            test RDX,RDX
            je .L_4075c9

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_4075c9

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4075c9:

            mov DWORD PTR [RBX+4],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+8]
            test RDX,RDX
            je .L_4075f4

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [RBP+136]
            cmp ESI,EDX
            je .L_4075f4

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4075f4:

            mov DWORD PTR [RBX+8],EAX
            mov RDX,QWORD PTR [RBP+120]
            movsxd RAX,DWORD PTR [RBX+12]
            test RDX,RDX
            je .L_40761f

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [RBP+140]
            cmp ESI,EDX
            je .L_40761f

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40761f:

            mov DWORD PTR [RBX+12],EAX
            add RSP,8
.L_407626:

            mov EAX,ECX
            pop RBX
            pop RBP
            ret 
.L_40762b:

            nop
            nop
            nop
            nop
            nop
.L_407630:

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,QWORD PTR [RDI+120]
            mov RBP,RCX
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RBX,R8
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            mov ECX,EAX
            jne .L_407680

            pop RBX
            mov EAX,ECX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407680:

            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBP]
            test RDX,RDX
            je .L_4076aa

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [R12+136]
            cmp ESI,EDX
            je .L_4076aa

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4076aa:

            mov DWORD PTR [RBP],EAX
            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_4076d6

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [R12+140]
            cmp ESI,EDX
            je .L_4076d6

            imul RAX,RDX
            cqo 
            idiv RSI
.L_4076d6:

            mov DWORD PTR [RBX],EAX
            mov EAX,ECX
            pop RBX
.L_4076db:

            pop RBP
            pop R12
            ret 
.L_4076df:

            nop
.L_4076e0:

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,QWORD PTR [RDI+120]
            mov RBP,RCX
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RBX,R8
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            mov ECX,EAX
            jne .L_407730

            pop RBX
            mov EAX,ECX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407730:

            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBP]
            test RDX,RDX
            je .L_40775a

            movsxd RSI,DWORD PTR [RDX+136]
            movsxd RDX,DWORD PTR [R12+136]
            cmp ESI,EDX
            je .L_40775a

            imul RAX,RDX
            cqo 
            idiv RSI
.L_40775a:

            mov DWORD PTR [RBP],EAX
            mov RDX,QWORD PTR [R12+120]
            movsxd RAX,DWORD PTR [RBX]
            test RDX,RDX
            je .L_407786

            movsxd RSI,DWORD PTR [RDX+140]
            movsxd RDX,DWORD PTR [R12+140]
            cmp ESI,EDX
            je .L_407786

            imul RAX,RDX
            cqo 
            idiv RSI
.L_407786:

            mov DWORD PTR [RBX],EAX
            mov EAX,ECX
            pop RBX
.L_40778b:

            pop RBP
            pop R12
            ret 
.L_40778f:

            nop
.L_407790:

            push RBX

            mov ESI,456
            mov EDI,1
            lea RBX,QWORD PTR [RIP+.L_656460]
            call calloc@PLT

            test RAX,RAX
            je .L_407841

            lea RDI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX],1
            xor ESI,ESI
            mov RBX,RAX
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6565b8]
            movups XMMWORD PTR [RBX+344],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6565c8]
            movups XMMWORD PTR [RBX+360],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6565d8]
            movups XMMWORD PTR [RBX+376],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6565e8]
            movups XMMWORD PTR [RBX+392],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_6565f8]
            movups XMMWORD PTR [RBX+408],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_656608]
            movups XMMWORD PTR [RBX+424],XMM0
            movdqu XMM0,XMMWORD PTR [RIP+.L_656618]
            movups XMMWORD PTR [RBX+440],XMM0
.L_407841:

            mov RAX,RBX
            pop RBX

            ret 
.L_407846:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407850:

            lea RAX,QWORD PTR [RIP+.L_656460]
            ret 
.L_407858:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407860:

            test RDI,RDI
            je .L_407874

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_407874

            test EAX,EAX
            jle .L_407880

            lock add DWORD PTR [RDI],1
.L_407874:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407880:

            lea RCX,QWORD PTR [RIP+.L_43f800]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_4078a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4078b0:

            test RDI,RDI
            je .L_407900

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_407900

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_4078e0

            lock sub DWORD PTR [RDI],1
            je .L_407908

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4078e0:

            lea RCX,QWORD PTR [RIP+.L_43f7c0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_407900:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407908:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_407a80

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_40792f

            call free@PLT
.L_40792f:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_40793f:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RAX,QWORD PTR [RBX+232]
            test RAX,RAX
            je .L_407959

            mov RDI,QWORD PTR [RBX+120]
            call RAX
.L_407959:

            mov RAX,QWORD PTR [RBX+240]
            test RAX,RAX
            je .L_40796e

            mov RDI,QWORD PTR [RBX+128]
            call RAX
.L_40796e:

            mov RAX,QWORD PTR [RBX+248]
            test RAX,RAX
            je .L_407983

            mov RDI,QWORD PTR [RBX+136]
            call RAX
.L_407983:

            mov RAX,QWORD PTR [RBX+256]
            test RAX,RAX
            je .L_407998

            mov RDI,QWORD PTR [RBX+144]
            call RAX
.L_407998:

            mov RAX,QWORD PTR [RBX+264]
            test RAX,RAX
            je .L_4079ad

            mov RDI,QWORD PTR [RBX+152]
            call RAX
.L_4079ad:

            mov RAX,QWORD PTR [RBX+272]
            test RAX,RAX
            je .L_4079c2

            mov RDI,QWORD PTR [RBX+160]
            call RAX
.L_4079c2:

            mov RAX,QWORD PTR [RBX+280]
            test RAX,RAX
            je .L_4079d7

            mov RDI,QWORD PTR [RBX+168]
            call RAX
.L_4079d7:

            mov RAX,QWORD PTR [RBX+288]
            test RAX,RAX
            je .L_4079ec

            mov RDI,QWORD PTR [RBX+176]
            call RAX
.L_4079ec:

            mov RAX,QWORD PTR [RBX+296]
            test RAX,RAX
            je .L_407a01

            mov RDI,QWORD PTR [RBX+184]
            call RAX
.L_407a01:

            mov RAX,QWORD PTR [RBX+304]
            test RAX,RAX
            je .L_407a16

            mov RDI,QWORD PTR [RBX+192]
            call RAX
.L_407a16:

            mov RAX,QWORD PTR [RBX+312]
            test RAX,RAX
            je .L_407a2b

            mov RDI,QWORD PTR [RBX+200]
            call RAX
.L_407a2b:

            mov RAX,QWORD PTR [RBX+320]
            test RAX,RAX
            je .L_407a40

            mov RDI,QWORD PTR [RBX+208]
            call RAX
.L_407a40:

            mov RAX,QWORD PTR [RBX+328]
            test RAX,RAX
            je .L_407a55

            mov RDI,QWORD PTR [RBX+216]
            call RAX
.L_407a55:

            mov RAX,QWORD PTR [RBX+336]
            test RAX,RAX
            je .L_407a6a

            mov RDI,QWORD PTR [RBX+224]
            call RAX
.L_407a6a:

            mov RDI,RBX
            pop RBX
.L_407a6e:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407a80:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_407ace
.L_407a8f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_407a80

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_407a8f
.L_407ace:

            mov RDI,QWORD PTR [RBX+56]
            cmp RDI,R12
            je .L_407adc

            call free@PLT
.L_407adc:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_40793f
.L_407af9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407b00:

            test RDI,RDI
            je .L_407b28

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_407b28

            sub RSP,8
            test EAX,EAX
            jle .L_407b30

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407b28:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407b30:

            lea RCX,QWORD PTR [RIP+.L_43f6e0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_407b4f:

            nop
.L_407b50:

            test RDI,RDI
            je .L_407b98

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_407b98

            test EAX,EAX
            jle .L_407b70

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407b70:

            lea RCX,QWORD PTR [RIP+.L_43f640]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407b98:

            xor EAX,EAX
            ret 
.L_407b9b:

            nop
            nop
            nop
            nop
            nop
.L_407ba0:

            cmp DWORD PTR [RDI],-1
            je .L_407bac

            mov DWORD PTR [RDI+112],1
.L_407bac:

            ret 
.L_407bae:

            nop
            nop
.L_407bb0:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_407bb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407bc0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407bd8

            test RCX,RCX
            je .L_407c28

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407bd8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+232]
            test RAX,RAX
            je .L_407c00

            mov RDI,QWORD PTR [RDI+120]
            call RAX
.L_407c00:

            test RBP,RBP
            je .L_407c30

            mov QWORD PTR [RBX+344],RBP
            mov QWORD PTR [RBX+120],R13
            mov QWORD PTR [RBX+232],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c28:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c30:

            lea RAX,QWORD PTR [RIP+.L_407300]
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+232],0
            mov QWORD PTR [RBX+344],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_407c5c:

            nop
            nop
            nop
            nop
.L_407c60:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407c78

            test RCX,RCX
            je .L_407cd0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407c78:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+240]
            test RAX,RAX
            je .L_407ca3

            mov RDI,QWORD PTR [RDI+128]
            call RAX
.L_407ca3:

            test RBP,RBP
            je .L_407cd8

            mov QWORD PTR [RBX+352],RBP
            mov QWORD PTR [RBX+128],R13
            mov QWORD PTR [RBX+240],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407cd0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407cd8:

            lea RAX,QWORD PTR [RIP+.L_407460]
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+240],0
            mov QWORD PTR [RBX+352],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_407d07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407d10:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407d28

            test RCX,RCX
            je .L_407d80

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407d28:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+248]
            test RAX,RAX
            je .L_407d53

            mov RDI,QWORD PTR [RDI+136]
            call RAX
.L_407d53:

            test RBP,RBP
            je .L_407d88

            mov QWORD PTR [RBX+360],RBP
            mov QWORD PTR [RBX+136],R13
            mov QWORD PTR [RBX+248],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407d80:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407d88:

            lea RAX,QWORD PTR [RIP+.L_406f50]
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+248],0
            mov QWORD PTR [RBX+360],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_407db7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407dc0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407dd8

            test RCX,RCX
            je .L_407e30

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407dd8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+256]
            test RAX,RAX
            je .L_407e03

            mov RDI,QWORD PTR [RDI+144]
            call RAX
.L_407e03:

            test RBP,RBP
            je .L_407e38

            mov QWORD PTR [RBX+368],RBP
            mov QWORD PTR [RBX+144],R13
            mov QWORD PTR [RBX+256],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407e30:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407e38:

            lea RAX,QWORD PTR [RIP+.L_406f90]
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+256],0
            mov QWORD PTR [RBX+368],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_407e67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e70:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407e88

            test RCX,RCX
            je .L_407ee0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407e88:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+264]
            test RAX,RAX
            je .L_407eb3

            mov RDI,QWORD PTR [RDI+152]
            call RAX
.L_407eb3:

            test RBP,RBP
            je .L_407ee8

            mov QWORD PTR [RBX+376],RBP
            mov QWORD PTR [RBX+152],R13
            mov QWORD PTR [RBX+264],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ee0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ee8:

            lea RAX,QWORD PTR [RIP+.L_407160]
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+264],0
            mov QWORD PTR [RBX+376],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_407f17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407f20:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407f38

            test RCX,RCX
            je .L_407f90

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407f38:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+272]
            test RAX,RAX
            je .L_407f63

            mov RDI,QWORD PTR [RDI+160]
            call RAX
.L_407f63:

            test RBP,RBP
            je .L_407f98

            mov QWORD PTR [RBX+384],RBP
            mov QWORD PTR [RBX+160],R13
            mov QWORD PTR [RBX+272],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407f90:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407f98:

            lea RAX,QWORD PTR [RIP+.L_4071b0]
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+384],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_407fc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407fd0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_407fe8

            test RCX,RCX
            je .L_408040

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407fe8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+280]
            test RAX,RAX
            je .L_408013

            mov RDI,QWORD PTR [RDI+168]
            call RAX
.L_408013:

            test RBP,RBP
            je .L_408048

            mov QWORD PTR [RBX+392],RBP
            mov QWORD PTR [RBX+168],R13
            mov QWORD PTR [RBX+280],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408040:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_408048:

            lea RAX,QWORD PTR [RIP+.L_407630]
            mov QWORD PTR [RBX+168],0
            mov QWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+392],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408077:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408080:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408098

            test RCX,RCX
            je .L_4080f0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408098:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+288]
            test RAX,RAX
            je .L_4080c3

            mov RDI,QWORD PTR [RDI+176]
            call RAX
.L_4080c3:

            test RBP,RBP
            je .L_4080f8

            mov QWORD PTR [RBX+400],RBP
            mov QWORD PTR [RBX+176],R13
            mov QWORD PTR [RBX+288],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4080f0:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_4080f8:

            lea RAX,QWORD PTR [RIP+.L_4076e0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+400],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408127:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408130:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408148

            test RCX,RCX
            je .L_4081a0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408148:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+296]
            test RAX,RAX
            je .L_408173

            mov RDI,QWORD PTR [RDI+184]
            call RAX
.L_408173:

            test RBP,RBP
            je .L_4081a8

            mov QWORD PTR [RBX+408],RBP
            mov QWORD PTR [RBX+184],R13
            mov QWORD PTR [RBX+296],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4081a0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4081a8:

            lea RAX,QWORD PTR [RIP+.L_407200]
            mov QWORD PTR [RBX+184],0
            mov QWORD PTR [RBX+296],0
            mov QWORD PTR [RBX+408],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4081d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4081e0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_4081f8

            test RCX,RCX
            je .L_408250

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4081f8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+304]
            test RAX,RAX
            je .L_408223

            mov RDI,QWORD PTR [RDI+192]
            call RAX
.L_408223:

            test RBP,RBP
            je .L_408258

            mov QWORD PTR [RBX+416],RBP
            mov QWORD PTR [RBX+192],R13
            mov QWORD PTR [RBX+304],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408250:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408258:

            lea RAX,QWORD PTR [RIP+.L_407250]
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+416],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408287:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408290:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_4082a8

            test RCX,RCX
            je .L_408300

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4082a8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+312]
            test RAX,RAX
            je .L_4082d3

            mov RDI,QWORD PTR [RDI+200]
            call RAX
.L_4082d3:

            test RBP,RBP
            je .L_408308

            mov QWORD PTR [RBX+424],RBP
            mov QWORD PTR [RBX+200],R13
            mov QWORD PTR [RBX+312],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408300:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408308:

            lea RAX,QWORD PTR [RIP+.L_407530]
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+312],0
            mov QWORD PTR [RBX+424],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408337:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408340:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408358

            test RCX,RCX
            je .L_4083b0

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408358:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+320]
            test RAX,RAX
            je .L_408383

            mov RDI,QWORD PTR [RDI+208]
            call RAX
.L_408383:

            test RBP,RBP
            je .L_4083b8

            mov QWORD PTR [RBX+432],RBP
            mov QWORD PTR [RBX+208],R13
            mov QWORD PTR [RBX+320],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4083b0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4083b8:

            lea RAX,QWORD PTR [RIP+.L_4070b0]
            mov QWORD PTR [RBX+208],0
            mov QWORD PTR [RBX+320],0
            mov QWORD PTR [RBX+432],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4083e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4083f0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_408408

            test RCX,RCX
            je .L_408460

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408408:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+328]
            test RAX,RAX
            je .L_408433

            mov RDI,QWORD PTR [RDI+216]
            call RAX
.L_408433:

            test RBP,RBP
            je .L_408468

            mov QWORD PTR [RBX+440],RBP
            mov QWORD PTR [RBX+216],R13
            mov QWORD PTR [RBX+328],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408460:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408468:

            lea RAX,QWORD PTR [RIP+.L_407050]
            mov QWORD PTR [RBX+216],0
            mov QWORD PTR [RBX+328],0
            mov QWORD PTR [RBX+440],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408497:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084a0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_4084b8

            test RCX,RCX
            je .L_408510

            mov RDI,RDX
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4084b8:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+336]
            test RAX,RAX
            je .L_4084e3

            mov RDI,QWORD PTR [RDI+224]
            call RAX
.L_4084e3:

            test RBP,RBP
            je .L_408518

            mov QWORD PTR [RBX+448],RBP
            mov QWORD PTR [RBX+224],R13
            mov QWORD PTR [RBX+336],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408510:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408518:

            lea RAX,QWORD PTR [RIP+.L_407400]
            mov QWORD PTR [RBX+224],0
            mov QWORD PTR [RBX+336],0
            mov QWORD PTR [RBX+448],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408547:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408550:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            je .L_408570

            lea RAX,QWORD PTR [RIP+.L_6563a0]
            cmp RDI,RAX
            jne .L_4085a0
.L_408570:

            mov RDX,QWORD PTR [RBP+152]
            lea RAX,QWORD PTR [RIP+.L_656460]
            mov ESI,EBX
            mov RAX,QWORD PTR [RAX+RSI*8+344]
            cmp QWORD PTR [RDX+RSI*8+344],RAX
            setne AL
.L_408593:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4085a0:

            call .L_408550

            test AL,AL
            je .L_408570

            jmp .L_408593
.L_4085ab:

            nop
            nop
            nop
            nop
            nop
.L_4085b0:

            pxor XMM0,XMM0
            mov RDX,RSI
            movups XMMWORD PTR [RSI],XMM0
            movups XMMWORD PTR [RSI+16],XMM0
            movups XMMWORD PTR [RSI+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+120]
            jmp QWORD PTR [RAX+344]
.L_4085da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4085e0:

            pxor XMM0,XMM0
            mov RDX,RSI
            movups XMMWORD PTR [RSI],XMM0
            movups XMMWORD PTR [RSI+16],XMM0
            movups XMMWORD PTR [RSI+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+128]
            jmp QWORD PTR [RAX+352]
.L_40860d:

            nop
            nop
            nop
.L_408610:

            test EDX,EDX
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            je .L_408640

            mov R8,RCX
            mov R10,QWORD PTR [RAX+368]
            mov ECX,EDX
            mov R9,QWORD PTR [RAX+144]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            jmp R10
.L_408640:

            mov EDX,ESI
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            mov RSI,QWORD PTR [RDI+160]
            jmp R9
.L_40865a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408660:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jmp R9
.L_40868a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408690:

            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov R8,RCX
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+368]
            mov R9,QWORD PTR [RAX+144]
            jmp R10
.L_4086bc:

            nop
            nop
            nop
            nop
.L_4086c0:

            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+152]
            jmp QWORD PTR [RAX+376]
.L_4086dd:

            nop
            nop
            nop
.L_4086e0:

            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+160]
            jmp QWORD PTR [RAX+384]
.L_4086fd:

            nop
            nop
            nop
.L_408700:

            mov DWORD PTR [RCX],0
            mov DWORD PTR [RDX],0
            mov R8,RCX
            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+392]
            mov R9,QWORD PTR [RAX+168]
            jmp R10
.L_408733:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408740:

            mov DWORD PTR [RCX],0
            mov DWORD PTR [RDX],0
            mov R8,RCX
            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+400]
            mov R9,QWORD PTR [RAX+176]
            jmp R10
.L_408773:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408780:

            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+408]
            mov R8,QWORD PTR [RAX+184]
            jmp R9
.L_4087a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4087b0:

            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+416]
            mov R8,QWORD PTR [RAX+192]
            jmp R9
.L_4087d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4087e0:

            pxor XMM0,XMM0
            mov RCX,RDX
            movups XMMWORD PTR [RDX],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R9,QWORD PTR [RAX+424]
            mov R8,QWORD PTR [RAX+200]
            jmp R9
.L_40880b:

            nop
            nop
            nop
            nop
            nop
.L_408810:

            sub RSP,16
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov R9,R8
            mov R8,RCX
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            add RSP,24
            ret 
.L_40884a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408850:

            test ECX,ECX
            mov R8D,ECX
            je .L_40885a

            mov BYTE PTR [RDX],0
.L_40885a:

            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+440]
            mov R9,QWORD PTR [RAX+216]
            jmp R10
.L_40887e:

            nop
            nop
.L_408880:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov R8,RCX
            sub RSP,24
.L_40888f:

            cmp EDX,-1
            mov DWORD PTR [RCX],0
            jne .L_4088ae

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RCX
            call strlen@PLT

            mov R8,QWORD PTR [RSP+8]
            mov EDX,EAX
.L_4088ae:

            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov ECX,EDX
            mov RDI,RBX
            mov RDX,RBP
            mov R10,QWORD PTR [RAX+448]
            mov R9,QWORD PTR [RAX+224]
            add RSP,24
.L_4088d6:

            pop RBX
            pop RBP
            jmp R10
.L_4088db:

            nop
            nop
            nop
            nop
            nop
.L_4088e0:

            push RBP
            pxor XMM0,XMM0
            push RBX
            and ESI,4294967294
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,8
.L_4088f3:

            cmp ESI,4
            movups XMMWORD PTR [RDX],XMM0
            movups XMMWORD PTR [RDX+16],XMM0
            movups XMMWORD PTR [RDX+32],XMM0
            mov RAX,QWORD PTR [RDI+152]
            je .L_408950

            mov RCX,QWORD PTR [RAX+128]
            mov RSI,QWORD PTR [RDI+160]
            call QWORD PTR [RAX+352]

            test EAX,EAX
            jne .L_408945

            mov EDX,DWORD PTR [RBP+136]
            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            mov DWORD PTR [RBX],EAX
            mov EDX,DWORD PTR [RBP+136]
            mov DWORD PTR [RBX+8],0
            sub EDX,EAX
            mov DWORD PTR [RBX+4],EDX
.L_408945:

            add RSP,8
.L_408949:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408950:

            mov RCX,QWORD PTR [RAX+120]
            mov RSI,QWORD PTR [RDI+160]
            call QWORD PTR [RAX+344]

            test EAX,EAX
            jne .L_408945

            pxor XMM0,XMM0
            cvtsi2sd XMM0,DWORD PTR [RBP+140]
            mulsd XMM0,QWORD PTR [RIP+.L_43f840]
            cvttsd2si EAX,XMM0
            mov DWORD PTR [RBX],EAX
            mov EDX,DWORD PTR [RBP+140]
            mov DWORD PTR [RBX+8],0
            sub EDX,EAX
            mov DWORD PTR [RBX+4],EDX
            add RSP,8
.L_408995:

            pop RBX
            pop RBP
            ret 
.L_408998:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4089a0:

            push RBP
            push RBX
            and EDX,4294967294
            mov RBP,RCX
            mov RBX,R8
            sub RSP,8
            cmp EDX,4
            je .L_4089e0

            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov DWORD PTR [RBX],EAX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4089e0:

            mov RAX,QWORD PTR [RDI+152]
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [RBP],EAX
            mov DWORD PTR [RBX],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_408a0d:

            nop
            nop
            nop
.L_408a10:

            push R13
            push R12
            and EDX,4294967294
            push RBP
            push RBX
            mov R13D,ESI
            mov RBX,RDI
            mov R12,RCX
            mov RBP,R8
            sub RSP,8
.L_408a29:

            cmp EDX,4
            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            je .L_408ae0

            mov R9,QWORD PTR [RAX+176]
            mov EDX,R13D
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_408ad2

            mov DWORD PTR [RBP],0
            mov DWORD PTR [R12],0
            mov R8,RBP
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R12
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_408ad2

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RBX+140]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            add DWORD PTR [R12],EAX
            add DWORD PTR [RBP],ECX
.L_408ad2:

            add RSP,8
.L_408ad6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408ae0:

            mov R9,QWORD PTR [RAX+168]
            mov EDX,R13D
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_408ad2

            mov DWORD PTR [RBP],0
            mov DWORD PTR [R12],0
            mov R8,RBP
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R12
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_408ad2

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RBX+140]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            sub DWORD PTR [R12],EAX
            sub DWORD PTR [RBP],ECX
            add RSP,8
.L_408b69:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_408b70:

            push R15
            push R14
            and EDX,4294967294
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12,R8
            sub RSP,24
.L_408b8c:

            mov RSI,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp EDX,4
            mov RAX,QWORD PTR [RDI+152]
            mov DWORD PTR [RSP+4],0
            mov DWORD PTR [RSP],0
            lea R15,QWORD PTR [RSP+4]
            mov R14,RSP
            je .L_408c60

            mov R9,QWORD PTR [RAX+176]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_408d20

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_408d20

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP]
            jmp .L_408cf0
          .byte 0x90
.L_408c60:

            mov R9,QWORD PTR [RAX+168]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_408d20

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_408d20

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RDI,RBX
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
.L_408cf0:

            add DWORD PTR [R13],EAX
            add DWORD PTR [R12],EDX
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_408d29

            add RSP,24
.L_408d0c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408d20:

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            jmp .L_408cf0
.L_408d29:

            call __stack_chk_fail@PLT
.L_408d2e:

            nop
            nop
.L_408d30:

            push R15
            push R14
            and EDX,4294967294
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12,R8
            sub RSP,24
.L_408d4c:

            mov RSI,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp EDX,4
            mov RAX,QWORD PTR [RDI+152]
            mov DWORD PTR [RSP+4],0
            mov DWORD PTR [RSP],0
            lea R15,QWORD PTR [RSP+4]
            mov R14,RSP
            je .L_408e20

            mov R9,QWORD PTR [RAX+176]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_408ee0

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_408ee0

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP]
            jmp .L_408eb0
          .byte 0x90
.L_408e20:

            mov R9,QWORD PTR [RAX+168]
            mov R8,R15
            mov RCX,R14
            mov EDX,EBP
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_408ee0

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,EBP
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_408ee0

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,EBP
            mov RDI,RBX
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
.L_408eb0:

            sub DWORD PTR [R13],EAX
            sub DWORD PTR [R12],EDX
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_408ee9

            add RSP,24
.L_408ecc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ee0:

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            jmp .L_408eb0
.L_408ee9:

            call __stack_chk_fail@PLT
.L_408eee:

            nop
            nop
.L_408ef0:

            push RBP
            push RBX
            and ECX,4294967294
            mov RBP,R8
            mov RBX,R9
            sub RSP,8
            cmp ECX,4
            je .L_408f38

            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+192]
            call QWORD PTR [RAX+416]

            mov DWORD PTR [RBX],EAX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408f38:

            mov RAX,QWORD PTR [RDI+152]
            mov ECX,EDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+184]
            call QWORD PTR [RAX+408]

            mov DWORD PTR [RBP],EAX
            mov DWORD PTR [RBX],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_408f67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408f70:

            push R15
            pxor XMM0,XMM0
            push R14
            push R13
            mov R14D,EDX
            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            mov EDX,R12D
            sub RSP,24
.L_408f91:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            movups XMMWORD PTR [RCX],XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R13D,EAX
            jne .L_408ff0
.L_408fc6:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_409171

            add RSP,24
.L_408fe1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408ff0:

            and R14D,4294967294
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            cmp R14D,4
            mov DWORD PTR [RSP+4],0
            mov DWORD PTR [RSP],0
            lea R15,QWORD PTR [RSP+4]
            mov R14,RSP
            je .L_4090c0

            mov R9,QWORD PTR [RAX+176]
            mov R8,R15
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_409168

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_409168

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R12D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP]
            jmp .L_409156
          .byte 0x66
          .byte 0x90
.L_4090c0:

            mov R9,QWORD PTR [RAX+168]
            mov R8,R15
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_409168

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+4],0
            mov R8,R15
            mov DWORD PTR [RSP],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R12D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_409168

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R12D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RSP]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+4]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub ECX,EAX
            mov EAX,ECX
.L_409156:

            sub DWORD PTR [RBP],EAX
            sub DWORD PTR [RBP+4],EDX
            jmp .L_408fc6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409168:

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            jmp .L_409156
.L_409171:

            call __stack_chk_fail@PLT
.L_409176:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409180:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov ECX,EDX
            mov RBX,RDI
            mov EDX,R13D
            mov R12,R8
            sub RSP,48
            mov DWORD PTR [R9],0
            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+32],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RBP,R9
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            test EAX,EAX
            mov R15D,EAX
            pop RDX
            pop RCX
            jne .L_409210
.L_4091e3:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_4093ba

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409210:

            and R14D,4294967294
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            cmp R14D,4
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            je .L_4092f0

            lea RDI,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+176]
            mov EDX,R13D
            mov QWORD PTR [RSP+8],RDI
            mov R8,RDI
            mov RCX,R14
            mov RDI,RBX
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_4093b0

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov RCX,R14
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov EDX,R13D
            mov R8,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_4093b0

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP+16]
            jmp .L_40939c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4092f0:

            lea R10,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,R13D
            mov RDI,RBX
            mov R8,R10
            mov QWORD PTR [RSP+8],R10
            mov RCX,R14
            call QWORD PTR [RAX+392]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            jne .L_4093b0

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov R8,R10
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_4093b0

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RSP+16]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub ECX,EAX
            mov EAX,ECX
.L_40939c:

            sub DWORD PTR [R12],EAX
            sub DWORD PTR [RBP],EDX
            jmp .L_4091e3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4093b0:

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+20]
            jmp .L_40939c
.L_4093ba:

            call __stack_chk_fail@PLT
.L_4093bf:

            nop
.L_4093c0:

            test ECX,ECX
            je .L_409400

            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov BYTE PTR [RDX],0
            mov R8D,ECX
            mov RAX,QWORD PTR [RDI+152]
            mov R12D,ECX
            mov RBX,RDX
            mov RCX,RDX
            mov RSI,QWORD PTR [RDI+160]
            mov EDX,EBP
            mov R9,QWORD PTR [RAX+216]
            call QWORD PTR [RAX+440]

            test EAX,EAX
            je .L_409430

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_409400:

            mov RAX,QWORD PTR [RDI+152]
            mov RCX,RDX
            xor R8D,R8D
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+160]
            mov R10,QWORD PTR [RAX+440]
            mov R9,QWORD PTR [RAX+216]
            jmp R10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409430:

            mov ESI,R12D
            mov R9D,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            lea R8,QWORD PTR [RIP+.L_43f433]
            mov RCX,-1
            mov EDX,1
            jmp __snprintf_chk@PLT
.L_409455:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409460:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov EBX,EDX
            mov RBP,RDI
            sub RSP,120
.L_409479:

            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            cmp EBX,-1
            je .L_409598

            mov RAX,QWORD PTR [RDI+152]
            mov R8,RCX
            mov RSI,QWORD PTR [RDI+160]
            mov ECX,EBX
            mov RDX,R13
            mov R9,QWORD PTR [RAX+224]
            call QWORD PTR [RAX+448]

            test EAX,EAX
            jne .L_409526
.L_4094bf:

            cmp EBX,63
            lea R15,QWORD PTR [RSP+32]
            mov R12D,63
            cmovbe R12,RBX
            mov ECX,64
            mov RSI,R13
            mov RDX,R12
            mov RDI,R15
            call __strncpy_chk@PLT

            mov BYTE PTR [RSP+R12*1+32],0
            call __errno_location@PLT

            mov R12,RAX
            mov DWORD PTR [RAX],0
            lea RAX,QWORD PTR [RSP+24]
            mov EDX,10
            mov RDI,R15
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call strtoul@PLT

            mov ESI,DWORD PTR [R12]
            test ESI,ESI
            jne .L_409550

            mov RDX,QWORD PTR [RSP+24]
            cmp BYTE PTR [RDX],0
            jne .L_409550
.L_409523:

            mov DWORD PTR [R14],EAX
.L_409526:

            mov EAX,1
.L_40952b:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4096e4

            add RSP,120
.L_409543:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_409550:

            cmp EBX,3
            jle .L_40958d

            lea RDI,QWORD PTR [RIP+.L_43f439]
            mov ECX,3
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4095e0
.L_40956f:

            lea RDI,QWORD PTR [RIP+.L_43f43d]
            mov ECX,3
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_409650
.L_40958d:

            xor EAX,EAX
            jmp .L_40952b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409598:

            mov RDI,RSI
            call strlen@PLT

            mov R10,QWORD PTR [RBP+152]
            mov RSI,QWORD PTR [RBP+160]
            mov R8,R14
            mov ECX,EAX
            mov RDX,R13
            mov RDI,RBP
            mov R9,QWORD PTR [R10+224]
            call QWORD PTR [R10+448]

            test EAX,EAX
            jne .L_409526

            mov RDI,R13
            call strlen@PLT

            mov EBX,EAX
            jmp .L_4094bf
          .byte 0x66
          .byte 0x90
.L_4095e0:

            lea R9D,DWORD PTR [RBX-3]
            mov EAX,63
            lea RSI,QWORD PTR [R13+3]
            mov ECX,64
            mov RDI,R15
            cmp R9D,63
            cmovg R9D,EAX
            movsxd RDX,R9D
            mov DWORD PTR [RSP+12],R9D
            call __strncpy_chk@PLT

            mov R9D,DWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RSP]
            mov EDX,10
            mov DWORD PTR [R12],0
            mov RDI,R15
            mov BYTE PTR [RSP+R9*1+32],0
            call strtoul@PLT

            mov ECX,DWORD PTR [R12]
            test ECX,ECX
            jne .L_40956f

            mov RDX,QWORD PTR [RSP+24]
            cmp BYTE PTR [RDX],0
            je .L_409523

            jmp .L_40956f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409650:

            sub EBX,3
            mov EAX,63
            lea RSI,QWORD PTR [R13+3]
            cmp EBX,63
            mov ECX,64
            mov RDI,R15
            cmovg EBX,EAX
            movsxd RDX,EBX
            mov EBX,EBX
            call __strncpy_chk@PLT

            mov RSI,QWORD PTR [RSP]
            mov EDX,16
            mov DWORD PTR [R12],0
            mov RDI,R15
            mov BYTE PTR [RSP+RBX*1+32],0
            call strtoul@PLT

            mov EDX,DWORD PTR [R12]
            test EDX,EDX
            jne .L_40958d

            mov RDX,QWORD PTR [RSP+24]
            cmp BYTE PTR [RDX],0
            jne .L_40958d

            mov DWORD PTR [R14],0
            mov R9,QWORD PTR [RBP+152]
            mov RCX,R14
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,EAX
            mov RDI,RBP
            mov R8,QWORD PTR [R9+136]
            call QWORD PTR [R9+360]

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_40952b
.L_4096e4:

            call __stack_chk_fail@PLT
.L_4096e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4096f0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_4096f9:

            test RDI,RDI
            je .L_409790
.L_409702:

            mov ESI,192
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4097a0

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            mov RDI,RBP
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            call .L_406b50

            lea RAX,QWORD PTR [RIP+.L_6563a0]
            mov RDI,RBP
            mov QWORD PTR [RBX+120],RAX
            call .L_4068b0

            mov QWORD PTR [RBX+128],RAX
            lea RAX,QWORD PTR [RIP+.L_656460]
            mov RDI,RBP
            mov QWORD PTR [RBX+152],RAX
            call .L_406d80

            mov DWORD PTR [RBX+140],EAX
            mov DWORD PTR [RBX+136],EAX
            add RSP,8
.L_40978a:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_409790:

            call .L_4068a0

            mov RBP,RAX
            jmp .L_409702
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4097a0:

            lea RBX,QWORD PTR [RIP+.L_6563a0]
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_4097b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4097c0:

            test RDI,RDI
            push RBX
.L_4097c4:

            je .L_409820

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+128]
            call .L_4096f0

            cmp DWORD PTR [RAX],-1
            je .L_40981d

            mov EDX,DWORD PTR [RBX]
            cmp EDX,-1
            je .L_4097e9

            test EDX,EDX
            jle .L_409840

            lock add DWORD PTR [RBX],1
.L_4097e9:

            mov QWORD PTR [RAX+120],RBX
            mov EDX,DWORD PTR [RBX+136]
            mov DWORD PTR [RAX+136],EDX
            mov EDX,DWORD PTR [RBX+140]
            mov DWORD PTR [RAX+140],EDX
            mov EDX,DWORD PTR [RBX+144]
            mov DWORD PTR [RAX+144],EDX
            mov EDX,DWORD PTR [RBX+148]
            mov DWORD PTR [RAX+148],EDX
.L_40981d:

            pop RBX
.L_40981e:

            ret 
          .byte 0x90
.L_409820:

            lea RDI,QWORD PTR [RIP+.L_6571e0]
            lea RBX,QWORD PTR [RIP+.L_6563a0]
            call .L_4096f0

            cmp DWORD PTR [RAX],-1
            jne .L_4097e9

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409840:

            lea RCX,QWORD PTR [RIP+.L_43f600]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,160
            call __assert_fail@PLT
.L_40985f:

            nop
.L_409860:

            lea RAX,QWORD PTR [RIP+.L_6563a0]
            ret 
.L_409868:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409870:

            test RDI,RDI
            je .L_409884

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_409884

            test EAX,EAX
            jle .L_409890

            lock add DWORD PTR [RDI],1
.L_409884:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409890:

            lea RCX,QWORD PTR [RIP+.L_43f600]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_4098b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4098c0:

            test RDI,RDI
            je .L_4098f0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4098f0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_4098f8

            lock sub DWORD PTR [RDI],1
            je .L_409920

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4098f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4098f8:

            lea RCX,QWORD PTR [RIP+.L_43f5c0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409920:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_4099e0

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_409947

            call free@PLT
.L_409947:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_409957:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,QWORD PTR [RBX+176]
            test RDI,RDI
            je .L_40997c

            cmp RDI,-1
            je .L_40997c

            cmp RDI,1
            je .L_40997c

            call .L_4106f0
.L_40997c:

            mov RDI,QWORD PTR [RBX+184]
            test RDI,RDI
            je .L_409999

            cmp RDI,-1
            je .L_409999

            cmp RDI,1
            je .L_409999

            call .L_4250b0
.L_409999:

            mov RAX,QWORD PTR [RBX+168]
            test RAX,RAX
            je .L_4099ae

            mov RDI,QWORD PTR [RBX+160]
            call RAX
.L_4099ae:

            mov RDI,QWORD PTR [RBX+120]
            call .L_4098c0

            mov RDI,QWORD PTR [RBX+128]
            call .L_406900

            mov RDI,QWORD PTR [RBX+152]
            call .L_4078b0

            mov RDI,RBX
            pop RBX
.L_4099d3:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0x90
.L_4099e0:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_409a2e
.L_4099ef:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_4099e0

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_4099ef
.L_409a2e:

            mov RDI,QWORD PTR [RBX+56]
            cmp RDI,R12
            je .L_409a3c

            call free@PLT
.L_409a3c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_409957
.L_409a59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409a60:

            test RDI,RDI
            je .L_409a88

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_409a88

            sub RSP,8
            test EAX,EAX
            jle .L_409a90

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409a88:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409a90:

            lea RCX,QWORD PTR [RIP+.L_43f4e0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_409aaf:

            nop
.L_409ab0:

            test RDI,RDI
            je .L_409af8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_409af8

            test EAX,EAX
            jle .L_409ad0

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409ad0:

            lea RCX,QWORD PTR [RIP+.L_43f460]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409af8:

            xor EAX,EAX
            ret 
.L_409afb:

            nop
            nop
            nop
            nop
            nop
.L_409b00:

            cmp DWORD PTR [RDI],-1
            je .L_409b20

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            jne .L_409b28

            mov DWORD PTR [RBX+112],1
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409b20:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409b28:

            call .L_409b00

            mov DWORD PTR [RBX+112],1
            pop RBX
            ret 
.L_409b36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409b40:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_409b44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409b50:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_409b80

            test RSI,RSI
            mov RDX,QWORD PTR [RDI+120]
            je .L_409b88

            mov EAX,DWORD PTR [RSI]
            cmp EAX,-1
            je .L_409b6f

            test EAX,EAX
            jle .L_409ba0

            lock add DWORD PTR [RSI],1
.L_409b6f:

            mov QWORD PTR [RDI+120],RSI
            mov RDI,RDX
            jmp .L_4098c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409b80:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409b88:

            lea RSI,QWORD PTR [RIP+.L_6563a0]
            mov QWORD PTR [RDI+120],RSI
            mov RDI,RDX
            jmp .L_4098c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409ba0:

            lea RCX,QWORD PTR [RIP+.L_43f600]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8

            mov EDX,160
            call __assert_fail@PLT
.L_409bc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409bd0:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_409bd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409be0:

            mov RAX,QWORD PTR [RDI+128]
            ret 
.L_409be8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409bf0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            sub RSP,8
            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409c20

            test RCX,RCX
            je .L_409c72

            add RSP,8
            mov RDI,RDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409c20:

            mov RAX,QWORD PTR [RDI+168]
            mov RBX,RDI
            mov RBP,RSI
            test RAX,RAX
            je .L_409c3b

            mov RDI,QWORD PTR [RDI+160]
            call RAX
.L_409c3b:

            test RBP,RBP
            je .L_409c80

            mov EAX,DWORD PTR [RBP]
            cmp EAX,-1
            je .L_409c51

            test EAX,EAX
            jle .L_409c90

            lock add DWORD PTR [RBP],1
.L_409c51:

            mov RDI,QWORD PTR [RBX+152]
            call .L_4078b0

            mov QWORD PTR [RBX+152],RBP
            mov QWORD PTR [RBX+160],R13
            mov QWORD PTR [RBX+168],R12
.L_409c72:

            add RSP,8
.L_409c76:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409c80:

            lea RBP,QWORD PTR [RIP+.L_656460]
            jmp .L_409c51
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409c90:

            lea RCX,QWORD PTR [RIP+.L_43f800]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,160
            call __assert_fail@PLT
.L_409caf:

            nop
.L_409cb0:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            je .L_409cc8

            test RDX,RDX
            je .L_409d00

            mov RDI,RSI
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409cc8:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RAX,QWORD PTR [RDI+168]
            mov RBP,RDX
            mov RBX,RDI
            test RAX,RAX
            je .L_409cea

            mov RDI,QWORD PTR [RDI+160]
            call RAX
.L_409cea:

            mov QWORD PTR [RBX+160],R12
            mov QWORD PTR [RBX+168],RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409d00:

            ret 
.L_409d02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409d10:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_409d23

            mov DWORD PTR [RDI+136],ESI
            mov DWORD PTR [RDI+140],EDX
.L_409d23:

            ret 
.L_409d25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409d30:

            test RSI,RSI
            je .L_409d3d

            mov EAX,DWORD PTR [RDI+136]
            mov DWORD PTR [RSI],EAX
.L_409d3d:

            test RDX,RDX
            je .L_409d4a

            mov EAX,DWORD PTR [RDI+140]
            mov DWORD PTR [RDX],EAX
.L_409d4a:

            ret 
.L_409d4c:

            nop
            nop
            nop
            nop
.L_409d50:

            mov EAX,DWORD PTR [RDI+112]
            test EAX,EAX
            jne .L_409d63

            mov DWORD PTR [RDI+144],ESI
            mov DWORD PTR [RDI+148],EDX
.L_409d63:

            ret 
.L_409d65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409d70:

            test RSI,RSI
            je .L_409d7d

            mov EAX,DWORD PTR [RDI+144]
            mov DWORD PTR [RSI],EAX
.L_409d7d:

            test RDX,RDX
            je .L_409d8a

            mov EAX,DWORD PTR [RDI+148]
            mov DWORD PTR [RDX],EAX
.L_409d8a:

            ret 
.L_409d8c:

            nop
            nop
            nop
            nop
.L_409d90:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov ESI,32
            push RBX
.L_409da0:

            mov RBP,RDI
            mov EDI,1
            mov R13,RDX
            mov R12,RCX
            call calloc@PLT

            test RAX,RAX
            je .L_409ea0

            mov RBX,RAX
            mov QWORD PTR [RAX],R13
            mov QWORD PTR [RAX+8],R12
            mov DWORD PTR [RAX+16],1
            mov QWORD PTR [RAX+24],R14
            mov EAX,DWORD PTR [RBP+112]
            test EAX,EAX
            jne .L_409e70

            mov RAX,QWORD PTR [RBP+248]
            test RAX,RAX
            je .L_409eb8

            mov RDI,QWORD PTR [RBP+136]
            lea R12,QWORD PTR [RIP+.L_4072d0]
            call RAX

            mov EAX,DWORD PTR [RBX+16]
            lea RCX,QWORD PTR [RIP+.L_407090]
            mov EDX,DWORD PTR [RBP+112]
            mov QWORD PTR [RBP+136],RBX
            mov QWORD PTR [RBP+360],RCX
            lea RCX,QWORD PTR [RIP+.L_4072d0]
            add EAX,1
            test EDX,EDX
            mov QWORD PTR [RBP+248],RCX
            mov DWORD PTR [RBX+16],EAX
            jne .L_409e8f
.L_409e2f:

            mov RAX,QWORD PTR [RBP+256]
            test RAX,RAX
            je .L_409e44

            mov RDI,QWORD PTR [RBP+144]
            call RAX
.L_409e44:

            lea RAX,QWORD PTR [RIP+.L_4070a0]
            mov QWORD PTR [RBP+144],RBX
            mov QWORD PTR [RBP+256],R12
            mov QWORD PTR [RBP+368],RAX
.L_409e60:

            pop RBX
.L_409e61:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409e70:

            mov RDI,RBX
            lea R12,QWORD PTR [RIP+.L_4072d0]
            call .L_4072d0

            mov EAX,DWORD PTR [RBX+16]
            mov EDX,DWORD PTR [RBP+112]
            add EAX,1
            test EDX,EDX
            mov DWORD PTR [RBX+16],EAX
            je .L_409e2f
.L_409e8f:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_4072d0
          .byte 0x90
.L_409ea0:

            test R12,R12
            je .L_409e60

            pop RBX
            mov RDI,R13
            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409eb8:

            lea RAX,QWORD PTR [RIP+.L_407090]
            lea R12,QWORD PTR [RIP+.L_4072d0]
            mov QWORD PTR [RBP+136],RBX
            mov DWORD PTR [RBX+16],2
            mov QWORD PTR [RBP+360],RAX
            mov QWORD PTR [RBP+248],R12
            jmp .L_409e2f
.L_409ee7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ef0:

            mov RAX,QWORD PTR [RDI]
            cmp RSI,RAX
            jbe .L_409f1c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409f00:

            movzx EDX,BYTE PTR [RAX]
            cmp DL,32
            je .L_409f10

            sub EDX,9
            cmp DL,4
            ja .L_409f1c
.L_409f10:

            add RAX,1
            cmp RAX,RSI
            mov QWORD PTR [RDI],RAX
            jne .L_409f00
.L_409f1c:

            mov EAX,1
            ret 
.L_409f22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409f30:

            push R13
            push R12
            mov ECX,32
            push RBP
            push RBX
            mov RBX,RSI
            mov R13,RDI
            mov R12,RDX
            sub RSP,72
.L_409f48:

            mov RSI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,31
            lea RBP,QWORD PTR [RSP+16]
            sub RBX,RSI
            cmp EBX,31
            mov RDI,RBP
            cmova EBX,EAX
            mov EBX,EBX
            mov RDX,RBX
            call __strncpy_chk@PLT

            mov BYTE PTR [RSP+RBX*1+16],0
            mov QWORD PTR [RSP+8],RBP
            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RBX,RAX
            mov DWORD PTR [RAX],0
            mov RDI,RBP
            call strtol@PLT

            mov ECX,DWORD PTR [RBX]
            xor EDX,EDX
            test ECX,ECX
            jne .L_409fc4

            mov RCX,QWORD PTR [RSP+8]
            cmp RCX,RBP
            je .L_409fc4

            mov DWORD PTR [R12],EAX
            sub RCX,RBP
            add QWORD PTR [R13],RCX
            mov EDX,1
.L_409fc4:

            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_409fe1

            add RSP,72
.L_409fda:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_409fe1:

            call __stack_chk_fail@PLT
.L_409fe6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ff0:

            mov RDI,QWORD PTR [RIP+.L_6573d0]
            jmp free@PLT
.L_409ffc:

            nop
            nop
            nop
            nop
.L_40a000:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_40a012:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test ESI,ESI
            mov QWORD PTR [RSP+8],RDI
            jns .L_40a032

            call strlen@PLT

            mov ESI,EAX
.L_40a032:

            movsxd RSI,ESI
            lea RBP,QWORD PTR [RSP+8]
            add RBX,RSI
            mov RSI,RBX
            mov RDI,RBP
            call .L_409ef0

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40a05b

            cmp BYTE PTR [RAX],45
            je .L_40a228
.L_40a05b:

            mov RSI,RBX
            mov RDI,RBP
            call .L_409ef0

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40a079

            cmp BYTE PTR [RAX],43
            je .L_40a240
.L_40a079:

            mov DWORD PTR [RSP+20],1
.L_40a081:

            mov RSI,RBX
            mov RDI,RBP
            call .L_409ef0

            mov R13,QWORD PTR [RSP+8]
            cmp RBX,R13
            jbe .L_40a1f0

            movzx EDX,BYTE PTR [R13]
            cmp DL,39
            je .L_40a250

            xor R14D,R14D
            cmp DL,34
            je .L_40a250
.L_40a0b4:

            mov RSI,R13
            jmp .L_40a0c3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a0c0:

            movzx EDX,BYTE PTR [RSI]
.L_40a0c3:

            mov EAX,EDX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_40a0d7

            sub EDX,48
            cmp DL,9
            ja .L_40a0e5
.L_40a0d7:

            add RSI,1
            cmp RBX,RSI
            mov QWORD PTR [RSP+8],RSI
            ja .L_40a0c0
.L_40a0e5:

            cmp R13,RSI
            je .L_40a1f0

            sub RSI,R13
            cmp RSI,4
            jg .L_40a1f0

            mov RDI,R13
            call .L_4056e0

            test R14B,R14B
            mov DWORD PTR [RSP+16],EAX
            je .L_40a140

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,RAX
            sub RDX,R13
            cmp RDX,4
            jne .L_40a1f0

            cmp RBX,RAX
            je .L_40a1f0

            cmp BYTE PTR [RAX],R14B
            jne .L_40a1f0

            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
.L_40a140:

            mov RSI,RBX
            mov RDI,RBP
            lea R14,QWORD PTR [RSP+16]
            call .L_409ef0

            movabs RAX,-4294967296
            mov QWORD PTR [RSP+24],RAX
            call .L_409ef0

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40a177

            cmp BYTE PTR [RAX],91
            je .L_40a26e
.L_40a177:

            mov RSI,RBX
            mov RDI,RBP
            xor R13D,R13D
            call .L_409ef0

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40a1a3

            cmp BYTE PTR [RAX],61
            jne .L_40a1a3

            add RAX,1
            mov R13D,1
            mov QWORD PTR [RSP+8],RAX
.L_40a1a3:

            lea RDX,QWORD PTR [R14+4]
            mov RSI,RBX
            mov RDI,RBP
            call .L_409f30

            test AL,AL
            je .L_40a2df
.L_40a1ba:

            mov RSI,RBX
            mov RDI,RBP
            call .L_409ef0

            test AL,AL
            je .L_40a1f0

            cmp RBX,QWORD PTR [RSP+8]
            jne .L_40a1f0

            test R12,R12
            je .L_40a1e0

            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [R12],XMM0
.L_40a1e0:

            mov EAX,1
            jmp .L_40a200
.L_40a1e7:

            test R13B,R13B
            je .L_40a1ba

            nop
            nop
            nop
            nop
.L_40a1f0:

            test R12,R12
            je .L_40a1fe

            pxor XMM0,XMM0
            movups XMMWORD PTR [R12],XMM0
.L_40a1fe:

            xor EAX,EAX
.L_40a200:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40a3c3

            add RSP,48
.L_40a218:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a228:

            add RAX,1
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40a081
          .byte 0x66
          .byte 0x90
.L_40a240:

            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40a079
          .byte 0x66
          .byte 0x90
.L_40a250:

            lea RAX,QWORD PTR [R13+1]
            cmp RBX,RAX
            mov QWORD PTR [RSP+8],RAX
            jbe .L_40a1f0

            mov R14D,EDX
            movzx EDX,BYTE PTR [R13+1]
            mov R13,RAX
            jmp .L_40a0b4
.L_40a26e:

            lea RDX,QWORD PTR [R14+8]
            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            call .L_409f30

            mov RSI,RBX
            mov RDI,RBP
            mov ECX,EAX
            call .L_409ef0

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40a2a0

            cmp BYTE PTR [RAX],58
            je .L_40a3ac
.L_40a2a0:

            test CL,CL
            je .L_40a2af

            mov EAX,DWORD PTR [RSP+24]
            add EAX,1
            mov DWORD PTR [RSP+28],EAX
.L_40a2af:

            mov RSI,RBX
            mov RDI,RBP
            call .L_409ef0

            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            je .L_40a1f0

            cmp BYTE PTR [RAX],93
            jne .L_40a1f0

            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40a177
.L_40a2df:

            mov RSI,RBX
            mov RDI,RBP
            call .L_409ef0

            mov R8,QWORD PTR [RSP+8]
            cmp RBX,R8
            jbe .L_40a385

            movzx EAX,BYTE PTR [R8]
            lea RDX,QWORD PTR [R8+1]
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_40a324

            jmp .L_40a385
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a310:

            movzx EAX,BYTE PTR [RDX]
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            ja .L_40a331

            mov RDX,RCX
.L_40a324:

            cmp RBX,RDX
            mov QWORD PTR [RSP+8],RDX
            jne .L_40a310

            mov RDX,RBX
.L_40a331:

            sub RDX,R8
            cmp RDX,2
            je .L_40a39f

            lea RDI,QWORD PTR [RIP+.L_43f848]
            mov ECX,2
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a39f

            cmp RDX,3
            je .L_40a378
.L_40a35a:

            lea RDI,QWORD PTR [RIP+.L_43f84b]
            mov ECX,2
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a1e7
.L_40a378:

            mov DWORD PTR [RSP+20],0
            jmp .L_40a1ba
.L_40a385:

            lea RDI,QWORD PTR [RIP+.L_43f848]
            mov ECX,2
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a35a
.L_40a39f:

            mov DWORD PTR [RSP+20],1
            jmp .L_40a1ba
.L_40a3ac:

            lea RDX,QWORD PTR [R14+12]
            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            call .L_409f30

            jmp .L_40a2af
.L_40a3c3:

            call __stack_chk_fail@PLT
.L_40a3c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a3d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_40a3e1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test EDX,EDX
            je .L_40a51a

            mov EAX,DWORD PTR [RDI+4]
            mov R14,RDI
            mov RBP,RSI
            mov R12D,EDX
            test EAX,EAX
            je .L_40a548

            mov R13,RSP
            mov R15D,4
            mov RSI,R13
.L_40a41c:

            mov EDI,DWORD PTR [R14]
            call .L_405780

            lea ECX,DWORD PTR [R15-1]
            mov RDX,RCX
            add RCX,R13
            jmp .L_40a433
.L_40a430:

            sub EDX,1
.L_40a433:

            cmp BYTE PTR [RCX],32
            mov EBX,EDX
            jne .L_40a618

            sub RCX,1
            test EDX,EDX
            mov R15D,EDX
            jne .L_40a430
.L_40a449:

            mov R9D,DWORD PTR [R14+8]
            test R9D,R9D
            jne .L_40a5b0

            mov R9D,DWORD PTR [R14+12]
            cmp R9D,-1
            je .L_40a4a9

            mov EDX,EBX
            cmp R9D,1
            lea EAX,DWORD PTR [RBX+1]
            mov BYTE PTR [RSP+RDX*1],91
            je .L_40a620

            add EBX,2
            mov BYTE PTR [RSP+RAX*1],58
.L_40a47a:

            mov EDI,EBX
            mov ESI,128
            lea R8,QWORD PTR [RIP+.L_43f436]
            sub ESI,EBX
            add RDI,R13
            mov RCX,-1
            mov EDX,1
            xor EAX,EAX
            call __snprintf_chk@PLT

            add EAX,EBX
            lea EBX,DWORD PTR [RAX+1]
            mov BYTE PTR [RSP+RAX*1],93
.L_40a4a9:

            mov R9D,DWORD PTR [R14+4]
            cmp R9D,1
            jbe .L_40a4e5

            lea EDI,DWORD PTR [RBX+1]
            mov ESI,128
            lea R8,QWORD PTR [RIP+.L_43f436]
            mov RCX,-1
            mov EDX,1
            xor EAX,EAX
            mov R14,RDI
            sub ESI,EDI
            add RDI,R13
            mov BYTE PTR [RSP+RBX*1],61
            call __snprintf_chk@PLT

            lea EBX,DWORD PTR [RAX+R14*1]
.L_40a4e5:

            sub R12D,1
            cmp R12D,EBX
            cmovbe EBX,R12D
            cmp EBX,8
            mov EAX,EBX
            jae .L_40a560

            test BL,4
            jne .L_40a635

            test EBX,EBX
            je .L_40a515

            movzx EDX,BYTE PTR [R13]
            and EBX,2
            mov BYTE PTR [RBP],DL
            jne .L_40a625
.L_40a515:

            mov BYTE PTR [RBP+RAX*1],0
.L_40a51a:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40a64a

            add RSP,152
.L_40a538:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a548:

            mov R13,RSP
            mov BYTE PTR [RSP],45
            mov R15D,5
            lea RSI,QWORD PTR [R13+1]
            jmp .L_40a41c
          .byte 0x66
          .byte 0x90
.L_40a560:

            mov RDX,QWORD PTR [RSP]
            mov RCX,RBP
            mov QWORD PTR [RBP],RDX
            mov RDX,QWORD PTR [R13+RAX*1-8]
            mov QWORD PTR [RBP+RAX*1-8],RDX
            lea RDX,QWORD PTR [RBP+8]
            and RDX,-8
            sub RCX,RDX
            add EBX,ECX
            sub R13,RCX
            and EBX,4294967288
            cmp EBX,8
            jb .L_40a515

            and EBX,4294967288
            xor ECX,ECX
.L_40a592:

            mov ESI,ECX
            add ECX,8
            mov RDI,QWORD PTR [R13+RSI*1]
            cmp ECX,EBX
            mov QWORD PTR [RDX+RSI*1],RDI
            jb .L_40a592

            jmp .L_40a515
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a5b0:

            lea EDI,DWORD PTR [RBX+1]
            mov ESI,128
            lea R8,QWORD PTR [RIP+.L_43f436]
            mov EDX,1
            xor EAX,EAX
            mov RCX,-1
            sub ESI,EDI
            mov R15,RDI
            add RDI,R13
            mov BYTE PTR [RSP+RBX*1],91
            call __snprintf_chk@PLT

            mov EDI,DWORD PTR [R14+8]
            mov R9D,DWORD PTR [R14+12]
            add EAX,R15D
            lea EBX,DWORD PTR [RAX+1]
            lea EDX,DWORD PTR [RDI+1]
            cmp R9D,EDX
            je .L_40a60b

            mov EDX,EAX
            cmp R9D,-1
            mov BYTE PTR [RSP+RDX*1],58
            jne .L_40a47a

            lea EDX,DWORD PTR [RAX+2]
            mov EAX,EBX
            mov EBX,EDX
.L_40a60b:

            mov BYTE PTR [RSP+RAX*1],93
            jmp .L_40a4a9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a618:

            mov EBX,R15D
            jmp .L_40a449
.L_40a620:

            add EBX,2
            jmp .L_40a60b
.L_40a625:

            movzx EDX,WORD PTR [R13+RAX*1-2]
            mov WORD PTR [RBP+RAX*1-2],DX
            jmp .L_40a515
.L_40a635:

            mov EDX,DWORD PTR [R13]
            mov DWORD PTR [RBP],EDX
            mov EDX,DWORD PTR [R13+RAX*1-4]
            mov DWORD PTR [RBP+RAX*1-4],EDX
            jmp .L_40a515
.L_40a64a:

            call __stack_chk_fail@PLT
.L_40a64f:

            nop
.L_40a650:

            push RBP
            push RBX
            xor EBP,EBP
            sub RSP,8
.L_40a658:

            mfence 
            mov RBX,QWORD PTR [RIP+.L_6573d0]
            test RBX,RBX
            je .L_40a678
.L_40a667:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a678:

            mov ESI,8
            mov EDI,3
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_40a6c8

            call .L_40b740

            mov QWORD PTR [RBX],RAX
            add RAX,24
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],RAX
            mov RAX,RBP
            lock cmpxchg QWORD PTR [RIP+.L_6573d0],RBX
            jne .L_40a6d1

            lea RDI,QWORD PTR [RIP+.L_409ff0]
            call .L_43e2d0

            jmp .L_40a667
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a6c8:

            lea RBX,QWORD PTR [RIP+.L_6573c8]
            jmp .L_40a667
.L_40a6d1:

            mov RDI,RBX
            call free@PLT

            jmp .L_40a658
.L_40a6de:

            nop
            nop
.L_40a6e0:

            push R14
            push R13
            mov R14D,ECX
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40a6ee:

            mov RDI,QWORD PTR [RDI+128]
            mov R13,RDX
            mov RBX,RSI
            add RSI,144
            call .L_40b250

            mov RSI,RBP
            mov R12,RAX
            mov R8D,R14D
            mov RCX,R13
            mov RDX,RBX
            mov RDI,RAX
            call .L_40af80

            mov RDI,R12
            mov EBP,EAX
            call .L_40ad70

            test EBP,EBP
            je .L_40a736

            mov DWORD PTR [RBX+140],2
.L_40a736:

            pop RBX
.L_40a737:

            mov EAX,EBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40a741:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a750:

            xor R8D,R8D
            jmp .L_40a6e0
.L_40a755:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a760:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov R12D,ECX
            mov RBX,R8
            sub RSP,40
.L_40a77a:

            test RDI,RDI
            mov QWORD PTR [RSP+8],RDX
            je .L_40a948
.L_40a788:

            test RBP,RBP
            je .L_40a908

            test R12D,R12D
            jne .L_40a928

            xor R14D,R14D
.L_40a79d:

            mov ESI,208
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_40a900

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [R15+48]
            movups XMMWORD PTR [R15+48],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            movups XMMWORD PTR [RAX+48],XMM0
            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_40ace7

            mov RDI,R13
            call .L_406b50

            movdqu XMM0,XMMWORD PTR [RBP]
            xor EAX,EAX
            test RBX,RBX
            mov QWORD PTR [R15+120],R13
            mov DWORD PTR [R15+184],R12D
            movups XMMWORD PTR [R15+128],XMM0
            sete AL
            test R12D,R12D
            mov QWORD PTR [R15+176],R14
            movdqu XMM0,XMMWORD PTR [RBP+16]
            mov DWORD PTR [R15+112],EAX
            movups XMMWORD PTR [R15+144],XMM0
            jne .L_40a958

            call .L_40b740

            test RBX,RBX
            mov R13,RAX
            je .L_40a97d
.L_40a847:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_40a90f

            lea RBP,QWORD PTR [RIP+.L_44c614]
            lea R13,QWORD PTR [RIP+.L_43f860]
            mov R14,-1
            jmp .L_40a896

            nop
            nop
            nop
            nop
            nop
            nop
.L_40a870:

            mov RSI,RAX
            mov ECX,9
            mov RDI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40aa80
.L_40a88a:

            add RBX,8
            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_40a90f
.L_40a896:

            mov ECX,3
            mov RSI,RAX
            mov RDI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_40a870

            mov RCX,QWORD PTR [R15+120]
.L_40a8b1:

            mfence 
            mov RDX,QWORD PTR [RCX+160]
            test RDX,RDX
            je .L_40aa08

            sub RDX,1
.L_40a8c8:

            cmp RDX,-3
            ja .L_40a88a

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_410700

            mov QWORD PTR [R15+192],RAX
            lea RAX,QWORD PTR [RIP+.L_4113b0]
            mov QWORD PTR [R15+168],RBP
            mov QWORD PTR [R15+160],RAX
            jmp .L_40a90f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a900:

            mov RDI,R14
            call free@PLT
.L_40a908:

            lea R15,QWORD PTR [RIP+.L_43fc80]
.L_40a90f:

            add RSP,40
.L_40a913:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a928:

            mov EDI,R12D
            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            mov R14,RAX
            jne .L_40a79d

            jmp .L_40a908
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a948:

            call .L_4068a0

            mov R13,RAX
            jmp .L_40a788
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a958:

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R14
            shl RDX,4
            call memcpy@PLT

            call .L_40b740

            test RBX,RBX
            mov R13,RAX
            jne .L_40a847
.L_40a97d:

            lea R14,QWORD PTR [RIP+.L_4113b0]
            lea RBP,QWORD PTR [RIP+.L_4250e0]
            jmp .L_40a9a7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a990:

            cmp RAX,RBP
            je .L_40aae0
.L_40a999:

            add RBX,24
            cmp RBX,48
            je .L_40a90f
.L_40a9a7:

            mov RAX,QWORD PTR [R13+RBX*1+16]
            cmp RAX,R14
            jne .L_40a990

            mov RSI,QWORD PTR [R15+120]
.L_40a9b5:

            mfence 
            mov RDX,QWORD PTR [RSI+160]
            test RDX,RDX
            je .L_40ab40

            sub RDX,1
.L_40a9cc:

            cmp RDX,-3
            ja .L_40a999

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_410700

            mov QWORD PTR [R15+192],RAX
            lea RAX,QWORD PTR [RIP+.L_44c614]
            mov QWORD PTR [R15+160],R14
            mov QWORD PTR [R15+168],RAX
            jmp .L_40a90f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aa08:

            mov RDI,RCX
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+24],RDX
            call .L_4106c0

            mov RCX,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea RSI,QWORD PTR [RCX+160]
            je .L_40acc0

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [RSI],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40a8c8

            cmp RDX,-3
            ja .L_40a8b1

            cmp RDI,1
            je .L_40a8b1

            mov QWORD PTR [RSP+16],RCX
            call .L_4106d0

            mov RCX,QWORD PTR [RSP+16]
            jmp .L_40a8b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aa80:

            mov RCX,QWORD PTR [R15+120]
.L_40aa84:

            mfence 
            mov RDX,QWORD PTR [RCX+168]
            test RDX,RDX
            je .L_40abb0

            sub RDX,1
.L_40aa9b:

            cmp RDX,-3
            ja .L_40a88a

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_4250c0

            mov QWORD PTR [R15+200],RAX
            lea RAX,QWORD PTR [RIP+.L_4250e0]
            mov QWORD PTR [R15+168],R13
            mov QWORD PTR [R15+160],RAX
            jmp .L_40a90f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aae0:

            mov RSI,QWORD PTR [R15+120]
.L_40aae4:

            mfence 
            mov RDX,QWORD PTR [RSI+168]
            test RDX,RDX
            je .L_40ac50

            sub RDX,1
.L_40aafb:

            cmp RDX,-3
            ja .L_40a999

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,R12D
            mov RDI,R15
            call .L_4250c0

            mov QWORD PTR [R15+200],RAX
            lea RAX,QWORD PTR [RIP+.L_43f860]
            mov QWORD PTR [R15+160],RBP
            mov QWORD PTR [R15+168],RAX
            jmp .L_40a90f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ab40:

            mov RDI,RSI
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            call .L_4106c0

            mov RSI,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea R9,QWORD PTR [RSI+160]
            je .L_40ac20

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [R9],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40a9cc

            cmp RDI,1
            je .L_40a9b5

            cmp RDX,-3
            ja .L_40a9b5

            mov QWORD PTR [RSP+16],RSI
            call .L_4106d0

            mov RSI,QWORD PTR [RSP+16]
            jmp .L_40a9b5
          .byte 0x66
          .byte 0x90
.L_40abb0:

            mov RDI,RCX
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+24],RDX
            call .L_425080

            mov RCX,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea RSI,QWORD PTR [RCX+168]
            je .L_40ac40

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [RSI],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40aa9b

            cmp RDX,-3
            ja .L_40aa84

            cmp RDI,1
            je .L_40aa84

            mov QWORD PTR [RSP+16],RCX
            call .L_425090

            mov RCX,QWORD PTR [RSP+16]
            jmp .L_40aa84
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ac20:

            mov RCX,-1
            lock cmpxchg QWORD PTR [R9],RCX
            je .L_40a999

            jmp .L_40a9b5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ac40:

            lock cmpxchg QWORD PTR [RSI],R14
            je .L_40a88a

            jmp .L_40aa84
.L_40ac50:

            mov RDI,RSI
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            call .L_425080

            mov RSI,QWORD PTR [RSP+16]
            test RAX,RAX
            mov RDI,RAX
            lea R9,QWORD PTR [RSI+168]
            je .L_40acd0

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,RDX
            lock cmpxchg QWORD PTR [R9],RDI
            sete AL
            lea RDX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40aafb

            cmp RDI,1
            je .L_40aae4

            cmp RDX,-3
            ja .L_40aae4

            mov QWORD PTR [RSP+16],RSI
            call .L_425090

            mov RSI,QWORD PTR [RSP+16]
            jmp .L_40aae4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40acc0:

            lock cmpxchg QWORD PTR [RSI],R14
            je .L_40a88a

            jmp .L_40a8b1
.L_40acd0:

            mov RCX,-1
            lock cmpxchg QWORD PTR [R9],RCX
            je .L_40a999

            jmp .L_40aae4
.L_40ace7:

            lea RCX,QWORD PTR [RIP+.L_43fbe0]
            lea RSI,QWORD PTR [RIP+.L_43f84f]
            lea RDI,QWORD PTR [RIP+.L_43f888]
            mov EDX,138
            call __assert_fail@PLT
.L_40ad06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ad10:

            lea RAX,QWORD PTR [RIP+.L_43fc80]
            ret 
.L_40ad18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ad20:

            test RDI,RDI
            je .L_40ad34

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40ad34

            test EAX,EAX
            jle .L_40ad40

            lock add DWORD PTR [RDI],1
.L_40ad34:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ad40:

            lea RCX,QWORD PTR [RIP+.L_43fba0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_40ad63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ad70:

            test RDI,RDI
            je .L_40adc0

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40adc0

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_40ada0

            lock sub DWORD PTR [RDI],1
            je .L_40adc8

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ada0:

            lea RCX,QWORD PTR [RIP+.L_43fb60]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x90
.L_40adc0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40adc8:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_40ae60

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_40adef

            call free@PLT
.L_40adef:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_40adff:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,QWORD PTR [RBX+192]
            test RDI,RDI
            je .L_40ae24

            cmp RDI,-1
            je .L_40ae24

            cmp RDI,1
            je .L_40ae24

            call .L_4112c0
.L_40ae24:

            mov RDI,QWORD PTR [RBX+200]
            test RDI,RDI
            je .L_40ae41

            cmp RDI,-1
            je .L_40ae41

            cmp RDI,1
            je .L_40ae41

            call .L_4250d0
.L_40ae41:

            mov RDI,QWORD PTR [RBX+176]
            call free@PLT

            mov RDI,RBX
            pop RBX
.L_40ae51:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ae60:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_40aeae
.L_40ae6f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_40ae60

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_40ae6f
.L_40aeae:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_40aebc

            call free@PLT
.L_40aebc:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_40adff
.L_40aed9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40aee0:

            test RDI,RDI
            je .L_40af08

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40af08

            sub RSP,8
            test EAX,EAX
            jle .L_40af10

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40af08:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af10:

            lea RCX,QWORD PTR [RIP+.L_43fa80]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_40af2f:

            nop
.L_40af30:

            test RDI,RDI
            je .L_40af78

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40af78

            test EAX,EAX
            jle .L_40af50

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40af50:

            lea RCX,QWORD PTR [RIP+.L_43f9e0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af78:

            xor EAX,EAX
            ret 
.L_40af7b:

            nop
            nop
            nop
            nop
            nop
.L_40af80:

            mov EAX,DWORD PTR [RDX+184]
            test EAX,EAX
            jne .L_40af90

            mov EAX,1
            ret 
.L_40af90:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            mov R12,RCX
            mov RBX,RDX
            mov RBP,RDI
            sub RSP,24
.L_40afad:

            cmp DWORD PTR [RDX],-1
            je .L_40b028

            cmp DWORD PTR [RDX+140],1
            jne .L_40b22e

            cmp DWORD PTR [RDI],-1
            je .L_40b013

            mov RAX,QWORD PTR [RSI+128]
            cmp QWORD PTR [RDI+120],RAX
            jne .L_40b20f

            lea RSI,QWORD PTR [RDX+144]
            lea RDI,QWORD PTR [RDI+128]
            call .L_402120

            test EAX,EAX
            je .L_40b1f0

            mov RAX,QWORD PTR [RBP+160]
            lea RDX,QWORD PTR [RIP+.L_4113b0]
            cmp RAX,RDX
            je .L_40b050

            lea RDX,QWORD PTR [RIP+.L_4250e0]
            cmp RAX,RDX
            je .L_40b0a0
.L_40b013:

            xor EAX,EAX
.L_40b015:

            add RSP,24
.L_40b019:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b028:

            lea RCX,QWORD PTR [RIP+.L_43f960]
            lea RSI,QWORD PTR [RIP+.L_43f84f]
            lea RDI,QWORD PTR [RIP+.L_43f869]
            mov EDX,300
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b050:

            cmp QWORD PTR [RBP+192],0
            mov RDX,-1
            je .L_40b013
.L_40b061:

            mfence 
            mov R15,QWORD PTR [R14+176]
            test R15,R15
            je .L_40b100

            sub R15,1
.L_40b078:

            cmp R15,-3
            ja .L_40b013

            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBX
            mov RSI,R14
            mov RDI,RBP
            call .L_4113b0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_40b015
          .byte 0x90
.L_40b0a0:

            cmp QWORD PTR [RBP+200],0
            mov RDX,-1
            je .L_40b013
.L_40b0b5:

            mfence 
            mov R15,QWORD PTR [R14+184]
            test R15,R15
            je .L_40b168

            sub R15,1
.L_40b0cc:

            cmp R15,-3
            ja .L_40b013

            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBX
            mov RSI,R14
            mov RDI,RBP
            call .L_4250e0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_40b015
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b100:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            call .L_4106e0

            test RAX,RAX
            mov RDI,RAX
            lea RCX,QWORD PTR [R14+176]
            mov RDX,QWORD PTR [RSP+8]
            je .L_40b1d0

            mov RAX,R15
            lock cmpxchg QWORD PTR [RCX],RDI
            sete AL
            lea R15,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40b078

            cmp RDI,1
            je .L_40b061

            cmp R15,-3
            ja .L_40b061

            mov QWORD PTR [RSP+8],RDX
            call .L_4106f0

            mov RDX,QWORD PTR [RSP+8]
            jmp .L_40b061
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b168:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            call .L_4250a0

            test RAX,RAX
            mov RDI,RAX
            lea RCX,QWORD PTR [R14+184]
            mov RDX,QWORD PTR [RSP+8]
            je .L_40b1e0

            mov RAX,R15
            lock cmpxchg QWORD PTR [RCX],RDI
            sete AL
            lea R15,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40b0cc

            cmp RDI,1
            je .L_40b0b5

            cmp R15,-3
            ja .L_40b0b5

            mov QWORD PTR [RSP+8],RDX
            call .L_4250b0

            mov RDX,QWORD PTR [RSP+8]
            jmp .L_40b0b5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b1d0:

            lock cmpxchg QWORD PTR [RCX],RDX
            je .L_40b013

            jmp .L_40b061
.L_40b1e0:

            lock cmpxchg QWORD PTR [RCX],RDX
            je .L_40b013

            jmp .L_40b0b5
.L_40b1f0:

            lea RCX,QWORD PTR [RIP+.L_43f960]
            lea RSI,QWORD PTR [RIP+.L_43f84f]
            lea RDI,QWORD PTR [RIP+.L_43f918]
            mov EDX,307
            call __assert_fail@PLT
.L_40b20f:

            lea RCX,QWORD PTR [RIP+.L_43f960]
            lea RSI,QWORD PTR [RIP+.L_43f84f]
            lea RDI,QWORD PTR [RIP+.L_43f8f0]
            mov EDX,306
            call __assert_fail@PLT
.L_40b22e:

            lea RCX,QWORD PTR [RIP+.L_43f960]
            lea RSI,QWORD PTR [RIP+.L_43f84f]
            lea RDI,QWORD PTR [RIP+.L_43f8b8]
            mov EDX,301
            call __assert_fail@PLT
.L_40b24d:

            nop
            nop
            nop
.L_40b250:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,R8
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40b26a:

            movdqu XMM0,XMMWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+48],XMM0
            test R8,R8
            mov QWORD PTR [RSP],RDX
            mov DWORD PTR [RSP+12],ECX
            movdqu XMM0,XMMWORD PTR [RSI+16]
            mov QWORD PTR [RSP+100],0
            mov DWORD PTR [RSP+108],0
            movaps XMMWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+80],R8
            mov QWORD PTR [RSP+88],RDX
            mov DWORD PTR [RSP+96],ECX
            je .L_40b378

            mov RSI,QWORD PTR [R8]
            test RSI,RSI
            je .L_40b691

            lea RAX,QWORD PTR [RDI+160]
            lea RBP,QWORD PTR [RIP+.L_44c614]
            mov R13,-1
            lea R14,QWORD PTR [RIP+.L_43f860]
            mov QWORD PTR [RSP+16],R15
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+32],RAX
            mov R12,RDI
            mov RBX,R8
            jmp .L_40b32a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b300:

            mov RSI,QWORD PTR [RBX]
            mov ECX,9
            mov RDI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40b520
.L_40b31a:

            add RBX,8
            mov RSI,QWORD PTR [RBX]
            test RSI,RSI
            je .L_40b678
.L_40b32a:

            mov ECX,3
            mov RDI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b300
.L_40b33d:

            mfence 
            mov R15,QWORD PTR [R12+160]
            test R15,R15
            je .L_40b560

            lea RCX,QWORD PTR [R15-1]
.L_40b355:

            cmp RCX,-3
            ja .L_40b300

            mov RBX,R12
            lea RAX,QWORD PTR [RIP+.L_4113b0]
            mov R15,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],RAX
            nop
            nop
            nop
            nop
.L_40b378:

            mov EAX,DWORD PTR [RSP+12]
            mov RDX,QWORD PTR [RSP]
            lea RBP,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],R15
            mov QWORD PTR [RSP+24],R12
            sub EAX,1
            add RDX,24
            shl RAX,4
            mov QWORD PTR [RSP+32],RDX
            add RAX,RDX
            mov R14,RAX
.L_40b3a5:

            mfence 
            mov R13,QWORD PTR [RBX+176]
            test R13,R13
            je .L_40b5b0

            mov R12,R13
            jmp .L_40b3ce
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b3c0:

            mov R12,QWORD PTR [R12+8]
            test R12,R12
            je .L_40b5b0
.L_40b3ce:

            mov R15,QWORD PTR [R12]
            mov RSI,RBP
            lea RDI,QWORD PTR [R15+128]
            call .L_402120

            test EAX,EAX
            je .L_40b3c0

            mov ECX,DWORD PTR [R15+184]
            cmp ECX,DWORD PTR [RSP+96]
            jne .L_40b3c0

            test ECX,ECX
            je .L_40b473

            mov RDX,QWORD PTR [R15+176]
            mov RAX,QWORD PTR [RSP+88]
            mov EDI,DWORD PTR [RAX]
            cmp DWORD PTR [RDX],EDI
            jne .L_40b3c0

            mov EDI,DWORD PTR [RDX+4]
            cmp DWORD PTR [RAX+4],EDI
            jne .L_40b3c0

            mov EDI,DWORD PTR [RAX+8]
            cmp DWORD PTR [RDX+8],EDI
            jne .L_40b3c0

            lea EDI,DWORD PTR [RCX-1]
            add RAX,16
            add RDX,16
            shl RDI,4
            add RDI,RAX
            jmp .L_40b45a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b430:

            mov R10D,DWORD PTR [RDX]
            cmp DWORD PTR [RAX],R10D
            jne .L_40b3c0

            mov R11D,DWORD PTR [RDX+4]
            cmp DWORD PTR [RAX+4],R11D
            jne .L_40b3c0

            add RAX,16
            add RDX,16
            mov ECX,DWORD PTR [RCX+8]
            cmp DWORD PTR [RSI+8],ECX
            jne .L_40b3c0
.L_40b45a:

            mov R9D,DWORD PTR [RDX-4]
            cmp DWORD PTR [RAX-4],R9D
            mov RSI,RAX
            mov RCX,RDX
            jne .L_40b3c0

            cmp RDI,RAX
            jne .L_40b430
.L_40b473:

            mov EAX,DWORD PTR [R15+112]
            test EAX,EAX
            je .L_40b483

            cmp QWORD PTR [RSP+80],0
            je .L_40b495
.L_40b483:

            mov RAX,QWORD PTR [RSP+104]
            cmp QWORD PTR [R15+160],RAX
            jne .L_40b3c0
.L_40b495:

            mov RDX,QWORD PTR [R12]
.L_40b499:

            test RDX,RDX
            je .L_40b6c0

            mov EAX,DWORD PTR [RDX]
            cmp EAX,-1
            je .L_40b4b5

            test EAX,EAX
            jle .L_40b6a0

            lock add DWORD PTR [RDX],1
.L_40b4b5:

            mov RBX,QWORD PTR [RSP+120]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RDX
            jne .L_40b6f0

            add RSP,136
.L_40b4d3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40b4e0:

            mov RDI,R12
            call .L_425080

            test RAX,RAX
            mov RDI,RAX
            lea RSI,QWORD PTR [R12+168]
            je .L_40b6e0

            mov RAX,R15
            lock cmpxchg QWORD PTR [RSI],RDI
            sete AL
            lea RCX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40b534

            cmp RCX,-3
            ja .L_40b520

            cmp RDI,1
            je .L_40b520

            call .L_425090
.L_40b520:

            mfence 
            mov R15,QWORD PTR [R12+168]
            test R15,R15
            je .L_40b4e0

            lea RCX,QWORD PTR [R15-1]
.L_40b534:

            cmp RCX,-3
            ja .L_40b31a

            lea RAX,QWORD PTR [RIP+.L_4250e0]
            mov RBX,R12
            mov R15,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],RAX
            jmp .L_40b378
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b560:

            mov RDI,R12
            call .L_4106c0

            test RAX,RAX
            mov RDI,RAX
            mov RDX,QWORD PTR [RSP+32]
            je .L_40b6d0

            mov RAX,R15
            lock cmpxchg QWORD PTR [RDX],RDI
            sete AL
            lea RCX,QWORD PTR [RDI-1]
            test AL,AL
            jne .L_40b355

            cmp RCX,-3
            ja .L_40b33d

            cmp RDI,1
            je .L_40b33d

            call .L_4106d0

            jmp .L_40b33d
          .byte 0x66
          .byte 0x90
.L_40b5b0:

            mov R12D,DWORD PTR [RSP+12]
            mov R15,QWORD PTR [RSP]
            mov RDI,RBX
            mov R8,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov RDX,R15
            mov ECX,R12D
            call .L_40a760

            cmp DWORD PTR [RBX],-1
            mov RDX,RAX
            je .L_40b4b5

            test R12D,R12D
            je .L_40b61d

            mov ESI,DWORD PTR [R15+8]
            test ESI,ESI
            jne .L_40b4b5

            cmp DWORD PTR [R15+12],-1
            jne .L_40b4b5

            mov RAX,QWORD PTR [RSP+32]
            jmp .L_40b618
.L_40b600:

            mov ECX,DWORD PTR [RAX]
            test ECX,ECX
            jne .L_40b4b5

            add RAX,16
            cmp DWORD PTR [RAX-12],-1
            jne .L_40b4b5
.L_40b618:

            cmp RAX,R14
            jne .L_40b600
.L_40b61d:

            mov ESI,16
            mov EDI,1
            mov QWORD PTR [RSP+40],RDX
            call calloc@PLT

            test RAX,RAX
            mov R12,RAX
            mov RDX,QWORD PTR [RSP+40]
            je .L_40b4b5

            mov RAX,R13
            mov QWORD PTR [R12],RDX
            mov QWORD PTR [R12+8],R13
            lock cmpxchg QWORD PTR [RBX+176],R12
            je .L_40b499

            mov RDI,RDX
            call .L_40ad70

            mov RDI,R12
            call free@PLT

            jmp .L_40b3a5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b678:

            cmp QWORD PTR [RSP+104],0
            mov RBX,R12
            mov R15,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            jne .L_40b378
.L_40b691:

            lea RDX,QWORD PTR [RIP+.L_43fc80]
            jmp .L_40b4b5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b6a0:

            lea RCX,QWORD PTR [RIP+.L_43fba0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,160
            call __assert_fail@PLT
          .byte 0x90
.L_40b6c0:

            xor EDX,EDX
            jmp .L_40b4b5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b6d0:

            lock cmpxchg QWORD PTR [RDX],R13
            je .L_40b300

            jmp .L_40b33d
.L_40b6e0:

            lock cmpxchg QWORD PTR [RSI],R13
            je .L_40b31a

            jmp .L_40b520
.L_40b6f0:

            call __stack_chk_fail@PLT
.L_40b6f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b700:

            mov RAX,QWORD PTR [RDI+168]
            ret 
.L_40b708:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b710:

            mov RDI,QWORD PTR [RIP+.L_6573d8]
            lea RAX,QWORD PTR [RIP+.L_656820]
            cmp RDI,RAX
            je .L_40b730

            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b730:

            ret 
.L_40b732:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b740:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
.L_40b75e:

            mfence 
            mov R13,QWORD PTR [RIP+.L_6573d8]
            test R13,R13
            je .L_40b798
.L_40b76d:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_40b997

            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b798:

            lea RDI,QWORD PTR [RIP+.L_43fd50]
            call getenv@PLT

            test RAX,RAX
            mov RBP,RAX
            je .L_40b980

            cmp BYTE PTR [RAX],0
            je .L_40b980

            mov ESI,48
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_40b980

            movdqa XMM0,XMMWORD PTR [RIP+.L_656820]
            xor R12D,R12D
            movdqa XMM1,XMMWORD PTR [RIP+.L_656830]
            movdqa XMM2,XMMWORD PTR [RIP+.L_656840]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM1
            movups XMMWORD PTR [RAX+32],XMM2
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b800:

            mov ESI,44
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_40b948
.L_40b819:

            cmp R12D,1
            ja .L_40b890

            mov R8D,R12D
            mov R9,R14
            mov R15D,R12D
            lea RAX,QWORD PTR [R8+R8*2]
            sub R9,RBP
            lea RBX,QWORD PTR [R13+RAX*8]
            mov RCX,RBX
.L_40b837:

            mov EAX,DWORD PTR [RCX]
            add RCX,4
            lea EDX,DWORD PTR [RAX-16843009]
            not EAX
            and EDX,EAX
            and EDX,2155905152
            je .L_40b837

            mov EAX,EDX
            shr EAX,16
            test EDX,32896
            cmove EDX,EAX
            lea RAX,QWORD PTR [RCX+2]
            cmove RCX,RAX
            mov EAX,EDX
            add AL,DL
            sbb RCX,3
            sub RCX,RBX
            movsxd RCX,ECX
            cmp RCX,R9
            je .L_40b8a8
.L_40b878:

            add RBX,24
            cmp R15D,1
            je .L_40b890

            mov R15D,1
            mov RCX,RBX
            jmp .L_40b837
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b890:

            cmp BYTE PTR [R14],0
            je .L_40b960

            lea RBP,QWORD PTR [R14+1]
            jmp .L_40b800
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b8a8:

            mov RDX,R9
            mov RSI,RBP
            mov RDI,RBX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            call strncmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            jne .L_40b878

            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],R9
            movdqu XMM0,XMMWORD PTR [RBX]
            mov QWORD PTR [RSP+48],RAX
            mov EAX,R15D
            sub EAX,R12D
            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [R8+R8*2]
            lea R8D,DWORD PTR [R12+1]
            movaps XMMWORD PTR [RSP+32],XMM0
            lea RCX,QWORD PTR [R13+RAX*8]
            lea RAX,QWORD PTR [R8+R8*2]
            shl RDX,3
            mov R12,R8
            lea RDI,QWORD PTR [R13+RAX*8]
            mov RSI,RCX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+48]
            movdqa XMM0,XMMWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
            movups XMMWORD PTR [RCX],XMM0
            mov QWORD PTR [RCX+16],RAX
            jmp .L_40b878
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b948:

            mov RDI,RBP
            call strlen@PLT

            lea R14,QWORD PTR [RBP+RAX*1]
            jmp .L_40b819
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b960:

            xor EAX,EAX
            lock cmpxchg QWORD PTR [RIP+.L_6573d8],R13
            jne .L_40b99c

            lea RDI,QWORD PTR [RIP+.L_40b710]
            call .L_43e2d0

            jmp .L_40b76d
          .byte 0x66
          .byte 0x90
.L_40b980:

            lea R13,QWORD PTR [RIP+.L_656820]
            xor EAX,EAX
            lock cmpxchg QWORD PTR [RIP+.L_6573d8],R13
            jmp .L_40b76d
.L_40b997:

            call __stack_chk_fail@PLT
.L_40b99c:

            mov RDI,R13
            call free@PLT

            jmp .L_40b75e
.L_40b9a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9b0:

            xor EAX,EAX
            ret 
.L_40b9b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9c0:

            mov EAX,1
            ret 
.L_40b9c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9d0:

            mov EAX,7
            ret 
.L_40b9d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9e0:

            mov EAX,ESI
            ret 
.L_40b9e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9f0:

            mov EAX,1517976186
            ret 
.L_40b9f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba00:

            xor EAX,EAX
            ret 
.L_40ba03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba10:

            xor EAX,EAX
            ret 
.L_40ba13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba20:

            xor EAX,EAX
            ret 
.L_40ba23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba30:

            jmp .L_4256d0
.L_40ba35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba40:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,320
            mov EDI,1
            sub RSP,8
.L_40ba53:

            call calloc@PLT

            test RAX,RAX
            je .L_40bb60

            lea RDI,QWORD PTR [RAX+8]
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            mov RBX,RAX
            call pthread_mutex_init@PLT

            pxor XMM0,XMM0
            test RBP,RBP
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            je .L_40bb78

            mov EAX,DWORD PTR [RBP]
            cmp EAX,-1
            je .L_40baab

            test EAX,EAX
            mov BYTE PTR [RBP+120],1
            jle .L_40bb38

            lock add DWORD PTR [RBP],1
.L_40baab:

            movdqu XMM0,XMMWORD PTR [RBP+128]
            mov RAX,RBX
            mov QWORD PTR [RBX+112],RBP
            movups XMMWORD PTR [RBX+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+144]
            movups XMMWORD PTR [RBX+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+160]
            movups XMMWORD PTR [RBX+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+176]
            movups XMMWORD PTR [RBX+176],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+192]
            movups XMMWORD PTR [RBX+192],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+208]
            movups XMMWORD PTR [RBX+208],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+224]
            movups XMMWORD PTR [RBX+224],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+240]
            movups XMMWORD PTR [RBX+240],XMM0
            add RSP,8
.L_40bb2e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bb38:

            lea RCX,QWORD PTR [RIP+.L_43ff20]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,160
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bb60:

            lea RBX,QWORD PTR [RIP+.L_656860]
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bb78:

            lea RBP,QWORD PTR [RIP+.L_656860]
            jmp .L_40baab
.L_40bb84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bb90:

            lea RAX,QWORD PTR [RIP+.L_656860]
            ret 
.L_40bb98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bba0:

            test RDI,RDI
            je .L_40bbb4

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40bbb4

            test EAX,EAX
            jle .L_40bbc0

            lock add DWORD PTR [RDI],1
.L_40bbb4:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bbc0:

            lea RCX,QWORD PTR [RIP+.L_43ff20]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_40bbe3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bbf0:

            test RDI,RDI
            je .L_40bc20

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40bc20

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_40bc28

            lock sub DWORD PTR [RDI],1
            je .L_40bc50

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bc20:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bc28:

            lea RCX,QWORD PTR [RIP+.L_43fee0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bc50:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_40bd50

            mov RDI,QWORD PTR [RDI+56]
            cmp R12,RDI
            je .L_40bc77

            call free@PLT
.L_40bc77:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_40bc87:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RAX,QWORD PTR [RBX+256]
            test RAX,RAX
            je .L_40bca4

            mov RDI,QWORD PTR [RBX+192]
            call RAX
.L_40bca4:

            mov RAX,QWORD PTR [RBX+264]
            test RAX,RAX
            je .L_40bcb9

            mov RDI,QWORD PTR [RBX+200]
            call RAX
.L_40bcb9:

            mov RAX,QWORD PTR [RBX+272]
            test RAX,RAX
            je .L_40bcce

            mov RDI,QWORD PTR [RBX+208]
            call RAX
.L_40bcce:

            mov RAX,QWORD PTR [RBX+280]
            test RAX,RAX
            je .L_40bce3

            mov RDI,QWORD PTR [RBX+216]
            call RAX
.L_40bce3:

            mov RAX,QWORD PTR [RBX+288]
            test RAX,RAX
            je .L_40bcf8

            mov RDI,QWORD PTR [RBX+224]
            call RAX
.L_40bcf8:

            mov RAX,QWORD PTR [RBX+296]
            test RAX,RAX
            je .L_40bd0d

            mov RDI,QWORD PTR [RBX+232]
            call RAX
.L_40bd0d:

            mov RAX,QWORD PTR [RBX+304]
            test RAX,RAX
            je .L_40bd22

            mov RDI,QWORD PTR [RBX+240]
            call RAX
.L_40bd22:

            mov RAX,QWORD PTR [RBX+312]
            test RAX,RAX
            je .L_40bd37

            mov RDI,QWORD PTR [RBX+248]
            call RAX
.L_40bd37:

            mov RDI,QWORD PTR [RBX+112]
            call .L_40bbf0

            mov RDI,RBX
            pop RBX
.L_40bd44:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
.L_40bd50:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_40bd9e
.L_40bd5f:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_40bd50

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_40bd5f
.L_40bd9e:

            mov RDI,QWORD PTR [RBX+56]
            cmp R12,RDI
            je .L_40bdac

            call free@PLT
.L_40bdac:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_40bc87
.L_40bdc9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bdd0:

            test RDI,RDI
            je .L_40bdf8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40bdf8

            sub RSP,8
            test EAX,EAX
            jle .L_40be00

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bdf8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40be00:

            lea RCX,QWORD PTR [RIP+.L_43fe00]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_40be1f:

            nop
.L_40be20:

            test RDI,RDI
            je .L_40be68

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_40be68

            test EAX,EAX
            jle .L_40be40

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40be40:

            lea RCX,QWORD PTR [RIP+.L_43fd60]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40be68:

            xor EAX,EAX
            ret 
.L_40be6b:

            nop
            nop
            nop
            nop
            nop
.L_40be70:

            cmp DWORD PTR [RDI],-1
            je .L_40be79

            mov BYTE PTR [RDI+120],1
.L_40be79:

            ret 
.L_40be7b:

            nop
            nop
            nop
            nop
            nop
.L_40be80:

            movzx EAX,BYTE PTR [RDI+120]
            ret 
.L_40be85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40be90:

            mov RAX,QWORD PTR [RDI+112]
            lea RDX,QWORD PTR [RIP+.L_656860]
            test RAX,RAX
            cmove RAX,RDX
            ret 
.L_40bea3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40beb0:

            cmp BYTE PTR [RDI+120],0
            jne .L_40bf10

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+256]
            test RAX,RAX
            je .L_40bee1

            mov RDI,QWORD PTR [RDI+192]
            call RAX
.L_40bee1:

            test RBP,RBP
            je .L_40bf18

            mov QWORD PTR [RBX+128],RBP
            mov QWORD PTR [RBX+192],R13
            mov QWORD PTR [RBX+256],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bf10:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bf18:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+128]
            mov QWORD PTR [RBX+128],RDX
            mov RAX,QWORD PTR [RAX+192]
            mov QWORD PTR [RBX+256],0
            mov QWORD PTR [RBX+192],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40bf4e:

            nop
            nop
.L_40bf50:

            cmp BYTE PTR [RDI+120],0
            jne .L_40bfb0

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+264]
            test RAX,RAX
            je .L_40bf81

            mov RDI,QWORD PTR [RDI+200]
            call RAX
.L_40bf81:

            test RBP,RBP
            je .L_40bfb8

            mov QWORD PTR [RBX+136],RBP
            mov QWORD PTR [RBX+200],R13
            mov QWORD PTR [RBX+264],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bfb0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bfb8:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+136]
            mov QWORD PTR [RBX+136],RDX
            mov RAX,QWORD PTR [RAX+200]
            mov QWORD PTR [RBX+264],0
            mov QWORD PTR [RBX+200],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40bfee:

            nop
            nop
.L_40bff0:

            cmp BYTE PTR [RDI+120],0
            jne .L_40c050

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+272]
            test RAX,RAX
            je .L_40c021

            mov RDI,QWORD PTR [RDI+208]
            call RAX
.L_40c021:

            test RBP,RBP
            je .L_40c058

            mov QWORD PTR [RBX+144],RBP
            mov QWORD PTR [RBX+208],R13
            mov QWORD PTR [RBX+272],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c050:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c058:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+144]
            mov QWORD PTR [RBX+144],RDX
            mov RAX,QWORD PTR [RAX+208]
            mov QWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+208],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c08e:

            nop
            nop
.L_40c090:

            cmp BYTE PTR [RDI+120],0
            jne .L_40c0f0

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+280]
            test RAX,RAX
            je .L_40c0c1

            mov RDI,QWORD PTR [RDI+216]
            call RAX
.L_40c0c1:

            test RBP,RBP
            je .L_40c0f8

            mov QWORD PTR [RBX+152],RBP
            mov QWORD PTR [RBX+216],R13
            mov QWORD PTR [RBX+280],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c0f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c0f8:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+152]
            mov QWORD PTR [RBX+152],RDX
            mov RAX,QWORD PTR [RAX+216]
            mov QWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+216],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c12e:

            nop
            nop
.L_40c130:

            cmp BYTE PTR [RDI+120],0
            jne .L_40c190

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+288]
            test RAX,RAX
            je .L_40c161

            mov RDI,QWORD PTR [RDI+224]
            call RAX
.L_40c161:

            test RBP,RBP
            je .L_40c198

            mov QWORD PTR [RBX+160],RBP
            mov QWORD PTR [RBX+224],R13
            mov QWORD PTR [RBX+288],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c190:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c198:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+160]
            mov QWORD PTR [RBX+160],RDX
            mov RAX,QWORD PTR [RAX+224]
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+224],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c1ce:

            nop
            nop
.L_40c1d0:

            cmp BYTE PTR [RDI+120],0
            jne .L_40c230

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+296]
            test RAX,RAX
            je .L_40c201

            mov RDI,QWORD PTR [RDI+232]
            call RAX
.L_40c201:

            test RBP,RBP
            je .L_40c238

            mov QWORD PTR [RBX+168],RBP
            mov QWORD PTR [RBX+232],R13
            mov QWORD PTR [RBX+296],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c230:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c238:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+168]
            mov QWORD PTR [RBX+168],RDX
            mov RAX,QWORD PTR [RAX+232]
            mov QWORD PTR [RBX+296],0
            mov QWORD PTR [RBX+232],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c26e:

            nop
            nop
.L_40c270:

            cmp BYTE PTR [RDI+120],0
            jne .L_40c2d0

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+304]
            test RAX,RAX
            je .L_40c2a1

            mov RDI,QWORD PTR [RDI+240]
            call RAX
.L_40c2a1:

            test RBP,RBP
            je .L_40c2d8

            mov QWORD PTR [RBX+176],RBP
            mov QWORD PTR [RBX+240],R13
            mov QWORD PTR [RBX+304],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c2d0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c2d8:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+176]
            mov QWORD PTR [RBX+176],RDX
            mov RAX,QWORD PTR [RAX+240]
            mov QWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+240],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c30e:

            nop
            nop
.L_40c310:

            cmp BYTE PTR [RDI+120],0
            jne .L_40c370

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+312]
            test RAX,RAX
            je .L_40c341

            mov RDI,QWORD PTR [RDI+248]
            call RAX
.L_40c341:

            test RBP,RBP
            je .L_40c378

            mov QWORD PTR [RBX+184],RBP
            mov QWORD PTR [RBX+248],R13
            mov QWORD PTR [RBX+312],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c370:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c378:

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RAX+184]
            mov QWORD PTR [RBX+184],RDX
            mov RAX,QWORD PTR [RAX+248]
            mov QWORD PTR [RBX+312],0
            mov QWORD PTR [RBX+248],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c3ae:

            nop
            nop
.L_40c3b0:

            mov RDX,QWORD PTR [RDI+192]
            jmp QWORD PTR [RDI+128]
.L_40c3bd:

            nop
            nop
            nop
.L_40c3c0:

            mov RDX,QWORD PTR [RDI+200]
            jmp QWORD PTR [RDI+136]
.L_40c3cd:

            nop
            nop
            nop
.L_40c3d0:

            mov RDX,QWORD PTR [RDI+208]
            jmp QWORD PTR [RDI+144]
.L_40c3dd:

            nop
            nop
            nop
.L_40c3e0:

            mov RDX,QWORD PTR [RDI+216]
            jmp QWORD PTR [RDI+152]
.L_40c3ed:

            nop
            nop
            nop
.L_40c3f0:

            mov RDX,QWORD PTR [RDI+224]
            jmp QWORD PTR [RDI+160]
.L_40c3fd:

            nop
            nop
            nop
.L_40c400:

            test ESI,ESI
            mov DWORD PTR [RCX],0
            je .L_40c420

            test EDX,EDX
            je .L_40c420

            mov RAX,QWORD PTR [RDI+168]
            mov R8,QWORD PTR [RDI+232]
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_40c420:

            xor EAX,EAX
            ret 
.L_40c423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c430:

            mov DWORD PTR [RDX],ESI
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR [RDI+176]
            mov R8,QWORD PTR [RDI+240]
            jmp RAX
.L_40c448:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c450:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDX
            sub RSP,8
            mov RCX,QWORD PTR [RDI+248]
            call QWORD PTR [RDI+184]

            cmp EAX,1
            je .L_40c480
.L_40c46d:

            mov EDX,EAX
            mov DWORD PTR [RBX+RDX*4],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c480:

            cmp EBP,DWORD PTR [RBX]
            jne .L_40c46d

            mov DWORD PTR [RBX],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_40c493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c4a0:

            sub RSP,8
            mov RAX,RSI
            mov ESI,EDX
            mov RDI,QWORD PTR [RAX+8]
            mov RDX,RCX
            call QWORD PTR [RAX]

            add RSP,8
            movzx EAX,AL
            ret 
.L_40c4ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40c4c0:

            mov RDI,QWORD PTR [RIP+.L_6573e0]
            jmp .L_4078b0
.L_40c4cc:

            nop
            nop
            nop
            nop
.L_40c4d0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40c4d9:

            mov RDI,QWORD PTR [RDI+72]
            call .L_401950

            mov RDI,QWORD PTR [RBX+112]
            call .L_401950

            mov RDI,QWORD PTR [RBX+152]
            call .L_401950

            mov RBP,QWORD PTR [RBX+168]
            test RBP,RBP
            je .L_40c52d

            lea RAX,QWORD PTR [RIP+.L_657400]
            cmp RBP,RAX
            je .L_40c52d

            mov RDI,QWORD PTR [RBP+24]
            call .L_401950

            mov RDI,QWORD PTR [RBP+32]
            call .L_401950

            mov RDI,QWORD PTR [RBX+168]
            call free@PLT
.L_40c52d:

            add RSP,8
.L_40c531:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp free@PLT
.L_40c53b:

            nop
            nop
            nop
            nop
            nop
.L_40c540:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40c54a:

            mov R11,QWORD PTR [RSI+64]
            movzx EAX,BYTE PTR [R11+6]
            movzx R13D,BYTE PTR [R11+7]
            shl EAX,24
            shl R13D,16
            add EAX,R13D
            movzx R13D,BYTE PTR [R11+8]
            shl R13D,8
            add R13D,EAX
            movzx EAX,BYTE PTR [R11+9]
            add R13D,EAX
            mov EBX,R13D
            sub EBX,1
            js .L_40c5e6

            lea RBP,QWORD PTR [R11+6]
            xor R12D,R12D
            jmp .L_40c59f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c590:

            je .L_40c7a0

            lea R12D,DWORD PTR [R9+1]
            cmp R12D,EBX
            jg .L_40c5e6
.L_40c59f:

            lea EAX,DWORD PTR [RBX+R12*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RDI,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [RAX+RDI*2+4]
            add R10,RBP
            movzx EAX,BYTE PTR [R10]
            shl EAX,16
            mov EDI,EAX
            movzx EAX,BYTE PTR [R10+1]
            shl EAX,8
            add EAX,EDI
            movzx EDI,BYTE PTR [R10+2]
            add EAX,EDI
            cmp ECX,EAX
            jae .L_40c590

            lea EBX,DWORD PTR [R9-1]
            cmp R12D,EBX
            jle .L_40c59f
.L_40c5e6:

            lea RBP,QWORD PTR [RIP+.L_657400]
.L_40c5ed:

            movzx ECX,BYTE PTR [RBP+3]
            movzx EAX,BYTE PTR [RBP+4]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBP+5]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBP+6]
            lea R12D,DWORD PTR [RAX+RCX*1]
            mov RAX,R12
            add R12,R11
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_657400]
            cmove R12,RAX
            movzx ECX,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R12+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R12+3]
            lea R10D,DWORD PTR [RAX+RCX*1-1]
            test R10D,R10D
            js .L_40c6ab

            xor EBX,EBX
            jmp .L_40c661
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c658:

            lea R10D,DWORD PTR [RDI-1]
            cmp EBX,R10D
            jg .L_40c6ab
.L_40c661:

            lea EAX,DWORD PTR [R10+RBX*1]
            mov EDI,EAX
            shr EDI,31
            add EDI,EAX
            sar EDI,1
            movsxd RAX,EDI
            lea R9,QWORD PTR [R12+RAX*4+4]
            movzx EAX,BYTE PTR [R9]
            shl EAX,16
            mov ECX,EAX
            movzx EAX,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R9+2]
            add EAX,ECX
            cmp EDX,EAX
            jb .L_40c658

            movzx ECX,BYTE PTR [R9+3]
            add EAX,ECX
            cmp EDX,EAX
            jbe .L_40c770

            lea EBX,DWORD PTR [RDI+1]
            cmp EBX,R10D
            jle .L_40c661
.L_40c6ab:

            movzx ECX,BYTE PTR [RBP+7]
            movzx EAX,BYTE PTR [RBP+8]
            mov ESI,ECX
            shl EAX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RBP+9]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBP+10]
            add ECX,EAX
            lea RAX,QWORD PTR [RIP+.L_657400]
            add R11,RCX
            test ECX,ECX
            cmove R11,RAX
            movzx EAX,BYTE PTR [R11]
            movzx EBX,BYTE PTR [R11+1]
            shl EAX,24
            shl EBX,16
            lea EAX,DWORD PTR [RAX+RBX*1]
            movzx EBX,BYTE PTR [R11+2]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R11+3]
            add EBX,EAX
            mov R9D,EBX
            sub R9D,1
            js .L_40c75b

            xor R10D,R10D
            jmp .L_40c71f
          .byte 0x66
          .byte 0x90
.L_40c710:

            je .L_40c7c0

            lea R10D,DWORD PTR [RSI+1]
            cmp R10D,R9D
            jg .L_40c75b
.L_40c71f:

            lea EAX,DWORD PTR [R10+R9*1]
            mov ESI,EAX
            shr ESI,31
            add ESI,EAX
            sar ESI,1
            movsxd RAX,ESI
            lea RDI,QWORD PTR [RAX+RAX*4+4]
            add RDI,R11
            movzx EAX,BYTE PTR [RDI]
            shl EAX,16
            mov ECX,EAX
            movzx EAX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+2]
            add EAX,ECX
            cmp EDX,EAX
            jae .L_40c710

            lea R9D,DWORD PTR [RSI-1]
            cmp R10D,R9D
            jle .L_40c71f
.L_40c75b:

            add RSP,8
.L_40c75f:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c770:

            cmp EDI,-1
            je .L_40c6ab

            mov EAX,EDX
            mov RCX,RSI
            mov RDI,QWORD PTR [RSI+8]
            mov RDX,R8
            mov ESI,EAX
            call QWORD PTR [RCX]

            add RSP,8
            movzx EAX,AL
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c7a0:

            cmp R9D,R13D
            jae .L_40c5e6

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*4]
            lea RAX,QWORD PTR [R9+RAX*2+4]
            add RBP,RAX
            jmp .L_40c5ed
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c7c0:

            cmp ESI,-1
            je .L_40c75b

            cmp ESI,EBX
            lea RDX,QWORD PTR [RIP+.L_657400]
            jae .L_40c7da

            mov ESI,ESI
            lea RDX,QWORD PTR [RSI+RSI*4+4]
            add RDX,R11
.L_40c7da:

            movzx EAX,BYTE PTR [RDX+3]
            movzx EDX,BYTE PTR [RDX+4]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R8],EAX
            add RSP,8
.L_40c7f1:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c7fd:

            nop
            nop
            nop
.L_40c800:

            push RBP
            push RBX
            sub RSP,8
.L_40c806:

            mov R8D,DWORD PTR [RSI+80]
            mov RBX,QWORD PTR [RDI+128]
            movsxd RAX,DWORD PTR [RDI+136]
            cmp EDX,R8D
            movsxd RCX,DWORD PTR [RBX+148]
            jb .L_40c860

            test R8D,R8D
            je .L_40c8c8

            test ECX,ECX
            jne .L_40c840

            mov RDI,RBX
            call .L_406c10

            movsxd RCX,DWORD PTR [RBX+148]
.L_40c840:

            xor EBP,EBP
.L_40c842:

            mov EAX,ECX
            add RSP,8
.L_40c848:

            shr EAX,31
            add EAX,ECX
            sar EAX,1
            cdqe 
            add RAX,RBP
            cqo 
            idiv RCX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c860:

            mov EDI,DWORD PTR [RSI+84]
            mov RSI,QWORD PTR [RSI+104]
            lea R8D,DWORD PTR [RDI-1]
            cmp EDX,EDI
            cmovae EDX,R8D
            mov EDX,EDX
            lea RDX,QWORD PTR [RSI+RDX*4]
            movzx ESI,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EDX
            movzx ESI,SI
.L_40c886:

            movsx RSI,SI
            imul RAX,RSI
            test ECX,ECX
            mov RBP,RAX
            jne .L_40c8a4

            mov RDI,RBX
            call .L_406c10

            movsxd RCX,DWORD PTR [RBX+148]
.L_40c8a4:

            test RBP,RBP
            jns .L_40c842

            mov EAX,ECX
            add RSP,8
.L_40c8af:

            shr EAX,31
            add EAX,ECX
            sar EAX,1
            neg EAX
            cdqe 
            add RAX,RBP
            cqo 
            idiv RCX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c8c8:

            mov ESI,DWORD PTR [RSI+88]
            jmp .L_40c886
.L_40c8cd:

            nop
            nop
            nop
.L_40c8d0:

            push RBP
            push RBX
            sub RSP,8
.L_40c8d6:

            mov EAX,DWORD PTR [RSI+120]
            mov RBP,QWORD PTR [RDI+128]
            movsxd RBX,DWORD PTR [RDI+140]
            cmp EDX,EAX
            mov R8D,DWORD PTR [RBP+148]
            jb .L_40c930

            test EAX,EAX
            je .L_40c990

            test R8D,R8D
            jne .L_40c9a0

            mov RDI,RBP
            xor EBX,EBX
            call .L_406c10

            mov EDX,DWORD PTR [RBP+148]
.L_40c913:

            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            cdqe 
.L_40c91e:

            add RAX,RBX
            movsxd RCX,EDX
            add RSP,8
.L_40c928:

            cqo 
            idiv RCX
            pop RBX
            pop RBP
            ret 
.L_40c930:

            mov EAX,DWORD PTR [RSI+124]
            lea ECX,DWORD PTR [RAX-1]
            cmp EDX,EAX
            mov RAX,QWORD PTR [RSI+144]
            cmovae EDX,ECX
            mov EDX,EDX
            lea RAX,QWORD PTR [RAX+RDX*4]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
.L_40c957:

            neg ECX
            movsx RAX,CX
            imul RBX,RAX
            test R8D,R8D
            jne .L_40c975

            mov RDI,RBP
            call .L_406c10

            mov R8D,DWORD PTR [RBP+148]
.L_40c975:

            test RBX,RBX
            mov EDX,R8D
            jns .L_40c913

            mov EAX,R8D
            shr EAX,31
            add EAX,R8D
            sar EAX,1
            neg EAX
            cdqe 
            jmp .L_40c91e
          .byte 0x66
          .byte 0x90
.L_40c990:

            mov ECX,DWORD PTR [RSI+128]
            jmp .L_40c957
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c9a0:

            mov EDX,R8D
            xor EBX,EBX
            jmp .L_40c913
.L_40c9aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40c9b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RDX
            sub RSP,8
.L_40c9c7:

            mov R15,QWORD PTR [RDI+128]
            movzx EBX,WORD PTR [RSI+92]
            mov R14D,DWORD PTR [RDI+140]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40c9f3

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
.L_40c9f3:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40ca0e

            neg EDX
.L_40ca0e:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+94]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP],EAX
            mov R15,QWORD PTR [R12+128]
            mov R14D,DWORD PTR [R12+140]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40ca4b

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
.L_40ca4b:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40ca66

            neg EDX
.L_40ca66:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+96]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+4],EAX
            mov R13D,DWORD PTR [R12+140]
            mov R12,QWORD PTR [R12+128]
            movsxd RCX,DWORD PTR [R12+148]
            test ECX,ECX
            jne .L_40caa5

            mov RDI,R12
            call .L_406c10

            movsxd RCX,DWORD PTR [R12+148]
.L_40caa5:

            movsxd RDX,R13D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cac0

            neg EDX
.L_40cac0:

            movsxd RDX,EDX
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+8],EAX
            add RSP,8
.L_40cad2:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40cae2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40caf0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RDX
            sub RSP,8
.L_40cb07:

            mov R15,QWORD PTR [RDI+128]
            movzx EBX,WORD PTR [RSI+132]
            mov R14D,DWORD PTR [RDI+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40cb36

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
.L_40cb36:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cb51

            neg EDX
.L_40cb51:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+134]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP],EAX
            mov R15,QWORD PTR [R12+128]
            mov R14D,DWORD PTR [R12+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40cb91

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
.L_40cb91:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cbac

            neg EDX
.L_40cbac:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R13+136]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+4],EAX
            mov R13D,DWORD PTR [R12+136]
            mov R12,QWORD PTR [R12+128]
            movsxd RCX,DWORD PTR [R12+148]
            test ECX,ECX
            jne .L_40cbee

            mov RDI,R12
            call .L_406c10

            movsxd RCX,DWORD PTR [R12+148]
.L_40cbee:

            movsxd RDX,R13D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cc09

            neg EDX
.L_40cc09:

            movsxd RDX,EDX
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [RBP+8],EAX
            add RSP,8
.L_40cc1b:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40cc2b:

            nop
            nop
            nop
            nop
            nop
.L_40cc30:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_657400]
            mov RBP,RSI
            mov R12,RCX
            sub RSP,56
.L_40cc51:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_40cc61:

            mfence 
            mov R14,QWORD PTR [RBP+168]
            test R14,R14
            je .L_40cfb0
.L_40cc74:

            cmp R15D,DWORD PTR [R14+4]
            jb .L_40ce00
.L_40cc7e:

            mov EAX,DWORD PTR [R12]
            xor EBP,EBP
.L_40cc84:

            mov R15,QWORD PTR [R13+128]
            mov EBX,EAX
            mov R14D,DWORD PTR [R13+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            je .L_40cf68
.L_40cca3:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40ccbe

            neg EDX
.L_40ccbe:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R12+4]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [R12],EAX
            mov R15,QWORD PTR [R13+128]
            mov R14D,DWORD PTR [R13+140]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40ccfb

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
.L_40ccfb:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cd16

            neg EDX
.L_40cd16:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R12+8]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [R12+4],EAX
            mov R15,QWORD PTR [R13+128]
            mov R14D,DWORD PTR [R13+136]
            movsxd RCX,DWORD PTR [R15+148]
            test ECX,ECX
            jne .L_40cd54

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
.L_40cd54:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cd6f

            neg EDX
.L_40cd6f:

            movsxd RDX,EDX
            movzx EBX,WORD PTR [R12+12]
            add RAX,RDX
            cqo 
            idiv RCX
            mov DWORD PTR [R12+8],EAX
            mov R14D,DWORD PTR [R13+140]
            mov R13,QWORD PTR [R13+128]
            movsxd RCX,DWORD PTR [R13+148]
            test ECX,ECX
            jne .L_40cdad

            mov RDI,R13
            call .L_406c10

            movsxd RCX,DWORD PTR [R13+148]
.L_40cdad:

            movsxd RDX,R14D
            movsx RAX,BX
            imul RAX,RDX
            mov EDX,ECX
            shr EDX,31
            add EDX,ECX
            sar EDX,1
            test RAX,RAX
            jns .L_40cdc8

            neg EDX
.L_40cdc8:

            movsxd RDX,EDX
            add RAX,RDX
            cqo 
            idiv RCX
            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            mov DWORD PTR [R12+12],EAX
            mov EAX,EBP
            jne .L_40d33e

            add RSP,56
.L_40cdf2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ce00:

            cmp BYTE PTR [R14],0
            mov R9,QWORD PTR [R14+8]
            mov EAX,R15D
            lea R10D,DWORD PTR [R15+1]
            jne .L_40cf80

            lea R8,QWORD PTR [R9+RAX*4]
            movzx EAX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            movzx EDX,BYTE PTR [R8+3]
            shl EDI,16
            shl EAX,24
            lea EAX,DWORD PTR [RAX+RDI*1]
            movzx EDI,BYTE PTR [R8+2]
            lea R8,QWORD PTR [R9+R10*4]
            shl EDI,8
            add EDI,EAX
            movzx EAX,BYTE PTR [R8+1]
            add EDI,EDX
            movzx EDX,BYTE PTR [R8]
            shl EAX,16
            mov ESI,EDX
            shl ESI,24
            lea EDX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R8+3]
            add EAX,EDX
.L_40ce65:

            cmp EDI,EAX
            ja .L_40cc7e

            cmp EAX,DWORD PTR [R14+40]
            ja .L_40cc7e

            sub EAX,EDI
            cmp EAX,9
            jbe .L_40d0e0

            mov EDX,EDI
            add RDX,QWORD PTR [R14+16]
            movzx ECX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+3]
            movzx ESI,BYTE PTR [RDX+7]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDX+6]
            shl EAX,8
            add EAX,ESI
            cmp CX,AX
            jge .L_40d190

            movzx EAX,WORD PTR [RDX+2]
.L_40ceaf:

            rol AX,8
            cwde 
            mov DWORD PTR [R12],EAX
            movzx ESI,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            movzx EDI,BYTE PTR [RDX+9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [RDX+8]
            shl ECX,8
            add ECX,EDI
            cmp SI,CX
            jle .L_40d180

            movzx ESI,WORD PTR [RDX+4]
.L_40cedf:

            rol SI,8
            movsx ESI,SI
            mov DWORD PTR [R12+4],ESI
            movzx EDI,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            movzx R8D,BYTE PTR [RDX+7]
            shl EDI,8
            add EDI,ECX
            movzx ECX,BYTE PTR [RDX+6]
            shl ECX,8
            add ECX,R8D
            cmp DI,CX
            jle .L_40d170

            movzx ECX,WORD PTR [RDX+2]
.L_40cf14:

            rol CX,8
            movsx ECX,CX
            sub ECX,EAX
            mov DWORD PTR [R12+8],ECX
            movzx EDI,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            movzx R8D,BYTE PTR [RDX+9]
            shl EDI,8
            add EDI,ECX
            movzx ECX,BYTE PTR [RDX+8]
            shl ECX,8
            add ECX,R8D
            cmp DI,CX
            jge .L_40d160

            movzx EDX,WORD PTR [RDX+4]
.L_40cf4b:

            rol DX,8
            mov EBP,1
            movsx EDX,DX
            sub EDX,ESI
            mov DWORD PTR [R12+12],EDX
            jmp .L_40cc84
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cf68:

            mov RDI,R15
            call .L_406c10

            movsxd RCX,DWORD PTR [R15+148]
            jmp .L_40cca3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cf80:

            lea RAX,QWORD PTR [R9+RAX*2]
            movzx EDI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,EDX
            lea RDX,QWORD PTR [R9+R10*2]
            movzx EDI,DI
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            add EDI,EDI
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            jmp .L_40ce65
          .byte 0x90
.L_40cfb0:

            mov ESI,48
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_40d150

            mov RDI,QWORD PTR [RBP+160]
            mov RAX,QWORD PTR [RDI+120]
            mov QWORD PTR [RSP+24],RDI
            test RAX,RAX
            je .L_40d0f0

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1751474532
            call RAX

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_40d0f0
.L_40cfff:

            mov RDI,QWORD PTR [RSP]
            call .L_401c30

            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_401d50

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            call .L_401d40

            mov RDX,QWORD PTR [RSP+16]
            mov ESI,EAX
            add RSI,RDX
            jb .L_40d343

            test RDX,RDX
            je .L_40d141

            cmp EAX,53
            ja .L_40d100
.L_40d048:

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            mov RDI,QWORD PTR [RSP]
            call .L_401950

            call .L_401c20

            mov QWORD PTR [RSP],RAX
.L_40d064:

            mov RDI,QWORD PTR [RSP]
            call .L_401d20

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_401d50

            test RAX,RAX
            cmove RAX,RBX
            movzx EDX,BYTE PTR [RAX+50]
            movzx ESI,BYTE PTR [RAX+51]
            shl EDX,8
            add EDX,ESI
            movsx ESI,DX
            cmp ESI,1
            ja .L_40d0a8

            movzx ESI,BYTE PTR [RAX+52]
            movzx EAX,BYTE PTR [RAX+53]
            shl ESI,8
            add SI,AX
            je .L_40d1a0
.L_40d0a8:

            mov RDI,QWORD PTR [RSP]
            call .L_401950
.L_40d0b1:

            xor EAX,EAX
            lock cmpxchg QWORD PTR [RBP+168],R14
            je .L_40cc74

            mov RDI,QWORD PTR [R14+24]
            call .L_401950

            mov RDI,QWORD PTR [R14+32]
            call .L_401950

            jmp .L_40cc61
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d0e0:

            mov EAX,DWORD PTR [R12]
            mov EBP,1
            jmp .L_40cc84
          .byte 0x66
          .byte 0x90
.L_40d0f0:

            call .L_401c20

            mov QWORD PTR [RSP],RAX
            jmp .L_40cfff
          .byte 0x66
          .byte 0x90
.L_40d100:

            movzx EAX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_40d048

            movzx ESI,BYTE PTR [RDX+12]
            movzx EAX,BYTE PTR [RDX+13]
            shl ESI,24
            shl EAX,16
            lea ESI,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RDX+14]
            movzx EDX,BYTE PTR [RDX+15]
            shl EAX,8
            add EAX,ESI
            add EAX,EDX
            cmp EAX,1594834165
            jne .L_40d048
.L_40d141:

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            jmp .L_40d064
.L_40d150:

            lea R14,QWORD PTR [RIP+.L_657400]
            jmp .L_40cc74
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d160:

            movzx EDX,WORD PTR [RDX+8]
            jmp .L_40cf4b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d170:

            movzx ECX,WORD PTR [RDX+6]
            jmp .L_40cf14
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d180:

            movzx ESI,WORD PTR [RDX+8]
            jmp .L_40cedf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d190:

            movzx EAX,WORD PTR [RDX+6]
            jmp .L_40ceaf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d1a0:

            mov RDI,QWORD PTR [RSP]
            test DX,DX
            sete BYTE PTR [R14]
            call .L_401950

            mov RDI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_40d318

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1819239265
            call RAX

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_40d318
.L_40d1dd:

            mov RDI,QWORD PTR [RSP]
            call .L_401c30

            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_401d50

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            call .L_401d40

            mov RDX,QWORD PTR [RSP+16]
            mov EAX,EAX
            add RAX,RDX
            jb .L_40d343

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            mov RAX,QWORD PTR [RSP]
            mov RDI,RAX
            mov QWORD PTR [R14+24],RAX
            call .L_401d20

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+24]
            test RAX,RAX
            cmove RAX,RBX
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_40d330

            mov RDX,QWORD PTR [RDI+128]
            mov ESI,1735162214
            call RAX

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_40d330
.L_40d271:

            mov RDI,QWORD PTR [RSP]
            call .L_401c30

            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_401d50

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            call .L_401d40

            mov RDX,QWORD PTR [RSP+16]
            mov EAX,EAX
            add RAX,RDX
            jb .L_40d343

            mov RDI,QWORD PTR [RSP+8]
            call .L_401950

            mov RAX,QWORD PTR [RSP]
            mov RDI,RAX
            mov QWORD PTR [R14+32],RAX
            call .L_401d20

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [R14+24]
            test RAX,RAX
            cmove RAX,RBX
            mov QWORD PTR [R14+16],RAX
            call .L_401d40

            cmp BYTE PTR [R14],0
            mov EDX,4
            mov ESI,2
            mov RDI,QWORD PTR [R14+32]
            cmove ESI,EDX
            xor EDX,EDX
            div ESI
            cmp EAX,1
            adc EAX,-1
            mov DWORD PTR [R14+4],EAX
            call .L_401d40

            mov DWORD PTR [R14+40],EAX
            jmp .L_40d0b1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d318:

            call .L_401c20

            mov QWORD PTR [RSP],RAX
            jmp .L_40d1dd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d330:

            call .L_401c20

            mov QWORD PTR [RSP],RAX
            jmp .L_40d271
.L_40d33e:

            call __stack_chk_fail@PLT
.L_40d343:

            lea RCX,QWORD PTR [RIP+.L_4401a0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_40d362:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d370:

            push R15
            push R14
            mov ESI,176
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            sub RSP,8
.L_40d386:

            mov RBP,QWORD PTR [RDI+128]
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_40d730

            mov RBX,RAX
            mov RDI,RAX
            mov RSI,RBP
            call .L_40f520

            lea RDI,QWORD PTR [RBX+80]
            mov R8D,1330851634
            mov ECX,1752003704
            mov EDX,1751672161
            mov RSI,RBP
            call .L_40f180

            mov EAX,DWORD PTR [RBP+148]
            test EAX,EAX
            je .L_40d638
.L_40d3d8:

            mov DWORD PTR [RBX+128],EAX
            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40d618

            mov RDX,QWORD PTR [RBP+128]
            mov ESI,1986553185
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R12,RAX
            je .L_40d618
.L_40d408:

            mov RDI,R12
            call .L_401c30

            xor ESI,ESI
            mov R13,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R13
            mov R15,RAX
            call .L_401d40

            mov EDX,EAX
            add RDX,R15
            jb .L_40d73f

            test R15,R15
            je .L_40d608

            cmp EAX,35
            ja .L_40d5f0
.L_40d445:

            mov RDI,R13
            call .L_401950

            mov RDI,R12
            call .L_401950

            call .L_401c20

            mov R12,RAX
.L_40d45d:

            mov RDI,R12
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657400]
            test RAX,RAX
            mov RDI,R12
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+34]
            movzx ECX,BYTE PTR [RAX+35]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            mov DWORD PTR [RBX+124],EDX
            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+132],DX
            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+134],DX
            movzx EDX,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            shl EDX,8
            add EAX,EDX
            mov WORD PTR [RBX+136],AX
            call .L_401950

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40d628

            mov RDX,QWORD PTR [RBP+128]
            mov ESI,1986884728
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R12,RAX
            je .L_40d628
.L_40d4fe:

            mov RDI,R12
            call .L_401c30

            xor ESI,ESI
            mov R13,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R13
            mov R15,RAX
            call .L_401d40

            mov EAX,EAX
            add RAX,R15
            jb .L_40d73f

            mov RDI,R13
            call .L_401950

            mov QWORD PTR [RBX+152],R12
            mov RDI,R12
            call .L_401d40

            mov EDX,DWORD PTR [RBX+124]
            lea ECX,DWORD PTR [RDX*4]
            cmp EAX,ECX
            jae .L_40d55d

            mov EDX,EAX
            shr EDX,2
            lea ECX,DWORD PTR [RDX*4]
            mov DWORD PTR [RBX+124],EDX
.L_40d55d:

            sub EAX,ECX
            mov R12,QWORD PTR [RBX+152]
            shr EAX,1
            add EAX,EDX
            test EDX,EDX
            mov DWORD PTR [RBX+120],EAX
            je .L_40d650
.L_40d575:

            mov RDI,R12
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            lea R12,QWORD PTR [RIP+.L_40c9b0]
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657400]
            test RAX,RAX
            mov QWORD PTR [RBX+160],RBP
            mov QWORD PTR [RBX+168],0
            cmove RAX,RDX
            mov QWORD PTR [RBX+144],RAX
.L_40d5b5:

            mfence 
            mov RBP,QWORD PTR [RIP+.L_6573e0]
            test RBP,RBP
            je .L_40d678
.L_40d5c8:

            add RSP,8
.L_40d5cc:

            mov RDX,RBX
            mov RSI,RBP
            pop RBX
            mov RDI,R14
            lea RCX,QWORD PTR [RIP+.L_40c4d0]
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_409bf0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d5f0:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_40d445
.L_40d608:

            mov RDI,R13
            call .L_401950

            jmp .L_40d45d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d618:

            call .L_401c20

            mov R12,RAX
            jmp .L_40d408
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d628:

            call .L_401c20

            mov R12,RAX
            jmp .L_40d4fe
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d638:

            mov RDI,RBP
            call .L_406c10

            mov EAX,DWORD PTR [RBP+148]
            jmp .L_40d3d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d650:

            mov RDI,R12
            mov QWORD PTR [RBX+120],0
            call .L_401950

            call .L_401c20

            mov R12,RAX
            mov QWORD PTR [RBX+152],RAX
            jmp .L_40d575
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d678:

            call .L_407790

            xor ECX,ECX
            mov RDI,RAX
            xor EDX,EDX
            mov RSI,R12
            mov RBP,RAX
            call .L_407bc0

            lea RSI,QWORD PTR [RIP+.L_40caf0]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_407c60

            lea RSI,QWORD PTR [RIP+.L_40c4a0]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_407d10

            lea RSI,QWORD PTR [RIP+.L_40c540]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_407dc0

            lea RSI,QWORD PTR [RIP+.L_40c800]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_407e70

            lea RSI,QWORD PTR [RIP+.L_40c8d0]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_407f20

            lea RSI,QWORD PTR [RIP+.L_40cc30]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            call .L_408290

            mov RDI,RBP
            call .L_407ba0

            xor EAX,EAX
            lock cmpxchg QWORD PTR [RIP+.L_6573e0],RBP
            jne .L_40d75e

            lea RDI,QWORD PTR [RIP+.L_40c4c0]
            call .L_43e2d0

            jmp .L_40d5c8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d730:

            add RSP,8
.L_40d734:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40d73f:

            lea RCX,QWORD PTR [RIP+.L_4401a0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_40d75e:

            mov RDI,RBP
            call .L_4078b0

            jmp .L_40d5b5
.L_40d76b:

            nop
            nop
            nop
            nop
            nop
.L_40d770:

            push R12
            push RBP
            mov EBP,DWORD PTR [RDI+40]
            push RBX
.L_40d777:

            mov R11,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov R9D,EBP
            sub R9D,1
            js .L_40d7ea

            xor R10D,R10D
            jmp .L_40d799
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d790:

            lea R9D,DWORD PTR [RCX-1]
            cmp R9D,R10D
            jl .L_40d7ea
.L_40d799:

            lea EAX,DWORD PTR [R10+R9*1]
            mov ECX,EAX
            shr ECX,31
            add ECX,EAX
            sar ECX,1
            movsxd R8,ECX
            add R8,R8
            lea R12,QWORD PTR [R11+R8*1]
            movzx EAX,BYTE PTR [R12]
            movzx R12D,BYTE PTR [R12+1]
            shl EAX,8
            add EAX,R12D
            movzx EAX,AX
            cmp EAX,ESI
            ja .L_40d790

            add R8,RBX
            movzx EAX,BYTE PTR [R8]
            movzx R8D,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,R8D
            movzx EAX,AX
            cmp EAX,ESI
            jae .L_40d7f8

            lea R10D,DWORD PTR [RCX+1]
            cmp R9D,R10D
            jge .L_40d799
.L_40d7ea:

            xor EAX,EAX
.L_40d7ec:

            pop RBX
.L_40d7ed:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d7f8:

            mov R9,QWORD PTR [RDI+24]
            mov R8D,ECX
            add R8,R8
            add R9,R8
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add AX,R9W
            je .L_40d890

            sub ESI,EBP
            add R11,R8
            add ESI,ECX
            movzx ECX,AX
            mov EAX,ECX
            shr EAX,1
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R11]
            movzx ESI,BYTE PTR [R11+1]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            sub ECX,EAX
            xor EAX,EAX
            cmp DWORD PTR [RDI+44],ECX
            jbe .L_40d7ec

            mov RSI,QWORD PTR [RDI+32]
            lea RSI,QWORD PTR [RSI+RCX*2]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            test CX,CX
            movzx R9D,CX
            je .L_40d7ec

            add R8,QWORD PTR [RDI+16]
            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            add ESI,R9D
.L_40d877:

            and ESI,65535
            mov EAX,1
            pop RBX
.L_40d883:

            mov DWORD PTR [RDX],ESI
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d890:

            add R8,QWORD PTR [RDI+16]
            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
            jmp .L_40d877
.L_40d8a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d8b0:

            movzx EAX,BYTE PTR [RDI+12]
            movzx R11D,BYTE PTR [RDI+13]
            shl EAX,24
            shl R11D,16
            add EAX,R11D
            movzx R11D,BYTE PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add R11D,EAX
            mov R10D,R11D
            sub R10D,1
            js .L_40d9fe

            push RBP
            push RBX
.L_40d8e5:

            add RDI,12
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
.L_40d8f0:

            lea EAX,DWORD PTR [R10+RBP*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40d9f8

            movzx ECX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40d9e0

            cmp R9D,-1
            je .L_40d9ed

            cmp R9D,R11D
            lea R8,QWORD PTR [RIP+.L_657400]
            jb .L_40d9d0
.L_40d972:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            pop RBX
.L_40d97d:

            pop RBP
.L_40d97e:

            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            movzx ECX,BYTE PTR [R8]
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+3]
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d9d0:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RDI+RAX*4+4]
            jmp .L_40d972
          .byte 0x66
          .byte 0x90
.L_40d9e0:

            lea EBP,DWORD PTR [R9+1]
.L_40d9e4:

            cmp EBP,R10D
            jle .L_40d8f0
.L_40d9ed:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d9f8:

            lea R10D,DWORD PTR [R9-1]
            jmp .L_40d9e4
.L_40d9fe:

            xor EAX,EAX
            ret 
.L_40da01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40da10:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,13
            ja .L_40df38

            lea RCX,QWORD PTR [RIP+.L_440080]
            movzx EAX,AX
            push R15
            push R14
            push R13
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            push R12
            push RBP
            push RBX
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40da48:

            lea EBP,DWORD PTR [R9+1]
.L_40da4c:

            cmp EBP,R10D
            jle .L_40dc10
.L_40da55:

            xor EAX,EAX
.L_40da57:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40da68:

            movzx R11D,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            lea RBP,QWORD PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            shr R11W,1
            movzx EAX,R11W
            movzx R11D,R11W
            lea R12,QWORD PTR [RAX+RAX*1+2]
            lea R9D,DWORD PTR [R11-1]
            lea RBX,QWORD PTR [RBP+R12*1]
            sub R12,2
            cmp R9D,-1
            lea R13,QWORD PTR [RBX+R12*1]
            lea R14,QWORD PTR [R13+R12*1]
            je .L_40da55

            xor R10D,R10D
            jmp .L_40dab9
          .byte 0x66
          .byte 0x90
.L_40dab0:

            lea R9D,DWORD PTR [RCX-1]
.L_40dab4:

            cmp R10D,R9D
            jg .L_40da55
.L_40dab9:

            lea ECX,DWORD PTR [R10+R9*1]
            sar ECX,1
            movsxd R8,ECX
            add R8,R8
            lea R15,QWORD PTR [RBX+R8*1]
            movzx EAX,BYTE PTR [R15]
            movzx R15D,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,R15D
            movzx EAX,AX
            cmp ESI,EAX
            jb .L_40dab0

            lea R15,QWORD PTR [RBP+R8*1]
            movzx R10D,BYTE PTR [R15]
            movzx R15D,BYTE PTR [R15+1]
            shl R10D,8
            add R10D,R15D
            movzx R10D,R10W
            cmp ESI,R10D
            jbe .L_40de80

            lea R10D,DWORD PTR [RCX+1]
            jmp .L_40dab4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40db10:

            movzx EAX,BYTE PTR [RDI+6]
            movzx ECX,BYTE PTR [RDI+7]
            lea R8,QWORD PTR [RIP+.L_657400]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+9]
            movzx EAX,AX
            sub ESI,EAX
            movzx EAX,BYTE PTR [RDI+8]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_40db42

            lea R8,QWORD PTR [RDI+RSI*2+10]
.L_40db42:

            movzx ECX,BYTE PTR [R8]
            movzx ESI,BYTE PTR [R8+1]
            xor EAX,EAX
            shl ECX,8
            add CX,SI
            je .L_40da57

            movzx ECX,CX
.L_40db5c:

            pop RBX
.L_40db5d:

            mov EAX,1
            mov DWORD PTR [RDX],ECX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40db70:

            movzx ECX,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            lea R8,QWORD PTR [RIP+.L_657400]
            shl EAX,16
            shl ECX,24
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+14]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+15]
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+16]
            sub ESI,EAX
            movzx EAX,BYTE PTR [RDI+17]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+18]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+19]
            add EAX,ECX
            cmp ESI,EAX
            jae .L_40db42

            lea R8,QWORD PTR [RDI+RSI*2+20]
            jmp .L_40db42
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dbd0:

            movzx EAX,BYTE PTR [RDI+12]
            movzx R11D,BYTE PTR [RDI+13]
            shl EAX,24
            shl R11D,16
            lea EAX,DWORD PTR [RAX+R11*1]
            movzx R11D,BYTE PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add R11D,EAX
            mov R10D,R11D
            sub R10D,1
            js .L_40da55

            add RDI,12
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dc10:

            lea EAX,DWORD PTR [RBP+R10*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40de70

            movzx ECX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40da48

            cmp R9D,-1
            je .L_40da55

            cmp R9D,R11D
            lea R8,QWORD PTR [RIP+.L_657400]
            jb .L_40de18
.L_40dc97:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            movzx ECX,BYTE PTR [R8]
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+3]
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40da57
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dcf8:

            movzx EAX,BYTE PTR [RDI+12]
            movzx R11D,BYTE PTR [RDI+13]
            shl EAX,24
            shl R11D,16
            lea EAX,DWORD PTR [RAX+R11*1]
            movzx R11D,BYTE PTR [RDI+14]
            shl R11D,8
            add R11D,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add R11D,EAX
            mov R10D,R11D
            sub R10D,1
            js .L_40da55

            add RDI,12
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dd38:

            lea EAX,DWORD PTR [RBP+R10*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40de60

            movzx ECX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40de48

            cmp R9D,-1
            je .L_40da55

            cmp R9D,R11D
            lea R8,QWORD PTR [RIP+.L_657400]
            jb .L_40de30
.L_40ddbb:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            mov ESI,ECX
            shl EAX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40da57
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ddf0:

            xor EAX,EAX
            cmp ESI,255
            ja .L_40da57

            mov ESI,ESI
            movzx ECX,BYTE PTR [RDI+RSI*1+6]
            test ECX,ECX
            je .L_40da57

            jmp .L_40db5c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40de18:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RDI+RAX*4+4]
            jmp .L_40dc97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de30:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RDI+RAX*4+4]
            jmp .L_40ddbb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de48:

            lea EBP,DWORD PTR [R9+1]
.L_40de4c:

            cmp EBP,R10D
            jle .L_40dd38

            jmp .L_40da55
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40de60:

            lea R10D,DWORD PTR [R9-1]
            jmp .L_40de4c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de70:

            lea R10D,DWORD PTR [R9-1]
            jmp .L_40da4c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de80:

            lea R10,QWORD PTR [R14+R8*1]
            movzx R9D,BYTE PTR [R10]
            movzx R10D,BYTE PTR [R10+1]
            shl R9D,8
            add R9W,R10W
            jne .L_40dec0

            add R8,R13
            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
.L_40dead:

            and ESI,65535
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40da57
          .byte 0x90
.L_40dec0:

            sub ESI,R11D
            movzx R9D,R9W
            shl R11D,3
            add ECX,ESI
            shr R9D,1
            sub ECX,EAX
            movzx EAX,BYTE PTR [RDI+3]
            add R9D,ECX
            movzx ECX,BYTE PTR [RDI+2]
            shl ECX,8
            add ECX,EAX
            xor EAX,EAX
            movzx ECX,CX
            sub ECX,16
            sub ECX,R11D
            shr ECX,1
            cmp R9D,ECX
            jae .L_40da57

            lea RCX,QWORD PTR [R12+R9*2]
            add R14,RCX
            movzx ECX,BYTE PTR [R14]
            movzx ESI,BYTE PTR [R14+1]
            shl ECX,8
            add ECX,ESI
            test CX,CX
            movzx EDI,CX
            je .L_40da57

            add R8,R13
            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            add ESI,EDI
            jmp .L_40dead
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40df38:

            xor EAX,EAX
            ret 
.L_40df3b:

            nop
            nop
            nop
            nop
            nop
.L_40df40:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_40df4a:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,13
            ja .L_40e6c4

            lea R9,QWORD PTR [RIP+.L_4400b8]
            movzx R8D,AX
            movsxd RCX,DWORD PTR [R9+R8*4]
            add RCX,R9
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40df78:

            movzx EAX,BYTE PTR [RDI+6]
            movzx ECX,BYTE PTR [RDI+7]
            lea RBX,QWORD PTR [RDI+14]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+3]
            shr AX,1
            movzx R13D,AX
            movzx EAX,AX
            lea RBP,QWORD PTR [RAX+RAX*1+2]
            movzx EAX,BYTE PTR [RDI+2]
            lea R12D,DWORD PTR [R13-1]
            lea R11,QWORD PTR [RBX+RBP*1]
            sub RBP,2
            shl EAX,8
            lea R14,QWORD PTR [R11+RBP*1]
            add EAX,ECX
            lea ECX,DWORD PTR [R13*8]
            movzx EAX,AX
            lea R15,QWORD PTR [R14+RBP*1]
            sub EAX,16
            sub EAX,ECX
            shr EAX,1
            cmp R12D,-1
            mov DWORD PTR [RSP-4],EAX
            je .L_40e600

            mov R9D,R12D
            xor R10D,R10D
            jmp .L_40dff5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dfe8:

            lea R9D,DWORD PTR [RDI-1]
.L_40dfec:

            cmp R9D,R10D
            jl .L_40e600
.L_40dff5:

            lea EDI,DWORD PTR [R9+R10*1]
            sar EDI,1
            movsxd R8,EDI
            add R8,R8
            lea RCX,QWORD PTR [R11+R8*1]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jb .L_40dfe8

            lea R10,QWORD PTR [RBX+R8*1]
            movzx ECX,BYTE PTR [R10]
            movzx R10D,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,R10D
            movzx ECX,CX
            cmp ESI,ECX
            jbe .L_40e740

            lea R10D,DWORD PTR [RDI+1]
            jmp .L_40dfec
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e040:

            movzx ECX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            mov R8D,ESI
            movzx R9D,BYTE PTR [RDI+9]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+8]
            movzx ECX,CX
            sub R8D,ECX
            shl EAX,8
            add EAX,R9D
            lea R9,QWORD PTR [RIP+.L_657400]
            movzx EAX,AX
            cmp R8D,EAX
            jae .L_40e079

            lea R9,QWORD PTR [RDI+R8*2+10]
.L_40e079:

            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8W,R9W
            jne .L_40e124

            cmp ESI,255
            jbe .L_40e700

            nop
            nop
            nop
            nop
.L_40e0a0:

            xor EAX,EAX
.L_40e0a2:

            pop RBX
.L_40e0a3:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e0b0:

            movzx ECX,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            mov R10D,ESI
            movzx R8D,BYTE PTR [RDI+16]
            lea R9,QWORD PTR [RIP+.L_657400]
            shl EAX,16
            shl ECX,24
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+14]
            shl R8D,24
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+15]
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+17]
            sub R10D,EAX
            shl ECX,16
            lea R8D,DWORD PTR [R8+RCX*1]
            movzx ECX,BYTE PTR [RDI+18]
            shl ECX,8
            add ECX,R8D
            movzx R8D,BYTE PTR [RDI+19]
            add ECX,R8D
            cmp R10D,ECX
            jae .L_40e10d

            lea R9,QWORD PTR [RDI+R10*2+20]
.L_40e10d:

            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8W,R9W
            je .L_40e688
.L_40e124:

            movzx R8D,R8W
            mov EAX,1
            mov DWORD PTR [RDX],R8D
.L_40e130:

            pop RBX
.L_40e131:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e140:

            movzx EAX,BYTE PTR [RDI+12]
            movzx EBP,BYTE PTR [RDI+13]
            shl EAX,24
            shl EBP,16
            lea EAX,DWORD PTR [RAX+RBP*1]
            movzx EBP,BYTE PTR [RDI+14]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            mov R13D,EBP
            sub R13D,1
            js .L_40e3dd

            lea R12,QWORD PTR [RDI+12]
            mov EBX,R13D
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e180:

            lea EAX,DWORD PTR [RBX+R11*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [R12+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40e5e0

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40e3d0

            cmp R9D,-1
            je .L_40e3dd

            cmp R9D,EBP
            lea R8,QWORD PTR [RIP+.L_657400]
            jb .L_40e3a0
.L_40e20e:

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+11]
            add EAX,ECX
            movzx ECX,BYTE PTR [R8]
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+3]
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40e130
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e270:

            movzx EAX,BYTE PTR [RDI+12]
            movzx EBP,BYTE PTR [RDI+13]
            shl EAX,24
            shl EBP,16
            lea EAX,DWORD PTR [RAX+RBP*1]
            movzx EBP,BYTE PTR [RDI+14]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            mov R13D,EBP
            sub R13D,1
            js .L_40e4f5

            lea R12,QWORD PTR [RDI+12]
            mov EBX,R13D
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e2b0:

            lea EAX,DWORD PTR [RBX+R11*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [R12+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40e5f0

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40e4e8

            cmp R9D,-1
            je .L_40e4f5

            cmp R9D,EBP
            lea RDI,QWORD PTR [RIP+.L_657400]
            jb .L_40e3b8
.L_40e33a:

            movzx ECX,BYTE PTR [RDI+8]
            movzx EAX,BYTE PTR [RDI+9]
            mov ESI,ECX
            shl EAX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RDI+10]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+11]
            add EAX,ECX
            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40e130
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e370:

            cmp ESI,255
            ja .L_40e0a0

            mov ESI,ESI
            movzx EAX,BYTE PTR [RDI+RSI*1+6]
            test EAX,EAX
            je .L_40e0a0
.L_40e38b:

            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40e130
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e3a0:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [R12+RAX*4+4]
            jmp .L_40e20e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e3b8:

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea RDI,QWORD PTR [R12+RAX*4+4]
            jmp .L_40e33a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e3d0:

            lea R11D,DWORD PTR [R9+1]
.L_40e3d4:

            cmp R11D,EBX
            jle .L_40e180
.L_40e3dd:

            cmp ESI,255
            ja .L_40e0a0

            add ESI,61440
.L_40e3ef:

            test R13D,R13D
            js .L_40e0a0

            add RDI,12
            xor R11D,R11D
            nop
.L_40e400:

            lea EAX,DWORD PTR [R13+R11*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40e80e

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40e780

            cmp R9D,-1
            je .L_40e0a0

            cmp R9D,EBP
            lea RCX,QWORD PTR [RIP+.L_657400]
            jae .L_40e497

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea RCX,QWORD PTR [RDI+RAX*4+4]
.L_40e497:

            movzx EAX,BYTE PTR [RCX+8]
            movzx EDI,BYTE PTR [RCX+9]
            shl EAX,24
            shl EDI,16
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+10]
            shl EDI,8
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+11]
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+1]
            add ESI,EAX
            movzx EAX,BYTE PTR [RCX]
            shl EDI,16
            shl EAX,24
            add EAX,EDI
            movzx EDI,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EDI,8
            add EAX,EDI
            add EAX,ECX
            sub ESI,EAX
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40e130
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e4e8:

            lea R11D,DWORD PTR [R9+1]
.L_40e4ec:

            cmp EBX,R11D
            jge .L_40e2b0
.L_40e4f5:

            cmp ESI,255
            ja .L_40e0a0

            add ESI,61440
.L_40e507:

            test R13D,R13D
            js .L_40e0a0

            add RDI,12
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e520:

            lea EAX,DWORD PTR [R11+R13*1]
            mov R9D,EAX
            shr R9D,31
            add R9D,EAX
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [RDI+RAX*4+4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+3]
            add EAX,ECX
            cmp ESI,EAX
            jb .L_40e808

            movzx ECX,BYTE PTR [R10+4]
            movzx EAX,BYTE PTR [R10+5]
            shl ECX,24
            shl EAX,16
            lea ECX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R10+6]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R10+7]
            add EAX,ECX
            cmp ESI,EAX
            ja .L_40e798

            cmp R9D,-1
            je .L_40e0a0

            cmp R9D,EBP
            lea RCX,QWORD PTR [RIP+.L_657400]
            jae .L_40e5b6

            mov R9D,R9D
            lea RAX,QWORD PTR [R9+R9*2]
            lea RCX,QWORD PTR [RDI+RAX*4+4]
.L_40e5b6:

            movzx EAX,BYTE PTR [RCX+8]
            movzx ESI,BYTE PTR [RCX+9]
            shl EAX,24
            shl ESI,16
            add EAX,ESI
            movzx ESI,BYTE PTR [RCX+10]
            movzx ECX,BYTE PTR [RCX+11]
            shl ESI,8
            add EAX,ESI
            add EAX,ECX
            jmp .L_40e38b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e5e0:

            lea EBX,DWORD PTR [R9-1]
            jmp .L_40e3d4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e5f0:

            lea EBX,DWORD PTR [R9-1]
            jmp .L_40e4ec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e600:

            cmp ESI,255
            ja .L_40e0a0

            add ESI,61440
.L_40e612:

            cmp R12D,-1
            je .L_40e0a0

            xor R8D,R8D
            jmp .L_40e635
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e628:

            lea R12D,DWORD PTR [RCX-1]
.L_40e62c:

            cmp R8D,R12D
            jg .L_40e0a0
.L_40e635:

            lea ECX,DWORD PTR [R12+R8*1]
            sar ECX,1
            movsxd RDI,ECX
            add RDI,RDI
            lea R9,QWORD PTR [R11+RDI*1]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            cmp EAX,ESI
            ja .L_40e628

            lea R9,QWORD PTR [RBX+RDI*1]
            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp R8D,ESI
            jae .L_40e817

            lea R8D,DWORD PTR [RCX+1]
            jmp .L_40e62c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e688:

            cmp ESI,255
            ja .L_40e0a0

            add ESI,61440
.L_40e69a:

            sub ESI,EAX
            lea R8,QWORD PTR [RIP+.L_657400]
            cmp ESI,ECX
            jae .L_40e6ac

            lea R8,QWORD PTR [RDI+RSI*2+20]
.L_40e6ac:

            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add AX,CX
            jne .L_40e72b

            xor EAX,EAX
            jmp .L_40e0a2
.L_40e6c4:

            cmp ESI,255
            ja .L_40e0a0

            sub EAX,4
            add ESI,61440
            cmp AX,9
            ja .L_40e0a0

            lea RCX,QWORD PTR [RIP+.L_4400f0]
            movzx EAX,AX
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e700:

            add ESI,61440
.L_40e706:

            sub ESI,ECX
            lea RCX,QWORD PTR [RIP+.L_657400]
            cmp ESI,EAX
            jae .L_40e718

            lea RCX,QWORD PTR [RDI+RSI*2+10]
.L_40e718:

            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add AX,CX
            je .L_40e0a0
.L_40e72b:

            movzx EAX,AX
            mov DWORD PTR [RDX],EAX
            mov EAX,1
            jmp .L_40e130
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e740:

            lea R9,QWORD PTR [R15+R8*1]
            movzx ECX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl ECX,8
            add CX,R9W
            jne .L_40e7b0

            add R8,R14
            movzx EAX,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
.L_40e76c:

            and ESI,65535
            mov EAX,1
            mov DWORD PTR [RDX],ESI
            jmp .L_40e130
          .byte 0x66
          .byte 0x90
.L_40e780:

            lea R11D,DWORD PTR [R9+1]
.L_40e784:

            cmp R11D,R13D
            jle .L_40e400

            xor EAX,EAX
            jmp .L_40e0a2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e798:

            lea R11D,DWORD PTR [R9+1]
.L_40e79c:

            cmp R11D,R13D
            jle .L_40e520

            xor EAX,EAX
            jmp .L_40e0a2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e7b0:

            mov R9D,ESI
            movzx ECX,CX
            sub R9D,R13D
            shr ECX,1
            add EDI,R9D
            sub EDI,EAX
            lea EAX,DWORD PTR [RDI+RCX*1]
            cmp EAX,DWORD PTR [RSP-4]
            jae .L_40e600

            lea RAX,QWORD PTR [RBP+RAX*2]
            add RAX,R15
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,EAX
            test CX,CX
            movzx EAX,CX
            je .L_40e600

            add R8,R14
            movzx ESI,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,ECX
            movzx ESI,SI
            add ESI,EAX
            jmp .L_40e76c
.L_40e808:

            lea R13D,DWORD PTR [R9-1]
            jmp .L_40e79c
.L_40e80e:

            lea R13D,DWORD PTR [R9-1]
            jmp .L_40e784
.L_40e817:

            lea R9,QWORD PTR [R15+RDI*1]
            movzx R8D,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl R8D,8
            add R8W,R9W
            jne .L_40e847

            add RDI,R14
            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            add ESI,EAX
            jmp .L_40e76c
.L_40e847:

            sub ESI,R13D
            add ECX,ESI
            sub ECX,EAX
            movzx EAX,R8W
            shr EAX,1
            add ECX,EAX
            xor EAX,EAX
            cmp ECX,DWORD PTR [RSP-4]
            jae .L_40e130

            add RCX,RCX
            add RBP,RCX
            add R15,RBP
            movzx ECX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R15+1]
            shl ECX,8
            add ECX,ESI
            test CX,CX
            movzx R8D,CX
            je .L_40e130

            add RDI,R14
            movzx ESI,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            add ESI,R8D
            jmp .L_40e76c
.L_40e8a0:

            movzx EBP,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            shl EBP,24
            shl EAX,16
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+14]
            shl EAX,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            lea R13D,DWORD PTR [RBP-1]
            jmp .L_40e3ef
.L_40e8c8:

            movzx EAX,BYTE PTR [RDI+6]
            movzx ECX,BYTE PTR [RDI+7]
            lea RBX,QWORD PTR [RDI+14]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDI+3]
            shr AX,1
            movzx R13D,AX
            movzx EAX,AX
            add RAX,1
            lea R12D,DWORD PTR [R13-1]
            add RAX,RAX
            lea RBP,QWORD PTR [RAX-2]
            lea R11,QWORD PTR [RBX+RAX*1]
            add RAX,RBP
            lea R14,QWORD PTR [RBX+RAX*1]
            add RAX,RBP
            lea R15,QWORD PTR [RBX+RAX*1]
            movzx EAX,BYTE PTR [RDI+2]
            shl EAX,8
            add EAX,ECX
            lea ECX,DWORD PTR [R13*8]
            movzx EAX,AX
            sub EAX,16
            sub EAX,ECX
            shr EAX,1
            mov DWORD PTR [RSP-4],EAX
            jmp .L_40e612
.L_40e92c:

            movzx EBP,BYTE PTR [RDI+12]
            movzx EAX,BYTE PTR [RDI+13]
            shl EBP,24
            shl EAX,16
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+14]
            shl EAX,8
            add EBP,EAX
            movzx EAX,BYTE PTR [RDI+15]
            add EBP,EAX
            lea R13D,DWORD PTR [RBP-1]
            jmp .L_40e507
.L_40e954:

            movzx ECX,BYTE PTR [RDI+16]
            movzx EAX,BYTE PTR [RDI+17]
            movzx R8D,BYTE PTR [RDI+13]
            shl EAX,16
            shl ECX,24
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+18]
            shl R8D,16
            shl EAX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+19]
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+12]
            shl EAX,24
            add EAX,R8D
            movzx R8D,BYTE PTR [RDI+14]
            shl R8D,8
            add EAX,R8D
            movzx R8D,BYTE PTR [RDI+15]
            add EAX,R8D
            jmp .L_40e69a
.L_40e99f:

            movzx ECX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            movzx R8D,BYTE PTR [RDI+9]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+8]
            movzx ECX,CX
            shl EAX,8
            add EAX,R8D
            movzx EAX,AX
            jmp .L_40e706
.L_40e9c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e9d0:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jb .L_40ea00

            push R15
            mov R15,QWORD PTR [RSI+16]
            push R14
            push R13
            push R12
            push RBP
            cmp RDI,R15
            push RBX
            jbe .L_40ea08
.L_40e9ec:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ea00:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ea08:

            mov RAX,R15
            sub RAX,RDI
            cmp EAX,3
            jbe .L_40e9ec

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,DX
            jne .L_40e9ec

            lea RAX,QWORD PTR [RDI+2]
            cmp RAX,R8
            jb .L_40e9ec

            cmp RAX,R15
            ja .L_40e9ec

            mov RDX,R15
            sub RDX,RAX
            cmp EDX,1
            jbe .L_40e9ec

            lea RDX,QWORD PTR [RDI+4]
            cmp R8,RDX
            ja .L_40e9ec

            cmp R15,RDX
            jb .L_40e9ec

            movzx ECX,BYTE PTR [RDI+2]
            movzx R9D,BYTE PTR [RDI+3]
            mov RBX,R15
            sub RBX,RDX
            shl ECX,8
            add ECX,R9D
            movzx R9D,CX
            lea R10D,DWORD PTR [R9*8]
            cmp R10D,EBX
            ja .L_40e9ec

            test CX,CX
            je .L_40f020

            cmp EBX,7
            jbe .L_40e9ec

            lea RCX,QWORD PTR [RDI+8]
            cmp R8,RCX
            ja .L_40e9ec

            cmp R15,RCX
            jb .L_40e9ec

            mov RDX,R15
            sub RDX,RCX
            cmp EDX,3
            jbe .L_40e9ec

            lea EDX,DWORD PTR [R9-1]
            lea R11,QWORD PTR [RDI+12]
            lea R12,QWORD PTR [RIP+.L_440118]
            lea R14,QWORD PTR [RAX+RDX*8+10]
            lea RAX,QWORD PTR [RDI+16]
            sub RAX,RCX
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ead0:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RCX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+3]
            add EAX,EDX
            je .L_40ebf0

            mov EAX,EAX
            add RAX,RDI
            cmp RAX,R8
            jb .L_40ebc0

            cmp RAX,R15
            ja .L_40ebc0

            mov R9,R15
            sub R9,RAX
            cmp R9D,1
            jbe .L_40ebc0

            movzx EDX,BYTE PTR [RAX]
            movzx R10D,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,R10D
            cmp DX,14
            ja .L_40ebf0

            movzx EDX,DX
            movsxd RDX,DWORD PTR [R12+RDX*4]
            add RDX,R12
            jmp RDX
.L_40eb40:

            cmp R9D,15
            jbe .L_40ebc0

            lea RDX,QWORD PTR [RAX+12]
            cmp R8,RDX
            ja .L_40ebc0

            cmp R15,RDX
            jb .L_40ebc0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_40ebc0

            movzx R9D,BYTE PTR [RAX+12]
            movzx EDX,BYTE PTR [RAX+13]
            mov R10D,R9D
            shl EDX,16
            shl R10D,24
            lea R9D,DWORD PTR [R10+RDX*1]
            movzx EDX,BYTE PTR [RAX+14]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RAX+15]
            add EDX,R9D
            cmp EDX,357913940
            ja .L_40ebc0

            add RAX,16
            cmp R8,RAX
            ja .L_40ebc0

            cmp R15,RAX
            jb .L_40ebc0

            lea EDX,DWORD PTR [RDX+RDX*2]
            sub R15,RAX
            shl EDX,2
            cmp EDX,R15D
            jbe .L_40ebf0

            jmp .L_40ebc0
          .byte 0x66
          .byte 0x90
.L_40ebb0:

            cmp R9D,261
            seta AL
.L_40ebba:

            test AL,AL
            jne .L_40ebf0

            nop
            nop
.L_40ebc0:

            movzx R8D,BYTE PTR [RSI+24]
            mov EDX,DWORD PTR [RSI+28]
.L_40ebc8:

            cmp EDX,2
            ja .L_40e9ec

            add EDX,1
            test R8B,R8B
            mov DWORD PTR [RSI+28],EDX
            je .L_40e9ec

            mov BYTE PTR [RCX],0
            mov BYTE PTR [RCX+1],0
            mov BYTE PTR [RCX+2],0
            mov BYTE PTR [RCX+3],0
            nop
.L_40ebf0:

            cmp R14,R11
            je .L_40f020

            mov R8,QWORD PTR [RSI+8]
            cmp R11,R8
            jb .L_40e9ec

            mov R15,QWORD PTR [RSI+16]
            cmp R11,R15
            ja .L_40e9ec

            mov RAX,R15
            sub RAX,R11
            cmp EAX,7
            jbe .L_40e9ec

            add RCX,R13
            cmp R8,RCX
            ja .L_40e9ec

            cmp R15,RCX
            jb .L_40e9ec

            lea RAX,QWORD PTR [R11+4]
            mov RBX,R15
            add R11,8
            sub RBX,RAX
            cmp EBX,3
            jbe .L_40e9ec

            jmp .L_40ead0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ec58:

            cmp R9D,9
            jbe .L_40ebc0

            lea R9,QWORD PTR [RAX+6]
            cmp R8,R9
            ja .L_40ebc0

            cmp R15,R9
            jb .L_40ebc0

            mov RDX,R15
            sub RDX,R9
            cmp EDX,3
            jbe .L_40ebc0

            movzx R10D,BYTE PTR [RAX+6]
            movzx EDX,BYTE PTR [RAX+7]
            mov EBX,R10D
            shl EDX,16
            shl EBX,24
            lea R10D,DWORD PTR [RBX+RDX*1]
            movzx EDX,BYTE PTR [RAX+8]
            shl EDX,8
            add EDX,R10D
            movzx R10D,BYTE PTR [RAX+9]
            add EDX,R10D
            cmp EDX,390451571
            ja .L_40ebc0

            lea R10,QWORD PTR [RAX+10]
            cmp R8,R10
            ja .L_40ebc0

            cmp R15,R10
            jb .L_40ebc0

            lea EBP,DWORD PTR [RDX+RDX*4]
            mov RBX,R15
            sub RBX,R10
            lea EBP,DWORD PTR [RDX+RBP*2]
            cmp EBP,EBX
            ja .L_40ebc0

            test EDX,EDX
            je .L_40ebf0

            cmp R10,R8
            jb .L_40ebc0

            cmp EBX,10
            jbe .L_40ebc0

            lea RBX,QWORD PTR [RAX+13]
            cmp RBX,R8
            jb .L_40ebc0

            cmp R15,RBX
            jb .L_40ebc0

            mov R10,R15
            sub R10,RBX
            cmp R10D,3
            jbe .L_40ebc0

            sub EDX,1
            lea R9,QWORD PTR [RAX+24]
            lea RBP,QWORD PTR [RAX+21]
            lea R10,QWORD PTR [RDX+RDX*4]
            sub R9,RBX
            lea RDX,QWORD PTR [RDX+R10*2]
            mov QWORD PTR [RSP-8],R9
            add RDX,RBX
            mov QWORD PTR [RSP-16],RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ed50:

            movzx R9D,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            mov R10D,R9D
            shl EDX,16
            shl R10D,24
            lea R9D,DWORD PTR [R10+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RBX+3]
            add EDX,R9D
            jne .L_40f030
.L_40ed7e:

            lea RDX,QWORD PTR [RBP-4]
            cmp RDX,R8
            jb .L_40ebc0

            mov R10,QWORD PTR [RSI+16]
            cmp RDX,R10
            ja .L_40ebc0

            mov R15,R10
            sub R15,RDX
            cmp R15D,3
            jbe .L_40ebc0

            movzx R9D,BYTE PTR [RBP-4]
            movzx EDX,BYTE PTR [RBP-3]
            mov R15D,R9D
            shl EDX,16
            shl R15D,24
            lea R9D,DWORD PTR [R15+RDX*1]
            movzx EDX,BYTE PTR [RBP-2]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RBP-1]
            add EDX,R9D
            je .L_40ee18

            mov EDX,EDX
            add RDX,RAX
            cmp R8,RDX
            jbe .L_40f0e8
.L_40ede1:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_40e9ec

            movzx R8D,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test R8B,R8B
            je .L_40ebc8

            mov BYTE PTR [RBP-4],0
            mov BYTE PTR [RBP-3],0
            mov BYTE PTR [RBP-2],0
            mov BYTE PTR [RBP-1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ee18:

            cmp RBX,QWORD PTR [RSP-16]
            je .L_40ebf0

            mov R8,QWORD PTR [RSI+8]
            cmp RBP,R8
            jb .L_40ebc0

            mov R15,QWORD PTR [RSI+16]
            cmp RBP,R15
            ja .L_40ebc0

            mov RDX,R15
            sub RDX,RBP
            cmp EDX,10
            jbe .L_40ebc0

            add RBX,QWORD PTR [RSP-8]
            cmp RBX,R8
            jb .L_40ebc0

            cmp RBX,R15
            ja .L_40ebc0

            lea RDX,QWORD PTR [RBP+3]
            mov R10,R15
            add RBP,11
            sub R10,RDX
            cmp R10D,3
            jbe .L_40ebc0

            jmp .L_40ed50
.L_40ee80:

            cmp R9D,19
            jbe .L_40ebc0

            lea RDX,QWORD PTR [RAX+16]
            cmp R8,RDX
            ja .L_40ebc0

            cmp R15,RDX
            jb .L_40ebc0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_40ebc0

            movzx R9D,BYTE PTR [RAX+16]
            movzx EDX,BYTE PTR [RAX+17]
            mov R10D,R9D
            shl EDX,16
            shl R10D,24
            lea R9D,DWORD PTR [R10+RDX*1]
            movzx EDX,BYTE PTR [RAX+18]
            shl EDX,8
            add EDX,R9D
            movzx R9D,BYTE PTR [RAX+19]
            add EDX,R9D
            cmp EDX,2147483646
            ja .L_40ebc0

            add RAX,20
            cmp R8,RAX
            ja .L_40ebc0

            cmp R15,RAX
            jb .L_40ebc0

            add EDX,EDX
            sub R15,RAX
            cmp EDX,R15D
            jbe .L_40ebf0

            jmp .L_40ebc0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ef10:

            cmp R9D,9
            jbe .L_40ebc0

            lea RDX,QWORD PTR [RAX+8]
            cmp R8,RDX
            ja .L_40ebc0

            cmp R15,RDX
            jb .L_40ebc0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,1
            jbe .L_40ebc0

            lea RDX,QWORD PTR [RAX+10]
            cmp R8,RDX
            ja .L_40ebc0

            cmp R15,RDX
            jb .L_40ebc0

            movzx R8D,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            sub R15,RDX
            shl R8D,8
            add EAX,R8D
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R15D
            jbe .L_40ebf0

            jmp .L_40ebc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ef80:

            cmp R9D,13
            jbe .L_40ebc0

            movzx R8D,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl R8D,8
            add R8D,EDX
            movzx R8D,R8W
            cmp R9D,R8D
            jae .L_40eff8

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_40e9ec

            movzx R10D,BYTE PTR [RSI+24]
            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RSI+28],R8D
            test R10B,R10B
            je .L_40f161

            cmp R9,65535
            mov EBX,65535
            cmova R9,RBX
            mov EDX,R9D
            movzx R8D,R9B
            mov BYTE PTR [RAX+3],R9B
            shr DX,8
            mov BYTE PTR [RAX+2],DL
            shl EDX,8
            add R8D,EDX
            movzx R8D,R8W
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40eff8:

            movzx EDX,BYTE PTR [RAX+6]
            movzx EAX,BYTE PTR [RAX+7]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX*4+16]
            cmp R8D,EAX
            setae AL
            jmp .L_40ebba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f020:

            pop RBX
.L_40f021:

            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f030:

            mov EDX,EDX
            add RDX,RAX
            cmp R8,RDX
            jbe .L_40f078
.L_40f03a:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_40e9ec

            movzx R8D,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test R8B,R8B
            je .L_40ebc8

            mov BYTE PTR [RBX],0
            mov BYTE PTR [RBX+1],0
            mov BYTE PTR [RBX+2],0
            mov BYTE PTR [RBX+3],0
            mov R8,QWORD PTR [RSI+8]
            jmp .L_40ed7e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f078:

            cmp RDX,R15
            ja .L_40f03a

            mov R9,R15
            sub R9,RDX
            cmp R9D,3
            jbe .L_40f03a

            movzx R10D,BYTE PTR [RDX]
            movzx R9D,BYTE PTR [RDX+1]
            shl R10D,24
            shl R9D,16
            add R10D,R9D
            movzx R9D,BYTE PTR [RDX+2]
            shl R9D,8
            add R9D,R10D
            movzx R10D,BYTE PTR [RDX+3]
            add R9D,R10D
            cmp R9D,1073741822
            ja .L_40f03a

            add RDX,4
            cmp R8,RDX
            ja .L_40f03a

            cmp R15,RDX
            jb .L_40f03a

            shl R9D,2
            sub R15,RDX
            cmp R9D,R15D
            jbe .L_40ed7e

            jmp .L_40f03a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f0e8:

            cmp R10,RDX
            jb .L_40ede1

            mov R9,R10
            sub R9,RDX
            cmp R9D,3
            jbe .L_40ede1

            movzx R15D,BYTE PTR [RDX]
            movzx R9D,BYTE PTR [RDX+1]
            shl R15D,24
            shl R9D,16
            add R15D,R9D
            movzx R9D,BYTE PTR [RDX+2]
            shl R9D,8
            add R9D,R15D
            movzx R15D,BYTE PTR [RDX+3]
            add R9D,R15D
            cmp R9D,858993458
            ja .L_40ede1

            add RDX,4
            cmp R8,RDX
            ja .L_40ede1

            cmp R10,RDX
            jb .L_40ede1

            lea R8D,DWORD PTR [R9+R9*4]
            sub R10,RDX
            cmp R8D,R10D
            jbe .L_40ee18

            jmp .L_40ede1
.L_40f161:

            cmp R8D,3
            je .L_40e9ec

            add EDX,2
            mov DWORD PTR [RSI+28],EDX
            jmp .L_40e9ec
.L_40f176:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f180:

            push R15
            push R14
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,24
.L_40f197:

            mov EAX,DWORD PTR [RSI+148]
            mov DWORD PTR [RSP+8],ECX
            test EAX,EAX
            jne .L_40f1bd

            mov RDI,RSI
            mov DWORD PTR [RSP+12],R8D
            call .L_406c10

            mov EAX,DWORD PTR [RBP+148]
            mov R8D,DWORD PTR [RSP+12]
.L_40f1bd:

            xor R14D,R14D
            test R8D,R8D
            mov DWORD PTR [RBX+8],EAX
            jne .L_40f3f0
.L_40f1cc:

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40f398

            mov ESI,R12D
            mov RDX,QWORD PTR [RBP+128]
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R12,RAX
            je .L_40f398
.L_40f1f4:

            mov RDI,R12
            call .L_401c30

            xor ESI,ESI
            mov R13,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R13
            mov R15,RAX
            call .L_401d40

            mov ECX,EAX
            add RCX,R15
            jb .L_40f4fd

            test R15,R15
            je .L_40f388

            cmp EAX,35
            ja .L_40f370
.L_40f231:

            mov RDI,R13
            call .L_401950

            mov RDI,R12
            call .L_401950

            call .L_401c20

            mov R12,RAX
.L_40f249:

            mov RDI,R12
            call .L_401d20

            xor ESI,ESI
            mov RDI,R12
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657400]
            test RAX,RAX
            cmove RAX,RDX
            movzx EDX,BYTE PTR [RAX+34]
            movzx ECX,BYTE PTR [RAX+35]
            shl EDX,8
            add EDX,ECX
            test R14B,R14B
            movzx EDX,DX
            mov DWORD PTR [RBX+4],EDX
            je .L_40f3b8
.L_40f285:

            mov RDI,R12
            call .L_401950

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40f3a8

            mov RDX,QWORD PTR [RBP+128]
            mov RDI,RBP
            mov ESI,DWORD PTR [RSP+8]
            call RAX

            test RAX,RAX
            mov RBP,RAX
            je .L_40f3a8
.L_40f2b6:

            mov RDI,RBP
            call .L_401c30

            xor ESI,ESI
            mov R12,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R12
            mov R13,RAX
            call .L_401d40

            mov EAX,EAX
            add RAX,R13
            jb .L_40f4fd

            mov RDI,R12
            call .L_401950

            mov QWORD PTR [RBX+32],RBP
            mov RDI,RBP
            call .L_401d40

            mov EDX,DWORD PTR [RBX+4]
            lea ECX,DWORD PTR [RDX*4]
            cmp ECX,EAX
            jbe .L_40f312

            mov EDX,EAX
            shr EDX,2
            lea ECX,DWORD PTR [RDX*4]
            mov DWORD PTR [RBX+4],EDX
.L_40f312:

            sub EAX,ECX
            mov RBP,QWORD PTR [RBX+32]
            shr EAX,1
            add EAX,EDX
            test EDX,EDX
            mov DWORD PTR [RBX],EAX
            jne .L_40f33d

            mov RDI,RBP
            mov QWORD PTR [RBX],0
            call .L_401950

            call .L_401c20

            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
.L_40f33d:

            mov RDI,RBP
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657400]
            test RAX,RAX
            cmove RAX,RDX
            mov QWORD PTR [RBX+24],RAX
            add RSP,24
.L_40f365:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f370:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_40f231
.L_40f388:

            mov RDI,R13
            call .L_401950

            jmp .L_40f249
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f398:

            call .L_401c20

            mov R12,RAX
            jmp .L_40f1f4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f3a8:

            call .L_401c20

            mov RBP,RAX
            jmp .L_40f2b6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f3b8:

            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+12],DX
            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+14],DX
            movzx EDX,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            shl EDX,8
            add EAX,EDX
            mov WORD PTR [RBX+16],AX
            jmp .L_40f285
.L_40f3f0:

            mov RAX,QWORD PTR [RBP+120]
            test RAX,RAX
            je .L_40f4f0

            mov RDX,QWORD PTR [RBP+128]
            mov ESI,R8D
            mov RDI,RBP
            call RAX

            test RAX,RAX
            mov R13,RAX
            je .L_40f4f0
.L_40f418:

            mov RDI,R13
            call .L_401c30

            xor ESI,ESI
            mov R14,RAX
            mov RDI,RAX
            call .L_401d50

            mov RDI,R14
            mov R15,RAX
            call .L_401d40

            mov ECX,EAX
            add RCX,R15
            jb .L_40f4fd

            test R15,R15
            je .L_40f4e0

            cmp EAX,77
            ja .L_40f4e0

            mov RDI,R14
            call .L_401950

            mov RDI,R13
            call .L_401950

            call .L_401c20

            mov R13,RAX
.L_40f46d:

            mov RDI,R13
            call .L_401d20

            xor ESI,ESI
            mov RDI,R13
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657400]
            test RAX,RAX
            cmove RAX,RDX
            xor R14D,R14D
            test BYTE PTR [RAX+63],128
            je .L_40f4d0

            movzx EDX,BYTE PTR [RAX+68]
            movzx ECX,BYTE PTR [RAX+69]
            shl EDX,8
            add EDX,ECX
            mov WORD PTR [RBX+12],DX
            movzx ECX,BYTE PTR [RAX+70]
            movzx ESI,BYTE PTR [RAX+71]
            shl ECX,8
            add ECX,ESI
            mov WORD PTR [RBX+14],CX
            movzx ESI,BYTE PTR [RAX+72]
            movzx EAX,BYTE PTR [RAX+73]
            shl ESI,8
            add EAX,ESI
            or CX,DX
            mov WORD PTR [RBX+16],AX
            setne R14B
.L_40f4d0:

            mov RDI,R13
            call .L_401950

            jmp .L_40f1cc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f4e0:

            mov RDI,R14
            call .L_401950

            jmp .L_40f46d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f4f0:

            call .L_401c20

            mov R13,RAX
            jmp .L_40f418
.L_40f4fd:

            lea RCX,QWORD PTR [RIP+.L_4401a0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_40f51c:

            nop
            nop
            nop
            nop
.L_40f520:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_40f52e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+120]
            mov QWORD PTR [RSP+24],RDI
            test RAX,RAX
            je .L_40fad0

            mov RDI,RSI
            mov RDX,QWORD PTR [RSI+128]
            mov ESI,1668112752
            call RAX

            test RAX,RAX
            mov R14,RAX
            je .L_40fad0
.L_40f56d:

            mov RDI,R14
            lea R13,QWORD PTR [RIP+.L_440154]
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            mov BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],0
            mov QWORD PTR [RSP+64],0
            call .L_401c30

            mov BYTE PTR [RSP+56],0
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
.L_40f5b9:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+64]
            mov RBX,RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_401d40

            mov RDI,QWORD PTR [RSP+40]
            mov EAX,EAX
            add RAX,RBX
            mov QWORD PTR [RSP+48],RAX
            cmp RAX,RDI
            jb .L_410694

            test RDI,RDI
            mov DWORD PTR [RSP+60],0
            mov DWORD PTR [RSP+32],0
            je .L_40f9a0

            mov RDX,RAX
            sub RDX,RDI
            cmp EDX,3
            jbe .L_40f630

            movzx EDX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EDX,8
            add DX,CX
            jne .L_40f630

            lea RDX,QWORD PTR [RDI+2]
            cmp RAX,RDX
            jb .L_40f630

            cmp RDI,RDX
            jbe .L_40f9b0

            nop
.L_40f630:

            mov RDI,QWORD PTR [RSP+64]
            call .L_401950

            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+40],0
.L_40f655:

            mov RDI,R14
            call .L_401950

            call .L_401c20

            mov R14,RAX
            nop
            nop
            nop
.L_40f668:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,R14
            mov QWORD PTR [RAX+72],R14
            call .L_401d20

            xor ESI,ESI
            mov RDI,R14
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657400]
            test RAX,RAX
            cmove RAX,RDX
            movzx EDI,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl EDI,8
            add EDI,EDX
            test DI,DI
            movzx R8D,DI
            je .L_40f81a

            lea R9,QWORD PTR [RAX+2]
            lea RSI,QWORD PTR [RAX+4]
            xor R10D,R10D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f6c0:

            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,3
            jne .L_40f888

            movzx EDX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,ECX
            cmp DX,10
            jne .L_40f888

            lea RDX,QWORD PTR [RIP+.L_657400]
            cmp R8D,R10D
            cmovbe RSI,RDX
            movzx EDX,BYTE PTR [RSI+4]
            movzx ECX,BYTE PTR [RSI+5]
            shl EDX,24
            shl ECX,16
            lea EDX,DWORD PTR [RDX+RCX*1]
            movzx ECX,BYTE PTR [RSI+6]
            shl ECX,8
            add ECX,EDX
            movzx EDX,BYTE PTR [RSI+7]
            add ECX,EDX
            je .L_40f899

            mov ECX,ECX
            add RCX,RAX
            je .L_40f899

            lea RDX,QWORD PTR [R9+2]
            xor R10D,R10D
.L_40f733:

            xor R9D,R9D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f740:

            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl ESI,8
            add SI,DI
            jne .L_40f868

            movzx ESI,BYTE PTR [RDX+2]
            movzx EDI,BYTE PTR [RDX+3]
            shl ESI,8
            add ESI,EDI
            cmp SI,5
            jne .L_40f868

            lea R11,QWORD PTR [RIP+.L_657400]
            cmp R8D,R9D
            cmovbe RDX,R11
            movzx EDI,BYTE PTR [RDX+4]
            movzx ESI,BYTE PTR [RDX+5]
            shl EDI,24
            shl ESI,16
            lea EDI,DWORD PTR [RDI+RSI*1]
            movzx ESI,BYTE PTR [RDX+6]
            movzx EDX,BYTE PTR [RDX+7]
            shl ESI,8
            add ESI,EDI
            add ESI,EDX
            je .L_40f879

            mov ESI,ESI
            add RAX,RSI
            je .L_40f7b9

            movzx EDX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ESI
            cmp DX,14
            cmove R11,RAX
.L_40f7b9:

            mov RAX,QWORD PTR [RSP+24]
            test R10B,R10B
            mov QWORD PTR [RAX+64],R11
            mov QWORD PTR [RAX+8],RCX
            je .L_40f830

            mov RAX,QWORD PTR [RSP+24]
            lea RBX,QWORD PTR [RIP+.L_40df40]
            mov QWORD PTR [RAX],RBX
.L_40f7da:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4106b3

            add RSP,88
.L_40f7f2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f800:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_40f8a3

            test DI,DI
            jne .L_41068b
.L_40f81a:

            mov RAX,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RIP+.L_657400]
            mov QWORD PTR [RAX+64],RCX
            mov QWORD PTR [RAX+8],RCX
            nop
            nop
.L_40f830:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,4
            je .L_410038

            cmp AX,12
            jne .L_40ffb0

            mov RAX,QWORD PTR [RSP+24]
            lea RBX,QWORD PTR [RIP+.L_40d8b0]
            mov QWORD PTR [RAX],RBX
            jmp .L_40f7da
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f868:

            add R9D,1
            add RDX,8
            cmp R8D,R9D
            ja .L_40f740
.L_40f879:

            lea R11,QWORD PTR [RIP+.L_657400]
            jmp .L_40f7b9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f888:

            add R10D,1
            add RSI,8
            cmp R8D,R10D
            jne .L_40f6c0
.L_40f899:

            lea RDX,QWORD PTR [R9+2]
            xor R11D,R11D
            mov RCX,RDX
.L_40f8a3:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_40f800

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,6
            jne .L_40f800

            lea RSI,QWORD PTR [RIP+.L_657400]
            cmp R11D,R8D
            cmovae RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_40f916

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_40f997
.L_40f916:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
.L_40f920:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_410200

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,4
            jne .L_410200

            lea RSI,QWORD PTR [RIP+.L_657400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_41021e

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            je .L_41021e
.L_40f997:

            xor R10D,R10D
            jmp .L_40f733
          .byte 0x90
.L_40f9a0:

            mov RDI,QWORD PTR [RSP+64]
            call .L_401950

            jmp .L_40f668
          .byte 0x90
.L_40f9b0:

            mov RCX,RAX
            sub RCX,RDX
            cmp ECX,1
            jbe .L_40f630

            lea RCX,QWORD PTR [RDI+4]
            cmp RDI,RCX
            ja .L_40f630

            cmp RAX,RCX
            jb .L_40f630

            movzx ESI,BYTE PTR [RDI+2]
            movzx R8D,BYTE PTR [RDI+3]
            mov RBX,RAX
            sub RBX,RCX
            shl ESI,8
            add ESI,R8D
            movzx R8D,SI
            lea R9D,DWORD PTR [R8*8]
            cmp R9D,EBX
            ja .L_40f630

            test SI,SI
            je .L_40f9a0

            cmp EBX,7
            jbe .L_40f630

            lea RCX,QWORD PTR [RDI+8]
            cmp RDI,RCX
            ja .L_40f630

            cmp RAX,RCX
            jb .L_40f630

            sub RAX,RCX
            cmp EAX,3
            jbe .L_40f630

            lea EAX,DWORD PTR [R8-1]
            lea R9,QWORD PTR [RDI+12]
            mov R8,RDI
            mov DWORD PTR [RSP+4],0
            lea RBP,QWORD PTR [RDX+RAX*8+10]
            lea RDX,QWORD PTR [RDI+16]
            sub RDX,RCX
            mov R12,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fa58:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            mov ESI,EDX
            shl EAX,16
            shl ESI,24
            lea EDX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [RCX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+3]
            add EAX,EDX
            je .L_40fb58

            mov EAX,EAX
            add RAX,RDI
            cmp R8,RAX
            ja .L_40fba0

            mov R15,QWORD PTR [RSP+48]
            cmp RAX,R15
            ja .L_40fba0

            mov RSI,R15
            sub RSI,RAX
            cmp ESI,1
            jbe .L_40fba0

            movzx EDX,BYTE PTR [RAX]
            movzx R10D,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,R10D
            cmp DX,14
            ja .L_40fb58

            movzx EDX,DX
            movsxd RDX,DWORD PTR [R13+RDX*4]
            add RDX,R13
            jmp RDX
          .byte 0x90
.L_40fad0:

            call .L_401c20

            mov R14,RAX
            jmp .L_40f56d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fae0:

            cmp ESI,15
            jbe .L_40fba0

            lea RDX,QWORD PTR [RAX+12]
            cmp R8,RDX
            ja .L_40fba0

            cmp R15,RDX
            jb .L_40fba0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_40fba0

            movzx ESI,BYTE PTR [RAX+12]
            movzx EDX,BYTE PTR [RAX+13]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+14]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [RAX+15]
            add EDX,ESI
            cmp EDX,357913940
            ja .L_40fba0

            add RAX,16
            cmp R8,RAX
            ja .L_40fba0

            cmp R15,RAX
            jb .L_40fba0

            lea EDX,DWORD PTR [RDX+RDX*2]
            sub R15,RAX
            shl EDX,2
            cmp EDX,R15D
            ja .L_40fba0

            nop
            nop
            nop
            nop
            nop
            nop
.L_40fb58:

            cmp RBP,R9
            je .L_40fea8
.L_40fb61:

            mov R8,QWORD PTR [RSP+40]
            cmp R9,R8
            jae .L_40ffc8
.L_40fb6f:

            cmp DWORD PTR [RSP+4],0
            je .L_40f630

            nop
            nop
            nop
            nop
            nop
            nop
.L_40fb80:

            cmp BYTE PTR [RSP+56],0
            je .L_40fbc0

            jmp .L_40f630
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fb90:

            cmp ESI,261
            seta AL
.L_40fb99:

            test AL,AL
            jne .L_40fb58

            nop
            nop
            nop
.L_40fba0:

            mov EBX,DWORD PTR [RSP+4]
            movzx EAX,BYTE PTR [RSP+56]
            cmp EBX,2
            ja .L_40fb80

            mov EDX,EBX
            add EDX,1
            test AL,AL
            mov DWORD PTR [RSP+60],EDX
            jne .L_410018

            nop
.L_40fbc0:

            xor ESI,ESI
            mov RDI,R14
            call .L_401d70

            mov RDI,R14
            mov RBX,RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],RBX
            je .L_40f630

            mov BYTE PTR [RSP+56],1
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40f5b9
          .byte 0x90
.L_40fc00:

            cmp ESI,9
            jbe .L_40fba0

            lea RDX,QWORD PTR [RAX+6]
            cmp R8,RDX
            ja .L_40fba0

            cmp R15,RDX
            jb .L_40fba0

            mov RSI,R15
            sub RSI,RDX
            cmp ESI,3
            jbe .L_40fba0

            movzx R10D,BYTE PTR [RAX+6]
            movzx ESI,BYTE PTR [RAX+7]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RAX+8]
            shl ESI,8
            add ESI,R10D
            movzx R10D,BYTE PTR [RAX+9]
            add ESI,R10D
            cmp ESI,390451571
            ja .L_40fba0

            lea R10,QWORD PTR [RAX+10]
            cmp R8,R10
            ja .L_40fba0

            cmp R15,R10
            jb .L_40fba0

            lea R11D,DWORD PTR [RSI+RSI*4]
            mov R8,R15
            sub R8,R10
            lea R11D,DWORD PTR [RSI+R11*2]
            cmp R11D,R8D
            ja .L_40fba0

            test ESI,ESI
            je .L_40fb58

            mov R11,QWORD PTR [RSP+40]
            cmp R10,R11
            jb .L_40fba0

            cmp R8D,10
            jbe .L_40fba0

            lea R10,QWORD PTR [RAX+13]
            cmp R11,R10
            ja .L_40fba0

            cmp R15,R10
            jb .L_40fba0

            mov R8,R15
            sub R8,R10
            cmp R8D,3
            jbe .L_40fba0

            sub ESI,1
            add RDX,18
            lea RBX,QWORD PTR [RAX+21]
            lea R8,QWORD PTR [RSI+RSI*4]
            sub RDX,R10
            mov QWORD PTR [RSP+16],RDX
            lea RSI,QWORD PTR [RSI+R8*2]
            add RSI,R10
            mov QWORD PTR [RSP+8],RSI
            nop
            nop
            nop
.L_40fcf0:

            movzx ESI,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [R10+2]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [R10+3]
            add EDX,ESI
            jne .L_410140
.L_40fd19:

            lea RDX,QWORD PTR [RBX-4]
            cmp R11,RDX
            ja .L_40fba0

            mov R8,QWORD PTR [RSP+48]
            cmp R8,RDX
            jb .L_40fba0

            mov RSI,R8
            sub RSI,RDX
            cmp ESI,3
            jbe .L_40fba0

            movzx ESI,BYTE PTR [RBX-4]
            movzx EDX,BYTE PTR [RBX-3]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RBX-2]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [RBX-1]
            add EDX,ESI
            je .L_4100d0

            mov EDX,EDX
            add RDX,RAX
            cmp R11,RDX
            jbe .L_410520
.L_40fd77:

            mov ESI,DWORD PTR [RSP+4]
            cmp ESI,2
            ja .L_40fb80

            mov EDX,ESI
            add EDX,1
            cmp BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],EDX
            jne .L_4100b7
.L_40fd98:

            cmp EDX,3
            je .L_40fb80

            add EDX,1
            mov DWORD PTR [RSP+60],EDX
            jmp .L_40fbc0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fdb0:

            cmp ESI,19
            jbe .L_40fba0

            lea RDX,QWORD PTR [RAX+16]
            cmp R8,RDX
            ja .L_40fba0

            cmp R15,RDX
            jb .L_40fba0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,3
            jbe .L_40fba0

            movzx ESI,BYTE PTR [RAX+16]
            movzx EDX,BYTE PTR [RAX+17]
            shl ESI,24
            shl EDX,16
            lea ESI,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RAX+18]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [RAX+19]
            add EDX,ESI
            cmp EDX,2147483646
            ja .L_40fba0

            add RAX,20
            cmp R8,RAX
            ja .L_40fba0

            cmp R15,RAX
            jb .L_40fba0

            add EDX,EDX
            sub R15,RAX
            cmp EDX,R15D
            jbe .L_40fb58

            jmp .L_40fba0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fe38:

            cmp ESI,9
            jbe .L_40fba0

            lea RDX,QWORD PTR [RAX+8]
            cmp R8,RDX
            ja .L_40fba0

            cmp R15,RDX
            jb .L_40fba0

            mov RBX,R15
            sub RBX,RDX
            cmp EBX,1
            jbe .L_40fba0

            lea RDX,QWORD PTR [RAX+10]
            cmp R8,RDX
            ja .L_40fba0

            cmp R15,RDX
            jb .L_40fba0

            movzx ESI,BYTE PTR [RAX+8]
            movzx EAX,BYTE PTR [RAX+9]
            sub R15,RDX
            shl ESI,8
            add EAX,ESI
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R15D
            ja .L_40fba0

            cmp RBP,R9
            jne .L_40fb61

            nop
            nop
            nop
            nop
            nop
.L_40fea8:

            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            je .L_40f9a0

            lea RSI,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+60],0
            call .L_40e9d0

            mov EDX,DWORD PTR [RSP+60]
            mov EBX,EAX
            test EDX,EDX
            jne .L_40f630

            mov RDI,QWORD PTR [RSP+64]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+40],0
            jne .L_40f668

            jmp .L_40f655
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ff10:

            cmp ESI,13
            jbe .L_40fba0

            movzx EDX,BYTE PTR [RAX+2]
            movzx R8D,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_40ff88

            mov EBX,DWORD PTR [RSP+4]
            cmp EBX,2
            ja .L_40fb80

            mov EDX,EBX
            add EDX,1
            cmp BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],EDX
            je .L_40fd98

            cmp RSI,65535
            mov EBX,65535
            cmova RSI,RBX
            mov EDX,ESI
            mov BYTE PTR [RAX+3],SIL
            movzx ESI,SIL
            shr DX,8
            mov BYTE PTR [RAX+2],DL
            mov EBX,DWORD PTR [RSP+60]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            mov DWORD PTR [RSP+4],EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ff88:

            movzx ESI,BYTE PTR [RAX+6]
            movzx EAX,BYTE PTR [RAX+7]
            shl ESI,8
            add EAX,ESI
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX*4+16]
            cmp EAX,EDX
            setbe AL
            jmp .L_40fb99
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ffb0:

            mov RAX,QWORD PTR [RSP+24]
            lea RBX,QWORD PTR [RIP+.L_40da10]
            mov QWORD PTR [RAX],RBX
            jmp .L_40f7da
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ffc8:

            mov RAX,QWORD PTR [RSP+48]
            cmp R9,RAX
            ja .L_40fb6f

            mov RDX,RAX
            sub RDX,R9
            cmp EDX,7
            jbe .L_40fb6f

            add RCX,R12
            cmp R8,RCX
            ja .L_40fb6f

            cmp RAX,RCX
            jb .L_40fb6f

            lea RDX,QWORD PTR [R9+4]
            add R9,8
            sub RAX,RDX
            cmp EAX,3
            jbe .L_40fb6f

            jmp .L_40fa58
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410018:

            mov BYTE PTR [RCX],0
            mov BYTE PTR [RCX+1],0
            mov BYTE PTR [RCX+2],0
            mov BYTE PTR [RCX+3],0
            mov EAX,DWORD PTR [RSP+60]
            mov DWORD PTR [RSP+4],EAX
            jmp .L_40fb58
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410038:

            movzx EDX,BYTE PTR [RCX+6]
            movzx EAX,BYTE PTR [RCX+7]
            mov RBX,QWORD PTR [RSP+24]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RCX+14]
            shr DX,1
            movzx ESI,DX
            movzx EDX,DX
            mov QWORD PTR [RBX+16],RAX
            lea RDX,QWORD PTR [RDX+RDX*1+2]
            mov DWORD PTR [RBX+56],ESI
            shl ESI,3
            add RAX,RDX
            sub RDX,2
            mov QWORD PTR [RBX+24],RAX
            add RAX,RDX
            mov QWORD PTR [RBX+32],RAX
            add RAX,RDX
            mov QWORD PTR [RBX+40],RAX
            add RAX,RDX
            mov QWORD PTR [RBX+48],RAX
            movzx EAX,BYTE PTR [RCX+2]
            movzx EDX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            sub EAX,16
            sub EAX,ESI
            shr EAX,1
            mov DWORD PTR [RBX+60],EAX
            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            lea RAX,QWORD PTR [RIP+.L_40d770]
            mov QWORD PTR [RBX],RAX
            jmp .L_40f7da
.L_4100b7:

            mov BYTE PTR [RBX-4],0
            mov BYTE PTR [RBX-3],0
            mov BYTE PTR [RBX-2],0
            mov BYTE PTR [RBX-1],0
            mov ESI,DWORD PTR [RSP+60]
            mov DWORD PTR [RSP+4],ESI
            nop
.L_4100d0:

            cmp R10,QWORD PTR [RSP+8]
            je .L_40fb58

            mov R11,QWORD PTR [RSP+40]
            cmp R11,RBX
            ja .L_40fba0

            mov R15,QWORD PTR [RSP+48]
            cmp R15,RBX
            jb .L_40fba0

            mov RDX,R15
            sub RDX,RBX
            cmp EDX,10
            jbe .L_40fba0

            add R10,QWORD PTR [RSP+16]
            cmp R11,R10
            ja .L_40fba0

            cmp R15,R10
            jb .L_40fba0

            lea RDX,QWORD PTR [RBX+3]
            mov RSI,R15
            add RBX,11
            sub RSI,RDX
            cmp ESI,3
            ja .L_40fcf0

            jmp .L_40fba0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410140:

            mov EDX,EDX
            add RDX,RAX
            cmp RDX,R11
            jae .L_410190
.L_41014a:

            mov ESI,DWORD PTR [RSP+4]
            cmp ESI,2
            ja .L_40fb80

            mov EDX,ESI
            add EDX,1
            cmp BYTE PTR [RSP+56],0
            mov DWORD PTR [RSP+60],EDX
            je .L_40fd98

            mov BYTE PTR [R10],0
            mov BYTE PTR [R10+1],0
            mov BYTE PTR [R10+2],0
            mov BYTE PTR [R10+3],0
            mov ESI,DWORD PTR [RSP+60]
            mov R11,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+4],ESI
            jmp .L_40fd19
.L_410190:

            cmp RDX,R15
            ja .L_41014a

            mov RSI,R15
            sub RSI,RDX
            cmp ESI,3
            jbe .L_41014a

            movzx R8D,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl R8D,24
            shl ESI,16
            add R8D,ESI
            movzx ESI,BYTE PTR [RDX+2]
            shl ESI,8
            add ESI,R8D
            movzx R8D,BYTE PTR [RDX+3]
            add ESI,R8D
            cmp ESI,1073741822
            ja .L_41014a

            add RDX,4
            cmp RDX,R11
            jb .L_41014a

            cmp R15,RDX
            jb .L_41014a

            shl ESI,2
            sub R15,RDX
            cmp ESI,R15D
            jbe .L_40fd19

            jmp .L_41014a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410200:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_40f920

            test R8D,R8D
            lea RDX,QWORD PTR [R9+2]
            je .L_410651
.L_41021e:

            mov R10,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
.L_410228:

            movzx ECX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,ESI
            cmp CX,3
            jne .L_410668

            movzx ECX,BYTE PTR [R10+2]
            movzx ESI,BYTE PTR [R10+3]
            shl ECX,8
            add ECX,ESI
            cmp CX,1
            jne .L_410668

            lea RCX,QWORD PTR [RIP+.L_657400]
            cmp R11D,R8D
            cmovae R10,RCX
            movzx ESI,BYTE PTR [R10+4]
            movzx ECX,BYTE PTR [R10+5]
            shl ESI,24
            shl ECX,16
            lea ESI,DWORD PTR [RSI+RCX*1]
            movzx ECX,BYTE PTR [R10+6]
            shl ECX,8
            add ECX,ESI
            movzx ESI,BYTE PTR [R10+7]
            add ECX,ESI
            je .L_410298

            mov ECX,ECX
            add RCX,RAX
            jne .L_40f997
.L_410298:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
.L_4102a0:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_410640

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,3
            jne .L_410640

            lea RSI,QWORD PTR [RIP+.L_657400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_410313

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_40f997
.L_410313:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410320:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_410618

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,2
            jne .L_410618

            lea RSI,QWORD PTR [RIP+.L_657400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_410393

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_40f997
.L_410393:

            mov RCX,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4103a0:

            movzx ESI,BYTE PTR [RCX]
            movzx R10D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R10W
            jne .L_4105f0

            movzx ESI,BYTE PTR [RCX+2]
            movzx R10D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R10D
            cmp SI,1
            jne .L_4105f0

            lea RSI,QWORD PTR [RIP+.L_657400]
            cmp R8D,R11D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_410413

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_40f997
.L_410413:

            mov RCX,RDX
            xor R10D,R10D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410420:

            movzx ESI,BYTE PTR [RCX]
            movzx R11D,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,R11W
            jne .L_4105c8

            movzx ESI,BYTE PTR [RCX+2]
            movzx R11D,BYTE PTR [RCX+3]
            shl ESI,8
            add SI,R11W
            jne .L_4105c8

            lea RSI,QWORD PTR [RIP+.L_657400]
            cmp R8D,R10D
            cmovbe RCX,RSI
            movzx R10D,BYTE PTR [RCX+4]
            movzx ESI,BYTE PTR [RCX+5]
            mov R11D,R10D
            shl ESI,16
            shl R11D,24
            lea R10D,DWORD PTR [R11+RSI*1]
            movzx ESI,BYTE PTR [RCX+6]
            movzx ECX,BYTE PTR [RCX+7]
            shl ESI,8
            add ESI,R10D
            add ESI,ECX
            je .L_410490

            mov ESI,ESI
            mov RCX,RSI
            add RCX,RAX
            jne .L_40f997
.L_410490:

            mov R10,RDX
            xor R11D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4104a0:

            movzx ECX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,ESI
            cmp CX,3
            jne .L_410598

            movzx ECX,BYTE PTR [R10+2]
            movzx ESI,BYTE PTR [R10+3]
            shl ECX,8
            add CX,SI
            jne .L_410598

            lea R9,QWORD PTR [RIP+.L_657400]
            cmp R8D,R11D
            cmovbe R10,R9
            movzx ESI,BYTE PTR [R10+4]
            movzx ECX,BYTE PTR [R10+5]
            mov EDI,ESI
            shl ECX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RCX*1]
            movzx ECX,BYTE PTR [R10+6]
            shl ECX,8
            add ECX,ESI
            movzx ESI,BYTE PTR [R10+7]
            add ECX,ESI
            je .L_410515

            mov ECX,ECX
            mov R10D,1
            add RCX,RAX
            jne .L_40f733
.L_410515:

            xor R10D,R10D
            mov RCX,R9
            jmp .L_40f733
.L_410520:

            cmp R8,RDX
            jb .L_40fd77

            mov RSI,R8
            sub RSI,RDX
            cmp ESI,3
            jbe .L_40fd77

            movzx R15D,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl R15D,24
            shl ESI,16
            add R15D,ESI
            movzx ESI,BYTE PTR [RDX+2]
            shl ESI,8
            add ESI,R15D
            movzx R15D,BYTE PTR [RDX+3]
            add ESI,R15D
            cmp ESI,858993458
            ja .L_40fd77

            add RDX,4
            cmp R11,RDX
            ja .L_40fd77

            cmp R8,RDX
            jb .L_40fd77

            lea ESI,DWORD PTR [RSI+RSI*4]
            sub R8,RDX
            cmp ESI,R8D
            jbe .L_4100d0

            jmp .L_40fd77
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410598:

            add R11D,1
            add R10,8
            cmp R8D,R11D
            ja .L_4104a0

            test DI,DI
            je .L_40f81a

            xor R10D,R10D
            lea RCX,QWORD PTR [RIP+.L_657400]
            lea RDX,QWORD PTR [R9+2]
            jmp .L_40f733
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4105c8:

            add R10D,1
            add RCX,8
            cmp R8D,R10D
            ja .L_410420

            test DI,DI
            lea RDX,QWORD PTR [R9+2]
            jne .L_410490

            jmp .L_40f81a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4105f0:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_4103a0

            test DI,DI
            je .L_40f81a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_410413
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410618:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_410320

            test DI,DI
            je .L_40f81a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_410393
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410640:

            add R11D,1
            add RCX,8
            cmp R8D,R11D
            ja .L_4102a0
.L_410651:

            test DI,DI
            je .L_40f81a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_410313
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410668:

            add R11D,1
            add R10,8
            cmp R8D,R11D
            ja .L_410228

            test DI,DI
            je .L_40f81a

            lea RDX,QWORD PTR [R9+2]
            jmp .L_410298
.L_41068b:

            lea RDX,QWORD PTR [R9+2]
            jmp .L_40f916
.L_410694:

            lea RCX,QWORD PTR [RIP+.L_4401a0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_4106b3:

            call __stack_chk_fail@PLT
.L_4106b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4106c0:

            jmp .L_4296c0
.L_4106c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4106d0:

            jmp .L_426e00
.L_4106d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4106e0:

            mov EAX,1
            ret 
.L_4106e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4106f0:

            ret 
.L_4106f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410700:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EDI,1
            sub RSP,1368
.L_410719:

            mov QWORD PTR [RSP+8],RSI
            mov ESI,1096
            mov DWORD PTR [RSP+4],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1352],RAX
            xor EAX,EAX
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_410c9a

            movdqu XMM0,XMMWORD PTR [R13+128]
            lea RBP,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R13+120]
            mov QWORD PTR [RSP+56],0
            movups XMMWORD PTR [RSP+24],XMM0
            lea RDX,QWORD PTR [RBP+8]
            lea RDI,QWORD PTR [RBP+48]
            movdqu XMM0,XMMWORD PTR [R13+144]
            mov QWORD PTR [RSP+16],RSI
            movups XMMWORD PTR [RSP+40],XMM0
            call .L_43cd10

            mov EAX,DWORD PTR [RSP+28]
            cmp EAX,1298229354
            je .L_410f78

            ja .L_410cd0

            cmp EAX,1198877298
            je .L_41103b

            jbe .L_41106c

            cmp EAX,1265131890
            je .L_410f78

            ja .L_410fc0

            cmp EAX,1214603890
            lea RDX,QWORD PTR [RIP+.L_656a60]
            je .L_4107f0

            ja .L_411234

            cmp EAX,1214344807
            lea RDX,QWORD PTR [RIP+.L_656a00]
            jne .L_4111a7

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4107f0:

            mov EAX,DWORD PTR [R13+128]
            mov QWORD PTR [RSP+56],RDX
            cmp EAX,4
            je .L_410ef0

            cmp EAX,5
            jne .L_410839

            lea R12,QWORD PTR [RBP+48]
            mov ECX,1
            mov EDX,1
            mov ESI,1920232545
            mov RDI,R12
            call .L_43ce20

            xor ECX,ECX
            mov EDX,1
            mov ESI,1920232557
            mov RDI,R12
            call .L_43ce20
.L_410839:

            lea R12,QWORD PTR [RBP+48]
            xor ECX,ECX
            mov EDX,1
            mov ESI,1718772067
            mov RDI,R12
            call .L_43ce20

            xor ECX,ECX
            mov EDX,1
            mov ESI,1853189490
            mov RDI,R12
            call .L_43ce20

            xor ECX,ECX
            mov EDX,1
            mov ESI,1684959085
            mov RDI,R12
            call .L_43ce20

            mov RAX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41088c

            mov RDI,RBP
            call RAX
.L_41088c:

            lea R15,QWORD PTR [RIP+.L_440200]
            lea R12,QWORD PTR [RBP+48]
            mov ESI,1667460464
            lea R14,QWORD PTR [R15+20]
.L_4108a0:

            mov ECX,1
            mov EDX,1
            mov RDI,R12
            add R15,4
            call .L_43ce20

            cmp R14,R15
            je .L_410d58

            mov ESI,DWORD PTR [R15]
            jmp .L_4108a0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4108c8:

            mov ECX,9
            mov EDX,1
            mov ESI,1986359924
            mov RDI,R12
            call .L_43ce20
.L_4108df:

            mov RAX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_4108f2

            mov RDI,RBP
            call RAX
.L_4108f2:

            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            je .L_410941

            mov R12,QWORD PTR [RSP+8]
            sub EAX,1
            shl RAX,4
            lea R13,QWORD PTR [R12+RAX*1+16]
            nop
            nop
            nop
            nop
            nop
.L_410910:

            mov EDX,DWORD PTR [R12+8]
            xor ECX,ECX
            test EDX,EDX
            jne .L_410926

            xor ECX,ECX
            cmp DWORD PTR [R12+12],-1
            sete CL
.L_410926:

            mov EDX,DWORD PTR [R12+4]
            mov ESI,DWORD PTR [R12]
            lea RDI,QWORD PTR [RBP+48]
            add R12,16
            call .L_43ce20

            cmp R12,R13
            jne .L_410910
.L_410941:

            movdqu XMM0,XMMWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+48]
            lea RSI,QWORD PTR [RBX+40]
            mov RAX,QWORD PTR [RSP+56]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+40]
            mov QWORD PTR [RBX+32],RAX
            movups XMMWORD PTR [RBX+16],XMM0
            call .L_43d190

            mov ECX,DWORD PTR [RBX+56]
            mov RAX,QWORD PTR [RBX+64]
            xor EDI,EDI
            mov R10,RCX
.L_410976:

            cmp RDI,R10
            jae .L_4109c7

            lea RSI,QWORD PTR [RDI+R10*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R9,QWORD PTR [RAX+RDX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1920232557
            ja .L_4109c2

            jmp .L_410e48
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4109a0:

            lea RDX,QWORD PTR [RDI+RSI*1]
            shr RDX,1
            lea R8,QWORD PTR [RDX+RDX*8]
            lea R9,QWORD PTR [RAX+R8*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1920232557
            jbe .L_410e50

            mov RSI,RDX
.L_4109c2:

            cmp RDI,RSI
            jb .L_4109a0
.L_4109c7:

            xor EDX,EDX
.L_4109c9:

            mov DWORD PTR [RBX+1072],EDX
            mov R10,RCX
            xor EDI,EDI
.L_4109d4:

            cmp RDI,R10
            jae .L_410a27

            lea RSI,QWORD PTR [RDI+R10*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R9,QWORD PTR [RAX+RDX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1718772067
            ja .L_410a22

            jmp .L_410e68
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410a00:

            lea RDX,QWORD PTR [RDI+RSI*1]
            shr RDX,1
            lea R8,QWORD PTR [RDX+RDX*8]
            lea R9,QWORD PTR [RAX+R8*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1718772067
            jbe .L_410e70

            mov RSI,RDX
.L_410a22:

            cmp RDI,RSI
            jb .L_410a00
.L_410a27:

            xor EDI,EDI
.L_410a29:

            mov DWORD PTR [RBX+1076],EDI
            mov R11,RCX
            xor R8D,R8D
.L_410a35:

            cmp R8,R11
            jae .L_410a87

            lea RSI,QWORD PTR [R8+R11*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R10,QWORD PTR [RAX+RDX*4]
            mov R9D,DWORD PTR [R10]
            cmp R9D,1853189490
            ja .L_410a82

            jmp .L_410e88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410a60:

            lea RDX,QWORD PTR [R8+RSI*1]
            shr RDX,1
            lea R9,QWORD PTR [RDX+RDX*8]
            lea R10,QWORD PTR [RAX+R9*4]
            mov R9D,DWORD PTR [R10]
            cmp R9D,1853189490
            jbe .L_410e90

            mov RSI,RDX
.L_410a82:

            cmp R8,RSI
            jb .L_410a60
.L_410a87:

            xor R9D,R9D
.L_410a8a:

            mov DWORD PTR [RBX+1080],R9D
            mov R12,RCX
            xor R8D,R8D
.L_410a97:

            cmp R8,R12
            jae .L_410ae7

            lea RSI,QWORD PTR [R8+R12*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R11,QWORD PTR [RAX+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1684959085
            ja .L_410ae2

            jmp .L_410df0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410ac0:

            lea RDX,QWORD PTR [R8+RSI*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [RAX+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1684959085
            jbe .L_410e00

            mov RSI,RDX
.L_410ae2:

            cmp R8,RSI
            jb .L_410ac0
.L_410ae7:

            xor R13D,R13D
.L_410aea:

            mov EDX,DWORD PTR [RBX]
            mov R12D,1986753134
            mov DWORD PTR [RBX+1084],R13D
            mov R14,RCX
            and EDX,4294967294
            cmp EDX,4
            mov EDX,1801810542
            cmove R12D,EDX
            xor R8D,R8D
.L_410b0e:

            cmp R8,R14
            jae .L_410b53

            lea RSI,QWORD PTR [R8+R14*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R11,QWORD PTR [RAX+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R12D,R10D
            jb .L_410b4e

            jmp .L_410e20
          .byte 0x90
.L_410b30:

            lea RDX,QWORD PTR [R8+RSI*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [RAX+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,R12D
            jbe .L_410e30

            mov RSI,RDX
.L_410b4e:

            cmp R8,RSI
            jb .L_410b30
.L_410b53:

            xor ESI,ESI
            xor EDX,EDX
.L_410b57:

            test EDI,EDI
            mov DWORD PTR [RBX+1088],EDX
            mov R8D,1
            jne .L_410b77

            test R13D,R13D
            setne DL
            test R9D,R9D
            setne R8B
            and R8D,EDX
.L_410b77:

            movzx EDX,BYTE PTR [RBX+1092]
            add ESI,ESI
            xor EDI,EDI
            and EDX,4294967292
            or EDX,R8D
            or EDX,ESI
            mov BYTE PTR [RBX+1092],DL
.L_410b90:

            cmp RDI,RCX
            jae .L_410bdf

            lea RSI,QWORD PTR [RDI+RCX*1]
            shr RSI,1
            lea RDX,QWORD PTR [RSI+RSI*8]
            lea R9,QWORD PTR [RAX+RDX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1835102827
            ja .L_410bda

            jmp .L_410dc0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410bb8:

            lea RDX,QWORD PTR [RSI+RDI*1]
            shr RDX,1
            lea RCX,QWORD PTR [RDX+RDX*8]
            lea R9,QWORD PTR [RAX+RCX*4]
            mov R8D,DWORD PTR [R9]
            cmp R8D,1835102827
            jbe .L_410dd0

            mov RSI,RDX
.L_410bda:

            cmp RSI,RDI
            ja .L_410bb8
.L_410bdf:

            xor EAX,EAX
.L_410be1:

            lea EDX,DWORD PTR [RAX*4]
            movzx EAX,BYTE PTR [RBX+1092]
            and EAX,4294967291
            or EAX,EDX
            mov BYTE PTR [RBX+1092],AL
            mov RAX,QWORD PTR [RBX+32]
            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            je .L_410c1f

            mov RDI,RBX
            call RAX

            mov QWORD PTR [RBX+1064],RAX
            test RAX,RAX
            mov EAX,0
            cmove RBX,RAX
.L_410c1f:

            mov RDI,QWORD PTR [RSP+152]
            lea RAX,QWORD PTR [RBP+144]
            cmp RDI,RAX
            je .L_410c38

            call free@PLT
.L_410c38:

            mov RDI,QWORD PTR [RSP+1064]
            lea RAX,QWORD PTR [RBP+1056]
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            cmp RDI,RAX
            je .L_410c69

            call free@PLT
.L_410c69:

            mov RDI,QWORD PTR [RSP+1208]
            add RBP,1200
            mov QWORD PTR [RSP+1056],0
            mov QWORD PTR [RSP+1064],0
            cmp RDI,RBP
            je .L_410c9a

            call free@PLT
.L_410c9a:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+1352]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4112bb

            add RSP,1368
.L_410cbb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410cd0:

            cmp EAX,1399415908
            je .L_410f78

            ja .L_410f30

            cmp EAX,1299803506
            je .L_410f92

            ja .L_4110b0

            cmp EAX,1298954605
            je .L_41103b

            ja .L_411181

            cmp EAX,1298230889
            je .L_410d1c

            cmp EAX,1298231907
            je .L_410f78

            cmp EAX,1298230884
            jne .L_410d48
.L_410d1c:

            cmp DWORD PTR [RSP+104],1145457748
            jne .L_410d2d

            cmp EAX,1098015074
            jne .L_410d48
.L_410d2d:

            mov EAX,DWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_6569a0]
            and EAX,4294967294
            cmp EAX,4
            je .L_4107f0

            nop
            nop
            nop
            nop
.L_410d48:

            lea RDX,QWORD PTR [RIP+.L_4418e0]
            jmp .L_4107f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410d58:

            mov EAX,DWORD PTR [R13+128]
            and EAX,4294967294
            cmp EAX,4
            jne .L_4108c8

            lea R14,QWORD PTR [RIP+.L_4401e0]
            mov ESI,1667329140
            xor ECX,ECX
            lea R12,QWORD PTR [RBP+48]
            lea R13,QWORD PTR [R14+20]
            jmp .L_410d9d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410d88:

            mov ESI,DWORD PTR [R14+4]
            xor ECX,ECX
            cmp ESI,1801810542
            sete CL
            add R14,4
            add ECX,ECX
.L_410d9d:

            or ECX,1
            mov EDX,1
            mov RDI,R12
            call .L_43ce20

            cmp R13,R14
            jne .L_410d88

            jmp .L_4108df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410dc0:

            mov RDX,RSI
            mov RSI,RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410dd0:

            cmp R8D,1835102827
            je .L_410ea5

            lea RDI,QWORD PTR [RDX+1]
            mov RCX,RSI
            jmp .L_410b90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410df0:

            mov RDX,RSI
            mov RSI,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410e00:

            cmp R10D,1684959085
            je .L_410eb3

            lea R8,QWORD PTR [RDX+1]
            mov R12,RSI
            jmp .L_410a97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410e20:

            mov RDX,RSI
            mov RSI,R14
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410e30:

            cmp R12D,R10D
            jbe .L_410ec5

            lea R8,QWORD PTR [RDX+1]
            mov R14,RSI
            jmp .L_410b0e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e48:

            mov RDX,RSI
            mov RSI,R10
            nop
            nop
.L_410e50:

            cmp R8D,1920232557
            je .L_410ed4

            lea RDI,QWORD PTR [RDX+1]
            mov R10,RSI
            jmp .L_410976
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e68:

            mov RDX,RSI
            mov RSI,R10
            nop
            nop
.L_410e70:

            cmp R8D,1718772067
            je .L_410edd

            lea RDI,QWORD PTR [RDX+1]
            mov R10,RSI
            jmp .L_4109d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e88:

            mov RDX,RSI
            mov RSI,R11
            nop
            nop
.L_410e90:

            cmp R9D,1853189490
            je .L_410ebc

            lea R8,QWORD PTR [RDX+1]
            mov R11,RSI
            jmp .L_410a35
.L_410ea5:

            mov EAX,DWORD PTR [R9+28]
            test EAX,EAX
            setne AL
            jmp .L_410be1
.L_410eb3:

            mov R13D,DWORD PTR [R11+28]
            jmp .L_410aea
.L_410ebc:

            mov R9D,DWORD PTR [R10+28]
            jmp .L_410a8a
.L_410ec5:

            mov EDX,DWORD PTR [R11+24]
            test EDX,EDX
            setne SIL
            jmp .L_410b57
.L_410ed4:

            mov EDX,DWORD PTR [R9+28]
            jmp .L_4109c9
.L_410edd:

            mov EDI,DWORD PTR [R9+28]
            jmp .L_410a29
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410ef0:

            lea R12,QWORD PTR [RBP+48]
            mov ECX,1
            mov EDX,1
            mov ESI,1819570785
            mov RDI,R12
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1819570797
            mov RDI,R12
            call .L_43ce20

            jmp .L_410839
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410f30:

            cmp EAX,1415670885
            je .L_410f78

            jbe .L_4110f0

            cmp EAX,1415999079
            je .L_410f78

            jbe .L_4111e8

            cmp EAX,1416126825
            je .L_411060

            jbe .L_4112ab

            cmp EAX,1416192628
            lea RDX,QWORD PTR [RIP+.L_656be0]
            je .L_4107f0

            cmp EAX,1416196712
            jne .L_410d48
.L_410f78:

            cmp DWORD PTR [RSP+104],1145457748
            lea RDX,QWORD PTR [RIP+.L_656c40]
            jne .L_4107f0

            jmp .L_410d48
.L_410f92:

            mov EAX,DWORD PTR [RSP+104]
            lea RDX,QWORD PTR [RIP+.L_656b20]
            cmp EAX,1836674354
            je .L_4107f0

            cmp EAX,1836674418
            lea RDX,QWORD PTR [RIP+.L_447480]
            jne .L_410d48

            jmp .L_4107f0
          .byte 0x90
.L_410fc0:

            cmp EAX,1265920105
            je .L_410f78

            ja .L_411055

            cmp EAX,1265135466
            je .L_410f78

            cmp EAX,1265525857
            je .L_41103b

            cmp EAX,1265134962
            jne .L_410d48

            cmp BYTE PTR [RSP+112],0
            je .L_410d48

            mov ECX,DWORD PTR [RSP+124]
            mov EDX,DWORD PTR [RSP+116]
            xor R9D,R9D
            mov RDI,QWORD PTR [RSP+16]
            mov R8D,1886545254
            mov ESI,1196643650
            call .L_428450

            test EAX,EAX
            jne .L_411049

            jmp .L_410d48
.L_41101a:

            cmp EAX,1114139507
            je .L_410f78

            cmp EAX,1114792296
            je .L_410f78

            cmp EAX,1113943655
            jne .L_410d48
.L_41103b:

            cmp DWORD PTR [RSP+104],1145457748
            je .L_410d48
.L_411049:

            lea RDX,QWORD PTR [RIP+.L_656ac0]
            jmp .L_4107f0
.L_411055:

            cmp EAX,1281453935
            jne .L_4111c2
.L_411060:

            lea RDX,QWORD PTR [RIP+.L_656b80]
            jmp .L_4107f0
.L_41106c:

            cmp EAX,1114990441
            je .L_410f78

            ja .L_411127

            cmp EAX,1113683051
            je .L_410f78

            ja .L_41101a

            cmp EAX,1098015074
            je .L_410d1c

            cmp EAX,1113681001
            je .L_410f78

            cmp EAX,1097363309
            jne .L_410d48

            jmp .L_410f78
.L_4110b0:

            cmp EAX,1349017959
            je .L_410d1c

            ja .L_411160

            cmp EAX,1315663727
            je .L_410d1c

            cmp EAX,1332902241
            je .L_41103b

            cmp EAX,1315272545
            jne .L_410d48

            jmp .L_410f78
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4110f0:

            cmp EAX,1400466543
            je .L_410f78

            jbe .L_41120e

            cmp EAX,1415669602
            je .L_410f78

            cmp EAX,1415670642
            je .L_410f78

            cmp EAX,1400468067
            je .L_410d1c

            jmp .L_410d48
.L_411127:

            cmp EAX,1147500129
            je .L_41103b

            ja .L_41125a

            cmp EAX,1130457965
            je .L_410f78

            cmp EAX,1130914157
            je .L_410f78

            cmp EAX,1114990692
            jne .L_410d48

            jmp .L_410f78
          .byte 0x66
          .byte 0x90
.L_411160:

            cmp EAX,1382706791
            je .L_410f78

            ja .L_411280

            cmp EAX,1349020784
            je .L_410d1c

            jmp .L_410d48
.L_411181:

            cmp EAX,1299148391
            je .L_410d1c

            cmp EAX,1299473769
            je .L_410f78

            cmp EAX,1299145833
            jne .L_410d48

            jmp .L_410f78
.L_4111a7:

            cmp EAX,1214344815
            je .L_410f78

            cmp EAX,1198879349
            je .L_41103b

            jmp .L_410d48
.L_4111c2:

            jbe .L_41129b

            cmp EAX,1281716323
            je .L_410f78

            cmp EAX,1281977698
            jne .L_410d48

            jmp .L_410f78
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4111e8:

            cmp EAX,1415673460
            je .L_410f78

            cmp EAX,1415933045
            je .L_41103b

            cmp EAX,1415671148
            jne .L_410d48

            jmp .L_41103b
.L_41120e:

            cmp EAX,1399418472
            je .L_41103b

            cmp EAX,1400204900
            je .L_410f78

            cmp EAX,1399418468
            jne .L_410d48

            jmp .L_410f78
.L_411234:

            cmp EAX,1247901281
            je .L_410f78

            cmp EAX,1264675945
            je .L_410f78

            cmp EAX,1215131239
            jne .L_410d48

            jmp .L_410f78
.L_41125a:

            cmp EAX,1164409200
            je .L_410f78

            cmp EAX,1198678382
            je .L_410f78

            cmp EAX,1148547180
            jne .L_410d48

            jmp .L_410f78
.L_411280:

            cmp EAX,1398895986
            je .L_410f78

            cmp EAX,1399353956
            jne .L_410d48

            jmp .L_410f78
.L_41129b:

            cmp EAX,1281453665
            jne .L_410d48

            jmp .L_410f78
.L_4112ab:

            cmp EAX,1416064103
            jne .L_410d48

            jmp .L_410f78
.L_4112bb:

            call __stack_chk_fail@PLT
.L_4112c0:

            push RBX

            mov RAX,QWORD PTR [RDI+32]
            mov RBX,RDI
            mov RAX,QWORD PTR [RAX+32]
            test RAX,RAX
            je .L_4112da

            mov RDI,QWORD PTR [RDI+1064]
            call RAX
.L_4112da:

            mov RDI,QWORD PTR [RBX+64]
            lea RAX,QWORD PTR [RBX+72]
            cmp RDI,RAX
            je .L_4112ec

            call free@PLT
.L_4112ec:

            mov RDI,QWORD PTR [RBX+368]
            lea RAX,QWORD PTR [RBX+376]
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
            cmp RDI,RAX
            je .L_411314

            call free@PLT
.L_411314:

            mov RDI,QWORD PTR [RBX+912]
            lea RAX,QWORD PTR [RBX+920]
            mov QWORD PTR [RBX+360],0
            mov QWORD PTR [RBX+368],0
            cmp RDI,RAX
            je .L_411342

            call free@PLT
.L_411342:

            mov RDI,QWORD PTR [RBX+640]
            lea RAX,QWORD PTR [RBX+648]
            mov QWORD PTR [RBX+904],0
            mov QWORD PTR [RBX+912],0
            cmp RDI,RAX
            je .L_411370

            call free@PLT
.L_411370:

            mov RDI,QWORD PTR [RBX+992]
            lea RAX,QWORD PTR [RBX+1000]
            mov QWORD PTR [RBX+632],0
            mov QWORD PTR [RBX+640],0
            cmp RDI,RAX
            je .L_41139e

            call free@PLT
.L_41139e:

            mov RDI,RBX
            pop RBX

            jmp free@PLT
.L_4113a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4113b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,168
.L_4113c7:

            mov R12,QWORD PTR [RDI+192]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSP+32],RCX
            mov DWORD PTR [RSP+24],R8D
            mov DWORD PTR [RDX+132],0
            mov QWORD PTR [RSP+16],RAX
            mov EAX,DWORD PTR [RDX+184]
            cmp EAX,1431655764
            ja .L_411422

            lea EAX,DWORD PTR [RAX+RAX*2]
            mov EDX,8
            cmp EAX,8
            cmovb EAX,EDX
            mov DWORD PTR [RBX+136],EAX
.L_411422:

            mov EAX,DWORD PTR [RBX+144]
            mov RDI,RBX
            mov DWORD PTR [RSP+64],EAX
            call .L_402730

            mov EAX,DWORD PTR [RBX+184]
            mov R15,QWORD PTR [RBX+200]
            test EAX,EAX
            je .L_411537

            sub EAX,1
            mov QWORD PTR [RSP+40],RBP
            mov QWORD PTR [RSP+8],R12
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RBP,RBX
            lea RAX,QWORD PTR [R15+RAX*4+20]
            mov RBX,RAX
            nop
            nop
            nop
.L_411468:

            mov R12,QWORD PTR [RBP+112]
            mov R13D,DWORD PTR [R15]
            mov RDX,QWORD PTR [R12+208]
            mov ESI,R13D
            mov RDI,R12
            call QWORD PTR [R12+144]

            cmp R13D,127
            mov R14D,EAX
            jbe .L_411518

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R13D
            shr EDX,16
            test EDX,EDX
            je .L_411e68

            cmp EDX,1
            je .L_412880

            cmp EDX,14
            jne .L_411dd0

            lea EDX,DWORD PTR [R13-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4114e0:

            test EDX,EDX
            je .L_411dd0
.L_4114e8:

            or EAX,3
            cmp R13D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_4128a8
.L_4114fe:

            cmp R13D,8205
            jne .L_412768

            or R14D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_411518:

            mov WORD PTR [R15+16],R14W
            add R15,20
            cmp RBX,R15
            jne .L_411468
.L_41152a:

            mov RBX,RBP
            mov R12,QWORD PTR [RSP+8]
            mov RBP,QWORD PTR [RSP+40]
.L_411537:

            test BYTE PTR [RBX+120],1
            je .L_41154d

            mov R13D,DWORD PTR [RBX+268]
            test R13D,R13D
            je .L_41210f
.L_41154d:

            test BYTE PTR [RBX+132],1
            je .L_411608

            mov R9D,DWORD PTR [RBX+124]
            test R9D,R9D
            jne .L_411608

            mov R15D,DWORD PTR [RBX+184]
            mov R14,QWORD PTR [RBX+200]
            cmp R15D,1
            jbe .L_411608

            add R14,36
            xor ESI,ESI
            mov R13D,1
            mov ECX,7168
            jmp .L_4115a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411598:

            mov ESI,R13D
.L_41159b:

            add R13D,1
            add R14,20
            cmp R15D,R13D
            je .L_4115ed
.L_4115a8:

            movzx EDX,WORD PTR [R14]
            mov EAX,EDX
            and EAX,31
            bt ECX,EAX
            jb .L_41159b

            cmp AX,1
            je .L_412613
.L_4115c0:

            mov EAX,R13D
            sub EAX,ESI
            cmp EAX,1
            jbe .L_411598

            mov EDX,R13D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_402ee0

            mov ESI,R13D
            add R13D,1
            add R14,20
            cmp R15D,R13D
            mov ECX,DWORD PTR [RSP+8]
            jne .L_4115a8
.L_4115ed:

            mov EAX,R15D
            sub EAX,ESI
            cmp EAX,1
            jbe .L_411608

            mov EDX,R15D
            mov RDI,RBX
            call .L_402ee0

            nop
            nop
            nop
            nop
            nop
            nop
.L_411608:

            mov R13D,DWORD PTR [RBX+144]
            mov EAX,R13D
            and EAX,4294967294
            cmp EAX,4
            je .L_412270

            cmp EAX,6
            jne .L_41162d

            cmp R13D,6
            jne .L_412284
.L_41162d:

            mov RAX,QWORD PTR [R12+32]
            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_411646

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call RAX
.L_411646:

            mov ESI,DWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RBX+184]
            mov ECX,DWORD PTR [R12+52]
            and ESI,4294967293
            test R8D,R8D
            je .L_411755

            xor EDX,EDX
            nop
            nop
            nop
            nop
.L_411668:

            mov EAX,EDX
            mov RDI,QWORD PTR [RBX+200]
            add EDX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov DWORD PTR [RAX+4],ECX
            mov EAX,DWORD PTR [RBX+184]
            cmp EAX,EDX
            ja .L_411668

            cmp ESI,4
            je .L_411755

            test EAX,EAX
            mov R13,QWORD PTR [RBX+112]
            mov EDI,DWORD PTR [R12+1072]
            mov R9,QWORD PTR [RBX+200]
            je .L_411755

            sub EAX,1
            mov QWORD PTR [RSP+40],R12
            mov QWORD PTR [RSP+48],RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R12,RBP
            mov R14,R9
            mov RBP,R13
            mov EBX,EDI
            lea R15,QWORD PTR [R9+RAX*4+20]
            lea RAX,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4116ec

            nop
            nop
            nop
            nop
            nop
            nop
.L_4116e0:

            mov DWORD PTR [R14],R13D
            add R14,20
            cmp R15,R14
            je .L_411748
.L_4116ec:

            mov RDX,QWORD PTR [RBP+216]
            mov ESI,DWORD PTR [R14]
            mov RDI,RBP
            call QWORD PTR [RBP+152]

            cmp EAX,DWORD PTR [R14]
            mov R13D,EAX
            je .L_41173b

            mov RAX,QWORD PTR [R12+152]
            mov DWORD PTR [RSP+92],0
            mov EDX,R13D
            mov RSI,QWORD PTR [R12+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R12
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_4116e0
.L_41173b:

            or DWORD PTR [R14+4],EBX
            add R14,20
            cmp R15,R14
            jne .L_4116ec
.L_411748:

            mov RBP,R12
            mov RBX,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+40]
.L_411755:

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call .L_420220

            test BYTE PTR [RBX+132],1
            je .L_411900

            test BYTE PTR [R12+1092],1
            je .L_411900

            mov R11D,DWORD PTR [RBX+184]
            mov R9,QWORD PTR [RBX+200]
            test R11D,R11D
            je .L_411900

            xor ESI,ESI
            mov R15D,4294967294
            lea R14,QWORD PTR [R9+24]
            jmp .L_4117b3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4117a8:

            cmp R11D,EDI
            mov ESI,EDI
            jbe .L_411900
.L_4117b3:

            mov EAX,ESI
            lea EDI,DWORD PTR [RSI+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [R9+RAX*4]
            cmp DWORD PTR [R10],8260
            jne .L_4117a8

            test ESI,ESI
            je .L_41297e

            lea EAX,DWORD PTR [RSI-1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R9+RAX*4+16]
            and EAX,31
            cmp AX,13
            je .L_41180b

            jmp .L_4129c3
          .byte 0x90
.L_4117f0:

            lea EAX,DWORD PTR [RDX-1]
            mov RCX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R9+RAX*4+16]
            and EAX,31
            cmp AX,13
            jne .L_41180f

            mov EDX,ECX
.L_41180b:

            test EDX,EDX
            jne .L_4117f0
.L_41180f:

            cmp R11D,EDI
            jbe .L_412968
.L_411818:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R9+RAX*4+16]
            and EAX,31
            cmp AX,13
            jne .L_412968

            lea EAX,DWORD PTR [RSI+2]
            mov ECX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R9+RAX*4+16]
            jmp .L_411859
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411848:

            movzx EAX,WORD PTR [R8]
            add R8,20
            and EAX,31
            cmp AX,13
            jne .L_411861
.L_411859:

            add ECX,1
            cmp R11D,ECX
            ja .L_411848
.L_411861:

            cmp EDX,ESI
            mov EAX,DWORD PTR [R12+1076]
            jae .L_4118ac

            mov R13D,EAX
            jmp .L_411880

            nop
            nop
            nop
            nop
            nop
            nop
.L_411878:

            mov R13D,DWORD PTR [R12+1076]
.L_411880:

            mov EAX,EDX
            add EDX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R9+RAX*4]
            mov EAX,DWORD PTR [R8+4]
            or EAX,DWORD PTR [R12+1080]
            or EAX,R13D
            cmp EDX,ESI
            mov DWORD PTR [R8+4],EAX
            jb .L_411878

            mov EAX,DWORD PTR [R12+1076]
.L_4118ac:

            or DWORD PTR [R10+4],EAX
            cmp ECX,EDI
            jbe .L_4118eb

            mov EDX,R15D
            lea RAX,QWORD PTR [RDI+RDI*4]
            sub EDX,ESI
            add EDX,ECX
            lea RAX,QWORD PTR [R9+RAX*4+4]
            add RDX,RDI
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [R14+RDX*4]
            nop
.L_4118d0:

            mov EDX,DWORD PTR [R12+1076]
            or EDX,DWORD PTR [R12+1084]
            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RSI,RAX
            jne .L_4118d0
.L_4118eb:

            mov EDI,ECX
.L_4118ed:

            cmp R11D,EDI
            mov ESI,EDI
            ja .L_4117b3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411900:

            mov RAX,QWORD PTR [R12+32]
            mov RAX,QWORD PTR [RAX+80]
            test RAX,RAX
            je .L_411919

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call RAX
.L_411919:

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            je .L_4119cc

            mov R14,QWORD PTR [RSP+32]
            sub EAX,1
            shl RAX,4
            lea R13,QWORD PTR [R14+RAX*1+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411940:

            mov R10D,DWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+12]
            test R10D,R10D
            jne .L_411953

            cmp R8D,-1
            je .L_4119bf
.L_411953:

            mov R15D,DWORD PTR [R12+56]
            mov R9D,DWORD PTR [R14]
            xor ECX,ECX
            mov R11,QWORD PTR [R12+64]
.L_411962:

            cmp RCX,R15
            jae .L_4119aa

            lea RDX,QWORD PTR [RCX+R15*1]
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea RSI,QWORD PTR [R11+RAX*4]
            mov EDI,DWORD PTR [RSI]
            cmp R9D,EDI
            jb .L_4119a5

            jmp .L_411ec0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411988:

            lea RAX,QWORD PTR [RCX+RDX*1]
            shr RAX,1
            lea RSI,QWORD PTR [RAX+RAX*8]
            lea RSI,QWORD PTR [R11+RSI*4]
            mov EDI,DWORD PTR [RSI]
            cmp R9D,EDI
            jae .L_411ed0

            mov RDX,RAX
.L_4119a5:

            cmp RCX,RDX
            jb .L_411988
.L_4119aa:

            xor ECX,ECX
            xor EDX,EDX
.L_4119ae:

            mov ESI,DWORD PTR [R14+4]
            mov RDI,RBX
            shl ESI,CL
            mov ECX,R10D
            call .L_402d20
.L_4119bf:

            add R14,16
            cmp R13,R14
            jne .L_411940
.L_4119cc:

            mov RDI,QWORD PTR [RSP+16]
            call .L_428d70

            test EAX,EAX
            je .L_41257b
.L_4119de:

            mov EDX,DWORD PTR [RBX+184]
            mov RAX,QWORD PTR [RBX+200]
            test EDX,EDX
            je .L_411a0f

            sub EDX,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4+20]
            nop
            nop
            nop
            nop
            nop
.L_411a00:

            mov EDX,DWORD PTR [RAX+12]
            add RAX,20
            mov DWORD PTR [RAX-20],EDX
            cmp RCX,RAX
            jne .L_411a00
.L_411a0f:

            mov RSI,RBX
            mov RDI,RBP
            mov DWORD PTR [RBX+140],2
            call .L_428c20

            lea RAX,QWORD PTR [R12+40]
            mov RDX,RBP
            mov RCX,RBX
            mov RSI,R12
            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_42ae20

            mov RDI,RBX
            call .L_402760

            mov RAX,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RBX+184]
            mov R14,QWORD PTR [RBX+216]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967294
            cmp EAX,4
            je .L_412455

            test EDX,EDX
            je .L_411b41

            lea EAX,DWORD PTR [RDX-1]
            lea R15,QWORD PTR [R14+4]
            lea RDI,QWORD PTR [RSP+88]
            mov R13,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+8],R12
            mov R12,RBP
            mov RBP,R15
            mov R15,RDI
            lea RAX,QWORD PTR [R14+RAX*4+24]
            lea R14,QWORD PTR [RSP+92]
            mov RBX,R14
            mov R14,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ab8:

            mov RAX,QWORD PTR [R12+152]
            mov EDX,DWORD PTR [R13]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+160]
            add R13,20
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov DWORD PTR [RBP],EAX
            mov RAX,QWORD PTR [R12+152]
            mov R8,RBX
            mov EDX,DWORD PTR [R13-20]
            mov RSI,QWORD PTR [R12+160]
            mov RCX,R15
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RDI,R12
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            mov EAX,DWORD PTR [RSP+88]
            sub DWORD PTR [RBP+4],EAX
            mov EAX,DWORD PTR [RSP+92]
            sub DWORD PTR [RBP+8],EAX
            add RBP,20
            cmp R14,RBP
            jne .L_411ab8
.L_411b34:

            mov RBP,R12
            mov RBX,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+8]
.L_411b41:

            test BYTE PTR [RBX+132],4
            je .L_411b58

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_424e50
.L_411b58:

            mov RSI,RBX
            mov RDI,RBP
            call .L_428da0

            mov RDI,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [RBX+184]
            call .L_428d70

            test EAX,EAX
            mov RDX,QWORD PTR [R12+32]
            jne .L_411ef0

            cmp BYTE PTR [RDX+92],0
            mov ECX,DWORD PTR [RDX+88]
            je .L_4120e3
.L_411b8e:

            cmp ECX,1
            je .L_412319

            mov R13D,1
            xor R15D,R15D
.L_411ba0:

            cmp ECX,2
            je .L_41204c
.L_411ba9:

            mov RSI,RBX
            mov RDI,RBP
            call .L_428df0

            test BYTE PTR [RBX+132],2
            je .L_411c26

            test BYTE PTR [RBX+120],4
            jne .L_411c26

            mov EAX,DWORD PTR [RBX+184]
            mov RDX,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+216]
            test EAX,EAX
            je .L_411c26

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RCX,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411bf0:

            test BYTE PTR [RDX+RAX*1+16],32
            je .L_411c1d

            test BYTE PTR [RDX+RAX*1+12],32
            jne .L_411c1d

            mov DWORD PTR [RSI+RAX*1+12],0
            mov DWORD PTR [RSI+RAX*1+8],0
            mov DWORD PTR [RSI+RAX*1+4],0
            mov DWORD PTR [RSI+RAX*1],0
.L_411c1d:

            add RAX,20
            cmp RCX,RAX
            jne .L_411bf0
.L_411c26:

            mov RSI,RBX
            mov RDI,RBP
            call .L_428e00

            test R13B,R13B
            je .L_412418

            mov RAX,QWORD PTR [R12+32]
            cmp BYTE PTR [RAX+92],0
            jne .L_412816

            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967293
            cmp EAX,5
            je .L_412836
.L_411c5b:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_424670
.L_411c69:

            test BYTE PTR [RBX+132],2
            je .L_4123b8

            test BYTE PTR [RBX+120],4
            jne .L_4123b8

            mov R14D,DWORD PTR [RBX+184]
            mov R15,QWORD PTR [RBX+200]
            mov R9,QWORD PTR [RBX+216]
            test R14D,R14D
            je .L_4123b8

            lea RAX,QWORD PTR [R15+12]
            xor R13D,R13D
            nop
            nop
            nop
.L_411ca8:

            test BYTE PTR [RAX+4],32
            je .L_4123a0

            test BYTE PTR [RAX],32
            jne .L_4123a0

            cmp R14D,R13D
            mov QWORD PTR [RSP+8],R9
            je .L_4123b8

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+92],0
            lea RCX,QWORD PTR [RSP+92]
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,32
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_41271e

            cmp R14D,R13D
            mov ECX,R13D
            jbe .L_41284b

            mov QWORD PTR [RSP+8],RBP
            mov RBP,RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_411d20:

            mov EAX,R13D
            lea EBX,DWORD PTR [R13+1]
            lea RSI,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RSI*4]
            lea RAX,QWORD PTR [R15+RDX*1]
            test BYTE PTR [RAX+16],32
            je .L_4127b0

            test BYTE PTR [RAX+12],32
            jne .L_4127b0

            cmp R14D,EBX
            mov ESI,DWORD PTR [RAX+8]
            ja .L_4129f5

            test ECX,ECX
            je .L_412843

            lea EDX,DWORD PTR [RCX-1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            mov EDI,DWORD PTR [RDX+8]
            cmp ESI,EDI
            jb .L_411d8c

            jmp .L_412843
.L_411d79:

            lea EDX,DWORD PTR [RAX-1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            cmp DWORD PTR [RDX+8],EDI
            jne .L_411d98
.L_411d8c:

            test EAX,EAX
            mov DWORD PTR [RDX+8],ESI
            jne .L_411d79

            nop
            nop
            nop
            nop
            nop
.L_411d98:

            cmp R14D,EBX
            jbe .L_412843
.L_411da1:

            mov R13D,EBX
            jmp .L_411d20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411db0:

            cmp EDX,3
            je .L_4125b8

            cmp EDX,6
            je .L_4120b0

            test EDX,EDX
            je .L_412308

            nop
            nop
            nop
            nop
            nop
            nop
.L_411dd0:

            mov EAX,16782336
            bt EAX,R14D
            jae .L_411518

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_412794

            cmp ESI,6752
            je .L_41279e

            cmp ESI,4038
            je .L_41279e

            cmp ESI,3897
            mov EAX,32512
            je .L_411e36
.L_411e13:

            mov RDI,R12
            mov RDX,QWORD PTR [R12+192]
            call QWORD PTR [R12+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_411e36:

            sub R13D,127995
            or EAX,R14D
            mov R14D,11
            cmp R13D,4
            cmova R14D,EAX
            add R15,20
            mov WORD PTR [R15-4],R14W
            cmp RBX,R15
            jne .L_411468

            jmp .L_41152a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411e68:

            mov EDX,R13D
            shr EDX,8
            cmp EDX,23
            je .L_4125fe

            jbe .L_411db0

            cmp EDX,32
            je .L_4125c9

            jbe .L_412437

            cmp EDX,254
            je .L_4120c1

            cmp EDX,255
            jne .L_411dd0

            lea EDX,DWORD PTR [R13-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_4114e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411ec0:

            mov RAX,RDX
            mov RDX,R15
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ed0:

            cmp R9D,EDI
            jbe .L_411ee1

            lea RCX,QWORD PTR [RAX+1]
            mov R15,RDX
            jmp .L_411962
.L_411ee1:

            mov ECX,DWORD PTR [RSI+20]
            mov EDX,DWORD PTR [RSI+24]
            jmp .L_4119ae
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411ef0:

            xor R15D,R15D
            cmp DWORD PTR [RDX+88],1
            je .L_412319
.L_411efd:

            mov RDI,QWORD PTR [RBX+200]
            mov R14,QWORD PTR [RBX+216]
            mov ESI,6
            mov QWORD PTR [RSP+8],RDI
            mov RDI,RBP
            mov QWORD PTR [RSP+16],R14
            call .L_408550

            test AL,AL
            jne .L_412621

            mov RDI,QWORD PTR [RSP+24]
            mov RCX,RBX
            mov RDX,RBP
            mov RSI,R12
            call .L_42adb0

            mov ESI,6
            mov RDI,RBP
            call .L_408550

            test AL,AL
            je .L_412038

            test R13D,R13D
            je .L_412038

            lea RAX,QWORD PTR [RSP+88]
            lea R14,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RAX,12
            mov QWORD PTR [RSP+40],RAX
            lea EAX,DWORD PTR [R13-1]
            mov DWORD PTR [RSP+16],EAX
            mov RAX,QWORD PTR [RSP+8]
            add RAX,20
            mov QWORD PTR [RSP+48],RAX
.L_411f8e:

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RBX
            mov RBX,R14
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],R12
            mov BYTE PTR [RSP+16],R15B
            mov R15,RBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R12,R11
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov RBP,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411fd0:

            mov RAX,QWORD PTR [R15+152]
            mov EDX,DWORD PTR [R12]
            mov R8,RBX
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RCX,R14
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            add R12,20
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            mov EAX,DWORD PTR [RSP+88]
            sub DWORD PTR [R13-4],EAX
            mov EAX,DWORD PTR [RSP+92]
            sub DWORD PTR [R13],EAX
            add R13,20
            cmp RBP,R12
            jne .L_411fd0

            mov RBP,R15
            movzx R15D,BYTE PTR [RSP+16]
            mov R12,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
.L_412038:

            mov RAX,QWORD PTR [R12+32]
            xor R13D,R13D
            mov ECX,DWORD PTR [RAX+88]
            cmp ECX,2
            jne .L_411ba9
.L_41204c:

            mov EAX,DWORD PTR [RBX+184]
            mov RSI,QWORD PTR [RBX+200]
            test EAX,EAX
            je .L_411ba9

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RCX,2
            nop
.L_412070:

            test BYTE PTR [RSI+RAX*1+12],8
            je .L_4120a2

            mov RDX,QWORD PTR [RBX+216]
            add RDX,RAX
            test R15B,R15B
            je .L_41209b

            mov EDI,DWORD PTR [RDX]
            sub DWORD PTR [RDX+8],EDI
            mov EDI,DWORD PTR [RDX+4]
            sub DWORD PTR [RDX+12],EDI
            mov RDX,QWORD PTR [RBX+216]
            add RDX,RAX
.L_41209b:

            mov QWORD PTR [RDX],0
.L_4120a2:

            add RAX,20
            cmp RCX,RAX
            jne .L_412070

            jmp .L_411ba9
.L_4120b0:

            xor EDX,EDX
            cmp R13D,1564
            sete DL
            jmp .L_4114e0
.L_4120c1:

            lea EDX,DWORD PTR [R13-65024]
            cmp EDX,15
            setbe DL
            cmp R13D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_4114e0
.L_4120e3:

            mov ESI,DWORD PTR [RBX+144]
            and ESI,4294967293
            cmp ESI,5
            je .L_411b8e

            cmp ECX,1
            je .L_4128da

            mov R13D,1
            mov R15D,1
            jmp .L_411ba0
.L_41210f:

            mov RAX,QWORD PTR [RBX+200]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,31
            cmp AX,12
            jne .L_41154d

            mov RAX,QWORD PTR [RBP+152]
            lea R14,QWORD PTR [RSP+92]
            mov DWORD PTR [RSP+92],0
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,9676
            mov RDI,RBP
            mov RCX,R14
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_41154d

            mov R13,QWORD PTR [RBX+112]
            pxor XMM0,XMM0
            mov ESI,9676
            movups XMMWORD PTR [RSP+100],XMM0
            mov RDX,QWORD PTR [R13+208]
            mov RDI,R13
            call QWORD PTR [R13+144]

            mov R14D,EAX
            mov EAX,16782336
            or DWORD PTR [RBX+132],1
            bt EAX,R14D
            jb .L_4129c7
.L_41219e:

            mov RDI,RBX
            call .L_402730

            mov WORD PTR [RSP+112],R14W
            lea RSI,QWORD PTR [RSP+128]
            mov RDI,RBX
            mov EAX,DWORD PTR [RSP+112]
            mov DWORD PTR [RSP+96],9676
            movdqa XMM0,XMMWORD PTR [RSP+96]
            mov DWORD PTR [RBX+180],0
            mov DWORD PTR [RSP+144],EAX
            mov RAX,QWORD PTR [RBX+200]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov EDX,DWORD PTR [RAX+8]
            mov DWORD PTR [RSP+136],EDX
            mov EAX,DWORD PTR [RAX+4]
            mov DWORD PTR [RSP+132],EAX
            call .L_4029f0

            mov EAX,DWORD PTR [RBX+180]
            mov EDX,DWORD PTR [RBX+184]
.L_41220e:

            cmp EAX,EDX
            jae .L_4128c6

            cmp BYTE PTR [RBX+176],0
            jne .L_4128c6

            cmp BYTE PTR [RBX+177],0
            je .L_412808

            mov RDI,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RDI
            je .L_4127f1
.L_412244:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_41291a

            mov EAX,DWORD PTR [RBX+180]
            mov EDX,DWORD PTR [RBX+184]
            jmp .L_41220e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412270:

            mov EDI,DWORD PTR [RBX+148]
            call .L_405a10

            cmp R13D,EAX
            je .L_41162d
.L_412284:

            mov R13D,DWORD PTR [RBX+184]
            mov RAX,QWORD PTR [RBX+200]
            cmp R13D,1
            jbe .L_4128d3

            mov EDX,DWORD PTR [RBX+124]
            lea R14,QWORD PTR [RAX+36]
            xor ECX,ECX
            mov R15D,1
            jmp .L_4122d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4122b0:

            mov EDX,R15D
            mov ESI,ECX
            mov RDI,RBX
            call .L_402de0

            mov EDX,DWORD PTR [RBX+124]
            mov ECX,R15D
.L_4122c3:

            add R15D,1
            add R14,20
            cmp R13D,R15D
            je .L_41258e
.L_4122d4:

            movzx EAX,WORD PTR [R14]
            mov EDI,7168
            bt EDI,EAX
            jb .L_4122c3

            cmp EDX,1
            jne .L_4122b0

            mov EAX,R15D
            sub EAX,ECX
            cmp EAX,1
            jbe .L_4122b0

            mov ESI,ECX
            mov EDX,R15D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_402ee0

            mov ECX,DWORD PTR [RSP+8]
            jmp .L_4122b0
.L_412308:

            xor EDX,EDX
            cmp R13D,173
            sete DL
            jmp .L_4114e0
.L_412319:

            mov ECX,DWORD PTR [RBX+184]
            xor R15D,R15D
            mov RDI,QWORD PTR [RBX+200]
            test ECX,ECX
            je .L_41237f
.L_41232d:

            lea EDX,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RDX+RDX*4+5]
            xor EDX,EDX
            shl RSI,2
            nop
            nop
            nop
            nop
            nop
.L_412340:

            test BYTE PTR [RDI+RDX*1+12],8
            je .L_412376

            mov RCX,QWORD PTR [RBX+216]
            add RCX,RDX
            test R15B,R15B
            je .L_41236f

            mov R8D,DWORD PTR [RCX]
            sub DWORD PTR [RCX+8],R8D
            mov R8D,DWORD PTR [RCX+4]
            sub DWORD PTR [RCX+12],R8D
            mov RCX,QWORD PTR [RBX+216]
            add RCX,RDX
.L_41236f:

            mov QWORD PTR [RCX],0
.L_412376:

            add RDX,20
            cmp RSI,RDX
            jne .L_412340
.L_41237f:

            test EAX,EAX
            jne .L_411efd

            mov RDX,QWORD PTR [R12+32]
.L_41238c:

            mov ECX,DWORD PTR [RDX+88]
            mov R13D,1
            jmp .L_411ba0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4123a0:

            add R13D,1
            add RAX,20
            cmp R14D,R13D
            jne .L_411ca8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4123b8:

            mov RAX,QWORD PTR [R12+32]
            mov RAX,QWORD PTR [RAX+48]
            test RAX,RAX
            je .L_4123d1

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call RAX
.L_4123d1:

            mov EAX,DWORD PTR [RSP+64]
            mov DWORD PTR [RBX+136],128
            mov DWORD PTR [RBX+144],EAX
            mov EAX,1
            mov RBX,QWORD PTR [RSP+152]
            xor RBX,QWORD PTR FS:[40]
            jne .L_412a28

            add RSP,168
.L_412408:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412418:

            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967293
            cmp EAX,5
            jne .L_411c69

            mov RDI,RBX
            call .L_403960

            jmp .L_411c69
.L_412437:

            cmp EDX,24
            jne .L_411dd0

            lea EDX,DWORD PTR [R13-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_4114e0
.L_412455:

            test EDX,EDX
            je .L_4128fa

            mov RDI,QWORD PTR [RSP+8]
            lea EAX,DWORD PTR [RDX-1]
            mov QWORD PTR [RSP+32],RBX
            mov R15,R14
            mov DWORD PTR [RSP+40],EAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R13,RDI
            add RDI,20
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov QWORD PTR [RSP+48],RDI
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412490:

            mov RAX,QWORD PTR [RBP+152]
            mov EDX,DWORD PTR [R13]
            add R13,20
            mov RSI,QWORD PTR [RBP+160]
            mov RDI,RBP
            add R15,20
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [R15-20],EAX
            cmp RBX,R13
            jne .L_412490

            mov ESI,6
            mov RDI,RBP
            mov RBX,QWORD PTR [RSP+32]
            call .L_408550

            test AL,AL
            je .L_411b41

            mov EAX,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [R14+12]
            mov R15,QWORD PTR [RSP+8]
            lea R14,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+8],R12
            mov QWORD PTR [RSP+32],RBX
            mov R12,RBP
            mov RBX,R14
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RBP,R15
            lea RAX,QWORD PTR [RDI+RAX*4]
            lea RDI,QWORD PTR [RSP+88]
            mov R14,RAX
            mov R15,RDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_412520:

            mov RAX,QWORD PTR [R12+152]
            mov EDX,DWORD PTR [RBP]
            mov R8,RBX
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RCX,R15
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            add RBP,20
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            mov EAX,DWORD PTR [RSP+88]
            sub DWORD PTR [R13-4],EAX
            mov EAX,DWORD PTR [RSP+92]
            sub DWORD PTR [R13],EAX
            add R13,20
            cmp R14,RBP
            jne .L_412520

            jmp .L_411b34
.L_41257b:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_423380

            jmp .L_4119de
.L_41258e:

            cmp EDX,1
            je .L_412856
.L_412597:

            mov EDX,R13D
            mov ESI,ECX
            mov RDI,RBX
            call .L_402de0

            mov RDI,RBX
            call .L_402e00

            xor DWORD PTR [RBX+144],1
            jmp .L_41162d
.L_4125b8:

            xor EDX,EDX
            cmp R13D,847
            sete DL
            jmp .L_4114e0
.L_4125c9:

            lea EDX,DWORD PTR [R13-8203]
            cmp EDX,4
            jbe .L_4114e8

            lea EDX,DWORD PTR [R13-8234]
            cmp EDX,4
            jbe .L_4114e8

            lea EDX,DWORD PTR [R13-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_4114e0
.L_4125fe:

            lea EDX,DWORD PTR [R13-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_4114e0
.L_412613:

            and DH,3
            jne .L_41159b

            jmp .L_4115c0
.L_412621:

            test R13D,R13D
            je .L_41299e

            lea EAX,DWORD PTR [R13-1]
            mov RDI,QWORD PTR [RSP+8]
            add R14,12
            mov R10,R14
            mov QWORD PTR [RSP+40],R14
            lea R14,QWORD PTR [RSP+92]
            mov DWORD PTR [RSP+16],EAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+56],R12
            mov R11,RDI
            add RDI,20
            mov BYTE PTR [RSP+71],R15B
            lea R13,QWORD PTR [RDI+RAX*4]
            lea RAX,QWORD PTR [RSP+88]
            mov R12,RBP
            mov QWORD PTR [RSP+72],RBX
            mov QWORD PTR [RSP+48],RDI
            mov RBP,R11
            mov RBX,R13
            mov QWORD PTR [RSP+32],RAX
            mov R13,R10
            mov R15,RAX
            nop
            nop
            nop
            nop
.L_412688:

            mov RAX,QWORD PTR [R12+152]
            mov EDX,DWORD PTR [RBP]
            mov R8,R14
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+88],0
            mov RCX,R15
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            add RBP,20
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            mov EAX,DWORD PTR [RSP+88]
            add DWORD PTR [R13-4],EAX
            mov EAX,DWORD PTR [RSP+92]
            add DWORD PTR [R13],EAX
            add R13,20
            cmp RBX,RBP
            jne .L_412688

            mov RBP,R12
            mov RBX,QWORD PTR [RSP+72]
            mov RDX,RBP
            mov R12,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            movzx R15D,BYTE PTR [RSP+71]
            mov RCX,RBX
            mov RSI,R12
            call .L_42adb0

            mov ESI,6
            mov RDI,RBP
            call .L_408550

            test AL,AL
            jne .L_411f8e

            jmp .L_412038
.L_41271e:

            cmp R14D,R13D
            jbe .L_4123b8

            lea EDX,DWORD PTR [R14-1]
            mov ECX,R13D
            lea RAX,QWORD PTR [RCX+RCX*4]
            sub EDX,R13D
            add RDX,RCX
            lea RAX,QWORD PTR [R15+RAX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4+20]
            nop
            nop
            nop
.L_412748:

            test BYTE PTR [RAX+16],32
            je .L_41275a

            test BYTE PTR [RAX+12],32
            jne .L_41275a

            mov ECX,DWORD PTR [RSP+92]
            mov DWORD PTR [RAX],ECX
.L_41275a:

            add RAX,20
            cmp RDX,RAX
            jne .L_412748

            jmp .L_4123b8
.L_412768:

            sub R13D,6155
            cmp R13D,2
            ja .L_412a2d

            or R14D,96
            add R15,20
            mov WORD PTR [R15-4],R14W
            cmp RBX,R15
            jne .L_411468

            jmp .L_41152a
.L_412794:

            mov ESI,4154
            jmp .L_411e13
.L_41279e:

            mov EAX,65024
            jmp .L_411e36
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4127b0:

            cmp R13D,ECX
            je .L_4127e9

            mov EDI,ECX
            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RDI+RDI*4]
            movups XMMWORD PTR [R15+RDI*4],XMM0
            mov EAX,DWORD PTR [RAX+16]
            lea R10,QWORD PTR [RDI*4]
            mov DWORD PTR [R15+R10*1+16],EAX
            movdqu XMM0,XMMWORD PTR [R9+RSI*4]
            movups XMMWORD PTR [R9+RDI*4],XMM0
            mov EAX,DWORD PTR [R9+RDX*1+16]
            mov DWORD PTR [R9+R10*1+16],EAX
.L_4127e9:

            add ECX,1
            jmp .L_411d98
.L_4127f1:

            cmp DWORD PTR [RBX+188],EAX
            jne .L_412244

            mov ECX,EAX
.L_4127ff:

            add ECX,1
            mov DWORD PTR [RBX+188],ECX
.L_412808:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_41220e
.L_412816:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_423560

            mov EAX,DWORD PTR [RBX+144]
            and EAX,4294967293
            cmp EAX,5
            jne .L_411c5b
.L_412836:

            mov RDI,RBX
            call .L_403960

            jmp .L_411c5b
.L_412843:

            mov RBX,RBP
            mov RBP,QWORD PTR [RSP+8]
.L_41284b:

            mov DWORD PTR [RBX+184],ECX
            jmp .L_4123b8
.L_412856:

            mov EAX,R13D
            sub EAX,ECX
            cmp EAX,1
            jbe .L_412597

            mov ESI,ECX
            mov EDX,R13D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_402ee0

            mov ECX,DWORD PTR [RSP+8]
            jmp .L_412597
          .byte 0x66
          .byte 0x90
.L_412880:

            lea EDX,DWORD PTR [R13-113824]
            cmp EDX,3
            jbe .L_41290c

            lea EDX,DWORD PTR [R13-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_4114e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4128a8:

            or R14D,544
            add R15,20
            mov WORD PTR [R15-4],R14W
            cmp RBX,R15
            jne .L_411468

            jmp .L_41152a
.L_4128c6:

            mov RDI,RBX
            call .L_4027c0

            jmp .L_41154d
.L_4128d3:

            xor ECX,ECX
            jmp .L_412597
.L_4128da:

            mov ECX,DWORD PTR [RBX+184]
            mov RDI,QWORD PTR [RBX+200]
            mov R15D,1
            test ECX,ECX
            jne .L_41232d

            jmp .L_41238c
.L_4128fa:

            mov ESI,6
            mov RDI,RBP
            call .L_408550

            jmp .L_411b41
.L_41290c:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_4114fe
.L_41291a:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R11,QWORD PTR [RBX+200]
            mov R10,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R11+RDX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov EDX,DWORD PTR [RBX+184]
            jmp .L_4127ff
.L_412968:

            cmp EDX,ESI
            mov EAX,DWORD PTR [R12+1076]
            jae .L_412991

            mov ECX,EDI
            mov R13D,EAX
            jmp .L_411880
.L_41297e:

            xor EDX,EDX
.L_412980:

            cmp R11D,EDI
            ja .L_411818

            mov EAX,DWORD PTR [R12+1076]
.L_412991:

            mov ECX,EDI
            or DWORD PTR [R10+4],EAX
            mov EDI,ECX
            jmp .L_4118ed
.L_41299e:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R12
            mov RCX,RBX
            mov RDX,RBP
            call .L_42adb0

            mov ESI,6
            mov RDI,RBP
            call .L_408550

            jmp .L_412038
.L_4129c3:

            mov EDX,ESI
            jmp .L_412980
.L_4129c7:

            mov RDX,QWORD PTR [R13+192]
            mov ESI,9676
            mov RDI,R13
            call QWORD PTR [R13+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
            or R14D,EAX
            jmp .L_41219e
.L_4129f5:

            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp ESI,DWORD PTR [R15+RAX*4+8]
            je .L_411da1

            test ECX,ECX
            je .L_412a36

            lea EDX,DWORD PTR [RCX-1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            mov EDI,DWORD PTR [RDX+8]
            cmp ESI,EDI
            jae .L_411da1

            jmp .L_411d8c
.L_412a28:

            call __stack_chk_fail@PLT
.L_412a2d:

            or R14D,32
            jmp .L_411518
.L_412a36:

            lea EDX,DWORD PTR [R13+2]
            mov ESI,R13D
            mov RDI,RBP
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP+16],R9
            call .L_402ee0

            mov R9,QWORD PTR [RSP+16]
            mov ECX,DWORD PTR [RSP+24]
            jmp .L_411da1
.L_412a5c:

            nop
            nop
            nop
            nop
.L_412a60:

            cmp ESI,1196445523
            je .L_412a90

            cmp ESI,1196643650
            jne .L_412a88

            mov RDI,QWORD PTR [RDI+192]
            xor ESI,ESI
            add RDI,40
            jmp .L_43cfc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412a88:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412a90:

            mov RDI,QWORD PTR [RDI+192]
            mov ESI,1
            add RDI,40
            jmp .L_43cfc0
.L_412aa5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ab0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R10D,ECX
            push RBP
            push RBX
            mov ECX,128
            mov RBX,RDI
            mov R15,R8
            sub RSP,17816
.L_412ad2:

            mov QWORD PTR [RSP+16],RSI
            lea RSI,QWORD PTR [RSP+104]
            lea R8,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+17800],RAX
            xor EAX,EAX
            mov RDI,RSI
            lea RSI,QWORD PTR [R14+144]
            mov QWORD PTR [RSP+56],0

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RBX+128]
            lea RAX,QWORD PTR [RIP+.L_44c614]
            mov ECX,R10D
            lea RBP,QWORD PTR [RSP+44]
            mov QWORD PTR [RSP+48],RAX
            call .L_40b250

            mov EDI,DWORD PTR [R14+148]
            mov QWORD PTR [RSP+24],RAX
            call .L_405a10

            mov DWORD PTR [RSP],EAX
            mov EAX,DWORD PTR [R14+184]
            mov R12,QWORD PTR [R14+200]
            test EAX,EAX
            je .L_412c81

            sub EAX,1
            lea RBP,QWORD PTR [RSP+44]
            mov R14,RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4+20]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_412bd1
          .byte 0x90
.L_412b70:

            cmp DWORD PTR [RSP],5
            jne .L_412bc2

            mov RDX,QWORD PTR [RBX+216]
            mov ESI,R13D
            mov RDI,RBX
            call QWORD PTR [RBX+152]

            cmp R13D,EAX
            je .L_412bc2

            mov R10,QWORD PTR [R14+152]
            mov DWORD PTR [RSP+44],0
            mov RCX,RBP
            mov RSI,QWORD PTR [R14+160]
            mov EDX,EAX
            mov RDI,R14
            mov R8,QWORD PTR [R10+136]
            call QWORD PTR [R10+360]

            test EAX,EAX
            jne .L_412c43
.L_412bc2:

            add R12,20
            cmp QWORD PTR [RSP+8],R12
            je .L_412c7e
.L_412bd1:

            mov RAX,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [R12]
            mov RCX,RBP
            mov DWORD PTR [RSP+44],0
            mov RSI,QWORD PTR [R14+160]
            mov RDI,R14
            mov RBX,QWORD PTR [RAX+112]
            mov RAX,QWORD PTR [R14+152]
            mov EDX,R13D
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_412b70

            mov ECX,DWORD PTR [RSP+44]
            cmp ECX,65535
            ja .L_412b70

            cmp BYTE PTR [R15+112],0
            jne .L_412b70

            mov EAX,ECX
            mov EDX,1
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [R15+RAX*4+116],EDX
            jmp .L_412b70
.L_412c43:

            mov ECX,DWORD PTR [RSP+44]
            cmp ECX,65535
            ja .L_412bc2

            cmp BYTE PTR [R15+112],0
            jne .L_412bc2

            mov EAX,ECX
            mov EDX,1
            add R12,20
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [R15+RAX*4+116],EDX
            cmp QWORD PTR [RSP+8],R12
            jne .L_412bd1
.L_412c7e:

            mov RBX,R14
.L_412c81:

            lea R12,QWORD PTR [RSP+1168]
            xor ESI,ESI
            mov DWORD PTR [RSP+1168],1
            lea RDI,QWORD PTR [R12+8]
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RSP+1168],-1
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+1216],XMM0
            movaps XMMWORD PTR [R12+64],XMM0
            movaps XMMWORD PTR [R12+80],XMM0
            movaps XMMWORD PTR [R12+96],XMM0
            je .L_412cf7

            lea RDI,QWORD PTR [R12+120]
            mov ECX,1023
            xor EAX,EAX
            mov BYTE PTR [RSP+1280],0
            mov QWORD PTR [RSP+1284],0
            mov QWORD PTR [R12+8300],0

            rep stosq QWORD PTR [RDI]
.L_412cf7:

            mov RAX,QWORD PTR [RSP+24]
            lea R14,QWORD PTR [RSP+9488]
            xor ESI,ESI
            mov RDX,R12
            mov RAX,QWORD PTR [RAX+192]
            lea RDI,QWORD PTR [RAX+40]
            mov QWORD PTR [RSP],RAX
            call .L_43cfc0

            lea RDI,QWORD PTR [R14+8]
            xor ESI,ESI
            mov DWORD PTR [RSP+9488],1
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RSP+9488],-1
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+9536],XMM0
            movaps XMMWORD PTR [R14+64],XMM0
            movaps XMMWORD PTR [R14+80],XMM0
            movaps XMMWORD PTR [R14+96],XMM0
            movzx EAX,BYTE PTR [RSP+9600]
            je .L_412d8d

            lea RDI,QWORD PTR [R14+120]
            mov ECX,1023
            xor EAX,EAX
            mov BYTE PTR [RSP+9600],0
            mov QWORD PTR [RSP+9604],0
            mov QWORD PTR [R14+8300],0

            rep stosq QWORD PTR [RDI]
.L_412d8d:

            mov R13D,4294967295
            nop
            nop
            nop
            nop
            nop
.L_412d98:

            test AL,AL
            jne .L_412dbc

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412da8:

            mov EDX,DWORD PTR [R15+RAX*1]
            mov DWORD PTR [R14+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_412da8
.L_412dbc:

            mov DWORD PTR [RSP+44],R13D
            jmp .L_412ddb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412dc8:

            mov RDI,QWORD PTR [RBX+128]
            mov ESI,DWORD PTR [RSP+44]
            mov RDX,R15
            call .L_429090
.L_412ddb:

            mov RSI,RBP
            mov RDI,R12
            call .L_425dc0

            test EAX,EAX
            jne .L_412dc8

            mov EAX,116
            jmp .L_412e04
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412df8:

            add RAX,4
            cmp RAX,8308
            je .L_412e18
.L_412e04:

            mov ECX,DWORD PTR [R15+RAX*1]
            cmp DWORD PTR [R14+RAX*1],ECX
            je .L_412df8

            movzx EAX,BYTE PTR [RSP+9600]
            jmp .L_412d98
.L_412e18:

            mov RDI,QWORD PTR [RSP+24]
            call .L_40ad70

            mov RAX,QWORD PTR [RSP+17800]
            xor RAX,QWORD PTR FS:[40]
            jne .L_412e47

            add RSP,17816
.L_412e3c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_412e47:

            call __stack_chk_fail@PLT
.L_412e4c:

            nop
            nop
            nop
            nop
.L_412e50:

            mov ECX,DWORD PTR [RDX+184]
            mov RDX,QWORD PTR [RDX+200]
            test ECX,ECX
            je .L_412ea4

            sub ECX,1
            lea RAX,QWORD PTR [RDX+16]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [RDX+RCX*4+36]
            jmp .L_412e81
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412e78:

            add RAX,20
            cmp RAX,RSI
            je .L_412ea4
.L_412e81:

            movzx EDX,WORD PTR [RAX]
            mov ECX,EDX
            and ECX,31
            cmp CX,1
            jne .L_412e78

            test DH,1
            je .L_412e78

            xor DH,3
            add RAX,20
            mov WORD PTR [RAX-20],DX
            cmp RAX,RSI
            jne .L_412e81
.L_412ea4:

            ret 
.L_412ea6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412eb0:

            push R12
            push RBP
            mov ESI,48
            push RBX
.L_412eb9:

            mov RBX,RDI
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_413098

            cmp DWORD PTR [RBX+4],1098015074
            movzx EDX,BYTE PTR [RAX+40]
            mov R10,QWORD PTR [RBX+64]
            mov EBX,DWORD PTR [RBX+56]
            sete CL
            and EDX,4294967294
            xor ESI,ESI
            or EDX,ECX
            mov R9,RBX
            mov BYTE PTR [RAX+40],DL
.L_412ef1:

            cmp RSI,R9
            jae .L_412f3e

            lea RCX,QWORD PTR [RSI+R9*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,1937007464
            ja .L_412f39

            jmp .L_41309d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412f18:

            lea RDX,QWORD PTR [RSI+RCX*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,1937007464
            jbe .L_4130a8

            mov RCX,RDX
.L_412f39:

            cmp RSI,RCX
            jb .L_412f18
.L_412f3e:

            xor EDX,EDX
.L_412f40:

            lea ECX,DWORD PTR [RDX+RDX*1]
            movzx EDX,BYTE PTR [RAX+40]
            lea RBP,QWORD PTR [RIP+.L_440ce0]
            xor R11D,R11D
            mov R9D,1769172844
            and EDX,4294967293
            or EDX,ECX
            mov BYTE PTR [RAX+40],DL
            nop
.L_412f60:

            mov R12,RBX
            xor ESI,ESI
.L_412f65:

            cmp RSI,R12
            jae .L_412fa7

            lea RCX,QWORD PTR [RSI+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp R9D,EDI
            jb .L_412fa2

            jmp .L_412ff0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412f88:

            lea RDX,QWORD PTR [RSI+RCX*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_413000

            mov RCX,RDX
.L_412fa2:

            cmp RSI,RCX
            jb .L_412f88
.L_412fa7:

            xor EDX,EDX
.L_412fa9:

            mov DWORD PTR [RAX+R11*1],EDX
            xor ECX,ECX
            test BYTE PTR [RAX+40],1
            je .L_412fc3

            lea EDX,DWORD PTR [R9-50]
            mov ECX,1
            cmp DL,1
            ja .L_413020
.L_412fc3:

            movzx EDX,BYTE PTR [RAX+40]
            add R11,4
            and EDX,4294967294
            or EDX,ECX
            cmp R11,28
            mov BYTE PTR [RAX+40],DL
            je .L_413098

            mov R9D,DWORD PTR [RBP+R11*1]
            jmp .L_412f60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ff0:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413000:

            cmp R9D,EDI
            jbe .L_413011

            lea RSI,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_412f65
.L_413011:

            mov EDX,DWORD PTR [R8+28]
            jmp .L_412fa9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413020:

            mov R12,RBX
            xor ESI,ESI
.L_413025:

            cmp RSI,R12
            jae .L_413067

            lea RCX,QWORD PTR [RSI+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_413062

            jmp .L_41306e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413048:

            lea RDX,QWORD PTR [RCX+RSI*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_413078

            mov RCX,RDX
.L_413062:

            cmp RCX,RSI
            ja .L_413048
.L_413067:

            xor ECX,ECX
            jmp .L_412fc3
.L_41306e:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
            nop
.L_413078:

            cmp EDI,R9D
            jae .L_413086

            lea RSI,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_413025
.L_413086:

            movzx EDX,BYTE PTR [R8+32]
            mov ECX,EDX
            and ECX,1
            jmp .L_412fc3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413098:

            pop RBX
.L_413099:

            pop RBP
            pop R12
            ret 
.L_41309d:

            mov RDX,RCX
            mov RCX,R9
            nop
            nop
            nop
            nop
            nop
.L_4130a8:

            cmp EDI,1937007464
            je .L_4130bc

            lea RSI,QWORD PTR [RDX+1]
            mov R9,RCX
            jmp .L_412ef1
.L_4130bc:

            mov EDX,DWORD PTR [R8+28]
            test EDX,EDX
            setne DL
            jmp .L_412f40
.L_4130ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4130d0:

            push R13
            push R12
            lea RDX,QWORD PTR [RIP+.L_412e50]
            push RBP
            lea RBP,QWORD PTR [RDI+48]
            push RBX
            xor ESI,ESI
            mov R12,RDI
            lea RBX,QWORD PTR [RIP+.L_440ce0]
            sub RSP,8
.L_4130f1:

            mov RDI,RBP
            call .L_43d020

            mov ECX,1
            mov EDX,1
            mov ESI,1937007464
            mov RDI,RBP
            lea R13,QWORD PTR [RBX+28]
            call .L_43ce20

            lea RDX,QWORD PTR [RIP+.L_413370]
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBP
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBP
            call .L_43ce20

            xor ESI,ESI
            xor EDX,EDX
            mov RDI,RBP
            call .L_43d020

            mov ESI,1769172844
            jmp .L_413172
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413170:

            mov ESI,DWORD PTR [RBX]
.L_413172:

            xor ECX,ECX
            cmp DWORD PTR [R12+12],1098015074
            jne .L_41318b

            lea EAX,DWORD PTR [RSI-50]
            xor ECX,ECX
            cmp AL,1
            seta CL
            add ECX,ECX
.L_41318b:

            mov EDX,1
            mov RDI,RBP
            add RBX,4
            call .L_43ce20

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            cmp RBX,R13
            jne .L_413170

            mov ECX,3
            mov EDX,1
            mov ESI,1919707495
            mov RDI,RBP
            call .L_43ce20

            cmp DWORD PTR [R12+12],1098015074
            je .L_413210
.L_4131cf:

            mov RDI,RBP
            mov ECX,1
            mov EDX,1
            mov ESI,1667329140
            call .L_43ce20

            add RSP,8
.L_4131ea:

            mov RDI,RBP
            mov ECX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            mov EDX,1
            mov ESI,1836279156
            jmp .L_43ce20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413210:

            lea RDX,QWORD PTR [RIP+.L_414560]
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            jmp .L_4131cf
.L_413223:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413230:

            mov EAX,EDI
            shr EAX,12
            cmp EAX,30
            ja .L_413278

            lea RDX,QWORD PTR [RIP+.L_440220]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413250:

            lea EAX,DWORD PTR [RDI-125184]
            cmp EAX,67
            ja .L_413278

            lea EAX,DWORD PTR [RDI-124038]
            lea RDX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            nop
            nop
            nop
            nop
.L_413270:

            cmp EAX,8
            jne .L_41328c

            nop
            nop
            nop
.L_413278:

            mov EAX,6146
            mov ECX,ESI
            mov EDX,7
            shr EAX,CL
            and EAX,1
            cmovne EAX,EDX
.L_41328c:

            ret 
          .byte 0x66
          .byte 0x90
.L_413290:

            sub EDI,1536
            cmp EDI,738
            ja .L_413278

            lea RAX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RAX+RDI*1]
            jmp .L_413270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4132b0:

            lea EAX,DWORD PTR [RDI-6150]
            cmp EAX,164
            ja .L_413278

            lea EAX,DWORD PTR [RDI-5411]
            lea RDX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_413270
.L_4132d0:

            lea EAX,DWORD PTR [RDI-8204]
            cmp EAX,93
            ja .L_413278

            lea EAX,DWORD PTR [RDI-7300]
            lea RDX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_413270
          .byte 0x66
          .byte 0x90
.L_4132f0:

            lea EAX,DWORD PTR [RDI-43072]
            cmp EAX,51
            ja .L_413278

            lea EAX,DWORD PTR [RDI-42074]
            lea RDX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_413270
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413318:

            lea EAX,DWORD PTR [RDI-68288]
            cmp EAX,47
            jbe .L_413350

            lea EAX,DWORD PTR [RDI-68480]
            cmp EAX,47
            ja .L_413278

            lea EAX,DWORD PTR [RDI-67382]
            lea RDX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_413270
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413350:

            lea EAX,DWORD PTR [RDI-67238]
            lea RDX,QWORD PTR [RIP+.L_4412e0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_413270
.L_413366:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413370:

            mov RAX,QWORD PTR [RDI+1064]
            test BYTE PTR [RAX+40],2
            je .L_4133d9

            mov ECX,DWORD PTR [RDX+184]
            mov RSI,QWORD PTR [RDX+200]
            test ECX,ECX
            je .L_4133d9

            sub ECX,1
            lea RAX,QWORD PTR [RSI+12]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RSI+RCX*4+32]
            nop
            nop
.L_4133a0:

            test BYTE PTR [RAX],64
            je .L_4133d0

            movzx ESI,BYTE PTR [RAX+2]
            mov EDI,8
            test SIL,16
            jne .L_4133c0

            and ESI,1
            lea EDI,DWORD PTR [RSI+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4133c0:

            mov BYTE PTR [RAX+6],DIL
            or DWORD PTR [RDX+132],16777216
            nop
            nop
.L_4133d0:

            add RAX,20
            cmp RCX,RAX
            jne .L_4133a0
.L_4133d9:

            ret 
.L_4133db:

            nop
            nop
            nop
            nop
            nop
.L_4133e0:

            test BYTE PTR [RSI+135],1
            je .L_413720

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_4133fe:

            mov EAX,DWORD PTR [RDX+136]
            mov QWORD PTR [RSP+40],RSI
            mov DWORD PTR [RSP+60],0
            mov DWORD PTR [RSP+32],0
            sar EAX,31
            or EAX,1
            mov DWORD PTR [RSP+48],EAX
.L_413423:

            mov RDI,QWORD PTR [RSP+40]
            mov R13D,DWORD PTR [RSP+60]
            mov EAX,DWORD PTR [RDI+184]
            mov R8,QWORD PTR [RDI+200]
            mov RBP,QWORD PTR [RDI+216]
            add R13D,EAX
            test EAX,EAX
            mov EBX,EAX
            mov DWORD PTR [RSP+76],EAX
            mov DWORD PTR [RSP+72],R13D
            je .L_4137df

            lea RAX,QWORD PTR [RBP-20]
            mov R11,R15
            mov R12,RBP
            mov R15D,EBX
            mov RBX,R8
            mov QWORD PTR [RSP+64],RAX
            jmp .L_413487
          .byte 0x66
          .byte 0x90
.L_413470:

            cmp DWORD PTR [RSP+32],1
            je .L_4137ff
.L_41347b:

            test R14D,R14D
            mov R15D,R14D
            je .L_4136e5
.L_413487:

            lea EAX,DWORD PTR [R15-1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            lea RAX,QWORD PTR [RDX*4]
            mov QWORD PTR [RSP+16],RAX
            add RAX,RBX
            mov QWORD PTR [RSP],RAX
            movzx EAX,BYTE PTR [RAX+18]
            sub EAX,8
            cmp EAX,1
            ja .L_413470

            mov RBP,QWORD PTR [RSP]
            xor EDI,EDI
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R12
            mov DWORD PTR [RSP+36],R13D
            mov R13D,EAX
            mov DWORD PTR [RSP+56],R15D
            mov DWORD PTR [RSP+8],0
            mov R15,R11
            mov R12,RBP
            mov DWORD PTR [RSP+52],R14D
            mov EBP,EDI
            jmp .L_41351b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4134e8:

            add R13D,EAX
            add EBP,1
            test R14D,R14D
            je .L_41354e
.L_4134f3:

            lea EAX,DWORD PTR [R14-1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            lea R12,QWORD PTR [RBX+RAX*1]
            movzx ECX,BYTE PTR [R12+18]
            sub ECX,8
            cmp ECX,1
            ja .L_413768

            mov R14D,EDX
.L_41351b:

            mov RAX,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov EDX,DWORD PTR [R12]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            cmp BYTE PTR [R12+18],8
            jne .L_4134e8

            add DWORD PTR [RSP+8],EAX
            test R14D,R14D
            jne .L_4134f3
.L_41354e:

            mov R8D,R13D
            mov R11,R15
            mov R13D,DWORD PTR [RSP+36]
            mov R12,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+36],R14D
            mov R9D,EBP
            mov R14D,DWORD PTR [RSP+52]
            mov R15D,DWORD PTR [RSP+56]
            xor ESI,ESI
.L_413572:

            sub ESI,DWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RSP+48]
            imul ESI,EAX
            imul EAX,R8D
            test EAX,EAX
            mov ECX,EAX
            jle .L_413740

            cmp ESI,EAX
            jle .L_413740

            mov EAX,ESI
            cdq 
            idiv ECX
            mov EDX,ESI
            mov EDI,EAX
            mov DWORD PTR [RSP+24],EAX
            lea EAX,DWORD PTR [RAX-1]
            imul ECX,EDI
            sub EDX,ECX
            test EDX,EDX
            jle .L_413756
.L_4135b0:

            add EAX,2
            xor R10D,R10D
            imul EAX,DWORD PTR [RSP+48]
            imul EAX,R8D
            sub EAX,ESI
            test EAX,EAX
            jle .L_4135d3

            mov ECX,DWORD PTR [RSP+24]
            cdq 
            imul ECX,R9D
            idiv ECX
            mov R10D,EAX
.L_4135d3:

            mov EDX,DWORD PTR [RSP+32]
            test EDX,EDX
            je .L_4137e9

            mov EDI,DWORD PTR [RSP+36]
            cmp R15D,EDI
            jbe .L_4136d4

            mov RAX,QWORD PTR [RSP+16]
            sub R14D,EDI
            mov R15,QWORD PTR [RSP]
            mov DWORD PTR [RSP+16],R10D
            lea RBP,QWORD PTR [R12+RAX*1]
            add RAX,QWORD PTR [RSP+64]
            mov RDX,RAX
            lea RAX,QWORD PTR [R14+R14*4]
            xor R14D,R14D
            shl RAX,2
            sub RDX,RAX
            mov RAX,R12
            mov R12,RBX
            mov QWORD PTR [RSP+8],RDX
            mov RBX,RAX
            nop
            nop
            nop
.L_413628:

            mov RAX,QWORD PTR [R11+152]
            mov RSI,QWORD PTR [R11+160]
            mov RDI,R11
            mov QWORD PTR [RSP],R11
            mov EDX,DWORD PTR [R15]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            cmp BYTE PTR [R15+18],9
            mov R9D,1
            mov R11,QWORD PTR [RSP]
            je .L_413728
.L_413662:

            sub R14D,EAX
            xor ECX,ECX
            mov R10D,DWORD PTR [RSP+16]
            jmp .L_413676
          .byte 0x66
          .byte 0x90
.L_413670:

            sub R14D,EAX
            add R14D,R10D
.L_413676:

            lea EDX,DWORD PTR [R13-1]
            mov DWORD PTR [RBP+8],R14D
            add ECX,1
            movdqu XMM0,XMMWORD PTR [R15]
            cmp R9D,ECX
            mov R13,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            movups XMMWORD PTR [R12+RDX*4],XMM0
            mov EDI,DWORD PTR [R15+16]
            lea RSI,QWORD PTR [RDX*4]
            mov DWORD PTR [R12+RSI*1+16],EDI
            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RBX+RDX*4],XMM0
            mov EDX,DWORD PTR [RBP+16]
            mov DWORD PTR [RBX+RSI*1+16],EDX
            ja .L_413670
.L_4136b8:

            sub R15,20
            sub RBP,20
            cmp QWORD PTR [RSP+8],RBP
            jne .L_413628

            mov RAX,RBX
            mov RBX,R12
            mov R12,RAX
.L_4136d4:

            mov R14D,DWORD PTR [RSP+36]
            test R14D,R14D
            mov R15D,R14D
            jne .L_413487
.L_4136e5:

            mov R15,R11
.L_4136e8:

            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            je .L_413844

            test R13D,R13D
            jne .L_413878

            mov RAX,QWORD PTR [RSP+40]
            mov EDI,DWORD PTR [RSP+72]
            mov DWORD PTR [RAX+184],EDI
.L_41370c:

            add RSP,88
.L_413710:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
.L_413720:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413728:

            mov R9D,DWORD PTR [RSP+24]
            add R9D,1
            jne .L_413662

            jmp .L_4136b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413740:

            mov EDX,ESI
            xor EAX,EAX
            mov DWORD PTR [RSP+24],1
            sub EDX,ECX
            test EDX,EDX
            jg .L_4135b0
.L_413756:

            mov DWORD PTR [RSP+24],EAX
            xor R10D,R10D
            jmp .L_4135d3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413768:

            mov R9D,EBP
            mov R8D,R13D
            mov RBP,R12
            mov R13D,DWORD PTR [RSP+36]
            mov R11,R15
            mov DWORD PTR [RSP+36],R14D
            mov R12,QWORD PTR [RSP+24]
            mov R14D,DWORD PTR [RSP+52]
            xor ESI,ESI
            mov R15D,DWORD PTR [RSP+56]
            mov EDI,125893836
            nop
            nop
            nop
            nop
.L_413798:

            movzx ECX,WORD PTR [RBP+16]
            test CL,32
            je .L_4137a7

            test BYTE PTR [RBP+12],32
            je .L_4137b0
.L_4137a7:

            bt EDI,ECX
            jae .L_413572
.L_4137b0:

            add ESI,DWORD PTR [R12+RAX*1]
            test EDX,EDX
            je .L_413572

            lea EAX,DWORD PTR [RDX-1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            lea RBP,QWORD PTR [RBX+RAX*1]
            movzx ECX,BYTE PTR [RBP+18]
            sub ECX,8
            cmp ECX,1
            ja .L_413798

            jmp .L_413572
.L_4137df:

            mov R13D,DWORD PTR [RSP+72]
            jmp .L_4136e8
.L_4137e9:

            mov EBP,DWORD PTR [RSP+24]
            mov R14D,DWORD PTR [RSP+36]
            imul EBP,R9D
            add DWORD PTR [RSP+60],EBP
            jmp .L_41347b
.L_4137ff:

            mov RDI,QWORD PTR [RSP]
            lea EAX,DWORD PTR [R13-1]
            mov R13,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDI]
            lea RCX,QWORD PTR [RAX*4]
            movups XMMWORD PTR [RBX+RAX*4],XMM0
            mov ESI,DWORD PTR [RDI+16]
            mov DWORD PTR [RBX+RCX*1+16],ESI
            movdqu XMM0,XMMWORD PTR [R12+RDX*4]
            movups XMMWORD PTR [R12+RAX*4],XMM0
            mov RAX,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [R12+RAX*1+16]
            mov DWORD PTR [R12+RCX*1+16],EAX
            jmp .L_41347b
.L_413844:

            mov ESI,DWORD PTR [RSP+76]
            add ESI,DWORD PTR [RSP+60]
            je .L_41386b

            mov RAX,QWORD PTR [RSP+40]
            cmp ESI,DWORD PTR [RAX+192]
            jb .L_41386b

            mov RDI,RAX
            call .L_402170

            test AL,AL
            je .L_41370c
.L_41386b:

            mov DWORD PTR [RSP+32],1
            jmp .L_413423
.L_413878:

            lea RCX,QWORD PTR [RIP+.L_440ae0]
            lea RSI,QWORD PTR [RIP+.L_44179e]
            lea RDI,QWORD PTR [RIP+.L_4417bc]
            mov EDX,591
            call __assert_fail@PLT
.L_413897:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4138a0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_4138a9:

            mov EAX,DWORD PTR [RDI]
            test EAX,EAX
            je .L_4138eb

            mov EBX,1
            jmp .L_4138cb
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4138c0:

            mov EAX,EBX
            add RBX,1
            cmp DWORD PTR [RBP],EAX
            jbe .L_4138eb
.L_4138cb:

            mov RDI,QWORD PTR [RBP+RBX*8+24]
            test RDI,RDI
            je .L_4138c0

            cmp BYTE PTR [RBP+4],0
            je .L_4138c0

            call free@PLT

            mov EAX,EBX
            add RBX,1
            cmp DWORD PTR [RBP],EAX
            ja .L_4138cb
.L_4138eb:

            add RSP,8
.L_4138ef:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp free@PLT
.L_4138f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413900:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_41391e

            lea RAX,QWORD PTR [RIP+.L_440b40]
            cmp RDI,RAX
            je .L_41391e

            call .L_4138a0
.L_41391e:

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_413927:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413930:

            push R15
            push R14
            lea RDX,QWORD PTR [RIP+.L_440d40]
            push R13
            push R12
            mov R15D,1569
            push RBP
            push RBX
            mov RBP,RDI
            xor R13D,R13D
            sub RSP,1720
.L_413954:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1704],RAX
            xor EAX,EAX
            mov EAX,ESI
            lea R12,QWORD PTR [RSP+48]
            lea RBX,QWORD PTR [RDX+RAX*2]
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+480]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
.L_413998:

            movzx R14D,WORD PTR [RBX+R15*8-12552]
            test R14D,R14D
            je .L_413a20

            xor EDX,EDX
            mov RCX,R12
            mov ESI,R15D
            mov RDI,RBP
            call .L_408610

            test EAX,EAX
            je .L_413a20

            mov RCX,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov ESI,R14D
            mov RDI,RBP
            call .L_408610

            test EAX,EAX
            je .L_413a20

            mov EAX,DWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+64]
            cmp EAX,EDX
            sete SIL
            cmp EAX,65535
            seta CL
            or SIL,CL
            jne .L_413a20

            cmp EDX,65535
            ja .L_413a20

            mov ECX,R13D
            add R13D,1
            lea RDI,QWORD PTR [RCX+RCX*1]
            mov RCX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RCX+RDI*1]
            mov BYTE PTR [RSI],AH
            mov BYTE PTR [RSI+1],AL
            mov RAX,QWORD PTR [RSP+24]
            add RAX,RDI
            mov BYTE PTR [RAX],DH
            mov BYTE PTR [RAX+1],DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a20:

            add R15,1
            cmp R15,1748
            jne .L_413998

            test R13D,R13D
            je .L_413cac

            cmp R13D,1
            lea RBP,QWORD PTR [RSP+112]
            jbe .L_413b3d

            lea EAX,DWORD PTR [R13-2]
            lea R14,QWORD PTR [RBP+1]
            lea RBX,QWORD PTR [RSP+480]
            mov R12D,1
            add RAX,2
            mov QWORD PTR [RSP+40],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a70:

            movzx EDI,BYTE PTR [R14+1]
            movzx EAX,BYTE PTR [R14+2]
            lea R8,QWORD PTR [R12+R12*1]
            mov R10D,R12D
            mov RDX,R14
            mov ESI,R12D
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            nop
.L_413a90:

            movzx EAX,BYTE PTR [RDX-1]
            movzx R11D,BYTE PTR [RDX]
            lea R9D,DWORD PTR [RSI-1]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            sub EAX,EDI
            test EAX,EAX
            jle .L_413ce0

            sub RDX,2
            test R9D,R9D
            mov ESI,R9D
            jne .L_413a90

            mov R15,RBX
            mov R9D,2
            mov R10,RBP
.L_413ac7:

            movzx R11D,WORD PTR [R14+1]
            lea RDI,QWORD PTR [RBP+R9*1]
            mov RDX,R8
            mov RSI,R10
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R10
            mov DWORD PTR [RSP+36],R11D
            call memmove@PLT

            mov R10,QWORD PTR [RSP+8]
            mov R11D,DWORD PTR [RSP+36]
            mov RSI,R15
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
            mov WORD PTR [R10],R11W
            movzx R10D,WORD PTR [RBX+R12*2]
            lea RDI,QWORD PTR [RBX+R9*1]
            mov RDX,R8
            mov DWORD PTR [RSP+8],R10D
            call memmove@PLT

            mov R10D,DWORD PTR [RSP+8]
            mov WORD PTR [R15],R10W
.L_413b2a:

            add R12,1
            add R14,2
            cmp QWORD PTR [RSP+40],R12
            jne .L_413a70
.L_413b3d:

            lea R8,QWORD PTR [RSP+848]
            movzx EBX,BYTE PTR [RSP+480]
            movzx EDX,BYTE PTR [RSP+113]
            xor ECX,ECX
            xor ESI,ESI
            xor EDI,EDI
            lea RAX,QWORD PTR [R8+844]
            mov DWORD PTR [RSP+848],0
            mov WORD PTR [RSP+852],CX
            mov WORD PTR [RSP+854],SI
            mov QWORD PTR [RSP+56],RBP
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [R8+10]
            shl EBX,8
            mov DWORD PTR [RSP+48],R13D
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+88],RAX
            movzx EAX,BYTE PTR [RSP+481]
            mov BYTE PTR [RSP+96],0
            mov DWORD PTR [RSP+64],0
            mov BYTE PTR [RSP+849],1
            mov BYTE PTR [RSP+851],8
            mov BYTE PTR [RSP+853],1
            mov BYTE PTR [RSP+855],8
            add EBX,EAX
            movzx EAX,BYTE PTR [RSP+112]
            mov WORD PTR [RSP+856],DI
            movzx EBX,BX
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            sub EBX,EAX
            cmp R13D,1
            jbe .L_413d0a

            lea R9D,DWORD PTR [R13-2]
            mov EDX,1
            lea RDI,QWORD PTR [RSP+480]
            add R9,2
            jmp .L_413c1d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413c10:

            add RDX,1
            cmp RDX,R9
            je .L_413d0a
.L_413c1d:

            xor EAX,EAX
            cmp R13D,EDX
            jbe .L_413c4b

            movzx EAX,BYTE PTR [RDI+RDX*2]
            movzx ESI,BYTE PTR [RDI+RDX*2+1]
            movzx R10D,BYTE PTR [RBP+RDX*2+1]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RBP+RDX*2]
            movzx EAX,AX
            shl ESI,8
            add ESI,R10D
            movzx ESI,SI
            sub EAX,ESI
.L_413c4b:

            cmp EAX,EBX
            je .L_413c10

            xor EDX,EDX
            movzx ECX,R13B
            lea RAX,QWORD PTR [R8+14]
            mov WORD PTR [RSP+858],DX
            mov EDX,R13D
            mov BYTE PTR [RSP+857],2
            shr DX,8
            mov QWORD PTR [RSP+88],RAX
            mov BYTE PTR [RSP+861],R13B
            mov BYTE PTR [RSP+860],DL
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RDX,QWORD PTR [R8+RDX*2+14]
            cmp RDX,RAX
            jb .L_413eb4

            sub RDX,RAX
            mov EDX,EDX
            cmp RDX,830
            jle .L_413d97
.L_413cac:

            xor ECX,ECX
.L_413cae:

            mov RBX,QWORD PTR [RSP+1704]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RCX
            jne .L_413ed3

            add RSP,1720
.L_413ccf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413ce0:

            cmp R10D,ESI
            je .L_413b2a

            mov R15D,ESI
            lea R9D,DWORD PTR [RSI+1]
            sub R10D,ESI
            add R15,R15
            lea R8,QWORD PTR [R10+R10*1]
            add R9,R9
            lea R10,QWORD PTR [RBP+R15*1]
            add R15,RBX
            jmp .L_413ac7
.L_413d0a:

            lea RDI,QWORD PTR [R8+14]
            lea RDX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            mov ECX,R13D
            mov DWORD PTR [RSP+858],0
            mov BYTE PTR [RSP+857],1
            mov QWORD PTR [RSP+88],RDI
            mov BYTE PTR [RSP+859],6
            call .L_414f80

            test AL,AL
            je .L_413cac

            mov BYTE PTR [RSP+860],BH
            mov BYTE PTR [RSP+861],BL
.L_413d56:

            cmp BYTE PTR [RSP+96],0
            jne .L_413e95

            mov RBP,QWORD PTR [RSP+72]
            mov RBX,QWORD PTR [RSP+88]
            sub EBX,EBP
            mov RDI,RBX
            call malloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_413cae

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov RCX,RAX
            jmp .L_413cae
.L_413d97:

            cmp EDX,8
            jae .L_413e32

            test DL,4
            jne .L_413e80

            test EDX,EDX
            jne .L_413e5c
.L_413db1:

            lea RDI,QWORD PTR [R8+RDX*1+14]
            lea ESI,DWORD PTR [R13-1]
            xor EAX,EAX
            mov QWORD PTR [RSP+88],RDI
            add RSI,1
            jmp .L_413dde
.L_413dc7:

            xor EDX,EDX
            xor ECX,ECX
.L_413dcb:

            mov BYTE PTR [R8+RAX*2+14],CL
            mov BYTE PTR [R8+RAX*2+15],DL
            add RAX,1
            cmp RAX,RSI
            je .L_413df5
.L_413dde:

            cmp R13D,EAX
            jbe .L_413dc7

            movzx ECX,BYTE PTR [RSP+RAX*2+480]
            movzx EDX,BYTE PTR [RSP+RAX*2+481]
            jmp .L_413dcb
.L_413df5:

            add R8,8
            mov RAX,RDI
            lea RSI,QWORD PTR [RSP+64]
            sub RAX,R8
            mov ECX,R13D
            mov EDX,EAX
            mov BYTE PTR [RSP+859],AL
            shr DX,8
            mov BYTE PTR [RSP+858],DL
            lea RDX,QWORD PTR [RSP+48]
            call .L_414f80

            test AL,AL
            je .L_413cac

            jmp .L_413d56
.L_413e32:

            lea RDI,QWORD PTR [R8+16]
            mov QWORD PTR [R8+14],0
            mov QWORD PTR [RAX+RDX*1-8],0
            sub RAX,RDI
            mov RCX,RAX
            xor EAX,EAX
            add ECX,EDX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_413db1
.L_413e5c:

            test DL,2
            mov BYTE PTR [R8+14],0
            je .L_413db1

            mov WORD PTR [RAX+RDX*1-2],0
            jmp .L_413db1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413e80:

            mov DWORD PTR [R8+14],0
            mov DWORD PTR [RAX+RDX*1-4],0
            jmp .L_413db1
.L_413e95:

            lea RCX,QWORD PTR [RIP+.L_440800]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417c3]
            mov EDX,434
            call __assert_fail@PLT
.L_413eb4:

            lea RCX,QWORD PTR [RIP+.L_440860]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_441848]
            mov EDX,491
            call __assert_fail@PLT
.L_413ed3:

            call __stack_chk_fail@PLT
.L_413ed8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413ee0:

            push R15
            push R14
            xor EDX,EDX
            push R13
            push R12
            mov ESI,65247
            push RBP
            push RBX
            mov R14,RDI
            xor EBP,EBP
            sub RSP,536
.L_413efd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+128]
            mov RCX,RAX
            mov QWORD PTR [RSP],RAX
            call .L_408610

            test EAX,EAX
            je .L_413f58

            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [RSP+184],0
            mov EBP,1
            mov DWORD PTR [RSP+176],0
            mov BYTE PTR [RSP+172],AH
            mov BYTE PTR [RSP+173],AL
.L_413f58:

            mov RCX,QWORD PTR [RSP]
            xor EDX,EDX
            mov ESI,65248
            mov RDI,R14
            call .L_408610

            test EAX,EAX
            je .L_4142c8

            mov EAX,EBP
            mov ECX,DWORD PTR [RSP+128]
            add EBP,1
            lea RDX,QWORD PTR [RSP+RAX*2+172]
            mov DWORD PTR [RSP+RAX*4+184],0
            mov DWORD PTR [RSP+RAX*4+176],1
            mov EAX,1
            mov BYTE PTR [RDX],CH
            mov BYTE PTR [RDX+1],CL
            jmp .L_413ff1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413fb0:

            movzx EAX,WORD PTR [RSP+174]
            movzx EDX,WORD PTR [RSP+172]
            mov WORD PTR [RSP+172],AX
            mov WORD PTR [RSP+174],DX
            mov EAX,DWORD PTR [RSP+180]
            mov EDX,DWORD PTR [RSP+176]
            mov DWORD PTR [RSP+176],EAX
            mov DWORD PTR [RSP+180],EDX
            mov EAX,2
.L_413ff1:

            cmp EAX,EBP
            jae .L_414030

            movzx EAX,BYTE PTR [RSP+172]
            movzx EDX,BYTE PTR [RSP+173]
            movzx ECX,BYTE PTR [RSP+175]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RSP+174]
            movzx EAX,AX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            sub EAX,EDX
            test EAX,EAX
            jg .L_413fb0

            mov EBP,2
.L_414030:

            lea RAX,QWORD PTR [RSP+176]
            xor R12D,R12D
            xor R15D,R15D
            mov DWORD PTR [RSP+20],EBP
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+40],RAX
.L_41406b:

            mov RAX,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RAX+R12*4]
            lea RBX,QWORD PTR [RAX+RAX*8]
            lea RAX,QWORD PTR [RIP+.L_440d00]
            add RBX,RBX
            lea RBP,QWORD PTR [RAX+RBX*1+2]
            add RAX,18
            add RBX,RAX
.L_41408e:

            movzx ESI,WORD PTR [RBP]
            test ESI,ESI
            je .L_414110

            mov RCX,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RDI,R14
            movzx R13D,WORD PTR [RBP+2]
            call .L_408610

            test EAX,EAX
            je .L_414110

            mov RCX,QWORD PTR [RSP]
            xor EDX,EDX
            movzx ESI,R13W
            mov RDI,R14
            call .L_408610

            test EAX,EAX
            je .L_414110

            mov EDX,R15D
            mov RAX,QWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+128]
            lea RDI,QWORD PTR [RDX+RDX*1]
            mov DWORD PTR [RSP+RDX*4+224],2
            add DWORD PTR [RSP+R12*4+184],1
            mov EDX,DWORD PTR [RSP+112]
            add R15D,1
            lea RCX,QWORD PTR [RAX+RDI*1]
            mov EAX,ESI
            mov BYTE PTR [RCX],AH
            mov RAX,QWORD PTR [RSP+40]
            mov BYTE PTR [RCX+1],SIL
            add RAX,RDI
            mov BYTE PTR [RAX],DH
            mov BYTE PTR [RAX+1],DL
            nop
            nop
            nop
            nop
.L_414110:

            add RBP,4
            cmp RBX,RBP
            jne .L_41408e

            add R12,1
            cmp DWORD PTR [RSP+20],R12D
            ja .L_41406b

            test R15D,R15D
            mov EBP,DWORD PTR [RSP+20]
            je .L_4142d0

            lea RAX,QWORD PTR [RSP+172]
            lea RDX,QWORD PTR [RSP+512]
            xor ECX,ECX
            mov DWORD PTR [RSP+256],0
            mov WORD PTR [RSP+264],CX
            lea RDI,QWORD PTR [RSP+264]
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RSP+184]
            mov QWORD PTR [RSP+144],RDX
            xor EDX,EDX
            mov DWORD PTR [RSP+48],EBP
            mov DWORD PTR [RSP+64],EBP
            mov QWORD PTR [RSP+72],RAX
            lea RAX,QWORD PTR [RSP+192]
            mov WORD PTR [RSP+262],DX
            mov DWORD PTR [RSP+80],R15D
            mov DWORD PTR [RSP+96],R15D
            lea RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov DWORD PTR [RSP+112],R15D
            mov BYTE PTR [RSP+160],0
            mov DWORD PTR [RSP+128],0
            lea RDX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+104],RAX
            lea RAX,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+257],4
            mov BYTE PTR [RSP+259],8
            mov BYTE PTR [RSP+263],8
            mov R8D,EBP
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RSP+256]
            mov BYTE PTR [RSP+265],1
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov WORD PTR [RSP+260],AX
            lea RAX,QWORD PTR [RSP+266]
            mov BYTE PTR [RSP+261],1
            mov QWORD PTR [RSP+152],RAX
            lea RAX,QWORD PTR [RSP+112]
            push RAX
.L_414240:

            lea RAX,QWORD PTR [RSP+104]
            push RAX
            mov RSI,QWORD PTR [RSP+16]
            lea R9,QWORD PTR [RSP+96]
            call .L_4155f0

            test AL,AL
            pop RSI
            pop RDI
.L_414259:

            je .L_4142d0

            cmp BYTE PTR [RSP+160],0
            jne .L_4142d4

            mov RBP,QWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+152]
            sub EBX,EBP
            mov RDI,RBX
            call malloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_41429c

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov RCX,RAX
.L_41429c:

            mov RDI,QWORD PTR [RSP+520]
            xor RDI,QWORD PTR FS:[40]
            mov RAX,RCX
            jne .L_4142f3

            add RSP,536
.L_4142b9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
.L_4142c8:

            test EBP,EBP
            jne .L_414030
.L_4142d0:

            xor ECX,ECX
            jmp .L_41429c
.L_4142d4:

            lea RCX,QWORD PTR [RIP+.L_440800]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417c3]
            mov EDX,434
            call __assert_fail@PLT
.L_4142f3:

            call __stack_chk_fail@PLT
.L_4142f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414300:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,1
            sub RSP,24
.L_414319:

            mov R12D,DWORD PTR [RSI+184]
            mov R14,QWORD PTR [RSI+200]
            mov DWORD PTR [RSP+12],EDX
            mov EDX,DWORD PTR [RSI+268]
            test EDX,EDX
            je .L_4144f3
.L_414339:

            mov RAX,QWORD PTR [R15+112]
            mov ESI,DWORD PTR [R15+RBX*4+224]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov EDI,DWORD PTR [R15+RBX*4+224]
            mov ESI,EAX
            call .L_413230

            cmp EAX,7
            je .L_4144e0

            lea RDX,QWORD PTR [RIP+.L_440c20]
            mov EAX,EAX
            movzx EBX,WORD PTR [RDX+RAX*4+2]
.L_41437b:

            xor R9D,R9D
            test R12D,R12D
            mov R8,R14
            mov EBP,4294967295
            lea R10,QWORD PTR [RIP+.L_440c20]
            jne .L_4143e3

            jmp .L_41440a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414398:

            lea RDX,QWORD PTR [RBX+RBX*2]
            mov EAX,EAX
            lea RDX,QWORD PTR [RAX+RDX*2]
            movzx EDX,BYTE PTR [R10+RDX*4]
            cmp DL,7
            je .L_4143bb

            cmp EBP,-1
            je .L_4143bb

            lea RSI,QWORD PTR [RBP+RBP*4]
            mov BYTE PTR [R14+RSI*4+18],DL
.L_4143bb:

            lea RDX,QWORD PTR [RBX+RBX*2]
            mov EBP,R9D
            add R9D,1
            add R8,20
            lea RAX,QWORD PTR [RAX+RDX*2]
            movzx EDX,BYTE PTR [R10+RAX*4+1]
            movzx EBX,WORD PTR [R10+RAX*4+2]
            mov BYTE PTR [R8-2],DL
            cmp R12D,R9D
            je .L_41440a
.L_4143e3:

            movzx ESI,WORD PTR [R8+16]
            mov EDI,DWORD PTR [R8]
            and ESI,31
            call .L_413230

            cmp EAX,7
            jne .L_414398

            add R9D,1
            mov BYTE PTR [R8+18],7
            add R8,20
            cmp R12D,R9D
            jne .L_4143e3
.L_41440a:

            mov EAX,DWORD PTR [R15+272]
            mov R12D,1
            test EAX,EAX
            je .L_414473
.L_41441b:

            mov RAX,QWORD PTR [R15+112]
            mov ESI,DWORD PTR [R15+R12*4+244]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov EDI,DWORD PTR [R15+R12*4+244]
            mov ESI,EAX
            call .L_413230

            cmp EAX,7
            je .L_4144c8

            lea RDX,QWORD PTR [RBX+RBX*2]
            mov EAX,EAX
            lea RDX,QWORD PTR [RAX+RDX*2]
            lea RAX,QWORD PTR [RIP+.L_440c20]
            movzx EAX,BYTE PTR [RAX+RDX*4]
            cmp AL,7
            je .L_414473

            cmp EBP,-1
            je .L_414473

            lea RDX,QWORD PTR [RBP+RBP*4]
            mov BYTE PTR [R14+RDX*4+18],AL
.L_414473:

            cmp DWORD PTR [RSP+12],1299148391
            mov EDX,DWORD PTR [R15+184]
            mov RSI,QWORD PTR [R15+200]
            je .L_414500
.L_41448b:

            test EDX,EDX
            je .L_4144b4

            sub EDX,1
            lea RAX,QWORD PTR [RSI+4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RSI+RDX*4+24]
            nop
.L_4144a0:

            movzx EDX,BYTE PTR [RAX+14]
            mov EDX,DWORD PTR [R13+RDX*4]
            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_4144a0
.L_4144b4:

            add RSP,24
.L_4144b8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4144c8:

            mov EAX,R12D
            add R12,1
            cmp DWORD PTR [R15+272],EAX
            ja .L_41441b

            jmp .L_414473
          .byte 0x66
          .byte 0x90
.L_4144e0:

            mov EAX,EBX
            add RBX,1
            cmp DWORD PTR [R15+268],EAX
            ja .L_414339
.L_4144f3:

            xor EBX,EBX
            jmp .L_41437b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414500:

            cmp EDX,1
            jbe .L_41448b

            sub EDX,2
            lea RAX,QWORD PTR [RSI+18]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RSI+RDX*4+38]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414520:

            mov ECX,DWORD PTR [RAX+2]
            lea EDX,DWORD PTR [RCX-6155]
            cmp EDX,2
            ja .L_414534

            movzx EDX,BYTE PTR [RAX]
            mov BYTE PTR [RAX+20],DL
.L_414534:

            add RAX,20
            cmp RSI,RAX
            jne .L_414520

            mov EDX,DWORD PTR [R15+184]
            mov RSI,QWORD PTR [R15+200]
            jmp .L_41448b
.L_414550:

            mov EDX,DWORD PTR [RDI+4]
            mov RDI,QWORD PTR [RDI+1064]
            jmp .L_414300
.L_41455f:

            nop
.L_414560:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,328
.L_414571:

            mov R15,QWORD PTR [RDI+1064]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+312],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],RSI
            test BYTE PTR [R15+40],1
            je .L_414729

            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+24],RDX
.L_4145a5:

            mfence 
            mov R12,QWORD PTR [R15+32]
            test R12,R12
            je .L_414758
.L_4145b5:

            mov R13,R12
            mov R12,QWORD PTR [RSP+24]
            mov ECX,DWORD PTR [R13]
.L_4145c1:

            mov RAX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [R12+144]
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],3
            mov DWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+104],RAX
            mov RAX,QWORD PTR [RAX+128]
            mov DWORD PTR [RSP+128],EDX
            mov DWORD PTR [RSP+132],1
            mov BYTE PTR [RSP+136],1
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+112],RAX
            mov RAX,QWORD PTR [RAX+160]
            mov RDX,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+160],RDX
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            mov QWORD PTR [RSP+208],0
            movaps XMMWORD PTR [RSP+192],XMM0
            mov QWORD PTR [RSP+216],0
            mov DWORD PTR [RSP+200],4294967295
            shl EAX,8
            add AX,DX
            mov EAX,4294967295
            setne BYTE PTR [RSP+168]
            test ECX,ECX
            mov BYTE PTR [RSP+204],0
            movaps XMMWORD PTR [RSP+256],XMM0
            mov QWORD PTR [RSP+272],0
            mov DWORD PTR [RSP+264],4294967295
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+224],XMM0
            movaps XMMWORD PTR [RSP+240],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            mov BYTE PTR [RSP+268],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+304],RAX
            je .L_414729

            lea RBP,QWORD PTR [R13+72]
            lea R12,QWORD PTR [RSP+96]
            mov EBX,1
            nop
            nop
            nop
            nop
.L_4146f8:

            mov RSI,QWORD PTR [R13+RBX*8+24]
            test RSI,RSI
            je .L_414719

            mov EAX,DWORD PTR [R13+RBX*4+4]
            mov RDX,RBP
            mov RDI,R12
            mov DWORD PTR [RSP+132],EAX
            call .L_42ada0
.L_414719:

            mov EAX,EBX
            add RBP,24
            add RBX,1
            cmp DWORD PTR [R13],EAX
            ja .L_4146f8
.L_414729:

            mov RAX,QWORD PTR [RSP+312]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414f7a

            add RSP,328
.L_414747:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414758:

            mov ESI,192
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_41496a

            mov DWORD PTR [RAX],0
            mov BYTE PTR [RAX+4],0
            mov R9D,1768843636
            mov QWORD PTR [RSP+16],0
            mov DWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+88],R15
.L_41479b:

            mov RAX,QWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+16]
            xor ECX,ECX
            mov R11D,DWORD PTR [RAX+56]
            mov R10,QWORD PTR [RAX+64]
.L_4147ae:

            cmp RCX,R11
            jae .L_4147ef

            lea RDX,QWORD PTR [RCX+R11*1]
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RAX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_4147ea

            jmp .L_414828
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4147d0:

            lea RAX,QWORD PTR [RCX+RDX*1]
            shr RAX,1
            lea RDI,QWORD PTR [RAX+RAX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_414830

            mov RDX,RAX
.L_4147ea:

            cmp RCX,RDX
            jb .L_4147d0
.L_4147ef:

            mov EAX,DWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+48]
            mov DWORD PTR [RBX+RAX*4+8],0
.L_414800:

            add QWORD PTR [RSP+16],1
            mov RBX,QWORD PTR [RSP+16]
            cmp RBX,5
            je .L_414f30

            lea RAX,QWORD PTR [RIP+.L_440c00]
            mov R9D,DWORD PTR [RAX+RBX*4]
            jmp .L_41479b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414828:

            mov RAX,RDX
            mov RDX,R11
            nop
            nop
.L_414830:

            cmp EDI,R9D
            jae .L_414841

            lea RCX,QWORD PTR [RAX+1]
            mov R11,RDX
            jmp .L_4147ae
.L_414841:

            mov EAX,DWORD PTR [R8+28]
            mov EBX,DWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+48]
            test EAX,EAX
            mov DWORD PTR [RDI+RBX*4+8],EAX
            je .L_414800

            cmp QWORD PTR [RSP+16],4
            mov RDI,QWORD PTR [RSP+8]
            jne .L_414b98

            call .L_413ee0

            mov R14,RAX
.L_41486f:

            mov RSI,QWORD PTR [RSP+48]
            test R14,R14
            mov QWORD PTR [RSI+RBX*8+32],R14
            je .L_414800

            lea RAX,QWORD PTR [RBX+RBX*2]
            mov DWORD PTR [RSP+104],0
            lea R12,QWORD PTR [RSI+RAX*8+72]
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
            mov QWORD PTR [RSP+96],R12
            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R14+5]
            mov WORD PTR [RSP+70],AX
            movzx EAX,BYTE PTR [R14+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_414f70

            lea ECX,DWORD PTR [RSI-1]
            xor R15D,R15D
            mov QWORD PTR [RSP+40],R14
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+72],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414900:

            shl EAX,8
            lea RCX,QWORD PTR [RIP+.L_657520]
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_41491e

            mov RAX,QWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RAX+R15*2+6]
.L_41491e:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_657520]
            movzx EBX,WORD PTR [RSP+70]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,QWORD PTR [RSP+40]
            test DX,DX
            cmove RAX,RDI
            cmp BX,8
            ja .L_414bd0

            movzx EDX,BX
            lea RBX,QWORD PTR [RIP+.L_44029c]
            movsxd RDX,DWORD PTR [RBX+RDX*4]
            add RDX,RBX
            jmp RDX
.L_414962:

            mov RDI,R12
            call free@PLT
.L_41496a:

            lea RDX,QWORD PTR [RIP+.L_440b40]
            xor EAX,EAX
            lock cmpxchg QWORD PTR [R15+32],RDX
            jne .L_4145a5

            mov R12,QWORD PTR [RSP+24]
            xor ECX,ECX
            mov R13,RDX
            jmp .L_4145c1
          .byte 0x66
          .byte 0x90
.L_414990:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
.L_41499c:

            cmp DX,1
            jne .L_414bd0
.L_4149a6:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
.L_4149b1:

            add EDX,ECX
            lea RBX,QWORD PTR [RIP+.L_657520]
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmove RAX,RBX
.L_4149c7:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_414e80

            cmp DX,2
            jne .L_414e5d

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EDI,SI
            je .L_414e5d

            mov QWORD PTR [RSP+80],R15
            lea R9,QWORD PTR [RAX+4]
            xor R11D,R11D
            mov EBX,1
            mov R15D,EDI
            jmp .L_414ad5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414a20:

            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov R13D,4294967295
            xor ECX,ECX
            xor R10D,R10D
            mov R8D,1
            xor ESI,ESI
.L_414a39:

            mov R14,RBX
            shl R14,CL
            mov ECX,R10D
            mov R10D,2
            and ECX,63
            shl R10,CL
            sub R10,R14
            mov QWORD PTR [RSP+56],R10
            mov R10,RBX
            shl R10,CL
            cmp R14,R10
            mov R10,QWORD PTR [RSP+56]
            seta CL
            movzx ECX,CL
            sub R10,RCX
            or QWORD PTR [R12],R10
            cmp R13D,62
            jbe .L_414b4a
.L_414a7b:

            cmp EBP,62
            mov QWORD PTR [R12+8],-1
            ja .L_414b86
.L_414a8d:

            mov ECX,EDI
            mov RSI,RBX
            mov RDI,RBX
            shl RSI,CL
            mov ECX,EDX
            mov EDX,2
            and ECX,63
            shl RDX,CL
            shl RDI,CL
            sub RDX,RSI
            cmp RSI,RDI
            seta CL
            movzx ECX,CL
            sub RDX,RCX
            or QWORD PTR [R12+16],RDX
.L_414abc:

            add R11D,1
            add R9,6
            cmp R15D,R11D
            je .L_414e58

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_414ad5:

            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp R11D,EDX
            jae .L_414a20

            movzx ESI,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            movzx R8D,BYTE PTR [R9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R9+1]
            shl R8D,8
            movzx EDX,SI
            mov R10D,EDX
            mov R13D,EDX
            shr EDX,9
            shr R10D,4
            mov EBP,EDX
            add R8D,ECX
            mov R14D,R10D
            movzx EDI,R8W
            mov ECX,EDI
            sub R13D,EDI
            shr EDI,9
            shr ECX,4
            sub EBP,EDI
            sub R14D,ECX
            cmp R14D,62
            jbe .L_414a39

            cmp R13D,62
            mov QWORD PTR [R12],-1
            ja .L_414a7b
.L_414b4a:

            mov ECX,R8D
            mov R14,RBX
            shl R14,CL
            mov ECX,ESI
            mov ESI,2
            and ECX,63
            mov R8,R14
            shl RSI,CL
            sub RSI,R14
            mov R14,RBX
            shl R14,CL
            cmp R8,R14
            seta CL
            movzx ECX,CL
            sub RSI,RCX
            or QWORD PTR [R12+8],RSI
            cmp EBP,62
            jbe .L_414a8d
.L_414b86:

            mov QWORD PTR [R12+16],-1
            jmp .L_414abc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414b98:

            call .L_413930

            mov R14,RAX
            jmp .L_41486f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414ba8:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_4149a6

            cmp DX,2
            je .L_4149a6

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414bd0:

            lea RAX,QWORD PTR [RIP+.L_657520]
            jmp .L_4149c7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414be0:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,2
            je .L_4149a6

            cmp DX,3
            jne .L_41499c

            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            shl EDX,8
            jmp .L_4149b1
.L_414c10:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,2
            je .L_4149a6

            cmp DX,3
            jne .L_41499c

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            lea RBX,QWORD PTR [RIP+.L_657520]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RDX,QWORD PTR [RAX+RDX*2+4]
            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            add RDX,2
            shl ECX,8
            add CX,SI
            cmove RDX,RBX
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmove RAX,RBX
            jmp .L_4149c7
          .byte 0x90
.L_414c80:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            jne .L_414bd0

            movzx ECX,BYTE PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX+5]
            lea RBX,QWORD PTR [RIP+.L_657520]
            shl EDX,16
            shl ECX,24
            add ECX,EDX
            movzx EDX,BYTE PTR [RAX+6]
            shl EDX,8
            add ECX,EDX
            movzx EDX,BYTE PTR [RAX+7]
            add EDX,ECX
            mov RCX,RDX
            add RDX,RAX
            test ECX,ECX
            movzx ECX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            cmove RDX,RBX
            shl ECX,8
            add EAX,ECX
            cmp AX,8
            ja .L_414bd0

            lea RCX,QWORD PTR [RIP+.L_4402c0]
            movzx EAX,AX
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_414cf2:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
.L_414cfe:

            cmp AX,1
            jne .L_414bd0
.L_414d08:

            movzx ECX,BYTE PTR [RDX+2]
            movzx ESI,BYTE PTR [RDX+3]
            lea RAX,QWORD PTR [RIP+.L_657520]
            shl ECX,8
            add CX,SI
            je .L_4149c7
.L_414d23:

            movzx EAX,CX
            add RAX,RDX
            jmp .L_4149c7
.L_414d2e:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            je .L_414d08

            cmp AX,2
            je .L_414d08

            jmp .L_414bd0
.L_414d4b:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,2
            je .L_414d08

            cmp AX,3
            jne .L_414cfe

            movzx ECX,BYTE PTR [RDX+6]
            movzx ESI,BYTE PTR [RDX+7]
            lea RAX,QWORD PTR [RIP+.L_657520]
            shl ECX,8
            add CX,SI
            je .L_4149c7

            jmp .L_414d23
.L_414d80:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,2
            je .L_414d08

            cmp AX,3
            jne .L_414cfe

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX+RAX*1+2]
            lea RCX,QWORD PTR [RDX+RAX*1+2]
            lea RAX,QWORD PTR [RIP+.L_657520]
            movzx ESI,BYTE PTR [RCX]
            movzx EDI,BYTE PTR [RCX+1]
            shl ESI,8
            add SI,DI
            je .L_414dd3

            lea RAX,QWORD PTR [RCX+2]
.L_414dd3:

            movzx ECX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            lea RAX,QWORD PTR [RIP+.L_657520]
            shl ECX,8
            add CX,SI
            je .L_4149c7

            jmp .L_414d23
.L_414df2:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            sub AX,1
            jne .L_414bd0

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            lea RDI,QWORD PTR [RIP+.L_657520]
            shl ECX,16
            shl EAX,24
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+6]
            shl ECX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+7]
            add EAX,ECX
            je .L_414e36

            mov EAX,EAX
            lea RDI,QWORD PTR [RDX+RAX*1]
.L_414e36:

            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            lea RSI,QWORD PTR [RSP+96]
            shl EAX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_415da0

            jmp .L_4149c7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414e58:

            mov R15,QWORD PTR [RSP+80]
.L_414e5d:

            add R15,1
            cmp QWORD PTR [RSP+72],R15
            je .L_414f70

            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            jmp .L_414900
          .byte 0x66
          .byte 0x90
.L_414e80:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EBP,SI
            je .L_414e5d

            mov RBX,QWORD PTR [R12]
            mov R11,QWORD PTR [R12+8]
            lea R9,QWORD PTR [RAX+4]
            mov R10,QWORD PTR [R12+16]
            xor EDI,EDI
            mov R8D,1
            jmp .L_414ec0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414eb8:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_414ec0:

            shl EDX,8
            mov R14,R8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657520]
            movzx EDX,DX
            cmp EDI,EDX
            cmovb RCX,R9
            add EDI,1
            add R9,2
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            mov ECX,ESI
            shr ESI,9
            shr ECX,4
            shl R14,CL
            mov ECX,EDX
            mov RDX,R8
            or RBX,R14
            mov R14,R8
            shl R14,CL
            mov ECX,ESI
            mov QWORD PTR [R12],RBX
            shl RDX,CL
            or R11,R14
            or R10,RDX
            cmp EBP,EDI
            mov QWORD PTR [R12+8],R11
            mov QWORD PTR [R12+16],R10
            jne .L_414eb8

            jmp .L_414e5d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414f30:

            mov EAX,DWORD PTR [RSP+64]
            mov R12,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+88]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            mov BYTE PTR [R12+4],1
            je .L_414962

            xor EAX,EAX
            lock cmpxchg QWORD PTR [R15+32],R12
            je .L_4145b5

            mov RDI,R12
            call .L_4138a0

            jmp .L_4145a5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414f70:

            add DWORD PTR [RSP+64],1
            jmp .L_414800
.L_414f7a:

            call __stack_chk_fail@PLT
.L_414f7f:

            nop
.L_414f80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_414f8e:

            cmp RDI,QWORD PTR [RSI+8]
            jb .L_41554b

            mov R13,RDI
            mov RDI,QWORD PTR [RSI+24]
            mov R12,RSI
            cmp R13,RDI
            ja .L_41554b

            lea R14,QWORD PTR [R13+2]
            cmp RDI,R14
            ja .L_41554b

            movzx R15D,BYTE PTR [RSI+32]
            test R15B,R15B
            jne .L_415240

            mov RAX,QWORD PTR [RSI+16]
            mov EBP,ECX
            mov ECX,R14D
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_415240

            xor ESI,ESI
            mov RBX,RDX
            mov RDX,RCX
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_415249

            test R13,R13
            je .L_415249

            cmp EBP,1
            jbe .L_415530

            mov EDI,DWORD PTR [RBX]
            mov ESI,2
            mov ECX,1
            mov R8D,1
            jmp .L_415062
.L_415030:

            cmp EDI,ECX
            jbe .L_41508b

            mov RDX,QWORD PTR [RBX+8]
            mov EAX,1
.L_41503d:

            lea R9,QWORD PTR [RDX+RSI*1]
            movzx EDX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EDX,8
            add EDX,R9D
            movzx EDX,DX
            cmp EAX,EDX
            jne .L_41508b

            add ECX,1
            add RSI,2
            cmp EBP,ECX
            je .L_41509a
.L_415062:

            lea EAX,DWORD PTR [RCX-1]
            cmp EDI,EAX
            jbe .L_415030

            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RSI*1-2]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            add EAX,1
            cmp EDI,ECX
            ja .L_41503d
.L_41508b:

            add ECX,1
            add R8D,1
            add RSI,2
            cmp EBP,ECX
            jne .L_415062
.L_41509a:

            lea EDX,DWORD PTR [R8+R8*2]
.L_41509e:

            lea EAX,DWORD PTR [RBP+RBP*1]
            cmp EAX,EDX
            jae .L_415200

            mov EAX,256
            mov WORD PTR [R13],AX
            cmp QWORD PTR [R12+8],R13
            ja .L_415589

            mov RDI,QWORD PTR [R12+24]
            cmp RDI,R13
            jb .L_415589

            lea RCX,QWORD PTR [R13+4]
            cmp RDI,RCX
            ja .L_415589

            cmp BYTE PTR [R12+32],0
            jne .L_415240

            mov RAX,QWORD PTR [R12+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_415240

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_415249

            test R13,R13
            je .L_415249

            mov EAX,EBP
            movzx EDX,BPL
            mov BYTE PTR [R13+3],BPL
            shr AX,8
            mov BYTE PTR [R13+2],AL
            shl EAX,8
            add EAX,EDX
            cmp R14,QWORD PTR [R12+8]
            movzx EAX,AX
            lea R13D,DWORD PTR [RAX+RAX*1+2]
            jbe .L_41556a

            mov RDI,QWORD PTR [R12+24]
            cmp R14,RDI
            ja .L_41556a

            add R13,R14
            cmp RDI,R13
            ja .L_41556a

            cmp BYTE PTR [R12+32],0
            jne .L_415240

            mov RAX,QWORD PTR [R12+16]
            sub R13D,EDI
            sub RAX,RDI
            cmp RAX,R13
            jl .L_415240

            mov RDX,R13
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            add R13,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],R13
            je .L_415249

            test R14,R14
            je .L_415249

            test EBP,EBP
            je .L_4152b0

            lea ESI,DWORD PTR [RBP-1]
            xor EAX,EAX
            add RSI,1
            jmp .L_4151eb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4151d0:

            xor EDX,EDX
            xor ECX,ECX
.L_4151d4:

            mov BYTE PTR [R14+RAX*2+2],CL
            mov BYTE PTR [R14+RAX*2+3],DL
            add RAX,1
            cmp RSI,RAX
            je .L_4152b0
.L_4151eb:

            cmp DWORD PTR [RBX],EAX
            jbe .L_4151d0

            mov RDX,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RDX+RAX*2]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            jmp .L_4151d4
.L_415200:

            mov EDX,512
            mov WORD PTR [R13],DX
            cmp R13,QWORD PTR [R12+8]
            jb .L_4155a8

            mov RDI,QWORD PTR [R12+24]
            cmp R13,RDI
            ja .L_4155a8

            lea RCX,QWORD PTR [R13+4]
            cmp RDI,RCX
            ja .L_4155a8

            cmp BYTE PTR [R12+32],0
            je .L_415260

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415240:

            mov BYTE PTR [R12+32],1
            xor R15D,R15D
.L_415249:

            add RSP,24
.L_41524d:

            mov EAX,R15D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415260:

            mov RAX,QWORD PTR [R12+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_415240

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_415249

            test R13,R13
            je .L_415249

            test EBP,EBP
            jne .L_4152d0

            xor EDI,EDI
            mov R15D,1
            mov WORD PTR [R13+2],DI
            jmp .L_415249

            nop
            nop
            nop
.L_4152b0:

            mov EAX,DWORD PTR [RBX]
            mov R15D,1
            cmp EBP,EAX
            cmova RBP,RAX
            sub EAX,EBP
            add RBP,RBP
            add QWORD PTR [RBX+8],RBP
            mov DWORD PTR [RBX],EAX
            jmp .L_415249
          .byte 0x66
          .byte 0x90
.L_4152d0:

            cmp EBP,1
            jbe .L_41553a

            mov EDI,DWORD PTR [RBX]
            mov ESI,2
            mov R8D,1
            mov ECX,1
            jmp .L_415321
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4152f0:

            cmp ECX,EDI
            jae .L_41534a

            mov RDX,QWORD PTR [RBX+8]
            mov EAX,1
.L_4152fd:

            add RDX,RSI
            movzx R9D,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl R9D,8
            add EDX,R9D
            movzx EDX,DX
            cmp EAX,EDX
            jne .L_41534a

            add ECX,1
            add RSI,2
            cmp EBP,ECX
            je .L_415359
.L_415321:

            lea EAX,DWORD PTR [RCX-1]
            cmp EDI,EAX
            jbe .L_4152f0

            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RSI*1-2]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            add EAX,1
            cmp ECX,EDI
            jb .L_4152fd
.L_41534a:

            add ECX,1
            add R8D,1
            add RSI,2
            cmp EBP,ECX
            jne .L_415321
.L_415359:

            mov EAX,R8D
            mov EDX,R8D
            movzx R8D,R8B
            shr AX,8
            mov ESI,EAX
            shl EAX,8
            add R8D,EAX
            movzx R8D,R8W
            lea EAX,DWORD PTR [R8+R8*2]
            lea ECX,DWORD PTR [RAX+RAX*1+2]
.L_41537b:

            mov BYTE PTR [R13+2],SIL
            mov BYTE PTR [R13+3],DL
            cmp R14,QWORD PTR [R12+8]
            jbe .L_4155c7

            mov RDI,QWORD PTR [R12+24]
            cmp R14,RDI
            ja .L_4155c7

            add RCX,R14
            cmp RDI,RCX
            ja .L_4155c7

            cmp BYTE PTR [R12+32],0
            jne .L_415240

            mov RAX,QWORD PTR [R12+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_415240

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+8],RCX
            call memset@PLT

            mov RAX,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [RSP+8]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [R12+24],RCX
            je .L_415249

            test R14,R14
            je .L_415249

            mov ESI,DWORD PTR [RBX]
            test ESI,ESI
            jne .L_415520

            xor EAX,EAX
            xor EDX,EDX
.L_415408:

            xor ECX,ECX
            cmp EBP,1
            mov BYTE PTR [R13+4],DL
            mov BYTE PTR [R13+5],AL
            mov WORD PTR [R13+8],CX
            jbe .L_4152b0

            mov ESI,2
            xor EDI,EDI
            mov ECX,1
            jmp .L_4154ab
          .byte 0x66
          .byte 0x90
.L_415430:

            cmp R8D,ECX
            jbe .L_4154e1

            mov RDX,QWORD PTR [RBX+8]
            mov EAX,1
.L_415442:

            add RDX,RSI
            movzx R9D,BYTE PTR [RDX]
            movzx R10D,BYTE PTR [RDX+1]
            mov EDX,R9D
            mov R8D,R10D
            shl EDX,8
            add EDX,R10D
            movzx EDX,DX
            cmp EAX,EDX
            je .L_415508

            add EDI,1
.L_415468:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R11,QWORD PTR [RAX+RAX*1]
            lea RDX,QWORD PTR [R14+R11*1+2]
            mov BYTE PTR [RDX],R9B
            mov BYTE PTR [RDX+1],R8B
            lea RDX,QWORD PTR [R14+R11*1+6]
            mov BYTE PTR [RDX],CH
            mov BYTE PTR [RDX+1],CL
            cmp DWORD PTR [RBX],ECX
            ja .L_4154f0

            xor EDX,EDX
            xor R8D,R8D
.L_415491:

            lea RAX,QWORD PTR [R14+R11*1+4]
            mov BYTE PTR [RAX],R8B
            mov BYTE PTR [RAX+1],DL
.L_41549c:

            add ECX,1
            add RSI,2
            cmp EBP,ECX
            je .L_4152b0
.L_4154ab:

            mov R8D,DWORD PTR [RBX]
            lea EAX,DWORD PTR [RCX-1]
            cmp EAX,R8D
            jae .L_415430

            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RSI*1-2]
            movzx EAX,BYTE PTR [R9]
            movzx R9D,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
            add EAX,1
            cmp R8D,ECX
            ja .L_415442
.L_4154e1:

            add EDI,1
            xor R8D,R8D
            xor R9D,R9D
            jmp .L_415468
          .byte 0x90
.L_4154f0:

            mov RDX,QWORD PTR [RBX+8]
            add RDX,RSI
            movzx R8D,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            jmp .L_415491
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415508:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [R14+RAX*2+4]
            mov BYTE PTR [RAX],R9B
            mov BYTE PTR [RAX+1],R10B
            jmp .L_41549c
          .byte 0x90
.L_415520:

            mov RAX,QWORD PTR [RBX+8]
            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            jmp .L_415408
.L_415530:

            mov EDX,3
            jmp .L_41509e
.L_41553a:

            mov ECX,8
            mov EDX,1
            xor ESI,ESI
            jmp .L_41537b
.L_41554b:

            lea RCX,QWORD PTR [RIP+.L_440a80]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_41556a:

            lea RCX,QWORD PTR [RIP+.L_4409c0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_441848]
            mov EDX,491
            call __assert_fail@PLT
.L_415589:

            lea RCX,QWORD PTR [RIP+.L_440a20]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_4155a8:

            lea RCX,QWORD PTR [RIP+.L_440960]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_4155c7:

            lea RCX,QWORD PTR [RIP+.L_4408e0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_441848]
            mov EDX,491
            call __assert_fail@PLT
.L_4155e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4155f0:

            push R15
            push R14
            mov RAX,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_415601:

            cmp RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSP+64],RDI
            mov RDI,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+104],RDX
            mov QWORD PTR [RSP+80],RCX
            mov DWORD PTR [RSP+100],R8D
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+32],RDI
            mov R13,QWORD PTR [RSP+184]
            jb .L_415d79

            mov RDI,QWORD PTR [RSI+24]
            mov RBP,RSI
            cmp RAX,RDI
            ja .L_415d79

            lea R12,QWORD PTR [RAX+6]
            cmp RDI,R12
            ja .L_415d79

            cmp BYTE PTR [RSI+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RSI+16]
            mov EBX,R12D
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_415ae8

            xor ESI,ESI
            mov RDX,RBX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RAX+RBX*1]
            test RAX,RAX
            mov QWORD PTR [RBP+24],RDI
            je .L_415aec

            mov RAX,QWORD PTR [RSP+64]
            test RAX,RAX
            je .L_415aec

            add RAX,4
            cmp RAX,QWORD PTR [RBP+8]
            mov QWORD PTR [RSP+72],RAX
            jb .L_415d5a

            cmp RAX,RDI
            ja .L_415d5a

            cmp RDI,R12
            ja .L_415d5a

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            sub R12D,EDI
            sub RAX,RDI
            cmp R12,RAX
            jg .L_415ae8

            mov RDX,R12
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add R12,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],R12
            je .L_415aec

            mov RCX,QWORD PTR [RSP+72]
            test RCX,RCX
            je .L_415aec

            mov EBX,DWORD PTR [RSP+100]
            mov RSI,QWORD PTR [RSP+64]
            mov EAX,EBX
            movzx EDX,BL
            mov BYTE PTR [RSI+5],BL
            shr AX,8
            mov BYTE PTR [RSI+4],AL
            shl EAX,8
            add EAX,EDX
            cmp RCX,QWORD PTR [RBP+8]
            movzx EAX,AX
            lea EBX,DWORD PTR [RAX+RAX*1+2]
            jbe .L_415d3b

            mov RDI,QWORD PTR [RBP+24]
            cmp RCX,RDI
            ja .L_415d3b

            add RBX,RCX
            cmp RDI,RBX
            ja .L_415d3b

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_415ae8

            xor ESI,ESI
            mov RDX,RBX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            lea R15,QWORD PTR [RAX+RBX*1]
            test RAX,RAX
            mov QWORD PTR [RBP+24],R15
            je .L_415aec

            mov EAX,DWORD PTR [RSP+100]
            test EAX,EAX
            je .L_415c2d

            sub EAX,1
            mov QWORD PTR [RSP+56],0
            add RAX,1
            mov QWORD PTR [RSP+88],RAX
.L_4157b3:

            mov RAX,R15
            sub RAX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            mov RCX,QWORD PTR [RSP+72]
            mov DWORD PTR [RSP+96],0
            mov EDX,EAX
            mov BYTE PTR [RCX+RSI*2+3],AL
            mov RAX,QWORD PTR [RSP+80]
            shr DX,8
            mov BYTE PTR [RCX+RSI*2+2],DL
            cmp DWORD PTR [RAX],ESI
            jbe .L_4157ef

            mov RAX,QWORD PTR [RAX+8]
            mov EAX,DWORD PTR [RAX+RSI*4]
            mov DWORD PTR [RSP+96],EAX
.L_4157ef:

            cmp QWORD PTR [RBP+8],R15
            ja .L_415d1c

            mov RDI,QWORD PTR [RBP+24]
            cmp RDI,R15
            jb .L_415d1c

            lea R12,QWORD PTR [R15+2]
            cmp RDI,R12
            ja .L_415d1c

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            mov EBX,R12D
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_415ae8

            xor ESI,ESI
            mov RDX,RBX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RAX+RBX*1]
            test RAX,RAX
            mov QWORD PTR [RBP+24],RDI
            je .L_415aec

            test R15,R15
            je .L_415aec

            cmp R15,QWORD PTR [RBP+8]
            jb .L_415cde

            cmp R15,RDI
            ja .L_415cde

            cmp RDI,R12
            ja .L_415cde

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            sub R12D,EDI
            sub RAX,RDI
            cmp RAX,R12
            jl .L_415ae8

            mov RDX,R12
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add R12,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],R12
            je .L_415aec

            test R15,R15
            je .L_415aec

            mov EBX,DWORD PTR [RSP+96]
            mov EAX,EBX
            movzx EDX,BL
            mov BYTE PTR [R15+1],BL
            shr AX,8
            mov BYTE PTR [R15],AL
            shl EAX,8
            add EAX,EDX
            cmp R15,QWORD PTR [RBP+8]
            movzx EAX,AX
            lea EBX,DWORD PTR [RAX+RAX*1+2]
            jbe .L_415cfd

            mov RDI,QWORD PTR [RBP+24]
            cmp R15,RDI
            ja .L_415cfd

            add RBX,R15
            cmp RDI,RBX
            ja .L_415cfd

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_415ae8

            mov RDX,RBX
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add RBX,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],RBX
            je .L_415aec

            mov EAX,DWORD PTR [RSP+96]
            test EAX,EAX
            je .L_415bdb

            sub EAX,1
            xor R12D,R12D
            mov QWORD PTR [RSP+40],R15
            add RAX,1
            mov QWORD PTR [RSP+48],RAX
            jmp .L_415a8e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415960:

            xor R15D,R15D
            xor R11D,R11D
.L_415966:

            cmp QWORD PTR [RBP+8],RBX
            ja .L_415c81

            mov RDI,QWORD PTR [RBP+24]
            cmp RDI,RBX
            jb .L_415c81

            lea RCX,QWORD PTR [RBX+4]
            cmp RDI,RCX
            ja .L_415c81

            cmp BYTE PTR [RBP+32],0
            mov BYTE PTR [RSP],R11B
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            mov R9D,ECX
            mov QWORD PTR [RSP+16],RCX
            sub R9D,EDI
            sub RAX,RDI
            cmp RAX,R9
            jl .L_415ae8

            mov RDX,R9
            xor ESI,ESI
            mov QWORD PTR [RSP+8],R9
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            mov R9,QWORD PTR [RSP+8]
            add R9,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],R9
            je .L_415aec

            test RBX,RBX
            je .L_415aec

            movzx R11D,BYTE PTR [RSP]
            mov BYTE PTR [RBX+1],R15B
            lea R15,QWORD PTR [RBX+2]
            mov BYTE PTR [RBX],R11B
            cmp R15,QWORD PTR [RBP+8]
            jb .L_415ca0

            mov RDI,QWORD PTR [RBP+24]
            cmp R15,RDI
            ja .L_415ca0

            mov RCX,QWORD PTR [RSP+16]
            cmp RDI,RCX
            ja .L_415ca0

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            sub ECX,EDI
            sub RAX,RDI
            cmp RAX,RCX
            jl .L_415ae8

            mov RDX,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP],RCX
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            mov RCX,QWORD PTR [RSP]
            add RCX,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],RCX
            je .L_415aec

            test R15,R15
            je .L_415aec

            mov EAX,R14D
            mov BYTE PTR [RBX+3],R14B
            shr AX,8
            test R14D,R14D
            mov BYTE PTR [RBX+2],AL
            jne .L_415b00

            add R12,1
            cmp QWORD PTR [RSP+48],R12
            mov RBX,QWORD PTR [RBP+24]
            je .L_415bdb
.L_415a8e:

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,RBX
            xor R14D,R14D
            mov EDX,R12D
            sub RAX,RSI
            mov ECX,EAX
            mov BYTE PTR [RSI+R12*2+3],AL
            mov RAX,QWORD PTR [RSP+32]
            shr CX,8
            mov BYTE PTR [RSI+R12*2+2],CL
            cmp DWORD PTR [RAX],R12D
            jbe .L_415ac1

            mov RAX,QWORD PTR [RAX+8]
            mov R14D,DWORD PTR [RAX+R12*4]
.L_415ac1:

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX],EDX
            jbe .L_415960

            mov RAX,QWORD PTR [RAX+8]
            lea RAX,QWORD PTR [RAX+R12*2]
            movzx R11D,BYTE PTR [RAX]
            movzx R15D,BYTE PTR [RAX+1]
            jmp .L_415966
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415ae8:

            mov BYTE PTR [RBP+32],1
.L_415aec:

            add RSP,120
.L_415af0:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415b00:

            shl EAX,8
            movzx EDX,R14B
            add EAX,EDX
            movzx EBX,AX
            add EBX,EBX
            test AX,AX
            mov EAX,2
            cmove RBX,RAX
            cmp R15,QWORD PTR [RBP+8]
            jbe .L_415cbf

            mov RDI,QWORD PTR [RBP+24]
            cmp R15,RDI
            ja .L_415cbf

            add RBX,R15
            cmp RDI,RBX
            ja .L_415cbf

            cmp BYTE PTR [RBP+32],0
            jne .L_415ae8

            mov RAX,QWORD PTR [RBP+16]
            sub EBX,EDI
            sub RAX,RDI
            cmp RAX,RBX
            jl .L_415ae8

            mov RDX,RBX
            xor ESI,ESI
            call memset@PLT

            mov RAX,QWORD PTR [RBP+24]
            add RBX,RAX
            test RAX,RAX
            mov QWORD PTR [RBP+24],RBX
            je .L_415aec

            mov ESI,R14D
            sub ESI,1
            je .L_415bb4

            lea EDI,DWORD PTR [R14-2]
            xor EAX,EAX
            add RDI,1
            jmp .L_415b97
          .byte 0x90
.L_415b80:

            xor EDX,EDX
            xor ECX,ECX
.L_415b84:

            mov BYTE PTR [R15+RAX*2+2],CL
            mov BYTE PTR [R15+RAX*2+3],DL
            add RAX,1
            cmp RDI,RAX
            je .L_415bb0
.L_415b97:

            cmp DWORD PTR [R13],EAX
            jbe .L_415b80

            mov RDX,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RDX+RAX*2]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            jmp .L_415b84
          .byte 0x66
          .byte 0x90
.L_415bb0:

            mov RBX,QWORD PTR [RBP+24]
.L_415bb4:

            mov EAX,DWORD PTR [R13]
            cmp EAX,ESI
            cmovbe ESI,EAX
            add R12,1
            sub EAX,ESI
            mov ESI,ESI
            add RSI,RSI
            add QWORD PTR [R13+8],RSI
            cmp QWORD PTR [RSP+48],R12
            mov DWORD PTR [R13],EAX
            jne .L_415a8e
.L_415bdb:

            mov RCX,QWORD PTR [RSP+24]
            mov R15,RBX
            mov EBX,DWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RCX]
            mov EAX,EBX
            cmp EBX,EDX
            cmova RAX,RDX
            sub EDX,EAX
            add RAX,RAX
            add QWORD PTR [RCX+8],RAX
            mov DWORD PTR [RCX],EDX
            mov EDX,DWORD PTR [RDI]
            mov EAX,EBX
            cmp EBX,EDX
            cmova RAX,RDX
            add QWORD PTR [RSP+56],1
            sub EDX,EAX
            shl RAX,2
            add QWORD PTR [RDI+8],RAX
            mov RAX,QWORD PTR [RSP+56]
            cmp QWORD PTR [RSP+88],RAX
            mov DWORD PTR [RDI],EDX
            jne .L_4157b3
.L_415c2d:

            mov RBX,QWORD PTR [RSP+80]
            mov ECX,DWORD PTR [RSP+100]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,DWORD PTR [RBX]
            mov EAX,ECX
            cmp ECX,EDX
            cmova RAX,RDX
            sub EDX,EAX
            shl RAX,2
            add QWORD PTR [RBX+8],RAX
            mov RAX,R15
            mov DWORD PTR [RBX],EDX
            sub RAX,RDI
            mov EDX,EAX
            mov BYTE PTR [RDI+3],AL
            shr DX,8
            mov BYTE PTR [RDI+2],DL
            mov RDX,QWORD PTR [RSP+104]
            add RSP,120
.L_415c6f:

            pop RBX
            mov RDI,R15
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_414f80
.L_415c81:

            lea RCX,QWORD PTR [RIP+.L_4403e0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_415ca0:

            lea RCX,QWORD PTR [RIP+.L_440360]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_415cbf:

            lea RCX,QWORD PTR [RIP+.L_440300]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_441848]
            mov EDX,491
            call __assert_fail@PLT
.L_415cde:

            lea RCX,QWORD PTR [RIP+.L_440500]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_415cfd:

            lea RCX,QWORD PTR [RIP+.L_440440]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_441848]
            mov EDX,491
            call __assert_fail@PLT
.L_415d1c:

            lea RCX,QWORD PTR [RIP+.L_4405c0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_415d3b:

            lea RCX,QWORD PTR [RIP+.L_440620]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_441848]
            mov EDX,491
            call __assert_fail@PLT
.L_415d5a:

            lea RCX,QWORD PTR [RIP+.L_4406e0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_415d79:

            lea RCX,QWORD PTR [RIP+.L_4407a0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_4417e0]
            mov EDX,482
            call __assert_fail@PLT
.L_415d98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415da0:

            lea RCX,QWORD PTR [RIP+.L_4418ac]
            lea RSI,QWORD PTR [RIP+.L_657520]
.L_415dae:

            cmp EDX,8
            ja .L_415e0e

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_415dc0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
.L_415dcc:

            cmp AX,1
            jne .L_415e0e
.L_415dd2:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
.L_415ddd:

            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657520]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415df8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_415ee0
.L_415e0e:

            lea RAX,QWORD PTR [RIP+.L_657520]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415e20:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_415dd2

            cmp AX,2
            je .L_415dd2

            jmp .L_415e0e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415e40:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_415dd2

            cmp AX,3
            jne .L_415dcc

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RSI,QWORD PTR [RIP+.L_657520]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDX,QWORD PTR [RDI+RAX*2+4]
            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            add RDX,2
            shl ECX,8
            add CX,AX
            cmove RDX,RSI
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx EAX,DX
            add RDI,RAX
            test DX,DX
            mov RAX,RSI
            cmovne RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415eb0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_415dd2

            cmp AX,3
            jne .L_415dcc

            movzx EDX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            shl EDX,8
            jmp .L_415ddd
.L_415ee0:

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RDI
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RDI+2]
            movzx EDI,BYTE PTR [RDI+3]
            cmove RAX,RSI
            shl EDX,8
            add EDX,EDI
            mov RDI,RAX
            movzx EDX,DX
            jmp .L_415dae
.L_415f27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415f30:

            mov RCX,QWORD PTR [RDI+1064]
            test RCX,RCX
            je .L_415f73

            mov EDX,DWORD PTR [RSI+184]
            mov RAX,QWORD PTR [RSI+200]
            test EDX,EDX
            je .L_415f73

            sub EDX,1
            lea RDX,QWORD PTR [RDX+RDX*4+5]
            lea RSI,QWORD PTR [RAX+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415f60:

            movzx EDX,BYTE PTR [RAX+18]
            mov EDX,DWORD PTR [RCX+RDX*4]
            or DWORD PTR [RAX+4],EDX
            add RAX,20
            cmp RAX,RSI
            jne .L_415f60
.L_415f73:

            ret 
.L_415f75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415f80:

            push RBX
            xor EDX,EDX
            mov RBX,RDI
            sub RSP,16
.L_415f8a:

            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_408610

            xor EDX,EDX
            test EAX,EAX
            je .L_415fbb

            mov ESI,DWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_4086c0

            test EAX,EAX
            sete DL
.L_415fbb:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_415fd3

            add RSP,16
.L_415fd1:

            pop RBX
            ret 
.L_415fd3:

            call __stack_chk_fail@PLT
.L_415fd8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415fe0:

            jmp free@PLT
.L_415fe5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415ff0:

            push R12
            push RBP
            mov ESI,16
            push RBX
.L_415ff9:

            mov RBX,RDI
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_4160af

            lea R12,QWORD PTR [RIP+.L_441940]
            mov R10,QWORD PTR [RBX+64]
            mov EBP,DWORD PTR [RBX+56]
            xor R9D,R9D
            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_416028:

            mov R11,RBP
            xor ESI,ESI
.L_41602d:

            cmp RSI,R11
            jae .L_41606f

            lea RCX,QWORD PTR [RSI+R11*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_41606a

            jmp .L_416088
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416050:

            lea RDX,QWORD PTR [RCX+RSI*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp R9D,EDI
            jae .L_416090

            mov RCX,RDX
.L_41606a:

            cmp RCX,RSI
            ja .L_416050
.L_41606f:

            xor EDX,EDX
            mov DWORD PTR [RAX+RBX*1],EDX
            add RBX,4
            cmp RBX,16
            je .L_4160af
.L_41607e:

            mov R9D,DWORD PTR [R12+RBX*1]
            jmp .L_416028
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416088:

            mov RDX,RCX
            mov RCX,R11
            nop
            nop
.L_416090:

            cmp R9D,EDI
            jbe .L_41609e

            lea RSI,QWORD PTR [RDX+1]
            mov R11,RCX
            jmp .L_41602d
.L_41609e:

            mov EDX,DWORD PTR [R8+28]
            mov DWORD PTR [RAX+RBX*1],EDX
            add RBX,4
            cmp RBX,16
            jne .L_41607e
.L_4160af:

            pop RBX
.L_4160b0:

            pop RBP
            pop R12
            ret 
.L_4160b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4160c0:

            add RDI,48
            mov ECX,1
            xor EDX,EDX
            mov ESI,1667329140
            jmp .L_43ce20
.L_4160d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4160e0:

            push RBX
            lea RBX,QWORD PTR [RDI+48]
            xor ECX,ECX
            mov EDX,1
            mov ESI,1818914159
            mov RDI,RBX
            call .L_43ce20

            mov RDI,RBX
            xor ECX,ECX
            mov EDX,1
            mov ESI,1986686319
            call .L_43ce20

            mov RDI,RBX
            xor ECX,ECX
            mov EDX,1
            pop RBX
            mov ESI,1953131887
            jmp .L_43ce20
.L_416122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416130:

            push R15
            push R14
            mov RDI,RSI
            push R13
            push R12
            xor R13D,R13D
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,104
.L_41614a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_402730

            lea RCX,QWORD PTR [RSP+60]
            lea RDI,QWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RBX+184]
            mov DWORD PTR [RBX+180],0
            xor EAX,EAX
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP+8],RCX
            lea RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+24],RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4161a0:

            cmp R14D,EAX
            jbe .L_416540
.L_4161a9:

            cmp BYTE PTR [RBX+176],0
            jne .L_416540

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RCX+RDX*4]
            mov R15D,DWORD PTR [RSI]
            lea EDX,DWORD PTR [R15-12334]
            cmp EDX,1
            jbe .L_416610

            lea EDI,DWORD PTR [R15-4352]
            mov R13D,DWORD PTR [RBX+188]
            cmp EDI,95
            jbe .L_416430

            lea EDX,DWORD PTR [R15-43360]
            cmp EDX,28
            jbe .L_416430
.L_416201:

            lea R12D,DWORD PTR [R15-44032]
            cmp R12D,11171
            ja .L_416592

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+60],0
            mov EDX,R15D
            mov RSI,QWORD PTR [RBP+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            mov DWORD PTR [RSP+16],EAX
            mov EAX,3739835469
            mul R12D
            shr EDX,9
            imul EAX,EDX,588
            mov R10D,EDX
            mov EDX,613566757
            sub R12D,EAX
            mov R11D,R12D
            shr R11D,2
            mov EAX,R11D
            mul EDX
            imul EAX,EDX,28
            mov R11D,EDX
            sub R12D,EAX
            jne .L_4165b0

            mov EAX,DWORD PTR [RBX+180]
            add EAX,1
            cmp EAX,R14D
            jae .L_4165b0

            mov RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EAX,DWORD PTR [RAX]
            lea EDX,DWORD PTR [RAX-4520]
            cmp EDX,26
            ja .L_4162ff

            lea EDX,DWORD PTR [RAX+R15*1-4519]
            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+44],R11D
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+60],0
            mov RDI,RBP
            mov DWORD PTR [RSP+56],EDX
            mov RSI,QWORD PTR [RBP+160]
            mov R8,QWORD PTR [RAX+136]
            mov RCX,QWORD PTR [RSP+8]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+40]
            mov R11D,DWORD PTR [RSP+44]
            jne .L_416bd0
.L_4162ff:

            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_416d60

            nop
            nop
            nop
            nop
            nop
.L_416310:

            lea EAX,DWORD PTR [R12+4519]
            lea EDX,DWORD PTR [R10+4352]
            add R11D,4449
            mov DWORD PTR [RSP+68],R11D
            mov DWORD PTR [RSP+60],0
            mov RDI,RBP
            mov DWORD PTR [RSP+72],EAX
            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+64],EDX
            mov RSI,QWORD PTR [RBP+160]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_416588

            mov RAX,QWORD PTR [RBP+152]
            mov R15,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov DWORD PTR [RSP+60],0
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,DWORD PTR [RSP+68]
            mov R8,QWORD PTR [RAX+136]
            mov RCX,R15
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_416588

            test R12D,R12D
            je .L_416928

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+60],0
            mov RCX,R15
            mov RSI,QWORD PTR [RBP+160]
            mov EDX,DWORD PTR [RSP+72]
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_416588

            mov RCX,QWORD PTR [RSP+24]
            mov EDX,3
            mov ESI,1
            mov RDI,RBX
            call .L_402850

            cmp BYTE PTR [RBX+176],0
            je .L_416a70

            nop
            nop
            nop
            nop
            nop
            nop
.L_416408:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416e65

            add RSP,104
.L_416420:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416430:

            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,R14D
            jae .L_416201

            lea RDX,QWORD PTR [RDX+RDX*4]
            mov R8D,DWORD PTR [RCX+RDX*4]
            lea EDX,DWORD PTR [R8-4448]
            cmp EDX,71
            jbe .L_416460

            lea EDX,DWORD PTR [R8-55216]
            cmp EDX,22
            ja .L_416592
.L_416460:

            add EAX,2
            cmp EAX,R14D
            jae .L_416492

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov R12D,DWORD PTR [RCX+RAX*4]
            lea EDX,DWORD PTR [R12-4520]
            cmp EDX,87
            jbe .L_416550

            lea EAX,DWORD PTR [R12-55243]
            cmp EAX,48
            jbe .L_416550
.L_416492:

            cmp EDI,18
            ja .L_4166a8

            lea EDX,DWORD PTR [R8-4449]
            xor EAX,EAX
            xor R12D,R12D
            cmp EDX,20
            ja .L_4166b0
.L_4164b0:

            imul R9D,R15D,588
            mov DWORD PTR [RSP+60],0
            mov RSI,QWORD PTR [RBP+160]
            imul R8D,R8D,28
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RBP
            lea EDX,DWORD PTR [R9+R8*1-2639516]
            add EDX,EAX
            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+56],EDX
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_416af0

            xor ESI,ESI
            mov RCX,QWORD PTR [RSP+32]
            test R12D,R12D
            setne SIL
            mov EDX,1
            mov RDI,RBX
            add ESI,2
            call .L_402850

            cmp BYTE PTR [RBX+176],0
            jne .L_416408

            lea EAX,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],EAX
            mov EAX,DWORD PTR [RBX+180]
.L_416535:

            cmp R14D,EAX
            ja .L_4161a9

            nop
            nop
.L_416540:

            mov RDI,RBX
            call .L_4027c0

            jmp .L_416408
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416550:

            cmp EDI,18
            lea EAX,DWORD PTR [R12-4519]
            ja .L_4166b0

            lea ECX,DWORD PTR [R8-4449]
            cmp ECX,20
            ja .L_4166b0

            test R12D,R12D
            jne .L_416a88

            mov EAX,4294962777
            jmp .L_4164b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416588:

            mov R11D,DWORD PTR [RSP+16]
            test R11D,R11D
            jne .L_4165bc
.L_416592:

            cmp BYTE PTR [RBX+177],0
            jne .L_4165d0
.L_41659b:

            mov EAX,DWORD PTR [RBX+180]
.L_4165a1:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_4161a0
          .byte 0x90
.L_4165b0:

            mov EDX,DWORD PTR [RSP+16]
            test EDX,EDX
            je .L_416310
.L_4165bc:

            cmp BYTE PTR [RBX+177],0
            lea EAX,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],EAX
            je .L_41659b

            nop
            nop
            nop
.L_4165d0:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_416820
.L_4165e4:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_416aa0

            nop
            nop
.L_416600:

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4161a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416610:

            cmp R13D,DWORD PTR [RSP+20]
            jb .L_416b10
.L_41661b:

            mov RAX,QWORD PTR [RBP+152]
            mov DWORD PTR [RSP+60],0
            mov EDX,9676
            mov RSI,QWORD PTR [RBP+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_416730

            mov ESI,R15D
            mov RDI,RBP
            call .L_415f80

            test AL,AL
            jne .L_416848

            mov DWORD PTR [RSP+64],R15D
            mov DWORD PTR [RSP+68],9676
.L_416673:

            mov RCX,QWORD PTR [RSP+24]
            mov EDX,2
            mov ESI,1
            mov RDI,RBX
            call .L_402850

            mov EAX,DWORD PTR [RBX+180]
            mov R13D,DWORD PTR [RBX+188]
.L_416697:

            mov DWORD PTR [RSP+20],R13D
            jmp .L_4161a0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4166a8:

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
.L_4166b0:

            mov BYTE PTR [RSI+18],1
            cmp BYTE PTR [RBX+177],0
            jne .L_4167e0

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
.L_4166ce:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_4166d7:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov BYTE PTR [RDX+RAX*4+18],2
            cmp BYTE PTR [RBX+177],0
            jne .L_416760

            mov EAX,DWORD PTR [RBX+180]
.L_4166ef:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_4166f8:

            lea EAX,DWORD PTR [R13+2]
            test R12D,R12D
            mov DWORD PTR [RSP+20],EAX
            jne .L_4168e0
.L_416709:

            mov ECX,DWORD PTR [RBX+124]
            test ECX,ECX
            jne .L_416600

            mov EDX,DWORD PTR [RSP+20]
            mov ESI,R13D
            mov RDI,RBX
            call .L_402f00

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4161a0
          .byte 0x66
          .byte 0x90
.L_416730:

            cmp BYTE PTR [RBX+177],0
            jne .L_416860

            mov R13D,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_41674a:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_416697
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416760:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_416c10
.L_416774:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_4166f8

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R10,QWORD PTR [RBX+200]
            mov R9,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R10+RDX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_416c24
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4167e0:

            mov RDX,QWORD PTR [RBX+208]
            cmp RDX,QWORD PTR [RBX+200]
            je .L_416c38
.L_4167f4:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_416d08

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            jmp .L_4166d7
.L_416820:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_4165e4

            mov EAX,EDX
.L_416834:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_4165a1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416848:

            mov DWORD PTR [RSP+64],9676
            mov DWORD PTR [RSP+68],R15D
            jmp .L_416673
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416860:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_416c60
.L_416874:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_416bb8

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov R13D,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_416c77
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4168e0:

            mov EAX,DWORD PTR [RBX+180]
            mov R8,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov BYTE PTR [RAX+18],3
            cmp BYTE PTR [RBX+177],0
            jne .L_4169f0

            mov EAX,DWORD PTR [RBX+180]
.L_41690c:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_416915:

            lea EAX,DWORD PTR [R13+3]
            mov DWORD PTR [RSP+20],EAX
            jmp .L_416709
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416928:

            mov RCX,QWORD PTR [RSP+24]
            mov EDX,2
            mov ESI,1
            mov RDI,RBX
            call .L_402850

            cmp BYTE PTR [RBX+176],0
            jne .L_416408

            mov R10D,DWORD PTR [RSP+16]
            mov R12,QWORD PTR [RBX+208]
            mov EAX,2
            test R10D,R10D
            jne .L_4169c0
.L_416962:

            lea EDI,DWORD PTR [RAX+R13*1]
            mov EAX,R13D
            lea EDX,DWORD PTR [R13+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+20],EDI
            mov BYTE PTR [R12+RAX*4+18],1
            lea EAX,DWORD PTR [R13+2]
            mov BYTE PTR [R12+RDX*4+18],2
            cmp EDI,EAX
            jbe .L_416997

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov BYTE PTR [R12+RAX*4+18],3
.L_416997:

            mov EDI,DWORD PTR [RBX+124]
            test EDI,EDI
            jne .L_416600

            mov EDX,DWORD PTR [RSP+20]
            mov ESI,R13D
            mov RDI,RBX
            call .L_402f00

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_4161a0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4169c0:

            cmp BYTE PTR [RBX+177],0
            jne .L_416c90

            mov EAX,DWORD PTR [RBX+180]
.L_4169d3:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_4169dc:

            mov EAX,3
            jmp .L_416962
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4169f0:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_416da5
.L_416a04:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_416915

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_416db9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416a70:

            mov R12,QWORD PTR [RBX+208]
            mov EAX,3
            jmp .L_416962
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416a88:

            cmp EDX,26
            jbe .L_4164b0

            jmp .L_4166b0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416aa0:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RSI,QWORD PTR [RBX+200]
            mov RCX,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_416834
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416af0:

            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RAX+RDX*4]
            jmp .L_4166b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416b10:

            mov EDI,DWORD PTR [RSP+20]
            cmp DWORD PTR [RBX+188],EDI
            jne .L_41661b

            cmp BYTE PTR [RBX+177],0
            je .L_416b9c

            cmp QWORD PTR [RBX+208],RCX
            jne .L_416b3a

            cmp EDI,EAX
            je .L_416e5c
.L_416b3a:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_416ba5

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_416b93:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
.L_416b9c:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_416ba5:

            mov ESI,R15D
            mov RDI,RBP
            call .L_415f80

            test AL,AL
            je .L_416de0
.L_416bb8:

            mov EAX,DWORD PTR [RBX+180]
            mov R13D,DWORD PTR [RBX+188]
            jmp .L_416697
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416bd0:

            mov RCX,QWORD PTR [RSP+32]
            mov EDX,1
            mov ESI,2
            mov RDI,RBX
            call .L_402850

            cmp BYTE PTR [RBX+176],0
            jne .L_416408

            lea EAX,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],EAX
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_416535
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c10:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_416774

            mov EAX,EDX
.L_416c24:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_4166ef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416c38:

            mov ECX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],ECX
            jne .L_4167f4

            mov EAX,ECX
.L_416c4c:

            add ECX,1
            mov DWORD PTR [RBX+188],ECX
            jmp .L_4166ce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416c60:

            mov R13D,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],R13D
            jne .L_416874

            mov EAX,R13D
.L_416c77:

            add R13D,1
            mov DWORD PTR [RBX+188],R13D
            jmp .L_41674a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c90:

            cmp R12,QWORD PTR [RBX+200]
            je .L_416dc7
.L_416c9d:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_4169dc

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R9,QWORD PTR [RBX+200]
            mov R8,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_416cfa:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_4169d3
.L_416d08:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R15,QWORD PTR [RBX+200]
            mov R11,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R15+RDX*4]
            lea RAX,QWORD PTR [R11+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            jmp .L_416c4c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416d60:

            mov EAX,DWORD PTR [RBX+180]
            add EAX,1
            cmp EAX,R14D
            jae .L_4165bc

            mov R15,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R15+RAX*4]
            mov EAX,DWORD PTR [RAX]
            lea EDX,DWORD PTR [RAX-4520]
            cmp EDX,87
            jbe .L_416310

            sub EAX,55243
            cmp EAX,48
            jbe .L_416310

            jmp .L_4165bc
.L_416da5:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_416a04

            mov EAX,EDX
.L_416db9:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_41690c
.L_416dc7:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_416c9d

            mov EAX,EDX
            jmp .L_416cfa
.L_416de0:

            mov R15D,DWORD PTR [RSP+20]
            mov ESI,R13D
            mov RDI,RBX
            lea EDX,DWORD PTR [R15+1]
            call .L_402f00

            mov RAX,QWORD PTR [RBX+208]
            mov EDX,R15D
            lea ECX,DWORD PTR [R13+1]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            lea RDI,QWORD PTR [RAX+RCX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSP+64],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RSP+80],EDX
            mov EDX,R13D
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R12,QWORD PTR [RAX+RDX*4]
            mov EDX,R15D
            sub EDX,R13D
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov RSI,R12
            shl RDX,2
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [R12],XMM0
            mov EAX,DWORD PTR [RSP+80]
            mov DWORD PTR [R12+16],EAX
            jmp .L_416bb8
.L_416e5c:

            mov EDX,DWORD PTR [RSP+20]
            jmp .L_416b93
.L_416e65:

            call __stack_chk_fail@PLT
.L_416e6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416e70:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,ESI
            mov EBX,EDX
            mov R12,RCX
            sub RSP,8
.L_416e84:

            test ESI,ESI
            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RCX],0
            je .L_416f20

            test EDX,EDX
            je .L_416f20

            mov R8,QWORD PTR [RAX+232]
            mov RDI,RAX
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne AL
            jne .L_416f15

            mov RDX,QWORD PTR [R13]
            test BYTE PTR [RDX+1092],4
            jne .L_416f15

            nop
            nop
            nop
            nop
            nop
            nop
.L_416ec8:

            sub EBX,1460
            cmp EBX,14
            ja .L_416f15

            lea RCX,QWORD PTR [RIP+.L_441960]
            movsxd RDX,DWORD PTR [RCX+RBX*4]
            add RDX,RCX
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416ee8:

            cmp EBP,1499
            je .L_4170b4

            cmp EBP,1508
            je .L_4170a2

            cmp EBP,1489
            jne .L_416f15

            mov DWORD PTR [R12],64332
            mov EAX,1
.L_416f15:

            add RSP,8
.L_416f19:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_416f20:

            mov RDX,QWORD PTR [R13]
            xor EAX,EAX
            test BYTE PTR [RDX+1092],4
            je .L_416ec8

            jmp .L_416f15
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416f38:

            cmp EBP,1513
            je .L_417078

            cmp EBP,64329
            jne .L_416f15
.L_416f4c:

            mov DWORD PTR [R12],64301
            mov EAX,1
            jmp .L_416f15
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416f60:

            cmp EBP,1497
            jne .L_416f15

            mov DWORD PTR [R12],64285
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416f80:

            cmp EBP,1522
            je .L_417090

            cmp EBP,1488
            jne .L_416f15

            mov DWORD PTR [R12],64302
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416fb0:

            cmp EBP,1488
            jne .L_416f15

            mov DWORD PTR [R12],64303
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0x90
.L_416fd0:

            cmp EBP,1493
            jne .L_416f15

            mov DWORD PTR [R12],64331
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0x90
.L_416ff0:

            lea EDX,DWORD PTR [RBP-1488]
            cmp EDX,26
            jbe .L_417040

            cmp EBP,64298
            je .L_41702c

            cmp EBP,64299
            jne .L_416f15

            jmp .L_416f4c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417018:

            cmp EBP,1513
            je .L_417060

            cmp EBP,64329
            jne .L_416f15
.L_41702c:

            mov DWORD PTR [R12],64300
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0x90
.L_417040:

            lea RAX,QWORD PTR [RIP+.L_4419a0]
            mov EAX,DWORD PTR [RAX+RDX*4]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            setne AL
            jmp .L_416f15
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417060:

            mov DWORD PTR [R12],64298
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417078:

            mov DWORD PTR [R12],64299
            mov EAX,1
            jmp .L_416f15
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417090:

            mov DWORD PTR [R12],64287
            mov EAX,1
            jmp .L_416f15
.L_4170a2:

            mov DWORD PTR [R12],64334
            mov EAX,1
            jmp .L_416f15
.L_4170b4:

            mov DWORD PTR [R12],64333
            mov EAX,1
            jmp .L_416f15
.L_4170c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4170d0:

            mov RCX,QWORD PTR [RDX+200]
            mov EDX,DWORD PTR [RDX+184]
            test EDX,EDX
            je .L_417104

            sub EDX,1
            lea RAX,QWORD PTR [RCX+15]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4170f8:

            mov BYTE PTR [RAX],0
            add RAX,20
            cmp RAX,RDX
            jne .L_4170f8
.L_417104:

            ret 
.L_417106:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417110:

            jmp free@PLT
.L_417115:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417120:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RIP+.L_6572a8]
            test EAX,EAX
            jne .L_417138

            call .L_4056a0
.L_417138:

            test BYTE PTR [RIP+.L_6572a8],2
            lea RBP,QWORD PTR [RBX+48]
            je .L_41714e

            cmp DWORD PTR [RBX+12],1265134962
            je .L_417170
.L_41714e:

            add RSP,8
            mov RDI,RBP
            mov ECX,1
            pop RBX
            pop RBP
            xor EDX,EDX
            mov ESI,1818847073
            jmp .L_43ce20
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417170:

            mov ECX,1
            xor EDX,EDX
            mov ESI,1801810542
            mov RDI,RBP
            call .L_43ce20

            jmp .L_41714e
.L_417186:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417190:

            push R12
            push RBP
            lea RBP,QWORD PTR [RDI+48]
            push RBX
.L_417198:

            lea RDX,QWORD PTR [RIP+.L_4172c0]
            xor ESI,ESI
            mov RDI,RBP
            lea RBX,QWORD PTR [RIP+.L_446348]
            call .L_43d020

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBP
            lea R12,QWORD PTR [RBX+88]
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBP
            call .L_43ce20

            lea RDX,QWORD PTR [RIP+.L_41b5f0]
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            mov ESI,1853188980
            mov ECX,1
            jmp .L_417209
          .byte 0x90
.L_417200:

            mov ECX,DWORD PTR [RBX+4]
            mov ESI,DWORD PTR [RBX]
            add RBX,8
.L_417209:

            or ECX,4
            mov EDX,1
            mov RDI,RBP
            call .L_43ce20

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            cmp RBX,R12
            jne .L_417200

            lea RDX,QWORD PTR [RIP+.L_418b80]
            lea RBX,QWORD PTR [RIP+.L_4463a8]
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            lea R12,QWORD PTR [RBX+64]
            mov ESI,1768843636
            xor ECX,ECX
            jmp .L_417259
          .byte 0x90
.L_417250:

            mov ECX,DWORD PTR [RBX+4]
            mov ESI,DWORD PTR [RBX]
            add RBX,8
.L_417259:

            or ECX,4
            mov EDX,1
            mov RDI,RBP
            call .L_43ce20

            cmp R12,RBX
            jne .L_417250

            mov RDI,RBP
            mov ECX,1
            mov EDX,1
            mov ESI,1667329140
            call .L_43ce20

            mov RDI,RBP
            mov EDX,1
            mov ESI,1668049255
            mov ECX,1
            call .L_43ce20

            pop RBX
.L_41729d:

            mov RDI,RBP
            lea RDX,QWORD PTR [RIP+.L_4170d0]
            xor ESI,ESI
            pop RBP
            pop R12
            jmp .L_43d020
.L_4172b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4172c0:

            mov ECX,DWORD PTR [RDX+184]
            test ECX,ECX
            jne .L_4172d0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4172d0:

            push R15
            push R14
            lea R11,QWORD PTR [RIP+.L_446064]
            push R13
            push R12
            lea R9,QWORD PTR [RIP+.L_442a60]
            push RBP
            push RBX
.L_4172e8:

            lea R15,QWORD PTR [RIP+.L_442600]
            mov R10,QWORD PTR [RDX+200]
            lea R14,QWORD PTR [RIP+.L_4423c0]
            mov R8D,1
            mov EBP,1
            xor EBX,EBX
            xor R12D,R12D
            xor R13D,R13D
            xor ESI,ESI
            mov EAX,18
            mov EDI,2118
.L_41731c:

            mov EDX,ESI
            lea RDX,QWORD PTR [RDX+RDX*4]
            movzx EDX,BYTE PTR [R10+RDX*4+18]
            cmp DL,R8B
            jae .L_417390
.L_41732d:

            add RAX,RAX
.L_417330:

            add RAX,R9
            movsx EAX,WORD PTR [RAX+RDI*1]
.L_417337:

            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            jne .L_4173a8
.L_417347:

            add ESI,1
.L_41734a:

            cmp ECX,ESI
            je .L_417ecd
.L_417352:

            lea RDI,QWORD PTR [RIP+.L_4458a0]
            lea R8,QWORD PTR [RIP+.L_445ce0]
            movsxd RAX,EDX
            movsx RDI,WORD PTR [RDI+RAX*2]
            movsx RAX,BYTE PTR [R8+RAX*1]
            add RDI,RDI
            test AL,AL
            jle .L_41732d

            lea R11D,DWORD PTR [RDX+RDX*1]
            lea RDX,QWORD PTR [RIP+.L_445f00]
            movsxd R11,R11D
            add R11,RDX
            movzx R8D,BYTE PTR [R11]
            jmp .L_41731c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417390:

            cmp DL,BYTE PTR [R11+1]
            ja .L_41732d

            movzx EAX,DL
            sub EAX,R8D
            cdqe 
            add RAX,RAX
            jmp .L_417330
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4173a8:

            cmp AL,24
            ja .L_417347

            lea RDI,QWORD PTR [RIP+.L_441a20]
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_4173bc:

            mov ESI,ECX
            mov R12D,5
.L_4173c4:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_417400

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,3
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
.L_4173f0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_4173f0

            nop
            nop
            nop
            nop
.L_417400:

            add EBP,1
            mov ESI,R13D
            mov EBX,R13D
            cmp EBP,16
            jne .L_41734a
.L_417412:

            mov EBP,1
            jmp .L_41734a
.L_41741c:

            mov ESI,ECX
            mov R12D,5
.L_417424:

            cmp ESI,EBX
            jbe .L_417460

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,3
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
.L_417450:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_417450

            nop
            nop
            nop
            nop
.L_417460:

            add EBP,1
            mov EBX,ESI
            mov R13D,ESI
            cmp EBP,16
            jne .L_41734a

            jmp .L_417412
.L_417473:

            mov ESI,ECX
            mov R12D,5
.L_41747b:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_417400

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,2
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4174b0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_4174b0

            jmp .L_417400
.L_4174c1:

            mov ESI,ECX
            mov R12D,5
.L_4174c9:

            cmp ESI,EBX
            jbe .L_417460

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,2
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
            nop
            nop
            nop
.L_4174f8:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_4174f8

            jmp .L_417460
.L_417509:

            mov ESI,ECX
            mov R12D,5
.L_417511:

            cmp ESI,EBX
            jbe .L_417460

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,5
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
.L_417540:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_417540

            jmp .L_417460
.L_417551:

            mov ESI,ECX
            mov R12D,5
.L_417559:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_417400

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,4
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417590:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_417590

            jmp .L_417400
.L_4175a1:

            mov ESI,ECX
            mov R12D,5
.L_4175a9:

            cmp ESI,EBX
            jbe .L_417460

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,4
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4175e0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_4175e0

            jmp .L_417460
.L_4175f1:

            mov ESI,ECX
            mov R12D,5
.L_4175f9:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_417400

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,1
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417630:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_417630

            jmp .L_417400
.L_417641:

            mov ESI,ECX
            mov R12D,5
.L_417649:

            cmp ESI,EBX
            jbe .L_417460

            lea R8D,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl EDI,4
            sub R8D,EBX
            or EDI,1
            add R8,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [R10+R8*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417680:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,R8
            jne .L_417680

            jmp .L_417460
.L_417691:

            mov ESI,ECX
            mov R12D,5
.L_417699:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_417400

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
.L_4176c8:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_4176c8

            jmp .L_417400
.L_4176d9:

            mov ESI,ECX
            mov R12D,5
.L_4176e1:

            cmp ESI,EBX
            jbe .L_417460

            lea EDI,DWORD PTR [RSI-1]
            mov R11D,EBX
            mov R8D,EBP
            lea RAX,QWORD PTR [R11+R11*4]
            shl R8D,4
            sub EDI,EBX
            add RDI,R11
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
.L_417710:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RDI,RAX
            jne .L_417710

            jmp .L_417460
.L_417721:

            mov EBX,ECX
            mov EBP,1
            mov ESI,ECX
.L_41772a:

            lea RDI,QWORD PTR [RIP+.L_441c04]
.L_417731:

            add ESI,1
            cmp ECX,ESI
            je .L_417f27

            mov R13D,ESI
            mov R12D,6
            jmp .L_417352
.L_41774a:

            mov ESI,ECX
            mov R12D,5
.L_417752:

            lea R13D,DWORD PTR [RSI+1]
            cmp R13D,EBX
            jbe .L_417400

            mov R8D,EBX
            sub ESI,EBX
            mov EDI,EBP
            add RSI,R8
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            lea RSI,QWORD PTR [RSI+RSI*4]
            or EDI,5
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417788:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RSI,RAX
            jne .L_417788

            jmp .L_417400
.L_417799:

            mov EBX,ESI
            mov ESI,ECX
.L_41779d:

            lea RDI,QWORD PTR [RIP+.L_441ba4]
.L_4177a4:

            add ESI,1
            cmp ECX,ESI
            je .L_417ee9

            mov R13D,ESI
            mov R12D,1
            jmp .L_417352
.L_4177bd:

            mov R13D,EBX
            mov R12D,5
.L_4177c6:

            cmp R13D,EBX
            jbe .L_417400

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,2
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
.L_4177f8:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RAX,RDI
            jne .L_4177f8

            jmp .L_417400
.L_417809:

            mov R13D,EBX
            mov R12D,5
.L_417812:

            cmp R13D,EBX
            jbe .L_417400

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,3
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417848:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RAX,RDI
            jne .L_417848

            jmp .L_417400
.L_417859:

            mov ESI,ECX
            mov EBP,1
.L_417860:

            lea RDI,QWORD PTR [RIP+.L_441a84]
.L_417867:

            add ESI,1
            cmp ECX,ESI
            je .L_417b35

            mov R13D,ESI
            mov R12D,5
            jmp .L_417352
.L_417880:

            cmp R12D,5
            je .L_417a7b

            cmp R12D,6
            je .L_417a01

            cmp R12D,1
            jne .L_417347

            mov EDI,EBX
            mov EBX,R13D
.L_4178a3:

            lea R12D,DWORD PTR [RBX-1]
            lea R11,QWORD PTR [R10+35]
.L_4178ab:

            cmp EDI,EBX
            jae .L_4178dd

            mov ESI,R12D
            mov R13D,EDI
            mov R8D,EBP
            sub ESI,EDI
            shl R8D,4
            imul RAX,R13,20
            add RSI,R13
            imul RSI,RSI,20
            lea RAX,QWORD PTR [R10+RAX*1+15]
            add RSI,R11
.L_4178d1:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_4178d1
.L_4178dd:

            add EBP,1
            cmp EBP,16
            je .L_417ade

            cmp ECX,EBX
            je .L_417b83

            mov ESI,EBX
            mov R13D,EBX
            mov R12D,1
            jmp .L_417352
.L_417901:

            mov R13D,EBX
            mov R12D,5
.L_41790a:

            cmp R13D,EBX
            jbe .L_417400

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,4
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417940:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RDI,RAX
            jne .L_417940

            jmp .L_417400
.L_417951:

            mov R13D,EBX
            mov R12D,5
.L_41795a:

            cmp R13D,EBX
            jbe .L_417400

            lea EDI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov ESI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl ESI,4
            sub EDI,EBX
            or ESI,1
            add RDI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RDI,QWORD PTR [RDI+RDI*4]
            lea RDI,QWORD PTR [R10+RDI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417990:

            mov BYTE PTR [RAX],SIL
            add RAX,20
            cmp RAX,RDI
            jne .L_417990

            jmp .L_417400
.L_4179a1:

            mov ESI,ECX
            mov R12D,5
.L_4179a9:

            add ESI,1
            mov R13D,ESI
            jmp .L_41734a
.L_4179b4:

            mov R13D,EBX
            mov R12D,5
.L_4179bd:

            cmp R13D,EBX
            jbe .L_417400

            lea ESI,DWORD PTR [R13-1]
            mov R8D,EBX
            mov EDI,EBP
            lea RAX,QWORD PTR [R8+R8*4]
            shl EDI,4
            sub ESI,EBX
            add RSI,R8
            lea RAX,QWORD PTR [R10+RAX*4+15]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R10+RSI*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4179f0:

            mov BYTE PTR [RAX],DIL
            add RAX,20
            cmp RAX,RSI
            jne .L_4179f0

            jmp .L_417400
.L_417a01:

            mov ESI,R13D
.L_417a04:

            lea R13D,DWORD PTR [RSI-1]
            lea R12,QWORD PTR [R10+35]
            lea R11,QWORD PTR [RIP+.L_441c64]
            mov EDI,EBX
.L_417a15:

            cmp EDI,ESI
            jae .L_417a57

            mov EBX,EDI
            mov R8D,EBP
            imul RAX,RBX,20
            shl R8D,4
            or R8D,5
            lea RAX,QWORD PTR [R10+RAX*1+15]
            mov QWORD PTR [RSP-8],RAX
            mov EAX,R13D
            sub EAX,EDI
            mov RDI,RAX
            mov RAX,QWORD PTR [RSP-8]
            add RDI,RBX
            imul RDI,RDI,20
            add RDI,R12
.L_417a4b:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,RDI
            jne .L_417a4b
.L_417a57:

            add EBP,1
            cmp EBP,16
            je .L_417afb

            cmp ECX,ESI
            je .L_4180e5

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_417352
.L_417a7b:

            mov EDI,EBX
            mov EBX,R13D
.L_417a80:

            lea R11D,DWORD PTR [RBX-1]
            lea R8,QWORD PTR [R10+35]
.L_417a88:

            cmp EDI,EBX
            jae .L_417abe

            mov ESI,R11D
            mov R13D,EDI
            mov R12D,EBP
            sub ESI,EDI
            shl R12D,4
            imul RAX,R13,20
            add RSI,R13
            or R12D,4
            imul RSI,RSI,20
            lea RAX,QWORD PTR [R10+RAX*1+15]
            add RSI,R8
.L_417ab2:

            mov BYTE PTR [RAX],R12B
            add RAX,20
            cmp RSI,RAX
            jne .L_417ab2
.L_417abe:

            add EBP,1
            cmp EBP,16
            je .L_417b18

            cmp ECX,EBX
            je .L_418438

            mov ESI,EBX
            mov R13D,EBX
            mov R12D,5
            jmp .L_417352
.L_417ade:

            cmp ECX,EBX
            je .L_418127

            mov ESI,EBX
            mov R13D,EBX
            mov EBP,1
            mov R12D,1
            jmp .L_417352
.L_417afb:

            cmp ECX,ESI
            je .L_418483

            mov EBX,ESI
            mov R13D,ESI
            mov EBP,1
            mov R12D,6
            jmp .L_417352
.L_417b18:

            cmp ECX,EBX
            je .L_417bc8

            mov ESI,EBX
            mov R13D,EBX
            mov EBP,1
            mov R12D,5
            jmp .L_417352
.L_417b35:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_418700

            sub EAX,1
            cmp AL,23
            ja .L_4186f0

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417b78:

            pop RBX
.L_417b79:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_417b83:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_417ebd

            sub EAX,1
            cmp AL,23
            ja .L_417ead

            lea RDI,QWORD PTR [RIP+.L_441ae4]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_417bc8:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_417db0

            sub EAX,1
            mov ESI,ECX
            mov EBP,1
            cmp AL,23
            ja .L_417d9b

            lea RDI,QWORD PTR [RIP+.L_441b44]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_417c14:

            mov ESI,ECX
            mov R12D,1
            jmp .L_4173c4
.L_417c21:

            mov ESI,ECX
            mov R12D,1
            jmp .L_417424
.L_417c2e:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_4173c4
.L_417c40:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417424
.L_417c52:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_41747b
.L_417c64:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_4174c9
.L_417c76:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417511
.L_417c88:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417559
.L_417c9a:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_4175a9
.L_417cac:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_4175f9
.L_417cbe:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417649
.L_417cd0:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417699
.L_417ce2:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_4176e1
.L_417cf4:

            mov ESI,ECX
            mov EBP,1
            jmp .L_41772a
.L_417d00:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417752
.L_417d12:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_417812
.L_417d25:

            mov ESI,ECX
            mov EBP,1
            jmp .L_41779d
.L_417d31:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_4177c6
.L_417d44:

            mov EBP,1
.L_417d49:

            mov EDI,EBX
            jmp .L_417a88
.L_417d50:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41790a
.L_417d63:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_41795a
.L_417d76:

            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_4179a9
.L_417d88:

            mov R13D,EBX
            mov R12D,5
            mov EBP,1
            jmp .L_4179bd
.L_417d9b:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417347
.L_417db0:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,5
            mov EBP,1
            jmp .L_417347
.L_417dc5:

            mov ESI,ECX
            mov R12D,1
            jmp .L_41747b
.L_417dd2:

            mov ESI,ECX
            mov R12D,1
            jmp .L_4174c9
.L_417ddf:

            mov ESI,ECX
            mov R12D,1
            jmp .L_417511
.L_417dec:

            mov ESI,ECX
            mov R12D,1
            jmp .L_417559
.L_417df9:

            mov ESI,ECX
            mov R12D,1
            jmp .L_4175a9
.L_417e06:

            mov ESI,ECX
            mov R12D,1
            jmp .L_4175f9
.L_417e13:

            mov ESI,ECX
            mov R12D,1
            jmp .L_417649
.L_417e20:

            mov ESI,ECX
            mov R12D,1
            jmp .L_417699
.L_417e2d:

            mov ESI,ECX
            mov R12D,1
            jmp .L_4176e1
.L_417e3a:

            mov ESI,ECX
            mov R12D,1
            jmp .L_417752
.L_417e47:

            mov R13D,EBX
            mov R12D,1
            jmp .L_417812
.L_417e55:

            mov R13D,EBX
            mov R12D,1
            jmp .L_4177c6
.L_417e63:

            mov ESI,ECX
            jmp .L_417860
.L_417e6a:

            mov EBP,1
.L_417e6f:

            mov EDI,EBX
            jmp .L_4178ab
.L_417e76:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41790a
.L_417e84:

            mov R13D,EBX
            mov R12D,1
            jmp .L_41795a
.L_417e92:

            mov ESI,ECX
            mov R12D,1
            jmp .L_4179a9
.L_417e9f:

            mov R13D,EBX
            mov R12D,1
            jmp .L_4179bd
.L_417ead:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,1
            jmp .L_417347
.L_417ebd:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,1
            jmp .L_417347
.L_417ecd:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            jmp .L_417337
.L_417ee9:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_417ebd

            sub EAX,1
            cmp AL,23
            ja .L_4180d5

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_417f27:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_41809b

            sub EAX,1
            cmp AL,23
            ja .L_41808b

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_417f69:

            mov R13D,ESI
            mov R12D,1
            jmp .L_417812
.L_417f77:

            mov R13D,ESI
            mov R12D,1
            jmp .L_4177c6
.L_417f85:

            mov EDI,EBX
            mov EBX,ESI
            jmp .L_4178a3
.L_417f8e:

            mov ESI,ECX
            jmp .L_4177a4
.L_417f95:

            mov ESI,ECX
            mov R12D,6
            jmp .L_4173c4
.L_417fa2:

            mov ESI,ECX
            mov R12D,6
            jmp .L_417424
.L_417faf:

            mov ESI,ECX
            mov R12D,6
            jmp .L_41747b
.L_417fbc:

            mov ESI,ECX
            mov R12D,6
            jmp .L_4174c9
.L_417fc9:

            mov ESI,ECX
            mov R12D,6
            jmp .L_417511
.L_417fd6:

            mov ESI,ECX
            mov R12D,6
            jmp .L_417559
.L_417fe3:

            mov ESI,ECX
            mov R12D,6
            jmp .L_4175a9
.L_417ff0:

            mov ESI,ECX
            mov R12D,6
            jmp .L_4175f9
.L_417ffd:

            mov ESI,ECX
            mov R12D,6
            jmp .L_417649
.L_41800a:

            mov ESI,ECX
            mov R12D,6
            jmp .L_417699
.L_418017:

            mov ESI,ECX
            mov R12D,6
            jmp .L_4176e1
.L_418024:

            mov ESI,ECX
            jmp .L_417731
.L_41802b:

            mov ESI,ECX
            mov R12D,6
            jmp .L_417752
.L_418038:

            mov R13D,ESI
            mov R12D,6
            jmp .L_417812
.L_418046:

            mov R13D,ESI
            mov R12D,6
            jmp .L_4177c6
.L_418054:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41790a
.L_418062:

            mov R13D,ESI
            mov R12D,6
            jmp .L_41795a
.L_418070:

            mov ESI,ECX
            mov R12D,6
            jmp .L_4179a9
.L_41807d:

            mov R13D,ESI
            mov R12D,6
            jmp .L_4179bd
.L_41808b:

            mov R13D,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417347
.L_41809b:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,6
            jmp .L_417347
.L_4180ab:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41790a
.L_4180b9:

            mov R13D,ESI
            mov R12D,1
            jmp .L_41795a
.L_4180c7:

            mov R13D,ESI
            mov R12D,1
            jmp .L_4179bd
.L_4180d5:

            mov R13D,ESI
            mov R12D,1
            mov ESI,ECX
            jmp .L_417347
.L_4180e5:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_418426

            sub EAX,1
            cmp AL,23
            ja .L_418414

            movzx EAX,AL
            movsxd RAX,DWORD PTR [R11+RAX*4]
            add RAX,R11
            jmp RAX
.L_418127:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_4182ec

            sub EAX,1
            cmp AL,23
            ja .L_4182d7

            lea RDI,QWORD PTR [RIP+.L_441cc4]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_418170:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_4173c4
.L_41817f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417424
.L_41818e:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_4173c4
.L_4181a0:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417424
.L_4181b2:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_41747b
.L_4181c4:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_4174c9
.L_4181d6:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417511
.L_4181e8:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417559
.L_4181fa:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_4175a9
.L_41820c:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_4175f9
.L_41821e:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417649
.L_418230:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417699
.L_418242:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_4176e1
.L_418254:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417752
.L_418266:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_417812
.L_418279:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_4177c6
.L_41828c:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41790a
.L_41829f:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_41795a
.L_4182b2:

            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_4179a9
.L_4182c4:

            mov R13D,EBX
            mov R12D,1
            mov EBP,1
            jmp .L_4179bd
.L_4182d7:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417347
.L_4182ec:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,1
            mov EBP,1
            jmp .L_417347
.L_418301:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_41747b
.L_418310:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_4174c9
.L_41831f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417511
.L_41832e:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417559
.L_41833d:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_4175a9
.L_41834c:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_4175f9
.L_41835b:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417649
.L_41836a:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417699
.L_418379:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_4176e1
.L_418388:

            mov EBX,ECX
            mov ESI,ECX
            jmp .L_41772a
.L_418391:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417752
.L_4183a0:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_417812
.L_4183b0:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_4177c6
.L_4183c0:

            mov EBX,ECX
            mov ESI,ECX
            jmp .L_417860
.L_4183c9:

            mov EBP,1
.L_4183ce:

            mov EDI,ESI
            jmp .L_417a15
.L_4183d5:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41790a
.L_4183e5:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_41795a
.L_4183f5:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_4179a9
.L_418404:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            jmp .L_4179bd
.L_418414:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov ESI,ECX
            jmp .L_417347
.L_418426:

            mov EBX,ECX
            mov R13D,ECX
            mov ESI,ECX
            mov R12D,6
            jmp .L_417347
.L_418438:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_418700

            sub EAX,1
            mov ESI,ECX
            cmp AL,23
            ja .L_41867c

            lea RDI,QWORD PTR [RIP+.L_441d24]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_418483:

            lea RAX,QWORD PTR [RIP+.L_441f80]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_417b78

            sub EAX,1
            cdqe 
            movsx RDX,WORD PTR [R15+RAX*2]
            movzx EAX,BYTE PTR [R14+RAX*1]
            test AL,AL
            je .L_418665

            sub EAX,1
            mov EBP,1
            mov EDI,ECX
            cmp AL,23
            ja .L_41864e

            lea RBX,QWORD PTR [RIP+.L_441d84]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RBX+RAX*4]
            add RAX,RBX
            jmp RAX
.L_4184d3:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_4173c4
.L_4184e7:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417424
.L_4184fb:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_41747b
.L_41850f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_4174c9
.L_418523:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417511
.L_418537:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417559
.L_41854b:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_4175a9
.L_41855f:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_4175f9
.L_418573:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417649
.L_418587:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417699
.L_41859b:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_4176e1
.L_4185af:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417752
.L_4185c3:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_417812
.L_4185d8:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_4177c6
.L_4185ed:

            mov EBX,EDI
            mov EBP,1
            mov ESI,ECX
            jmp .L_417860
.L_4185fb:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41790a
.L_418610:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_41795a
.L_418625:

            mov EBX,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_4179a9
.L_418639:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov EBP,1
            jmp .L_4179bd
.L_41864e:

            mov EBX,ESI
            mov R13D,ESI
            mov R12D,6
            mov ESI,ECX
            mov EBP,1
            jmp .L_417347
.L_418665:

            mov EBX,ECX
            mov R13D,ECX
            mov ESI,ECX
            mov R12D,6
            mov EBP,1
            jmp .L_417347
.L_41867c:

            mov R13D,EBX
            mov ESI,ECX
            mov R12D,5
            jmp .L_417347
.L_41868c:

            mov ESI,ECX
            jmp .L_41772a
.L_418693:

            mov R13D,ESI
            mov R12D,5
            jmp .L_417812
.L_4186a1:

            mov ESI,ECX
            jmp .L_41779d
.L_4186a8:

            mov R13D,ESI
            mov R12D,5
            jmp .L_4177c6
.L_4186b6:

            mov ESI,ECX
            jmp .L_417867
.L_4186bd:

            mov EDI,EBX
            mov EBX,ESI
            jmp .L_417a80
.L_4186c6:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41790a
.L_4186d4:

            mov R13D,ESI
            mov R12D,5
            jmp .L_41795a
.L_4186e2:

            mov R13D,ESI
            mov R12D,5
            jmp .L_4179bd
.L_4186f0:

            mov R13D,ESI
            mov R12D,5
            mov ESI,ECX
            jmp .L_417347
.L_418700:

            mov R13D,ECX
            mov ESI,ECX
            mov R12D,5
            jmp .L_417347
.L_418710:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            mov R12D,EDX
            sub RSP,8
.L_418725:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov ECX,7168
            xor EDX,EDX
            bt ECX,EAX
            jb .L_41878e

            cmp EBX,2479
            sete DL
            cmp R12D,2492
            sete AL
            and DL,AL
            jne .L_4187a0

            test EBX,EBX
            mov RAX,QWORD PTR [RBP+24]
            mov DWORD PTR [R13],0
            je .L_41878e

            test R12D,R12D
            je .L_41878e

            mov EDX,R12D
            mov R8,QWORD PTR [RAX+232]
            mov RCX,R13
            mov ESI,EBX
            mov RDI,RAX
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne DL
.L_41878e:

            add RSP,8
.L_418792:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4187a0:

            mov DWORD PTR [R13],2527
            add RSP,8
            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4187b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4187c0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4187ca:

            mov EAX,DWORD PTR [RSI+184]
            mov RBP,QWORD PTR [RSI+200]
            test EAX,EAX
            je .L_418958

            sub EAX,1
            lea R13,QWORD PTR [RIP+.L_446590]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R12,QWORD PTR [RBP+RAX*4+20]
            jmp .L_418854
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4187f8:

            lea EDX,DWORD PTR [RBX-2674]
            cmp EDX,1
            jbe .L_418920

            lea EDX,DWORD PTR [RBX-7413]
            cmp EDX,1
            jbe .L_418920

            lea EDX,DWORD PTR [RBX-7394]
            cmp EDX,6
            jbe .L_418829

            cmp EBX,7405
            jne .L_418878
.L_418829:

            mov EAX,10
            mov EDX,14
.L_418833:

            cmp EBX,2817
            mov ECX,7
            cmove EDX,ECX
.L_418841:

            mov BYTE PTR [RBP+18],AL
            mov BYTE PTR [RBP+19],DL
            add RBP,20
            cmp R12,RBP
            je .L_418958
.L_418854:

            mov EBX,DWORD PTR [RBP]
            mov EDI,EBX
            call .L_41be20

            lea EDX,DWORD PTR [RBX-2387]
            cmp EDX,1
            ja .L_4187f8

            mov EAX,8
.L_41886e:

            mov EDX,14
            jmp .L_418833
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418878:

            lea EDX,DWORD PTR [RBX-43250]
            cmp EDX,5
            jbe .L_418910

            lea EDX,DWORD PTR [RBX-7401]
            cmp EDX,3
            jbe .L_418910

            lea EDX,DWORD PTR [RBX-7406]
            cmp EDX,3
            jbe .L_418910

            cmp EBX,6086
            movzx EDX,AH
            je .L_418940

            lea ECX,DWORD PTR [RBX-8208]
            cmp ECX,1
            jbe .L_418968

            cmp EBX,9676
            mov ECX,12
            je .L_4188e0

            and EAX,127
            mov ESI,202758
            movzx ECX,AX
            bt ESI,ECX
            jae .L_418972

            nop
            nop
            nop
            nop
.L_4188e0:

            lea RAX,QWORD PTR [RIP+.L_446564]
            mov EDX,2352
            jmp .L_4188f6
          .byte 0x66
          .byte 0x90
.L_4188f0:

            mov EDX,DWORD PTR [RAX]
            add RAX,4
.L_4188f6:

            cmp EBX,EDX
            je .L_418930

            cmp R13,RAX
            jne .L_4188f0

            mov EAX,ECX
            mov EDX,4
            jmp .L_418833
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418910:

            mov EAX,18
            jmp .L_41886e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418920:

            mov ECX,1
            jmp .L_4188e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418930:

            mov EAX,16
            mov EDX,4
            jmp .L_418833
          .byte 0x90
.L_418940:

            mov EAX,3
            mov BYTE PTR [RBP+19],DL
            add RBP,20
            mov BYTE PTR [RBP-2],AL
            cmp R12,RBP
            jne .L_418854
.L_418958:

            add RSP,8
.L_41895c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418968:

            mov ECX,11
            jmp .L_4188e0
.L_418972:

            cmp AX,7
            jne .L_418b5b

            cmp EDX,6
            je .L_418ab0

            jbe .L_418a20

            cmp EDX,8
            je .L_418a40

            cmp EDX,11
            jne .L_418b00

            mov EAX,EBX
            and EAX,4294967168
            cmp EAX,2304
            je .L_418aa0

            mov EDX,EBX
            xor DL,DL
            cmp EDX,2560
            je .L_418a90

            cmp EAX,2432
            je .L_418a90

            cmp EAX,2816
            je .L_418b31

            cmp EAX,2944
            je .L_418a90

            cmp EAX,3072
            je .L_418b19

            cmp EAX,3200
            je .L_418b40

            cmp EAX,3328
            je .L_418a90
.L_4189ff:

            cmp EAX,3456
            je .L_418aa0

            cmp EAX,6016
            je .L_418a90
.L_418a11:

            mov EAX,7
            mov EDX,9
            jmp .L_418833
.L_418a20:

            cmp EDX,3
            jne .L_418b00

            mov EAX,7
            mov EDX,2
            jmp .L_418833
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418a40:

            mov EAX,EBX
            xor AL,AL
            cmp EAX,2304
            je .L_418aa0

            cmp EAX,2560
            je .L_418a90

            mov EDX,EBX
            and EDX,4294967168
            cmp EDX,2816
            je .L_418a11

            cmp EDX,2944
            je .L_418a90

            cmp EAX,3072
            je .L_418ae8

            cmp EDX,3328
            je .L_418a90

            cmp EDX,3456
            je .L_418aa0

            cmp EDX,6016
            jne .L_418a11

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418a90:

            mov EDX,12
            mov EAX,7
            jmp .L_418841
          .byte 0x90
.L_418aa0:

            mov EDX,9
            mov EAX,7
            jmp .L_418841
          .byte 0x90
.L_418ab0:

            mov EAX,EBX
            and EAX,4294967168
            cmp EAX,2304
            je .L_418aa0

            cmp EAX,2560
            je .L_418a90

            cmp EAX,2688
            je .L_418aa0

            cmp EAX,2816
            je .L_418b0a

            cmp EAX,2944
            je .L_418aa0

            mov EDX,EBX
            xor DL,DL
            cmp EDX,3072
            jne .L_4189ff
.L_418ae8:

            mov EDX,7
            mov EAX,7
            jmp .L_418841
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418b00:

            mov EAX,7
            jmp .L_418833
.L_418b0a:

            mov EAX,7
            mov EDX,5
            jmp .L_418833
.L_418b19:

            cmp EBX,3139
            mov EAX,7
            sbb EDX,EDX
            and EDX,4294967294
            add EDX,9
            jmp .L_418841
.L_418b31:

            mov EAX,7
            mov EDX,12
            jmp .L_418833
.L_418b40:

            sub EBX,3267
            mov EAX,7
            cmp EBX,20
            sbb EDX,EDX
            and EDX,2
            add EDX,7
            jmp .L_418841
.L_418b5b:

            mov ESI,263936
            shr ESI,CL
            mov ECX,14
            and SIL,1
            cmovne EDX,ECX
            jmp .L_418833
.L_418b73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418b80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_418b8e:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RCX
            xor ECX,ECX
            mov ECX,DWORD PTR [RDX+184]
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP+8],RDX
            test ECX,ECX
            mov DWORD PTR [RSP+28],ECX
            je .L_418eb8

            mov R12,QWORD PTR [RDX+200]
            xor EBX,EBX
            add EBX,1
            cmp ECX,EBX
            movzx EDX,BYTE PTR [R12+15]
            lea RAX,QWORD PTR [R12+35]
            je .L_418be8

            nop
            nop
            nop
.L_418bd8:

            add RAX,20
            cmp DL,BYTE PTR [RAX-20]
            jne .L_418bec

            add EBX,1
            cmp ECX,EBX
            jne .L_418bd8
.L_418be8:

            mov EBX,DWORD PTR [RSP+28]
.L_418bec:

            xor ECX,ECX
            mov R15D,96
            mov R13D,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418c00:

            mov RAX,QWORD PTR [RSP+16]
            mov ESI,R13D
            mov R8,QWORD PTR [RAX+1064]
            lea RAX,QWORD PTR [RSI+RSI*4]
            lea RCX,QWORD PTR [R12+RAX*4]
            mov EDX,DWORD PTR [R8+12]
            test EDX,EDX
            je .L_418ee0

            cmp R13D,EBX
            jae .L_419760

            lea EDI,DWORD PTR [RBX-1]
            mov RAX,RCX
            sub EDI,R13D
            add RSI,RDI
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4+20]
            jmp .L_418c51
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418c48:

            add RAX,20
            cmp RAX,RSI
            je .L_418c80
.L_418c51:

            cmp EDX,DWORD PTR [RAX]
            jne .L_418c48

            movzx EDI,WORD PTR [RAX+12]
            mov R9D,EDI
            and R9D,96
            cmp R9W,96
            jne .L_418c48

            and EDI,4294967199
            mov BYTE PTR [RAX+18],4
            add RAX,20
            mov WORD PTR [RAX-8],DI
            cmp RAX,RSI
            jne .L_418c51

            nop
            nop
            nop
            nop
            nop
.L_418c80:

            mov EDX,DWORD PTR [R8+96]
            test EDX,EDX
            setne BYTE PTR [RSP]
            cmp BYTE PTR [RCX+19],3
            jbe .L_418efd
.L_418c94:

            lea R10D,DWORD PTR [R13+1]
            mov EBP,R13D
            nop
            nop
            nop
            nop
            nop
.L_418ca0:

            cmp BYTE PTR [RSP],0
            je .L_418cf0

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,EBX
            jae .L_418d08

            mov ESI,EAX
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RDI,QWORD PTR [R12+RSI*4]
            test DWORD PTR [RDI+4],EDX
            jne .L_41977e

            lea ESI,DWORD PTR [RBP+2]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4]
            jmp .L_418ce0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418cd0:

            mov RDI,RSI
            add RSI,20
            test DWORD PTR [RDI+4],EDX
            jne .L_41977e
.L_418ce0:

            add EAX,1
            cmp EAX,EBX
            jb .L_418cd0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418cf0:

            mov RAX,QWORD PTR [RSP+8]
            cmp DWORD PTR [RAX+148],1298954605
            je .L_4192c0

            nop
            nop
            nop
.L_418d08:

            cmp EBP,R13D
            jbe .L_418d1e

            mov EAX,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            cmp BYTE PTR [RAX+19],5
            adc EBP,-1
.L_418d1e:

            cmp EBP,EBX
            je .L_418f33
.L_418d26:

            cmp EBP,EBX
            jae .L_419070

            cmp EBP,R13D
            jbe .L_418d97

            mov EAX,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_419809

            movzx EAX,BYTE PTR [RAX+18]
            mov EDX,16408
            bt EDX,EAX
            jae .L_419809

            lea EDX,DWORD PTR [RBP-1]
            mov EDI,16408
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+12]
            jmp .L_418d90
          .byte 0x90
.L_418d70:

            test BYTE PTR [RDX],32
            mov RSI,RDX
            jne .L_419050

            movzx ESI,BYTE PTR [RSI+6]
            sub RDX,20
            bt EDI,ESI
            jae .L_419050

            sub EAX,1
.L_418d90:

            cmp EAX,R13D
            mov EBP,EAX
            jne .L_418d70
.L_418d97:

            cmp R10D,EBX
            mov R9D,R10D
            jae .L_418dad
.L_418d9f:

            movzx EDI,BYTE PTR [RCX+19]
.L_418da3:

            cmp DIL,1
            je .L_419090
.L_418dad:

            cmp BYTE PTR [RSP],0
            je .L_418e08
.L_418db3:

            lea EDX,DWORD PTR [RBP+1]
            cmp EDX,EBX
            jae .L_418e08

            mov EAX,EDX
            mov EDI,DWORD PTR [R8+96]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R9,QWORD PTR [R12+RAX*4]
            test DWORD PTR [R9+4],EDI
            jne .L_419578

            lea EAX,DWORD PTR [RBP+2]
            mov R14D,EDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            jmp .L_418df8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418de8:

            mov RAX,RSI
            add RSI,20
            test DWORD PTR [RAX+4],EDI
            jne .L_419580
.L_418df8:

            add R14D,1
            cmp R14D,EBX
            jb .L_418de8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e08:

            cmp BYTE PTR [RCX+19],2
            je .L_419020
.L_418e12:

            mov EDX,DWORD PTR [RIP+.L_6572a8]
            test EDX,EDX
            jne .L_418e21

            call .L_4056a0
.L_418e21:

            test BYTE PTR [RIP+.L_6572a8],2
            je .L_418e60

            mov RAX,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RAX+4]
            cmp EAX,1399418472
            je .L_418e60

            cmp EAX,1415671148
            je .L_418e60

            mov EAX,EBX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_418e60

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,EBX
            mov ESI,R13D
            call .L_402ee0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e60:

            mov RAX,QWORD PTR [RSP+8]
            mov R12,QWORD PTR [RAX+200]
            mov ECX,DWORD PTR [RAX+184]
            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx ESI,BYTE PTR [R12+RAX*4+15]
            lea EAX,DWORD PTR [RBX+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RAX*4+15]
            mov EAX,EBX
            jmp .L_418e9a
          .byte 0x66
          .byte 0x90
.L_418e90:

            add RDX,20
            cmp SIL,BYTE PTR [RDX-20]
            jne .L_418ea1
.L_418e9a:

            add EAX,1
            cmp ECX,EAX
            ja .L_418e90
.L_418ea1:

            cmp DWORD PTR [RSP+28],EBX
            mov R13D,EBX
            jbe .L_418eb8

            mov EBX,EAX
            jmp .L_418c00
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418eb8:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_419aa0

            add RSP,120
.L_418ed0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418ee0:

            mov EDX,DWORD PTR [R8+96]
            test EDX,EDX
            setne BYTE PTR [RSP]
            cmp R13D,EBX
            jae .L_419b05

            cmp BYTE PTR [RCX+19],3
            ja .L_418c94
.L_418efd:

            lea EAX,DWORD PTR [R13+1]
            mov EBP,R13D
            mov R10,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4+19]
            jmp .L_418f26
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f18:

            add RAX,20
            cmp BYTE PTR [RAX-20],3
            ja .L_418ca0
.L_418f26:

            add EBP,1
            cmp EBP,EBX
            jb .L_418f18

            jne .L_419070
.L_418f33:

            lea EAX,DWORD PTR [RBX-1]
            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_418f51

            cmp BYTE PTR [RAX+18],6
            je .L_418d26
.L_418f51:

            cmp R10D,EBX
            mov R9D,R10D
            mov EBP,EBX
            jae .L_418dad
.L_418f5f:

            lea R14D,DWORD PTR [RBX-2]
            mov EBP,EBX
.L_418f65:

            mov RAX,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RAX+148]
            cmp EAX,1298954605
            je .L_419450

            cmp EAX,1415671148
            je .L_419450

            cmp R14D,R13D
            jbe .L_418fc3

            mov EAX,R14D
            mov EDI,16528
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            nop
            nop
            nop
            nop
            nop
.L_418fa0:

            test BYTE PTR [RAX+12],32
            mov RDX,RAX
            jne .L_418fb6

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_419404
.L_418fb6:

            sub R14D,1
            sub RAX,20
            cmp R14D,R13D
            jne .L_418fa0
.L_418fc3:

            mov EAX,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RDX+12],32
            je .L_419400
.L_418fd8:

            cmp R13D,EBP
            movzx EDI,BYTE PTR [RCX+19]
            jae .L_418da3

            cmp DIL,2
            je .L_4196be

            lea RAX,QWORD PTR [R10+R10*4]
            mov ESI,R13D
            lea RAX,QWORD PTR [R12+RAX*4+19]
            jmp .L_41900e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419000:

            add RAX,20
            cmp BYTE PTR [RAX-20],2
            je .L_4196c8
.L_41900e:

            add ESI,1
            cmp ESI,EBP
            jne .L_419000

            jmp .L_418da3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419020:

            test R13D,R13D
            je .L_419041

            lea EAX,DWORD PTR [R13-1]
            mov EDX,8190
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [R12+RAX*4+16]
            bt EDX,EAX
            jb .L_418e12
.L_419041:

            mov EAX,DWORD PTR [R8+128]
            or DWORD PTR [RCX+4],EAX
            jmp .L_418e12
.L_419050:

            cmp EBX,R10D
            mov R9D,R10D
            jbe .L_418dad
.L_41905c:

            cmp EBP,EBX
            je .L_418f5f
.L_419064:

            lea R14D,DWORD PTR [RBP-1]
            jmp .L_418f65
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419070:

            cmp R10D,EBX
            mov R9D,R10D
            jae .L_418dad

            cmp EBP,R13D
            jbe .L_418d9f

            jmp .L_41905c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419090:

            cmp BYTE PTR [RCX+18],15
            movzx EAX,WORD PTR [RCX+12]
            sete DL
            xor ESI,ESI
            test AL,32
            je .L_4190ad

            shr AX,6
            xor EAX,1
            mov ESI,EAX
            and ESI,1
.L_4190ad:

            cmp DL,SIL
            je .L_4197fa

            mov RAX,QWORD PTR [R8]
            mov EAX,DWORD PTR [RAX+16]
            cmp EAX,1
            mov DWORD PTR [RSP+32],EAX
            je .L_419b1c

            cmp DWORD PTR [RSP+32],12
            mov R11D,R9D
            je .L_419139

            cmp R9D,EBP
            jae .L_419123

            lea EDX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [R11+R11*4]
            mov R14D,R9D
            mov EDI,16400
            sub EDX,R9D
            lea RAX,QWORD PTR [R12+RAX*4]
            add RDX,R11
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_419100:

            test BYTE PTR [RAX+12],32
            mov R10,RAX
            jne .L_419116

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41970e
.L_419116:

            add RAX,20
            add R14D,1
            cmp RDX,RAX
            jne .L_419100
.L_419123:

            cmp DWORD PTR [RSP+32],5
            je .L_4198d8

            cmp DWORD PTR [RSP+32],9
            je .L_41986a
.L_419139:

            cmp R9D,EBP
            jae .L_419183

            lea EDX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [R11+R11*4]
            mov R14D,R9D
            mov EDI,16400
            sub EDX,R9D
            lea RAX,QWORD PTR [R12+RAX*4]
            add RDX,R11
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+20]
.L_419160:

            test BYTE PTR [RAX+12],32
            mov R10,RAX
            jne .L_419176

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41970e
.L_419176:

            add RAX,20
            add R14D,1
            cmp RDX,RAX
            jne .L_419160
.L_419183:

            lea EAX,DWORD PTR [RBX-1]
            mov R14,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp R14D,R13D
            lea R10,QWORD PTR [R12+RAX*4]
            jbe .L_4191c6

            cmp BYTE PTR [R10+19],14
            jne .L_4191c6

            lea EAX,DWORD PTR [RBX-2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            jmp .L_4191ba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4191b0:

            sub RAX,20
            cmp BYTE PTR [RAX+39],14
            jne .L_4191c6
.L_4191ba:

            sub R14D,1
            mov R10,RAX
            cmp R14D,R13D
            ja .L_4191b0
.L_4191c6:

            mov ESI,DWORD PTR [RIP+.L_6572a8]
            test ESI,ESI
            jne .L_4191fd

            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],R8
            call .L_4056a0

            mov R11,QWORD PTR [RSP+56]
            mov RCX,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+32]
.L_4191fd:

            test BYTE PTR [RIP+.L_6572a8],2
            je .L_41981a
.L_41920a:

            cmp R14D,EBP
            lea EDX,DWORD PTR [R14+1]
            setae BYTE PTR [RSP+32]
.L_419216:

            mov EAX,EDX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_419255

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,R13D
            mov QWORD PTR [RSP+64],R11
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+48],R10
            mov QWORD PTR [RSP+40],R8
            call .L_402ee0

            mov R11,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+56]
            mov R10,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+40]
.L_419255:

            mov EAX,DWORD PTR [RCX+16]
            sub R14D,R13D
            mov RDI,RCX
            lea RDX,QWORD PTR [R14+R14*4]
            movdqu XMM0,XMMWORD PTR [RCX]
            mov QWORD PTR [RSP+48],R10
            mov QWORD PTR [RSP+40],R8
            mov DWORD PTR [RSP+96],EAX
            lea RAX,QWORD PTR [R11+R11*4]
            shl RDX,2
            movaps XMMWORD PTR [RSP+80],XMM0
            lea RSI,QWORD PTR [R12+RAX*4]
            call memmove@PLT

            mov R10,QWORD PTR [RSP+48]
            mov RCX,RAX
            mov EAX,DWORD PTR [RSP+96]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            cmp R13D,EBP
            mov R8,QWORD PTR [RSP+40]
            movups XMMWORD PTR [R10],XMM0
            mov DWORD PTR [R10+16],EAX
            jae .L_418dad

            cmp BYTE PTR [RSP+32],1
            adc EBP,-1
            jmp .L_418dad
          .byte 0x90
.L_4192c0:

            lea EDI,DWORD PTR [RBP+1]
            cmp EDI,EBX
            jae .L_418d08

            cmp EBX,EDI
            mov R11D,16400
            mov R14D,202758
            jbe .L_4193a9

            nop
.L_4192e0:

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RSI+12],32
            jne .L_418d08

            movzx EAX,BYTE PTR [RSI+18]
            bt R15D,EAX
            jae .L_419339

            lea EDX,DWORD PTR [RDI+1]
            mov RAX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            jmp .L_419313
          .byte 0x66
          .byte 0x90
.L_419310:

            add EAX,1
.L_419313:

            cmp EAX,EBX
            mov EDI,EAX
            je .L_418d08

            test BYTE PTR [RDX+12],32
            mov RSI,RDX
            jne .L_418d08

            movzx R9D,BYTE PTR [RSI+18]
            add RDX,20
            bt R15D,R9D
            jb .L_419310
.L_419339:

            movzx EAX,BYTE PTR [RSI+18]
            bt R11D,EAX
            jae .L_418d08

            lea EDX,DWORD PTR [RDI+1]
            cmp EDX,EBX
            jae .L_419396

            mov EAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RSI+12],32
            jne .L_419396

            movzx EAX,BYTE PTR [RSI+18]
            bt R15D,EAX
            jae .L_4193d6

            lea EAX,DWORD PTR [RDI+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            jmp .L_41938f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419378:

            test BYTE PTR [RAX+12],32
            mov RSI,RAX
            jne .L_4193d0

            movzx EDI,BYTE PTR [RSI+18]
            add RAX,20
            bt R15D,EDI
            jae .L_4193d0
.L_41938f:

            add EDX,1
            cmp EDX,EBX
            jb .L_419378
.L_419396:

            lea EDI,DWORD PTR [RDX+1]
            cmp EDI,EBX
            jae .L_418d08
.L_4193a1:

            cmp EBX,EDI
            ja .L_4192e0
.L_4193a9:

            je .L_418d08

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RSI+12],32
            je .L_419339

            jmp .L_418d08
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4193d0:

            test BYTE PTR [RSI+12],32
            jne .L_419396
.L_4193d6:

            movzx EAX,BYTE PTR [RSI+18]
            bt R14D,EAX
            jae .L_419396

            cmp BYTE PTR [RSI+19],8
            jne .L_419396

            lea EDI,DWORD PTR [RDX+1]
            mov BYTE PTR [RSI+19],4
            mov EBP,EDX
            cmp EDI,EBX
            jb .L_4193a1

            jmp .L_418d08

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419400:

            movzx ESI,BYTE PTR [RDX+18]
.L_419404:

            mov EAX,16400
            bt EAX,ESI
            jae .L_418fd8

            cmp BYTE PTR [RDX+19],2
            je .L_418fd8

            lea EAX,DWORD PTR [R14+1]
            cmp EAX,EBX
            jae .L_4198c7

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            test BYTE PTR [RDX+12],32
            jne .L_4198c7

            movzx EDX,BYTE PTR [RDX+18]
            bt R15D,EDX
            jae .L_4198c7

            mov R14D,EAX
            nop
            nop
            nop
.L_419450:

            cmp R14D,R13D
            jbe .L_418fd8

            mov EAX,R14D
            lea RDX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [R12+RDX*4+19],2
            je .L_418fd8
.L_41946c:

            lea EDX,DWORD PTR [R14-1]
            mov QWORD PTR [RSP+32],R12
            mov DWORD PTR [RSP+40],EBX
            mov QWORD PTR [RSP+56],R8
            mov DWORD PTR [RSP+64],R9D
            sub RAX,RDX
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov QWORD PTR [RSP+72],RCX
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov EBX,EDX
            lea R10,QWORD PTR [R12+RSI*4]
            shl RAX,2
            mov QWORD PTR [RSP+48],RAX
            mov EAX,R13D
            mov R12,R10
            mov R13D,R14D
            mov R14D,EAX
            jmp .L_4194c0
.L_4194b0:

            sub R12,20
            cmp EBX,R14D
            je .L_419558
.L_4194bd:

            sub EBX,1
.L_4194c0:

            cmp BYTE PTR [R12+19],2
            jne .L_4194b0

            cmp EBX,EBP
            jae .L_4194d2

            cmp R13D,EBP
            adc EBP,-1
.L_4194d2:

            mov EAX,DWORD PTR [R12+16]
            mov RDI,R12
            movdqu XMM0,XMMWORD PTR [R12]
            mov DWORD PTR [RSP+96],EAX
            mov EAX,R13D
            sub EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RSP+48]
            movaps XMMWORD PTR [RSP+80],XMM0
            shl RDX,2
            lea RSI,QWORD PTR [RAX+R12*1]
            call memmove@PLT

            mov EAX,R13D
            mov RCX,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+96]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+16],EDX
            lea EDX,DWORD PTR [RBP+1]
            movups XMMWORD PTR [RAX],XMM0
            mov EAX,DWORD PTR [RSP+40]
            cmp EDX,EAX
            cmova EDX,EAX
            mov EAX,EDX
            sub EAX,R13D
            cmp EAX,1
            jbe .L_419547

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,R13D
            call .L_402ee0
.L_419547:

            sub R13D,1
            sub R12,20
            cmp EBX,R14D
            jne .L_4194bd
.L_419558:

            mov R12,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+56]
            mov R13D,R14D
            mov EBX,DWORD PTR [RSP+40]
            mov R9D,DWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+72]
            jmp .L_418d9f
.L_419578:

            mov RAX,R9
            mov R14D,EDX
            nop
            nop
.L_419580:

            movzx ESI,WORD PTR [RAX+12]
            test SIL,32
            je .L_418e08

            and ESI,64
            jne .L_418e08

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RDI+148]
            cmp ESI,1415671148
            je .L_419926

            cmp ESI,1298954605
            je .L_419926

            cmp EBP,R13D
            jbe .L_419a91

            lea ESI,DWORD PTR [RBP-1]
            mov EDI,EBP
            mov QWORD PTR [RSP],R12
            mov DWORD PTR [RSP+32],EDX
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4]
            jmp .L_4195e3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4195e0:

            mov EDI,R11D
.L_4195e3:

            test BYTE PTR [RSI+12],32
            lea R11D,DWORD PTR [RDI-1]
            mov R10,RSI
            jne .L_419604

            movzx R12D,BYTE PTR [RSI+18]
            mov EDX,16528
            bt EDX,R12D
            jb .L_4199da
.L_419604:

            sub RSI,20
            cmp R11D,R13D
            jne .L_4195e0

            mov R12,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov EBP,R13D
            lea R9,QWORD PTR [R12+RDX*4]
.L_41961c:

            lea EDX,DWORD PTR [R14+1]
            mov ESI,EDX
            sub ESI,EBP
            cmp ESI,1
            jbe .L_419665

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,EBP
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP],R8
            call .L_402ee0

            mov RCX,QWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP]
.L_419665:

            sub R14D,EBP
            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDX,QWORD PTR [R14+R14*4]
            mov EAX,DWORD PTR [RAX+16]
            mov RSI,R10
            mov RDI,R9
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+32],R8
            shl RDX,2
            mov QWORD PTR [RSP],R10
            movaps XMMWORD PTR [RSP+80],XMM0
            mov DWORD PTR [RSP+96],EAX
            call memmove@PLT

            mov R10,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+96]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            mov R8,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+40]
            movups XMMWORD PTR [R10],XMM0
            mov DWORD PTR [R10+16],EAX
            jmp .L_418e08
.L_4196be:

            mov ESI,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4196c8:

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,EBX
            cmova EAX,EBX
            mov EDX,EAX
            sub EAX,ESI
            cmp EAX,1
            jbe .L_418da3

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+48],RCX
            mov DWORD PTR [RSP+40],R9D
            mov QWORD PTR [RSP+32],R8
            call .L_402ee0

            mov RCX,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [RSP+40]
            movzx EDI,BYTE PTR [RCX+19]
            jmp .L_418da3
.L_41970e:

            lea EDX,DWORD PTR [R14+1]
            cmp EDX,EBP
            jae .L_419750

            mov EAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_419750

            movzx ESI,BYTE PTR [RAX+18]
            bt R15D,ESI
            jae .L_419750

            lea ESI,DWORD PTR [R14+2]
            mov R10,RAX
            mov R14D,EDX
            mov BYTE PTR [RSP+32],0
            mov EDX,ESI
            jmp .L_419216
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419750:

            cmp R14D,EBP
            setae BYTE PTR [RSP+32]
            jmp .L_419216
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419760:

            mov EAX,DWORD PTR [R8+96]
            test EAX,EAX
            setne BYTE PTR [RSP]
            cmp R13D,EBX
            jne .L_419af4
.L_419773:

            mov EBP,EBX
            lea R10D,DWORD PTR [R13+1]
            jmp .L_418d97
.L_41977e:

            movzx EDX,WORD PTR [RDI+12]
            mov ESI,EDX
            and ESI,48
            cmp SI,48
            je .L_4199a0

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [R12+RDX*4]
.L_41979b:

            test BYTE PTR [RSI+12],32
            jne .L_419a17

            movzx EDX,BYTE PTR [RSI+18]
            mov EDI,16400
            bt EDI,EDX
            jae .L_419a17

            lea EDX,DWORD PTR [RAX+1]
            mov EBP,EAX
            mov EDI,16400
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            jmp .L_4197e3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4197d0:

            test BYTE PTR [RDX+12],32
            jne .L_4197ed

            movzx EAX,BYTE PTR [RSI+18]
            add RDX,20
            bt EDI,EAX
            jae .L_4197ed
.L_4197e3:

            add EBP,1
            mov RSI,RDX
            cmp EBP,EBX
            jb .L_4197d0
.L_4197ed:

            mov BYTE PTR [RSI+19],4
            mov BYTE PTR [RSP],0
            jmp .L_418cf0
.L_4197fa:

            cmp BYTE PTR [RSP],0
            jne .L_418db3

            jmp .L_418e12
.L_419809:

            cmp R10D,EBX
            mov R9D,R10D
            jb .L_419064

            jmp .L_418dad
.L_41981a:

            test BYTE PTR [R10+12],32
            jne .L_41920a

            movzx EAX,BYTE PTR [R10+18]
            mov EDX,16400
            bt EDX,EAX
            jae .L_41920a

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,R14D
            jae .L_41920a
.L_419844:

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            cmp BYTE PTR [R12+RDX*4+18],7
            sete DL
            add EAX,1
            movzx EDX,DL
            sub R14D,EDX
            cmp EAX,R14D
            jb .L_419844

            lea EDX,DWORD PTR [R14+1]
            jmp .L_41990e
.L_41986a:

            cmp EBX,EBP
            jbe .L_419139

            lea EAX,DWORD PTR [RBP+1]
            mov EDX,22528
            mov R14,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,BYTE PTR [R12+RAX*4+19]
            bt EDX,EAX
            jb .L_419a81

            mov ESI,22528
            jmp .L_4198bd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4198a0:

            lea EAX,DWORD PTR [R14+1]
            mov RDX,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,BYTE PTR [R12+RAX*4+19]
            bt ESI,EAX
            jb .L_4199c2

            mov R14D,EDX
.L_4198bd:

            cmp R14D,EBX
            jne .L_4198a0

            jmp .L_419139
.L_4198c7:

            cmp R13D,R14D
            mov EAX,R14D
            jb .L_41946c

            jmp .L_418fd8
.L_4198d8:

            lea EAX,DWORD PTR [RBP+1]
            mov R14D,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4+19]
            jmp .L_4198fd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4198f0:

            add RAX,20
            cmp BYTE PTR [RAX-20],5
            ja .L_419905

            mov R14D,EDX
.L_4198fd:

            lea EDX,DWORD PTR [R14+1]
            cmp EDX,EBX
            jb .L_4198f0
.L_419905:

            cmp R14D,EBX
            jae .L_419139
.L_41990e:

            mov EAX,R14D
            cmp R14D,EBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            setae BYTE PTR [RSP+32]
            lea R10,QWORD PTR [R12+RAX*4]
            jmp .L_419216
.L_419926:

            mov ESI,EBP
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea R10,QWORD PTR [R12+RSI*4]
.L_419930:

            cmp EBP,R13D
            jbe .L_41961c

            lea ESI,DWORD PTR [RBP-1]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RSI,QWORD PTR [R12+RSI*4]
            test BYTE PTR [RSI+12],32
            jne .L_41961c
.L_41994e:

            movzx ESI,BYTE PTR [RSI+18]
            mov EDI,16400
            bt EDI,ESI
            jae .L_41961c

            cmp EBX,EBP
            jbe .L_41961c

            test BYTE PTR [R10+12],32
            jne .L_41961c

            movzx ESI,BYTE PTR [R10+18]
            bt R15D,ESI
            jae .L_41961c

            lea ESI,DWORD PTR [RDX+1]
            mov R10,R9
            mov EBP,EDX
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea R9,QWORD PTR [R12+RSI*4]
            jmp .L_41961c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4199a0:

            and EDX,64
            je .L_418cf0

            mov EDX,EAX
            cmp EAX,EBX
            mov EBP,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [R12+RDX*4]
            jb .L_41979b

            jmp .L_4197ed
.L_4199c2:

            cmp R14D,EBP
            setae BYTE PTR [RSP+32]
.L_4199ca:

            mov EAX,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [R12+RAX*4]
            jmp .L_419216
.L_4199da:

            cmp R13D,EDI
            mov EDX,DWORD PTR [RSP+32]
            mov BYTE PTR [RSP+32],R12B
            mov R12,QWORD PTR [RSP]
            jae .L_419ab9

            cmp BYTE PTR [RSP+32],7
            je .L_419a1e
.L_4199f7:

            mov EDX,EDI
            lea R9D,DWORD PTR [RDI+1]
            mov EBP,EDI
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R10,QWORD PTR [R12+RDX*4]
            mov RDX,R9
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [R12+R9*4]
            jmp .L_41994e
.L_419a17:

            mov EBP,EAX
            jmp .L_4197ed
.L_419a1e:

            cmp EDX,R14D
            jae .L_419ad5

            cmp BYTE PTR [R9+18],7
            je .L_419aa5

            lea EDX,DWORD PTR [RBP+2]
            lea R9,QWORD PTR [RDX+RDX*4]
            lea R9,QWORD PTR [R12+R9*4+18]
            mov QWORD PTR [RSP],R9
            mov R9D,4294967294
            sub R9D,EBP
            mov EBP,R9D
            mov R9,QWORD PTR [RSP]
            add EBP,R14D
            add RDX,RBP
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R12+RDX*4+18]
.L_419a5d:

            cmp RDX,R9
            je .L_4199f7

            add R9,20
            cmp BYTE PTR [R9-20],7
            jne .L_419a5d

            mov EDX,EDI
            mov EBP,R11D
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R9,QWORD PTR [R12+RDX*4]
            mov EDX,EDI
            jmp .L_419930
.L_419a81:

            mov EDX,R14D
            mov BYTE PTR [RSP+32],1
            mov R14D,EBP
            jmp .L_4199ca
.L_419a91:

            mov EDX,EBP
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R10,QWORD PTR [R12+RDX*4]
            jmp .L_41961c
.L_419aa0:

            call __stack_chk_fail@PLT
.L_419aa5:

            mov R9D,EDI
            mov EDX,EDI
            mov EBP,R11D
            imul R9,R9,20
            add R9,R12
            jmp .L_419930
.L_419ab9:

            lea R9D,DWORD PTR [RDI+1]
            mov EDX,EDI
            mov EBP,EDI
            imul RDX,RDX,20
            imul R9,R9,20
            lea R10,QWORD PTR [R12+RDX*1]
            add R9,R12
            jmp .L_41961c
.L_419ad5:

            lea R9D,DWORD PTR [RDI+1]
            mov R10D,EDI
            mov EBP,EDI
            imul R10,R10,20
            mov RDX,R9
            imul R9,R9,20
            add R10,R12
            add R9,R12
            jmp .L_41994e
.L_419af4:

            lea R9D,DWORD PTR [R13+1]
            cmp EBX,R9D
            ja .L_419b14
.L_419afd:

            mov EBP,R13D
            jmp .L_418dad
.L_419b05:

            je .L_419773

            lea R9D,DWORD PTR [R13+1]
            cmp R9D,EBX
            jae .L_419afd
.L_419b14:

            mov EBP,R13D
            jmp .L_418d9f
.L_419b1c:

            lea RCX,QWORD PTR [RIP+.L_441e80]
            lea RSI,QWORD PTR [RIP+.L_446590]
            lea RDI,QWORD PTR [RIP+.L_4465d0]
            mov EDX,1443
            call __assert_fail@PLT
.L_419b3b:

            nop
            nop
            nop
            nop
            nop
.L_419b40:

            push R13
            push R12
            mov ESI,168
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,8
.L_419b57:

            call calloc@PLT

            test RAX,RAX
            je .L_419df4

            lea R8,QWORD PTR [RIP+.L_446400]
            mov EDI,DWORD PTR [RBP+4]
            mov ESI,1147500129
            mov EDX,1
            mov QWORD PTR [RAX],R8
            lea RCX,QWORD PTR [R8+56]
            jmp .L_419b8e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419b88:

            mov ESI,DWORD PTR [RCX]
            add RCX,28
.L_419b8e:

            cmp EDI,ESI
            je .L_41a06b

            add EDX,1
            cmp EDX,12
            jne .L_419b88
.L_419b9e:

            cmp EDI,1298954605
            mov BYTE PTR [RAX+8],0
            mov DWORD PTR [RAX+12],4294967295
            setne DIL
.L_419bb3:

            mov EBX,DWORD PTR [RBP+56]
            mov R9,QWORD PTR [RBP+64]
            xor R8D,R8D
            mov BYTE PTR [RAX+28],DIL
            mov RSI,RBX
            mov R12,RBX
.L_419bc7:

            cmp R8,R12
            jae .L_419c17

            lea RCX,QWORD PTR [R8+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R11,QWORD PTR [R9+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1919969382
            ja .L_419c12

            jmp .L_419dff
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419bf0:

            lea RDX,QWORD PTR [R8+RCX*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [R9+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1919969382
            jbe .L_419e08

            mov RCX,RDX
.L_419c12:

            cmp R8,RCX
            jb .L_419bf0
.L_419c17:

            mov QWORD PTR [RAX+16],0
            mov DWORD PTR [RAX+24],0
.L_419c26:

            mov BYTE PTR [RAX+44],DIL
            mov R12,RBX
            xor R8D,R8D
.L_419c30:

            cmp R8,R12
            jae .L_419c7f

            lea RCX,QWORD PTR [R8+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R11,QWORD PTR [R9+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1886545254
            ja .L_419c7a

            jmp .L_419eba
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419c58:

            lea RDX,QWORD PTR [R8+RCX*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [R9+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1886545254
            jbe .L_419ec0

            mov RCX,RDX
.L_419c7a:

            cmp R8,RCX
            jb .L_419c58
.L_419c7f:

            mov QWORD PTR [RAX+32],0
            mov DWORD PTR [RAX+40],0
.L_419c8e:

            mov BYTE PTR [RAX+60],DIL
            mov R12,RBX
            xor R8D,R8D
.L_419c98:

            cmp R8,R12
            jae .L_419ce7

            lea RCX,QWORD PTR [R8+R12*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R11,QWORD PTR [R9+RDX*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1651275622
            ja .L_419ce2

            jmp .L_419ed5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419cc0:

            lea RDX,QWORD PTR [RCX+R8*1]
            shr RDX,1
            lea R10,QWORD PTR [RDX+RDX*8]
            lea R11,QWORD PTR [R9+R10*4]
            mov R10D,DWORD PTR [R11]
            cmp R10D,1651275622
            jbe .L_419ee0

            mov RCX,RDX
.L_419ce2:

            cmp RCX,R8
            ja .L_419cc0
.L_419ce7:

            mov QWORD PTR [RAX+48],0
            mov DWORD PTR [RAX+56],0
.L_419cf6:

            mov BYTE PTR [RAX+76],DIL
            xor EDI,EDI
.L_419cfc:

            cmp RDI,RSI
            jae .L_419d4f

            lea RCX,QWORD PTR [RDI+RSI*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R10,QWORD PTR [R9+RDX*4]
            mov R8D,DWORD PTR [R10]
            cmp R8D,1886614630
            ja .L_419d4a

            jmp .L_419ef9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419d28:

            lea RDX,QWORD PTR [RCX+RDI*1]
            shr RDX,1
            lea RSI,QWORD PTR [RDX+RDX*8]
            lea R10,QWORD PTR [R9+RSI*4]
            mov R8D,DWORD PTR [R10]
            cmp R8D,1886614630
            jbe .L_419f00

            mov RCX,RDX
.L_419d4a:

            cmp RCX,RDI
            ja .L_419d28
.L_419d4f:

            mov QWORD PTR [RAX+64],0
            mov DWORD PTR [RAX+72],0
.L_419d5e:

            lea R12,QWORD PTR [RIP+.L_446340]
            xor R10D,R10D
            mov ECX,1
            lea RBP,QWORD PTR [R12+4]
            jmp .L_419d8c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419d78:

            mov DWORD PTR [RAX+R10*1+80],EDX
            add R10,4
            cmp R10,84
            je .L_419df4
.L_419d87:

            mov ECX,DWORD PTR [RBP+R10*2]
.L_419d8c:

            xor EDX,EDX
            and ECX,1
            jne .L_419d78

            mov R11D,DWORD PTR [R12+R10*2]
            mov R13,RBX
            xor ESI,ESI
.L_419d9c:

            cmp RSI,R13
            jae .L_419de3

            lea RCX,QWORD PTR [RSI+R13*1]
            shr RCX,1
            lea RDX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R9+RDX*4]
            mov EDI,DWORD PTR [R8]
            cmp R11D,EDI
            jb .L_419dde

            jmp .L_419e98
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419dc0:

            lea RDX,QWORD PTR [RCX+RSI*1]
            shr RDX,1
            lea RDI,QWORD PTR [RDX+RDX*8]
            lea R8,QWORD PTR [R9+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp R11D,EDI
            jae .L_419ea0

            mov RCX,RDX
.L_419dde:

            cmp RCX,RSI
            ja .L_419dc0
.L_419de3:

            xor EDX,EDX
            mov DWORD PTR [RAX+R10*1+80],EDX
            add R10,4
            cmp R10,84
            jne .L_419d87
.L_419df4:

            add RSP,8
.L_419df8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_419dff:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
.L_419e08:

            cmp R10D,1919969382
            je .L_419e1d

            lea R8,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_419bc7
.L_419e1d:

            mov EDX,DWORD PTR [R11+12]
            cmp EDX,-1
            je .L_419c17

            mov R8D,DWORD PTR [RBP+904]
            cmp EDX,R8D
            ja .L_41a0cd

            test EDX,EDX
            jne .L_419e6f

            xor R10D,R10D
            xor ECX,ECX
            cmp EDX,R8D
            jae .L_419e8b
.L_419e48:

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov R8D,DWORD PTR [RDX]
.L_419e56:

            add RCX,QWORD PTR [RBP+368]
            mov EDX,R8D
            sub EDX,R10D
            mov DWORD PTR [RAX+24],EDX
            mov QWORD PTR [RAX+16],RCX
            jmp .L_419c26
.L_419e6f:

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov R10,RCX
            shl RCX,3
            cmp EDX,R8D
            jb .L_419e48
.L_419e8b:

            mov R8D,DWORD PTR [RBP+360]
            jmp .L_419e56
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419e98:

            mov RDX,RCX
            mov RCX,R13
            nop
            nop
.L_419ea0:

            cmp EDI,R11D
            jae .L_419eb1

            lea RSI,QWORD PTR [RDX+1]
            mov R13,RCX
            jmp .L_419d9c
.L_419eb1:

            mov EDX,DWORD PTR [R8+28]
            jmp .L_419d78
.L_419eba:

            mov RDX,RCX
            mov RCX,R12
.L_419ec0:

            cmp R10D,1886545254
            je .L_419f19

            lea R8,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_419c30
.L_419ed5:

            mov RDX,RCX
            mov RCX,R12
            nop
            nop
            nop
            nop
            nop
.L_419ee0:

            cmp R10D,1651275622
            je .L_419f85

            lea R8,QWORD PTR [RDX+1]
            mov R12,RCX
            jmp .L_419c98
.L_419ef9:

            mov RDX,RCX
            mov RCX,RSI
            nop
.L_419f00:

            cmp R8D,1886614630
            je .L_419ff1

            lea RDI,QWORD PTR [RDX+1]
            mov RSI,RCX
            jmp .L_419cfc
.L_419f19:

            mov EDX,DWORD PTR [R11+12]
            cmp EDX,-1
            je .L_419c7f

            mov R8D,DWORD PTR [RBP+904]
            cmp EDX,R8D
            ja .L_41a0cd

            test EDX,EDX
            je .L_41a0af

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov R10,RCX
            shl RCX,3
.L_419f55:

            cmp EDX,R8D
            jae .L_41a0a3

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov R8D,DWORD PTR [RDX]
.L_419f6c:

            add RCX,QWORD PTR [RBP+368]
            mov EDX,R8D
            sub EDX,R10D
            mov DWORD PTR [RAX+40],EDX
            mov QWORD PTR [RAX+32],RCX
            jmp .L_419c8e
.L_419f85:

            mov EDX,DWORD PTR [R11+12]
            cmp EDX,-1
            je .L_419ce7

            mov R8D,DWORD PTR [RBP+904]
            cmp EDX,R8D
            ja .L_41a0cd

            test EDX,EDX
            je .L_41a061

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov R10,RCX
            shl RCX,3
.L_419fc1:

            cmp EDX,R8D
            jae .L_41a055

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov R8D,DWORD PTR [RDX]
.L_419fd8:

            add RCX,QWORD PTR [RBP+368]
            mov EDX,R8D
            sub EDX,R10D
            mov DWORD PTR [RAX+56],EDX
            mov QWORD PTR [RAX+48],RCX
            jmp .L_419cf6
.L_419ff1:

            mov EDX,DWORD PTR [R10+12]
            cmp EDX,-1
            je .L_419d4f

            mov ESI,DWORD PTR [RBP+904]
            cmp EDX,ESI
            ja .L_41a0cd

            test EDX,EDX
            je .L_41a0c4

            lea ECX,DWORD PTR [RDX-1]
            shl RCX,4
            add RCX,QWORD PTR [RBP+912]
            mov ECX,DWORD PTR [RCX]
            mov RDI,RCX
            shl RCX,3
.L_41a02b:

            cmp EDX,ESI
            jae .L_41a0b9

            shl RDX,4
            add RDX,QWORD PTR [RBP+912]
            mov ESI,DWORD PTR [RDX]
.L_41a040:

            add RCX,QWORD PTR [RBP+368]
            sub ESI,EDI
            mov DWORD PTR [RAX+72],ESI
            mov QWORD PTR [RAX+64],RCX
            jmp .L_419d5e
.L_41a055:

            mov R8D,DWORD PTR [RBP+360]
            jmp .L_419fd8
.L_41a061:

            xor R10D,R10D
            xor ECX,ECX
            jmp .L_419fc1
.L_41a06b:

            lea RCX,QWORD PTR [RDX*8]
            sub RCX,RDX
            lea RDX,QWORD PTR [R8+RCX*4]
            cmp BYTE PTR [RDX+4],0
            mov QWORD PTR [RAX],RDX
            je .L_419b9e

            cmp BYTE PTR [RBP+40],50
            je .L_419b9e

            mov BYTE PTR [RAX+8],1
            mov DWORD PTR [RAX+12],4294967295
            xor EDI,EDI
            jmp .L_419bb3
.L_41a0a3:

            mov R8D,DWORD PTR [RBP+360]
            jmp .L_419f6c
.L_41a0af:

            xor R10D,R10D
            xor ECX,ECX
            jmp .L_419f55
.L_41a0b9:

            mov ESI,DWORD PTR [RBP+360]
            jmp .L_41a040
.L_41a0c4:

            xor EDI,EDI
            xor ECX,ECX
            jmp .L_41a02b
.L_41a0cd:

            lea RCX,QWORD PTR [RIP+.L_441f00]
            lea RSI,QWORD PTR [RIP+.L_4465ad]
            lea RDI,QWORD PTR [RIP+.L_4465f0]
            mov EDX,113
            call __assert_fail@PLT
.L_41a0ec:

            nop
            nop
            nop
            nop
.L_41a0f0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RCX
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,40
.L_41a104:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp ESI,6080
            je .L_41a3d0

            mov R13,RDI
            mov EBX,ESI
            jbe .L_41a210

            cmp ESI,6438
            je .L_41a2f0

            ja .L_41a280

            cmp ESI,6085
            je .L_41a2d8

            cmp ESI,6437
            je .L_41a3b0

            cmp ESI,6084
            je .L_41a330
.L_41a161:

            cmp EBX,3546
            je .L_41a174

            lea EAX,DWORD PTR [RBX-3548]
            cmp EAX,2
            ja .L_41a1d8
.L_41a174:

            mov EDX,DWORD PTR [RIP+.L_6572a8]
            mov RAX,QWORD PTR [R13]
            test EDX,EDX
            mov R14,QWORD PTR [RAX+1064]
            jne .L_41a18e

            call .L_4056a0
.L_41a18e:

            test BYTE PTR [RIP+.L_6572a8],2
            jne .L_41a46d

            mov RDI,QWORD PTR [R13+16]
            lea RDX,QWORD PTR [RSP+20]
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP],RDX
            mov RCX,RDX
            mov EDX,EBX
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41a410
.L_41a1d8:

            mov RAX,QWORD PTR [R13+24]
            mov RCX,R12
            mov DWORD PTR [RBP],EBX
            mov RDX,RBP
            mov DWORD PTR [R12],0
            mov ESI,EBX
            mov R8,QWORD PTR [RAX+240]
            mov RDI,RAX
            call QWORD PTR [RAX+176]

            test EAX,EAX
            setne AL
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a210:

            cmp ESI,3959
            je .L_41a370

            jbe .L_41a350

            cmp ESI,6078
            je .L_41a2c0

            ja .L_41a3f0

            cmp ESI,3961
            jne .L_41a161

            mov DWORD PTR [RDX],4019
            mov EAX,1
            mov DWORD PTR [RCX],3969
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a258:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41a482

            add RSP,40
.L_41a270:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a280:

            cmp ESI,69934
            je .L_41a310

            cmp ESI,69935
            je .L_41a390

            cmp ESI,6972
            jne .L_41a161

            mov DWORD PTR [RDX],6978
            mov EAX,1
            mov DWORD PTR [RCX],6972
            jmp .L_41a258
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a2c0:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6078
            jmp .L_41a258
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a2d8:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6085
            jmp .L_41a258
          .byte 0x66
          .byte 0x90
.L_41a2f0:

            mov DWORD PTR [RDX],6432
            mov EAX,1
            mov DWORD PTR [RCX],6436
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a310:

            mov DWORD PTR [RDX],69927
            mov EAX,1
            mov DWORD PTR [RCX],69937
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a330:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6084
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a350:

            cmp ESI,2353
            je .L_41a364

            cmp ESI,2964
            jne .L_41a161
.L_41a364:

            xor EAX,EAX
            jmp .L_41a258
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a370:

            mov DWORD PTR [RDX],4018
            mov EAX,1
            mov DWORD PTR [RCX],3969
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a390:

            mov DWORD PTR [RDX],69927
            mov EAX,1
            mov DWORD PTR [RCX],69938
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a3b0:

            mov DWORD PTR [RDX],6432
            mov EAX,1
            mov DWORD PTR [RCX],6435
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a3d0:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6080
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a3f0:

            mov DWORD PTR [RDX],6081
            mov EAX,1
            mov DWORD PTR [RCX],6079
            jmp .L_41a258
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a410:

            mov RAX,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [RAX+128]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [R14+72]
            test EAX,EAX
            je .L_41a1d8

            xor R15D,R15D
            jmp .L_41a446
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a438:

            add R15D,1
            cmp DWORD PTR [R14+72],R15D
            jbe .L_41a1d8
.L_41a446:

            mov RDX,QWORD PTR [R14+64]
            mov EAX,R15D
            movzx R8D,BYTE PTR [R14+76]
            mov RDI,QWORD PTR [RSP+8]
            mov ECX,1
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP]
            call .L_4291b0

            test EAX,EAX
            je .L_41a438
.L_41a46d:

            mov DWORD PTR [RBP],3545
            mov EAX,1
            mov DWORD PTR [R12],EBX
            jmp .L_41a258
.L_41a482:

            call __stack_chk_fail@PLT
.L_41a487:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a490:

            push R15
            push R14
            mov R9,RDI
            push R13
            push R12
            mov R14D,ECX
            push RBP
            push RBX
            mov EBX,R8D
            sub RSP,120
.L_41a4a7:

            mov RAX,QWORD PTR [R9]
            mov RBP,QWORD PTR [RDX+200]
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+72],RSI
            cmp DWORD PTR [RAX+16],1
            mov EDX,DWORD PTR [RAX+20]
            je .L_41a4e1

            mov R8D,DWORD PTR [R9+88]
            test R8D,R8D
            jne .L_41aa63
.L_41a4e1:

            cmp EDX,3
            mov ESI,DWORD PTR [RAX+12]
            je .L_41acd5

            cmp ESI,1
            je .L_41ae4e

            jb .L_41af1d

            mov EAX,R14D
            cmp ESI,2
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            je .L_41ad09
.L_41a516:

            lea EAX,DWORD PTR [R14+1]
            lea R12D,DWORD PTR [RBX+1]
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
.L_41a526:

            xor R11D,R11D
            cmp R14D,EBX
            mov R15D,EBX
            jae .L_41a586
.L_41a531:

            mov RDI,QWORD PTR [RSP+16]
            mov EDX,R14D
            mov ECX,3
            not EDX
            add EDX,R15D
            add RDX,RDI
            lea RAX,QWORD PTR [RDI+RDI*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+19]
            lea RSI,QWORD PTR [RBP+RDX*4+39]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a560:

            movzx EDX,BYTE PTR [RAX]
            cmp DL,3
            cmova EDX,ECX
            add RAX,20
            mov BYTE PTR [RAX-20],DL
            cmp RAX,RSI
            jne .L_41a560
.L_41a575:

            cmp EBX,R15D
            jbe .L_41a586

            mov EAX,R15D
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov BYTE PTR [RBP+RAX*4+19],4
.L_41a586:

            cmp EBX,R12D
            jbe .L_41a5cd

            mov R13D,R12D
            lea RAX,QWORD PTR [R13+R13*4]
            cmp BYTE PTR [RBP+RAX*4+18],7
            je .L_41ac30

            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RBP+RAX*4+18]
            mov EAX,R12D
            jmp .L_41a5c6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a5b8:

            add RDX,20
            cmp BYTE PTR [RDX-20],7
            je .L_41ac38
.L_41a5c6:

            add EAX,1
            cmp EBX,EAX
            jne .L_41a5b8
.L_41a5cd:

            test R11B,R11B
            je .L_41a5d7

            mov BYTE PTR [R8+19],1
.L_41a5d7:

            cmp BYTE PTR [R9+8],0
            je .L_41a630

            cmp EBX,R12D
            jbe .L_41b350

            mov R13D,R12D
            lea RAX,QWORD PTR [R13+R13*4]
            lea RDI,QWORD PTR [RBP+RAX*4]
            cmp BYTE PTR [RDI+18],4
            je .L_41add8

            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RBP+RAX*4]
            mov EAX,R12D
            jmp .L_41a629
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a618:

            mov RDI,RDX
            add RDX,20
            cmp BYTE PTR [RDX-2],4
            je .L_41addb
.L_41a629:

            add EAX,1
            cmp EBX,EAX
            jne .L_41a618
.L_41a630:

            cmp R14D,EBX
            jae .L_41b014
.L_41a639:

            mov RAX,QWORD PTR [RSP+16]
            mov EDX,R14D
            xor ECX,ECX
            mov EDI,155768
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            jmp .L_41a672
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a658:

            mov BYTE PTR [RAX+19],CL
            cmp WORD PTR [RAX+18],516
            je .L_41abc8
.L_41a667:

            add EDX,1
            add RAX,20
            cmp EBX,EDX
            je .L_41a693
.L_41a672:

            movzx ESI,BYTE PTR [RAX+18]
            bt EDI,ESI
            jb .L_41a658

            movzx R10D,BYTE PTR [RAX+19]
            cmp R10B,14
            cmovne ECX,R10D
            add EDX,1
            add RAX,20
            cmp EBX,EDX
            jne .L_41a672
.L_41a693:

            cmp EBX,R12D
            jbe .L_41b566
.L_41a69c:

            mov R13D,R12D
.L_41a69f:

            mov ESI,202758
            lea RDI,QWORD PTR [RBP+39]
            jmp .L_41a6c2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a6b0:

            cmp AL,7
            cmove R15D,R12D
            add R12D,1
            cmp EBX,R12D
            jbe .L_41a728
.L_41a6bf:

            mov R13D,R12D
.L_41a6c2:

            lea RAX,QWORD PTR [R13+R13*4]
            lea RDX,QWORD PTR [RBP+RAX*4]
            test BYTE PTR [RDX+12],32
            movzx EAX,BYTE PTR [RDX+18]
            jne .L_41a6b0

            bt ESI,EAX
            jae .L_41a6b0

            lea ECX,DWORD PTR [R15+1]
            cmp ECX,R12D
            jae .L_41a716

            lea R10D,DWORD PTR [R12-2]
            lea RAX,QWORD PTR [RCX+RCX*4]
            sub R10D,R15D
            lea RAX,QWORD PTR [RBP+RAX*4+19]
            add RCX,R10
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RDI+RCX*4]
.L_41a700:

            cmp BYTE PTR [RAX],13
            ja .L_41a70d

            movzx R10D,BYTE PTR [RDX+19]
            mov BYTE PTR [RAX],R10B
.L_41a70d:

            add RAX,20
            cmp RCX,RAX
            jne .L_41a700
.L_41a716:

            mov R15D,R12D
            add R12D,1
            cmp EBX,R12D
            ja .L_41a6bf

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a728:

            movzx EAX,BYTE PTR [R8+15]
            cmp R14D,EBX
            mov BYTE PTR [RSP+32],AL
            jae .L_41b026
.L_41a73a:

            mov ESI,R14D
            mov EAX,R14D
.L_41a740:

            mov EDX,EAX
            mov ECX,EAX
            add EAX,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            sub ECX,ESI
            cmp EBX,EAX
            mov BYTE PTR [RBP+RDX*4+15],CL
            ja .L_41a740

            mov EAX,EBX
            sub EAX,R14D
            cmp EAX,1
            mov EDI,EAX
            jbe .L_41a82d
.L_41a765:

            mov R12D,1
            lea R15,QWORD PTR [R8+19]
            mov R13D,1
            mov RAX,R12
            mov QWORD PTR [RSP+40],RBP
            mov DWORD PTR [RSP+56],R14D
            sub RAX,R8
            mov R14D,R13D
            mov DWORD PTR [RSP+68],EBX
            mov R12D,EDI
            mov RBP,R15
            mov QWORD PTR [RSP+48],R9
            mov RBX,R8
            mov R13,RAX
            nop
            nop
            nop
.L_41a7a0:

            movzx R11D,BYTE PTR [RBP+20]
            lea RDX,QWORD PTR [R13+RBP*1]
            mov RCX,RBP
            mov EAX,R14D
.L_41a7b0:

            movzx ESI,BYTE PTR [RCX]
            lea EDI,DWORD PTR [RAX-1]
            cmp ESI,R11D
            jl .L_41ac00

            je .L_41ac00

            sub RCX,20
            test EDI,EDI
            mov EAX,EDI
            jne .L_41a7b0

            mov R15,RBX
            mov EDI,20
.L_41a7d7:

            movdqu XMM0,XMMWORD PTR [RBP+1]
            add RDI,RBX
            mov RSI,R15
            movaps XMMWORD PTR [RSP+80],XMM0
            mov EAX,DWORD PTR [RBP+17]
            mov DWORD PTR [RSP+96],EAX
            call memmove@PLT

            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [R15],XMM0
            mov EAX,DWORD PTR [RSP+96]
            mov DWORD PTR [R15+16],EAX
.L_41a805:

            add R14D,1
            add RBP,20
            cmp R12D,R14D
            ja .L_41a7a0

            mov R8,RBX
            mov R14D,DWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RSP+68]
            mov RBP,QWORD PTR [RSP+40]
            mov R9,QWORD PTR [RSP+48]
            cmp R14D,EBX
            jae .L_41a86a
.L_41a82d:

            cmp BYTE PTR [R8+19],4
            je .L_41b29a

            mov EAX,DWORD PTR [RSP+12]
            mov R15D,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+19]
            jmp .L_41a861
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a850:

            add RAX,20
            cmp BYTE PTR [RAX-20],4
            je .L_41ac90

            mov R15D,R13D
.L_41a861:

            lea R13D,DWORD PTR [R15+1]
            cmp EBX,R13D
            ja .L_41a850
.L_41a86a:

            lea R15D,DWORD PTR [RBX+1]
            mov R13D,EBX
.L_41a871:

            cmp R14D,EBX
            jae .L_41a8cc
.L_41a876:

            movzx ECX,BYTE PTR [RSP+32]
            mov EAX,R14D
            nop
            nop
.L_41a880:

            mov EDX,EAX
            add EAX,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            cmp EBX,EAX
            mov BYTE PTR [RBP+RDX*4+15],CL
            ja .L_41a880

            cmp BYTE PTR [R8+19],1
            jne .L_41a8cc

            mov EAX,DWORD PTR [RSP+12]
            mov EDX,R14D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            jmp .L_41a8bd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a8b0:

            mov R8,RAX
            add RAX,20
            cmp BYTE PTR [RAX-1],1
            jne .L_41a8cc
.L_41a8bd:

            add EDX,1
            mov ECX,DWORD PTR [R9+88]
            or DWORD PTR [R8+4],ECX
            cmp EBX,EDX
            ja .L_41a8b0
.L_41a8cc:

            cmp BYTE PTR [R9+8],0
            mov EDX,DWORD PTR [R9+108]
            jne .L_41a8e5

            mov RAX,QWORD PTR [R9]
            mov ECX,DWORD PTR [RAX+24]
            test ECX,ECX
            jne .L_41a8e5

            or EDX,DWORD PTR [R9+100]
.L_41a8e5:

            cmp R14D,R13D
            jae .L_41a91b

            mov RDI,QWORD PTR [RSP+16]
            mov ECX,R14D
            not ECX
            add ECX,R13D
            add RCX,RDI
            lea RAX,QWORD PTR [RDI+RDI*4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            lea RCX,QWORD PTR [RBP+RCX*4+24]
            nop
            nop
            nop
            nop
.L_41a910:

            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_41a910
.L_41a91b:

            mov EDX,DWORD PTR [R9+100]
            or EDX,DWORD PTR [R9+104]
            or EDX,DWORD PTR [R9+112]
            cmp EBX,R15D
            jbe .L_41a95b

            lea ECX,DWORD PTR [RBX-1]
            mov ESI,R15D
            lea RAX,QWORD PTR [RSI+RSI*4]
            sub ECX,R15D
            add RCX,RSI
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBP+RCX*4+24]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a950:

            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_41a950
.L_41a95b:

            cmp BYTE PTR [R9+8],0
            je .L_41a977

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX+148],1147500129
            je .L_41afac
.L_41a977:

            mov EDX,DWORD PTR [R9+96]
            test EDX,EDX
            je .L_41a98c

            lea R12D,DWORD PTR [R13+2]
            cmp EBX,R12D
            ja .L_41b0f7
.L_41a98c:

            mov EDI,DWORD PTR [RSP+12]
            cmp EBX,EDI
            jbe .L_41aa40

            sub EBX,1
            mov EAX,EDI
            mov R11D,96
            sub EBX,EDI
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov R10D,202758
            add RAX,RBX
            mov EDI,DWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RBP+RDX*4+12]
            lea R8,QWORD PTR [RBP+RAX*4+32]
            jmp .L_41a9dc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a9d0:

            add RCX,20
            add EDI,1
            cmp RCX,R8
            je .L_41aa40
.L_41a9dc:

            test BYTE PTR [RCX],32
            jne .L_41a9d0

            movzx ESI,BYTE PTR [RCX+6]
            bt R11D,ESI
            jae .L_41a9d0

            lea EAX,DWORD PTR [RDI-1]
            mov EDX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            jmp .L_41aa14
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41aa00:

            test BYTE PTR [RAX+8],32
            jne .L_41aa10

            movzx EBX,BYTE PTR [RAX+14]
            bt R10D,EBX
            jb .L_41a9d0
.L_41aa10:

            sub RAX,20
.L_41aa14:

            sub EDX,1
            cmp SIL,5
            jne .L_41aa25

            mov EBX,DWORD PTR [R9+108]
            not EBX
            and DWORD PTR [RAX],EBX
.L_41aa25:

            cmp R14D,EDX
            jb .L_41aa00

            add RCX,20
            add EDI,1
            cmp RCX,R8
            jne .L_41a9dc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aa40:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b574

            add RSP,120
.L_41aa58:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41aa63:

            lea R12D,DWORD PTR [RCX+3]
            cmp R12D,EBX
            ja .L_41a4e1

            test EDX,EDX
            jne .L_41b249

            lea EDX,DWORD PTR [RCX+2]
            mov DWORD PTR [RSP+64],EDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RBP+RDX*4]
            test BYTE PTR [RDX+12],32
            je .L_41b30f
.L_41aa92:

            mov EDI,R14D
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov QWORD PTR [RSP+16],RDI
            mov EDX,DWORD PTR [RBP+RDX*4]
            mov DWORD PTR [RSP+80],EDX
            lea EDX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],EDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov EDX,DWORD PTR [RBP+RDX*4]
            mov DWORD PTR [RSP+84],EDX
            xor EDX,EDX
.L_41aabc:

            mov EDI,DWORD PTR [R9+24]
            mov DWORD PTR [RSP+88],EDX
            test EDI,EDI
            je .L_41b37b

            xor R15D,R15D
            mov QWORD PTR [RSP+32],RBP
            mov DWORD PTR [RSP+40],R12D
            mov EBP,R15D
            lea R13,QWORD PTR [RSP+80]
            mov R15D,EBX
            mov R12,R9
            mov RBX,QWORD PTR [RSP+72]
            jmp .L_41aafe
          .byte 0x66
          .byte 0x90
.L_41aaf0:

            add EBP,1
            cmp DWORD PTR [R12+24],EBP
            jbe .L_41b35e
.L_41aafe:

            mov RDX,QWORD PTR [R12+16]
            mov EAX,EBP
            movzx R8D,BYTE PTR [R12+28]
            mov ECX,2
            mov RDI,RBX
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R13
            call .L_4291b0

            test EAX,EAX
            je .L_41aaf0

            mov R9,R12
            mov R12D,DWORD PTR [RSP+40]
            mov RBP,QWORD PTR [RSP+32]
            mov EBX,R15D
.L_41ab33:

            mov ECX,DWORD PTR [RSP+64]
            cmp EBX,ECX
            jbe .L_41ab86

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41ab86

            movzx EAX,BYTE PTR [RAX+18]
            mov EDX,96
            bt EDX,EAX
            jae .L_41ab86

            lea RAX,QWORD PTR [R12+R12*4]
            mov ESI,96
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            jmp .L_41ab7f
.L_41ab6a:

            test BYTE PTR [RAX],32
            mov RDX,RAX
            jne .L_41ab86

            movzx EDX,BYTE PTR [RDX+6]
            add RAX,20
            bt ESI,EDX
            jae .L_41ab86
.L_41ab7f:

            add ECX,1
            cmp EBX,ECX
            ja .L_41ab6a
.L_41ab86:

            mov RDX,QWORD PTR [R9]
            mov EAX,DWORD PTR [RDX+12]
            cmp EAX,1
            je .L_41b0d6

            jae .L_41b3be

            cmp DWORD PTR [RDX+20],2
            jne .L_41b3f5

            lea RCX,QWORD PTR [RIP+.L_441e00]
            lea RSI,QWORD PTR [RIP+.L_446590]
            lea RDI,QWORD PTR [RIP+.L_4465c2]
            mov EDX,808
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41abc8:

            cmp R14D,EDX
            jae .L_41a667

            lea R10D,DWORD PTR [RDX-1]
.L_41abd5:

            mov RSI,R10
            lea R10,QWORD PTR [R10+R10*4]
            movzx R10D,BYTE PTR [RBP+R10*4+19]
            cmp R10B,2
            jne .L_41b03b

            cmp R14D,ESI
            je .L_41a667

            lea R10D,DWORD PTR [RSI-1]
            jmp .L_41abd5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ac00:

            cmp R14D,EAX
            je .L_41a805

            mov EDX,R14D
            mov ECX,EAX
            sub EDX,EAX
            add EAX,1
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [RBX+RCX*4]
            shl RDX,2
            shl RDI,2
            jmp .L_41a7d7
.L_41ac30:

            mov EAX,R12D
            nop
            nop
            nop
            nop
            nop
.L_41ac38:

            lea ECX,DWORD PTR [RAX+1]
            cmp EBX,ECX
            jbe .L_41a5cd

            lea ESI,DWORD PTR [RBX-2]
            lea RDX,QWORD PTR [RCX+RCX*4]
            sub ESI,EAX
            lea RDX,QWORD PTR [RBP+RDX*4]
            add RCX,RSI
            mov ESI,202758
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ac68:

            test BYTE PTR [RDX+12],32
            jne .L_41ac7b

            movzx ECX,BYTE PTR [RDX+18]
            bt ESI,ECX
            jb .L_41b00b
.L_41ac7b:

            add RDX,20
            cmp RAX,RDX
            jne .L_41ac68

            jmp .L_41a5cd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ac90:

            add R15D,2
.L_41ac94:

            mov EAX,EBX
            sub EAX,R13D
            cmp BYTE PTR [R9+8],0
            jne .L_41ae40

            cmp EAX,127
            jbe .L_41b4ba
.L_41acad:

            mov RDI,QWORD PTR [RSP+24]
            mov EDX,EBX
            mov ESI,R13D
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+40],R8
            call .L_402ee0

            mov R9,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_41a871
.L_41acd5:

            mov EAX,R14D
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            cmp BYTE PTR [R8+18],15
            je .L_41b044

            cmp ESI,1
            je .L_41ae5f

            jb .L_41b3f5

            cmp ESI,2
            jne .L_41a516
.L_41ad09:

            lea EAX,DWORD PTR [R14+1]
            mov ECX,R14D
            mov R15D,EBX
            xor R11D,R11D
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
.L_41ad1e:

            lea EAX,DWORD PTR [RBX-1]
            mov R12D,EBX
            xor EDI,EDI
            mov R10D,202758
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            jmp .L_41ad7b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ad40:

            movzx ESI,BYTE PTR [RAX+6]
            bt R10D,ESI
            jae .L_41ad85

            movzx ESI,BYTE PTR [RAX+7]
            cmp SIL,8
            je .L_41af10

            cmp SIL,11
            mov R15D,EDX
            setne SIL
            or DIL,SIL
            jne .L_41ada4

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ad70:

            sub RAX,20
            cmp EDX,ECX
            mov R12D,EDX
            jbe .L_41ada0
.L_41ad7b:

            test BYTE PTR [RAX],32
            lea EDX,DWORD PTR [R12-1]
            je .L_41ad40
.L_41ad85:

            cmp R14D,EDX
            jae .L_41ad70

            cmp BYTE PTR [RAX+6],6
            jne .L_41ad70

            lea ESI,DWORD PTR [R12-2]
            lea RSI,QWORD PTR [RSI+RSI*4]
            cmp BYTE PTR [RBP+RSI*4+18],4
            jne .L_41ad70
.L_41ada0:

            lea R12D,DWORD PTR [R15+1]
.L_41ada4:

            cmp R14D,R15D
            jne .L_41adc3

            test R11B,R11B
            je .L_41adc3
.L_41adae:

            sub ECX,R15D
            xor R11D,R11D
            cmp ECX,2
            jbe .L_41a575

            mov R11D,1
.L_41adc3:

            cmp R14D,R15D
            jb .L_41a531

            jmp .L_41a575
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41add8:

            mov EAX,R12D
.L_41addb:

            lea EDX,DWORD PTR [RBX-1]
            cmp EDX,EAX
            jbe .L_41ae2e

            mov RSI,QWORD PTR [RSP+24]
            mov ECX,EDX
            mov R11D,202758
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ESI,DWORD PTR [RSI+148]
            lea RCX,QWORD PTR [RBP+RCX*4]
            nop
            nop
.L_41ae00:

            test BYTE PTR [RCX+12],32
            jne .L_41ae15

            movzx R10D,BYTE PTR [RCX+18]
            bt R11D,R10D
            jb .L_41b2a7
.L_41ae15:

            cmp ESI,1298954605
            je .L_41ae23

            cmp BYTE PTR [RCX+18],4
            je .L_41ae2e
.L_41ae23:

            sub EDX,1
            sub RCX,20
            cmp EDX,EAX
            ja .L_41ae00
.L_41ae2e:

            cmp R14D,EBX
            jb .L_41a639

            jmp .L_41a69f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ae40:

            cmp EAX,1
            jbe .L_41a876

            jmp .L_41acad
.L_41ae4e:

            mov EAX,R14D
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
.L_41ae5f:

            lea EAX,DWORD PTR [R14+1]
            mov ECX,R14D
            xor R11D,R11D
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
.L_41ae71:

            cmp EBX,ECX
            jbe .L_41b3b6

            mov EAX,ECX
            mov R15D,R14D
            mov EDI,202758
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RBP+RAX*4+12]
            mov EAX,ECX
            nop
            nop
.L_41ae90:

            test BYTE PTR [RDX],32
            jne .L_41aeb3

            movzx ESI,BYTE PTR [RDX+6]
            bt EDI,ESI
            jae .L_41aeb3

            cmp ECX,EAX
            jae .L_41aeb0

            lea ESI,DWORD PTR [RAX-1]
            lea RSI,QWORD PTR [RSI+RSI*4]
            cmp BYTE PTR [RBP+RSI*4+18],6
            je .L_41aebe
.L_41aeb0:

            mov R15D,EAX
.L_41aeb3:

            add EAX,1
            add RDX,20
            cmp EBX,EAX
            jne .L_41ae90
.L_41aebe:

            lea R12D,DWORD PTR [R15+1]
            cmp EBX,R12D
            jbe .L_41ada4

            lea EDX,DWORD PTR [RBX-2]
            mov R13D,R12D
            mov EDI,202758
            lea RAX,QWORD PTR [R13+R13*4]
            sub EDX,R15D
            add R13,RDX
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            lea RDX,QWORD PTR [R13+R13*4]
            lea RDX,QWORD PTR [RBP+RDX*4+32]
.L_41aef0:

            test BYTE PTR [RAX],32
            jne .L_41af02

            movzx ESI,BYTE PTR [RAX+6]
            bt EDI,ESI
            jae .L_41af02

            mov BYTE PTR [RAX+7],8
.L_41af02:

            add RAX,20
            cmp RDX,RAX
            jne .L_41aef0

            jmp .L_41ada4
.L_41af10:

            mov R15D,EDX
            mov EDI,1
            jmp .L_41ad70
.L_41af1d:

            cmp EDX,2
            jne .L_41b3f5

            mov EAX,R14D
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],EAX
.L_41af36:

            mov EAX,DWORD PTR [RSP+12]
            cmp EBX,EAX
            mov R12D,EAX
            jbe .L_41af8b

            lea EDX,DWORD PTR [RBX-2]
            mov R13D,EAX
            mov ESI,202758
            lea RAX,QWORD PTR [R13+R13*4]
            sub EDX,R14D
            add R13,RDX
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            lea RDX,QWORD PTR [R13+R13*4]
            lea RDX,QWORD PTR [RBP+RDX*4+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41af70:

            test BYTE PTR [RAX],32
            jne .L_41af82

            movzx ECX,BYTE PTR [RAX+6]
            bt ESI,ECX
            jae .L_41af82

            mov BYTE PTR [RAX+7],8
.L_41af82:

            add RAX,20
            cmp RDX,RAX
            jne .L_41af70
.L_41af8b:

            mov RAX,QWORD PTR [RSP+16]
            mov R15D,R14D
            xor R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41a575
.L_41afac:

            mov EAX,DWORD PTR [RSP+12]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RSI,QWORD PTR [RBP+RAX*4+4]
            mov EAX,R14D
            jmp .L_41afc6
          .byte 0x66
          .byte 0x90
.L_41afc0:

            add RSI,20
            mov EAX,EDX
.L_41afc6:

            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,R13D
            jae .L_41a977

            mov ECX,EAX
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBP+RCX*4]
            cmp BYTE PTR [RCX+18],16
            jne .L_41afc0

            cmp BYTE PTR [RSI+14],4
            jne .L_41afc0

            add EAX,2
            cmp EAX,R13D
            je .L_41affc

            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [RBP+RAX*4+18],6
            je .L_41afc0
.L_41affc:

            mov EAX,DWORD PTR [R9+100]
            or DWORD PTR [RCX+4],EAX
            mov EAX,DWORD PTR [R9+100]
            or DWORD PTR [RSI],EAX
            jmp .L_41afc0
.L_41b00b:

            mov BYTE PTR [RDX+19],13
            jmp .L_41a5cd
.L_41b014:

            cmp EBX,R12D
            ja .L_41a69c
.L_41b01d:

            movzx EAX,BYTE PTR [R8+15]
            mov BYTE PTR [RSP+32],AL
.L_41b026:

            mov EAX,EBX
            sub EAX,R14D
            cmp EAX,1
            mov EDI,EAX
            ja .L_41a765

            jmp .L_41a86a
.L_41b03b:

            mov BYTE PTR [RAX+19],R10B
            jmp .L_41a667
.L_41b044:

            lea ECX,DWORD PTR [R14+1]
            cmp EBX,ECX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+64],ECX
            jbe .L_41b439

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            test BYTE PTR [RAX+12],32
            jne .L_41b439

            movzx EAX,BYTE PTR [RAX+18]
            mov EDX,96
            bt EDX,EAX
            jae .L_41b439

            lea EAX,DWORD PTR [R14+2]
            mov EDI,96
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+12]
            jmp .L_41b0ad
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b098:

            test BYTE PTR [RAX],32
            mov RDX,RAX
            jne .L_41b0b4

            movzx EDX,BYTE PTR [RDX+6]
            add RAX,20
            bt EDI,EDX
            jae .L_41b0b4
.L_41b0ad:

            add ECX,1
            cmp EBX,ECX
            ja .L_41b098
.L_41b0b4:

            cmp ESI,1
            je .L_41b0ec

            jb .L_41b3f5

            cmp ESI,2
            jne .L_41b4ad

            mov R15D,R14D
            mov R11D,1
            jmp .L_41ad1e
.L_41b0d6:

            mov RAX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
.L_41b0ec:

            mov R11D,1
            jmp .L_41ae71
.L_41b0f7:

            mov EDX,R12D
            lea EDI,DWORD PTR [RBX-3]
            mov QWORD PTR [RSP+24],RBP
            lea RAX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+48],R14D
            mov DWORD PTR [RSP+56],EBX
            mov DWORD PTR [RSP+68],EDI
            mov DWORD PTR [RSP+16],R15D
            lea RSI,QWORD PTR [RBP+RAX*4]
            mov EAX,EDI
            sub EAX,R13D
            mov R13,QWORD PTR [RSP+72]
            add RAX,RDX
            mov RBX,RSI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+20]
            mov RBP,R9
            mov QWORD PTR [RSP+40],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov R14,RAX
.L_41b146:

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov QWORD PTR [RSP+32],RAX
            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RBX]
            mov DWORD PTR [RSP+84],EAX
            mov EAX,DWORD PTR [RBP+40]
            test EAX,EAX
            je .L_41b228

            xor R15D,R15D
            jmp .L_41b18e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b180:

            add R15D,1
            cmp DWORD PTR [RBP+40],R15D
            jbe .L_41b228
.L_41b18e:

            mov RDX,QWORD PTR [RBP+32]
            mov EAX,R15D
            movzx R8D,BYTE PTR [RBP+44]
            mov ECX,2
            mov RDI,R13
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R14
            call .L_4291b0

            test EAX,EAX
            je .L_41b180

            mov RDI,QWORD PTR [RSP+32]
            mov R9,RBP
            mov RSI,RBX
            mov EAX,DWORD PTR [R9+96]
            mov R15D,DWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+24]
            mov R14D,DWORD PTR [RSP+48]
            or DWORD PTR [RDI+4],EAX
            mov EBX,DWORD PTR [RSP+56]
            mov EAX,DWORD PTR [R9+96]
            or DWORD PTR [RSI+4],EAX
            mov EDX,DWORD PTR [R9+124]
            test EDX,EDX
            je .L_41a98c

            lea ECX,DWORD PTR [R15+2]
            cmp EBX,ECX
            jbe .L_41a98c

            mov ESI,DWORD PTR [RSP+68]
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RBP+RAX*4+4]
            sub ESI,R15D
            add RCX,RSI
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBP+RCX*4+24]
            jmp .L_41b218
.L_41b214:

            mov EDX,DWORD PTR [R9+124]
.L_41b218:

            or DWORD PTR [RAX],EDX
            add RAX,20
            cmp RCX,RAX
            jne .L_41b214

            jmp .L_41a98c
.L_41b228:

            add RBX,20
            cmp QWORD PTR [RSP+40],RBX
            lea EAX,DWORD PTR [R12+1]
            mov DWORD PTR [RSP+16],R12D
            je .L_41b497

            mov R12D,EAX
            jmp .L_41b146
.L_41b249:

            cmp EDX,1
            jne .L_41a4e1

            lea EDX,DWORD PTR [RCX+2]
            mov DWORD PTR [RSP+64],EDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RBP+RDX*4]
            cmp BYTE PTR [RDX+18],6
            jne .L_41b321

            mov EDI,ECX
            lea RCX,QWORD PTR [RDI+RDI*4]
            mov QWORD PTR [RSP+16],RDI
            mov ECX,DWORD PTR [RBP+RCX*4]
            mov DWORD PTR [RSP+80],ECX
            lea ECX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],ECX
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ECX,DWORD PTR [RBP+RCX*4]
            mov DWORD PTR [RSP+84],ECX
            mov EDX,DWORD PTR [RDX]
            jmp .L_41aabc
.L_41b29a:

            mov R15D,DWORD PTR [RSP+12]
            mov R13D,R14D
            jmp .L_41ac94
.L_41b2a7:

            cmp R10B,4
            je .L_41ae2e

            movdqu XMM0,XMMWORD PTR [RDI]
            sub EDX,EAX
            add EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov QWORD PTR [RSP+48],R9
            movaps XMMWORD PTR [RSP+80],XMM0
            mov ESI,DWORD PTR [RDI+16]
            shl RDX,2
            mov QWORD PTR [RSP+40],RCX
            mov DWORD PTR [RSP+96],ESI
            lea RSI,QWORD PTR [RBP+RAX*4]
            mov QWORD PTR [RSP+32],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+32]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            mov R9,QWORD PTR [RSP+48]
            movups XMMWORD PTR [RCX],XMM0
            mov EAX,DWORD PTR [RSP+96]
            mov DWORD PTR [RCX+16],EAX
            jmp .L_41ae2e
.L_41b30f:

            movzx EDX,BYTE PTR [RDX+18]
            mov ECX,96
            bt ECX,EDX
            jae .L_41aa92
.L_41b321:

            mov EAX,DWORD PTR [RAX+12]
            cmp EAX,1
            je .L_41b59d

            jb .L_41b3f5

            cmp EAX,2
            jne .L_41b579

            mov EAX,R14D
            imul R8,RAX,20
            mov QWORD PTR [RSP+16],RAX
            add R8,RBP
            jmp .L_41ad09
.L_41b350:

            cmp R14D,EBX
            jb .L_41a639

            jmp .L_41b01d
.L_41b35e:

            mov R9,R12
            mov RBP,QWORD PTR [RSP+32]
            mov R12D,DWORD PTR [RSP+40]
            mov RAX,QWORD PTR [R9]
            mov EBX,R15D
            cmp DWORD PTR [RAX+20],1
            je .L_41b442
.L_41b37b:

            mov EDX,DWORD PTR [RAX+12]
            cmp EDX,1
            je .L_41b418

            jb .L_41b3eb

            cmp EDX,2
            jne .L_41b5b1

            mov RAX,QWORD PTR [RSP+16]
            mov ECX,R14D
            mov R15D,EBX
            xor R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41ad1e
.L_41b3b6:

            mov R15D,R14D
            jmp .L_41aebe
.L_41b3be:

            cmp EAX,2
            jne .L_41b5cb

            mov RAX,QWORD PTR [RSP+16]
            mov R15D,R14D
            mov R11D,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41ad1e
.L_41b3eb:

            cmp DWORD PTR [RAX+20],2
            je .L_41af36
.L_41b3f5:

            lea RCX,QWORD PTR [RIP+.L_441e00]
            lea RSI,QWORD PTR [RIP+.L_446590]
            lea RDI,QWORD PTR [RIP+.L_446618]
            mov EDX,807
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b418:

            mov RAX,QWORD PTR [RSP+16]
            mov ECX,R14D
            xor R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+64],EAX
            jmp .L_41ae71
.L_41b439:

            mov ECX,DWORD PTR [RSP+12]
            jmp .L_41b0b4
.L_41b442:

            mov ESI,DWORD PTR [R9+24]
            test ESI,ESI
            je .L_41b37b

            xor R15D,R15D
.L_41b451:

            mov RDX,QWORD PTR [R9+16]
            mov EAX,R15D
            movzx R8D,BYTE PTR [R9+28]
            mov RDI,QWORD PTR [RSP+72]
            mov ECX,3
            mov QWORD PTR [RSP+32],R9
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R13
            call .L_4291b0

            test EAX,EAX
            mov R9,QWORD PTR [RSP+32]
            jne .L_41ab33

            add R15D,1
            cmp DWORD PTR [R9+24],R15D
            ja .L_41b451

            mov RAX,QWORD PTR [R9]
            jmp .L_41b37b
.L_41b497:

            mov R9,RBP
            mov R14D,DWORD PTR [RSP+48]
            mov RBP,QWORD PTR [RSP+24]
            mov EBX,DWORD PTR [RSP+56]
            jmp .L_41a98c
.L_41b4ad:

            mov R12D,DWORD PTR [RSP+12]
            mov R15D,R14D
            jmp .L_41adae
.L_41b4ba:

            cmp EBX,R13D
            jbe .L_41a876

            mov EAX,R13D
            mov R12D,R13D
            mov DWORD PTR [RSP+48],R13D
            imul RAX,RAX,20
            mov R13D,EBX
            mov QWORD PTR [RSP+40],R8
            mov RBX,RBP
            mov QWORD PTR [RSP+56],R9
            lea RAX,QWORD PTR [RBP+RAX*1+15]
            mov EBP,R12D
            mov R12,RAX
            nop
            nop
            nop
.L_41b4f0:

            movzx EDX,BYTE PTR [R12]
            cmp DL,255
            je .L_41b540

            add EDX,R14D
            cmp EDX,EBP
            je .L_41b540

            mov ESI,EBP
            nop
            nop
            nop
            nop
            nop
.L_41b508:

            lea RAX,QWORD PTR [RDX+RDX*4]
            cmp ESI,EDX
            cmovb ESI,EDX
            lea RAX,QWORD PTR [RBX+RAX*4]
            movzx EDX,BYTE PTR [RAX+15]
            mov BYTE PTR [RAX+15],255
            add EDX,R14D
            cmp EDX,EBP
            jne .L_41b508

            cmp ESI,EBP
            je .L_41b540

            lea EDX,DWORD PTR [RSI+1]
            mov ESI,EDX
            sub ESI,EBP
            cmp ESI,1
            jbe .L_41b540

            mov RDI,QWORD PTR [RSP+24]
            mov ESI,EBP
            call .L_402ee0
.L_41b540:

            add EBP,1
            add R12,20
            cmp R13D,EBP
            jne .L_41b4f0

            mov RBP,RBX
            mov R8,QWORD PTR [RSP+40]
            mov EBX,R13D
            mov R9,QWORD PTR [RSP+56]
            mov R13D,DWORD PTR [RSP+48]
            jmp .L_41a871
.L_41b566:

            movzx EAX,BYTE PTR [R8+15]
            mov BYTE PTR [RSP+32],AL
            jmp .L_41a73a
.L_41b574:

            call __stack_chk_fail@PLT
.L_41b579:

            mov EAX,R14D
            lea R12D,DWORD PTR [RBX+1]
            imul R8,RAX,20
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+12],EAX
            mov DWORD PTR [RSP+64],EAX
            add R8,RBP
            jmp .L_41a526
.L_41b59d:

            mov EAX,R14D
            imul R8,RAX,20
            mov QWORD PTR [RSP+16],RAX
            add R8,RBP
            jmp .L_41ae5f
.L_41b5b1:

            imul R8,QWORD PTR [RSP+16],20
            mov EAX,DWORD PTR [RSP+12]
            lea R12D,DWORD PTR [RBX+1]
            mov DWORD PTR [RSP+64],EAX
            add R8,RBP
            jmp .L_41a526
.L_41b5cb:

            imul R8,QWORD PTR [RSP+16],20
            mov EAX,DWORD PTR [RSP+12]
            mov R15D,R14D
            mov R12D,EAX
            mov DWORD PTR [RSP+64],EAX
            add R8,RBP
            jmp .L_41adae
.L_41b5e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5f0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,136
.L_41b60a:

            mov R13,QWORD PTR [RDI+1064]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [R13]
            cmp DWORD PTR [RAX+12],2
            je .L_41b814

            mov R15D,DWORD PTR [RDX+184]
            mov RAX,QWORD PTR [RDX+200]
.L_41b63d:

            test R15D,R15D
            je .L_41b7a0

            movzx EDX,BYTE PTR [RAX+15]
            and EDX,15
            cmp DL,4
            je .L_41b7d0

            lea EDX,DWORD PTR [R15-1]
            add RAX,35
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4]
            jmp .L_41b683
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b670:

            movzx EDX,BYTE PTR [RAX]
            add RAX,20
            and EDX,15
            cmp DL,4
            je .L_41b7d0
.L_41b683:

            cmp RCX,RAX
            jne .L_41b670
.L_41b688:

            test R15D,R15D
            je .L_41b7a0

            mov R8,QWORD PTR [R14+200]
            xor R12D,R12D
            movzx EDI,BYTE PTR [R8+15]
            lea RAX,QWORD PTR [R8+35]
            jmp .L_41b6ba
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b6b0:

            add RAX,20
            cmp DIL,BYTE PTR [RAX-20]
            jne .L_41b6c3
.L_41b6ba:

            add R12D,1
            cmp R12D,R15D
            jne .L_41b6b0
.L_41b6c3:

            and EDI,15
            xor ECX,ECX
            mov RSI,QWORD PTR [RBX+128]
            cmp DIL,2
            je .L_41b73c

            nop
            nop
            nop
.L_41b6d8:

            jb .L_41b782

            cmp DIL,4
            je .L_41b73c
.L_41b6e4:

            mov EAX,R12D
            mov ECX,DWORD PTR [R14+184]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EDI,BYTE PTR [R8+RAX*4+15]
            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R8+RAX*4+15]
            mov EAX,R12D
            jmp .L_41b71a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b710:

            add RDX,20
            cmp DIL,BYTE PTR [RDX-20]
            jne .L_41b721
.L_41b71a:

            add EAX,1
            cmp ECX,EAX
            ja .L_41b710
.L_41b721:

            cmp R12D,R15D
            mov ECX,R12D
            jae .L_41b7a0

            and EDI,15
            mov R12D,EAX
            mov RSI,QWORD PTR [RBX+128]
            cmp DIL,2
            jne .L_41b6d8
.L_41b73c:

            mov EAX,DWORD PTR [RIP+.L_6572a8]
            test EAX,EAX
            jne .L_41b75d

            mov DWORD PTR [RSP+16],ECX
            mov QWORD PTR [RSP+8],RSI
            call .L_4056a0

            mov ECX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+8]
.L_41b75d:

            test BYTE PTR [RIP+.L_6572a8],2
            je .L_41b782

            lea EAX,DWORD PTR [R12-1]
            mov R8,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [R8+RAX*4+18],12
            je .L_41b6e4
.L_41b782:

            mov RDI,QWORD PTR [RBP+1064]
            mov R8D,R12D
            mov RDX,R14
            call .L_41a490

            mov R8,QWORD PTR [R14+200]
            jmp .L_41b6e4
.L_41b7a0:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41be0f

            add RSP,136
.L_41b7bb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b7d0:

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+60],0
            lea RCX,QWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RBX+160]
            mov EDX,9676
            mov RDI,RBX
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41b9dc
.L_41b808:

            mov R15D,DWORD PTR [R14+184]
            jmp .L_41b688
.L_41b814:

            mov ESI,DWORD PTR [R13+12]
            cmp ESI,-1
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+60],ESI
            je .L_41b907
.L_41b829:

            mov R11D,DWORD PTR [RSP+8]
            mov R15D,DWORD PTR [R14+184]
            mov RAX,QWORD PTR [R14+200]
            test R11D,R11D
            je .L_41b63d

            test R15D,R15D
            mov RSI,QWORD PTR [RBX+128]
            je .L_41b7a0

            lea EDX,DWORD PTR [R15-1]
            lea R12,QWORD PTR [RAX+19]
            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+32],R14
            lea R15,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov RBP,RSI
            mov RBX,R13
            lea RAX,QWORD PTR [RAX+RDX*4+39]
            mov R14,RAX
            jmp .L_41b895
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b888:

            add R12,20
            cmp R14,R12
            je .L_41b95c
.L_41b895:

            cmp BYTE PTR [R12],4
            jne .L_41b888

            mov EAX,DWORD PTR [R12-19]
            mov ESI,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+100],EAX
            mov DWORD PTR [RSP+96],ESI
            mov DWORD PTR [RSP+104],ESI
            mov R10D,DWORD PTR [RBX+56]
            test R10D,R10D
            je .L_41bc63

            xor R13D,R13D
            jmp .L_41b8d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b8c8:

            mov EAX,DWORD PTR [RBX+56]
            add R13D,1
            cmp EAX,R13D
            jbe .L_41b97e
.L_41b8d8:

            mov RDX,QWORD PTR [RBX+48]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+60]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R15
            call .L_4291b0

            test EAX,EAX
            je .L_41b8c8
.L_41b8fc:

            mov EAX,8
.L_41b901:

            mov BYTE PTR [R12],AL
            jmp .L_41b888
.L_41b907:

            mov EDX,DWORD PTR [RAX+8]
            test EDX,EDX
            je .L_41b941

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+60],0
            lea RCX,QWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41bbc5
.L_41b941:

            mov DWORD PTR [R13+12],0
            mov R15D,DWORD PTR [R14+184]
            mov RAX,QWORD PTR [R14+200]
            jmp .L_41b63d
.L_41b95c:

            mov R14,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+24]
            mov R15D,DWORD PTR [R14+184]
            mov RAX,QWORD PTR [R14+200]
            jmp .L_41b63d
.L_41b97e:

            test EAX,EAX
            je .L_41bc63

            lea RAX,QWORD PTR [R15+4]
            mov QWORD PTR [RSP+40],R12
            xor R13D,R13D
            mov R12,RBX
            mov RBX,RAX
            jmp .L_41b9a9
.L_41b99a:

            add R13D,1
            cmp DWORD PTR [R12+56],R13D
            jbe .L_41bc5b
.L_41b9a9:

            mov RDX,QWORD PTR [R12+48]
            mov EAX,R13D
            movzx R8D,BYTE PTR [R12+60]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,RBX
            call .L_4291b0

            test EAX,EAX
            je .L_41b99a

            mov RBX,R12
            mov R12,QWORD PTR [RSP+40]
            jmp .L_41b8fc
.L_41b9dc:

            pxor XMM0,XMM0
            mov EDI,9676
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_41be20

            lea RAX,QWORD PTR [RIP+.L_446564]
            lea RDX,QWORD PTR [RAX+44]
.L_41b9fa:

            cmp RDX,RAX
            je .L_41bcc3

            add RAX,4
            cmp DWORD PTR [RAX-4],9676
            jne .L_41b9fa

            mov R12D,16
.L_41ba16:

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,R14
            mov DWORD PTR [RSP+8],EAX
            call .L_402730

            lea RSI,QWORD PTR [RSP+96]
            mov R11D,DWORD PTR [R14+184]
            mov DWORD PTR [R14+180],0
            xor EAX,EAX
            xor R8D,R8D
            mov QWORD PTR [RSP+16],RSI
.L_41ba47:

            cmp EAX,R11D
            jae .L_41bc4e

            cmp BYTE PTR [R14+176],0
            jne .L_41bc4e

            mov RCX,QWORD PTR [R14+200]
            mov EDX,EAX
            lea RSI,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RCX+RSI*4]
            movzx R15D,BYTE PTR [RSI+15]
            mov EDI,R15D
            mov R13D,R15D
            and EDI,15
            cmp DIL,4
            jne .L_41bbe0

            cmp R15D,R8D
            je .L_41bbe0

            mov EDI,DWORD PTR [RSP+8]
            mov BYTE PTR [RSP+82],R12B
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov BYTE PTR [RSP+83],4
            lea RDX,QWORD PTR [RCX+RDX*4]
            mov DWORD PTR [RSP+64],EDI
            mov EDI,DWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov DWORD PTR [RSP+112],EDI
            movaps XMMWORD PTR [RSP+96],XMM0
            mov EDI,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+104],EDI
            mov EDI,DWORD PTR [RSI+4]
            mov DWORD PTR [RSP+100],EDI
            movzx ESI,BYTE PTR [RSI+15]
            mov BYTE PTR [RSP+111],SIL
            cmp R13B,BYTE PTR [RDX+15]
            jne .L_41bba2
.L_41bade:

            cmp BYTE PTR [RDX+18],15
            jne .L_41bba2

            cmp BYTE PTR [R14+177],0
            je .L_41bb63

            cmp RCX,QWORD PTR [R14+208]
            je .L_41bcaf
.L_41baff:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_4022b0

            test AL,AL
            je .L_41be03

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov RDI,QWORD PTR [R14+200]
            mov RSI,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
.L_41bb59:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
.L_41bb63:

            mov EAX,DWORD PTR [R14+180]
            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_41bb74:

            cmp DWORD PTR [R14+184],EAX
            jbe .L_41bba2

            cmp BYTE PTR [R14+176],0
            jne .L_41bba2

            mov RCX,QWORD PTR [R14+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            cmp R13B,BYTE PTR [RDX+15]
            je .L_41bade
.L_41bba2:

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,R14
            call .L_4029f0

            mov EAX,DWORD PTR [R14+180]
            mov R11D,DWORD PTR [R14+184]
            mov R8D,R15D
            jmp .L_41ba47
.L_41bbc5:

            mov EAX,DWORD PTR [RSP+60]
            mov DWORD PTR [RSP+8],EAX
            mov DWORD PTR [R13+12],EAX
            jmp .L_41b829
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bbe0:

            cmp BYTE PTR [R14+177],0
            je .L_41bc3f

            cmp RCX,QWORD PTR [R14+208]
            je .L_41bc2a
.L_41bbf3:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            mov DWORD PTR [RSP+24],R8D
            call .L_4022b0

            test AL,AL
            mov R8D,DWORD PTR [RSP+24]
            jne .L_41bdb0

            mov EAX,DWORD PTR [R14+180]
            mov R11D,DWORD PTR [R14+184]
            jmp .L_41ba47
.L_41bc2a:

            mov EDX,DWORD PTR [R14+188]
            cmp EAX,EDX
            jne .L_41bbf3
.L_41bc35:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
.L_41bc3f:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
            jmp .L_41ba47
.L_41bc4e:

            mov RDI,R14
            call .L_4027c0

            jmp .L_41b808
.L_41bc5b:

            mov RBX,R12
            mov R12,QWORD PTR [RSP+40]
.L_41bc63:

            mov R9D,DWORD PTR [RBX+72]
            test R9D,R9D
            je .L_41bd0e

            xor R13D,R13D
            jmp .L_41bc81
.L_41bc75:

            mov EAX,DWORD PTR [RBX+72]
            add R13D,1
            cmp EAX,R13D
            jbe .L_41bcce
.L_41bc81:

            mov RDX,QWORD PTR [RBX+64]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+76]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R15
            call .L_4291b0

            test EAX,EAX
            je .L_41bc75
.L_41bca5:

            mov EAX,11
            jmp .L_41b901
.L_41bcaf:

            mov EDX,DWORD PTR [R14+188]
            cmp EDX,EAX
            jne .L_41baff

            jmp .L_41bb59
.L_41bcc3:

            mov R12D,12
            jmp .L_41ba16
.L_41bcce:

            test EAX,EAX
            je .L_41bd0e

            lea RAX,QWORD PTR [R15+4]
            xor R13D,R13D
            mov QWORD PTR [RSP+40],RAX
.L_41bcde:

            mov RDX,QWORD PTR [RBX+64]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+76]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP+40]
            call .L_4291b0

            test EAX,EAX
            jne .L_41bca5

            add R13D,1
            cmp DWORD PTR [RBX+72],R13D
            ja .L_41bcde
.L_41bd0e:

            mov R8D,DWORD PTR [RBX+40]
            xor R13D,R13D
            test R8D,R8D
            je .L_41be14
.L_41bd1e:

            mov RDX,QWORD PTR [RBX+32]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+44]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,R15
            call .L_4291b0

            test EAX,EAX
            jne .L_41bca5

            mov EAX,DWORD PTR [RBX+40]
            add R13D,1
            cmp EAX,R13D
            ja .L_41bd1e

            test EAX,EAX
            je .L_41be14

            lea RAX,QWORD PTR [R15+4]
            xor R13D,R13D
            mov QWORD PTR [RSP+40],RAX
            jmp .L_41bd7e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bd70:

            add R13D,1
            cmp DWORD PTR [RBX+40],R13D
            jbe .L_41be14
.L_41bd7e:

            mov RDX,QWORD PTR [RBX+32]
            mov EAX,R13D
            movzx R8D,BYTE PTR [RBX+44]
            mov ECX,2
            mov RDI,RBP
            movzx ESI,WORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP+40]
            call .L_4291b0

            test EAX,EAX
            je .L_41bd70

            jmp .L_41bca5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bdb0:

            mov EAX,DWORD PTR [R14+188]
            mov RDX,QWORD PTR [R14+208]
            mov RCX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            mov R11D,DWORD PTR [R14+184]
            jmp .L_41bc35
.L_41be03:

            mov EAX,DWORD PTR [R14+180]
            jmp .L_41bb74
.L_41be0f:

            call __stack_chk_fail@PLT
.L_41be14:

            mov EAX,4
            jmp .L_41b901
.L_41be1e:

            nop
            nop
.L_41be20:

            mov EAX,EDI
            shr EAX,12
            cmp EAX,1
            je .L_41bf00

            jb .L_41bec0

            cmp EAX,2
            je .L_41be80

            cmp EAX,10
            jne .L_41beb8

            lea EAX,DWORD PTR [RDI-43232]
            cmp EAX,23
            jbe .L_41bf58

            lea EAX,DWORD PTR [RDI-43488]
            cmp EAX,31
            jbe .L_41bfe0

            lea EDX,DWORD PTR [RDI-43616]
            mov EAX,3840
            cmp EDX,31
            ja .L_41bebd

            lea EDX,DWORD PTR [RDI-41864]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0x90
.L_41be80:

            lea EAX,DWORD PTR [RDI-8200]
            cmp EAX,15
            jbe .L_41bf40

            lea EAX,DWORD PTR [RDI-8304]
            cmp EAX,23
            jbe .L_41bfb0

            cmp EDI,9676
            mov EDX,3851
            mov EAX,3840
            cmove EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41beb8:

            mov EAX,3840
.L_41bebd:

            ret 
          .byte 0x90
.L_41bec0:

            lea EAX,DWORD PTR [RDI-40]
            cmp EAX,23
            jbe .L_41bf88

            lea EAX,DWORD PTR [RDI-176]
            cmp EAX,39
            jbe .L_41bfc8

            lea EAX,DWORD PTR [RDI-2304]
            cmp EAX,1271
            jbe .L_41bf98

            cmp EDI,160
            mov EDX,3851
            mov EAX,3840
            cmove EAX,EDX
            ret 
.L_41bf00:

            lea EAX,DWORD PTR [RDI-4096]
            cmp EAX,159
            jbe .L_41bf70

            lea EAX,DWORD PTR [RDI-6016]
            cmp EAX,111
            jbe .L_41bff8

            lea EDX,DWORD PTR [RDI-7376]
            mov EAX,3840
            cmp EDX,47
            ja .L_41bebd

            lea EDX,DWORD PTR [RDI-5768]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0x90
.L_41bf40:

            lea EDX,DWORD PTR [RDI-6544]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf58:

            lea EDX,DWORD PTR [RDI-41536]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf70:

            lea EDX,DWORD PTR [RDI-2760]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf88:

            lea RDX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RDX+RAX*2]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bf98:

            lea EDX,DWORD PTR [RDI-2240]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bfb0:

            lea EDX,DWORD PTR [RDI-6632]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bfc8:

            lea EDX,DWORD PTR [RDI-152]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bfe0:

            lea EDX,DWORD PTR [RDI-41768]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bff8:

            lea EDX,DWORD PTR [RDI-4520]
            lea RAX,QWORD PTR [RIP+.L_446660]
            movzx EAX,WORD PTR [RAX+RDX*2]
            ret 
.L_41c00a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41c010:

            movzx EDX,BYTE PTR [RDI+19]
            movzx EAX,BYTE PTR [RSI+19]
            cmp EDX,EAX
            jl .L_41c028

            setne AL
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c028:

            mov EAX,4294967295
            ret 
.L_41c02e:

            nop
            nop
.L_41c030:

            mov RCX,QWORD PTR [RDX+200]
            mov EDX,DWORD PTR [RDX+184]
            test EDX,EDX
            je .L_41c064

            sub EDX,1
            lea RAX,QWORD PTR [RCX+15]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4+35]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c058:

            mov BYTE PTR [RAX],0
            add RAX,20
            cmp RAX,RDX
            jne .L_41c058
.L_41c064:

            ret 
.L_41c066:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c070:

            add RDI,48
            mov ECX,1
            xor EDX,EDX
            mov ESI,1818847073
            jmp .L_43ce20
.L_41c085:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c090:

            push R12
            push RBP
            lea RBP,QWORD PTR [RDI+48]
            push RBX
.L_41c098:

            lea RDX,QWORD PTR [RIP+.L_41c180]
            xor ESI,ESI
            mov RDI,RBP
            lea RBX,QWORD PTR [RIP+.L_447b60]
            call .L_43d020

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBP
            lea R12,QWORD PTR [RBX+16]
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBP
            call .L_43ce20

            lea RDX,QWORD PTR [RIP+.L_41c520]
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            mov ESI,1919969382
.L_41c0f8:

            mov ECX,5
            mov EDX,1
            mov RDI,RBP
            call .L_43ce20

            add RBX,4
            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            cmp RBX,R12
            je .L_41c128

            mov ESI,DWORD PTR [RBX]
            jmp .L_41c0f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c128:

            lea RDX,QWORD PTR [RIP+.L_41c030]
            lea RBX,QWORD PTR [RIP+.L_447b40]
            xor ESI,ESI
            mov RDI,RBP
            call .L_43d020

            lea R12,QWORD PTR [RBX+28]
            mov ESI,1886545267
            jmp .L_41c152
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c150:

            mov ESI,DWORD PTR [RBX]
.L_41c152:

            mov ECX,5
            mov EDX,1
            mov RDI,RBP
            add RBX,4
            call .L_43ce20

            cmp RBX,R12
            jne .L_41c150

            pop RBX
.L_41c16e:

            pop RBP
            pop R12
            ret 
.L_41c172:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c180:

            mov ECX,DWORD PTR [RDX+184]
            test ECX,ECX
            jne .L_41c190

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c190:

            push R15
            push R14
            lea R11,QWORD PTR [RIP+.L_447ae0]
            push R13
            push R12
            lea R10,QWORD PTR [RIP+.L_4475c0]
            push RBP
            push RBX
.L_41c1a8:

            lea R14,QWORD PTR [RIP+.L_447580]
            mov RDI,QWORD PTR [RDX+200]
            lea R13,QWORD PTR [RIP+.L_447540]
            lea R15,QWORD PTR [RIP+.L_447460]
            mov R9D,1
            mov EBX,1
            xor EBP,EBP
            xor ESI,ESI
            mov EAX,31
            xor R8D,R8D
            lea RDX,QWORD PTR [RDI+35]
            mov R12,R11
            mov QWORD PTR [RSP-8],RDX
.L_41c1e7:

            mov EDX,ESI
            lea RDX,QWORD PTR [RDX+RDX*4]
            movzx EDX,BYTE PTR [RDI+RDX*4+18]
            cmp DL,R9B
            jb .L_41c206

            cmp DL,BYTE PTR [R12+1]
            ja .L_41c206

            movzx EAX,DL
            sub EAX,R9D
            cdqe 
.L_41c206:

            add RAX,R10
            movsx EAX,BYTE PTR [RAX+R8*1]
.L_41c20e:

            cdqe 
            movsx RDX,BYTE PTR [R14+RAX*1]
            movzx EAX,BYTE PTR [R13+RAX*1]
            test AL,AL
            jne .L_41c260
.L_41c21f:

            add ESI,1
.L_41c222:

            cmp ECX,ESI
            je .L_41c4f1

            lea R9,QWORD PTR [RIP+.L_447a40]
            movsxd RAX,EDX
            movsx R8,WORD PTR [R9+RAX*2]
            lea R9,QWORD PTR [RIP+.L_447aa0]
            movsx RAX,BYTE PTR [R9+RAX*1]
            test AL,AL
            jle .L_41c206

            lea R12D,DWORD PTR [RDX+RDX*1]
            movsxd R12,R12D
            add R12,R11
            movzx R9D,BYTE PTR [R12]
            jmp .L_41c1e7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c260:

            sub EAX,3
            cmp AL,7
            ja .L_41c21f

            movzx EAX,AL
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
.L_41c273:

            cmp ESI,EBP
            jbe .L_41c2bc

            lea R9D,DWORD PTR [RSI-1]
            mov R12D,EBP
            mov R8D,EBX
            lea RAX,QWORD PTR [R12+R12*4]
            shl R8D,4
            sub R9D,EBP
            mov RBP,QWORD PTR [RSP-8]
            or R8D,3
            add R9,R12
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBP+R9*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c2b0:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,R9
            jne .L_41c2b0
.L_41c2bc:

            add EBX,1
            mov EBP,ESI
            cmp EBX,16
            jne .L_41c222

            jmp .L_41c36a
.L_41c2cf:

            cmp ESI,EBP
            jbe .L_41c2bc

            lea R9D,DWORD PTR [RSI-1]
            mov R12D,EBP
            mov R8D,EBX
            lea RAX,QWORD PTR [R12+R12*4]
            shl R8D,4
            sub R9D,EBP
            mov RBP,QWORD PTR [RSP-8]
            or R8D,2
            add R9,R12
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBP+R9*4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c308:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,R9
            jne .L_41c308

            jmp .L_41c2bc
.L_41c316:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_41c358

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
.L_41c348:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_41c348

            nop
            nop
            nop
            nop
.L_41c358:

            add EBX,1
            mov ESI,R9D
            mov EBP,R9D
            cmp EBX,16
            jne .L_41c222
.L_41c36a:

            mov EBX,1
            jmp .L_41c222
.L_41c374:

            cmp ESI,EBP
            jbe .L_41c2bc

            lea R8D,DWORD PTR [RSI-1]
            mov R12D,EBP
            mov R9D,EBX
            lea RAX,QWORD PTR [R12+R12*4]
            shl R9D,4
            sub R8D,EBP
            mov RBP,QWORD PTR [RSP-8]
            add R8,R12
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [RBP+R8*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c3b0:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp RAX,R8
            jne .L_41c3b0

            jmp .L_41c2bc
.L_41c3c1:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_41c358

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,3
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
            nop
.L_41c3f8:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_41c3f8

            jmp .L_41c358
.L_41c409:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_41c358

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,1
            lea RSI,QWORD PTR [RBP+RSI*4]
.L_41c440:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RAX,RSI
            jne .L_41c440

            jmp .L_41c358
.L_41c451:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_41c358

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,3
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c490:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_41c490

            jmp .L_41c358
.L_41c4a1:

            lea R9D,DWORD PTR [RSI+1]
            cmp R9D,EBP
            jbe .L_41c358

            mov R12D,EBP
            sub ESI,EBP
            mov RBP,QWORD PTR [RSP-8]
            add RSI,R12
            lea RAX,QWORD PTR [R12+R12*4]
            mov R8D,EBX
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R8D,4
            lea RAX,QWORD PTR [RDI+RAX*4+15]
            or R8D,2
            lea RSI,QWORD PTR [RBP+RSI*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c4e0:

            mov BYTE PTR [RAX],R8B
            add RAX,20
            cmp RSI,RAX
            jne .L_41c4e0

            jmp .L_41c358
.L_41c4f1:

            lea RAX,QWORD PTR [RIP+.L_4474e0]
            movsx EAX,WORD PTR [RAX+RDX*2]
            test AX,AX
            jle .L_41c509

            sub EAX,1
            jmp .L_41c20e
.L_41c509:

            pop RBX
.L_41c50a:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41c514:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c520:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_41c52e:

            mov R12D,DWORD PTR [RDX+184]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX+200]
            test R12D,R12D
            je .L_41c7d0

            mov RBP,RDX
            movzx EDX,BYTE PTR [RAX+15]
            mov RDI,RSI
            and EDX,15
            cmp DL,2
            je .L_41c7f8

            lea EDX,DWORD PTR [R12-1]
            add RAX,35
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4]
            jmp .L_41c593
          .byte 0x66
          .byte 0x90
.L_41c580:

            movzx EDX,BYTE PTR [RAX]
            add RAX,20
            and EDX,15
            cmp DL,2
            je .L_41c7f8
.L_41c593:

            cmp RAX,RCX
            jne .L_41c580
.L_41c598:

            test R12D,R12D
            je .L_41c7d0

            mov RDI,QWORD PTR [RBP+200]
            xor EBX,EBX
            movzx ECX,BYTE PTR [RDI+15]
            lea RAX,QWORD PTR [RDI+35]
            jmp .L_41c5c1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c5b8:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_41c5c9
.L_41c5c1:

            add EBX,1
            cmp EBX,R12D
            jne .L_41c5b8
.L_41c5c9:

            xor ESI,ESI
            and ECX,15
            je .L_41c622
.L_41c5d0:

            cmp CL,2
            je .L_41c622
.L_41c5d5:

            mov EAX,EBX
            mov ESI,DWORD PTR [RBP+184]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx ECX,BYTE PTR [RDI+RAX*4+15]
            lea EAX,DWORD PTR [RBX+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RAX*4+15]
            mov EAX,EBX
            jmp .L_41c609
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c600:

            add RDX,20
            cmp CL,BYTE PTR [RDX-20]
            jne .L_41c610
.L_41c609:

            add EAX,1
            cmp ESI,EAX
            ja .L_41c600
.L_41c610:

            cmp R12D,EBX
            mov ESI,EBX
            jbe .L_41c7d0

            and ECX,15
            mov EBX,EAX
            jne .L_41c5d0
.L_41c622:

            lea EDX,DWORD PTR [RSI+3]
            cmp EDX,EBX
            ja .L_41c7c0

            mov R10D,ESI
            lea RAX,QWORD PTR [R10+R10*4]
            cmp BYTE PTR [RDI+RAX*4+18],16
            je .L_41c858
.L_41c63f:

            mov EDX,ESI
            xor R8D,R8D
.L_41c644:

            cmp EDX,EBX
            jae .L_41c68c

            lea ECX,DWORD PTR [RBX-1]
            mov R9D,EDX
            mov R11D,202758
            lea RAX,QWORD PTR [R9+R9*4]
            sub ECX,EDX
            add RCX,R9
            lea RAX,QWORD PTR [RDI+RAX*4+12]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RDI+RCX*4+32]
            nop
            nop
            nop
            nop
            nop
.L_41c670:

            test BYTE PTR [RAX],32
            jne .L_41c680

            movzx R9D,BYTE PTR [RAX+6]
            bt R11D,R9D
            jb .L_41c68e
.L_41c680:

            add RAX,20
            add EDX,1
            cmp RCX,RAX
            jne .L_41c670
.L_41c68c:

            mov EDX,ESI
.L_41c68e:

            shl R8D,31
            lea RAX,QWORD PTR [R10+R10*4]
            mov ECX,ESI
            sar R8D,31
            and R8D,3
            lea RAX,QWORD PTR [RDI+RAX*4+19]
            add R8D,ESI
            jmp .L_41c6ba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c6b0:

            mov BYTE PTR [RAX],5
            add ECX,1
            add RAX,20
.L_41c6ba:

            cmp R8D,ECX
            ja .L_41c6b0

            cmp ECX,EDX
            jae .L_41c885

            lea R8D,DWORD PTR [RDX-1]
            mov R9D,ECX
            lea RAX,QWORD PTR [R9+R9*4]
            mov R14D,R8D
            sub R14D,ECX
            lea RAX,QWORD PTR [RDI+RAX*4+19]
            mov RCX,R14
            add RCX,R9
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RDI+RCX*4+39]
            nop
            nop
            nop
            nop
.L_41c6f0:

            mov BYTE PTR [RAX],3
            add RAX,20
            cmp RCX,RAX
            jne .L_41c6f0
.L_41c6fc:

            cmp EDX,EBX
            jae .L_41c790

            mov EAX,EDX
            lea ECX,DWORD PTR [RDX+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp ECX,EBX
            mov BYTE PTR [RDI+RAX*4+19],4
            jae .L_41c790

            lea R8D,DWORD PTR [RBX-2]
            lea RAX,QWORD PTR [RCX+RCX*4]
            mov R15D,R8D
            lea RAX,QWORD PTR [RDI+RAX*4+19]
            sub R15D,EDX
            add RCX,R15
            lea RDX,QWORD PTR [RCX+RCX*4]
            mov ECX,5
            lea RDI,QWORD PTR [RDI+RDX*4+39]
            jmp .L_41c779
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c740:

            cmp BYTE PTR [RAX],3
            jbe .L_41c770

            cmp ECX,5
            je .L_41c7b0

            cmp ECX,8
            jne .L_41c7b9

            cmp DL,10
            je .L_41c848

            cmp DL,27
            je .L_41c850

            mov BYTE PTR [RAX],9
            mov ECX,9
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c770:

            add RAX,20
            cmp RAX,RDI
            je .L_41c790
.L_41c779:

            movzx EDX,BYTE PTR [RAX-1]
            cmp DL,22
            jne .L_41c740

            mov BYTE PTR [RAX],3
            add RAX,20
            cmp RAX,RDI
            jne .L_41c779

            nop
            nop
.L_41c790:

            lea RCX,QWORD PTR [RIP+.L_41c010]
            mov RDI,RBP
            mov EDX,EBX
            call .L_405280

            mov RDI,QWORD PTR [RBP+200]
            jmp .L_41c5d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c7b0:

            cmp DL,27
            je .L_41c838
.L_41c7b9:

            mov BYTE PTR [RAX],CL
            jmp .L_41c770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c7c0:

            mov EDX,ESI
            xor R8D,R8D
            mov R10D,ESI
            jmp .L_41c644
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c7d0:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41ca0b

            add RSP,88
.L_41c7e8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c7f8:

            mov RAX,QWORD PTR [RDI+152]
            mov DWORD PTR [RSP+12],0
            lea RCX,QWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RDI+160]
            mov EDX,9676
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_41c88c
.L_41c829:

            mov R12D,DWORD PTR [RBP+184]
            jmp .L_41c598
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c838:

            mov BYTE PTR [RAX],8
            mov ECX,8
            jmp .L_41c770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c848:

            mov BYTE PTR [RAX],7
            jmp .L_41c770
.L_41c850:

            mov BYTE PTR [RAX],8
            jmp .L_41c770
.L_41c858:

            lea EAX,DWORD PTR [RSI+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [RDI+RAX*4+18],18
            jne .L_41c63f

            lea EAX,DWORD PTR [RSI+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            cmp BYTE PTR [RAX+18],4
            sete R8B
            cmovne EDX,ESI
            jmp .L_41c644
.L_41c885:

            mov EDX,ECX
            jmp .L_41c6fc
.L_41c88c:

            pxor XMM0,XMM0
            mov EDI,9676
            lea R12,QWORD PTR [RSP+48]
            xor R14D,R14D
            movups XMMWORD PTR [RSP+20],XMM0
            call .L_41be20

            mov RDI,RBP
            movzx EBX,AH
            mov R13D,DWORD PTR [RSP+12]
            call .L_402730

            mov EDI,DWORD PTR [RBP+184]
            mov DWORD PTR [RBP+180],0
            xor EAX,EAX
.L_41c8c9:

            cmp EAX,EDI
            jae .L_41c959
.L_41c8d1:

            cmp BYTE PTR [RBP+176],0
            jne .L_41c959

            mov RSI,QWORD PTR [RBP+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RSI+RDX*4]
            movzx R15D,BYTE PTR [RCX+15]
            mov EDX,R15D
            and EDX,15
            cmp DL,2
            jne .L_41c966

            cmp R15D,R14D
            je .L_41c966

            mov DWORD PTR [RSP+16],R13D
            mov BYTE PTR [RSP+34],11
            mov RDI,RBP
            mov BYTE PTR [RSP+35],BL
            mov EAX,DWORD PTR [RSP+32]
            mov RSI,R12
            movdqa XMM0,XMMWORD PTR [RSP+16]
            mov R14D,R15D
            movaps XMMWORD PTR [RSP+48],XMM0
            mov DWORD PTR [RSP+64],EAX
            mov EAX,DWORD PTR [RCX+8]
            mov DWORD PTR [RSP+56],EAX
            mov EAX,DWORD PTR [RCX+4]
            mov DWORD PTR [RSP+52],EAX
            movzx EAX,BYTE PTR [RCX+15]
            mov BYTE PTR [RSP+63],AL
            call .L_4029f0

            mov EAX,DWORD PTR [RBP+180]
            mov EDI,DWORD PTR [RBP+184]
            cmp EAX,EDI
            jb .L_41c8d1
.L_41c959:

            mov RDI,RBP
            call .L_4027c0

            jmp .L_41c829
.L_41c966:

            cmp BYTE PTR [RBP+177],0
            je .L_41c9b2

            cmp RSI,QWORD PTR [RBP+208]
            je .L_41c99f
.L_41c978:

            mov EDX,1
            mov ESI,1
            mov RDI,RBP
            call .L_4022b0

            test AL,AL
            jne .L_41c9c0

            mov EAX,DWORD PTR [RBP+180]
            mov EDI,DWORD PTR [RBP+184]
            jmp .L_41c8c9
.L_41c99f:

            cmp DWORD PTR [RBP+188],EAX
            jne .L_41c978

            mov EDX,EAX
.L_41c9a9:

            add EDX,1
            mov DWORD PTR [RBP+188],EDX
.L_41c9b2:

            add EAX,1
            mov DWORD PTR [RBP+180],EAX
            jmp .L_41c8c9
.L_41c9c0:

            mov EAX,DWORD PTR [RBP+188]
            mov RDX,QWORD PTR [RBP+208]
            mov RCX,QWORD PTR [RBP+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBP+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBP+188]
            mov EAX,DWORD PTR [RBP+180]
            mov EDI,DWORD PTR [RBP+184]
            jmp .L_41c9a9
.L_41ca0b:

            call __stack_chk_fail@PLT
.L_41ca10:

            mov EAX,DWORD PTR [RSI+184]
            push R12
            push RBP
            push RBX
.L_41ca1a:

            mov RBX,QWORD PTR [RSI+200]
            test EAX,EAX
            je .L_41caef

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R12,QWORD PTR [RBX+RAX*4+20]
            jmp .L_41ca5a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ca40:

            mov ECX,EDX
            mov EAX,30
.L_41ca47:

            mov BYTE PTR [RBX+18],AL
            mov BYTE PTR [RBX+19],CL
            add RBX,20
            cmp RBX,R12
            je .L_41caef
.L_41ca5a:

            mov EBP,DWORD PTR [RBX]
            mov EDI,EBP
            call .L_41be20

            lea ECX,DWORD PTR [RBP-65024]
            movzx EDX,AH
            cmp ECX,15
            jbe .L_41ca40

            cmp EBP,4191
            ja .L_41cb40

            cmp EBP,4190
            jae .L_41cc78

            cmp EBP,4155
            je .L_41cc78

            jbe .L_41caf8

            cmp EBP,4169
            ja .L_41cc88

            cmp EBP,4161
            jae .L_41cad5

            cmp EBP,4157
            je .L_41cc68

            jb .L_41cb88

            cmp EBP,4158
            je .L_41cb78

            cmp EBP,4160
            jne .L_41cd45
.L_41cad5:

            mov ECX,EDX
            mov EAX,19
            add RBX,20
            mov BYTE PTR [RBX-2],AL
            mov BYTE PTR [RBX-1],CL
            cmp RBX,R12
            jne .L_41ca5a
.L_41caef:

            pop RBX
.L_41caf0:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41caf8:

            cmp EBP,4123
            je .L_41cbd2

            jbe .L_41cba8

            cmp EBP,4152
            je .L_41cc16

            jbe .L_41cce0

            cmp EBP,4153
            je .L_41cb98

            cmp EBP,4154
            jne .L_41cd45

            mov ECX,EDX
            mov EAX,18
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cb40:

            cmp EBP,4249
            ja .L_41cbe0

            cmp EBP,4240
            jae .L_41cad5

            cmp EBP,4205
            ja .L_41cc48

            cmp EBP,4201
            jae .L_41cc37

            cmp EBP,4192
            jne .L_41cc28
.L_41cb78:

            mov ECX,EDX
            mov EAX,21
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cb88:

            mov ECX,EDX
            mov EAX,22
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cb98:

            mov ECX,EDX
            mov EAX,4
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cba8:

            cmp EBP,160
            je .L_41cccb

            jbe .L_41cd40

            cmp EBP,215
            je .L_41cccb

            cmp EBP,4100
            jne .L_41cd45
.L_41cbd2:

            mov ECX,EDX
            mov EAX,16
            jmp .L_41ca47
          .byte 0x66
          .byte 0x90
.L_41cbe0:

            cmp EBP,9676
            je .L_41cccb

            ja .L_41ccb0

            cmp EBP,8213
            ja .L_41cda3

            cmp EBP,8210
            jae .L_41cccb

            cmp EBP,4252
            ja .L_41cd45
.L_41cc16:

            mov ECX,EDX
            mov EAX,8
            jmp .L_41ca47
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cc28:

            sub EBP,4195
            cmp EBP,1
            ja .L_41cd45
.L_41cc37:

            mov ECX,EDX
            mov EAX,25
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cc48:

            cmp EBP,4237
            ja .L_41cd10

            cmp EBP,4231
            jae .L_41cc16

            cmp EBP,4226
            jne .L_41cd45
.L_41cc68:

            mov ECX,EDX
            mov EAX,23
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cc78:

            mov ECX,EDX
            mov EAX,24
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cc88:

            cmp EBP,4174
            je .L_41cd20

            ja .L_41cd00

            cmp EBP,4171
            ja .L_41cd45

            mov ECX,EDX
            mov EAX,31
            jmp .L_41ca47
          .byte 0x66
          .byte 0x90
.L_41ccb0:

            cmp EBP,43638
            ja .L_41cd30

            cmp EBP,43636
            jae .L_41cd20

            sub EBP,9723
            cmp EBP,3
            ja .L_41cd45
.L_41cccb:

            mov ECX,EDX
            mov EAX,11
            jmp .L_41ca47
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cce0:

            cmp EBP,4146
            je .L_41ccf0

            cmp EBP,4150
            jne .L_41cd45
.L_41ccf0:

            mov ECX,EDX
            mov EAX,10
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cd00:

            cmp EBP,4186
            je .L_41cbd2

            jmp .L_41cd45
          .byte 0x66
          .byte 0x90
.L_41cd10:

            cmp EBP,4239
            je .L_41cc16

            jmp .L_41cd45
          .byte 0x66
          .byte 0x90
.L_41cd20:

            mov ECX,EDX
            mov EAX,1
            jmp .L_41ca47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cd30:

            cmp EBP,43643
            je .L_41cc37

            jmp .L_41cd45
          .byte 0x66
          .byte 0x90
.L_41cd40:

            cmp EBP,45
            je .L_41cccb
.L_41cd45:

            and EAX,127
            mov ECX,EDX
            cmp AX,7
            jne .L_41ca47

            cmp EDX,6
            je .L_41cd94

            jbe .L_41cd7f

            cmp EDX,8
            je .L_41cdb8

            cmp EDX,11
            mov ECX,11
            mov EAX,29
            je .L_41ca47
.L_41cd73:

            mov ECX,EDX
            mov EAX,7
            jmp .L_41ca47
.L_41cd7f:

            cmp EDX,3
            mov ECX,2
            mov EAX,28
            je .L_41ca47

            jmp .L_41cd73
.L_41cd94:

            mov ECX,6
            mov EAX,26
            jmp .L_41ca47
.L_41cda3:

            cmp EBP,8226
            je .L_41cccb

            jmp .L_41cd45
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cdb8:

            mov ECX,8
            mov EAX,27
            jmp .L_41ca47
.L_41cdc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cdd0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41cdda:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,4
            ja .L_41ceb0

            mov R12,RDX
            lea RDX,QWORD PTR [RIP+.L_447b80]
            mov ESI,ESI
            mov EBP,EDI
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ce10:

            lea R13,QWORD PTR [RSP+4]
            mov ESI,DWORD PTR [RBX+4]
            xor EDX,EDX
            mov RDI,R12
            mov RCX,R13
            call .L_408610

            test EAX,EAX
            je .L_41cec0

            mov EBP,DWORD PTR [RBX+4]
.L_41ce30:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41cee0

            add RSP,24
.L_41ce4a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ce58:

            lea RBX,QWORD PTR [RIP+.L_447d40]
            mov EAX,3656
.L_41ce64:

            cmp EBP,EAX
            jne .L_41ce74

            jmp .L_41ce10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ce70:

            cmp EAX,EBP
            je .L_41ce10
.L_41ce74:

            add RBX,12
            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            jne .L_41ce70

            jmp .L_41ce30
.L_41ce80:

            mov EAX,3656
            lea RBX,QWORD PTR [RIP+.L_447ca0]
            jmp .L_41ce64
          .byte 0x66
          .byte 0x90
.L_41ce90:

            mov EAX,3597
            lea RBX,QWORD PTR [RIP+.L_447c60]
            jmp .L_41ce64
          .byte 0x66
          .byte 0x90
.L_41cea0:

            mov EAX,3656
            lea RBX,QWORD PTR [RIP+.L_447da0]
            jmp .L_41ce64
          .byte 0x66
          .byte 0x90
.L_41ceb0:

            mov EAX,DWORD PTR [0]
            ud2 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cec0:

            mov ESI,DWORD PTR [RBX+8]
            xor EDX,EDX
            mov RCX,R13
            mov RDI,R12
            call .L_408610

            test EAX,EAX
            je .L_41ce30

            mov EBP,DWORD PTR [RBX+8]
            jmp .L_41ce30
.L_41cee0:

            call __stack_chk_fail@PLT
.L_41cee5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cef0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RDI,RSI
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            mov R12D,1069547641
            sub RSP,104
.L_41cf10:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_402730

            mov R15D,DWORD PTR [RBX+184]
            lea R13,QWORD PTR [RSP+56]
            mov DWORD PTR [RBX+180],0
            xor EAX,EAX
            nop
            nop
            nop
.L_41cf40:

            cmp R15D,EAX
            jbe .L_41cfb0
.L_41cf45:

            cmp BYTE PTR [RBX+176],0
            jne .L_41cfb0

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov EDX,DWORD PTR [RCX+RDX*4]
            mov ESI,EDX
            and SIL,127
            cmp ESI,3635
            je .L_41d018

            cmp BYTE PTR [RBX+177],0
            je .L_41d003

            cmp RCX,QWORD PTR [RBX+208]
            je .L_41cff0
.L_41cf86:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_41d2b0
.L_41cfa0:

            mov EAX,DWORD PTR [RBX+180]
.L_41cfa6:

            cmp R15D,EAX
            ja .L_41cf45

            nop
            nop
            nop
            nop
            nop
.L_41cfb0:

            mov RDI,RBX
            call .L_4027c0

            cmp DWORD PTR [R14+4],1416126825
            je .L_41d188
.L_41cfc6:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41d3bd

            add RSP,104
.L_41cfde:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cff0:

            cmp DWORD PTR [RBX+188],EAX
            jne .L_41cf86

            mov EDX,EAX
.L_41cffa:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
.L_41d003:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_41cf40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d018:

            lea EAX,DWORD PTR [RDX+26]
            sub EDX,1
            mov RCX,R13
            mov DWORD PTR [RSP+60],EDX
            mov ESI,1
            mov EDX,2
            mov RDI,RBX
            mov DWORD PTR [RSP+56],EAX
            call .L_402850

            cmp BYTE PTR [RBX+176],0
            jne .L_41cfc6

            mov EDX,DWORD PTR [RBX+188]
            mov RCX,QWORD PTR [RBX+208]
            lea EAX,DWORD PTR [RDX-2]
            lea R9,QWORD PTR [RAX+RAX*4]
            mov R10,RAX
            lea R8,QWORD PTR [R9*4]
            add RCX,R8
            movzx EAX,WORD PTR [RCX+16]
            and AX,224
            or EAX,12
            test R10D,R10D
            mov WORD PTR [RCX+16],AX
            je .L_41cfa0

            lea EAX,DWORD PTR [RDX-3]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+208]
            lea RDI,QWORD PTR [RAX+RCX*4]
            mov ECX,R10D
            nop
            nop
            nop
            nop
            nop
.L_41d098:

            mov EAX,DWORD PTR [RDI]
            lea ESI,DWORD PTR [RCX-1]
            and AL,127
            sub EAX,3633
            cmp EAX,29
            jbe .L_41d0d0
.L_41d0a9:

            lea EAX,DWORD PTR [RCX+2]
            cmp EAX,EDX
            jb .L_41d3a2

            mov EAX,DWORD PTR [RBX+124]
            test EAX,EAX
            jne .L_41cfa0

            mov RDI,RBX
            call .L_402f00

            jmp .L_41cfa0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d0d0:

            bt R12,RAX
            jae .L_41d0a9

            sub RDI,20
            test ESI,ESI
            mov ECX,ESI
            jne .L_41d098

            cmp EDX,2
            jbe .L_41cfa0

            mov RAX,R8
            mov R11D,20
            xor R10D,R10D
.L_41d0f5:

            mov RDI,RBX
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            mov QWORD PTR [RSP+8],R10
            mov QWORD PTR [RSP+16],RAX
            call .L_402f00

            mov RDI,QWORD PTR [RBX+208]
            mov R8,QWORD PTR [RSP+40]
            mov R10,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RDI+R8*1+16]
            movdqu XMM0,XMMWORD PTR [RDI+R9*4]
            lea RSI,QWORD PTR [RDI+R10*1]
            add RDI,R11
            mov DWORD PTR [RSP+80],EDX
            mov RDX,RAX
            movaps XMMWORD PTR [RSP+64],XMM0
            call memmove@PLT

            mov RAX,QWORD PTR [RBX+208]
            mov R10,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov DWORD PTR [RAX+R10*1+16],EDX
            movups XMMWORD PTR [RAX+R10*1],XMM0
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_41cfa6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d188:

            cmp BYTE PTR [R14+48],0
            jne .L_41cfc6

            mov EAX,DWORD PTR [RBX+184]
            mov R13,QWORD PTR [RBX+200]
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            mov QWORD PTR [RSP+24],R13
            je .L_41cfc6

            mov EDI,DWORD PTR [R13]
            xor R14D,R14D
            mov DWORD PTR [RSP+32],0
            mov R12D,2
            mov EBX,3
            lea R15,QWORD PTR [RIP+.L_447c00]
            lea EDX,DWORD PTR [RDI-3633]
            cmp EDX,29
            jbe .L_41d285

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d1e8:

            lea EAX,DWORD PTR [RDI-3640]
            cmp EAX,2
            jbe .L_41d2a5
.L_41d1f7:

            lea EDX,DWORD PTR [RDI-3656]
            mov EAX,2
            cmp EDX,4
            ja .L_41d32e

            nop
            nop
            nop
            nop
            nop
.L_41d210:

            movsxd RSI,R12D
            movsxd RBX,EBX
            lea RCX,QWORD PTR [RIP+.L_447ba0]
            lea RDX,QWORD PTR [RBX+RBX*2]
            mov R10,RSI
            lea RSI,QWORD PTR [RSI+RSI*2]
            add RDX,RAX
            add RSI,RAX
            mov R12D,DWORD PTR [RCX+RSI*8+4]
            mov ESI,DWORD PTR [R15+RDX*8]
            mov EBX,DWORD PTR [R15+RDX*8+4]
            test ESI,ESI
            jne .L_41d24a

            lea RDX,QWORD PTR [R10+R10*2]
            add RAX,RDX
            mov ESI,DWORD PTR [RCX+RAX*8]
.L_41d24a:

            cmp ESI,4
            je .L_41d300

            mov RDX,RBP
            call .L_41cdd0

            mov DWORD PTR [R13],EAX
.L_41d25f:

            add R14D,1
            add R13,20
            cmp DWORD PTR [RSP+8],R14D
            je .L_41cfc6

            mov EDI,DWORD PTR [R13]
            lea EDX,DWORD PTR [RDI-3633]
            cmp EDX,29
            ja .L_41d1e8
.L_41d285:

            mov ESI,809500793
            xor EAX,EAX
            bt RSI,RDX
            jb .L_41d210

            lea EAX,DWORD PTR [RDI-3640]
            cmp EAX,2
            ja .L_41d1f7
.L_41d2a5:

            mov EAX,1
            jmp .L_41d210
          .byte 0x90
.L_41d2b0:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_41cffa
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d300:

            mov EAX,DWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+24]
            mov RDX,RBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [RDI+RAX*4]
            mov EDI,DWORD PTR [R10]
            mov QWORD PTR [RSP+16],R10
            call .L_41cdd0

            mov R10,QWORD PTR [RSP+16]
            mov DWORD PTR [R10],EAX
            jmp .L_41d25f
.L_41d32e:

            mov EAX,EDI
            and EAX,4294967291
            cmp EAX,3611
            je .L_41d384

            cmp EDI,3613
            je .L_41d384

            cmp EDI,3597
            je .L_41d38e

            cmp EDI,3600
            je .L_41d38e

            lea EAX,DWORD PTR [RDI-3598]
            cmp EAX,1
            jbe .L_41d398

            sub EDI,3585
            cmp EDI,46
            sbb R12D,R12D
            not R12D
            and R12D,2
            cmp EDI,46
            sbb EBX,EBX
            not EBX
            and EBX,3
.L_41d37a:

            mov DWORD PTR [RSP+32],R14D
            jmp .L_41d25f
.L_41d384:

            xor R12D,R12D
            mov EBX,1
            jmp .L_41d37a
.L_41d38e:

            mov R12D,1
            xor EBX,EBX
            jmp .L_41d37a
.L_41d398:

            mov R12D,2
            xor EBX,EBX
            jmp .L_41d37a
.L_41d3a2:

            mov EAX,R10D
            mov R10D,ECX
            mov ESI,ECX
            imul R10,R10,20
            sub EAX,ECX
            imul RAX,RAX,20
            lea R11,QWORD PTR [R10+20]
            jmp .L_41d0f5
.L_41d3bd:

            call __stack_chk_fail@PLT
.L_41d3c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d3d0:

            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+48]
            lea RBX,QWORD PTR [RIP+.L_447e10]
            mov ESI,1633842803
            sub RSP,8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d3f0:

            add RBX,4
            mov ECX,1
            mov EDX,1
            mov RDI,RBP
            call .L_43ce20

            mov ESI,DWORD PTR [RBX]
            test ESI,ESI
            jne .L_41d3f0

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_41d413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d420:

            mov RCX,QWORD PTR [RDX+200]
            mov EDX,DWORD PTR [RDX+184]
            test EDX,EDX
            je .L_41d455

            sub EDX,1
            lea RAX,QWORD PTR [RCX+12]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d448:

            and WORD PTR [RAX],65519
            add RAX,20
            cmp RAX,RDX
            jne .L_41d448
.L_41d455:

            ret 
.L_41d457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d460:

            mov RAX,QWORD PTR [RDI+1064]
            mov R9D,DWORD PTR [RAX]
            test R9D,R9D
            je .L_41d570

            mov R11D,DWORD PTR [RDX+184]
            test R11D,R11D
            je .L_41d570

            mov R10,QWORD PTR [RDX+200]
            xor ESI,ESI
            movzx ECX,BYTE PTR [R10+15]
            lea RAX,QWORD PTR [R10+35]
            jmp .L_41d4a9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d4a0:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_41d4b4
.L_41d4a9:

            add ESI,1
            cmp R11D,ESI
            jne .L_41d4a0

            mov ESI,R11D
.L_41d4b4:

            xor EDI,EDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d4c0:

            cmp ESI,EDI
            jbe .L_41d518

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R10+RAX*4]
            test DWORD PTR [RCX+4],R9D
            je .L_41d518

            test BYTE PTR [RCX+12],16
            jne .L_41d578

            lea ECX,DWORD PTR [RSI-1]
            lea R8D,DWORD PTR [RDI+1]
            sub ECX,EDI
            lea RAX,QWORD PTR [R8+R8*4]
            add RCX,R8
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            lea RDI,QWORD PTR [R10+RCX*4]
            jmp .L_41d513
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d500:

            test DWORD PTR [RAX+4],R9D
            mov RCX,RAX
            je .L_41d518

            add RAX,20
            test BYTE PTR [RCX+12],16
            jne .L_41d578
.L_41d513:

            cmp RAX,RDI
            jne .L_41d500
.L_41d518:

            mov RAX,QWORD PTR [RDX+200]
            mov ECX,ESI
            mov EDI,DWORD PTR [RDX+184]
            lea RCX,QWORD PTR [RCX+RCX*4]
            movzx R8D,BYTE PTR [RAX+RCX*4+15]
            lea ECX,DWORD PTR [RSI+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,ESI
            jmp .L_41d552
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d548:

            add RCX,20
            cmp R8B,BYTE PTR [RCX-20]
            jne .L_41d559
.L_41d552:

            add EAX,1
            cmp EDI,EAX
            ja .L_41d548
.L_41d559:

            cmp R11D,ESI
            mov EDI,ESI
            jbe .L_41d570

            mov ESI,EAX
            jmp .L_41d4c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d570:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d578:

            mov BYTE PTR [RCX+18],18
            jmp .L_41d518
.L_41d57e:

            nop
            nop
.L_41d580:

            mov R10D,DWORD PTR [RDX+184]
            test R10D,R10D
            je .L_41d660

            mov R9,QWORD PTR [RDX+200]
            xor ESI,ESI
            movzx ECX,BYTE PTR [R9+15]
            lea RAX,QWORD PTR [R9+35]
            jmp .L_41d5b1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d5a8:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_41d5bc
.L_41d5b1:

            add ESI,1
            cmp R10D,ESI
            jne .L_41d5a8

            mov ESI,R10D
.L_41d5bc:

            xor EDI,EDI
            nop
            nop
.L_41d5c0:

            cmp ESI,EDI
            jbe .L_41d612

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R9+RAX*4]
            test BYTE PTR [RCX+12],16
            jne .L_41d668

            lea ECX,DWORD PTR [RSI-1]
            lea R8D,DWORD PTR [RDI+1]
            sub ECX,EDI
            lea RAX,QWORD PTR [R8+R8*4]
            add RCX,R8
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            lea RDI,QWORD PTR [R9+RCX*4]
            jmp .L_41d60d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d600:

            mov RCX,RAX
            add RAX,20
            test BYTE PTR [RCX+12],16
            jne .L_41d668
.L_41d60d:

            cmp RAX,RDI
            jne .L_41d600
.L_41d612:

            mov RAX,QWORD PTR [RDX+200]
            mov ECX,ESI
            mov EDI,DWORD PTR [RDX+184]
            lea RCX,QWORD PTR [RCX+RCX*4]
            movzx R8D,BYTE PTR [RAX+RCX*4+15]
            lea ECX,DWORD PTR [RSI+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,ESI
            jmp .L_41d64a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d640:

            add RCX,20
            cmp R8B,BYTE PTR [RCX-20]
            jne .L_41d651
.L_41d64a:

            add EAX,1
            cmp EDI,EAX
            ja .L_41d640
.L_41d651:

            cmp R10D,ESI
            mov EDI,ESI
            jbe .L_41d660

            mov ESI,EAX
            jmp .L_41d5c0
          .byte 0x90
.L_41d660:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d668:

            mov BYTE PTR [RCX+18],22
            jmp .L_41d612
.L_41d66e:

            nop
            nop
.L_41d670:

            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_41d679:

            mov RAX,QWORD PTR [RDI+1064]
            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41d694

            mov EDX,DWORD PTR [RDI+4]
            mov RDI,RAX
            call .L_414300
.L_41d694:

            mov EAX,DWORD PTR [RBX+184]
            mov RBX,QWORD PTR [RBX+200]
            test EAX,EAX
            je .L_41d6cb

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RBP,QWORD PTR [RBX+RAX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d6b8:

            mov EDI,DWORD PTR [RBX]
            add RBX,20
            call .L_41ea20

            mov BYTE PTR [RBX-2],AL
            cmp RBX,RBP
            jne .L_41d6b8
.L_41d6cb:

            add RSP,8
.L_41d6cf:

            pop RBX
            pop RBP
            ret 
.L_41d6d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d6e0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_41d6f2

            call .L_413900
.L_41d6f2:

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_41d6fb:

            nop
            nop
            nop
            nop
            nop
.L_41d700:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,16
            mov EDI,1
            sub RSP,8
.L_41d713:

            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41d7a0

            mov R9D,DWORD PTR [RBP+56]
            mov R8,QWORD PTR [RBP+64]
            xor ECX,ECX
.L_41d72e:

            cmp RCX,R9
            jae .L_41d771

            lea RDX,QWORD PTR [RCX+R9*1]
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea RDI,QWORD PTR [R8+RAX*4]
            mov ESI,DWORD PTR [RDI]
            cmp ESI,1919969382
            ja .L_41d76c

            jmp .L_41d7b0
          .byte 0x66
          .byte 0x90
.L_41d750:

            lea RAX,QWORD PTR [RCX+RDX*1]
            shr RAX,1
            lea RSI,QWORD PTR [RAX+RAX*8]
            lea RDI,QWORD PTR [R8+RSI*4]
            mov ESI,DWORD PTR [RDI]
            cmp ESI,1919969382
            jbe .L_41d7c0

            mov RDX,RAX
.L_41d76c:

            cmp RCX,RDX
            jb .L_41d750
.L_41d771:

            xor EAX,EAX
.L_41d773:

            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,1299148391
            je .L_41d800

            jbe .L_41d7e0

            cmp EAX,1349017959
            je .L_41d800

            jbe .L_41d820

            cmp EAX,1349020784
            je .L_41d800

            cmp EAX,1400468067
            je .L_41d800
.L_41d7a0:

            add RSP,8
.L_41d7a4:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d7b0:

            mov RAX,RDX
            mov RDX,R9
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d7c0:

            cmp ESI,1919969382
            je .L_41d7d4

            lea RCX,QWORD PTR [RAX+1]
            mov R9,RDX
            jmp .L_41d72e
.L_41d7d4:

            mov EAX,DWORD PTR [RDI+28]
            jmp .L_41d773

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d7e0:

            cmp EAX,1098015074
            je .L_41d800

            jbe .L_41d850

            cmp EAX,1298230884
            je .L_41d800

            cmp EAX,1298230889
            jne .L_41d7a0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d800:

            mov RDI,RBP
            call .L_412eb0

            test RAX,RAX
            je .L_41d838

            mov QWORD PTR [RBX+8],RAX
            add RSP,8
.L_41d815:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d820:

            cmp EAX,1315663727
            je .L_41d800

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d838:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_41d7a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d850:

            cmp EAX,1097100397
            je .L_41d800

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_41d861:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d870:

            push R12
            push RBP
            lea RDX,QWORD PTR [RIP+.L_41da20]
            push RBX
.L_41d87b:

            lea RBX,QWORD PTR [RDI+48]
            xor ESI,ESI
            lea RBP,QWORD PTR [RIP+.L_448620]
            mov RDI,RBX
            call .L_43d020

            mov ECX,1
            mov EDX,1
            mov ESI,1819239276
            mov RDI,RBX
            lea R12,QWORD PTR [RBP+28]
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1667460464
            mov RDI,RBX
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1853188980
            mov RDI,RBX
            call .L_43ce20

            mov ECX,1
            mov EDX,1
            mov ESI,1634429038
            mov RDI,RBX
            call .L_43ce20

            lea RDX,QWORD PTR [RIP+.L_41d420]
            xor ESI,ESI
            mov RDI,RBX
            call .L_43d020

            mov ECX,4
            mov EDX,1
            mov ESI,1919969382
            mov RDI,RBX
            call .L_43ce20

            lea RDX,QWORD PTR [RIP+.L_41d460]
            xor ESI,ESI
            mov RDI,RBX
            call .L_43d020

            lea RDX,QWORD PTR [RIP+.L_41d420]
            xor ESI,ESI
            mov RDI,RBX
            call .L_43d020

            mov ECX,5
            mov EDX,1
            mov ESI,1886545254
            mov RDI,RBX
            call .L_43ce20

            lea RDX,QWORD PTR [RIP+.L_41d580]
            xor ESI,ESI
            mov RDI,RBX
            call .L_43d020

            mov ESI,1919644262
            jmp .L_41d973
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d970:

            mov ESI,DWORD PTR [RBP]
.L_41d973:

            mov ECX,5
            mov EDX,1
            mov RDI,RBX
            add RBP,4
            call .L_43ce20

            cmp RBP,R12
            jne .L_41d970

            lea RDX,QWORD PTR [RIP+.L_41e360]
            lea RBP,QWORD PTR [RIP+.L_448600]
            xor ESI,ESI
            mov RDI,RBX
            call .L_43d020

            lea R12,QWORD PTR [RBP+28]
            mov ESI,1769172844
            jmp .L_41d9bb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d9b8:

            mov ESI,DWORD PTR [RBP]
.L_41d9bb:

            xor ECX,ECX
            mov EDX,1
            mov RDI,RBX
            add RBP,4
            call .L_43ce20

            cmp RBP,R12
            jne .L_41d9b8

            lea RBP,QWORD PTR [RIP+.L_4485e0]
            xor ESI,ESI
            xor EDX,EDX
            mov RDI,RBX
            call .L_43d020

            lea R12,QWORD PTR [RBP+32]
            mov ESI,1633842803
            jmp .L_41d9fb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d9f8:

            mov ESI,DWORD PTR [RBP]
.L_41d9fb:

            mov ECX,5
            mov EDX,1
            mov RDI,RBX
            add RBP,4
            call .L_43ce20

            cmp RBP,R12
            jne .L_41d9f8

            pop RBX
.L_41da17:

            pop RBP
            pop R12
            ret 
.L_41da1b:

            nop
            nop
            nop
            nop
            nop
.L_41da20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_41da2e:

            mov ECX,DWORD PTR [RDX+184]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test ECX,ECX
            jne .L_41db58
.L_41da4c:

            mov RAX,QWORD PTR [RDI+1064]
            mov R9D,DWORD PTR [RAX]
            test R9D,R9D
            je .L_41dc37

            mov R11D,DWORD PTR [RDX+184]
            test R11D,R11D
            je .L_41dc37

            mov R10,QWORD PTR [RDX+200]
            xor R8D,R8D
            movzx ECX,BYTE PTR [R10+15]
            lea RAX,QWORD PTR [R10+35]
            jmp .L_41da91
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41da88:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_41da9d
.L_41da91:

            add R8D,1
            cmp R11D,R8D
            jne .L_41da88

            mov R8D,R11D
.L_41da9d:

            lea RBX,QWORD PTR [R10+24]
            xor ESI,ESI
            mov EBP,3
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dab0:

            mov R13D,ESI
            mov EAX,1
            lea R12,QWORD PTR [R13+R13*4]
            shl R12,2
            cmp BYTE PTR [R10+R12*1+18],18
            je .L_41dad4

            mov EAX,R8D
            sub EAX,ESI
            cmp EAX,3
            cmova EAX,EBP
.L_41dad4:

            lea ECX,DWORD PTR [RAX+RSI*1]
            cmp ESI,ECX
            jae .L_41dafc

            not ESI
            lea RAX,QWORD PTR [R10+R12*1+4]
            add ECX,ESI
            add RCX,R13
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RBX+RCX*4]
            nop
.L_41daf0:

            or DWORD PTR [RAX],R9D
            add RAX,20
            cmp RCX,RAX
            jne .L_41daf0
.L_41dafc:

            mov RAX,QWORD PTR [RDX+200]
            mov ECX,R8D
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ESI,DWORD PTR [RDX+184]
            movzx R12D,BYTE PTR [RAX+RCX*4+15]
            lea ECX,DWORD PTR [R8+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,R8D
            jmp .L_41db3a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db30:

            add RCX,20
            cmp R12B,BYTE PTR [RCX-20]
            jne .L_41db41
.L_41db3a:

            add EAX,1
            cmp ESI,EAX
            ja .L_41db30
.L_41db41:

            cmp R11D,R8D
            mov ESI,R8D
            jbe .L_41dc30

            mov R8D,EAX
            jmp .L_41dab0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41db58:

            mov RSI,QWORD PTR [RDX+200]
            lea R11,QWORD PTR [RIP+.L_447fa0]
            mov R14D,39
            mov EBP,1
            xor EBX,EBX
            xor R12D,R12D
            xor R8D,R8D
            mov R10D,40
            mov R9D,2
            movzx EAX,BYTE PTR [RSI+18]
            lea R15,QWORD PTR [RSI+35]
            xor R13D,R13D
            mov QWORD PTR [RSP+8],R15
.L_41db95:

            cmp AL,R14B
            jbe .L_41dc68
.L_41db9e:

            movsx RAX,R10B
.L_41dba2:

            add RAX,R11
            movsx EAX,BYTE PTR [RAX+R9*1]
.L_41dbaa:

            lea R15,QWORD PTR [RIP+.L_447f60]
            cdqe 
            movsx R13,BYTE PTR [R15+RAX*1]
            lea R15,QWORD PTR [RIP+.L_447f20]
            movzx EAX,BYTE PTR [R15+RAX*1]
            test AL,AL
            jne .L_41dc72
.L_41dbcc:

            add R8D,1
.L_41dbd0:

            cmp ECX,R8D
            je .L_41e2a2

            lea R14,QWORD PTR [RIP+.L_4484a0]
            movsxd RAX,R13D
            movsx R9,WORD PTR [R14+RAX*2]
            lea R14,QWORD PTR [RIP+.L_448520]
            movzx R10D,BYTE PTR [R14+RAX*1]
            test R10B,R10B
            jle .L_41db9e

            lea R14D,DWORD PTR [R13+R13*1]
            lea RAX,QWORD PTR [RIP+.L_448560]
            movsxd R14,R14D
            add R14,RAX
            mov EAX,R8D
            imul RAX,RAX,20
            movzx R13D,BYTE PTR [R14]
            movzx EAX,BYTE PTR [RSI+RAX*1+18]
            cmp R13B,AL
            ja .L_41db9e

            movzx R14D,BYTE PTR [R14+1]
            jmp .L_41db95
          .byte 0x66
          .byte 0x90
.L_41dc30:

            mov RAX,QWORD PTR [RDI+1064]
.L_41dc37:

            cmp QWORD PTR [RAX+8],0
            je .L_41dc90
.L_41dc3e:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e2bf

            add RSP,56
.L_41dc56:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dc68:

            sub EAX,R13D
            cdqe 
            jmp .L_41dba2
.L_41dc72:

            cmp AL,16
            ja .L_41dbcc

            lea R15,QWORD PTR [RIP+.L_447e40]
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dc90:

            mov R13D,DWORD PTR [RDI+56]
            mov R10,QWORD PTR [RDI+64]
            lea RBP,QWORD PTR [RSP+16]
            mov R12D,DWORD PTR [RDI+52]
            lea R14,QWORD PTR [RIP+.L_448600]
            xor R11D,R11D
            mov R9D,1769172844
            xor EBX,EBX
.L_41dcb3:

            mov R15,R13
            xor ESI,ESI
.L_41dcb8:

            cmp RSI,R15
            jae .L_41dcff

            lea RCX,QWORD PTR [RSI+R15*1]
            shr RCX,1
            lea RAX,QWORD PTR [RCX+RCX*8]
            lea R8,QWORD PTR [R10+RAX*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            ja .L_41dcfa

            jmp .L_41dd1d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dce0:

            lea RAX,QWORD PTR [RSI+RCX*1]
            shr RAX,1
            lea RDI,QWORD PTR [RAX+RAX*8]
            lea R8,QWORD PTR [R10+RDI*4]
            mov EDI,DWORD PTR [R8]
            cmp EDI,R9D
            jbe .L_41dd28

            mov RCX,RAX
.L_41dcfa:

            cmp RSI,RCX
            jb .L_41dce0
.L_41dcff:

            xor EAX,EAX
            cmp EAX,R12D
            je .L_41dd3f
.L_41dd06:

            mov DWORD PTR [RBP+R11*1],EAX
            add R11,4
            or EBX,EAX
            cmp R11,16
            je .L_41dd52
.L_41dd17:

            mov R9D,DWORD PTR [R14+R11*1]
            jmp .L_41dcb3
.L_41dd1d:

            mov RAX,RCX
            mov RCX,R15
            nop
            nop
            nop
            nop
            nop
.L_41dd28:

            cmp EDI,R9D
            jae .L_41dd36

            lea RSI,QWORD PTR [RAX+1]
            mov R15,RCX
            jmp .L_41dcb8
.L_41dd36:

            mov EAX,DWORD PTR [R8+28]
            cmp EAX,R12D
            jne .L_41dd06
.L_41dd3f:

            mov DWORD PTR [RBP+R11*1],0
            add R11,4
            cmp R11,16
            jne .L_41dd17
.L_41dd52:

            test EBX,EBX
            je .L_41dc3e

            mov R10D,DWORD PTR [RDX+184]
            test R10D,R10D
            je .L_41dc3e

            mov R11,QWORD PTR [RDX+200]
            xor EDI,EDI
            movzx ECX,BYTE PTR [R11+15]
            lea RAX,QWORD PTR [R11+35]
            jmp .L_41dd89
          .byte 0x66
          .byte 0x90
.L_41dd80:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_41dd94
.L_41dd89:

            add EDI,1
            cmp R10D,EDI
            jne .L_41dd80

            mov EDI,R10D
.L_41dd94:

            lea R13,QWORD PTR [R11+24]
            not EBX
            xor ESI,ESI
            mov EBP,4
            xor R9D,R9D
            mov R12D,1
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ddb0:

            and ECX,15
            cmp CL,7
            ja .L_41ddd0

            mov RAX,R12
            shl RAX,CL
            test AL,161
            jne .L_41e1f0

            test AL,94
            jne .L_41e1fa

            nop
            nop
.L_41ddd0:

            mov ECX,EDI
            mov RAX,QWORD PTR [RDX+200]
            mov ESI,DWORD PTR [RDX+184]
            lea R14,QWORD PTR [RCX+RCX*4]
            lea ECX,DWORD PTR [RDI+1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            shl R14,2
            movzx R8D,BYTE PTR [RAX+R14*1+15]
            lea RCX,QWORD PTR [RAX+RCX*4+15]
            mov EAX,EDI
            jmp .L_41de0a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41de00:

            add RCX,20
            cmp R8B,BYTE PTR [RCX-20]
            jne .L_41de11
.L_41de0a:

            add EAX,1
            cmp ESI,EAX
            ja .L_41de00
.L_41de11:

            cmp R10D,EDI
            jbe .L_41dc3e

            mov ESI,R9D
            movzx ECX,BYTE PTR [R11+R14*1+15]
            mov R9D,EDI
            mov EDI,EAX
            jmp .L_41ddb0
.L_41de2a:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,5
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41de5d:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41de5d
.L_41de69:

            add EBP,1
            mov EBX,R8D
            mov R12D,R8D
            cmp EBP,16
            jne .L_41dbd0
.L_41de7b:

            mov EBP,1
            jmp .L_41dbd0
.L_41de85:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,7
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41deb8:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41deb8

            jmp .L_41de69
.L_41dec6:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,6
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41def9:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41def9

            jmp .L_41de69
.L_41df0a:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,3
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41df41:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41df41

            jmp .L_41de69
.L_41df52:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,4
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41df89:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41df89

            jmp .L_41de69
.L_41df9a:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,1
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41dfd1:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41dfd1

            jmp .L_41de69
.L_41dfe2:

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_41e021

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            or R9D,2
            lea R8,QWORD PTR [RBX+R8*4]
.L_41e015:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp RAX,R8
            jne .L_41e015
.L_41e021:

            add EBP,1
            mov R8D,R12D
            mov EBX,R12D
            cmp EBP,16
            jne .L_41dbd0

            jmp .L_41de7b
.L_41e038:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R10D,2
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41e06f:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp R9,RAX
            jne .L_41e06f

            jmp .L_41de69
.L_41e080:

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_41e021

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R8,QWORD PTR [RBX+R8*4]
.L_41e0af:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp RAX,R8
            jne .L_41e0af

            jmp .L_41e021
.L_41e0c0:

            cmp R8D,EBX
            jbe .L_41de69

            lea R9D,DWORD PTR [R8-1]
            mov R12D,EBX
            mov R10D,EBP
            lea RAX,QWORD PTR [R12+R12*4]
            shl R10D,4
            sub R9D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R9,R12
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R9,QWORD PTR [R9+R9*4]
            lea R9,QWORD PTR [RBX+R9*4]
.L_41e0f3:

            mov BYTE PTR [RAX],R10B
            add RAX,20
            cmp RAX,R9
            jne .L_41e0f3

            jmp .L_41de69
.L_41e104:

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_41e021

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            or R9D,6
            lea R8,QWORD PTR [RBX+R8*4]
.L_41e13b:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp R8,RAX
            jne .L_41e13b

            jmp .L_41e021
.L_41e14c:

            lea R12D,DWORD PTR [R8+1]
            cmp R12D,EBX
            jbe .L_41e021

            mov R10D,EBX
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            add R8,R10
            lea RAX,QWORD PTR [R10+R10*4]
            mov R9D,EBP
            lea R8,QWORD PTR [R8+R8*4]
            shl R9D,4
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            or R9D,7
            lea R8,QWORD PTR [RBX+R8*4]
.L_41e183:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp R8,RAX
            jne .L_41e183

            jmp .L_41e021
.L_41e194:

            add R8D,1
            mov R12D,R8D
            jmp .L_41dbd0
.L_41e1a0:

            cmp R12D,EBX
            jbe .L_41e021

            lea R8D,DWORD PTR [R12-1]
            mov R10D,EBX
            mov R9D,EBP
            lea RAX,QWORD PTR [R10+R10*4]
            shl R9D,4
            sub R8D,EBX
            mov RBX,QWORD PTR [RSP+8]
            or R9D,6
            add R8,R10
            lea RAX,QWORD PTR [RSI+RAX*4+15]
            lea R8,QWORD PTR [R8+R8*4]
            lea R8,QWORD PTR [RBX+R8*4]
.L_41e1d8:

            mov BYTE PTR [RAX],R9B
            add RAX,20
            cmp R8,RAX
            jne .L_41e1d8

            jmp .L_41e021
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e1f0:

            mov EBP,4
            jmp .L_41ddd0
.L_41e1fa:

            cmp EBP,3
            je .L_41e250

            test EBP,EBP
            je .L_41e250

            xor EBP,EBP
.L_41e205:

            cmp EDI,R9D
            jbe .L_41ddd0

            lea ECX,DWORD PTR [RDI-1]
            mov ESI,R9D
            movsxd RAX,EBP
            mov R8D,DWORD PTR [RSP+RAX*4+16]
            lea RAX,QWORD PTR [RSI+RSI*4]
            sub ECX,R9D
            add RCX,RSI
            lea RAX,QWORD PTR [R11+RAX*4+4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [R13+RCX*4]
            nop
            nop
            nop
            nop
.L_41e238:

            mov ECX,DWORD PTR [RAX]
            add RAX,20
            and ECX,EBX
            or ECX,R8D
            mov DWORD PTR [RAX-20],ECX
            cmp RAX,RSI
            jne .L_41e238

            jmp .L_41ddd0
.L_41e250:

            xor EAX,EAX
            cmp EBP,3
            sete AL
            add EAX,1
            cmp ESI,R9D
            jae .L_41e298

            lea ECX,DWORD PTR [R9-1]
            mov EBP,ESI
            cdqe 
            mov R8D,DWORD PTR [RSP+RAX*4+16]
            lea RAX,QWORD PTR [RBP+RBP*4]
            sub ECX,ESI
            add RCX,RBP
            lea RAX,QWORD PTR [R11+RAX*4+4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RSI,QWORD PTR [R13+RCX*4]
.L_41e285:

            mov ECX,DWORD PTR [RAX]
            add RAX,20
            and ECX,EBX
            or ECX,R8D
            mov DWORD PTR [RAX-20],ECX
            cmp RSI,RAX
            jne .L_41e285
.L_41e298:

            mov EBP,3
            jmp .L_41e205
.L_41e2a2:

            lea RAX,QWORD PTR [RIP+.L_447ea0]
            movsx EAX,WORD PTR [RAX+R13*2]
            test AX,AX
            jle .L_41da4c

            sub EAX,1
            jmp .L_41dbaa
.L_41e2bf:

            call __stack_chk_fail@PLT
.L_41e2c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e2d0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RCX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
.L_41e2e5:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,QWORD PTR [RAX+208]
            mov RDI,RAX
            call QWORD PTR [RAX+144]

            mov ECX,7168
            xor EDX,EDX
            bt ECX,EAX
            jb .L_41e337

            test EBX,EBX
            mov RAX,QWORD PTR [RBP+24]
            mov DWORD PTR [R12],0
            je .L_41e348

            test R13D,R13D
            je .L_41e348

            mov EDX,R13D
            mov R8,QWORD PTR [RAX+232]
            mov RCX,R12
            mov ESI,EBX
            mov RDI,RAX
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne DL
.L_41e337:

            add RSP,8
.L_41e33b:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e348:

            add RSP,8
            xor EDX,EDX
            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41e357:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e360:

            push R15
            push R14
            mov RDI,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_41e371:

            mov R15D,DWORD PTR [RDX+184]
            mov RSI,QWORD PTR [RDX+200]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            test R15D,R15D
            mov QWORD PTR [RSP+32],RSI
            je .L_41e62c

            movzx EAX,BYTE PTR [RSI+15]
            mov R9,RDX
            mov BYTE PTR [RSP+8],AL
            and EAX,15
            cmp AL,6
            je .L_41e650

            lea EDX,DWORD PTR [R15-1]
            lea RAX,QWORD PTR [RSI+35]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RCX,QWORD PTR [RAX+RDX*4]
            jmp .L_41e3db
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e3c8:

            movzx EDX,BYTE PTR [RAX]
            add RAX,20
            and EDX,15
            cmp DL,6
            je .L_41e650
.L_41e3db:

            cmp RCX,RAX
            jne .L_41e3c8
.L_41e3e0:

            test R15D,R15D
            je .L_41e62c

            mov RAX,QWORD PTR [RSP+32]
            xor R12D,R12D
            movzx ECX,BYTE PTR [RAX+15]
            add RAX,35
            mov QWORD PTR [RSP+40],RAX
            jmp .L_41e409
.L_41e400:

            add RAX,20
            cmp CL,BYTE PTR [RAX-20]
            jne .L_41e412
.L_41e409:

            add R12D,1
            cmp R12D,R15D
            jne .L_41e400
.L_41e412:

            mov R8,QWORD PTR [RSP+32]
            xor EBX,EBX
            mov R10D,1
            mov DWORD PTR [RSP+24],R15D
            mov R14,R9
            mov R13,R8
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e430:

            mov EAX,EBX
            and ECX,15
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RBP,QWORD PTR [R13+RAX*4]
            mov EAX,70
            bt EAX,ECX
            jae .L_41e4a2

            cmp BYTE PTR [RBP+18],18
            je .L_41e510
.L_41e452:

            cmp R12D,EBX
            mov R15D,R12D
            jbe .L_41e49b

            mov QWORD PTR [RSP+8],R14
            mov R14,R13
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e468:

            movzx ECX,BYTE PTR [RBP+18]
            lea R13D,DWORD PTR [RBX+1]
            cmp CL,31
            ja .L_41e48a

            mov EAX,R10D
            shl EAX,CL
            test AL,34
            je .L_41e949

            cmp CL,12
            mov R15D,EBX
            je .L_41e500
.L_41e48a:

            add RBP,20
            cmp R12D,R13D
            mov EBX,R13D
            jne .L_41e468

            mov R14,QWORD PTR [RSP+8]
.L_41e49b:

            mov R13,QWORD PTR [R14+200]
.L_41e4a2:

            mov EAX,R12D
            mov ESI,DWORD PTR [R14+184]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx ECX,BYTE PTR [R13+RAX*4+15]
            lea EAX,DWORD PTR [R12+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R13+RAX*4+15]
            mov EAX,R12D
            jmp .L_41e4d9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e4d0:

            add RDX,20
            cmp CL,BYTE PTR [RDX-20]
            jne .L_41e4e0
.L_41e4d9:

            add EAX,1
            cmp ESI,EAX
            ja .L_41e4d0
.L_41e4e0:

            cmp R12D,DWORD PTR [RSP+24]
            mov EBX,R12D
            jae .L_41e600

            mov R12D,EAX
            jmp .L_41e430
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e500:

            test BYTE PTR [RBP+12],32
            cmove R15D,R13D
            jmp .L_41e48a

            nop
            nop
            nop
            nop
            nop
            nop
.L_41e510:

            mov EAX,R12D
            sub EAX,EBX
            cmp EAX,1
            jbe .L_41e452

            lea R15D,DWORD PTR [RBX+1]
            cmp R15D,R12D
            jae .L_41e452

            mov EAX,R15D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R13+RAX*4]
            mov RAX,R8
            jmp .L_41e551
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e540:

            add R15D,1
            add RAX,20
            cmp R15D,R12D
            jae .L_41e452
.L_41e551:

            movzx EDX,BYTE PTR [RAX+18]
            cmp DL,31
            ja .L_41e540

            mov EDI,34
            bt EDI,EDX
            jb .L_41e92c

            cmp DL,12
            jne .L_41e540

            test BYTE PTR [RAX+12],32
            jne .L_41e540
.L_41e573:

            sub R15D,1
.L_41e577:

            lea EDX,DWORD PTR [R15+1]
            mov EAX,EDX
            sub EAX,EBX
            cmp EAX,1
            jbe .L_41e5a2

            mov ESI,EBX
            mov RDI,R14
            mov DWORD PTR [RSP+16],R10D
            mov QWORD PTR [RSP+8],R8
            call .L_402ee0

            mov R10D,DWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
.L_41e5a2:

            movdqu XMM0,XMMWORD PTR [RBP]
            mov RSI,R8
            mov RDI,RBP
            mov DWORD PTR [RSP+8],R10D
            movaps XMMWORD PTR [RSP+80],XMM0
            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [RSP+96],EAX
            mov EAX,R15D
            sub EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            call memmove@PLT

            mov ECX,R15D
            movdqa XMM0,XMMWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+RCX*4]
            mov R10D,DWORD PTR [RSP+8]
            lea RAX,QWORD PTR [R13+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RSP+96]
            mov DWORD PTR [RAX+16],EDX
            jmp .L_41e452
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e600:

            test ESI,ESI
            je .L_41e62c

            lea EDX,DWORD PTR [RSI-1]
            mov RDI,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RDX+RDX*4]
            add RAX,15
            lea RDX,QWORD PTR [RDI+RDX*4]
            nop
            nop
            nop
.L_41e620:

            mov BYTE PTR [RAX],0
            add RAX,20
            cmp RDX,RAX
            jne .L_41e620
.L_41e62c:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e944

            add RSP,120
.L_41e644:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41e650:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDI+152]
            mov QWORD PTR [RSP+8],R9
            mov DWORD PTR [RSP+64],0
            lea RCX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RDI+160]
            mov EDX,9676
            movaps XMMWORD PTR [RSP+48],XMM0
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_41e6ac
.L_41e694:

            mov RAX,QWORD PTR [R9+200]
            mov R15D,DWORD PTR [R9+184]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41e3e0
.L_41e6ac:

            mov EDI,9676
            mov QWORD PTR [RSP+8],R9
            lea RBP,QWORD PTR [RSP+80]
            call .L_41ea20

            mov R9,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+66],AL
            xor R12D,R12D
            mov RDI,R9
            call .L_402730

            mov R9,QWORD PTR [RSP+8]
            xor EAX,EAX
            mov R8D,DWORD PTR [R9+184]
            mov DWORD PTR [R9+180],0
            mov RBX,R9
.L_41e6f0:

            cmp EAX,R8D
            jae .L_41e8aa

            cmp BYTE PTR [RBX+176],0
            jne .L_41e8aa

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RSI,QWORD PTR [RDX+RDX*4]
            lea RSI,QWORD PTR [RCX+RSI*4]
            movzx R14D,BYTE PTR [RSI+15]
            mov EDI,R14D
            mov R13D,R14D
            and EDI,15
            cmp DIL,6
            jne .L_41e84f

            cmp R14D,R12D
            je .L_41e84f

            mov EDI,DWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RDX+RDX*4]
            movdqa XMM0,XMMWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov DWORD PTR [RSP+96],EDI
            mov EDI,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+88],EDI
            mov EDI,DWORD PTR [RSI+4]
            mov DWORD PTR [RSP+84],EDI
            movzx ESI,BYTE PTR [RSI+15]
            mov BYTE PTR [RSP+95],SIL
            cmp R13B,BYTE PTR [RDX+15]
            jne .L_41e82f
.L_41e774:

            cmp BYTE PTR [RDX+18],18
            jne .L_41e82f

            cmp BYTE PTR [RBX+177],0
            je .L_41e7f4

            cmp RCX,QWORD PTR [RBX+208]
            je .L_41e8c1
.L_41e794:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_41e921

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBX+188]
.L_41e7eb:

            add EAX,1
            mov DWORD PTR [RBX+188],EAX
.L_41e7f4:

            mov EAX,DWORD PTR [RBX+180]
            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_41e803:

            cmp EAX,DWORD PTR [RBX+184]
            jae .L_41e82f

            cmp BYTE PTR [RBX+176],0
            jne .L_41e82f

            mov RCX,QWORD PTR [RBX+200]
            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            cmp R13B,BYTE PTR [RDX+15]
            je .L_41e774
.L_41e82f:

            mov RSI,RBP
            mov RDI,RBX
            mov R12D,R14D
            call .L_4029f0

            mov EAX,DWORD PTR [RBX+180]
            mov R8D,DWORD PTR [RBX+184]
            jmp .L_41e6f0
.L_41e84f:

            cmp BYTE PTR [RBX+177],0
            je .L_41e89c

            cmp RCX,QWORD PTR [RBX+208]
            je .L_41e889
.L_41e861:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_41e8d2

            mov EAX,DWORD PTR [RBX+180]
            mov R8D,DWORD PTR [RBX+184]
            jmp .L_41e6f0
.L_41e889:

            cmp DWORD PTR [RBX+188],EAX
            jne .L_41e861

            mov EDX,EAX
.L_41e893:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
.L_41e89c:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
            jmp .L_41e6f0
.L_41e8aa:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RBX
            call .L_4027c0

            mov R9,QWORD PTR [RSP+8]
            jmp .L_41e694
.L_41e8c1:

            cmp EAX,DWORD PTR [RBX+188]
            jne .L_41e794

            jmp .L_41e7eb
.L_41e8d2:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov R8D,DWORD PTR [RBX+184]
            jmp .L_41e893
.L_41e921:

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_41e803
.L_41e92c:

            cmp DL,12
            jne .L_41e577

            test BYTE PTR [RAX+12],32
            jne .L_41e577

            jmp .L_41e573
.L_41e944:

            call __stack_chk_fail@PLT
.L_41e949:

            cmp CL,12
            je .L_41ea05

            nop
            nop
            nop
            nop
            nop
            nop
.L_41e958:

            test EAX,12582912
            je .L_41e48a

            movzx EAX,BYTE PTR [RBP+14]
            test AL,16
            jne .L_41e973

            test AL,15
            jne .L_41e48a
.L_41e973:

            cmp R15D,EBX
            jae .L_41e48a

            mov EAX,R13D
            sub EAX,R15D
            cmp EAX,1
            jbe .L_41e9a1

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,R13D
            mov ESI,R15D
            mov DWORD PTR [RSP+16],R10D
            call .L_402ee0

            mov R10D,DWORD PTR [RSP+16]
.L_41e9a1:

            movdqu XMM0,XMMWORD PTR [RBP]
            sub EBX,R15D
            lea RDX,QWORD PTR [RBX+RBX*4]
            mov DWORD PTR [RSP+28],R10D
            movaps XMMWORD PTR [RSP+80],XMM0
            mov EAX,DWORD PTR [RBP+16]
            shl RDX,2
            mov DWORD PTR [RSP+96],EAX
            mov EAX,R15D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [R14+RAX*4]
            lea EAX,DWORD PTR [R15+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RSI,RCX
            mov QWORD PTR [RSP+16],RCX
            lea RDI,QWORD PTR [R14+RAX*4]
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+28]
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RCX],XMM0
            mov EAX,DWORD PTR [RSP+96]
            mov DWORD PTR [RCX+16],EAX
            jmp .L_41e48a
.L_41ea05:

            test BYTE PTR [RBP+12],32
            jne .L_41e958

            mov R15D,R13D
            jmp .L_41e48a
.L_41ea17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ea20:

            mov EAX,EDI
            shr EAX,12
            cmp EAX,17
            ja .L_41ec20

            lea RDX,QWORD PTR [RIP+.L_448640]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_41ea40:

            lea EAX,DWORD PTR [RDI-69632]
            cmp EAX,191
            jbe .L_41ec58

            lea EAX,DWORD PTR [RDI-69888]
            cmp EAX,319
            jbe .L_41ecd0

            lea EAX,DWORD PTR [RDI-70272]
            cmp EAX,247
            jbe .L_41ece8

            lea EAX,DWORD PTR [RDI-70656]
            cmp EAX,223
            jbe .L_41ed3c

            lea EAX,DWORD PTR [RDI-71040]
            cmp EAX,447
            jbe .L_41ed60

            lea EDX,DWORD PTR [RDI-72704]
            xor EAX,EAX
            cmp EDX,183
            ja .L_41ec22

            lea EAX,DWORD PTR [RDI-67744]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41eac0:

            lea EAX,DWORD PTR [RDI-40]
            cmp EAX,23
            jbe .L_41ec2e

            lea EAX,DWORD PTR [RDI-160]
            cmp EAX,55
            jbe .L_41ec28

            lea EAX,DWORD PTR [RDI-2304]
            cmp EAX,1271
            jbe .L_41ed00

            cmp EDI,847
            mov EDX,6
            mov EAX,0
            cmove EAX,EDX
            ret 
.L_41eb00:

            lea EAX,DWORD PTR [RDI-4096]
            cmp EAX,159
            jbe .L_41ec40

            lea EAX,DWORD PTR [RDI-5888]
            cmp EAX,239
            jbe .L_41ecb8

            lea EAX,DWORD PTR [RDI-6400]
            cmp EAX,415
            jbe .L_41ed18

            lea EAX,DWORD PTR [RDI-6912]
            cmp EAX,335
            jbe .L_41ed2a

            lea EAX,DWORD PTR [RDI-7376]
            cmp EAX,47
            jbe .L_41ed4e

            lea EDX,DWORD PTR [RDI-7672]
            xor EAX,EAX
            cmp EDX,7
            ja .L_41ec22

            lea EAX,DWORD PTR [RDI-5120]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eb80:

            lea EAX,DWORD PTR [RDI-8200]
            cmp EAX,15
            jbe .L_41ec70

            lea EAX,DWORD PTR [RDI-8288]
            cmp EAX,39
            jbe .L_41eca0

            cmp EDI,9676
            sete AL
            lea EAX,DWORD PTR [RAX+RAX*4]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ebb0:

            lea EDX,DWORD PTR [RDI-65024]
            xor EAX,EAX
            cmp EDX,15
            ja .L_41ec22

            lea EAX,DWORD PTR [RDI-61584]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x90
.L_41ebd0:

            lea EAX,DWORD PTR [RDI-43008]
            cmp EAX,759
            jbe .L_41ec88

            lea EDX,DWORD PTR [RDI-43968]
            xor EAX,EAX
            cmp EDX,63
            ja .L_41ec22

            lea EAX,DWORD PTR [RDI-40592]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_41ec00:

            lea EDX,DWORD PTR [RDI-68096]
            xor EAX,EAX
            cmp EDX,71
            ja .L_41ec22

            lea EAX,DWORD PTR [RDI-64640]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x90
.L_41ec20:

            xor EAX,EAX
.L_41ec22:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ec28:

            lea EAX,DWORD PTR [RDI-136]
.L_41ec2e:

            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ec40:

            lea EAX,DWORD PTR [RDI-2744]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ec58:

            lea EAX,DWORD PTR [RDI-66104]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ec70:

            lea EAX,DWORD PTR [RDI-5640]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ec88:

            lea EAX,DWORD PTR [RDI-40392]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41eca0:

            lea EAX,DWORD PTR [RDI-5712]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ecb8:

            lea EAX,DWORD PTR [RDI-4376]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ecd0:

            lea EAX,DWORD PTR [RDI-66168]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ece8:

            lea EAX,DWORD PTR [RDI-66232]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ed00:

            lea EAX,DWORD PTR [RDI-2224]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ed18:

            lea EAX,DWORD PTR [RDI-4648]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_41ed2a:

            lea EAX,DWORD PTR [RDI-4744]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_41ed3c:

            lea EAX,DWORD PTR [RDI-66368]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_41ed4e:

            lea EAX,DWORD PTR [RDI-4872]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_41ed60:

            lea EAX,DWORD PTR [RDI-66528]
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            ret 
.L_41ed72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ed80:

            sub RSP,8
            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RDX],ESI
            mov DWORD PTR [RCX],0
            mov RDI,RAX
            mov R8,QWORD PTR [RAX+240]
            call QWORD PTR [RAX+176]

            test EAX,EAX
            setne AL
            add RSP,8
            ret 
.L_41edaa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41edb0:

            movzx ECX,WORD PTR [RDI+16]
            mov EAX,7168
            mov EDX,EAX
            shr EDX,CL
            movzx ECX,CH
            and EDX,1
            cmovne EDX,ECX
            movzx ECX,WORD PTR [RSI+16]
            shr EAX,CL
            and EAX,1
            je .L_41edd8

            movzx EAX,CH
            cmp EAX,EDX
            ja .L_41ede8
.L_41edd8:

            cmp EDX,EAX
            setne AL
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ede8:

            mov EAX,4294967295
            ret 
.L_41edee:

            nop
            nop
.L_41edf0:

            test ESI,ESI
            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RCX],0
            je .L_41ee20

            test EDX,EDX
            je .L_41ee20

            sub RSP,8
            mov RDI,RAX
            mov R8,QWORD PTR [RAX+232]
            call QWORD PTR [RAX+168]

            test EAX,EAX
            setne AL
            add RSP,8
            ret 
.L_41ee20:

            xor EAX,EAX
            ret 
.L_41ee23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ee30:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41ee38:

            mov EAX,DWORD PTR [RDI+180]
            mov RBX,RDI
            mov RCX,QWORD PTR [RDI+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_41ee74

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_41ee74:

            mov R13,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R13+208]
            mov ESI,EBP
            mov RDI,R13
            call QWORD PTR [R13+144]

            cmp EBP,127
            mov R12D,EAX
            jbe .L_41ef38

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            jne .L_41ef50

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_41f0c0

            jbe .L_41efa8

            cmp EDX,32
            je .L_41ef78

            jbe .L_41f060

            cmp EDX,254
            je .L_41f080

            cmp EDX,255
            jne .L_41efc8

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ef08:

            test EDX,EDX
            je .L_41efc8
.L_41ef10:

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_41f128
.L_41ef25:

            cmp EBP,8205
            jne .L_41f100

            or R12D,288
.L_41ef38:

            mov WORD PTR [R14+16],R12W
            pop RBX
.L_41ef3e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ef50:

            cmp EDX,1
            je .L_41f0d8

            cmp EDX,14
            jne .L_41efc8

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_41ef08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ef78:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_41ef10

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_41ef10

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_41ef08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41efa8:

            cmp EDX,3
            je .L_41f0b0

            cmp EDX,6
            je .L_41f0a0

            test EDX,EDX
            je .L_41f050

            nop
            nop
            nop
            nop
            nop
            nop
.L_41efc8:

            mov EAX,16782336
            bt EAX,R12D
            jae .L_41ef38

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_41f138

            cmp ESI,6752
            je .L_41f118

            cmp ESI,4038
            je .L_41f118

            cmp ESI,3897
            mov EAX,32512
            je .L_41f02c
.L_41f00b:

            mov RDX,QWORD PTR [R13+192]
            mov RDI,R13
            call QWORD PTR [R13+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
.L_41f02c:

            sub EBP,127995
            or EAX,R12D
            mov R12D,11
            cmp EBP,4
            cmova R12D,EAX
            jmp .L_41ef38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f050:

            xor EDX,EDX
            cmp EBP,173
            sete DL
            jmp .L_41ef08
.L_41f060:

            cmp EDX,24
            jne .L_41efc8

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_41ef08
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f080:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_41ef08
          .byte 0x90
.L_41f0a0:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_41ef08
.L_41f0b0:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_41ef08
.L_41f0c0:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_41ef08
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f0d8:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_41f142

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_41ef08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f100:

            sub EBP,6155
            cmp EBP,2
            ja .L_41f150

            or R12D,96
            jmp .L_41ef38
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f118:

            mov EAX,65024
            jmp .L_41f02c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f128:

            or R12D,544
            jmp .L_41ef38
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f138:

            mov ESI,4154
            jmp .L_41f00b
.L_41f142:

            or EAX,3
            mov DWORD PTR [RBX+132],EAX
            jmp .L_41ef25
.L_41f150:

            or R12D,32
            jmp .L_41ef38
.L_41f159:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f160:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov ESI,EDX
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_41f176:

            mov RBX,QWORD PTR [RDI+8]
            mov R12,QWORD PTR [RDI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RCX,QWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RSP+24]
            call QWORD PTR [RDI+32]

            test AL,AL
            je .L_41f2c0

            mov EDX,DWORD PTR [RSP+28]
            mov R13D,EAX
            mov RAX,QWORD PTR [R12+152]
            mov RSI,QWORD PTR [R12+160]
            test EDX,EDX
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jne .L_41f2f0
.L_41f1d0:

            mov RDI,R12
            mov DWORD PTR [RSP+32],0
            lea RCX,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+24]
            call R9

            test EAX,EAX
            mov R12D,EAX
            je .L_41f670

            test R14B,R14B
            je .L_41f670

            mov EAX,DWORD PTR [RBX+180]
            mov R9,QWORD PTR [RBX+200]
            mov RDI,RBX
            mov EDX,DWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBX+188]
            mov R13,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_41f240

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R13,QWORD PTR [R13+RAX*4]
.L_41f240:

            mov R14,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R13]
            mov RDX,QWORD PTR [R14+208]
            mov ESI,EBP
            mov RDI,R14
            call QWORD PTR [R14+144]

            cmp EBP,127
            mov R12D,EAX
            jbe .L_41f390

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_41f5d0

            cmp EDX,1
            je .L_41fd10

            cmp EDX,14
            jne .L_41f4d0

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_41f358
          .byte 0x66
          .byte 0x90
.L_41f2b0:

            test R12D,R12D
            jne .L_41f7a8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f2c0:

            xor EBP,EBP
.L_41f2c2:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_420119

            add RSP,56
.L_41f2dc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f2f0:

            mov DWORD PTR [RSP+36],0
            lea RCX,QWORD PTR [RSP+36]
            mov RDI,R12
            call R9

            test EAX,EAX
            je .L_41f2c0

            mov RAX,QWORD PTR [R12+152]
            mov RSI,QWORD PTR [R12+160]
            mov R9,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            jmp .L_41f1d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f330:

            cmp EDX,3
            je .L_41f9b0

            cmp EDX,6
            je .L_41fa40

            test EDX,EDX
            jne .L_41f4d0

            xor EDX,EDX
            cmp EBP,173
            sete DL
            nop
            nop
            nop
.L_41f358:

            test EDX,EDX
            je .L_41f4d0
.L_41f360:

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_41fd00
.L_41f375:

            cmp EBP,8205
            jne .L_41fd33

            or R12D,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f390:

            mov ESI,DWORD PTR [RSP+28]
            mov WORD PTR [R13+16],R12W
            test ESI,ESI
            je .L_41f4c0

            mov EAX,DWORD PTR [RBX+180]
            mov R8,QWORD PTR [RBX+200]
            mov RDI,RBX
            mov EDX,DWORD PTR [RSP+36]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_41f3e1

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_41f3e1:

            mov R13,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R13+208]
            mov ESI,EBP
            mov RDI,R13
            call QWORD PTR [R13+144]

            cmp EBP,127
            mov R12D,EAX
            jbe .L_41f4b0

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_41f620

            cmp EDX,1
            je .L_41fd70

            cmp EDX,14
            jne .L_41f550

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_41f478
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f450:

            cmp EDX,3
            je .L_41f9c0

            cmp EDX,6
            je .L_41faa0

            test EDX,EDX
            jne .L_41f550

            xor EDX,EDX
            cmp EBP,173
            sete DL
            nop
            nop
            nop
.L_41f478:

            test EDX,EDX
            je .L_41f550
.L_41f480:

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_41fd50
.L_41f495:

            cmp EBP,8205
            jne .L_41fd93

            or R12D,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f4b0:

            mov WORD PTR [R14+16],R12W
            mov EBP,2
            jmp .L_41f2c2
          .byte 0x90
.L_41f4c0:

            mov EBP,1
            jmp .L_41f2c2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f4d0:

            mov EAX,16782336
            bt EAX,R12D
            jae .L_41f390

            mov ESI,DWORD PTR [R13]
            cmp ESI,4151
            je .L_41fd5c

            cmp ESI,6752
            je .L_41fceb

            cmp ESI,4038
            je .L_41fceb

            cmp ESI,3897
            mov EAX,32512
            je .L_41f535
.L_41f514:

            mov RDX,QWORD PTR [R14+192]
            mov RDI,R14
            call QWORD PTR [R14+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
.L_41f535:

            sub EBP,127995
            or R12D,EAX
            mov EAX,11
            cmp EBP,4
            cmovbe R12D,EAX
            jmp .L_41f390
          .byte 0x90
.L_41f550:

            mov EAX,16782336
            bt EAX,R12D
            jae .L_41f4b0

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_41fdab

            cmp ESI,6752
            je .L_41fcf5

            cmp ESI,4038
            je .L_41fcf5

            cmp ESI,3897
            mov EAX,32512
            je .L_41f5b4
.L_41f593:

            mov RDX,QWORD PTR [R13+192]
            mov RDI,R13
            call QWORD PTR [R13+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            shl EAX,8
.L_41f5b4:

            sub EBP,127995
            or EAX,R12D
            mov R12D,11
            cmp EBP,4
            cmova R12D,EAX
            jmp .L_41f4b0
          .byte 0x90
.L_41f5d0:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_41fa28

            jbe .L_41f330

            cmp EDX,32
            je .L_41f9f0

            jbe .L_41f788

            cmp EDX,254
            je .L_41f9d0

            cmp EDX,255
            jne .L_41f4d0

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_41f358
          .byte 0x90
.L_41f620:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_41fa88

            jbe .L_41f450

            cmp EDX,32
            je .L_41fa50

            jbe .L_41f990

            cmp EDX,254
            je .L_41fab0

            cmp EDX,255
            jne .L_41f550

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_41f478
          .byte 0x90
.L_41f670:

            mov EDX,DWORD PTR [RSP+24]
            mov RDI,RBP
            movzx ESI,R14B
            call .L_41f160

            test EAX,EAX
            mov EBP,EAX
            je .L_41f2b0

            mov ESI,DWORD PTR [RSP+28]
            test ESI,ESI
            je .L_41f2c2

            mov EAX,DWORD PTR [RBX+180]
            mov RDI,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RSP+36]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov RDI,RBX
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBX+188]
            mov R15,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_41f6d6

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [R15+RAX*4]
.L_41f6d6:

            mov R14,QWORD PTR [RBX+112]
            mov R12D,DWORD PTR [R15]
            mov RDX,QWORD PTR [R14+208]
            mov ESI,R12D
            mov RDI,R14
            call QWORD PTR [R14+144]

            cmp R12D,127
            mov ECX,EAX
            jbe .L_41f778

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            je .L_41fc48

            cmp EDX,1
            je .L_42019d

            cmp EDX,14
            jne .L_41fbe0

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe R13B
.L_41f73c:

            movzx R13D,R13B
.L_41f740:

            test R13D,R13D
            je .L_41fbe0

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_420192

            cmp R12D,8205
            jne .L_4201d6

            or ECX,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f778:

            mov WORD PTR [R15+16],CX
            add EBP,1
            jmp .L_41f2c2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f788:

            cmp EDX,24
            jne .L_41f4d0

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_41f358
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f7a8:

            mov EAX,DWORD PTR [RBX+180]
            mov RCX,QWORD PTR [RBX+200]
            mov RDI,RBX
            mov EDX,DWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_41f7ec

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_41f7ec:

            mov R12,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R12+208]
            mov ESI,EBP
            mov RDI,R12
            call QWORD PTR [R12+144]

            cmp EBP,127
            mov R15D,EAX
            jbe .L_41f888

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_41fb30

            cmp EDX,1
            je .L_42016f

            cmp EDX,14
            jne .L_41facf

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe DL
.L_41f84f:

            movzx EDX,DL
.L_41f852:

            test EDX,EDX
            je .L_41facf

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_420163

            cmp EBP,8205
            jne .L_42011e

            or R15D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f888:

            mov ESI,DWORD PTR [RSP+28]
            mov WORD PTR [R14+16],R15W
            test ESI,ESI
            je .L_41f4c0

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            mov RDI,RBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RSP+36]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBX+188]
            mov R14,QWORD PTR [RBX+208]
            test EAX,EAX
            je .L_41f8d9

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R14,QWORD PTR [R14+RAX*4]
.L_41f8d9:

            mov R12,QWORD PTR [RBX+112]
            mov EBP,DWORD PTR [R14]
            mov RDX,QWORD PTR [R12+208]
            mov ESI,EBP
            mov RDI,R12
            call QWORD PTR [R12+144]

            cmp EBP,127
            mov R15D,EAX
            jbe .L_41f978

            mov EAX,DWORD PTR [RBX+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBX+132],EDX
            mov EDX,EBP
            shr EDX,16
            test EDX,EDX
            je .L_41fc9b

            cmp EDX,1
            je .L_420142

            cmp EDX,14
            jne .L_41fb7f

            lea EDX,DWORD PTR [RBP-917504]
            cmp EDX,4095
            setbe R13B
.L_41f93d:

            movzx R13D,R13B
.L_41f941:

            test R13D,R13D
            je .L_41fb7f

            or EAX,3
            cmp EBP,8204
            mov DWORD PTR [RBX+132],EAX
            je .L_420136

            cmp EBP,8205
            jne .L_4201c2

            or R15D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f978:

            mov WORD PTR [R14+16],R15W
            mov EBP,2
            jmp .L_41f2c2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f990:

            cmp EDX,24
            jne .L_41f550

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_41f478
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f9b0:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_41f358
.L_41f9c0:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_41f478
.L_41f9d0:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_41f358
          .byte 0x90
.L_41f9f0:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_41f360

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_41f360

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_41f358
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fa28:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_41f358
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fa40:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_41f358
.L_41fa50:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_41f480

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_41f480

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_41f478
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fa88:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_41f478
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41faa0:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_41f478
.L_41fab0:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_41f478
.L_41facf:

            mov EAX,16782336
            bt EAX,R15D
            jae .L_41f888

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_420057

            cmp ESI,4038
            je .L_4200db

            cmp ESI,6752
            je .L_4200db

            cmp ESI,3897
            mov EAX,127
            jne .L_42005c
.L_41fb16:

            sub EBP,127995
            cmp EBP,4
            jbe .L_4200ef

            shl EAX,8
            or R15D,EAX
            jmp .L_41f888
.L_41fb30:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_41ff20

            jbe .L_41fdb5

            cmp EDX,32
            je .L_41fece

            jbe .L_41fe54

            cmp EDX,254
            je .L_41feaf

            cmp EDX,255
            jne .L_41facf

            lea EDX,DWORD PTR [RBP-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_41f852
.L_41fb7f:

            mov EAX,16782336
            bt EAX,R15D
            jae .L_41f978

            mov ESI,DWORD PTR [R14]
            cmp ESI,4151
            je .L_420081

            cmp ESI,6752
            je .L_42010f

            cmp ESI,4038
            je .L_42010f

            cmp ESI,3897
            mov EAX,127
            jne .L_420086
.L_41fbc6:

            sub EBP,127995
            cmp EBP,4
            jbe .L_420104

            shl EAX,8
            or R15D,EAX
            jmp .L_41f978
.L_41fbe0:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_41f778

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_4200ab

            cmp ESI,4038
            je .L_4200e5

            cmp ESI,6752
            je .L_4200e5

            cmp ESI,3897
            mov EAX,127
            jne .L_4200b0
.L_41fc26:

            sub R12D,127995
            cmp R12D,4
            jbe .L_4200fa

            shl EAX,8
            or ECX,EAX
            jmp .L_41f778
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fc48:

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_42001a

            jbe .L_41fe0b

            cmp EDX,32
            je .L_41ffaa

            jbe .L_41fe8f

            cmp EDX,254
            je .L_41ffe0

            cmp EDX,255
            jne .L_41fbe0

            lea EDX,DWORD PTR [R12-65520]
            xor R13D,R13D
            cmp EDX,8
            setbe R13B
            jmp .L_41f740
.L_41fc9b:

            mov EDX,EBP
            shr EDX,8
            cmp EDX,23
            je .L_420005

            jbe .L_41fddf

            cmp EDX,32
            je .L_41ff58

            jbe .L_41fe71

            cmp EDX,254
            je .L_41ff88

            cmp EDX,255
            jne .L_41fb7f

            lea EDX,DWORD PTR [RBP-65520]
            xor R13D,R13D
            cmp EDX,8
            setbe R13B
            jmp .L_41f941
.L_41fceb:

            mov EAX,65024
            jmp .L_41f535
.L_41fcf5:

            mov EAX,65024
            jmp .L_41f5b4
          .byte 0x90
.L_41fd00:

            or R12D,544
            jmp .L_41f390
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fd10:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_41fe38

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_41f358
.L_41fd33:

            sub EBP,6155
            cmp EBP,2
            ja .L_420206

            or R12D,96
            jmp .L_41f390
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fd50:

            or R12D,544
            jmp .L_41f4b0
.L_41fd5c:

            mov ESI,4154
            jmp .L_41f514
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fd70:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_41fe46

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_41f478
.L_41fd93:

            sub EBP,6155
            cmp EBP,2
            ja .L_4201f4

            or R12D,96
            jmp .L_41f4b0
.L_41fdab:

            mov ESI,4154
            jmp .L_41f593
.L_41fdb5:

            cmp EDX,3
            je .L_41ff10

            cmp EDX,6
            je .L_41ff00

            test EDX,EDX
            jne .L_41facf

            xor EDX,EDX
            cmp EBP,173
            sete DL
            jmp .L_41f852
.L_41fddf:

            cmp EDX,3
            je .L_41ff46

            cmp EDX,6
            je .L_41ff34

            test EDX,EDX
            jne .L_41fb7f

            xor R13D,R13D
            cmp EBP,173
            sete R13B
            jmp .L_41f941
.L_41fe0b:

            cmp EDX,3
            je .L_420044

            cmp EDX,6
            je .L_420031

            test EDX,EDX
            jne .L_41fbe0

            xor R13D,R13D
            cmp R12D,173
            sete R13B
            jmp .L_41f740
.L_41fe38:

            or EAX,3
            mov DWORD PTR [RBX+132],EAX
            jmp .L_41f375
.L_41fe46:

            or EAX,3
            mov DWORD PTR [RBX+132],EAX
            jmp .L_41f495
.L_41fe54:

            cmp EDX,24
            jne .L_41facf

            lea EDX,DWORD PTR [RBP-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_41f852
.L_41fe71:

            cmp EDX,24
            jne .L_41fb7f

            lea EDX,DWORD PTR [RBP-6155]
            xor R13D,R13D
            cmp EDX,3
            setbe R13B
            jmp .L_41f941
.L_41fe8f:

            cmp EDX,24
            jne .L_41fbe0

            lea EDX,DWORD PTR [R12-6155]
            xor R13D,R13D
            cmp EDX,3
            setbe R13B
            jmp .L_41f740
.L_41feaf:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe DL
            cmp EBP,65279
            sete CL
            or EDX,ECX
            movzx EDX,DL
            jmp .L_41f852
.L_41fece:

            lea ECX,DWORD PTR [RBP-8203]
            mov EDX,R13D
            cmp ECX,4
            jbe .L_41f84f

            lea ECX,DWORD PTR [RBP-8234]
            cmp ECX,4
            jbe .L_41f84f

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe DL
            jmp .L_41f84f
.L_41ff00:

            xor EDX,EDX
            cmp EBP,1564
            sete DL
            jmp .L_41f852
.L_41ff10:

            xor EDX,EDX
            cmp EBP,847
            sete DL
            jmp .L_41f852
.L_41ff20:

            lea EDX,DWORD PTR [RBP-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_41f852
.L_41ff34:

            xor R13D,R13D
            cmp EBP,1564
            sete R13B
            jmp .L_41f941
.L_41ff46:

            xor R13D,R13D
            cmp EBP,847
            sete R13B
            jmp .L_41f941
.L_41ff58:

            lea EDX,DWORD PTR [RBP-8203]
            cmp EDX,4
            jbe .L_41f93d

            lea EDX,DWORD PTR [RBP-8234]
            cmp EDX,4
            jbe .L_41f93d

            lea EDX,DWORD PTR [RBP-8288]
            cmp EDX,15
            setbe R13B
            jmp .L_41f93d
.L_41ff88:

            lea EDX,DWORD PTR [RBP-65024]
            cmp EDX,15
            setbe R13B
            cmp EBP,65279
            sete DL
            or R13D,EDX
            movzx R13D,R13B
            jmp .L_41f941
.L_41ffaa:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_41f73c

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_41f73c

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe R13B
            jmp .L_41f73c
.L_41ffe0:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe R13B
            cmp R12D,65279
            sete DL
            or R13D,EDX
            movzx R13D,R13B
            jmp .L_41f740
.L_420005:

            lea EDX,DWORD PTR [RBP-6068]
            xor R13D,R13D
            cmp EDX,1
            setbe R13B
            jmp .L_41f941
.L_42001a:

            lea EDX,DWORD PTR [R12-6068]
            xor R13D,R13D
            cmp EDX,1
            setbe R13B
            jmp .L_41f740
.L_420031:

            xor R13D,R13D
            cmp R12D,1564
            sete R13B
            jmp .L_41f740
.L_420044:

            xor R13D,R13D
            cmp R12D,847
            sete R13B
            jmp .L_41f740
.L_420057:

            mov ESI,4154
.L_42005c:

            mov RDX,QWORD PTR [R12+192]
            mov RDI,R12
            call QWORD PTR [R12+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_41fb16
.L_420081:

            mov ESI,4154
.L_420086:

            mov RDX,QWORD PTR [R12+192]
            mov RDI,R12
            call QWORD PTR [R12+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_41fbc6
.L_4200ab:

            mov ESI,4154
.L_4200b0:

            mov DWORD PTR [RSP+12],ECX
            mov RDX,QWORD PTR [R14+192]
            mov RDI,R14
            call QWORD PTR [R14+128]

            lea RDX,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov ECX,DWORD PTR [RSP+12]
            movzx EAX,BYTE PTR [RDX+RAX*1]
            jmp .L_41fc26
.L_4200db:

            mov EAX,254
            jmp .L_41fb16
.L_4200e5:

            mov EAX,254
            jmp .L_41fc26
.L_4200ef:

            mov R15D,11
            jmp .L_41f888
.L_4200fa:

            mov ECX,11
            jmp .L_41f778
.L_420104:

            mov R15D,11
            jmp .L_41f978
.L_42010f:

            mov EAX,254
            jmp .L_41fbc6
.L_420119:

            call __stack_chk_fail@PLT
.L_42011e:

            sub EBP,6155
            cmp EBP,2
            ja .L_4201eb

            or R15D,96
            jmp .L_41f888
.L_420136:

            or R15D,544
            jmp .L_41f978
.L_420142:

            lea EDX,DWORD PTR [RBP-113824]
            cmp EDX,3
            jbe .L_41f93d

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe R13B
            jmp .L_41f93d
.L_420163:

            or R15D,544
            jmp .L_41f888
.L_42016f:

            lea ECX,DWORD PTR [RBP-113824]
            mov EDX,R13D
            cmp ECX,3
            jbe .L_41f84f

            lea EDX,DWORD PTR [RBP-119155]
            cmp EDX,7
            setbe DL
            jmp .L_41f84f
.L_420192:

            or ECX,544
            jmp .L_41f778
.L_42019d:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_41f73c

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe R13B
            jmp .L_41f73c
.L_4201c2:

            sub EBP,6155
            cmp EBP,2
            ja .L_4201fd

            or R15D,96
            jmp .L_41f978
.L_4201d6:

            sub R12D,6155
            cmp R12D,2
            ja .L_42020f

            or ECX,96
            jmp .L_41f778
.L_4201eb:

            or R15D,32
            jmp .L_41f888
.L_4201f4:

            or R12D,32
            jmp .L_41f4b0
.L_4201fd:

            or R15D,32
            jmp .L_41f978
.L_420206:

            or R12D,32
            jmp .L_41f390
.L_42020f:

            or ECX,32
            jmp .L_41f778
.L_420217:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420220:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,200
.L_420231:

            mov R11D,DWORD PTR [RSI+184]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+56],RDX
            test R11D,R11D
            je .L_4205f5

            mov RAX,RDX
            mov RDX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RIP+.L_41ed80]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSI+112]
            mov R14,RSI
            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+136],RSI
            mov EBX,DWORD PTR [RDX+56]
            mov BYTE PTR [RSP+16],1
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RDX+64]
            mov DWORD PTR [RSP+44],EBX
            test RAX,RAX
            cmove RAX,RCX
            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RDX+72]
            lea RDX,QWORD PTR [RIP+.L_41edf0]
            test RAX,RAX
            cmove RAX,RDX
            test EBX,EBX
            mov QWORD PTR [RSP+168],RAX
            sete BYTE PTR [RSP+91]
            jne .L_420de0
.L_4202d4:

            mov RDI,R14
            call .L_402730

            mov EAX,DWORD PTR [R14+184]
            mov DWORD PTR [R14+180],0
            xor ECX,ECX
            mov DWORD PTR [RSP+8],EAX
            lea RAX,QWORD PTR [RSP+116]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+32],RAX
.L_420308:

            mov EAX,DWORD PTR [RSP+8]
            cmp EAX,ECX
            jbe .L_420532

            nop
            nop
            nop
            nop
.L_420318:

            cmp BYTE PTR [R14+176],0
            jne .L_420532

            lea R15D,DWORD PTR [RCX+1]
            cmp EAX,R15D
            jbe .L_420378

            mov RDX,QWORD PTR [R14+200]
            mov EAX,R15D
            mov ESI,7168
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [RDX+RAX*4+16]
            bt ESI,EAX
            jae .L_420378

            lea EAX,DWORD PTR [RCX+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4+16]
            mov EDX,7168
.L_42035d:

            add R15D,1
            cmp DWORD PTR [RSP+8],R15D
            jbe .L_420378

            movzx ESI,WORD PTR [RAX]
            add RAX,20
            bt EDX,ESI
            jb .L_42035d

            nop
            nop
            nop
            nop
.L_420378:

            mov RBX,QWORD PTR [RSP+136]
            mov EAX,DWORD PTR [RBX+180]
            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,R15D
            je .L_420620

            cmp EAX,R15D
            jae .L_420308

            cmp BYTE PTR [RBX+176],0
            jne .L_421468

            mov RSI,QWORD PTR [RBX+200]
            mov ECX,EAX
            lea RCX,QWORD PTR [RCX+RCX*4]
            mov ECX,DWORD PTR [RSI+RCX*4]
            lea EDI,DWORD PTR [RCX-65024]
            cmp EDI,15
            jbe .L_420408

            sub ECX,917760
            cmp ECX,239
            jbe .L_420408

            lea RCX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RSI+RCX*4]
            mov ECX,EAX
            not ECX
            add ECX,R15D
            add RDX,RCX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
.L_4203eb:

            cmp RDX,RDI
            je .L_421468

            mov ECX,DWORD PTR [RDI]
            lea ESI,DWORD PTR [RCX-65024]
            cmp ESI,15
            ja .L_423353

            nop
            nop
            nop
.L_420408:

            mov R12,QWORD PTR [RSP+144]
            lea EBP,DWORD PTR [R15-1]
.L_420414:

            cmp EAX,EBP
            jae .L_4204b7
.L_42041c:

            cmp BYTE PTR [RBX+176],0
            jne .L_4204b7

            lea ECX,DWORD PTR [RAX+1]
            mov RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov ECX,DWORD PTR [RDX+RCX*4]
            lea RDI,QWORD PTR [RAX+12]
            mov EDX,DWORD PTR [RAX]
            lea ESI,DWORD PTR [RCX-65024]
            cmp ESI,15
            jbe .L_420c20

            lea ESI,DWORD PTR [RCX-917760]
            cmp ESI,239
            jbe .L_420c20

            mov DWORD PTR [RAX+12],0
            mov RAX,QWORD PTR [R12+152]
            mov RCX,RDI
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_420da0

            mov EAX,DWORD PTR [RBX+180]
.L_4204a6:

            add EAX,1
            cmp EAX,EBP
            mov DWORD PTR [RBX+180],EAX
            jb .L_42041c
.L_4204b7:

            cmp EAX,R15D
            jae .L_42051f

            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            mov RDI,R12
            lea RCX,QWORD PTR [RAX+RDX*4]
            mov DWORD PTR [RCX+12],0
            mov RAX,QWORD PTR [R12+152]
            add RCX,12
            mov EDX,DWORD PTR [RCX-12]
            mov RSI,QWORD PTR [R12+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_420ba4

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420510:

            mov EAX,DWORD PTR [RBX+180]
.L_420516:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_42051f:

            mov ECX,DWORD PTR [R14+180]
.L_420526:

            mov EAX,DWORD PTR [RSP+8]
            cmp EAX,ECX
            ja .L_420318
.L_420532:

            mov RDI,R14
            call .L_4027c0

            mov EBP,DWORD PTR [R14+184]
            test EBP,EBP
            je .L_4205ea

            xor ESI,ESI
            mov R12D,7168
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420558:

            mov RDX,QWORD PTR [R14+200]
            mov EAX,ESI
            lea EBX,DWORD PTR [RSI+1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [RDX+RAX*4+16]
            bt R12D,EAX
            jae .L_4205e0

            test AX,65280
            je .L_4205e0

            cmp EBP,EBX
            jbe .L_420d80

            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*4]
            movzx EAX,WORD PTR [RDX+RAX*4+16]
            bt R12D,EAX
            jae .L_420d80

            test AX,65280
            je .L_420d80

            lea EAX,DWORD PTR [RSI+2]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4+16]
            jmp .L_4205c6
          .byte 0x66
          .byte 0x90
.L_4205b0:

            movzx ECX,WORD PTR [RAX]
            bt R12D,ECX
            jae .L_4205cd

            add RAX,20
            test CX,65280
            je .L_4205cd

            mov EBX,EDX
.L_4205c6:

            lea EDX,DWORD PTR [RBX+1]
            cmp EBP,EDX
            ja .L_4205b0
.L_4205cd:

            mov EAX,EDX
            add EBX,2
            sub EAX,ESI
            cmp EAX,10
            jbe .L_420d85

            nop
            nop
            nop
.L_4205e0:

            cmp EBP,EBX
            mov ESI,EBX
            ja .L_420558
.L_4205ea:

            cmp DWORD PTR [RSP+44],1
            ja .L_420df0
.L_4205f5:

            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42334e

            add RSP,200
.L_420613:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_420620:

            mov R10,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmp BYTE PTR [RSP+16],0
            mov R13,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R10+RAX*4]
            mov R12D,DWORD PTR [RAX]
            je .L_421390

            mov DWORD PTR [RSP+108],0
            mov RAX,QWORD PTR [R13+152]
            lea RCX,QWORD PTR [RSP+108]
            mov RSI,QWORD PTR [R13+160]
            mov EDX,R12D
            mov RDI,R13
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_420b7b

            mov RBP,QWORD PTR [RSP+136]
            mov R13,QWORD PTR [RSP+144]
.L_42068b:

            lea RAX,QWORD PTR [RSP+128]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov ESI,R12D
            mov QWORD PTR [RSP+48],RAX
            mov RDI,RAX
            call QWORD PTR [RSP+160]

            test AL,AL
            mov R15D,EAX
            je .L_420ad0

            mov EDX,DWORD PTR [RSP+116]
            mov RCX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            test EDX,EDX
            mov RAX,QWORD PTR [RCX+360]
            mov R8,QWORD PTR [RCX+136]
            je .L_420714

            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov RDI,R13
            call RAX

            test EAX,EAX
            je .L_420ad0

            mov RDX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            mov RAX,QWORD PTR [RDX+360]
            mov R8,QWORD PTR [RDX+136]
.L_420714:

            lea RCX,QWORD PTR [RSP+120]
            mov DWORD PTR [RSP+120],0
            mov EDX,DWORD PTR [RSP+112]
            mov RDI,R13
            call RAX

            test EAX,EAX
            mov ECX,EAX
            je .L_4209a0

            cmp BYTE PTR [RSP+16],0
            je .L_4209a0

            mov EAX,DWORD PTR [RBP+180]
            mov R9,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov R15,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_420783

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [R15+RAX*4]
.L_420783:

            mov RCX,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R15]
            mov RDX,QWORD PTR [RCX+208]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RCX
            mov ESI,R12D
            call QWORD PTR [RCX+144]

            cmp R12D,127
            mov R13D,EAX
            mov RCX,QWORD PTR [RSP+48]
            jbe .L_420858

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            jne .L_420f60

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_421de7

            jbe .L_421fe0

            cmp EDX,32
            je .L_421dfd

            jbe .L_4224cb

            cmp EDX,254
            je .L_422546

            cmp EDX,255
            jne .L_422000

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
.L_420820:

            test EDX,EDX
            je .L_422000
.L_420828:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_422c73
.L_42083e:

            cmp R12D,8205
            jne .L_422771

            or R13D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_420858:

            mov ESI,DWORD PTR [RSP+116]
            mov WORD PTR [R15+16],R13W
            test ESI,ESI
            je .L_42098d

            mov EAX,DWORD PTR [RBP+180]
            mov R8,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov R15,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_4208a9

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R15,QWORD PTR [R15+RAX*4]
.L_4208a9:

            mov RCX,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R15]
            mov RDX,QWORD PTR [RCX+208]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RCX
            mov ESI,R12D
            call QWORD PTR [RCX+144]

            cmp R12D,127
            mov R13D,EAX
            mov RCX,QWORD PTR [RSP+48]
            jbe .L_420988

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            jne .L_420f90

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_4225ae

            jbe .L_422080

            cmp EDX,32
            je .L_421e35

            jbe .L_4224ea

            cmp EDX,254
            je .L_42258b

            cmp EDX,255
            jne .L_4220a0

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420950:

            test EDX,EDX
            je .L_4220a0
.L_420958:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_422d2a
.L_42096e:

            cmp R12D,8205
            jne .L_422795

            or R13D,288
            nop
            nop
            nop
            nop
            nop
            nop
.L_420988:

            mov WORD PTR [R15+16],R13W
.L_42098d:

            add DWORD PTR [RBX+180],1
            mov ECX,DWORD PTR [R14+180]
            jmp .L_420526
.L_4209a0:

            movzx ESI,BYTE PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+64],ECX
            call .L_41f160

            test EAX,EAX
            mov R13D,EAX
            mov ECX,DWORD PTR [RSP+64]
            je .L_421ab8

            mov ESI,DWORD PTR [RSP+116]
            test ESI,ESI
            je .L_42098d

            mov EAX,DWORD PTR [RBP+180]
            mov RDI,QWORD PTR [RBP+200]
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            mov RDI,RBP
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov R10,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_420a0e

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R10,QWORD PTR [R10+RAX*4]
.L_420a0e:

            mov R9,QWORD PTR [RBP+112]
            mov ECX,DWORD PTR [R10]
            mov QWORD PTR [RSP+72],R10
            mov RDX,QWORD PTR [R9+208]
            mov ESI,ECX
            mov DWORD PTR [RSP+64],ECX
            mov RDI,R9
            mov QWORD PTR [RSP+48],R9
            call QWORD PTR [R9+144]

            mov ECX,DWORD PTR [RSP+64]
            mov R8D,EAX
            mov R9,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+72]
            cmp ECX,127
            jbe .L_420ac1

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,ECX
            shr EDX,16
            test EDX,EDX
            je .L_422a29

            cmp EDX,1
            je .L_42329c

            cmp EDX,14
            jne .L_422a75

            lea EDX,DWORD PTR [RCX-917504]
            cmp EDX,4095
            setbe R15B
.L_420a8c:

            movzx R15D,R15B
.L_420a90:

            test R15D,R15D
            je .L_422a75
.L_420a99:

            or EAX,3
            cmp ECX,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_423276

            cmp ECX,8205
            jne .L_423252

            or R8D,288
.L_420ac1:

            cmp R13D,-1
            mov WORD PTR [R10+16],R8W
            jne .L_42098d
.L_420ad0:

            cmp BYTE PTR [RSP+16],0
            jne .L_420b0e

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+108],0
            lea RCX,QWORD PTR [RSP+108]
            mov EDX,R12D
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_420b7b
.L_420b0e:

            mov EAX,DWORD PTR [RBX+180]
            mov R13,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R13+RAX*4]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,31
            cmp AX,29
            je .L_421270
.L_420b35:

            cmp R12D,8209
            jne .L_420b7b

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,8208
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_4213a0
.L_420b7b:

            mov EAX,DWORD PTR [RBX+180]
            mov R10,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RSP+108]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [RBX+177],0
            je .L_420510
.L_420ba4:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_421220
.L_420bb8:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_42051f

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R12,QWORD PTR [RBX+200]
            mov RBP,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_421234
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420c20:

            mov DWORD PTR [RAX+12],0
            mov RAX,QWORD PTR [R12+152]
            mov R8,RDI
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            mov R9,QWORD PTR [RAX+144]
            call QWORD PTR [RAX+368]

            test EAX,EAX
            jne .L_422da9

            mov EAX,DWORD PTR [RBX+180]
            mov RDI,R12
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
            mov DWORD PTR [RAX+12],0
            mov R9,QWORD PTR [R12+152]
            lea RCX,QWORD PTR [RAX+12]
            mov EDX,DWORD PTR [RAX]
            mov RSI,QWORD PTR [R12+160]
            mov R8,QWORD PTR [R9+136]
            call QWORD PTR [R9+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_421ce9

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
.L_420caf:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_420cb8:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RDI,R12
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov DWORD PTR [RAX+12],0
            mov R9,QWORD PTR [R12+152]
            lea RCX,QWORD PTR [RAX+12]
            mov EDX,DWORD PTR [RAX]
            mov RSI,QWORD PTR [R12+160]
            mov R8,QWORD PTR [R9+136]
            call QWORD PTR [R9+360]

            cmp BYTE PTR [RBX+177],0
            je .L_422378
.L_420cfb:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_422bd0
.L_420d0f:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_4227af

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_420d6c:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_42237e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420d80:

            mov EDX,EBX
            lea EBX,DWORD PTR [RSI+2]
.L_420d85:

            lea RCX,QWORD PTR [RIP+.L_41edb0]
            mov RDI,R14
            call .L_405280

            jmp .L_4205e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420da0:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_420fc0
.L_420db4:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_421e6d

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_420414
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420de0:

            and EBX,4294967293
            cmp EBX,1
            setne BYTE PTR [RSP+16]
            jmp .L_4202d4
.L_420df0:

            mov RDI,R14
            call .L_402730

            cmp BYTE PTR [R14+177],0
            mov R13D,DWORD PTR [R14+184]
            jne .L_421a78

            mov EAX,DWORD PTR [R14+180]
.L_420e14:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_420e1e:

            lea RDI,QWORD PTR [RSP+128]
            xor EBX,EBX
            lea R15,QWORD PTR [RSP+120]
            mov EBP,EBX
            mov QWORD PTR [RSP+8],RDI
            lea RDI,QWORD PTR [RSP+124]
            mov QWORD PTR [RSP+16],RDI
.L_420e3e:

            cmp R13D,EAX
            jbe .L_420f4c
.L_420e47:

            cmp BYTE PTR [R14+176],0
            jne .L_420f4c

            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+200]
            mov ECX,7168
            lea RAX,QWORD PTR [RAX+RDX*4]
            mov RDX,QWORD PTR [R14+208]
            movzx EBX,WORD PTR [RAX+16]
            bt ECX,EBX
            jae .L_420ef2

            mov ESI,DWORD PTR [R14+188]
            lea ECX,DWORD PTR [RSI-1]
            cmp ECX,EBP
            jne .L_421140
.L_420e8b:

            mov ECX,EBP
            mov RDI,QWORD PTR [RSP+8]
            lea R12,QWORD PTR [RCX+RCX*4]
            mov RCX,R15
            mov ESI,DWORD PTR [RDX+R12*4]
            mov EDX,DWORD PTR [RAX]
            lea RBX,QWORD PTR [R12*4]
            call QWORD PTR [RSP+168]

            test AL,AL
            je .L_420eeb

            mov RDI,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+124],0
            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_421030
.L_420eeb:

            mov RDX,QWORD PTR [R14+208]
.L_420ef2:

            cmp BYTE PTR [R14+177],0
            jne .L_420fe8

            mov ECX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
.L_420f0e:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_420f18:

            test ECX,ECX
            je .L_420f27

            lea ESI,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RSI+RSI*4]
            lea RDX,QWORD PTR [RDX+RSI*4]
.L_420f27:

            movzx EDX,WORD PTR [RDX+16]
            mov ESI,7168
            bt ESI,EDX
            jae .L_420f40

            test DX,65280
            jne .L_420e3e
.L_420f40:

            cmp R13D,EAX
            lea EBP,DWORD PTR [RCX-1]
            ja .L_420e47
.L_420f4c:

            mov RDI,R14
            call .L_4027c0

            jmp .L_4205f5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420f60:

            cmp EDX,1
            je .L_4225e6

            cmp EDX,14
            jne .L_422000

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_420820
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420f90:

            cmp EDX,1
            je .L_42260d

            cmp EDX,14
            jne .L_4220a0

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_420950
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420fc0:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_420db4

            mov EAX,EDX
.L_420fd4:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_4204a6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420fe8:

            cmp QWORD PTR [R14+200],RDX
            je .L_421248
.L_420ff5:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_4022b0

            test AL,AL
            jne .L_421d6f

            mov EAX,DWORD PTR [R14+180]
            mov ECX,DWORD PTR [R14+188]
            mov RDX,QWORD PTR [R14+208]
            jmp .L_420f18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421030:

            cmp BYTE PTR [R14+177],0
            jne .L_4213d0

            mov EAX,DWORD PTR [R14+180]
.L_421045:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42104f:

            cmp BYTE PTR [R14+176],0
            jne .L_4205f5

            mov EDX,DWORD PTR [R14+188]
            mov ESI,EBP
            mov RDI,R14
            call .L_402f00

            mov RAX,QWORD PTR [R14+208]
            mov EDX,DWORD PTR [RSP+120]
            sub DWORD PTR [R14+188],1
            mov DWORD PTR [RAX+R12*4],EDX
            mov EDX,DWORD PTR [RSP+124]
            mov RAX,QWORD PTR [R14+208]
            mov DWORD PTR [RAX+RBX*1+12],EDX
            add RBX,QWORD PTR [R14+208]
            mov R8,QWORD PTR [R14+112]
            mov R12D,DWORD PTR [RBX]
            mov RDX,QWORD PTR [R8+208]
            mov RDI,R8
            mov QWORD PTR [RSP+24],R8
            mov ESI,R12D
            call QWORD PTR [R8+144]

            cmp R12D,127
            mov ECX,EAX
            mov R8,QWORD PTR [RSP+24]
            jbe .L_421208

            mov EAX,DWORD PTR [R14+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [R14+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            jne .L_421178

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_422b17

            jbe .L_421cbe

            cmp EDX,32
            je .L_422b50

            jbe .L_4227cc

            cmp EDX,254
            je .L_422687

            cmp EDX,255
            jne .L_42118a

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_422650
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421140:

            test ESI,ESI
            mov RDI,RDX
            je .L_42114f

            lea RCX,QWORD PTR [RCX+RCX*4]
            lea RDI,QWORD PTR [RDX+RCX*4]
.L_42114f:

            movzx ECX,WORD PTR [RDI+16]
            mov ESI,7168
            movzx EBX,BH
            shr ESI,CL
            movzx ECX,CH
            and ESI,1
            cmovne ESI,ECX
            cmp EBX,ESI
            jbe .L_420ef2

            jmp .L_420e8b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421178:

            cmp EDX,1
            je .L_422e88

            cmp EDX,14
            je .L_422634
.L_42118a:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_421208

            mov ESI,DWORD PTR [RBX]
            cmp ESI,4151
            je .L_422eaf

            cmp ESI,4038
            je .L_422d74

            cmp ESI,6752
            je .L_422d74

            cmp ESI,3897
            mov EAX,32512
            je .L_4211f0
.L_4211c7:

            mov DWORD PTR [RSP+24],ECX
            mov RDI,R8
            mov RDX,QWORD PTR [R8+192]
            call QWORD PTR [R8+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov ECX,DWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_4211f0:

            sub R12D,127995
            or EAX,ECX
            mov ECX,11
            cmp R12D,4
            cmova ECX,EAX
            nop
            nop
            nop
.L_421208:

            mov WORD PTR [RBX+16],CX
            mov EAX,DWORD PTR [R14+180]
            jmp .L_420e3e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421220:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_420bb8

            mov EAX,EDX
.L_421234:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_420516
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421248:

            mov ECX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],ECX
            jne .L_420ff5

            mov EAX,ECX
.L_42125e:

            add ECX,1
            mov DWORD PTR [R14+188],ECX
            jmp .L_420f0e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421270:

            cmp R12D,8197
            je .L_422bc6

            jbe .L_422138

            cmp R12D,8201
            je .L_4226fd

            jbe .L_42248e

            cmp R12D,8239
            je .L_422bbc

            jbe .L_422b37

            cmp R12D,8287
            je .L_422707

            cmp R12D,12288
            jne .L_420b35
.L_4212c3:

            mov EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4212d0:

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,32
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_420b35

            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
            movzx EDX,WORD PTR [RAX+16]
            mov ECX,EDX
            and ECX,31
            cmp CX,29
            jne .L_421352

            movzx EDX,DL
            shl EBP,8
            or EBP,EDX
            mov WORD PTR [RAX+16],BP
            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
.L_421352:

            mov EDX,DWORD PTR [RSP+124]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [RBX+177],0
            jne .L_42240e

            mov EAX,DWORD PTR [RBX+180]
.L_42136c:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_421375:

            or DWORD PTR [RBX+132],4
            mov ECX,DWORD PTR [R14+180]
            jmp .L_420526
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421390:

            mov RBP,RBX
            jmp .L_42068b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4213a0:

            mov EAX,DWORD PTR [RBX+180]
            mov R11,QWORD PTR [RBX+200]
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R11+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [RBX+177],0
            jne .L_420ba4

            jmp .L_420510
          .byte 0x66
          .byte 0x90
.L_4213d0:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            jne .L_4213f4

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            je .L_422b10
.L_4213f4:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_4022b0

            test AL,AL
            je .L_42104f

            mov EAX,DWORD PTR [R14+188]
            mov RDX,QWORD PTR [R14+208]
            mov RCX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
.L_421455:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_421045
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421468:

            movzx EAX,BYTE PTR [RSP+91]
            mov QWORD PTR [RSP+80],R14
            mov DWORD PTR [RSP+92],EAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
            nop
            nop
            nop
.L_421488:

            cmp BYTE PTR [RBX+176],0
            jne .L_4217d0

            mov R14,QWORD PTR [RSP+136]
            mov R11D,DWORD PTR [RSP+44]
            mov R13,QWORD PTR [RSP+144]
            mov EAX,DWORD PTR [R14+180]
            mov R10,QWORD PTR [R14+200]
            test R11D,R11D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            mov R12D,DWORD PTR [RAX]
            jne .L_422370

            mov DWORD PTR [RSP+108],0
            mov RAX,QWORD PTR [R13+152]
            lea RCX,QWORD PTR [RSP+108]
            mov RSI,QWORD PTR [R13+160]
            mov EDX,R12D
            mov RDI,R13
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_421780

            mov RBP,QWORD PTR [RSP+136]
            mov R13,QWORD PTR [RSP+144]
.L_421512:

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov ESI,R12D
            mov RDI,QWORD PTR [RSP+48]
            call QWORD PTR [RSP+160]

            test AL,AL
            je .L_4216d8

            mov EDX,DWORD PTR [RSP+116]
            mov RAX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            test EDX,EDX
            mov R11,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
            je .L_42158e

            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov RDI,R13
            call R11

            test EAX,EAX
            je .L_4216d8

            mov RAX,QWORD PTR [R13+152]
            mov RSI,QWORD PTR [R13+160]
            mov R11,QWORD PTR [RAX+360]
            mov R8,QWORD PTR [RAX+136]
.L_42158e:

            lea RCX,QWORD PTR [RSP+120]
            mov DWORD PTR [RSP+120],0
            mov EDX,DWORD PTR [RSP+112]
            mov RDI,R13
            call R11

            test EAX,EAX
            mov ECX,EAX
            je .L_421688

            cmp BYTE PTR [RSP+91],0
            je .L_421688

            mov EAX,DWORD PTR [RBP+180]
            mov R9,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R9+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov R8,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_4215fe

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R8+RAX*4]
.L_4215fe:

            mov R10,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R8]
            mov QWORD PTR [RSP+72],R8
            mov RDX,QWORD PTR [R10+208]
            mov RDI,R10
            mov QWORD PTR [RSP+64],R10
            mov ESI,R12D
            call QWORD PTR [R10+144]

            cmp R12D,127
            mov ECX,EAX
            mov R10,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+72]
            jbe .L_4218e8

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            je .L_422186

            cmp EDX,1
            je .L_422f2c

            cmp EDX,14
            jne .L_421ec0

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_4218b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421688:

            mov EDX,DWORD PTR [RSP+112]
            mov ESI,DWORD PTR [RSP+92]
            mov RDI,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+64],ECX
            call .L_41f160

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+64]
            je .L_4219bb

            mov ESI,DWORD PTR [RSP+116]
            test ESI,ESI
            je .L_4219f0

            mov EDX,DWORD PTR [RSP+124]
            mov RDI,RBP
            mov DWORD PTR [RSP+64],EAX
            call .L_41ee30

            mov EAX,DWORD PTR [RSP+64]
            cmp EAX,-1
            jne .L_4219f0

            nop
            nop
            nop
            nop
            nop
.L_4216d8:

            mov EDI,DWORD PTR [RSP+44]
            test EDI,EDI
            je .L_421717

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+108],0
            lea RCX,QWORD PTR [RSP+108]
            mov EDX,R12D
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_421780
.L_421717:

            mov EAX,DWORD PTR [R14+180]
            mov RSI,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,31
            cmp AX,29
            je .L_422258
.L_42173e:

            cmp R12D,8209
            jne .L_421780

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,8208
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_4217e1
.L_421780:

            mov EAX,DWORD PTR [R14+180]
            mov RBP,QWORD PTR [R14+200]
            mov EDX,DWORD PTR [RSP+108]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [R14+177],0
            jne .L_421810
.L_4217a8:

            mov EAX,DWORD PTR [R14+180]
.L_4217af:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_4217b9:

            cmp DWORD PTR [RBX+180],R15D
            jb .L_421488

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4217d0:

            mov R14,QWORD PTR [RSP+80]
            mov ECX,DWORD PTR [R14+180]
            jmp .L_420526
.L_4217e1:

            mov EAX,DWORD PTR [R14+180]
            mov R12,QWORD PTR [R14+200]
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R12+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [R14+177],0
            je .L_4217a8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421810:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            je .L_422230
.L_421824:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_4022b0

            test AL,AL
            je .L_4217b9

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov R11,QWORD PTR [R14+200]
            mov R10,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R11+RDX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            jmp .L_422246
.L_42188a:

            cmp EDX,3
            je .L_42274f

            cmp EDX,6
            je .L_422c7f

            test EDX,EDX
            jne .L_421ec0

            xor EDX,EDX
            cmp R12D,173
            sete DL
.L_4218b0:

            test EDX,EDX
            je .L_421ec0
.L_4218b8:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_422f53
.L_4218ce:

            cmp R12D,8205
            jne .L_422ee2

            or ECX,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4218e8:

            mov ESI,DWORD PTR [RSP+116]
            mov WORD PTR [R8+16],CX
            test ESI,ESI
            je .L_4219f0

            mov EAX,DWORD PTR [RBP+180]
            mov R8,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+124]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov R8,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_421939

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [R8+RAX*4]
.L_421939:

            mov R10,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [R8]
            mov QWORD PTR [RSP+72],R8
            mov RDX,QWORD PTR [R10+208]
            mov RDI,R10
            mov QWORD PTR [RSP+64],R10
            mov ESI,R12D
            call QWORD PTR [R10+144]

            cmp R12D,127
            mov ECX,EAX
            mov R10,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+72]
            jbe .L_421a60

            mov EAX,DWORD PTR [RBP+132]
            mov EDX,EAX
            or EDX,1
            mov DWORD PTR [RBP+132],EDX
            mov EDX,R12D
            shr EDX,16
            test EDX,EDX
            je .L_4221d8

            cmp EDX,1
            je .L_422f73

            cmp EDX,14
            jne .L_421f50

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            jmp .L_421a28
.L_4219bb:

            test ECX,ECX
            je .L_4216d8

            mov ESI,DWORD PTR [RSP+112]
            mov EDX,DWORD PTR [RSP+120]
            mov RDI,RBP
            call .L_41ee30

            mov ESI,DWORD PTR [RSP+116]
            test ESI,ESI
            je .L_4219f0

            mov EDX,DWORD PTR [RSP+124]
            mov RDI,RBP
            call .L_41ee30

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4219f0:

            add DWORD PTR [R14+180],1
            jmp .L_4217b9
.L_4219fd:

            cmp EDX,3
            je .L_422760

            cmp EDX,6
            je .L_422d36

            test EDX,EDX
            jne .L_421f50

            xor EDX,EDX
            cmp R12D,173
            sete DL
            nop
            nop
            nop
            nop
            nop
.L_421a28:

            test EDX,EDX
            je .L_421f50
.L_421a30:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EAX
            je .L_422f68
.L_421a46:

            cmp R12D,8205
            jne .L_422fa4

            or ECX,288
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421a60:

            mov WORD PTR [R8+16],CX
            add DWORD PTR [R14+180],1
            jmp .L_4217b9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421a78:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            je .L_421dc2
.L_421a8c:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_4022b0

            test AL,AL
            jne .L_422c90

            mov EAX,DWORD PTR [R14+180]
            jmp .L_420e1e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421ab8:

            test ECX,ECX
            je .L_420ad0

            mov EAX,DWORD PTR [RBP+180]
            mov RCX,QWORD PTR [RBP+200]
            mov RDI,RBP
            mov EDX,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov RCX,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_421b04

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RCX+RAX*4]
.L_421b04:

            mov R8,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [RCX]
            mov QWORD PTR [RSP+64],RCX
            mov RDX,QWORD PTR [R8+208]
            mov RDI,R8
            mov QWORD PTR [RSP+48],R8
            mov ESI,R12D
            call QWORD PTR [R8+144]

            cmp R12D,127
            mov R13D,EAX
            mov R8,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+64]
            jbe .L_421bb2

            mov EDX,DWORD PTR [RBP+132]
            mov EAX,EDX
            or EAX,1
            mov DWORD PTR [RBP+132],EAX
            mov EAX,R12D
            shr EAX,16
            test EAX,EAX
            je .L_422874

            cmp EAX,1
            je .L_42321f

            cmp EAX,14
            jne .L_4227eb

            lea EAX,DWORD PTR [R12-917504]
            cmp EAX,4095
            setbe AL
.L_421b7d:

            movzx EAX,AL
.L_421b80:

            test EAX,EAX
            je .L_4227eb
.L_421b88:

            or EDX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EDX
            je .L_423246

            cmp R12D,8205
            jne .L_423282

            or R13D,288
.L_421bb2:

            mov ESI,DWORD PTR [RSP+116]
            mov WORD PTR [RCX+16],R13W
            test ESI,ESI
            je .L_42098d

            mov EAX,DWORD PTR [RBP+180]
            mov RDX,QWORD PTR [RBP+200]
            mov RDI,RBP
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RSP+124]
            mov DWORD PTR [RAX+12],EDX
            call .L_402970

            mov EAX,DWORD PTR [RBP+188]
            mov RCX,QWORD PTR [RBP+208]
            test EAX,EAX
            je .L_421c03

            sub EAX,1
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RCX,QWORD PTR [RCX+RAX*4]
.L_421c03:

            mov R8,QWORD PTR [RBP+112]
            mov R12D,DWORD PTR [RCX]
            mov QWORD PTR [RSP+64],RCX
            mov RDX,QWORD PTR [R8+208]
            mov RDI,R8
            mov QWORD PTR [RSP+48],R8
            mov ESI,R12D
            call QWORD PTR [R8+144]

            cmp R12D,127
            mov R13D,EAX
            mov R8,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+64]
            jbe .L_421cb4

            mov EDX,DWORD PTR [RBP+132]
            mov EAX,EDX
            or EAX,1
            mov DWORD PTR [RBP+132],EAX
            mov EAX,R12D
            shr EAX,16
            test EAX,EAX
            je .L_4229d8

            cmp EAX,1
            je .L_4232f4

            cmp EAX,14
            jne .L_422949

            lea EAX,DWORD PTR [R12-917504]
            cmp EAX,4095
            setbe R15B
.L_421c7d:

            movzx R15D,R15B
.L_421c81:

            test R15D,R15D
            je .L_422949
.L_421c8a:

            or EDX,3
            cmp R12D,8204
            mov DWORD PTR [RBP+132],EDX
            je .L_42326a

            cmp R12D,8205
            jne .L_4232d4

            or R13D,288
.L_421cb4:

            mov WORD PTR [RCX+16],R13W
            jmp .L_42098d
.L_421cbe:

            cmp EDX,3
            je .L_422b88

            cmp EDX,6
            je .L_4226a7

            test EDX,EDX
            jne .L_42118a

            xor EDX,EDX
            cmp R12D,173
            sete DL
            jmp .L_422650
.L_421ce9:

            mov RDX,QWORD PTR [RBX+208]
            cmp RDX,QWORD PTR [RBX+200]
            je .L_422be9
.L_421cfd:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_4227ba

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R9,QWORD PTR [RBX+200]
            mov R8,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
.L_421d61:

            add ECX,1
            mov DWORD PTR [RBX+188],ECX
            jmp .L_420caf
.L_421d6f:

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov RDI,QWORD PTR [R14+200]
            mov RSI,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov ECX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            mov RDX,QWORD PTR [R14+208]
            jmp .L_42125e
.L_421dc2:

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            jne .L_421a8c

            mov EAX,EDX
.L_421dd8:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_420e14
.L_421de7:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_420820
.L_421dfd:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_420828

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_420828

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_420820
.L_421e35:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_420958

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_420958

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_420950
.L_421e6d:

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov RCX,QWORD PTR [RBX+200]
            mov R13,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            lea RAX,QWORD PTR [R13+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            jmp .L_420fd4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421ec0:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_4218e8

            mov ESI,DWORD PTR [R8]
            cmp ESI,4151
            je .L_422f5e

            cmp ESI,6752
            je .L_422e3f

            cmp ESI,4038
            je .L_422e3f

            cmp ESI,3897
            mov EAX,32512
            je .L_421f35
.L_421f02:

            mov DWORD PTR [RSP+72],ECX
            mov QWORD PTR [RSP+64],R8
            mov RDI,R10
            mov RDX,QWORD PTR [R10+192]
            call QWORD PTR [R10+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov R8,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+72]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_421f35:

            sub R12D,127995
            or EAX,ECX
            mov ECX,11
            cmp R12D,4
            cmova ECX,EAX
            jmp .L_4218e8
          .byte 0x90
.L_421f50:

            mov EAX,16782336
            bt EAX,ECX
            jae .L_421a60

            mov ESI,DWORD PTR [R8]
            cmp ESI,4151
            je .L_422f9a

            cmp ESI,6752
            je .L_422efb

            cmp ESI,4038
            je .L_422efb

            cmp ESI,3897
            mov EAX,32512
            je .L_421fc5
.L_421f92:

            mov DWORD PTR [RSP+72],ECX
            mov QWORD PTR [RSP+64],R8
            mov RDI,R10
            mov RDX,QWORD PTR [R10+192]
            call QWORD PTR [R10+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov R8,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+72]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_421fc5:

            sub R12D,127995
            or EAX,ECX
            mov ECX,11
            cmp R12D,4
            cmova ECX,EAX
            jmp .L_421a60
          .byte 0x90
.L_421fe0:

            cmp EDX,3
            je .L_42257a

            cmp EDX,6
            je .L_422569

            test EDX,EDX
            je .L_422120

            nop
            nop
            nop
            nop
            nop
            nop
.L_422000:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_420858

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_42278b

            cmp ESI,6752
            je .L_422b2d

            cmp ESI,4038
            je .L_422b2d

            cmp ESI,3897
            mov EAX,32512
            je .L_422063
.L_422043:

            mov RDI,RCX
            mov RDX,QWORD PTR [RCX+192]
            call QWORD PTR [RCX+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_422063:

            sub R12D,127995
            or EAX,R13D
            mov R13D,11
            cmp R12D,4
            cmova R13D,EAX
            jmp .L_420858
.L_422080:

            cmp EDX,3
            je .L_4225d5

            cmp EDX,6
            je .L_4225c4

            test EDX,EDX
            je .L_422175

            nop
            nop
            nop
            nop
            nop
            nop
.L_4220a0:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_420988

            mov ESI,DWORD PTR [R15]
            cmp ESI,4151
            je .L_422d6a

            cmp ESI,4038
            je .L_422bb2

            cmp ESI,6752
            je .L_422bb2

            cmp ESI,3897
            mov EAX,32512
            je .L_422103
.L_4220e3:

            mov RDI,RCX
            mov RDX,QWORD PTR [RCX+192]
            call QWORD PTR [RCX+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_422103:

            sub R12D,127995
            or EAX,R13D
            mov R13D,11
            cmp R12D,4
            cmova R13D,EAX
            jmp .L_420988
.L_422120:

            xor EDX,EDX
            cmp R12D,173
            sete DL
            jmp .L_420820
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422138:

            cmp R12D,8193
            je .L_4212c3

            ja .L_4223ec

            cmp R12D,160
            je .L_42216b

            cmp R12D,8192
            je .L_422404

            cmp R12D,32
            jne .L_420b35
.L_42216b:

            mov EBP,18
            jmp .L_4212d0
.L_422175:

            xor EDX,EDX
            cmp R12D,173
            sete DL
            jmp .L_420950
.L_422186:

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_422c5d

            jbe .L_42188a

            cmp EDX,32
            je .L_422c25

            jbe .L_422711

            cmp EDX,254
            je .L_422c02

            cmp EDX,255
            jne .L_421ec0

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_4218b0
.L_4221d8:

            mov EDX,R12D
            shr EDX,8
            cmp EDX,23
            je .L_422d14

            jbe .L_4219fd

            cmp EDX,32
            je .L_422cdc

            jbe .L_422730

            cmp EDX,254
            je .L_422d47

            cmp EDX,255
            jne .L_421f50

            lea EDX,DWORD PTR [R12-65520]
            cmp EDX,8
            setbe DL
            movzx EDX,DL
            jmp .L_421a28
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422230:

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            jne .L_421824

            mov EAX,EDX
.L_422246:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_4217af
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422258:

            cmp R12D,8197
            je .L_422e7e

            jbe .L_422509

            cmp R12D,8201
            je .L_422e74

            jbe .L_4226d7

            cmp R12D,8239
            je .L_422e60

            jbe .L_422e49

            cmp R12D,8287
            je .L_422e6a

            cmp R12D,12288
            jne .L_42173e
.L_4222ab:

            mov EBP,1
.L_4222b0:

            mov RDI,QWORD PTR [RSP+144]
            mov DWORD PTR [RSP+124],0
            lea RCX,QWORD PTR [RSP+124]
            mov EDX,32
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_42173e

            mov EAX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
            movzx EDX,WORD PTR [RAX+16]
            mov ECX,EDX
            and ECX,31
            cmp CX,29
            jne .L_422334

            movzx EDX,DL
            shl EBP,8
            or EBP,EDX
            mov WORD PTR [RAX+16],BP
            mov EAX,DWORD PTR [R14+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+200]
            lea RAX,QWORD PTR [RAX+RDX*4]
.L_422334:

            mov EDX,DWORD PTR [RSP+124]
            mov DWORD PTR [RAX+12],EDX
            cmp BYTE PTR [R14+177],0
            jne .L_4228c4

            mov EAX,DWORD PTR [R14+180]
.L_422350:

            add EAX,1
            mov DWORD PTR [R14+180],EAX
.L_42235a:

            or DWORD PTR [R14+132],4
            jmp .L_4217b9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422370:

            mov RBP,R14
            jmp .L_421512
.L_422378:

            mov EAX,DWORD PTR [RBX+180]
.L_42237e:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_422387:

            cmp EAX,R15D
            jae .L_420414

            mov EDX,EAX
            lea RCX,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RBX+200]
            lea RCX,QWORD PTR [RDX+RCX*4]
            mov EDX,DWORD PTR [RCX]
            lea ESI,DWORD PTR [RDX-65024]
            cmp ESI,15
            ja .L_4224b4
.L_4223b2:

            mov DWORD PTR [RCX+12],0
            mov RAX,QWORD PTR [R12+152]
            add RCX,12
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp BYTE PTR [RBX+177],0
            jne .L_420cfb

            jmp .L_422378
.L_4223ec:

            cmp R12D,8195
            je .L_4212c3

            mov EBP,3
            ja .L_4212d0
.L_422404:

            mov EBP,2
            jmp .L_4212d0
.L_42240e:

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_422b99
.L_422422:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            je .L_421375

            mov EDX,DWORD PTR [RBX+180]
            mov EAX,DWORD PTR [RBX+188]
            mov R12,QWORD PTR [RBX+200]
            mov RBP,QWORD PTR [RBX+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R12+RDX*4]
            lea RAX,QWORD PTR [RBP+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
.L_422480:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_42136c
.L_42248e:

            cmp R12D,8199
            mov EBP,19
            je .L_4212d0

            cmp R12D,8200
            sbb EBP,EBP
            and EBP,4294967282
            add EBP,20
            jmp .L_4212d0
.L_4224b4:

            lea ESI,DWORD PTR [RDX-917760]
            cmp ESI,239
            ja .L_420414

            jmp .L_4223b2
.L_4224cb:

            cmp EDX,24
            jne .L_422000

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_420820
.L_4224ea:

            cmp EDX,24
            jne .L_4220a0

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_420950
.L_422509:

            cmp R12D,8193
            je .L_4222ab

            ja .L_4226b5

            cmp R12D,160
            je .L_42253c

            cmp R12D,8192
            je .L_4226cd

            cmp R12D,32
            jne .L_42173e
.L_42253c:

            mov EBP,18
            jmp .L_4222b0
.L_422546:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_420820
.L_422569:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_420820
.L_42257a:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_420820
.L_42258b:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_420950
.L_4225ae:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_420950
.L_4225c4:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_420950
.L_4225d5:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_420950
.L_4225e6:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_422ed4

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_420820
.L_42260d:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_422f1e

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_420950
.L_422634:

            lea EDX,DWORD PTR [R12-917504]
            cmp EDX,4095
            setbe DL
            movzx EDX,DL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422650:

            test EDX,EDX
            je .L_42118a
.L_422658:

            or EAX,3
            cmp R12D,8204
            mov DWORD PTR [R14+132],EAX
            je .L_422e34
.L_42266f:

            cmp R12D,8205
            jne .L_422f05

            or ECX,288
            jmp .L_421208
.L_422687:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_422650
.L_4226a7:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_422650
.L_4226b5:

            cmp R12D,8195
            je .L_4222ab

            mov EBP,3
            ja .L_4222b0
.L_4226cd:

            mov EBP,2
            jmp .L_4222b0
.L_4226d7:

            cmp R12D,8199
            mov EBP,19
            je .L_4222b0

            cmp R12D,8200
            sbb EBP,EBP
            and EBP,4294967282
            add EBP,20
            jmp .L_4222b0
.L_4226fd:

            mov EBP,5
            jmp .L_4212d0
.L_422707:

            mov EBP,17
            jmp .L_4212d0
.L_422711:

            cmp EDX,24
            jne .L_421ec0

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_4218b0
.L_422730:

            cmp EDX,24
            jne .L_421f50

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_421a28
.L_42274f:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_4218b0
.L_422760:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_421a28
.L_422771:

            sub R12D,6155
            cmp R12D,2
            ja .L_423322

            or R13D,96
            jmp .L_420858
.L_42278b:

            mov ESI,4154
            jmp .L_422043
.L_422795:

            sub R12D,6155
            cmp R12D,2
            ja .L_423319

            or R13D,96
            jmp .L_420988
.L_4227af:

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_422387
.L_4227ba:

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            jmp .L_420cb8
.L_4227cc:

            cmp EDX,24
            jne .L_42118a

            lea EDX,DWORD PTR [R12-6155]
            cmp EDX,3
            setbe DL
            movzx EDX,DL
            jmp .L_422650
.L_4227eb:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_421bb2

            mov ESI,DWORD PTR [RCX]
            cmp ESI,4151
            je .L_4232ca

            cmp ESI,4038
            je .L_4232c0

            cmp ESI,6752
            je .L_4232c0

            cmp ESI,3897
            mov EAX,32512
            je .L_422858
.L_42282d:

            mov QWORD PTR [RSP+48],RCX
            mov RDI,R8
            mov RDX,QWORD PTR [R8+192]
            call QWORD PTR [R8+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov RCX,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_422858:

            sub R12D,127995
            or R13D,EAX
            mov EAX,11
            cmp R12D,4
            cmovbe R13D,EAX
            jmp .L_421bb2
.L_422874:

            mov EAX,R12D
            shr EAX,8
            cmp EAX,23
            je .L_4230c2

            jbe .L_422d7e

            cmp EAX,32
            je .L_42308a

            jbe .L_42306b

            cmp EAX,254
            je .L_42319e

            cmp EAX,255
            jne .L_4227eb

            lea EAX,DWORD PTR [R12-65520]
            cmp EAX,8
            setbe AL
            movzx EAX,AL
            jmp .L_421b80
.L_4228c4:

            mov RAX,QWORD PTR [R14+200]
            cmp QWORD PTR [R14+208],RAX
            je .L_422eb9
.L_4228d8:

            mov EDX,1
            mov ESI,1
            mov RDI,R14
            call .L_4022b0

            test AL,AL
            je .L_42235a

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov RCX,QWORD PTR [R14+200]
            mov R13,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            lea RAX,QWORD PTR [R13+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
.L_42293a:

            add EDX,1
            mov DWORD PTR [R14+188],EDX
            jmp .L_422350
.L_422949:

            mov EAX,16782336
            bt EAX,R13D
            jae .L_421cb4

            mov ESI,DWORD PTR [RCX]
            cmp ESI,4151
            je .L_423215

            cmp ESI,6752
            je .L_4232ea

            cmp ESI,4038
            je .L_4232ea

            cmp ESI,3897
            mov EAX,32512
            je .L_4229b6
.L_42298b:

            mov QWORD PTR [RSP+48],RCX
            mov RDI,R8
            mov RDX,QWORD PTR [R8+192]
            call QWORD PTR [R8+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov RCX,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_4229b6:

            sub R12D,127995
            or R13D,EAX
            mov EAX,11
            cmp R12D,4
            cmovbe R13D,EAX
            jmp .L_421cb4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4229d8:

            mov EAX,R12D
            shr EAX,8
            cmp EAX,23
            je .L_4230e7

            jbe .L_422ddb

            cmp EAX,32
            je .L_42311e

            jbe .L_4230fe

            cmp EAX,254
            je .L_423157

            cmp EAX,255
            jne .L_422949

            lea EAX,DWORD PTR [R12-65520]
            xor R15D,R15D
            cmp EAX,8
            setbe R15B
            jmp .L_421c81
.L_422a29:

            mov EDX,ECX
            shr EDX,8
            cmp EDX,23
            je .L_422fdb

            jbe .L_422e08

            cmp EDX,32
            je .L_423016

            jbe .L_422fbd

            cmp EDX,254
            je .L_423049

            cmp EDX,255
            jne .L_422a75

            lea EDX,DWORD PTR [RCX-65520]
            xor R15D,R15D
            cmp EDX,8
            setbe R15B
            jmp .L_420a90
.L_422a75:

            mov EAX,16782336
            bt EAX,R8D
            jae .L_420ac1

            mov ESI,DWORD PTR [R10]
            cmp ESI,4151
            je .L_42320b

            cmp ESI,6752
            je .L_423201

            cmp ESI,4038
            je .L_423201

            cmp ESI,3897
            mov EAX,32512
            je .L_422af5
.L_422ab8:

            mov DWORD PTR [RSP+72],R8D
            mov DWORD PTR [RSP+64],ECX
            mov RDI,R9
            mov QWORD PTR [RSP+48],R10
            mov RDX,QWORD PTR [R9+192]
            call QWORD PTR [R9+128]

            lea RDI,QWORD PTR [RIP+.L_43ff80]
            cdqe 
            mov R10,QWORD PTR [RSP+48]
            mov ECX,DWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+72]
            movzx EAX,BYTE PTR [RDI+RAX*1]
            shl EAX,8
.L_422af5:

            sub ECX,127995
            or R8D,EAX
            mov EAX,11
            cmp ECX,4
            cmovbe R8D,EAX
            jmp .L_420ac1
          .byte 0x90
.L_422b10:

            mov EAX,EDX
            jmp .L_421455
.L_422b17:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_422650
.L_422b2d:

            mov EAX,65024
            jmp .L_422063
.L_422b37:

            cmp R12D,8202
            mov EBP,16
            je .L_4212d0

            jmp .L_420b35
          .byte 0x66
          .byte 0x90
.L_422b50:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_422658

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_422658

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_422650
.L_422b88:

            xor EDX,EDX
            cmp R12D,847
            sete DL
            jmp .L_422650
.L_422b99:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_422422

            mov EAX,EDX
            jmp .L_422480
.L_422bb2:

            mov EAX,65024
            jmp .L_422103
.L_422bbc:

            mov EBP,21
            jmp .L_4212d0
.L_422bc6:

            mov EBP,4
            jmp .L_4212d0
.L_422bd0:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_420d0f

            mov EAX,EDX
            jmp .L_420d6c
.L_422be9:

            mov ECX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],ECX
            jne .L_421cfd

            mov EAX,ECX
            jmp .L_421d61
.L_422c02:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_4218b0
.L_422c25:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_4218b8

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_4218b8

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_4218b0
.L_422c5d:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_4218b0
.L_422c73:

            or R13D,544
            jmp .L_420858
.L_422c7f:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_4218b0
.L_422c90:

            mov EDX,DWORD PTR [R14+180]
            mov EAX,DWORD PTR [R14+188]
            mov R9,QWORD PTR [R14+200]
            mov R8,QWORD PTR [R14+208]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            lea RAX,QWORD PTR [R8+RAX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [R14+188]
            mov EAX,DWORD PTR [R14+180]
            jmp .L_421dd8
.L_422cdc:

            lea EDX,DWORD PTR [R12-8203]
            cmp EDX,4
            jbe .L_421a30

            lea EDX,DWORD PTR [R12-8234]
            cmp EDX,4
            jbe .L_421a30

            lea EDX,DWORD PTR [R12-8288]
            cmp EDX,15
            setbe DL
            movzx EDX,DL
            jmp .L_421a28
.L_422d14:

            lea EDX,DWORD PTR [R12-6068]
            cmp EDX,1
            setbe DL
            movzx EDX,DL
            jmp .L_421a28
.L_422d2a:

            or R13D,544
            jmp .L_420988
.L_422d36:

            xor EDX,EDX
            cmp R12D,1564
            sete DL
            jmp .L_421a28
.L_422d47:

            lea EDX,DWORD PTR [R12-65024]
            cmp EDX,15
            setbe DL
            cmp R12D,65279
            sete SIL
            or EDX,ESI
            movzx EDX,DL
            jmp .L_421a28
.L_422d6a:

            mov ESI,4154
            jmp .L_4220e3
.L_422d74:

            mov EAX,65024
            jmp .L_4211f0
.L_422d7e:

            cmp EAX,3
            je .L_42318d

            cmp EAX,6
            je .L_42317c

            test EAX,EAX
            jne .L_4227eb

            xor EAX,EAX
            cmp R12D,173
            sete AL
            jmp .L_421b80
.L_422da9:

            mov EAX,DWORD PTR [RBX+180]
            mov ESI,2
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+200]
            lea RCX,QWORD PTR [RAX+RDX*4]
            mov EDX,1
            call .L_402850

            mov EAX,DWORD PTR [RBX+180]
            jmp .L_422387
.L_422ddb:

            cmp EAX,3
            je .L_423003

            cmp EAX,6
            je .L_422ff0

            test EAX,EAX
            jne .L_422949

            xor R15D,R15D
            cmp R12D,173
            sete R15B
            jmp .L_421c81
.L_422e08:

            cmp EDX,3
            je .L_4231d3

            cmp EDX,6
            je .L_4231c1

            test EDX,EDX
            jne .L_422a75

            xor R15D,R15D
            cmp ECX,173
            sete R15B
            jmp .L_420a90
.L_422e34:

            or ECX,544
            jmp .L_421208
.L_422e3f:

            mov EAX,65024
            jmp .L_421f35
.L_422e49:

            cmp R12D,8202
            mov EBP,16
            je .L_4222b0

            jmp .L_42173e
.L_422e60:

            mov EBP,21
            jmp .L_4222b0
.L_422e6a:

            mov EBP,17
            jmp .L_4222b0
.L_422e74:

            mov EBP,5
            jmp .L_4222b0
.L_422e7e:

            mov EBP,4
            jmp .L_4222b0
.L_422e88:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_4230d8

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_422650
.L_422eaf:

            mov ESI,4154
            jmp .L_4211c7
.L_422eb9:

            mov EDX,DWORD PTR [R14+180]
            cmp DWORD PTR [R14+188],EDX
            jne .L_4228d8

            mov EAX,EDX
            jmp .L_42293a
.L_422ed4:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_42083e
.L_422ee2:

            sub R12D,6155
            cmp R12D,2
            ja .L_423376

            or ECX,96
            jmp .L_4218e8
.L_422efb:

            mov EAX,65024
            jmp .L_421fc5
.L_422f05:

            sub R12D,6155
            cmp R12D,2
            ja .L_42333d

            or ECX,96
            jmp .L_421208
.L_422f1e:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_42096e
.L_422f2c:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_4231e5

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_4218b0
.L_422f53:

            or ECX,544
            jmp .L_4218e8
.L_422f5e:

            mov ESI,4154
            jmp .L_421f02
.L_422f68:

            or ECX,544
            jmp .L_421a60
.L_422f73:

            lea EDX,DWORD PTR [R12-113824]
            cmp EDX,3
            jbe .L_4231f3

            lea EDX,DWORD PTR [R12-119155]
            cmp EDX,7
            setbe DL
            movzx EDX,DL
            jmp .L_421a28
.L_422f9a:

            mov ESI,4154
            jmp .L_421f92
.L_422fa4:

            sub R12D,6155
            cmp R12D,2
            ja .L_42336e

            or ECX,96
            jmp .L_421a60
.L_422fbd:

            cmp EDX,24
            jne .L_422a75

            lea EDX,DWORD PTR [RCX-6155]
            xor R15D,R15D
            cmp EDX,3
            setbe R15B
            jmp .L_420a90
.L_422fdb:

            lea EDX,DWORD PTR [RCX-6068]
            xor R15D,R15D
            cmp EDX,1
            setbe R15B
            jmp .L_420a90
.L_422ff0:

            xor R15D,R15D
            cmp R12D,1564
            sete R15B
            jmp .L_421c81
.L_423003:

            xor R15D,R15D
            cmp R12D,847
            sete R15B
            jmp .L_421c81
.L_423016:

            lea EDX,DWORD PTR [RCX-8203]
            cmp EDX,4
            jbe .L_420a99

            lea EDX,DWORD PTR [RCX-8234]
            cmp EDX,4
            jbe .L_420a99

            lea EDX,DWORD PTR [RCX-8288]
            xor R15D,R15D
            cmp EDX,15
            setbe R15B
            jmp .L_420a90
.L_423049:

            lea EDX,DWORD PTR [RCX-65024]
            cmp EDX,15
            setbe R15B
            cmp ECX,65279
            sete DL
            or R15D,EDX
            movzx R15D,R15B
            jmp .L_420a90
.L_42306b:

            cmp EAX,24
            jne .L_4227eb

            lea EAX,DWORD PTR [R12-6155]
            cmp EAX,3
            setbe AL
            movzx EAX,AL
            jmp .L_421b80
.L_42308a:

            lea EAX,DWORD PTR [R12-8203]
            cmp EAX,4
            jbe .L_421b88

            lea EAX,DWORD PTR [R12-8234]
            cmp EAX,4
            jbe .L_421b88

            lea EAX,DWORD PTR [R12-8288]
            cmp EAX,15
            setbe AL
            movzx EAX,AL
            jmp .L_421b80
.L_4230c2:

            lea EAX,DWORD PTR [R12-6068]
            cmp EAX,1
            setbe AL
            movzx EAX,AL
            jmp .L_421b80
.L_4230d8:

            or EAX,3
            mov DWORD PTR [R14+132],EAX
            jmp .L_42266f
.L_4230e7:

            lea EAX,DWORD PTR [R12-6068]
            xor R15D,R15D
            cmp EAX,1
            setbe R15B
            jmp .L_421c81
.L_4230fe:

            cmp EAX,24
            jne .L_422949

            lea EAX,DWORD PTR [R12-6155]
            xor R15D,R15D
            cmp EAX,3
            setbe R15B
            jmp .L_421c81
.L_42311e:

            lea EAX,DWORD PTR [R12-8203]
            cmp EAX,4
            jbe .L_421c8a

            lea EAX,DWORD PTR [R12-8234]
            cmp EAX,4
            jbe .L_421c8a

            lea EAX,DWORD PTR [R12-8288]
            xor R15D,R15D
            cmp EAX,15
            setbe R15B
            jmp .L_421c81
.L_423157:

            lea EAX,DWORD PTR [R12-65024]
            cmp EAX,15
            setbe R15B
            cmp R12D,65279
            sete AL
            or R15D,EAX
            movzx R15D,R15B
            jmp .L_421c81
.L_42317c:

            xor EAX,EAX
            cmp R12D,1564
            sete AL
            jmp .L_421b80
.L_42318d:

            xor EAX,EAX
            cmp R12D,847
            sete AL
            jmp .L_421b80
.L_42319e:

            lea EAX,DWORD PTR [R12-65024]
            cmp EAX,15
            setbe AL
            cmp R12D,65279
            sete SIL
            or EAX,ESI
            movzx EAX,AL
            jmp .L_421b80
.L_4231c1:

            xor R15D,R15D
            cmp ECX,1564
            sete R15B
            jmp .L_420a90
.L_4231d3:

            xor R15D,R15D
            cmp ECX,847
            sete R15B
            jmp .L_420a90
.L_4231e5:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_4218ce
.L_4231f3:

            or EAX,3
            mov DWORD PTR [RBP+132],EAX
            jmp .L_421a46
.L_423201:

            mov EAX,65024
            jmp .L_422af5
.L_42320b:

            mov ESI,4154
            jmp .L_422ab8
.L_423215:

            mov ESI,4154
            jmp .L_42298b
.L_42321f:

            lea ESI,DWORD PTR [R12-113824]
            mov EAX,R15D
            cmp ESI,3
            jbe .L_421b7d

            lea EAX,DWORD PTR [R12-119155]
            cmp EAX,7
            setbe AL
            jmp .L_421b7d
.L_423246:

            or R13D,544
            jmp .L_421bb2
.L_423252:

            sub ECX,6155
            cmp ECX,2
            ja .L_423345

            or R8D,96
            jmp .L_420ac1
.L_42326a:

            or R13D,544
            jmp .L_421cb4
.L_423276:

            or R8D,544
            jmp .L_420ac1
.L_423282:

            sub R12D,6155
            cmp R12D,2
            ja .L_42332b

            or R13D,96
            jmp .L_421bb2
.L_42329c:

            lea EDX,DWORD PTR [RCX-113824]
            cmp EDX,3
            jbe .L_420a8c

            lea EDX,DWORD PTR [RCX-119155]
            cmp EDX,7
            setbe R15B
            jmp .L_420a8c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4232c0:

            mov EAX,65024
            jmp .L_422858
.L_4232ca:

            mov ESI,4154
            jmp .L_42282d
.L_4232d4:

            sub R12D,6155
            cmp R12D,2
            ja .L_423334

            or R13D,96
            jmp .L_421cb4
.L_4232ea:

            mov EAX,65024
            jmp .L_4229b6
.L_4232f4:

            lea EAX,DWORD PTR [R12-113824]
            cmp EAX,3
            jbe .L_421c7d

            lea EAX,DWORD PTR [R12-119155]
            cmp EAX,7
            setbe R15B
            jmp .L_421c7d
.L_423319:

            or R13D,32
            jmp .L_420988
.L_423322:

            or R13D,32
            jmp .L_420858
.L_42332b:

            or R13D,32
            jmp .L_421bb2
.L_423334:

            or R13D,32
            jmp .L_421cb4
.L_42333d:

            or ECX,32
            jmp .L_421208
.L_423345:

            or R8D,32
            jmp .L_420ac1
.L_42334e:

            call __stack_chk_fail@PLT
.L_423353:

            sub ECX,917760
            add RDI,20
            cmp ECX,239
            jbe .L_420408

            jmp .L_4203eb
.L_42336e:

            or ECX,32
            jmp .L_421a60
.L_423376:

            or ECX,32
            jmp .L_4218e8
.L_42337e:

            nop
            nop
.L_423380:

            mov ECX,DWORD PTR [RDX+184]
            mov RDX,QWORD PTR [RDX+200]
            test ECX,ECX
            je .L_423530

            sub ECX,1
            push R13
            lea RAX,QWORD PTR [RDX+16]
            lea RCX,QWORD PTR [RCX+RCX*4]
            push R12
            lea RDI,QWORD PTR [RIP+.L_449ab8]
            push RBP
            mov R11D,4294958080
            push RBX
.L_4233b3:

            lea RSI,QWORD PTR [RDX+RCX*4+36]
            mov R8D,4294958592
            mov EBP,4294960128
            mov R10D,4294961152
            mov R9D,4294960640
            mov EBX,4294956544
            jmp .L_4233e9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4233e0:

            add RAX,20
            cmp RAX,RSI
            je .L_423421
.L_4233e9:

            movzx EDX,WORD PTR [RAX]
            mov ECX,EDX
            and ECX,31
            cmp CX,12
            jne .L_4233e0

            movzx ECX,DH
            mov R13D,DWORD PTR [RAX-16]
            cmp ECX,199
            mov R12D,ECX
            jle .L_423430
.L_423409:

            mov ECX,R12D
            shl ECX,8
.L_42340f:

            movzx EDX,DL
            add RAX,20
            or EDX,ECX
            mov WORD PTR [RAX-20],DX
            cmp RAX,RSI
            jne .L_4233e9
.L_423421:

            pop RBX
.L_423422:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423430:

            mov ECX,R13D
            xor CL,CL
            cmp ECX,3584
            je .L_4234a0
.L_42343d:

            lea ECX,DWORD PTR [R12-3]
            cmp ECX,127
            ja .L_423409

            movsxd RCX,DWORD PTR [RDI+RCX*4]
            add RCX,RDI
            jmp RCX
.L_423450:

            sub R13D,3764
            cmp R13D,3
            ja .L_42343d

            nop
            nop
            nop
.L_423460:

            mov ECX,R9D
            jmp .L_42340f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423468:

            cmp R13D,3639
            jbe .L_423532

            cmp R13D,3655
            je .L_423490

            jb .L_42343d

            sub R13D,3660
            cmp R13D,2
            ja .L_42343d

            nop
            nop
            nop
.L_423490:

            mov ECX,R10D
            jmp .L_42340f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4234a0:

            test R12D,R12D
            jne .L_4234e0

            cmp R13D,3761
            je .L_423460

            jbe .L_423468

            cmp R13D,3771
            je .L_423460

            jbe .L_423450

            cmp R13D,3772
            mov ECX,R11D
            je .L_42340f

            sub R13D,3788
            cmp R13D,1
            ja .L_42343d

            jmp .L_423460
          .byte 0x66
          .byte 0x90
.L_4234e0:

            cmp R13D,3642
            mov ECX,R8D
            jne .L_42343d

            jmp .L_42340f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4234f8:

            mov ECX,R11D
            jmp .L_42340f
.L_423500:

            mov ECX,R8D
            jmp .L_42340f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423510:

            mov ECX,EBP
            jmp .L_42340f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423520:

            mov ECX,EBX
            jmp .L_42340f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423530:

            ret 
.L_423532:

            cmp R13D,3636
            jae .L_423490

            cmp R13D,3633
            je .L_423490

            jmp .L_42343d
.L_423551:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423560:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,200
.L_423571:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+184]
            mov QWORD PTR [RSP+136],RDI
            mov EDI,EAX
            mov DWORD PTR [RSP+80],EAX
            mov RAX,QWORD PTR [RDX+200]
            cmp EDI,1
            jbe .L_423ca8

            mov R10D,1
            xor R11D,R11D
            add RAX,36
            mov R15D,R11D
            mov R9,RDX
            mov R11D,R10D
            mov QWORD PTR [RSP+24],RAX
            mov R10,RSI
            jmp .L_4235e8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4235d0:

            mov R15D,R11D
.L_4235d3:

            add R11D,1
            add QWORD PTR [RSP+24],20
            cmp DWORD PTR [RSP+80],R11D
            je .L_423c78
.L_4235e8:

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,7168
            movzx EAX,WORD PTR [RAX]
            bt EDX,EAX
            jb .L_4235d3

            mov EAX,R11D
            sub EAX,R15D
            cmp EAX,1
            jbe .L_4235d0

            mov RAX,QWORD PTR [R9+200]
            cmp R11D,R15D
            mov QWORD PTR [RSP+8],RAX
            jbe .L_4235d0

            mov R13,R9
            mov R14D,R11D
            mov R9D,R15D
            mov R15,R10
            jmp .L_423634
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423628:

            cmp R14D,R12D
            mov R9D,R12D
            jbe .L_423783
.L_423634:

            mov EAX,R9D
            lea R12D,DWORD PTR [R9+1]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RSP+8]
            lea R10,QWORD PTR [RCX*4]
            movzx EDX,WORD PTR [RAX+R10*1+16]
            mov EAX,7168
            bt EAX,EDX
            jb .L_423628

            cmp R14D,R12D
            jbe .L_423798

            mov R11D,R12D
            mov RDI,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [R11+R11*4]
            shl RBP,2
            movzx EDX,WORD PTR [RDI+RBP*1+16]
            bt EAX,EDX
            jae .L_423798

            lea EAX,DWORD PTR [R9+2]
            mov EBX,R12D
            mov ESI,7168
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4+16]
            jmp .L_4236ac
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4236a0:

            movzx EDX,WORD PTR [RAX]
            add RAX,20
            bt ESI,EDX
            jae .L_4236b4
.L_4236ac:

            add EBX,1
            cmp EBX,R14D
            jb .L_4236a0
.L_4236b4:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+32],R9D
            mov QWORD PTR [RSP+16],R10
            mov RDI,R15
            mov QWORD PTR [RSP+40],R11
            mov RSI,QWORD PTR [R15+160]
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+16]
            mov R9D,DWORD PTR [RSP+32]
            jne .L_4237f0

            cmp EBX,R12D
            mov RCX,QWORD PTR [R13+200]
            jbe .L_423774

            mov EAX,EBX
            mov R11,QWORD PTR [RSP+40]
            sub EAX,R9D
            sub EAX,2
            lea RAX,QWORD PTR [R11+RAX*1+1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423740:

            movzx EAX,WORD PTR [RCX+RBP*1+16]
            and EAX,31
            cmp AX,12
            jne .L_42376b

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1+4],0
.L_42376b:

            add RBP,20
            cmp RDX,RBP
            jne .L_423740
.L_423774:

            mov R12D,EBX
.L_423777:

            cmp R14D,R12D
            mov R9D,R12D
            ja .L_423634
.L_423783:

            mov R10,R15
            mov R11D,R14D
            mov R9,R13
            mov R15D,R14D
            jmp .L_4235d3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423798:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+32],R9D
            mov QWORD PTR [RSP+16],R10
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov EBX,R12D
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            je .L_423774

            mov R10,QWORD PTR [RSP+16]
            mov R9D,DWORD PTR [RSP+32]
            nop
.L_4237f0:

            mov RCX,QWORD PTR [R13+216]
            mov EDI,1
            mov DWORD PTR [RSP+32],EDI
            add RCX,R10
            mov R11D,DWORD PTR [RCX+8]
            add R11D,DWORD PTR [RSP+144]
            mov DWORD PTR [RSP+144],R11D
            mov EAX,DWORD PTR [RCX+12]
            add EAX,DWORD PTR [RSP+148]
            mov DWORD PTR [RSP+56],R11D
            mov DWORD PTR [RSP+148],EAX
            mov DWORD PTR [RSP+84],EAX
            mov RAX,QWORD PTR [R13+200]
            add R10,RAX
            movzx ESI,BYTE PTR [R10+14]
            mov EDX,ESI
            sar ESI,5
            test BYTE PTR [R10+12],4
            mov DWORD PTR [RSP+124],ESI
            je .L_42385f

            mov ESI,EDX
            and ESI,15
            and EDX,16
            cmove ESI,EDI
            mov DWORD PTR [RSP+32],ESI
.L_42385f:

            mov EDX,DWORD PTR [R13+144]
            xor R11D,R11D
            xor R10D,R10D
            and EDX,4294967293
            cmp EDX,4
            jne .L_423882

            mov EDX,DWORD PTR [RCX+4]
            mov R10D,DWORD PTR [RCX]
            neg EDX
            neg R10D
            mov R11D,EDX
.L_423882:

            mov EDI,DWORD PTR [RSP+152]
            mov ESI,DWORD PTR [RSP+156]
            cmp EBX,R12D
            mov DWORD PTR [RSP+88],EDI
            mov DWORD PTR [RSP+112],ESI
            jbe .L_423774

            mov ECX,R12D
            mov DWORD PTR [RSP+120],EDI
            mov EDI,DWORD PTR [RSP+84]
            lea RDX,QWORD PTR [RCX+RCX*4]
            mov DWORD PTR [RSP+128],R14D
            mov EBP,R10D
            mov R14D,R11D
            mov DWORD PTR [RSP+52],255
            mov DWORD PTR [RSP+96],0
            lea R12,QWORD PTR [RAX+RDX*4+16]
            mov EDX,EBX
            mov DWORD PTR [RSP+64],EDI
            sub EDX,R9D
            mov EDI,DWORD PTR [RSP+56]
            mov R9D,ESI
            sub EDX,2
            mov DWORD PTR [RSP+104],4294967295
            mov DWORD PTR [RSP+132],EBX
            add RDX,RCX
            mov R10,R15
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+92],EDI
            lea RCX,QWORD PTR [RAX+RDX*4+36]
            mov RDX,-16
            sub RDX,RAX
            mov QWORD PTR [RSP+16],RCX
            mov R11,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_423920:

            movzx ECX,WORD PTR [R12]
            mov EAX,7168
            lea RBX,QWORD PTR [R11+R12*1]
            shr EAX,CL
            and EAX,1
            je .L_423b68

            movzx EDX,CH
            test EDX,EDX
            je .L_423b68

            mov R15D,DWORD PTR [RSP+32]
            cmp R15D,1
            jbe .L_423be0

            movzx EDI,BYTE PTR [R12-2]
            test DIL,16
            jne .L_423c68

            mov ESI,EDI
            sar EDI,5
            and ESI,15
            sub ESI,1
            cmp EDI,DWORD PTR [RSP+124]
            setne R8B
            cmp R15D,ESI
            setbe DIL
            mov R15D,R8D
            or R15B,DIL
            jne .L_423c68

            mov EDI,DWORD PTR [RSP+124]
            test EDI,EDI
            je .L_423c68
.L_423995:

            cmp ESI,DWORD PTR [RSP+104]
            je .L_423be0

            mov EDI,DWORD PTR [RSP+144]
            mov DWORD PTR [RSP+52],EAX
            mov EAX,DWORD PTR [RSP+96]
            mov R8D,DWORD PTR [RSP+152]
            mov R15D,DWORD PTR [RSP+156]
            mov DWORD PTR [RSP+56],EDI
            mov EDI,DWORD PTR [RSP+148]
            test EAX,EAX
            mov DWORD PTR [RSP+40],EDI
            jne .L_4239eb

            mov RDI,QWORD PTR [RSP+136]
            mov EAX,DWORD PTR [RDI]
            mov DWORD PTR [RSP+96],EAX
            and EAX,4294967294
            cmp EAX,4
            jne .L_424450
.L_4239eb:

            cmp DWORD PTR [RSP+96],4
            je .L_424380

            mov EDI,DWORD PTR [RSP+32]
            xor EDX,EDX
            lea EAX,DWORD PTR [RDI-1]
            sub EAX,ESI
            imul EAX,R8D
            div EDI
            add EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+56],EAX
.L_423a0f:

            xor EDX,EDX
            mov EAX,R8D
            mov EDI,DWORD PTR [RSP+52]
            div DWORD PTR [RSP+32]
            test EDI,EDI
            mov DWORD PTR [RSP+88],EAX
            jne .L_423bbf

            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+104],ESI
            mov DWORD PTR [RSP+112],R15D
            mov DWORD PTR [RSP+84],EAX
            mov EAX,DWORD PTR [RSP+88]
            mov DWORD PTR [RSP+120],EAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+92],EAX
.L_423a49:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+72],R11
            mov RSI,QWORD PTR [R10+160]
            mov RDI,R10
            mov QWORD PTR [RSP+64],R10
            lea RCX,QWORD PTR [RSP+160]
            mov EDX,DWORD PTR [RAX+RBX*1]
            mov RAX,QWORD PTR [R10+152]
            movaps XMMWORD PTR [RSP+160],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+64]
            mov R11,QWORD PTR [RSP+72]
            je .L_423c20

            mov EDX,DWORD PTR [R10+140]
            mov EDI,DWORD PTR [RSP+52]
            lea EAX,DWORD PTR [RDX+15]
            test EDX,EDX
            lea ECX,DWORD PTR [RDI-200]
            cmovns EAX,EDX
            mov RDX,QWORD PTR [R13+216]
            sar EAX,4
            add RDX,RBX
            cmp ECX,34
            mov QWORD PTR [RDX+8],0
            mov ESI,DWORD PTR [RSP+160]
            ja .L_423cd8

            mov R8D,1
            movabs RDI,4299227136
            shl R8,CL
            test R8,RDI
            jne .L_423f30

            test R8D,268697601
            jne .L_42443f

            movabs R9,25769803776
            mov EDI,DWORD PTR [RSP+168]
            test R8,R9
            je .L_423cdf

            mov R8D,DWORD PTR [R13+144]
            cmp R8D,4
            je .L_424623

            cmp R8D,5
            jne .L_423cdf

            mov R8D,EDI
            mov R9D,DWORD PTR [RSP+92]
            add R9D,DWORD PTR [RSP+120]
            shr R8D,31
            add EDI,R8D
            sar EDI,1
            sub R9D,EDI
            sub R9D,ESI
            mov DWORD PTR [RDX+8],R9D
            jmp .L_423cfb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423b68:

            mov EAX,DWORD PTR [R13+144]
            add RBX,QWORD PTR [R13+216]
            and EAX,4294967293
            cmp EAX,4
            mov ECX,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+4]
            je .L_423bb8

            add EBP,ECX
            add R14D,EDX
.L_423b88:

            add R12,20
            cmp QWORD PTR [RSP+16],R12
            jne .L_423920

            mov EBX,DWORD PTR [RSP+132]
            mov R14D,DWORD PTR [RSP+128]
            mov R15,R10
            mov R12D,EBX
            jmp .L_423777
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423bb8:

            sub EBP,ECX
            sub R14D,EDX
            jmp .L_423b88
.L_423bbf:

            mov EAX,DWORD PTR [RSP+40]
            movzx EDX,CH
            mov DWORD PTR [RSP+104],ESI
            mov DWORD PTR [RSP+112],R15D
            mov DWORD PTR [RSP+52],255
            mov DWORD PTR [RSP+84],EAX
            nop
            nop
            nop
            nop
            nop
.L_423be0:

            cmp EDX,DWORD PTR [RSP+52]
            mov EAX,DWORD PTR [RSP+64]
            mov R15D,R9D
            mov DWORD PTR [RSP+40],EAX
            je .L_423a49

            mov EAX,DWORD PTR [RSP+88]
            mov DWORD PTR [RSP+52],EDX
            mov R15D,DWORD PTR [RSP+112]
            mov DWORD PTR [RSP+120],EAX
            mov EAX,DWORD PTR [RSP+84]
            mov DWORD PTR [RSP+40],EAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+92],EAX
            jmp .L_423a49
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423c20:

            mov EAX,DWORD PTR [RSP+40]
            mov R9D,R15D
            mov DWORD PTR [RSP+64],EAX
.L_423c2b:

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1+4],0
            mov RAX,QWORD PTR [R13+216]
            add RAX,RBX
            add DWORD PTR [RAX+8],EBP
            add RBX,QWORD PTR [R13+216]
            add DWORD PTR [RBX+12],R14D
            jmp .L_423b88
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423c68:

            mov EDI,DWORD PTR [RSP+32]
            lea ESI,DWORD PTR [RDI-1]
            jmp .L_423995
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423c78:

            mov RAX,R10
            mov R10D,R11D
            mov R11D,R15D
            mov R15,RAX
            mov EAX,R10D
            sub EAX,R11D
            cmp EAX,1
            jbe .L_423ca8

            mov RAX,QWORD PTR [R9+200]
            cmp R11D,R10D
            mov QWORD PTR [RSP+8],RAX
            jb .L_423dd0

            nop
            nop
            nop
            nop
.L_423ca8:

            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_424665

            add RSP,200
.L_423cc6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423cd8:

            mov EDI,DWORD PTR [RSP+168]
.L_423cdf:

            mov R8D,DWORD PTR [RSP+120]
            sub R8D,EDI
            mov EDI,R8D
            shr EDI,31
            add EDI,R8D
            sar EDI,1
            add EDI,DWORD PTR [RSP+92]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
.L_423cfb:

            cmp ECX,34
            ja .L_423c20

            lea RDI,QWORD PTR [RIP+.L_449cb8]
            movsxd RCX,DWORD PTR [RDI+RCX*4]
            add RCX,RDI
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423d18:

            add DWORD PTR [RSP+40],EAX
            sub R15D,EAX
.L_423d1f:

            mov ECX,DWORD PTR [RSP+40]
            sub ECX,DWORD PTR [RSP+172]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setg SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_423f49

            mov EAX,ECX
            shr EAX,31
            add EAX,ECX
            sar EAX,1
            neg EAX
            add DWORD PTR [RSP+40],EAX
            sub R15D,EAX
            add EAX,ECX
            mov DWORD PTR [RDX+12],EAX
.L_423d5c:

            mov R9D,DWORD PTR [RSP+172]
            mov EAX,DWORD PTR [RSP+40]
            sub EAX,R9D
            add R9D,R15D
            mov DWORD PTR [RSP+64],EAX
            jmp .L_423c2b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423d80:

            sub R15D,EAX
.L_423d83:

            mov ESI,DWORD PTR [RSP+40]
            lea ECX,DWORD PTR [RSI+R15*1]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setle SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_423f51

            sub R15D,ECX
            mov DWORD PTR [RDX+12],0
.L_423db0:

            add R15D,DWORD PTR [RSP+172]
            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+64],EAX
            mov R9D,R15D
            jmp .L_423c2b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423dd0:

            mov R14D,R10D
            mov R13,R9
            jmp .L_423dec
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423de0:

            cmp R14D,R12D
            mov R11D,R12D
            jbe .L_423ca8
.L_423dec:

            mov EAX,R11D
            lea R12D,DWORD PTR [R11+1]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RSP+8]
            lea R9,QWORD PTR [RCX*4]
            movzx EDX,WORD PTR [RAX+R9*1+16]
            mov EAX,7168
            bt EAX,EDX
            jb .L_423de0

            cmp R14D,R12D
            jbe .L_423f59

            mov R10D,R12D
            mov RSI,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [R10+R10*4]
            shl RBP,2
            movzx EDX,WORD PTR [RSI+RBP*1+16]
            bt EAX,EDX
            jae .L_423f59

            lea EAX,DWORD PTR [R11+2]
            mov EBX,R12D
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4+16]
            mov ESI,7168
            jmp .L_423e64
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423e58:

            movzx EDX,WORD PTR [RAX]
            add RAX,20
            bt ESI,EDX
            jae .L_423e6c
.L_423e64:

            add EBX,1
            cmp R14D,EBX
            ja .L_423e58
.L_423e6c:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+24],R11D
            mov QWORD PTR [RSP+16],R9
            mov RDI,R15
            mov QWORD PTR [RSP+32],R10
            mov RSI,QWORD PTR [R15+160]
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R9,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+24]
            jne .L_423fb8

            cmp EBX,R12D
            mov RCX,QWORD PTR [R13+200]
            jbe .L_423f24

            mov EAX,EBX
            mov R10,QWORD PTR [RSP+32]
            sub EAX,R11D
            sub EAX,2
            lea RAX,QWORD PTR [R10+RAX*1+1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            shl RDX,2
            nop
.L_423ef0:

            movzx EAX,WORD PTR [RCX+RBP*1+16]
            and EAX,31
            cmp AX,12
            jne .L_423f1b

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBP*1+4],0
.L_423f1b:

            add RBP,20
            cmp RDX,RBP
            jne .L_423ef0
.L_423f24:

            mov R12D,EBX
            jmp .L_423de0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423f30:

            mov EDI,DWORD PTR [RSP+92]
            add EDI,DWORD PTR [RSP+120]
            sub EDI,DWORD PTR [RSP+168]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_423cfb
.L_423f49:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_423d5c
.L_423f51:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_423db0
.L_423f59:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+24],R11D
            mov QWORD PTR [RSP+16],R9
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov EBX,R12D
            mov EDX,DWORD PTR [RAX+RCX*4]
            mov RAX,QWORD PTR [R15+152]
            lea RCX,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            je .L_423f24

            mov R9,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+24]
            nop
            nop
            nop
            nop
.L_423fb8:

            mov RCX,QWORD PTR [R13+216]
            mov EDI,1
            mov DWORD PTR [RSP+24],EDI
            add RCX,R9
            mov EAX,DWORD PTR [RCX+8]
            add EAX,DWORD PTR [RSP+144]
            mov DWORD PTR [RSP+144],EAX
            mov DWORD PTR [RSP+52],EAX
            mov EAX,DWORD PTR [RCX+12]
            add EAX,DWORD PTR [RSP+148]
            mov DWORD PTR [RSP+148],EAX
            mov DWORD PTR [RSP+80],EAX
            mov RAX,QWORD PTR [R13+200]
            add R9,RAX
            movzx ESI,BYTE PTR [R9+14]
            mov EDX,ESI
            sar ESI,5
            test BYTE PTR [R9+12],4
            mov DWORD PTR [RSP+124],ESI
            je .L_424023

            mov ESI,EDX
            and ESI,15
            and EDX,16
            cmove ESI,EDI
            mov DWORD PTR [RSP+24],ESI
.L_424023:

            mov EDX,DWORD PTR [R13+144]
            xor R10D,R10D
            xor R9D,R9D
            and EDX,4294967293
            cmp EDX,4
            jne .L_424046

            mov EDX,DWORD PTR [RCX+4]
            mov R9D,DWORD PTR [RCX]
            neg EDX
            neg R9D
            mov R10D,EDX
.L_424046:

            mov ESI,DWORD PTR [RSP+152]
            mov EDI,DWORD PTR [RSP+156]
            cmp EBX,R12D
            mov DWORD PTR [RSP+72],ESI
            mov DWORD PTR [RSP+96],EDI
            jbe .L_423f24

            mov ECX,R12D
            mov DWORD PTR [RSP+88],ESI
            mov ESI,DWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+RCX*4]
            mov DWORD PTR [RSP+104],R14D
            mov DWORD PTR [RSP+64],EDI
            mov R14D,R10D
            mov DWORD PTR [RSP+40],255
            mov R10,R15
            lea R12,QWORD PTR [RAX+RDX*4+16]
            mov EDX,EBX
            mov DWORD PTR [RSP+56],ESI
            sub EDX,R11D
            mov ESI,DWORD PTR [RSP+52]
            mov DWORD PTR [RSP+92],0
            sub EDX,2
            mov DWORD PTR [RSP+120],4294967295
            mov DWORD PTR [RSP+112],EBX
            add RDX,RCX
            mov EBP,R9D
            lea RDX,QWORD PTR [RDX+RDX*4]
            mov DWORD PTR [RSP+84],ESI
            lea RCX,QWORD PTR [RAX+RDX*4+36]
            mov RDX,-16
            sub RDX,RAX
            mov QWORD PTR [RSP+16],RCX
            mov R15,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4240e0:

            movzx ECX,WORD PTR [R12]
            mov EAX,7168
            lea RBX,QWORD PTR [R15+R12*1]
            shr EAX,CL
            and EAX,1
            je .L_424328

            movzx EDX,CH
            test EDX,EDX
            je .L_424328

            mov R9D,DWORD PTR [RSP+24]
            cmp R9D,1
            jbe .L_4243b8

            movzx EDI,BYTE PTR [R12-2]
            test DIL,16
            jne .L_424150

            mov R11D,DWORD PTR [RSP+124]
            mov ESI,EDI
            sar EDI,5
            and ESI,15
            sub ESI,1
            cmp EDI,R11D
            setne R8B
            cmp R9D,ESI
            setbe DIL
            or R8B,DIL
            jne .L_424150

            test R11D,R11D
            jne .L_424157

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424150:

            mov ESI,DWORD PTR [RSP+24]
            sub ESI,1
.L_424157:

            cmp ESI,DWORD PTR [RSP+120]
            je .L_4243b8

            mov EDX,DWORD PTR [RSP+92]
            mov EDI,DWORD PTR [RSP+148]
            mov R11D,DWORD PTR [RSP+144]
            mov R8D,DWORD PTR [RSP+152]
            mov R9D,DWORD PTR [RSP+156]
            mov DWORD PTR [RSP+40],EAX
            test EDX,EDX
            mov DWORD PTR [RSP+32],EDI
            jne .L_4241f5

            mov RDI,QWORD PTR [RSP+136]
            mov EAX,DWORD PTR [RDI]
            mov DWORD PTR [RSP+92],EAX
            and EAX,4294967294
            cmp EAX,4
            je .L_4241f5

            mov EDI,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+96],R10
            mov DWORD PTR [RSP+120],R8D
            mov DWORD PTR [RSP+72],R11D
            mov DWORD PTR [RSP+80],ESI
            mov DWORD PTR [RSP+52],R9D
            call .L_405a10

            movzx ECX,WORD PTR [R12]
            mov DWORD PTR [RSP+92],EAX
            mov EAX,7168
            mov R10,QWORD PTR [RSP+96]
            mov R8D,DWORD PTR [RSP+120]
            mov R11D,DWORD PTR [RSP+72]
            mov ESI,DWORD PTR [RSP+80]
            mov R9D,DWORD PTR [RSP+52]
            shr EAX,CL
            and EAX,1
            mov DWORD PTR [RSP+40],EAX
.L_4241f5:

            cmp DWORD PTR [RSP+92],4
            je .L_424530

            mov EDI,DWORD PTR [RSP+24]
            xor EDX,EDX
            lea EAX,DWORD PTR [RDI-1]
            sub EAX,ESI
            imul EAX,R8D
            div EDI
            add EAX,R11D
            mov DWORD PTR [RSP+52],EAX
.L_424218:

            xor EDX,EDX
            mov EAX,R8D
            div DWORD PTR [RSP+24]
            mov DWORD PTR [RSP+72],EAX
            mov EAX,DWORD PTR [RSP+40]
            test EAX,EAX
            jne .L_424399

            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+120],ESI
            mov DWORD PTR [RSP+96],R9D
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+88],EAX
            mov EAX,DWORD PTR [RSP+52]
            mov DWORD PTR [RSP+84],EAX
.L_424252:

            mov RAX,QWORD PTR [R13+200]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+64],R9D
            mov RSI,QWORD PTR [R10+160]
            mov RDI,R10
            mov QWORD PTR [RSP+56],R10
            lea RCX,QWORD PTR [RSP+160]
            mov EDX,DWORD PTR [RAX+RBX*1]
            mov RAX,QWORD PTR [R10+152]
            movaps XMMWORD PTR [RSP+160],XMM0
            mov R8,QWORD PTR [RAX+200]
            call QWORD PTR [RAX+424]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+56]
            mov R9D,DWORD PTR [RSP+64]
            je .L_4243f8

            mov EDX,DWORD PTR [R10+140]
            mov ESI,DWORD PTR [RSP+40]
            lea EAX,DWORD PTR [RDX+15]
            test EDX,EDX
            lea ECX,DWORD PTR [RSI-200]
            cmovns EAX,EDX
            mov RDX,QWORD PTR [R13+216]
            sar EAX,4
            add RDX,RBX
            cmp ECX,34
            mov QWORD PTR [RDX+8],0
            mov ESI,DWORD PTR [RSP+160]
            jbe .L_4244a4

            mov EDI,DWORD PTR [RSP+168]
.L_4242ef:

            mov R8D,DWORD PTR [RSP+88]
            sub R8D,EDI
            mov EDI,R8D
            shr EDI,31
            add EDI,R8D
            sar EDI,1
            add EDI,DWORD PTR [RSP+84]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
.L_42430b:

            cmp ECX,34
            ja .L_4243f8

            lea RSI,QWORD PTR [RIP+.L_449d44]
            movsxd RCX,DWORD PTR [RSI+RCX*4]
            add RCX,RSI
            jmp RCX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424328:

            mov EAX,DWORD PTR [R13+144]
            add RBX,QWORD PTR [R13+216]
            and EAX,4294967293
            cmp EAX,4
            mov ECX,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+4]
            je .L_424370

            add EBP,ECX
            add R14D,EDX
.L_424348:

            add R12,20
            cmp R12,QWORD PTR [RSP+16]
            jne .L_4240e0

            mov EBX,DWORD PTR [RSP+112]
            mov R14D,DWORD PTR [RSP+104]
            mov R15,R10
            mov R12D,EBX
            jmp .L_423de0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424370:

            sub EBP,ECX
            sub R14D,EDX
            jmp .L_424348
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424380:

            mov EAX,ESI
            xor EDX,EDX
            imul EAX,R8D
            div DWORD PTR [RSP+32]
            add EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+56],EAX
            jmp .L_423a0f
.L_424399:

            mov EAX,DWORD PTR [RSP+32]
            movzx EDX,CH
            mov DWORD PTR [RSP+120],ESI
            mov DWORD PTR [RSP+96],R9D
            mov DWORD PTR [RSP+40],255
            mov DWORD PTR [RSP+80],EAX
            nop
            nop
            nop
.L_4243b8:

            cmp EDX,DWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+56]
            mov R9D,DWORD PTR [RSP+64]
            mov DWORD PTR [RSP+32],EAX
            je .L_424252

            mov EAX,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+40],EDX
            mov R9D,DWORD PTR [RSP+96]
            mov DWORD PTR [RSP+88],EAX
            mov EAX,DWORD PTR [RSP+80]
            mov DWORD PTR [RSP+32],EAX
            mov EAX,DWORD PTR [RSP+52]
            mov DWORD PTR [RSP+84],EAX
            jmp .L_424252
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4243f8:

            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+64],R9D
            mov DWORD PTR [RSP+56],EAX
.L_424405:

            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1],0
            mov RAX,QWORD PTR [R13+216]
            mov DWORD PTR [RAX+RBX*1+4],0
            mov RAX,QWORD PTR [R13+216]
            add RAX,RBX
            add DWORD PTR [RAX+8],EBP
            add RBX,QWORD PTR [R13+216]
            add DWORD PTR [RBX+12],R14D
            jmp .L_424348
.L_42443f:

            mov EDI,DWORD PTR [RSP+92]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_423cfb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424450:

            mov EDI,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+112],R11
            mov QWORD PTR [RSP+104],R10
            mov DWORD PTR [RSP+88],R9D
            mov DWORD PTR [RSP+84],R8D
            mov DWORD PTR [RSP+72],ESI
            call .L_405a10

            movzx ECX,WORD PTR [R12]
            mov DWORD PTR [RSP+96],EAX
            mov EAX,7168
            mov R11,QWORD PTR [RSP+112]
            mov R10,QWORD PTR [RSP+104]
            mov R9D,DWORD PTR [RSP+88]
            mov R8D,DWORD PTR [RSP+84]
            mov ESI,DWORD PTR [RSP+72]
            shr EAX,CL
            and EAX,1
            mov DWORD PTR [RSP+52],EAX
            jmp .L_4239eb
.L_4244a4:

            mov R8D,1
            movabs RDI,4299227136
            shl R8,CL
            test R8,RDI
            jne .L_4245ef

            test R8D,268697601
            jne .L_424615

            movabs R11,25769803776
            mov EDI,DWORD PTR [RSP+168]
            test R8,R11
            je .L_4242ef

            mov R8D,DWORD PTR [R13+144]
            cmp R8D,4
            je .L_424644

            cmp R8D,5
            jne .L_4242ef

            mov R8D,EDI
            mov R11D,DWORD PTR [RSP+88]
            add R11D,DWORD PTR [RSP+84]
            shr R8D,31
            add EDI,R8D
            sar EDI,1
            sub R11D,EDI
            sub R11D,ESI
            mov DWORD PTR [RDX+8],R11D
            jmp .L_42430b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424530:

            mov EAX,ESI
            xor EDX,EDX
            imul EAX,R8D
            div DWORD PTR [RSP+24]
            add EAX,R11D
            mov DWORD PTR [RSP+52],EAX
            jmp .L_424218
.L_424548:

            add DWORD PTR [RSP+32],EAX
            sub R9D,EAX
.L_42454f:

            mov ECX,DWORD PTR [RSP+32]
            sub ECX,DWORD PTR [RSP+172]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setg SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_424608

            mov EAX,ECX
            shr EAX,31
            add EAX,ECX
            sar EAX,1
            neg EAX
            add DWORD PTR [RSP+32],EAX
            sub R9D,EAX
            add EAX,ECX
            mov DWORD PTR [RDX+12],EAX
.L_42458c:

            mov EAX,DWORD PTR [RSP+172]
            mov ESI,DWORD PTR [RSP+32]
            sub ESI,EAX
            add EAX,R9D
            mov DWORD PTR [RSP+56],ESI
            mov DWORD PTR [RSP+64],EAX
            jmp .L_424405
.L_4245a9:

            sub R9D,EAX
.L_4245ac:

            mov ESI,DWORD PTR [RSP+32]
            lea ECX,DWORD PTR [R9+RSI*1]
            sub ECX,DWORD PTR [RSP+164]
            test EAX,EAX
            setle SIL
            test ECX,ECX
            setg AL
            cmp SIL,AL
            je .L_424610

            sub R9D,ECX
            mov DWORD PTR [RDX+12],0
.L_4245d5:

            add R9D,DWORD PTR [RSP+172]
            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+56],EAX
            mov DWORD PTR [RSP+64],R9D
            jmp .L_424405
.L_4245ef:

            mov EDI,DWORD PTR [RSP+88]
            add EDI,DWORD PTR [RSP+84]
            sub EDI,DWORD PTR [RSP+168]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42430b
.L_424608:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_42458c
.L_424610:

            mov DWORD PTR [RDX+12],ECX
            jmp .L_4245d5
.L_424615:

            mov EDI,DWORD PTR [RSP+84]
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42430b
.L_424623:

            mov R8D,EDI
            shr R8D,31
            add EDI,R8D
            mov R8D,DWORD PTR [RSP+92]
            sar EDI,1
            sub R8D,EDI
            mov EDI,R8D
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_423cfb
.L_424644:

            mov R8D,EDI
            shr R8D,31
            add EDI,R8D
            mov R8D,DWORD PTR [RSP+84]
            sar EDI,1
            sub R8D,EDI
            mov EDI,R8D
            sub EDI,ESI
            mov DWORD PTR [RDX+8],EDI
            jmp .L_42430b
.L_424665:

            call __stack_chk_fail@PLT
.L_42466a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_424670:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,312
.L_424681:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+1092],2
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+40],RDX
            jne .L_4246d0
.L_4246a7:

            mov RAX,QWORD PTR [RSP+296]
            xor RAX,QWORD PTR FS:[40]
            jne .L_424e3c

            add RSP,312
.L_4246c5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4246d0:

            mov RAX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSP+88],RSI
            mov RSI,RDX
            mov QWORD PTR [RSP+104],RDX
            mov EDX,DWORD PTR [RDX+144]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+80],1
            mov BYTE PTR [RSP+120],1
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [RAX+160]
            mov DWORD PTR [RSP+112],EDX
            mov QWORD PTR [RSP+128],0
            movaps XMMWORD PTR [RSP+240],XMM0
            mov RDX,QWORD PTR [RAX+24]
            mov DWORD PTR [RSP+136],3
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+208],XMM0
            movaps XMMWORD PTR [RSP+224],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movzx EAX,BYTE PTR [RDX+4]
            mov QWORD PTR [RSP+144],RDX
            movzx EDX,BYTE PTR [RDX+5]
            mov BYTE PTR [RSP+188],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov DWORD PTR [RSP+248],4294967295
            mov BYTE PTR [RSP+252],0
            shl EAX,8
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            add AX,DX
            mov EAX,4294967295
            lea RDX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+288],RAX
            mov EAX,DWORD PTR [RDI+1088]
            setne BYTE PTR [RSP+152]
            mov DWORD PTR [RSP+116],EAX
            mov DWORD PTR [RSP+140],8
            mov DWORD PTR [RSP+184],EAX
            mov RAX,RSI
            mov ESI,DWORD PTR [RSI+184]
            mov RCX,QWORD PTR [RAX+200]
            mov QWORD PTR [RSP+168],RDX
            mov DWORD PTR [RSP+176],8
            mov QWORD PTR [RSP+232],RDX
            test ESI,ESI
            mov DWORD PTR [RSP+240],8
            mov BYTE PTR [RSP+244],1
            mov QWORD PTR [RSP+64],RCX
            mov RCX,QWORD PTR [RAX+216]
            mov BYTE PTR [RSP+245],1
            mov BYTE PTR [RSP+180],1
            mov BYTE PTR [RSP+181],1
            mov DWORD PTR [RSP+32],ESI
            mov QWORD PTR [RSP+72],RCX
            je .L_4246a7

            xor R15D,R15D
            mov R12D,ESI
            mov DWORD PTR [RSP+20],8
            mov R14,RDX
            mov R11D,R15D
            nop
            nop
            nop
            nop
.L_424878:

            cmp DWORD PTR [RAX+180],R11D
            mov DWORD PTR [RSP+160],R11D
            mov DWORD PTR [RSP+216],1
            mov DWORD PTR [RSP+220],R12D
            mov BYTE PTR [RSP+15],0
            mov DWORD PTR [RSP+8],0
            jne .L_4248c7

            mov R9,QWORD PTR [RAX+200]
            mov EDX,R11D
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [R9+RDX*4]
            movzx EAX,BYTE PTR [RDX+15]
            mov BYTE PTR [RSP+15],AL
            mov DWORD PTR [RSP+8],EAX
.L_4248c7:

            movzx EAX,BYTE PTR [RSP+15]
            mov ESI,DWORD PTR [RSP+20]
            mov EBX,R11D
            mov DWORD PTR [RSP+16],R11D
            mov BYTE PTR [RSP+188],AL
            mov EAX,ESI
            shr EAX,16
            mov DWORD PTR [RSP+52],EAX
            lea RAX,QWORD PTR [RAX*4+2]
            mov QWORD PTR [RSP+56],RAX
            mov EAX,ESI
            and EAX,16
            mov DWORD PTR [RSP+36],EAX
            mov EAX,ESI
            and ESI,14
            and EAX,65280
            mov R13D,ESI
            mov DWORD PTR [RSP+48],EAX
            nop
.L_424910:

            lea EAX,DWORD PTR [RBX+1]
            lea RBP,QWORD PTR [RAX+RAX*4]
            mov RBX,RAX
            xor EAX,EAX
            lea EDX,DWORD PTR [RBX-1]
            shl RBP,2
            cmp EBX,R12D
            jae .L_424a18
.L_42492c:

            mov RAX,QWORD PTR [R14+24]
            mov RDI,QWORD PTR [RAX+200]
            add RDI,RBP
            movzx ECX,WORD PTR [RDI+12]
            mov RAX,RDI
            test ECX,R13D
            mov EDX,ECX
            jne .L_424a00

            test CL,8
            mov EDI,DWORD PTR [RDI]
            jne .L_4249d8
.L_424957:

            movzx R8D,WORD PTR [RAX+16]
            mov ECX,DWORD PTR [RAX+4]
            and ECX,DWORD PTR [RSP+184]
            mov DWORD PTR [RSP+160],EBX
            mov ESI,R8D
            and ESI,96
            cmp SI,32
            je .L_424a7b

            nop
            nop
            nop
.L_424980:

            test ECX,ECX
            je .L_42499e

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            je .L_424a30

            movzx EDX,BYTE PTR [RSP+15]
            cmp BYTE PTR [RAX+15],DL
            je .L_424a30
.L_42499e:

            mov R11D,DWORD PTR [RSP+16]
.L_4249a3:

            add R11D,1
.L_4249a7:

            cmp DWORD PTR [RSP+32],R11D
            jbe .L_4246a7

            mov R14,QWORD PTR [RSP+168]
            mov EDI,DWORD PTR [RSP+176]
            mov RAX,QWORD PTR [R14+24]
            mov DWORD PTR [RSP+20],EDI
            mov R12D,DWORD PTR [RAX+184]
            jmp .L_424878
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4249d8:

            mov R8D,DWORD PTR [RSP+36]
            test R8D,R8D
            jne .L_424be8

            mov ESI,DWORD PTR [RSP+48]
            test ESI,ESI
            je .L_424957

            xor ECX,DWORD PTR [RSP+20]
            and CH,255
            je .L_424957

            nop
.L_424a00:

            add EBX,1
            add RBP,20
            mov EAX,1
            cmp EBX,R12D
            lea EDX,DWORD PTR [RBX-1]
            jb .L_42492c
.L_424a18:

            test AL,AL
            mov R11D,DWORD PTR [RSP+16]
            je .L_4249a3

            mov DWORD PTR [RSP+160],EDX
            jmp .L_4249a3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424a30:

            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+192]
            test RAX,RAX
            je .L_424b08

            xor R15D,R15D
.L_424a50:

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP]
            call RAX

            test AL,AL
            jne .L_424b08

            test R15D,R15D
            je .L_42499e
.L_424a6f:

            mov EBX,DWORD PTR [RSP+160]
            jmp .L_424910
.L_424a7b:

            and EDX,32
            jne .L_424980

            cmp BYTE PTR [RSP+180],0
            jne .L_424ae0

            mov EDX,R8D
            and EDX,31
            cmp DX,1
            je .L_424d60
.L_424a9e:

            test ECX,ECX
            je .L_424a6f

            cmp DWORD PTR [RSP+8],0
            je .L_424ab3

            movzx ECX,BYTE PTR [RSP+15]
            cmp BYTE PTR [RAX+15],CL
            jne .L_424a6f
.L_424ab3:

            mov RAX,QWORD PTR [RSP+208]
            mov R15D,2
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+192]
            test RAX,RAX
            jne .L_424a50

            jmp .L_424a6f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ae0:

            cmp BYTE PTR [RSP+181],0
            jne .L_424a9e

            mov EDX,R8D
            and EDX,31
            cmp DX,1
            jne .L_424a9e
.L_424af6:

            test R8W,256
            jne .L_424980

            jmp .L_424a9e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424b08:

            mov R11D,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+64]
            mov R13,QWORD PTR [RSP]
            mov DWORD PTR [RSP+216],0
            mov EAX,R11D
            mov ECX,DWORD PTR [RDI+RBP*1]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add R13,2
            mov QWORD PTR [RSP+208],R13
            mov EDX,DWORD PTR [RDI+RAX*4]
            mov RDI,QWORD PTR [RSP+24]
            lea R12,QWORD PTR [RAX*4]
            mov RSI,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR [RDI+152]
            mov RDI,QWORD PTR [RSP+40]
            mov EDI,DWORD PTR [RDI+144]
            mov DWORD PTR [RSP],EDI
            and EDI,4294967294
            cmp EDI,4
            je .L_424ba8

            mov R8,QWORD PTR [RAX+192]
            mov RDI,QWORD PTR [RSP+24]
            call QWORD PTR [RAX+416]

            test EAX,EAX
            je .L_424b9a

            mov RCX,QWORD PTR [RSP+72]
            mov EDX,EAX
            sar EDX,1
            sub EAX,EDX
            add DWORD PTR [RCX+R12*1+4],EDX
            add RBP,RCX
            add DWORD PTR [RBP+4],EAX
            add DWORD PTR [RBP+12],EAX
.L_424b9a:

            mov R11D,EBX
            jmp .L_4249a7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424ba8:

            mov R8,QWORD PTR [RAX+184]
            mov RDI,QWORD PTR [RSP+24]
            call QWORD PTR [RAX+408]

            test EAX,EAX
            mov R11D,EBX
            je .L_4249a7

            mov RSI,QWORD PTR [RSP+72]
            mov EDX,EAX
            sar EDX,1
            sub EAX,EDX
            add DWORD PTR [RSI+R12*1],EDX
            add RBP,RSI
            add DWORD PTR [RBP],EAX
            add DWORD PTR [RBP+8],EAX
            jmp .L_4249a7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424be8:

            mov RCX,QWORD PTR [R14+64]
            movzx ESI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            movzx R9D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R8D
            movzx R8D,BYTE PTR [RCX+2]
            shl ESI,16
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            add ESI,R8D
            cmp ESI,65537
            jbe .L_424a00

            movzx ESI,BYTE PTR [RCX+12]
            movzx R8D,BYTE PTR [RCX+13]
            shl ESI,8
            add ESI,R8D
            movzx R8D,SI
            add RCX,R8
            test SI,SI
            lea RSI,QWORD PTR [RIP+.L_657640]
            cmove RCX,RSI
            movzx ESI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,R8D
            cmp SI,1
            jne .L_424a00

            movzx ESI,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            mov R10,QWORD PTR [RSP+56]
            shl ESI,8
            add ESI,R8D
            lea R8,QWORD PTR [RCX+R10*1+2]
            lea R10,QWORD PTR [RIP+.L_657640]
            movzx ESI,SI
            cmp ESI,DWORD PTR [RSP+52]
            cmovbe R8,R10
            movzx ESI,BYTE PTR [R8]
            movzx R9D,BYTE PTR [R8+1]
            shl ESI,24
            shl R9D,16
            add ESI,R9D
            movzx R9D,BYTE PTR [R8+2]
            movzx R8D,BYTE PTR [R8+3]
            shl R9D,8
            add ESI,R9D
            add R8D,ESI
            add RCX,R8
            test R8D,R8D
            cmove RCX,R10
            movzx ESI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,R8D
            cmp SI,1
            je .L_424d7f

            cmp SI,2
            jne .L_424a00

            movzx ESI,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            shl ESI,8
            add ESI,R8D
            movzx ESI,SI
            lea R11D,DWORD PTR [RSI-1]
            mov DWORD PTR [RSP],ESI
            cmp R11D,-1
            je .L_424a00

            add RCX,2
            xor R15D,R15D
            jmp .L_424d2f
.L_424d07:

            movzx ESI,BYTE PTR [R8+2]
            movzx R8D,BYTE PTR [R8+3]
            shl ESI,8
            add ESI,R8D
            movzx ESI,SI
            cmp EDI,ESI
            jbe .L_424de8

            lea R15D,DWORD PTR [R9+1]
.L_424d26:

            cmp R15D,R11D
            jg .L_424a00
.L_424d2f:

            lea R9D,DWORD PTR [R15+R11*1]
            sar R9D,1
            movsxd RSI,R9D
            lea RSI,QWORD PTR [RSI+RSI*2]
            lea R8,QWORD PTR [RCX+RSI*2+2]
            movzx ESI,BYTE PTR [R8]
            movzx R10D,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,R10D
            movzx ESI,SI
            cmp EDI,ESI
            jae .L_424d07

            lea R11D,DWORD PTR [R9-1]
            jmp .L_424d26
          .byte 0x66
          .byte 0x90
.L_424d60:

            test R8W,512
            jne .L_424980

            cmp BYTE PTR [RSP+181],0
            jne .L_424a9e

            jmp .L_424af6
.L_424d7f:

            movzx R9D,BYTE PTR [RCX+2]
            movzx ESI,BYTE PTR [RCX+3]
            shl R9D,8
            add R9D,ESI
            movzx R9D,R9W
            sub R9D,1
            cmp R9D,-1
            je .L_424a00

            add RCX,2
            xor R10D,R10D
            jmp .L_424dbd
.L_424daa:

            je .L_424957

            lea R10D,DWORD PTR [R8+1]
.L_424db4:

            cmp R10D,R9D
            jg .L_424a00
.L_424dbd:

            lea R8D,DWORD PTR [R9+R10*1]
            sar R8D,1
            movsxd RSI,R8D
            lea R11,QWORD PTR [RCX+RSI*2+2]
            movzx ESI,BYTE PTR [R11]
            movzx R11D,BYTE PTR [R11+1]
            shl ESI,8
            add ESI,R11D
            movzx ESI,SI
            cmp EDI,ESI
            jns .L_424daa

            lea R9D,DWORD PTR [R8-1]
            jmp .L_424db4
.L_424de8:

            cmp R9D,DWORD PTR [RSP]
            jb .L_424e08

            mov ECX,EDI
            mov ESI,1
.L_424df5:

            sub ECX,ESI
            cmp ECX,-1
            jne .L_424957

            jmp .L_424a00
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424e08:

            mov R9D,R9D
            lea RSI,QWORD PTR [R9+R9*2]
            lea R8,QWORD PTR [RCX+RSI*2+2]
            movzx ESI,BYTE PTR [R8]
            movzx ECX,BYTE PTR [R8+1]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R8+4]
            movzx R8D,BYTE PTR [R8+5]
            movzx ESI,SI
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            add ECX,EDI
            jmp .L_424df5
.L_424e3c:

            call __stack_chk_fail@PLT
.L_424e41:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424e50:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+144]
            and EAX,4294967294
            cmp EAX,4
            je .L_424ea0
.L_424e7c:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42506d

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_424ea0:

            mov EAX,DWORD PTR [RDX+184]
            mov RBX,QWORD PTR [RDX+200]
            mov RBP,QWORD PTR [RDX+216]
            test EAX,EAX
            je .L_424e7c

            sub EAX,1
            mov R15,RSI
            add RBX,16
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R12,QWORD PTR [RIP+.L_449dd0]
            lea R14,QWORD PTR [RBP+RAX*4+20]
            lea RAX,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_424eed
          .byte 0x66
          .byte 0x90
.L_424ee0:

            add RBP,20
            add RBX,20
            cmp RBP,R14
            je .L_424e7c
.L_424eed:

            movzx EAX,WORD PTR [RBX]
            mov EDX,EAX
            and EDX,31
            cmp DX,29
            jne .L_424ee0

            test BYTE PTR [RBX-4],32
            jne .L_424ee0

            mov ECX,EAX
            sar ECX,8
            cmp ECX,21
            ja .L_424ee0

            mov EDX,ECX
            movsxd RDX,DWORD PTR [R12+RDX*4]
            add RDX,R12
            jmp RDX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f20:

            mov R13D,48
            jmp .L_424f3a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f30:

            add R13D,1
            cmp R13D,58
            je .L_424ee0
.L_424f3a:

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+20],0
            mov EDX,R13D
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            je .L_424f30
.L_424f6c:

            mov RAX,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov EDX,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [RBP],EAX
            jmp .L_424ee0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424fa0:

            mov EAX,DWORD PTR [R15+136]
            lea ECX,DWORD PTR [RAX*4]
            mov EAX,954437177
            imul ECX
            sar ECX,31
            sar EDX,2
            sub EDX,ECX
            mov DWORD PTR [RBP],EDX
            jmp .L_424ee0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424fc8:

            sar EAX,9
            add EAX,DWORD PTR [R15+136]
            cdq 
            idiv ECX
            mov DWORD PTR [RBP],EAX
            jmp .L_424ee0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424fe0:

            mov EDX,DWORD PTR [RBP]
            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            mov DWORD PTR [RBP],EAX
            jmp .L_424ee0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424ff8:

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+20],0
            mov EDX,46
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_424f6c

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+20],0
            mov EDX,44
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            test EAX,EAX
            jne .L_424f6c

            jmp .L_424ee0
.L_42506d:

            call __stack_chk_fail@PLT
.L_425072:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425080:

            mov EAX,1
            ret 
.L_425086:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425090:

            ret 
.L_425092:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4250a0:

            mov EAX,1
            ret 
.L_4250a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4250b0:

            ret 
.L_4250b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4250c0:

            mov EAX,1
            ret 
.L_4250c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4250d0:

            ret 
.L_4250d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4250e0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov RDI,R15
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,72
.L_4250f7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+152]
            mov QWORD PTR [RSP+24],RDX
            lea RCX,QWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSI+160]
            mov EDX,32
            mov DWORD PTR [RSP+44],0
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            mov RDI,RBX
            mov DWORD PTR [RSP+4],EAX
            call .L_402760

            mov EAX,DWORD PTR [RBX+184]
            mov EDI,DWORD PTR [RBX+144]
            mov RBP,QWORD PTR [RBX+200]
            mov RBX,QWORD PTR [RBX+216]
            test EAX,EAX
            mov DWORD PTR [RSP+20],EDI
            je .L_4252e1

            sub EAX,1
            and EDI,4294967294
            lea R14,QWORD PTR [RSP+52]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R13,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+16],EDI
            lea RAX,QWORD PTR [RBP+RAX*4+20]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_425190:

            mov EAX,DWORD PTR [RSP+4]
            mov EDX,DWORD PTR [RBP]
            test EAX,EAX
            jne .L_425418
.L_42519f:

            mov DWORD PTR [RBP],0
            mov RAX,QWORD PTR [R15+152]
            mov RCX,RBP
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov R8,QWORD PTR [RAX+136]
            call QWORD PTR [RAX+360]

            cmp DWORD PTR [RSP+16],4
            mov EDX,DWORD PTR [RBP]
            je .L_425320

            mov DWORD PTR [RBX],0
            mov RAX,QWORD PTR [R15+152]
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RAX+160]
            call QWORD PTR [RAX+384]

            mov DWORD PTR [RBX+4],EAX
            mov R12D,DWORD PTR [RBP]
            mov R8,R14
            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+52],0
            mov RCX,R13
            mov DWORD PTR [RSP+48],0
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov EDX,R12D
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_4252c0

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+52],0
            mov R8,R14
            mov DWORD PTR [RSP+48],0
            mov RSI,QWORD PTR [R15+160]
            mov RCX,R13
            mov EDX,R12D
            mov RDI,R15
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_4252c0

            mov RAX,QWORD PTR [R15+152]
            mov EDX,R12D
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [R15+140]
            add ECX,DWORD PTR [RSP+52]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            add EAX,DWORD PTR [RSP+48]
            mov EDX,ECX
            mov DWORD PTR [RSP+52],ECX
            mov DWORD PTR [RSP+48],EAX
            jmp .L_4252c8
          .byte 0x90
.L_4252c0:

            mov EAX,DWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+52]
.L_4252c8:

            sub DWORD PTR [RBX+8],EAX
            sub DWORD PTR [RBX+12],EDX
.L_4252ce:

            add RBP,20
            add RBX,20
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_425190
.L_4252e1:

            mov EAX,DWORD PTR [RSP+20]
            and EAX,4294967293
            cmp EAX,5
            je .L_4254e8
.L_4252f1:

            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_4255e3

            add RSP,72
.L_42530e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425320:

            mov RAX,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+160]
            mov RDI,R15
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov DWORD PTR [RBX+4],0
            mov DWORD PTR [RBX],EAX
            mov R8,R14
            mov R12D,DWORD PTR [RBP]
            mov RAX,QWORD PTR [R15+152]
            mov RCX,R13
            mov DWORD PTR [RSP+52],0
            mov DWORD PTR [RSP+48],0
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,R12D
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_4252c0

            mov RAX,QWORD PTR [R15+152]
            mov DWORD PTR [RSP+52],0
            mov R8,R14
            mov DWORD PTR [RSP+48],0
            mov RSI,QWORD PTR [R15+160]
            mov RCX,R13
            mov EDX,R12D
            mov RDI,R15
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_4252c0

            mov RAX,QWORD PTR [R15+152]
            mov EDX,R12D
            mov RDI,R15
            mov RSI,QWORD PTR [R15+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP+48]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+52]
            sub EDX,DWORD PTR [R15+140]
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
            mov DWORD PTR [RSP+48],EDI
            mov DWORD PTR [RSP+52],EDX
            jmp .L_4252c8

            nop
            nop
            nop
            nop
            nop
.L_425418:

            mov EAX,EDX
            shr EAX,16
            test EAX,EAX
            jne .L_425498

            mov EAX,EDX
            shr EAX,8
            cmp EAX,23
            je .L_425580

            jbe .L_4254c0

            cmp EAX,32
            je .L_425530

            jbe .L_425500

            cmp EAX,254
            je .L_425598

            cmp EAX,255
            jne .L_42519f

            lea EAX,DWORD PTR [RDX-65520]
            cmp EAX,8
            setbe AL
            movzx EAX,AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425470:

            test EAX,EAX
            je .L_42519f
.L_425478:

            mov EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RBP],EAX
            mov DWORD PTR [RBX],0
            mov DWORD PTR [RBX+4],0
            jmp .L_4252ce
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425498:

            cmp EAX,1
            je .L_4255c0

            cmp EAX,14
            jne .L_42519f

            lea EAX,DWORD PTR [RDX-917504]
            cmp EAX,4095
            setbe AL
            movzx EAX,AL
            jmp .L_425470
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4254c0:

            cmp EAX,3
            je .L_425520

            cmp EAX,6
            je .L_425568

            test EAX,EAX
            jne .L_42519f

            xor EAX,EAX
            cmp EDX,173
            sete AL
            jmp .L_425470
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4254e8:

            mov RDI,QWORD PTR [RSP+24]
            call .L_403960

            jmp .L_4252f1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425500:

            cmp EAX,24
            jne .L_42519f

            lea EAX,DWORD PTR [RDX-6155]
            cmp EAX,3
            setbe AL
            movzx EAX,AL
            jmp .L_425470
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425520:

            xor EAX,EAX
            cmp EDX,847
            sete AL
            jmp .L_425470
.L_425530:

            lea EAX,DWORD PTR [RDX-8203]
            cmp EAX,4
            jbe .L_425478

            lea EAX,DWORD PTR [RDX-8234]
            cmp EAX,4
            jbe .L_425478

            lea EAX,DWORD PTR [RDX-8288]
            cmp EAX,15
            setbe AL
            movzx EAX,AL
            jmp .L_425470
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425568:

            xor EAX,EAX
            cmp EDX,1564
            sete AL
            jmp .L_425470
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425580:

            lea EAX,DWORD PTR [RDX-6068]
            cmp EAX,1
            setbe AL
            movzx EAX,AL
            jmp .L_425470
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425598:

            lea EAX,DWORD PTR [RDX-65024]
            cmp EAX,15
            setbe AL
            cmp EDX,65279
            sete CL
            or EAX,ECX
            movzx EAX,AL
            jmp .L_425470
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4255c0:

            lea EAX,DWORD PTR [RDX-113824]
            cmp EAX,3
            jbe .L_425478

            lea EAX,DWORD PTR [RDX-119155]
            cmp EAX,7
            setbe AL
            movzx EAX,AL
            jmp .L_425470
.L_4255e3:

            call __stack_chk_fail@PLT
.L_4255e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4255f0:

            sub RSP,8
            mov EDI,ESI
            mov ECX,19
            mov ESI,1
            call g_unichar_fully_decompose@PLT

            add RSP,8
            ret 
.L_42560a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_425610:

            mov EDI,ESI
            mov RSI,RDX
            mov RDX,RCX
            jmp g_unichar_decompose@PLT
.L_42561d:

            nop
            nop
            nop
.L_425620:

            mov EDI,ESI
            mov ESI,EDX
            mov RDX,RCX
            jmp g_unichar_compose@PLT
.L_42562c:

            nop
            nop
            nop
            nop
.L_425630:

            sub RSP,8
            mov EDI,ESI
            call g_unichar_get_script@PLT

            add RSP,8
            mov EDI,EAX
            jmp g_unicode_script_to_iso15924@PLT
.L_425646:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425650:

            sub RSP,24
            mov EDI,ESI
            mov DWORD PTR [RSP+12],ESI
            lea RSI,QWORD PTR [RSP+12]
            call g_unichar_get_mirror_char@PLT

            mov EAX,DWORD PTR [RSP+12]
            add RSP,24
            ret 
.L_42566d:

            nop
            nop
            nop
.L_425670:

            mov EDI,ESI
            jmp g_unichar_type@PLT
.L_425677:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425680:

            sub RSP,8
            mov EDI,ESI
            call g_unichar_iswide@PLT

            test EAX,EAX
            setne AL
            add RSP,8
            movzx EAX,AL
            add EAX,1
            ret 
.L_42569b:

            nop
            nop
            nop
            nop
            nop
.L_4256a0:

            mov EDI,ESI
            jmp g_unichar_combining_class@PLT
.L_4256a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256b0:

            jmp g_unicode_script_to_iso15924@PLT
.L_4256b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256c0:

            jmp g_unicode_script_from_iso15924@PLT
.L_4256c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256d0:

            lea RAX,QWORD PTR [RIP+.L_656ca0]
            ret 
.L_4256d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256e0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_4256e9:

            mov RSI,RSP
            mov QWORD PTR [RSP],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call g_bytes_get_data@PLT

            mov RDI,RBX
            mov RBP,RAX
            call g_bytes_ref@PLT

            mov R8,QWORD PTR [RIP+g_bytes_unref@GOTPCREL]
            mov ESI,DWORD PTR [RSP]
            mov EDX,1
            mov RCX,RAX
            mov RDI,RBP
            call .L_401a90

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_425745

            add RSP,24
.L_425742:

            pop RBX
            pop RBP
            ret 
.L_425745:

            call __stack_chk_fail@PLT
.L_42574a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_425750:

            push RBX

            mov ESI,8312
            mov EDI,1
            lea RBX,QWORD PTR [RIP+.L_44a020]
            call calloc@PLT

            test RAX,RAX
            je .L_4257ca

            lea RDI,QWORD PTR [RAX+8]
            mov RBX,RAX
            xor ESI,ESI
            mov DWORD PTR [RAX],1
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RBX],-1
            pxor XMM0,XMM0
            movups XMMWORD PTR [RBX+48],XMM0
            movups XMMWORD PTR [RBX+64],XMM0
            movups XMMWORD PTR [RBX+80],XMM0
            movups XMMWORD PTR [RBX+96],XMM0
            je .L_4257ca

            lea RDI,QWORD PTR [RBX+124]
            mov EAX,EBX
            and RDI,-8
            mov BYTE PTR [RBX+112],0
            mov QWORD PTR [RBX+116],0
            sub EAX,EDI
            mov QWORD PTR [RBX+8300],0
            lea ECX,DWORD PTR [RAX+8308]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]
.L_4257ca:

            mov RAX,RBX
            pop RBX

            ret 
.L_4257cf:

            nop
.L_4257d0:

            lea RAX,QWORD PTR [RIP+.L_44a020]
            ret 
.L_4257d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4257e0:

            test RDI,RDI
            je .L_4257f4

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4257f4

            test EAX,EAX
            jle .L_425800

            lock add DWORD PTR [RDI],1
.L_4257f4:

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425800:

            lea RCX,QWORD PTR [RIP+.L_449fe0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,160
            call __assert_fail@PLT
.L_425823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425830:

            test RDI,RDI
            je .L_425860

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_425860

            test EAX,EAX
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            jle .L_425868

            lock sub DWORD PTR [RDI],1
            je .L_425890

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425860:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425868:

            lea RCX,QWORD PTR [RIP+.L_449fa0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,170
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425890:

            mov EAX,DWORD PTR [RDI+48]
            mov DWORD PTR [RDI],4294910291
            lea RBP,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+64]
            test EAX,EAX
            jne .L_4258e0

            mov RDI,QWORD PTR [RDI+56]
            cmp RDI,R12
            je .L_4258b3

            call free@PLT
.L_4258b3:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
.L_4258c3:

            mov RDI,RBP
            call pthread_mutex_destroy@PLT

            mov RDI,RBX
            pop RBX
.L_4258cf:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4258e0:

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            je .L_42592e
.L_4258ef:

            lea EDX,DWORD PTR [RAX-1]
            mov RDI,RBP
            mov RAX,RDX
            lea RCX,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+56]
            lea RDX,QWORD PTR [RDX+RCX*8]
            mov R14,QWORD PTR [RDX+16]
            mov R13,QWORD PTR [RDX+8]
            mov DWORD PTR [RBX+48],EAX
            call pthread_mutex_unlock@PLT

            test R14,R14
            je .L_4258e0

            mov RDI,R13
            call R14

            mov RDI,RBP
            call pthread_mutex_lock@PLT

            mov EAX,DWORD PTR [RBX+48]
            test EAX,EAX
            jne .L_4258ef
.L_42592e:

            mov RDI,QWORD PTR [RBX+56]
            cmp RDI,R12
            je .L_42593c

            call free@PLT
.L_42593c:

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+56],0
            mov RDI,RBP
            call pthread_mutex_unlock@PLT

            jmp .L_4258c3
.L_425959:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425960:

            test RDI,RDI
            je .L_425988

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_425988

            sub RSP,8
            test EAX,EAX
            jle .L_425990

            add RDI,8
            call .L_405b70

            add RSP,8
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425988:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425990:

            lea RCX,QWORD PTR [RIP+.L_449ec0]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            mov EDX,187
            call __assert_fail@PLT
.L_4259af:

            nop
.L_4259b0:

            test RDI,RDI
            je .L_4259f8

            mov EAX,DWORD PTR [RDI]
            cmp EAX,-1
            je .L_4259f8

            test EAX,EAX
            jle .L_4259d0

            add RDI,8
            jmp .L_405e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4259d0:

            lea RCX,QWORD PTR [RIP+.L_449e40]
            lea RSI,QWORD PTR [RIP+.L_43e340]
            lea RDI,QWORD PTR [RIP+.L_43e355]
            sub RSP,8
            mov EDX,197
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4259f8:

            xor EAX,EAX
            ret 
.L_4259fb:

            nop
            nop
            nop
            nop
            nop
.L_425a00:

            movzx EAX,BYTE PTR [RDI+112]
            xor EAX,1
            movzx EAX,AL
            ret 
.L_425a0b:

            nop
            nop
            nop
            nop
            nop
.L_425a10:

            cmp DWORD PTR [RDI],-1
            mov RAX,RDI
            je .L_425a47

            mov BYTE PTR [RDI+112],0
            mov QWORD PTR [RDI+116],0
            lea RDI,QWORD PTR [RDI+124]
            mov QWORD PTR [RDI+8176],0
            and RDI,-8
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+8308]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]
.L_425a47:

            ret 
.L_425a49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425a50:

            lea RAX,QWORD PTR [RDI+116]
            add RDI,8308
            jmp .L_425a69

            nop
            nop
            nop
.L_425a60:

            add RAX,4
            cmp RAX,RDI
            je .L_425a78
.L_425a69:

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            je .L_425a60

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425a78:

            mov EAX,1
            ret 
.L_425a7e:

            nop
            nop
.L_425a80:

            xor EAX,EAX
            cmp ESI,65535
            ja .L_425aa2

            mov EAX,ESI
            mov EDX,1
            mov ECX,ESI
            shr EAX,5
            shl EDX,CL
            test DWORD PTR [RDI+RAX*4+116],EDX
            setne AL
            movzx EAX,AL
.L_425aa2:

            ret 
.L_425aa4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ab0:

            cmp ESI,65535
            ja .L_425abe

            cmp BYTE PTR [RDI+112],0
            je .L_425ac0
.L_425abe:

            ret 
.L_425ac0:

            mov EAX,ESI
            mov EDX,1
            mov ECX,ESI
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [RDI+RAX*4+116],EDX
            ret 
.L_425ad3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ae0:

            cmp BYTE PTR [RDI+112],0
            mov ECX,ESI
            jne .L_425b15

            add EDX,1
            cmp ESI,EDX
            jae .L_425b15

            mov R8D,1
            nop
            nop
            nop
.L_425af8:

            cmp ECX,65535
            ja .L_425b0e

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            or DWORD PTR [RDI+RAX*4+116],ESI
.L_425b0e:

            add ECX,1
            cmp ECX,EDX
            jne .L_425af8
.L_425b15:

            ret 
.L_425b17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b20:

            cmp BYTE PTR [RDI+112],0
            jne .L_425b2e

            cmp ESI,65535
            jbe .L_425b30
.L_425b2e:

            ret 
.L_425b30:

            mov EDX,ESI
            mov EAX,1
            mov ECX,ESI
            shr EDX,5
            shl EAX,CL
            not EAX
            and DWORD PTR [RDI+RDX*4+116],EAX
            ret 
.L_425b45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b50:

            cmp BYTE PTR [RDI+112],0
            mov ECX,ESI
            jne .L_425b87

            add EDX,1
            cmp ESI,EDX
            jae .L_425b87

            mov R8D,1
            nop
            nop
            nop
.L_425b68:

            cmp ECX,65535
            ja .L_425b80

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            not ESI
            and DWORD PTR [RDI+RAX*4+116],ESI
.L_425b80:

            add ECX,1
            cmp EDX,ECX
            jne .L_425b68
.L_425b87:

            ret 
.L_425b89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b90:

            mov EAX,116
            jmp .L_425bac
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425ba0:

            add RAX,4
            cmp RAX,8308
            je .L_425bc0
.L_425bac:

            mov EDX,DWORD PTR [RSI+RAX*1]
            cmp DWORD PTR [RDI+RAX*1],EDX
            je .L_425ba0

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425bc0:

            mov EAX,1
            ret 
.L_425bc6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425bd0:

            cmp BYTE PTR [RDI+112],0
            jne .L_425bf2

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_425be0:

            mov EDX,DWORD PTR [RSI+RAX*1]
            mov DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_425be0
.L_425bf2:

            ret 
.L_425bf4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425c00:

            cmp BYTE PTR [RDI+112],0
            jne .L_425c22

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_425c10:

            mov EDX,DWORD PTR [RSI+RAX*1]
            or DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_425c10
.L_425c22:

            ret 
.L_425c24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425c30:

            cmp BYTE PTR [RDI+112],0
            jne .L_425c52

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_425c40:

            mov EDX,DWORD PTR [RSI+RAX*1]
            and DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_425c40
.L_425c52:

            ret 
.L_425c54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425c60:

            cmp BYTE PTR [RDI+112],0
            jne .L_425c84

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_425c70:

            mov EDX,DWORD PTR [RSI+RAX*1]
            not EDX
            and DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_425c70
.L_425c84:

            ret 
.L_425c86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425c90:

            cmp BYTE PTR [RDI+112],0
            jne .L_425cb2

            mov EAX,116
            nop
            nop
            nop
            nop
            nop
.L_425ca0:

            mov EDX,DWORD PTR [RSI+RAX*1]
            xor DWORD PTR [RDI+RAX*1],EDX
            add RAX,4
            cmp RAX,8308
            jne .L_425ca0
.L_425cb2:

            ret 
.L_425cb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425cc0:

            cmp BYTE PTR [RDI+112],0
            jne .L_425ce3

            lea RAX,QWORD PTR [RDI+116]
            lea RDX,QWORD PTR [RDI+8308]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425cd8:

            not DWORD PTR [RAX]
            add RAX,4
            cmp RAX,RDX
            jne .L_425cd8
.L_425ce3:

            ret 
.L_425ce5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425cf0:

            push R12
            lea R12,QWORD PTR [RDI+8308]
            push RBP
            push RBX
            lea RBX,QWORD PTR [RDI+116]
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425d08:

            mov EDI,DWORD PTR [RBX]
            add RBX,4
            call __popcountdi2@PLT

            add EBP,EAX
            cmp RBX,R12
            jne .L_425d08

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_425d21:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425d30:

            xor ECX,ECX
.L_425d32:

            mov EDX,DWORD PTR [RDI+RCX*4+116]
            mov ESI,ECX
            test EDX,EDX
            jne .L_425d50
.L_425d3c:

            add RCX,1
            cmp RCX,2048
            jne .L_425d32

            mov EAX,4294967295
            ret 
          .byte 0x90
.L_425d50:

            xor EAX,EAX
            jmp .L_425d60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425d58:

            add EAX,1
            cmp EAX,32
            je .L_425d3c
.L_425d60:

            bt EDX,EAX
            jae .L_425d58

            shl ESI,5
            add EAX,ESI
            ret 
.L_425d6b:

            nop
            nop
            nop
            nop
            nop
.L_425d70:

            add RDI,8304
            mov ECX,2048
.L_425d7c:

            mov EDX,DWORD PTR [RDI]
            test EDX,EDX
            jne .L_425d98
.L_425d82:

            sub RDI,4
            sub ECX,1
            jne .L_425d7c

            mov EAX,4294967295
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425d98:

            mov EAX,32
            jmp .L_425da4
          .byte 0x90
.L_425da0:

            test EAX,EAX
            je .L_425d82
.L_425da4:

            sub EAX,1
            bt EDX,EAX
            jae .L_425da0

            add ECX,134217727
            shl ECX,5
            add EAX,ECX
            ret 
.L_425db8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425dc0:

            mov ECX,DWORD PTR [RSI]
            cmp ECX,-1
            je .L_425e20

            add ECX,1
            cmp ECX,65535
            ja .L_425e0b

            mov EAX,1
            shl EAX,CL
            mov EDX,EAX
            mov EAX,ECX
            shr EAX,5
            test DWORD PTR [RDI+RAX*4+116],EDX
            jne .L_425e18

            mov R8D,1
            jmp .L_425e00
          .byte 0x66
          .byte 0x90
.L_425df0:

            mov EAX,ECX
            mov EDX,R8D
            shr EAX,5
            shl EDX,CL
            test DWORD PTR [RDI+RAX*4+116],EDX
            jne .L_425e18
.L_425e00:

            add ECX,1
            cmp ECX,65536
            jne .L_425df0
.L_425e0b:

            mov DWORD PTR [RSI],4294967295
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425e18:

            mov DWORD PTR [RSI],ECX
            mov EAX,1
            ret 
.L_425e20:

            xor ECX,ECX
.L_425e22:

            mov EDX,DWORD PTR [RDI+RCX*4+116]
            mov R8D,ECX
            test EDX,EDX
            jne .L_425e40
.L_425e2d:

            add RCX,1
            cmp RCX,2048
            jne .L_425e22

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425e40:

            xor EAX,EAX
            jmp .L_425e50
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425e48:

            add EAX,1
            cmp EAX,32
            je .L_425e2d
.L_425e50:

            bt EDX,EAX
            jae .L_425e48

            shl R8D,5
            add EAX,R8D
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            ret 
.L_425e64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425e70:

            mov ECX,DWORD PTR [RDX]
            cmp ECX,-1
            je .L_425f68

            add ECX,1
            cmp ECX,65535
            ja .L_425ec5

            mov EAX,1
            shl EAX,CL
            mov R8D,EAX
            mov EAX,ECX
            shr EAX,5
            test DWORD PTR [RDI+RAX*4+116],R8D
            jne .L_425f00

            mov R9D,1
            jmp .L_425eba
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425ea8:

            mov EAX,ECX
            mov R8D,R9D
            shr EAX,5
            shl R8D,CL
            test DWORD PTR [RDI+RAX*4+116],R8D
            jne .L_425f00
.L_425eba:

            add ECX,1
            cmp ECX,65536
            jne .L_425ea8
.L_425ec5:

            mov DWORD PTR [RSI],4294967295
            xor EAX,EAX
            mov DWORD PTR [RDX],4294967295
            ret 
.L_425ed4:

            xor EAX,EAX
            jmp .L_425eec
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425ee0:

            add EAX,1
            cmp EAX,32
            je .L_425f7c
.L_425eec:

            bt R8D,EAX
            jae .L_425ee0

            shl ECX,5
            add ECX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425f00:

            mov DWORD PTR [RSI],ECX
            mov R8D,1
            mov DWORD PTR [RDX],ECX
            nop
            nop
            nop
            nop
            nop
            nop
.L_425f10:

            add ECX,1
            cmp ECX,65536
            je .L_425f4b

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            test DWORD PTR [RDI+RAX*4+116],ESI
            je .L_425f40

            jmp .L_425f58
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425f30:

            mov EAX,ECX
            mov ESI,R8D
            shr EAX,5
            shl ESI,CL
            test DWORD PTR [RDI+RAX*4+116],ESI
            jne .L_425f58
.L_425f40:

            add ECX,1
            cmp ECX,65536
            jne .L_425f30
.L_425f4b:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425f58:

            mov EAX,DWORD PTR [RDX]
            add EAX,1
            cmp EAX,ECX
            jne .L_425f4b

            mov DWORD PTR [RDX],ECX
            jmp .L_425f10
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425f68:

            xor R9D,R9D
.L_425f6b:

            mov R8D,DWORD PTR [RDI+R9*4+116]
            mov ECX,R9D
            test R8D,R8D
            jne .L_425ed4
.L_425f7c:

            add R9,1
            cmp R9,2048
            jne .L_425f6b

            jmp .L_425ec5
.L_425f8e:

            nop
            nop
.L_425f90:

            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,EDI
            sete AL
            ret 
.L_425fa5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425fb0:

            mov EAX,ESI
            push R15
            push R14
            lea RAX,QWORD PTR [RAX+RAX*4]
            push R13
            push R12
            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+RAX*4]
            sub RSP,8
.L_425fc8:

            movsx EAX,WORD PTR [RBP+16]
            test EAX,EAX
            je .L_426028

            movzx R12D,BYTE PTR [RBP+18]
            lea R14D,DWORD PTR [RSI+RAX*1]
            xor EAX,EAX
            mov WORD PTR [RBP+16],AX
            mov EBX,ESI
            mov R13D,EDX
            mov ESI,R14D
            mov R15,RDI
            call .L_425fb0

            mov EDX,R12D
            and EDX,1
            and R12D,2
            setne AL
            cmp DL,AL
            je .L_4260f3

            mov EDI,R14D
            test R12B,R12B
            lea RAX,QWORD PTR [RDI+RDI*4]
            lea RAX,QWORD PTR [R15+RAX*4]
            je .L_426040

            and R13D,4294967294
            cmp R13D,4
            je .L_4260e8

            mov EAX,DWORD PTR [RAX+8]
            add DWORD PTR [RBP+8],EAX
.L_426028:

            add RSP,8
.L_42602c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426040:

            mov EDX,DWORD PTR [RAX+8]
            add EDX,DWORD PTR [RBP+8]
            mov DWORD PTR [RBP+8],EDX
            mov ECX,DWORD PTR [RAX+12]
            add ECX,DWORD PTR [RBP+12]
            cmp EBX,R14D
            mov DWORD PTR [RBP+12],ECX
            jbe .L_426112

            and R13D,4294967293
            cmp R13D,4
            je .L_4260b0

            lea EAX,DWORD PTR [R14+1]
            lea ESI,DWORD PTR [RBX+1]
            cmp ESI,EAX
            jbe .L_426028

            sub EBX,1
            lea RSI,QWORD PTR [RAX+RAX*4]
            sub EBX,R14D
            add RAX,RBX
            lea RSI,QWORD PTR [R15+RSI*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R15+RAX*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_426090:

            add EDX,DWORD PTR [RSI]
            add RSI,20
            mov DWORD PTR [RBP+8],EDX
            add ECX,DWORD PTR [RSI-16]
            cmp RSI,RAX
            mov DWORD PTR [RBP+12],ECX
            jne .L_426090

            jmp .L_426028
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4260b0:

            sub EBX,1
            sub EBX,R14D
            add RDI,RBX
            lea RSI,QWORD PTR [RDI+RDI*4]
            lea RSI,QWORD PTR [R15+RSI*4+20]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4260c8:

            sub EDX,DWORD PTR [RAX]
            add RAX,20
            mov DWORD PTR [RBP+8],EDX
            sub ECX,DWORD PTR [RAX-16]
            cmp RSI,RAX
            mov DWORD PTR [RBP+12],ECX
            jne .L_4260c8

            jmp .L_426028
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4260e8:

            mov EAX,DWORD PTR [RAX+12]
            add DWORD PTR [RBP+12],EAX
            jmp .L_426028
.L_4260f3:

            lea RCX,QWORD PTR [RIP+.L_44c560]
            lea RSI,QWORD PTR [RIP+.L_44c098]
            lea RDI,QWORD PTR [RIP+.L_44c0d8]
            mov EDX,1567
            call __assert_fail@PLT
.L_426112:

            lea RCX,QWORD PTR [RIP+.L_44c560]
            lea RSI,QWORD PTR [RIP+.L_44c098]
            lea RDI,QWORD PTR [RIP+.L_44c0b3]
            mov EDX,1581
            call __assert_fail@PLT
.L_426131:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426140:

            push R12
            push RBP
            mov R12,-1
            push RBX
            mov RBP,RDI
.L_42614e:

            mfence 
            mov RBX,QWORD PTR [RBP+160]
            test RBX,RBX
            je .L_426170

            sub RBX,1
            cmp RBX,-3
            setbe AL
.L_426168:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426170:

            mov RDI,RBP
            call .L_4106c0

            test RAX,RAX
            mov RDI,RAX
            lea RDX,QWORD PTR [RBP+160]
            je .L_4261b8

            mov RAX,RBX
            lock cmpxchg QWORD PTR [RDX],RDI
            lea RAX,QWORD PTR [RDI-1]
            sete CL
            cmp RAX,-3
            setbe DL
            test CL,CL
            mov EAX,EDX
            jne .L_426168

            cmp RDI,1
            je .L_42614e

            test DL,DL
            je .L_42614e

            call .L_4106d0

            jmp .L_42614e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4261b8:

            lock cmpxchg QWORD PTR [RDX],R12
            jne .L_42614e

            xor EAX,EAX
            jmp .L_426168
.L_4261c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4261d0:

            cmp ESI,1196445523
            push RBX
            mov RBX,RDI
            je .L_426210

            cmp ESI,1196643650
            lea RAX,QWORD PTR [RIP+.L_657760]
            jne .L_4261fe

            call .L_426140

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_657760]
            jne .L_426200
.L_4261fb:

            mov RAX,RDX
.L_4261fe:

            pop RBX
            ret 
.L_426200:

            mov RAX,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RAX+32]
            mov RAX,RDX
            jmp .L_4261fe
.L_426210:

            call .L_426140

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_657760]
            je .L_4261fb

            mov RAX,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RAX+40]
            mov RAX,RDX
            jmp .L_4261fe
.L_426230:

            movzx ECX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl ECX,8
            add ECX,EAX
            xor EAX,EAX
            movzx R9D,CX
            lea ECX,DWORD PTR [R9-1]
            cmp ECX,2
            jbe .L_426250
.L_42624c:

            ret 
          .byte 0x66
          .byte 0x90
.L_426250:

            movzx ECX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp ESI,ECX
            jb .L_42624c

            movzx R8D,BYTE PTR [RDI+2]
            movzx R10D,BYTE PTR [RDI+3]
            shl R8D,8
            add R8D,R10D
            movzx R8D,R8W
            cmp ESI,R8D
            ja .L_42624c

            push RBP
.L_426280:

            mov R11D,ESI
            push RBX
.L_426284:

            mov EBX,4
            sub R11D,ECX
            mov R8D,1
            sub EBX,R9D
            mov EAX,R11D
            mov R10D,16
            mov ECX,EBX
            shr EAX,CL
            mov ECX,R9D
            lea RBP,QWORD PTR [RDI+RAX*2+6]
            mov EAX,R8D
            mov EDI,65535
            shl EAX,CL
            mov ECX,R10D
            sub ECX,EAX
            movzx EAX,BYTE PTR [RBP]
            shr EDI,CL
            movzx ECX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,ECX
            mov ECX,EBX
            shl R8D,CL
            mov ECX,R9D
            movzx EAX,AX
            sub R8D,1
            and R8D,R11D
            add R8D,1
            shl R8D,CL
            mov ECX,R10D
            sub ECX,R8D
            lea R8D,DWORD PTR [RDI+1]
            shr EAX,CL
            and EAX,EDI
            not EDI
            shr R8D,1
            mov ECX,EAX
            lea EAX,DWORD PTR [RAX+RDI*1]
            cmp ECX,R8D
            cmovb EAX,ECX
            test EAX,EAX
            je .L_426313

            movsxd RDX,EDX
            cdqe 
            mov ESI,ESI
            imul RAX,RDX
            cqo 
            idiv RSI
.L_426313:

            pop RBX
.L_426314:

            pop RBP
            ret 
.L_426316:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426320:

            mov RSI,QWORD PTR [RDI+8]
            mov EDX,DWORD PTR [RDI+16]
            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_426347

            lea RCX,QWORD PTR [RSI+RDX*2+4]
.L_426347:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            ret 
.L_426354:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426360:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_426371:

            mov R14,QWORD PTR [RDI+24]
            mov QWORD PTR [RSP+8],RDX
            xor EDX,EDX
            mov DWORD PTR [RSP+16],ESI
            cmp BYTE PTR [R14+177],0
            mov EAX,DWORD PTR [R14+180]
            je .L_42639e

            mov ESI,DWORD PTR [R14+188]
            mov EDX,ESI
            sub EDX,EAX
            mov EAX,ESI
.L_42639e:

            add EAX,R9D
            mov DWORD PTR [RSP+40],EAX
            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            je .L_4263d3

            mov EBX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            lea ESI,DWORD PTR [RBX-1]
            mov RAX,RDI
            lea RSI,QWORD PTR [RDI+RSI*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4263c8:

            add DWORD PTR [RAX],EDX
            add RAX,4
            cmp RAX,RSI
            jne .L_4263c8
.L_4263d3:

            test ECX,ECX
            je .L_426631

            cmp BYTE PTR [R14+176],0
            jne .L_426631

            lea EAX,DWORD PTR [RCX-1]
            mov R13,R8
            lea RAX,QWORD PTR [R8+RAX*4]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426400:

            movzx EBX,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            shl EBX,8
            add EBX,EAX
            movzx R8D,BX
            cmp R8D,DWORD PTR [RSP+16]
            jae .L_426618

            test R8D,R8D
            jne .L_426442

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,DWORD PTR [R15+208]
            je .L_426618
.L_426442:

            mov RAX,QWORD PTR [RSP+8]
            movzx EBX,BX
            mov RDI,R14
            mov DWORD PTR [RSP+20],R8D
            lea RBP,QWORD PTR [RAX+RBX*4]
            mov ESI,DWORD PTR [RBP]
            call .L_402aa0

            cmp BYTE PTR [R14+177],0
            mov R12D,DWORD PTR [R14+180]
            mov R8D,DWORD PTR [RSP+20]
            mov R9D,R12D
            je .L_42647e

            mov R9D,DWORD PTR [R14+188]
.L_42647e:

            mov EAX,DWORD PTR [R14+184]
            movzx ESI,BYTE PTR [R13+2]
            mov EDI,DWORD PTR [R15+56]
            mov DWORD PTR [RSP+36],R9D
            mov DWORD PTR [RSP+32],R8D
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R13+3]
            shl ESI,8
            add ESI,EAX
            test EDI,EDI
            movzx ESI,SI
            je .L_426618

            mov RAX,QWORD PTR [R15+48]
            test RAX,RAX
            je .L_426618

            sub EDI,1
            mov DWORD PTR [R15+56],EDI
            mov RDI,R15
            call RAX

            add DWORD PTR [R15+56],1
            test AL,AL
            je .L_426618

            cmp BYTE PTR [R14+177],0
            mov ESI,DWORD PTR [R14+180]
            mov R8D,DWORD PTR [RSP+32]
            mov R9D,DWORD PTR [RSP+36]
            mov EAX,ESI
            je .L_4264fb

            mov EAX,DWORD PTR [R14+188]
.L_4264fb:

            mov EDX,DWORD PTR [R14+184]
            add EDX,R12D
            sub EDX,ESI
            sub EDX,DWORD PTR [RSP+20]
            mov R12D,EDX
            sub R12D,R9D
            add R12D,EAX
            je .L_426618

            add DWORD PTR [RSP+40],R12D
            mov EAX,DWORD PTR [RSP+40]
            cmp DWORD PTR [RBP],EAX
            jae .L_42667a

            test R12D,R12D
            lea R9D,DWORD PTR [R8+1]
            jle .L_426658

            mov EAX,DWORD PTR [RSP+16]
            lea R10D,DWORD PTR [R12+RAX*1]
            cmp R10D,64
            ja .L_426631

            lea R11D,DWORD PTR [R12+R9*1]
            mov EAX,R9D
.L_426552:

            mov ECX,DWORD PTR [RSP+16]
            mov EDI,EAX
            mov DWORD PTR [RSP+44],R10D
            mov DWORD PTR [RSP+36],R11D
            mov DWORD PTR [RSP+32],R9D
            mov DWORD PTR [RSP+20],R8D
            sub ECX,EAX
            movsxd RAX,R12D
            lea RDX,QWORD PTR [RCX*4]
            mov RCX,QWORD PTR [RSP+8]
            add RAX,RDI
            lea RSI,QWORD PTR [RCX+RDI*4]
            lea RDI,QWORD PTR [RCX+RAX*4]
            call memmove@PLT

            mov R9D,DWORD PTR [RSP+32]
            mov R11D,DWORD PTR [RSP+36]
            mov R10D,DWORD PTR [RSP+44]
            mov R8D,DWORD PTR [RSP+20]
            cmp R9D,R11D
            mov DWORD PTR [RSP+16],R10D
            jae .L_4265e4

            mov EAX,4294967294
            mov RCX,QWORD PTR [RSP+8]
            sub R9,RBX
            sub EAX,R8D
            add EAX,R11D
            add RAX,RBX
            lea RDX,QWORD PTR [RCX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4265d0:

            mov EAX,DWORD PTR [RBP]
            add EAX,1
            mov DWORD PTR [RBP+R9*4],EAX
            add RBP,4
            cmp RDX,RBP
            jne .L_4265d0
.L_4265e4:

            cmp R10D,R11D
            jbe .L_426618

            sub R10D,R11D
            mov RCX,QWORD PTR [RSP+8]
            mov ESI,R11D
            lea EDX,DWORD PTR [R10-1]
            add RDX,RSI
            lea RAX,QWORD PTR [RCX+RSI*4]
            lea RDX,QWORD PTR [RCX+RDX*4+4]
            nop
            nop
            nop
            nop
.L_426608:

            add DWORD PTR [RAX],R12D
            add RAX,4
            cmp RDX,RAX
            jne .L_426608

            nop
            nop
            nop
            nop
.L_426618:

            cmp QWORD PTR [RSP+24],R13
            je .L_426631

            add R13,4
            cmp BYTE PTR [R14+176],0
            je .L_426400
.L_426631:

            mov ESI,DWORD PTR [RSP+40]
            mov RDI,R14
            call .L_402aa0

            add RSP,56
.L_426641:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426658:

            mov ECX,DWORD PTR [RSP+16]
            mov EAX,R9D
            mov R11D,R9D
            sub EAX,ECX
            cmp R12D,EAX
            cmovl R12D,EAX
            mov EAX,R9D
            sub EAX,R12D
            lea R10D,DWORD PTR [R12+RCX*1]
            jmp .L_426552
.L_42667a:

            je .L_426631

            lea RCX,QWORD PTR [RIP+.L_44c480]
            lea RSI,QWORD PTR [RIP+.L_44c118]
            lea RDI,QWORD PTR [RIP+.L_44c0b9]
            mov EDX,1003
            call __assert_fail@PLT
.L_42669b:

            nop
            nop
            nop
            nop
            nop
.L_4266a0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_4266d0

            cmp AX,3
            je .L_4266f8

            cmp AX,1
            je .L_4266d0

            lea RAX,QWORD PTR [RIP+.L_657760]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4266d0:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_4266f8:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDX,QWORD PTR [RDI+RAX*2+4]
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            add RDX,2
            shl ECX,8
            add CX,SI
            cmove RDX,RAX
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
.L_426743:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426750:

            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EAX,8
            add ESI,EAX
            movzx ESI,SI
            jmp .L_42c250
.L_426764:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426770:

            sub RSP,8
            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            mov ECX,EDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add RDX,RSI
            test AX,AX
            mov ESI,ECX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            setne AL
            add RSP,8
            ret 
.L_4267a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4267b0:

            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            mov RCX,RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add RDX,RSI
            test AX,AX
            mov RSI,RCX
            cmovne RDI,RDX
            jmp .L_42c500
.L_4267db:

            nop
            nop
            nop
            nop
            nop
.L_4267e0:

            push RBX
            mov RBX,RSI
            mov ESI,EDI
            mov RDI,RDX
            call .L_42c7a0

            movzx EDX,BYTE PTR [RBX]
            movzx ECX,BYTE PTR [RBX+1]
            pop RBX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,EAX
            sete AL
            ret 
.L_426804:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426810:

            mov RAX,RDI
            mov RDI,RDX
            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            mov RSI,RAX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            jmp .L_42c8a0
.L_42682d:

            nop
            nop
            nop
.L_426830:

            mov RAX,RDI
            mov RDI,RDX
            movzx EDX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            mov RSI,RAX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            jmp .L_42ca40
.L_42684d:

            nop
            nop
            nop
.L_426850:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_42685e:

            mov R13,QWORD PTR [RDI+24]
            cmp ESI,64
            mov R11,QWORD PTR [RSP+96]
            mov EAX,DWORD PTR [R13+180]
            ja .L_426a0a

            lea RBX,QWORD PTR [RDI+80]
            mov DWORD PTR [RDI+80],EAX
            mov QWORD PTR [RSP],RBX
            lea EBX,DWORD PTR [RSI-1]
            mov DWORD PTR [RDI+136],EBX
            mov RBX,QWORD PTR [RDI+88]
            mov RBX,QWORD PTR [RBX+24]
            mov EBP,DWORD PTR [RBX+184]
            mov DWORD PTR [RDI+140],EBP
            xor EBP,EBP
            cmp EAX,DWORD PTR [RBX+180]
            jne .L_4268bc

            mov R10,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R10+RAX*4]
            movzx EBP,BYTE PTR [RAX+15]
.L_4268bc:

            mov QWORD PTR [RDI+112],RCX
            mov BYTE PTR [RDI+108],BPL
            mov QWORD PTR [RDI+120],R8
            mov QWORD PTR [RDI+128],RDX
            mov EDX,DWORD PTR [R13+180]
            lea RCX,QWORD PTR [RDX+RDX*4]
            mov RAX,RDX
            mov RDX,QWORD PTR [R13+200]
            lea RCX,QWORD PTR [RDX+RCX*4]
            movzx EDX,WORD PTR [RCX+12]
            movzx R12D,BYTE PTR [RCX+14]
            mov EBX,EDX
            shr BX,3
            and EBX,1
            and EDX,4
            mov EDX,R12D
            jne .L_426a20

            sar R12D,5
            test DL,16
            jne .L_426ae0

            mov ECX,EDX
            and ECX,15
            mov DWORD PTR [RSP+12],ECX
.L_42691c:

            mov EBP,1
.L_426921:

            cmp ESI,1
            mov QWORD PTR [RSP+24],R9
            mov DWORD PTR [R11],EAX
            jbe .L_426af2

            lea EAX,DWORD PTR [RSI-2]
            lea R14,QWORD PTR [R11+4]
            lea RAX,QWORD PTR [R11+RAX*4+8]
            mov R15,R14
            mov R14,R13
            mov R13,RDI
            mov QWORD PTR [RSP+16],RAX
            jmp .L_4269ad
          .byte 0x66
          .byte 0x90
.L_426950:

            mov R10D,EAX
            and R10D,15
            cmp ECX,R12D
            setne R11B
            test DL,DL
            je .L_426ab0

            cmp R9D,R10D
            jne .L_426a0a

            test R11B,R11B
            jne .L_426a0a
.L_426978:

            test BL,BL
            movzx EDX,WORD PTR [RSI+12]
            je .L_426989
.L_426980:

            mov EBX,EDX
            shr BX,3
            and EBX,1
.L_426989:

            and EDX,4
            je .L_426997

            test R8B,R8B
            jne .L_426a48
.L_426997:

            mov EDX,1
.L_42699c:

            add EBP,EDX
            add R15,4
            cmp R15,QWORD PTR [RSP+16]
            je .L_426a5e
.L_4269ad:

            mov RDI,QWORD PTR [RSP]
            call .L_42cda0

            test AL,AL
            je .L_426a0a

            mov EAX,DWORD PTR [R13+80]
            mov R9D,DWORD PTR [RSP+12]
            mov DWORD PTR [R15],EAX
            mov EAX,DWORD PTR [R13+80]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RDI,RAX
            mov RAX,QWORD PTR [R14+200]
            lea RSI,QWORD PTR [RAX+RDX*4]
            movzx ECX,BYTE PTR [RSI+14]
            mov EAX,ECX
            sar ECX,5
            test R12D,R12D
            setne R8B
            test R9D,R9D
            setne DL
            and EDX,R8D
            mov R8D,EAX
            and R8D,16
            je .L_426950

            test DL,DL
            je .L_426978
.L_426a0a:

            xor EAX,EAX
.L_426a0c:

            add RSP,40
.L_426a10:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426a20:

            mov EBP,EDX
            sar R12D,5
            mov DWORD PTR [RSP+12],0
            and EBP,15
            and EDX,16
            jne .L_426921

            mov DWORD PTR [RSP+12],EBP
            jmp .L_42691c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426a48:

            mov EDX,EAX
            add R15,4
            and EDX,15
            add EBP,EDX
            cmp R15,QWORD PTR [RSP+16]
            jne .L_4269ad
.L_426a5e:

            mov R13,R14
.L_426a61:

            sub EDI,DWORD PTR [R13+180]
            cmp QWORD PTR [RSP+104],0
            mov RSI,QWORD PTR [RSP+24]
            lea EAX,DWORD PTR [RDI+1]
            mov DWORD PTR [RSI],EAX
            je .L_426a81

            mov RAX,QWORD PTR [RSP+104]
            mov BYTE PTR [RAX],BL
.L_426a81:

            cmp QWORD PTR [RSP+112],0
            mov EAX,1
            je .L_426a0c

            mov RSI,QWORD PTR [RSP+112]
            mov DWORD PTR [RSI],EBP
            add RSP,40
.L_426a9d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426ab0:

            test ECX,ECX
            setne DL
            test R10D,R10D
            setne CL
            test DL,CL
            je .L_426ac8

            test R11B,R11B
            jne .L_426a0a
.L_426ac8:

            test BL,BL
            mov EDX,1
            je .L_42699c

            movzx EDX,WORD PTR [RSI+12]
            jmp .L_426980
          .byte 0x66
          .byte 0x90
.L_426ae0:

            mov EBP,1
            mov DWORD PTR [RSP+12],0
            jmp .L_426921
.L_426af2:

            mov EDI,DWORD PTR [RDI+80]
            jmp .L_426a61
.L_426afa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_426b00:

            push R14
            push R13
            mov RAX,R9
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov R13,R8
            mov RBX,RDI
            mov EBP,ESI
            sub RSP,296
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+288],RCX
            xor ECX,ECX
            mov DWORD PTR [RSP+20],0
            push 0
            push 0
            mov RCX,QWORD PTR [RAX]
            lea R14,QWORD PTR [RSP+40]
            push R14
            mov R8,QWORD PTR [RAX+8]
            lea R9,QWORD PTR [RSP+44]
            call .L_426850

            add RSP,32
            test AL,AL
            je .L_426b74

            mov R9D,DWORD PTR [RSP+12]
            mov R8,R13
            mov ECX,R12D
            mov RDX,R14
            mov ESI,EBP
            mov RDI,RBX
            call .L_426360
.L_426b74:

            mov RSI,QWORD PTR [RSP+280]
            xor RSI,QWORD PTR FS:[40]
            jne .L_426b97

            add RSP,288
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_426b97:

            call __stack_chk_fail@PLT
.L_426b9c:

            nop
            nop
            nop
            nop
.L_426ba0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov RDX,R8
            push RBP
            push RBX
            mov R12D,ESI
            mov ESI,ECX
            mov RBX,RDI
            sub RSP,336
.L_426bbf:

            mov RAX,QWORD PTR [RSP+392]
            mov RBP,QWORD PTR [RSP+416]
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+24],R9D
            mov DWORD PTR [RSP+52],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+408]
            mov RCX,QWORD PTR [RBP]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+320],RAX
            xor EAX,EAX
            push 0
.L_426c0b:

            push 0
            lea R15,QWORD PTR [RSP+72]
            push R15
            mov R8,QWORD PTR [RBP+16]
            lea R9,QWORD PTR [RSP+76]
            call .L_426850

            add RSP,32
            test AL,AL
            jne .L_426c58
.L_426c2a:

            xor EAX,EAX
.L_426c2c:

            mov RCX,QWORD PTR [RSP+312]
            xor RCX,QWORD PTR FS:[40]
            jne .L_426df8

            add RSP,328
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426c58:

            mov RDX,QWORD PTR [RBX+24]
            mov R8,QWORD PTR [RBP+8]
            lea R13,QWORD PTR [RBX+144]
            mov R9,QWORD PTR [RBP]
            cmp BYTE PTR [RDX+177],0
            mov EAX,DWORD PTR [RDX+180]
            jne .L_426d08
.L_426c7e:

            mov RSI,QWORD PTR [RBX+152]
            mov DWORD PTR [RBX+144],EAX
            mov DWORD PTR [RBX+200],R12D
            mov RCX,QWORD PTR [RSI+24]
            mov EDI,DWORD PTR [RCX+184]
            mov DWORD PTR [RBX+204],EDI
            xor EDI,EDI
            cmp EAX,DWORD PTR [RCX+180]
            jne .L_426cbf

            mov RDI,QWORD PTR [RCX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            movzx EDI,BYTE PTR [RAX+15]
.L_426cbf:

            test R12D,R12D
            mov BYTE PTR [RBX+172],DIL
            mov QWORD PTR [RBX+176],R9
            mov QWORD PTR [RBX+184],R8
            mov QWORD PTR [RBX+192],R14
            je .L_426d23

            xor R14D,R14D
            jmp .L_426cf1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426ce8:

            add R14D,1
            cmp R12D,R14D
            je .L_426d18
.L_426cf1:

            mov RDI,R13
            call .L_42d330

            test AL,AL
            jne .L_426ce8

            jmp .L_426c2a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426d08:

            mov EAX,DWORD PTR [RDX+188]
            jmp .L_426c7e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426d18:

            mov RDX,QWORD PTR [RBX+24]
            mov RSI,QWORD PTR [RBX+152]
.L_426d23:

            mov EAX,DWORD PTR [RDX+180]
            mov R9D,DWORD PTR [RSP+44]
            mov RDX,QWORD PTR [RSI+24]
            mov ECX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+24]
            mov R8,QWORD PTR [RBP]
            lea EAX,DWORD PTR [R9+RAX*1-1]
            mov DWORD PTR [RBX+200],ECX
            mov DWORD PTR [RBX+144],EAX
            mov ECX,DWORD PTR [RDX+184]
            mov DWORD PTR [RBX+204],ECX
            cmp EAX,DWORD PTR [RDX+180]
            je .L_426de0

            xor EAX,EAX
.L_426d65:

            mov R12D,DWORD PTR [RSP+16]
            mov BYTE PTR [RBX+172],AL
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBX+176],R8
            mov QWORD PTR [RBX+184],RDI
            test R12D,R12D
            mov QWORD PTR [RBX+192],RAX
            je .L_426dbd

            xor EBP,EBP
            jmp .L_426da0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426d98:

            add EBP,1
            cmp R12D,EBP
            je .L_426db8
.L_426da0:

            mov RDI,R13
            call .L_42cda0

            test AL,AL
            jne .L_426d98

            jmp .L_426c2a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426db8:

            mov R9D,DWORD PTR [RSP+44]
.L_426dbd:

            mov R8,QWORD PTR [RSP+24]
            mov ECX,DWORD PTR [RSP+392]
            mov RDX,R15
            mov ESI,DWORD PTR [RSP+20]
            mov RDI,RBX
            call .L_426360

            jmp .L_426c2c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426de0:

            mov RCX,QWORD PTR [RDX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            movzx EAX,BYTE PTR [RAX+15]
            jmp .L_426d65
.L_426df8:

            call __stack_chk_fail@PLT
.L_426dfd:

            nop
            nop
            nop
.L_426e00:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+56]
            call free@PLT

            mov RDI,QWORD PTR [RBX+64]
            call free@PLT

            mov RDI,QWORD PTR [RBX]
            call .L_401950

            mov RDI,QWORD PTR [RBX+8]
            call .L_401950

            mov RDI,QWORD PTR [RBX+16]
            call .L_401950

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_426e39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e40:

            push RBX
            mov RBX,RDI
            call .L_426140

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_657760]
            je .L_426e5f

            mov RAX,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RAX+24]
.L_426e5f:

            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            pop RBX
            shl EAX,8
            add AX,DX
            setne AL
            movzx EAX,AL
            ret 
.L_426e75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e80:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
.L_426e8b:

            call .L_426140

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_657760]
            je .L_426ea6

            mov RAX,QWORD PTR [RBP+160]
            mov RDX,QWORD PTR [RAX+24]
.L_426ea6:

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,EBX
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne RDI,RDX
            add RSP,8
.L_426ecd:

            pop RBX
            pop RBP
            jmp .L_42c7a0
.L_426ed4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426ee0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ESI
            mov RBX,RDX
            call .L_426140

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_657760]
            je .L_426f08

            mov RAX,QWORD PTR [R12+160]
            mov RDX,QWORD PTR [RAX+24]
.L_426f08:

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBX
            pop RBX
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne RDI,RDX
            mov EDX,EBP
            pop RBP
            pop R12
            jmp .L_42c8a0
.L_426f37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426f40:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,EDX
            mov R12,RCX
            mov RBX,R8
            sub RSP,8
.L_426f5c:

            call .L_426140

            test AL,AL
            lea RDX,QWORD PTR [RIP+.L_657760]
            je .L_426f77

            mov RAX,QWORD PTR [R13+160]
            mov RDX,QWORD PTR [RAX+24]
.L_426f77:

            movzx EAX,BYTE PTR [RDX+6]
            movzx ECX,BYTE PTR [RDX+7]
            lea R13,QWORD PTR [RIP+.L_657760]
            mov ESI,R14D
            mov R15,R13
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne R13,RDX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R13
            test AX,AX
            cmove RDI,R15
            call .L_42c320

            cmp EAX,-1
            je .L_4270a8

            movzx EDX,BYTE PTR [R13+2]
            movzx ECX,BYTE PTR [R13+3]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_427040
.L_426fde:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ECX,AX
            add R13,RCX
            test AX,AX
            cmovne RDX,R13
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            test R12,R12
            movzx EAX,AX
            je .L_42702f

            cmp EBP,EAX
            jbe .L_427050

            mov DWORD PTR [R12],0
.L_427020:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_42702f:

            add RSP,8
.L_427033:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_427040:

            mov EAX,EAX
            lea R15,QWORD PTR [R13+RAX*2+4]
            jmp .L_426fde
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427050:

            mov ECX,DWORD PTR [R12]
            sub EAX,EBP
            cmp EAX,ECX
            cmova EAX,ECX
            add RBP,RBP
            lea RCX,QWORD PTR [RDX+2]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            je .L_427020

            sub EAX,1
            lea RCX,QWORD PTR [RCX+RBP*1+1]
            lea RDI,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427080:

            movzx EAX,BYTE PTR [RCX-1]
            movzx ESI,BYTE PTR [RCX]
            add RBX,4
            add RCX,2
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            mov DWORD PTR [RBX-4],EAX
            cmp RDI,RBX
            jne .L_427080

            jmp .L_427020
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4270a8:

            xor EAX,EAX
            test R12,R12
            je .L_42702f

            mov DWORD PTR [R12],0
            add RSP,8
.L_4270bf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4270ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4270d0:

            push R15
            push R14
            mov R15,R8
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,R9
            mov EBX,ECX
            sub RSP,88
.L_4270e9:

            mov R13,QWORD PTR [RDI+128]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+16],EDX
            mov RDI,R13
            call .L_426140

            test AL,AL
            lea RCX,QWORD PTR [RIP+.L_657760]
            je .L_427126

            mov RAX,QWORD PTR [R13+160]
            mov RCX,QWORD PTR [RAX+24]
.L_427126:

            movzx EAX,BYTE PTR [RCX+8]
            movzx EDX,BYTE PTR [RCX+9]
            lea R14,QWORD PTR [RIP+.L_657760]
            mov R13,R14
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RCX,RSI
            test AX,AX
            mov ESI,DWORD PTR [RSP+16]
            cmovne R14,RCX
            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R13
            call .L_42c320

            cmp EAX,-1
            je .L_427660

            movzx ECX,BYTE PTR [R14+2]
            movzx ESI,BYTE PTR [R14+3]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            cmp EAX,ECX
            jb .L_427210
.L_427191:

            movzx EAX,BYTE PTR [R13]
            movzx ECX,BYTE PTR [R13+1]
            lea R13,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            test AX,AX
            lea RDX,QWORD PTR [R14+RCX*1]
            cmovne R13,RDX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            test R15,R15
            movzx EAX,AX
            je .L_4271e9

            cmp EBX,EAX
            jbe .L_427220

            mov DWORD PTR [R15],0
.L_4271d7:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_4271e9:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4277e2

            add RSP,88
.L_427201:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427210:

            mov EAX,EAX
            lea R13,QWORD PTR [R14+RAX*2+4]
            jmp .L_427191
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427220:

            mov EDX,DWORD PTR [R15]
            sub EAX,EBX
            lea RCX,QWORD PTR [R13+2]
            cmp EAX,EDX
            cmova EAX,EDX
            lea RDX,QWORD PTR [RBX+RBX*1]
            test EAX,EAX
            mov DWORD PTR [R15],EAX
            je .L_4271d7

            lea RBX,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RCX+RDX*1+2]
            sub EAX,1
            mov R14,R12
            lea R15,QWORD PTR [RIP+.L_657760]
            mov R12,RBP
            lea RAX,QWORD PTR [RDX+RAX*2]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+60]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+32],RAX
            mov EAX,DWORD PTR [RSP+20]
            and EAX,4294967294
            mov DWORD PTR [RSP+20],EAX
            jmp .L_4272ad
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427280:

            cmp AX,3
            je .L_427500

            xor ESI,ESI
            cmp AX,1
            je .L_4274c8
.L_427296:

            mov DWORD PTR [R12],ESI
            add RBX,2
            add R12,4
            cmp RBX,QWORD PTR [RSP+8]
            je .L_4271d7
.L_4272ad:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            movzx EBP,AX
            add RBP,R13
            test AX,AX
            cmove RBP,R15
            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            jne .L_427280

            movzx ECX,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            sub RSP,8
.L_4272e5:

            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            mov RDI,R14
            mov RSI,QWORD PTR [R14+160]
            shl ECX,8
            add ECX,EAX
            mov RAX,QWORD PTR [R14+152]
            movzx ECX,CX
            push QWORD PTR [RAX+208]
            mov R9,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+32]
            call QWORD PTR [RAX+432]

            mov ESI,EAX
            test ESI,ESI
            pop RAX
            pop RDX
            je .L_427296

            cmp DWORD PTR [RSP+20],4
            mov RAX,QWORD PTR [R14+152]
            mov RSI,QWORD PTR [R14+160]
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            je .L_427410

            lea RDI,QWORD PTR [RSP+68]
            lea RBP,QWORD PTR [RSP+64]
            mov R9,QWORD PTR [RAX+176]
            mov EDX,DWORD PTR [RSP+16]
            mov QWORD PTR [RSP+40],RDI
            mov R8,RDI
            mov RCX,RBP
            mov RDI,R14
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_4277d9

            mov RAX,QWORD PTR [R14+152]
            mov DWORD PTR [RSP+68],0
            mov RCX,RBP
            mov DWORD PTR [RSP+64],0
            mov RSI,QWORD PTR [R14+160]
            mov RDI,R14
            mov R8,QWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_4277d9

            mov RAX,QWORD PTR [R14+152]
            mov RSI,QWORD PTR [R14+160]
            mov RDI,R14
            mov EDX,DWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EAX,DWORD PTR [RSP+68]
            add EAX,DWORD PTR [R14+140]
.L_4273fd:

            mov ESI,DWORD PTR [RSP+60]
            sub ESI,EAX
            jmp .L_427296
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427410:

            lea R10,QWORD PTR [RSP+68]
            lea RBP,QWORD PTR [RSP+64]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,DWORD PTR [RSP+16]
            mov RDI,R14
            mov R8,R10
            mov QWORD PTR [RSP+40],R10
            mov RCX,RBP
            call QWORD PTR [RAX+392]

            test EAX,EAX
            jne .L_4277d0

            mov RAX,QWORD PTR [R14+152]
            mov R10,QWORD PTR [RSP+40]
            mov RCX,RBP
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            mov RDI,R14
            mov RSI,QWORD PTR [R14+160]
            mov EDX,DWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+176]
            mov R8,R10
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_4277d0

            mov RAX,QWORD PTR [R14+152]
            mov EDX,DWORD PTR [RSP+16]
            mov RDI,R14
            mov RSI,QWORD PTR [R14+160]
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov EDI,DWORD PTR [RSP+64]
            shr EDX,31
            add EAX,EDX
            sar EAX,1
            sub EDI,EAX
            mov EAX,EDI
.L_4274b9:

            mov ESI,DWORD PTR [RSP+56]
            sub ESI,EAX
            jmp .L_427296
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4274c8:

            movzx ESI,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            shl ESI,8
            add ESI,EAX
            cmp DWORD PTR [RSP+20],4
            movsx ESI,SI
            je .L_4277b0

            mov EDX,DWORD PTR [R14+140]
            mov RDI,R14
            call .L_42c130

            mov ESI,EAX
            jmp .L_427296
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427500:

            movzx ESI,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            shl ESI,8
            add ESI,EAX
            cmp DWORD PTR [RSP+20],4
            movsx ESI,SI
            je .L_427680

            mov EDX,DWORD PTR [R14+140]
            mov RDI,R14
            call .L_42c130

            mov ESI,EAX
            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            mov EDI,DWORD PTR [R14+148]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmove RDX,R15
            test EDI,EDI
            je .L_427296

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,2
            ja .L_427296

            movzx ECX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp EDI,ECX
            jb .L_427296

            movzx R8D,BYTE PTR [RDX+2]
            movzx R9D,BYTE PTR [RDX+3]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp EDI,R8D
            ja .L_427296

            mov R11D,EDI
            mov R8D,1
            mov EBP,16
            sub R11D,ECX
            mov ECX,4
            mov R10D,DWORD PTR [R14+140]
            sub ECX,EAX
            mov R9D,R11D
            shr R9D,CL
            mov DWORD PTR [RSP+40],ECX
            mov ECX,R9D
            mov R9D,R8D
            lea RDX,QWORD PTR [RDX+RCX*2+6]
            mov ECX,EAX
            shl R9D,CL
            mov ECX,R9D
            mov R9D,EBP
            sub R9D,ECX
            mov ECX,R9D
            mov R9D,65535
            shr R9D,CL
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RSP+40]
            movzx EDX,DX
            shl R8D,CL
            mov ECX,EAX
            lea EAX,DWORD PTR [R9+1]
            sub R8D,1
            and R8D,R11D
            shr EAX,1
            add R8D,1
            shl R8D,CL
            mov ECX,EBP
            sub ECX,R8D
            shr EDX,CL
            and EDX,R9D
            not R9D
            add R9D,EDX
            cmp EDX,EAX
            cmovae EDX,R9D
            test EDX,EDX
            je .L_427296
.L_427641:

            movsxd RAX,EDX
            movsxd RDX,R10D
            imul RAX,RDX
            cqo 
            idiv RDI
            add ESI,EAX
            jmp .L_427296
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427660:

            xor EAX,EAX
            test R15,R15
            je .L_4271e9

            mov DWORD PTR [R15],0
            jmp .L_4271e9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427680:

            mov EDX,DWORD PTR [R14+136]
            mov RDI,R14
            call .L_42c130

            mov ESI,EAX
            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            mov EDI,DWORD PTR [R14+144]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmove RDX,R15
            test EDI,EDI
            je .L_427296

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,2
            ja .L_427296

            movzx ECX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp EDI,ECX
            jb .L_427296

            movzx R8D,BYTE PTR [RDX+2]
            movzx R9D,BYTE PTR [RDX+3]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp EDI,R8D
            ja .L_427296

            mov R11D,EDI
            mov R8D,1
            mov EBP,16
            sub R11D,ECX
            mov ECX,DWORD PTR [RSP+20]
            mov R10D,DWORD PTR [R14+136]
            mov R9D,R11D
            sub ECX,EAX
            shr R9D,CL
            mov DWORD PTR [RSP+40],ECX
            mov ECX,R9D
            mov R9D,R8D
            lea RDX,QWORD PTR [RDX+RCX*2+6]
            mov ECX,EAX
            shl R9D,CL
            mov ECX,R9D
            mov R9D,EBP
            sub R9D,ECX
            mov ECX,R9D
            mov R9D,65535
            shr R9D,CL
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RSP+40]
            movzx EDX,DX
            shl R8D,CL
            mov ECX,EAX
            sub R8D,1
            and R8D,R11D
            add R8D,1
            shl R8D,CL
            mov ECX,EBP
            sub ECX,R8D
            shr EDX,CL
            lea ECX,DWORD PTR [R9+1]
            and EDX,R9D
            not R9D
            shr ECX,1
            lea EAX,DWORD PTR [RDX+R9*1]
            cmp EDX,ECX
            cmovae EDX,EAX
            test EDX,EDX
            jne .L_427641

            jmp .L_427296
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4277b0:

            mov EDX,DWORD PTR [R14+136]
            mov RDI,R14
            call .L_42c130

            mov ESI,EAX
            jmp .L_427296
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4277d0:

            mov EAX,DWORD PTR [RSP+64]
            jmp .L_4274b9
.L_4277d9:

            mov EAX,DWORD PTR [RSP+68]
            jmp .L_4273fd
.L_4277e2:

            call __stack_chk_fail@PLT
.L_4277e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4277f0:

            push R12
            push RBP
            mov R12,RCX
            push RBX
.L_4277f7:

            mov EBP,EDX
            mov RBX,R8
            call .L_4261d0

            movzx ESI,BYTE PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX+5]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl ESI,8
            add ESI,EDX
            movzx EDX,SI
            add RAX,RDX
            test SI,SI
            cmovne RDI,RAX
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            test R12,R12
            movzx EAX,AX
            je .L_4278b0

            cmp EBP,EAX
            ja .L_4278b8

            mov EDX,DWORD PTR [R12]
            sub EAX,EBP
            lea RCX,QWORD PTR [RDI+2]
            cmp EAX,EDX
            cmova EAX,EDX
            lea RDX,QWORD PTR [RBP+RBP*2]
            mov DWORD PTR [R12],EAX
            add RDX,RDX
            test EAX,EAX
            je .L_4278a1

            sub EAX,1
            lea RSI,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RCX+RDX*1+6]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R8,QWORD PTR [RDX+RAX*2]
            nop
            nop
            nop
.L_427870:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            add RSI,6
            add RBX,4
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RSI-4]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RSI-3]
            add EAX,EDX
            mov DWORD PTR [RBX-4],EAX
            cmp R8,RSI
            jne .L_427870
.L_4278a1:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_4278b0:

            pop RBX
.L_4278b1:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4278b8:

            mov DWORD PTR [R12],0
            jmp .L_4278a1
.L_4278c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4278d0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RCX
            call .L_4261d0

            mov RDX,RBX
            mov ESI,R12D
            mov RDI,RAX
            mov RBP,RAX
            call .L_42f5b0

            test AL,AL
            mov EDX,1
            je .L_427900

            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            ret 
.L_427900:

            mov RDX,RBX
            mov ESI,1145457748
            mov RDI,RBP
            call .L_42f5b0

            test AL,AL
            je .L_427920
.L_427914:

            xor EDX,EDX
.L_427916:

            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427920:

            mov RDX,RBX
            mov ESI,1684434036
            mov RDI,RBP
            call .L_42f5b0

            test AL,AL
            jne .L_427914

            mov RDX,RBX
            mov ESI,1818326126
            mov RDI,RBP
            call .L_42f5b0

            test RBX,RBX
            je .L_427914

            cmp AL,1
            je .L_427914

            mov DWORD PTR [RBX],65535
            xor EDX,EDX
            jmp .L_427916
.L_427957:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427960:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDX
            push RBX
.L_42796b:

            mov R12,RCX
            mov RBX,R8
            call .L_4261d0

            mov R10D,DWORD PTR [RBP]
            mov R13,RAX
            test R10D,R10D
            je .L_427a43

            lea R11,QWORD PTR [RIP+.L_657760]
            nop
            nop
            nop
.L_427990:

            movzx EAX,BYTE PTR [R13+4]
            movzx EDX,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add RCX,R13
            test AX,AX
            cmove RCX,R11
            movzx R8D,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl R8D,8
            add R8D,EAX
            movzx R8D,R8W
            sub R8D,1
            cmp R8D,-1
            je .L_427a25

            xor EDX,EDX
            jmp .L_4279df
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4279d0:

            je .L_427a70

            lea EDX,DWORD PTR [R9+1]
            cmp EDX,R8D
            jg .L_427a25
.L_4279df:

            lea R9D,DWORD PTR [R8+RDX*1]
            sar R9D,1
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R14,QWORD PTR [RCX+RAX*2+2]
            movzx ESI,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            mov EDI,ESI
            shl EAX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R14+2]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [R14+3]
            add EAX,ESI
            cmp R10D,EAX
            jae .L_4279d0

            lea R8D,DWORD PTR [R9-1]
            cmp EDX,R8D
            jle .L_4279df
.L_427a25:

            test R12,R12
            je .L_427a32

            mov DWORD PTR [R12],65535
.L_427a32:

            add RBP,4
            mov R10D,DWORD PTR [RBP]
            test R10D,R10D
            jne .L_427990
.L_427a43:

            mov RDX,R12
            mov ESI,1145457748
            mov RDI,R13
            call .L_42f5b0

            test AL,AL
            je .L_427a91

            test RBX,RBX
            je .L_427ad3

            mov DWORD PTR [RBX],1145457748
            xor EAX,EAX
.L_427a64:

            pop RBX
.L_427a65:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427a70:

            test R12,R12
            je .L_427a79

            mov DWORD PTR [R12],R9D
.L_427a79:

            test RBX,RBX
            mov EAX,1
            je .L_427a64

            mov EDX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_427a91:

            mov RDX,R12
            mov ESI,1684434036
            mov RDI,R13
            call .L_42f5b0

            test AL,AL
            je .L_427ab4

            test RBX,RBX
            je .L_427ad3

            mov DWORD PTR [RBX],1684434036
            xor EAX,EAX
            jmp .L_427a64
.L_427ab4:

            mov RDX,R12
            mov ESI,1818326126
            mov RDI,R13
            call .L_42f5b0

            test AL,AL
            je .L_427ade

            test RBX,RBX
            je .L_427ad3

            mov DWORD PTR [RBX],1818326126
.L_427ad3:

            pop RBX
.L_427ad4:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_427ade:

            test R12,R12
            je .L_427aeb

            mov DWORD PTR [R12],65535
.L_427aeb:

            test RBX,RBX
            je .L_427ad3

            mov DWORD PTR [RBX],65535
            xor EAX,EAX
            jmp .L_427a64
.L_427afd:

            nop
            nop
            nop
.L_427b00:

            push R12
            push RBP
            mov R12,RCX
            push RBX
.L_427b07:

            mov EBP,EDX
            mov RBX,R8
            call .L_4261d0

            movzx ESI,BYTE PTR [RAX+6]
            movzx EDX,BYTE PTR [RAX+7]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl ESI,8
            add ESI,EDX
            movzx EDX,SI
            add RAX,RDX
            test SI,SI
            cmovne RDI,RAX
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            test R12,R12
            movzx EAX,AX
            je .L_427bc0

            cmp EBP,EAX
            ja .L_427bc8

            mov EDX,DWORD PTR [R12]
            sub EAX,EBP
            lea RCX,QWORD PTR [RDI+2]
            cmp EAX,EDX
            cmova EAX,EDX
            lea RDX,QWORD PTR [RBP+RBP*2]
            mov DWORD PTR [R12],EAX
            add RDX,RDX
            test EAX,EAX
            je .L_427bb1

            sub EAX,1
            lea RSI,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RCX+RDX*1+6]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R8,QWORD PTR [RDX+RAX*2]
            nop
            nop
            nop
.L_427b80:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            add RSI,6
            add RBX,4
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RSI-4]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RSI-3]
            add EAX,EDX
            mov DWORD PTR [RBX-4],EAX
            cmp R8,RSI
            jne .L_427b80
.L_427bb1:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_427bc0:

            pop RBX
.L_427bc1:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427bc8:

            mov DWORD PTR [R12],0
            jmp .L_427bb1
.L_427bd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427be0:

            push RBP
            push RBX
            mov RBP,RCX
            mov EBX,EDX
            sub RSP,8
.L_427beb:

            call .L_4261d0

            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            lea R9,QWORD PTR [RIP+.L_657760]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmovne R9,RAX
            movzx EAX,BYTE PTR [R9]
            movzx EDX,BYTE PTR [R9+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            je .L_427c97

            movzx EDX,BYTE PTR [R9+3]
            movzx ECX,AX
            movzx EAX,BYTE PTR [R9+2]
            add R9,8
            shl EAX,24
            shl EDX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [R9-4]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R9-3]
            add EAX,EDX
            xor EDX,EDX
            cmp EBX,EAX
            jne .L_427c90

            jmp .L_427cb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427c60:

            mov R8,R9
            add R9,6
            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov EDI,ESI
            shl EAX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R8+2]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [R8+3]
            add EAX,ESI
            cmp EBX,EAX
            je .L_427cb8
.L_427c90:

            add EDX,1
            cmp EDX,ECX
            jne .L_427c60
.L_427c97:

            xor EAX,EAX
            test RBP,RBP
            je .L_427ca5

            mov DWORD PTR [RBP],65535
.L_427ca5:

            add RSP,8
.L_427ca9:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427cb0:

            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_427cb8:

            test RBP,RBP
            mov EAX,1
            je .L_427ca5

            mov DWORD PTR [RBP],EDX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_427ccc:

            nop
            nop
            nop
            nop
.L_427cd0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,R8
            mov EBP,ECX
            mov RBX,R9
            sub RSP,8
.L_427ce5:

            call .L_4261d0

            mov ESI,R13D
            mov RDI,RAX
            call .L_42f540

            test R12,R12
            je .L_427d82

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EBP,EDX
            ja .L_427da0

            mov ECX,DWORD PTR [R12]
            sub EDX,EBP
            lea RSI,QWORD PTR [RAX+4]
            cmp EDX,ECX
            cmova EDX,ECX
            lea RCX,QWORD PTR [RBP+RBP*2]
            mov DWORD PTR [R12],EDX
            add RCX,RCX
            test EDX,EDX
            je .L_427d82

            sub EDX,1
            lea RDI,QWORD PTR [RSI+RCX*1]
            lea RCX,QWORD PTR [RSI+RCX*1+6]
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov R9,RBX
            lea R8,QWORD PTR [RCX+RDX*2]
            nop
            nop
            nop
            nop
.L_427d50:

            movzx ECX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            add RDI,6
            add R9,4
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [RDI-4]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RDI-3]
            add EDX,ECX
            mov DWORD PTR [R9-4],EDX
            cmp R8,RDI
            jne .L_427d50
.L_427d82:

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            add RSP,8
.L_427d8e:

            pop RBX
            pop RBP
            pop R12
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            pop R13
            ret 

            nop
            nop
            nop
.L_427da0:

            mov DWORD PTR [R12],0
            jmp .L_427d82
.L_427daa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427db0:

            push R12
            push RBP
            mov R12,R8
            push RBX
.L_427db7:

            mov EBX,EDX
            mov EBP,ECX
            call .L_4261d0

            mov ESI,EBX
            mov RDI,RAX
            call .L_42f540

            movzx ECX,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl ECX,8
            add ECX,EDX
            movzx ECX,CX
            sub ECX,1
            cmp ECX,-1
            je .L_427f10

            lea R8,QWORD PTR [RAX+2]
            mov R11D,ECX
            xor EBX,EBX
            jmp .L_427e07
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427df8:

            je .L_427ee8

            lea EBX,DWORD PTR [R9+1]
            cmp EBX,R11D
            jg .L_427e4c
.L_427e07:

            lea R9D,DWORD PTR [R11+RBX*1]
            sar R9D,1
            movsxd RDX,R9D
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea R10,QWORD PTR [R8+RDX*2+2]
            movzx ESI,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            mov EDI,ESI
            shl EDX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RDX*1]
            movzx EDX,BYTE PTR [R10+2]
            shl EDX,8
            add EDX,ESI
            movzx ESI,BYTE PTR [R10+3]
            add EDX,ESI
            cmp EBP,EDX
            jae .L_427df8

            lea R11D,DWORD PTR [R9-1]
            cmp EBX,R11D
            jle .L_427e07
.L_427e4c:

            test R12,R12
            je .L_427e75
.L_427e51:

            mov DWORD PTR [R12],65535
            movzx ECX,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            shl ECX,8
            add ECX,EDX
            movzx ECX,CX
            sub ECX,1
            cmp ECX,-1
            je .L_427ed6

            lea R8,QWORD PTR [RAX+2]
.L_427e75:

            xor R10D,R10D
            jmp .L_427e8b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427e80:

            je .L_427f00

            lea R10D,DWORD PTR [RDI+1]
            cmp R10D,ECX
            jg .L_427ed1
.L_427e8b:

            lea EDI,DWORD PTR [RCX+R10*1]
            sar EDI,1
            movsxd RAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [R8+RAX*2+2]
            movzx EDX,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            mov ESI,EDX
            shl EAX,16
            shl ESI,24
            lea EDX,DWORD PTR [RSI+RAX*1]
            movzx EAX,BYTE PTR [R9+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R9+3]
            add EAX,EDX
            cmp EAX,1684434036
            jbe .L_427e80

            lea ECX,DWORD PTR [RDI-1]
            cmp R10D,ECX
            jle .L_427e8b
.L_427ed1:

            test R12,R12
            je .L_427f19
.L_427ed6:

            mov DWORD PTR [R12],65535
            xor EAX,EAX
.L_427ee0:

            pop RBX
.L_427ee1:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427ee8:

            test R12,R12
            mov EAX,1
            je .L_427ee0

            pop RBX
            mov DWORD PTR [R12],R9D
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_427f00:

            test R12,R12
            je .L_427f19

            pop RBX
            mov DWORD PTR [R12],EDI
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_427f10:

            test R12,R12
            jne .L_427e51
.L_427f19:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_427f20:

            push R14
            push R13
            mov R14D,EDX
            push R12
            push RBP
            mov R13D,ECX
            push RBX
.L_427f2e:

            mov RBP,R8
            mov RBX,R9
            call .L_4261d0

            mov ESI,R14D
            mov RDI,RAX
            mov R12,RAX
            call .L_42f540

            cmp R13D,65535
            je .L_427fc8

            movzx ESI,BYTE PTR [RAX+2]
            movzx EDX,BYTE PTR [RAX+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl ESI,8
            add ESI,EDX
            movzx ESI,SI
            cmp R13D,ESI
            jb .L_428080

            movzx EDX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            shl EDX,8
            add DX,CX
            jne .L_427fd7
.L_427f80:

            lea RDX,QWORD PTR [RIP+.L_44c5f8]
.L_427f87:

            test RBP,RBP
            je .L_4280a8

            xor ESI,ESI
            test RBX,RBX
            mov DWORD PTR [RBP],65535
            je .L_427fa2

            nop
            nop
.L_427fa0:

            mov DWORD PTR [RBX],ESI
.L_427fa2:

            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            pop RBX
.L_427fab:

            pop RBP
            pop R12
            shl EAX,8
            add EAX,EDX
            cmp AX,-1
            setne AL
            movzx EAX,AL
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427fc8:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add DX,CX
            je .L_427f80
.L_427fd7:

            movzx EDX,DX
            add RDX,RAX
            movzx ECX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+3]
            shl ECX,8
            add ECX,EAX
            cmp CX,-1
            je .L_427f87

            test RBP,RBP
            movzx R8D,CX
            je .L_427ffd

            mov DWORD PTR [RBP],R8D
.L_427ffd:

            test RBX,RBX
            je .L_427fa2

            movzx EAX,BYTE PTR [R12+6]
            movzx ESI,BYTE PTR [R12+7]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add R12,RSI
            test AX,AX
            cmovne RDI,R12
            movzx EAX,BYTE PTR [RDI]
            movzx ESI,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ESI
            mov ESI,538976288
            movzx EAX,AX
            cmp R8D,EAX
            jae .L_427fa0

            movzx ECX,CX
            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RAX,QWORD PTR [RDI+RAX*2+2]
            movzx ECX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            mov EDI,ECX
            shl ESI,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RSI*1]
            movzx ESI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl ESI,8
            add ESI,ECX
            add ESI,EAX
            jmp .L_427fa0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428080:

            mov ECX,R13D
            lea RDX,QWORD PTR [RCX+RCX*2]
            lea RDI,QWORD PTR [RAX+RDX*2+4]
            movzx EDX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            shl EDX,8
            add DX,CX
            je .L_427f80

            jmp .L_427fd7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4280a8:

            test RBX,RBX
            je .L_427fa2

            xor ESI,ESI
            jmp .L_427fa0
.L_4280b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4280c0:

            xor R9D,R9D
            jmp .L_427f20
.L_4280c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4280d0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ECX
            mov EBX,R8D
            mov RBP,R9
            sub RSP,8
.L_4280e6:

            call .L_4261d0

            mov ESI,R13D
            mov RDI,RAX
            call .L_42f540

            cmp R12D,65535
            je .L_4281c0

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp R12D,EDX
            jb .L_428200
.L_428123:

            movzx ESI,BYTE PTR [RCX+4]
            movzx EDI,BYTE PTR [RCX+5]
            xor EDX,EDX
            lea RCX,QWORD PTR [RIP+.L_44c5f8]
            shl ESI,8
            add SI,DI
            jne .L_4281dc
.L_428140:

            test RBP,RBP
            je .L_4281af

            cmp EBX,EDX
            ja .L_428210

            mov EAX,DWORD PTR [RBP]
            sub EDX,EBX
            cmp EDX,EAX
            cmova EDX,EAX
            add RBX,RBX
            lea RAX,QWORD PTR [RCX+6]
            test EDX,EDX
            mov DWORD PTR [RBP],EDX
            je .L_42819f

            mov RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RAX+RBX*1+1]
            lea EAX,DWORD PTR [RDX-1]
            lea R8,QWORD PTR [RSI+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428180:

            movzx EAX,BYTE PTR [RDI-1]
            movzx EDX,BYTE PTR [RDI]
            add RSI,4
            add RDI,2
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSI-4],EAX
            cmp R8,RSI
            jne .L_428180
.L_42819f:

            movzx EDX,BYTE PTR [RCX+4]
            movzx EAX,BYTE PTR [RCX+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
.L_4281af:

            add RSP,8
.L_4281b3:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4281c0:

            movzx ESI,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            xor EDX,EDX
            lea RCX,QWORD PTR [RIP+.L_44c5f8]
            shl ESI,8
            add SI,DI
            je .L_428140
.L_4281dc:

            movzx ESI,SI
            lea RCX,QWORD PTR [RAX+RSI*1]
            movzx EDX,BYTE PTR [RCX+4]
            movzx EAX,BYTE PTR [RCX+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            jmp .L_428140
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428200:

            lea RDX,QWORD PTR [R12+R12*2]
            lea RCX,QWORD PTR [RAX+RDX*2+4]
            jmp .L_428123
          .byte 0x66
          .byte 0x90
.L_428210:

            mov DWORD PTR [RBP],0
            jmp .L_42819f
.L_428219:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428220:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            mov R14D,ECX
            push RBP
            push RBX
            mov R13D,R8D
            mov R12,R9
            sub RSP,8
.L_42823a:

            mov RBX,QWORD PTR [RSP+64]
            call .L_4261d0

            mov ESI,R15D
            mov RDI,RAX
            mov RBP,RAX
            call .L_42f540

            cmp R14D,65535
            je .L_4283d0

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp R14D,EDX
            jb .L_428410
.L_42827f:

            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            xor R10D,R10D
            lea RDI,QWORD PTR [RIP+.L_44c5f8]
            shl EDX,8
            add DX,CX
            jne .L_4283ed
.L_42829d:

            test R12,R12
            je .L_428313

            cmp R13D,R10D
            ja .L_428420

            mov EAX,DWORD PTR [R12]
            sub R10D,R13D
            cmp R10D,EAX
            cmova R10D,EAX
            add R13,R13
            lea RAX,QWORD PTR [RDI+6]
            test R10D,R10D
            mov DWORD PTR [R12],R10D
            je .L_428428

            lea RDX,QWORD PTR [RAX+R13*1+1]
            lea EAX,DWORD PTR [R10-1]
            mov RCX,RBX
            lea R8,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
.L_4282e0:

            movzx EAX,BYTE PTR [RDX-1]
            movzx ESI,BYTE PTR [RDX]
            add RCX,4
            add RDX,2
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            mov DWORD PTR [RCX-4],EAX
            cmp R8,RCX
            jne .L_4282e0

            movzx R10D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
.L_428313:

            test RBX,RBX
            je .L_4283ba

            mov EAX,DWORD PTR [R12]
            test EAX,EAX
            je .L_4283ba

            sub EAX,1
            lea R8,QWORD PTR [RIP+.L_657760]
            mov RDI,RBX
            lea RAX,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_428340:

            mov R9D,DWORD PTR [RDI]
            xor EDX,EDX
            cmp R9D,65535
            je .L_4283af

            movzx EDX,BYTE PTR [RBP+6]
            movzx ECX,BYTE PTR [RBP+7]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            add RSI,RBP
            test DX,DX
            cmove RSI,R8
            movzx ECX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,EDX
            mov EDX,538976288
            movzx ECX,CX
            cmp R9D,ECX
            jae .L_4283af

            lea RDX,QWORD PTR [R9+R9*2]
            lea R9,QWORD PTR [RSI+RDX*2+2]
            movzx ECX,BYTE PTR [R9]
            movzx EDX,BYTE PTR [R9+1]
            mov ESI,ECX
            shl EDX,16
            shl ESI,24
            lea ECX,DWORD PTR [RSI+RDX*1]
            movzx EDX,BYTE PTR [R9+2]
            shl EDX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [R9+3]
            add EDX,ECX
.L_4283af:

            mov DWORD PTR [RDI],EDX
            add RDI,4
            cmp RDI,RAX
            jne .L_428340
.L_4283ba:

            add RSP,8
.L_4283be:

            mov EAX,R10D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4283d0:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            xor R10D,R10D
            lea RDI,QWORD PTR [RIP+.L_44c5f8]
            shl EDX,8
            add DX,CX
            je .L_42829d
.L_4283ed:

            movzx EDX,DX
            lea RDI,QWORD PTR [RAX+RDX*1]
            movzx R10D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            jmp .L_42829d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428410:

            lea RDX,QWORD PTR [R14+R14*2]
            lea RCX,QWORD PTR [RAX+RDX*2+4]
            jmp .L_42827f
          .byte 0x66
          .byte 0x90
.L_428420:

            mov DWORD PTR [R12],0
.L_428428:

            movzx R10D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            jmp .L_4283ba
.L_428441:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428450:

            push R14
            push R13
            mov R14D,EDX
            push R12
            push RBP
            mov R13D,ECX
            push RBX
.L_42845e:

            mov EBP,R8D
            mov R12,R9
            call .L_4261d0

            mov ESI,R14D
            mov RDI,RAX
            mov RBX,RAX
            call .L_42f540

            cmp R13D,65535
            je .L_4285c0

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp R13D,EDX
            jb .L_4285a0

            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            shl EDX,8
            add DX,CX
            je .L_4285d8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284c0:

            movzx EDX,DX
            add RAX,RDX
            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx ECX,DX
            je .L_4285d8

            lea EDX,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RAX+6]
            lea R9,QWORD PTR [RIP+.L_657760]
            lea R8,QWORD PTR [RAX+RDX*2+8]
            jmp .L_428505
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4284f8:

            add RSI,2
            cmp R8,RSI
            je .L_4285d8
.L_428505:

            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            xor EDX,EDX
            cmp AX,-1
            movzx EDI,AX
            je .L_428580

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            movzx R10D,DX
            add R10,RBX
            test DX,DX
            cmove R10,R9
            movzx ECX,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            shl ECX,8
            add ECX,EDX
            mov EDX,538976288
            movzx ECX,CX
            cmp EDI,ECX
            jae .L_428580

            movzx EAX,AX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R10,QWORD PTR [R10+RAX*2+2]
            movzx EAX,BYTE PTR [R10]
            movzx EDX,BYTE PTR [R10+1]
            shl EAX,24
            shl EDX,16
            lea EAX,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [R10+2]
            shl EDX,8
            add EDX,EAX
            movzx EAX,BYTE PTR [R10+3]
            add EDX,EAX
.L_428580:

            cmp EBP,EDX
            jne .L_4284f8

            test R12,R12
            mov EAX,1
            je .L_428596

            mov DWORD PTR [R12],EDI
.L_428596:

            pop RBX
.L_428597:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_4285a0:

            lea RDX,QWORD PTR [R13+R13*2]
            lea RCX,QWORD PTR [RAX+RDX*2+4]
            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            shl EDX,8
            add DX,CX
            je .L_4285d8

            jmp .L_4284c0
          .byte 0x90
.L_4285c0:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add DX,CX
            jne .L_4284c0

            nop
            nop
            nop
            nop
            nop
.L_4285d8:

            xor EAX,EAX
            test R12,R12
            je .L_428596

            pop RBX
.L_4285e0:

            pop RBP
            mov DWORD PTR [R12],65535
            pop R12
            pop R13
            pop R14
            ret 
.L_4285f0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EBP,ECX
            mov R12,R8
            mov RBX,R9
            sub RSP,8
.L_428605:

            call .L_4261d0

            movzx EDX,BYTE PTR [RAX+6]
            movzx ECX,BYTE PTR [RAX+7]
            lea RSI,QWORD PTR [RIP+.L_657760]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RAX,RCX
            test DX,DX
            cmovne RSI,RAX
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp R13D,EAX
            jae .L_428650

            lea RAX,QWORD PTR [R13+R13*2]
            lea RDX,QWORD PTR [RSI+RAX*2+2]
.L_428650:

            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ECX,AX
            add RSI,RCX
            test AX,AX
            cmovne RDX,RSI
            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            test R12,R12
            movzx EAX,AX
            je .L_4286e7

            cmp EBP,EAX
            ja .L_4286f8

            mov ECX,DWORD PTR [R12]
            sub EAX,EBP
            cmp EAX,ECX
            cmova EAX,ECX
            add RBP,RBP
            lea RCX,QWORD PTR [RDX+4]
            test EAX,EAX
            mov DWORD PTR [R12],EAX
            je .L_4286d7

            sub EAX,1
            lea RCX,QWORD PTR [RCX+RBP*1+1]
            lea RDI,QWORD PTR [RBX+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4286b8:

            movzx EAX,BYTE PTR [RCX-1]
            movzx ESI,BYTE PTR [RCX]
            add RBX,4
            add RCX,2
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            mov DWORD PTR [RBX-4],EAX
            cmp RDI,RBX
            jne .L_4286b8
.L_4286d7:

            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_4286e7:

            add RSP,8
.L_4286eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4286f8:

            mov DWORD PTR [R12],0
            jmp .L_4286d7
.L_428702:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428710:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            xor R13D,R13D
            push RBP
            push RBX
            mov R12D,1
            mov RBX,RCX
            sub RSP,184
.L_428730:

            lea RBP,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+28]
            lea R15,QWORD PTR [RBP+4]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_428760:

            mov R8,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+4]
            mov RDI,R14
            mov ESI,DWORD PTR [RSP]
            mov R9,RBP
            mov ECX,R13D
            mov DWORD PTR [RSP+28],32
            call .L_4285f0

            mov EDI,DWORD PTR [RSP+28]
            test EDI,EDI
            je .L_4287d0

            lea EDX,DWORD PTR [RDI-1]
            movzx R8D,BYTE PTR [RBX+112]
            mov RAX,RBP
            lea RSI,QWORD PTR [R15+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4287a0:

            mov ECX,DWORD PTR [RAX]
            cmp ECX,65535
            ja .L_4287bf

            test R8B,R8B
            jne .L_4287bf

            mov EDX,ECX
            mov R10D,R12D
            shr EDX,5
            shl R10D,CL
            or DWORD PTR [RBX+RDX*4+116],R10D
.L_4287bf:

            add RAX,4
            cmp RAX,RSI
            jne .L_4287a0

            add R13D,EDI
            cmp EDI,32
            je .L_428760
.L_4287d0:

            mov RAX,QWORD PTR [RSP+168]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4287f5

            add RSP,184
.L_4287ea:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4287f5:

            call __stack_chk_fail@PLT
.L_4287fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428800:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R12,R9
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,184
.L_42881c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            test R8,R8
            mov DWORD PTR [RSP+8],EDX
            je .L_4288c8

            mov R13,R8
            mov R8D,DWORD PTR [R8]
            test R8D,R8D
            je .L_42889c

            lea RAX,QWORD PTR [RSP+28]
            mov QWORD PTR [RSP],RAX
            jmp .L_428865
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428858:

            add R13,4
            mov R8D,DWORD PTR [R13]
            test R8D,R8D
            je .L_42889c
.L_428865:

            mov R9,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+8]
            mov ECX,R15D
            mov ESI,EBP
            mov RDI,RBX
            call .L_428450

            test EAX,EAX
            je .L_428858

            mov EDX,DWORD PTR [RSP+28]
            add R13,4
            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_428710

            mov R8D,DWORD PTR [R13]
            test R8D,R8D
            jne .L_428865
.L_42889c:

            mov RAX,QWORD PTR [RSP+168]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428986

            add RSP,184
.L_4288ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4288c8:

            lea R8,QWORD PTR [RSP+24]
            xor R9D,R9D
            call .L_427f20

            test EAX,EAX
            jne .L_428970
.L_4288dd:

            lea RAX,QWORD PTR [RSP+28]
            lea R13,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+12],0
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
.L_4288f8:

            mov DWORD PTR [RSP+28],32
            sub RSP,8
            mov ECX,R15D
            push R13
            mov R9,QWORD PTR [RSP+16]
            mov ESI,EBP
            mov R8D,DWORD PTR [RSP+28]
            mov EDX,DWORD PTR [RSP+24]
            mov RDI,RBX
            call .L_4280d0

            pop RAX
            pop RDX
            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            je .L_42889c

            mov R14D,1
            nop
            nop
            nop
.L_428938:

            mov EDX,DWORD PTR [R13+R14*4-4]
            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_428710

            mov EDX,DWORD PTR [RSP+28]
            mov ECX,R14D
            add R14,1
            cmp EDX,ECX
            ja .L_428938

            add DWORD PTR [RSP+12],EDX
            cmp EDX,32
            je .L_4288f8

            jmp .L_42889c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428970:

            mov EDX,DWORD PTR [RSP+24]
            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_428710

            jmp .L_4288dd
.L_428986:

            call __stack_chk_fail@PLT
.L_42898b:

            nop
            nop
            nop
            nop
            nop
.L_428990:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov ECX,65535
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12D,EDX
            mov R15,R9
            sub RSP,40
.L_4289b1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],R8
            call .L_428800

            test R14,R14
            je .L_428a48

            mov ECX,DWORD PTR [R14]
            test ECX,ECX
            je .L_428a23

            lea R13,QWORD PTR [RSP+20]
            jmp .L_4289eb
          .byte 0x66
          .byte 0x90
.L_4289e0:

            add R14,4
            mov ECX,DWORD PTR [R14]
            test ECX,ECX
            je .L_428a23
.L_4289eb:

            mov R8,R13
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_427db0

            test EAX,EAX
            je .L_4289e0

            mov ECX,DWORD PTR [RSP+20]
            mov R8,QWORD PTR [RSP+8]
            add R14,4
            mov R9,R15
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_428800

            mov ECX,DWORD PTR [R14]
            test ECX,ECX
            jne .L_4289eb
.L_428a23:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428a8b

            add RSP,40
.L_428a37:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428a48:

            xor R9D,R9D
            xor R8D,R8D
            xor ECX,ECX
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_427cd0

            test EAX,EAX
            mov R13D,EAX
            je .L_428a23

            nop
            nop
            nop
            nop
.L_428a68:

            mov R8,QWORD PTR [RSP+8]
            mov ECX,R14D
            mov R9,R15
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            add R14D,1
            call .L_428800

            cmp R13D,R14D
            jne .L_428a68

            jmp .L_428a23
.L_428a8b:

            call __stack_chk_fail@PLT
.L_428a90:

            cmp ESI,1196445523
            je .L_428ab8

            cmp ESI,1196643650
            jne .L_428ab0

            mov RAX,QWORD PTR [RDI+160]
            mov EAX,DWORD PTR [RAX+48]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428ab0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428ab8:

            mov RAX,QWORD PTR [RDI+160]
            mov EAX,DWORD PTR [RAX+52]
            ret 
.L_428ac3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428ad0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R14,R8
            sub RSP,40
.L_428aec:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP+8],RCX
            je .L_428b80

            mov EDX,DWORD PTR [RDX]
            test EDX,EDX
            je .L_428b5a

            lea R12,QWORD PTR [RSP+20]
            jmp .L_428b24
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428b18:

            add R13,4
            mov EDX,DWORD PTR [R13]
            test EDX,EDX
            je .L_428b5a
.L_428b24:

            mov RCX,R12
            mov ESI,EBP
            mov RDI,RBX
            call .L_4278d0

            test EAX,EAX
            je .L_428b18

            mov EDX,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [RSP+8]
            add R13,4
            mov R9,R15
            mov R8,R14
            mov ESI,EBP
            mov RDI,RBX
            call .L_428990

            mov EDX,DWORD PTR [R13]
            test EDX,EDX
            jne .L_428b24
.L_428b5a:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428be6

            add RSP,40
.L_428b6e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428b80:

            call .L_4261d0

            movzx EDX,BYTE PTR [RAX+4]
            movzx ECX,BYTE PTR [RAX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx ESI,DX
            add RAX,RSI
            test DX,DX
            cmovne RCX,RAX
            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx R12D,AX
            je .L_428b5a

            nop
            nop
            nop
            nop
            nop
.L_428bc0:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,R13D
            mov R9,R15
            mov R8,R14
            mov ESI,EBP
            mov RDI,RBX
            add R13D,1
            call .L_428990

            cmp R13D,R12D
            jne .L_428bc0

            jmp .L_428b5a
.L_428be6:

            call __stack_chk_fail@PLT
.L_428beb:

            nop
            nop
            nop
            nop
            nop
.L_428bf0:

            push RBX
            mov RBX,RDI
            call .L_426140

            xor EDX,EDX
            test AL,AL
            je .L_428c17

            mov RDX,QWORD PTR [RBX+160]
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmp QWORD PTR [RDX+32],RAX
            setne DL
            movzx EDX,DL
.L_428c17:

            mov EAX,EDX
            pop RBX
            ret 
.L_428c1b:

            nop
            nop
            nop
            nop
            nop
.L_428c20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_428c2e:

            mov RAX,QWORD PTR [RDI+128]
            mov R14,QWORD PTR [RSI+200]
            mov RAX,QWORD PTR [RAX+160]
            mov R15,QWORD PTR [RAX+24]
            mov EAX,DWORD PTR [RSI+184]
            test EAX,EAX
            je .L_428d28

            sub EAX,1
            mov R12,RSI
            xor EBX,EBX
            lea R13,QWORD PTR [RAX+RAX*4+5]
            shl R13,2
            jmp .L_428cb1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428c70:

            cmp EAX,1
            mov ECX,2
            je .L_428c8f

            movzx EAX,WORD PTR [R14+RBX*1+16]
            mov ESI,EAX
            and ESI,31
            cmp SI,12
            je .L_428d40
.L_428c8f:

            mov WORD PTR [R14+RBX*1+12],CX
            mov BYTE PTR [R14+RBX*1+14],0
            mov RAX,QWORD PTR [R12+200]
            mov BYTE PTR [RAX+RBX*1+15],0
            add RBX,20
            cmp R13,RBX
            je .L_428d28
.L_428cb1:

            movzx EAX,BYTE PTR [R15+4]
            movzx ECX,BYTE PTR [R15+5]
            mov EBP,DWORD PTR [R14+RBX*1]
            shl EAX,8
            mov ESI,EBP
            add EAX,ECX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            call .L_42c7a0

            cmp EAX,2
            mov ECX,4
            je .L_428c8f

            cmp EAX,3
            jne .L_428c70

            movzx EAX,BYTE PTR [R15+10]
            movzx ECX,BYTE PTR [R15+11]
            mov ESI,EBP
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            call .L_42c7a0

            shl EAX,8
            mov ECX,EAX
            or ECX,8
            jmp .L_428c8f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428d28:

            add RSP,8
.L_428d2c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428d40:

            test AL,32
            mov ECX,8
            je .L_428c8f

            movzx EAX,WORD PTR [R14+RBX*1+12]
            and EAX,32
            cmp AX,1
            sbb ECX,ECX
            and ECX,4294967290
            add ECX,8
            jmp .L_428c8f
.L_428d67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428d70:

            push RBX
            mov RBX,RDI
            call .L_426140

            xor EDX,EDX
            test AL,AL
            je .L_428d97

            mov RDX,QWORD PTR [RBX+160]
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmp QWORD PTR [RDX+40],RAX
            setne DL
            movzx EDX,DL
.L_428d97:

            mov EAX,EDX
            pop RBX
            ret 
.L_428d9b:

            nop
            nop
            nop
            nop
            nop
.L_428da0:

            mov EAX,DWORD PTR [RSI+184]
            test EAX,EAX
            je .L_428de3

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*4+5]
            xor EAX,EAX
            shl RCX,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428dc0:

            mov RDX,QWORD PTR [RSI+216]
            xor EDI,EDI
            mov BYTE PTR [RDX+RAX*1+18],0
            mov RDX,QWORD PTR [RSI+216]
            mov WORD PTR [RDX+RAX*1+16],DI
            add RAX,20
            cmp RAX,RCX
            jne .L_428dc0
.L_428de3:

            ret 
.L_428de5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428df0:

            ret 
.L_428df2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428e00:

            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            sub RSP,16
.L_428e0e:

            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403910

            test BYTE PTR [RBX+132],8
            je .L_428e5e

            mov EDX,DWORD PTR [RSP+4]
            test EDX,EDX
            je .L_428e5e

            mov R12D,DWORD PTR [RBX+144]
            mov RBP,RAX
            xor EBX,EBX
            nop
            nop
            nop
.L_428e48:

            mov ESI,EBX
            mov EDX,R12D
            mov RDI,RBP
            call .L_425fb0

            add EBX,1
            cmp DWORD PTR [RSP+4],EBX
            ja .L_428e48
.L_428e5e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428e77

            add RSP,16
.L_428e72:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_428e77:

            call __stack_chk_fail@PLT
.L_428e7c:

            nop
            nop
            nop
            nop
.L_428e80:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov R12,RDX
            mov R14,R8
            sub RSP,8
.L_428ea0:

            call .L_426140

            test AL,AL
            lea RCX,QWORD PTR [RIP+.L_657760]
            je .L_428ebb

            mov RAX,QWORD PTR [RBX+160]
            mov RCX,QWORD PTR [RAX+40]
.L_428ebb:

            movzx EAX,BYTE PTR [RCX+6]
            movzx EDX,BYTE PTR [RCX+7]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ESI,AX
            add RCX,RSI
            test AX,AX
            cmovne RDX,RCX
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            test AX,AX
            movzx ECX,AX
            je .L_429010

            lea EAX,DWORD PTR [RCX-1]
            lea R11,QWORD PTR [RDX+2]
            lea RCX,QWORD PTR [RIP+.L_657760]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBX,QWORD PTR [RDX+RAX*2+8]
            jmp .L_428f1d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428f10:

            add R11,6
            cmp RBX,R11
            je .L_429010
.L_428f1d:

            movzx EDI,BYTE PTR [R11]
            movzx EAX,BYTE PTR [R11+1]
            movzx ESI,BYTE PTR [R11+3]
            shl EAX,16
            shl EDI,24
            lea EDI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R11+2]
            shl EAX,8
            add EAX,EDI
            add EAX,ESI
            cmp EAX,1936292453
            jne .L_428f10

            movzx ESI,BYTE PTR [R11+4]
            movzx EAX,BYTE PTR [R11+5]
            shl ESI,8
            add ESI,EAX
            movzx EAX,SI
            add RAX,RDX
            test SI,SI
            cmove RAX,RCX
            movzx EDI,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,ESI
            movzx ESI,DI
            add RAX,RSI
            test DI,DI
            cmove RAX,RCX
            mov RSI,RAX
            movzx EAX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RSI+1]
            shl EAX,8
            add AX,DI
            je .L_428f10

            test RBP,RBP
            je .L_428f99

            movzx EAX,AX
            mov DWORD PTR [RBP],EAX
.L_428f99:

            test R12,R12
            je .L_428fb2

            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R12],EAX
.L_428fb2:

            test R13,R13
            je .L_428fcb

            movzx EAX,BYTE PTR [RSI+4]
            movzx EDX,BYTE PTR [RSI+5]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R13],EAX
.L_428fcb:

            test R14,R14
            je .L_428fe3

            movzx EAX,BYTE PTR [RSI+6]
            movzx EDX,BYTE PTR [RSI+7]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [R14],EAX
.L_428fe3:

            test R15,R15
            mov EAX,1
            je .L_429050

            movzx EDX,BYTE PTR [RSI+8]
            movzx ECX,BYTE PTR [RSI+9]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            mov DWORD PTR [R15],EDX
            add RSP,8
.L_429004:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_429010:

            test RBP,RBP
            je .L_42901c

            mov DWORD PTR [RBP],0
.L_42901c:

            test R12,R12
            je .L_429029

            mov DWORD PTR [R12],0
.L_429029:

            test R13,R13
            je .L_429036

            mov DWORD PTR [R13],0
.L_429036:

            test R14,R14
            je .L_429042

            mov DWORD PTR [R14],0
.L_429042:

            xor EAX,EAX
            test R15,R15
            je .L_429050

            mov DWORD PTR [R15],0
.L_429050:

            add RSP,8
.L_429054:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42905f:

            nop
.L_429060:

            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            mov RCX,RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,ESI
            movzx ESI,AX
            add RDX,RSI
            test AX,AX
            mov RSI,RCX
            cmovne RDI,RDX
            jmp .L_433df0
.L_42908b:

            nop
            nop
            nop
            nop
            nop
.L_429090:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,56
.L_4290a3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],3
            call .L_426140

            test AL,AL
            lea RDI,QWORD PTR [RIP+.L_657760]
            je .L_4290e9

            mov RAX,QWORD PTR [RBX+160]
            mov RDI,QWORD PTR [RAX+32]
.L_4290e9:

            mov ESI,EBP
            call .L_42f680

            mov R15,RAX
            lea RAX,QWORD PTR [RIP+.L_436190]
            mov QWORD PTR [RSP+16],RAX
            movzx EBX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBX,BX
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42918b

            lea R12D,DWORD PTR [RSI-1]
            xor R14D,R14D
            mov R13,RSP
            lea RBP,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_42914a
.L_429140:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_42914a:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_42915f

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_42915f:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            add R14,1
            call .L_435830

            cmp R12,R14
            jne .L_429140
.L_42918b:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4291aa

            add RSP,56
.L_42919f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4291aa:

            call __stack_chk_fail@PLT
.L_4291af:

            nop
.L_4291b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBX,ESI
            sub RSP,56
.L_4291c0:

            mov RBP,QWORD PTR [RDI+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp DWORD PTR [RBP+48],EBX
            jbe .L_429220

            mov QWORD PTR [RSP],RDI
            mov RDI,QWORD PTR [RBP+32]
            test R8D,R8D
            mov ESI,EBX
            mov R13,RDX
            mov R12D,ECX
            mov QWORD PTR [RSP+8],RDX
            setne BYTE PTR [RSP+20]
            mov DWORD PTR [RSP+16],ECX
            mov DWORD PTR [RSP+24],0
            call .L_42f680

            mov R14,RAX
            mov RAX,QWORD PTR [RBP+56]
            lea RDX,QWORD PTR [RBX+RBX*2]
            test R12D,R12D
            lea RSI,QWORD PTR [RAX+RDX*8]
            jne .L_429248
.L_42921e:

            xor EAX,EAX
.L_429220:

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            jne .L_429325

            add RSP,56
.L_429238:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429248:

            mov EDX,DWORD PTR [R13]
            mov EAX,1
            mov RBX,RAX
            mov ECX,EDX
            shr ECX,4
            shl RBX,CL
            test QWORD PTR [RSI],RBX
            je .L_42921e

            mov RBX,RAX
            mov ECX,EDX
            shl RBX,CL
            test QWORD PTR [RSI+8],RBX
            je .L_42921e

            mov ECX,EDX
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RSI+16],RAX
            je .L_42921e

            movzx EBP,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            movzx EDX,BYTE PTR [R14+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R14+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42921e

            lea R12D,DWORD PTR [RSI-1]
            xor R15D,R15D
            mov R13,RSP
            lea RBX,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_4292df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4292c8:

            add R15,1
            cmp R12,R15
            je .L_42921e

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
.L_4292df:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_4292f4

            lea RDX,QWORD PTR [R14+R15*2+6]
.L_4292f4:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_436260

            test AL,AL
            je .L_4292c8

            mov EAX,1
            jmp .L_429220
.L_429325:

            call __stack_chk_fail@PLT
.L_42932a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_429330:

            push R14
            push R13
            mov R14D,R8D
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R13D,ECX
            call .L_426140

            test AL,AL
            jne .L_429360

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429360:

            mov R8D,R14D
            mov ECX,R13D
            mov RDX,R12
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_4291b0
.L_42937b:

            nop
            nop
            nop
            nop
            nop
.L_429380:

            push R15
            push R14
            mov R15,R8
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,ESI
            mov R14,R9
            sub RSP,8408
.L_4293a0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8392],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],RCX
            mov RBX,QWORD PTR [RSP+8464]
            call .L_426140

            test AL,AL
            je .L_429570

            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RBP
            test RCX,RCX
            je .L_429660

            test R15,R15
            mov QWORD PTR [RSP+24],RCX
            je .L_429680
.L_4293ee:

            test R14,R14
            mov QWORD PTR [RSP+32],R15
            je .L_4296a0
.L_4293fc:

            test RBX,RBX
            mov QWORD PTR [RSP+40],R14
            je .L_429650
.L_42940a:

            mov QWORD PTR [RSP+48],RBX
            lea RDI,QWORD PTR [RSP+64]
            lea RBX,QWORD PTR [RSP+16]
            xor ESI,ESI
            mov EDX,8312
            mov QWORD PTR [RSP+56],0
            call memset@PLT

            lea RDI,QWORD PTR [RBX+56]
            xor ESI,ESI
            mov QWORD PTR [RSP+8376],3
            mov DWORD PTR [RSP+64],1
            call pthread_mutex_init@PLT

            cmp DWORD PTR [RSP+64],-1
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RBX+112],XMM0
            movaps XMMWORD PTR [RBX+128],XMM0
            movaps XMMWORD PTR [RBX+144],XMM0
            je .L_42949f

            lea RDI,QWORD PTR [RBX+168]
            mov ECX,1023
            xor EAX,EAX
            mov BYTE PTR [RSP+176],0
            mov QWORD PTR [RSP+180],0
            mov QWORD PTR [RBX+8348],0

            rep stosq QWORD PTR [RDI]
.L_42949f:

            cmp R12D,1196445523
            je .L_4295a0

            cmp R12D,1196643650
            jne .L_429570

            mov RAX,QWORD PTR [RBP+160]
            mov ESI,R13D
            mov RDI,QWORD PTR [RAX+32]
            call .L_42f680

            mov R15,RAX
            lea RAX,QWORD PTR [RIP+.L_438de0]
            mov QWORD PTR [RSP+56],RAX
            movzx EBP,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_429570

            lea R13D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea R12,QWORD PTR [RIP+.L_657760]
            add R13,1
            jmp .L_42952a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429520:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_42952a:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_42953f

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_42953f:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,R12
            add R14,1
            call .L_438930

            cmp R13,R14
            jne .L_429520

            nop
            nop
            nop
            nop
            nop
.L_429570:

            mov RAX,QWORD PTR [RSP+8392]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4296ad

            add RSP,8408
.L_42958e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4295a0:

            mov RAX,QWORD PTR [RBP+160]
            mov ESI,R13D
            mov RDI,QWORD PTR [RAX+40]
            call .L_42f680

            movzx EBP,BYTE PTR [RAX]
            mov R15,RAX
            movzx EAX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_429570

            lea R13D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea R12,QWORD PTR [RIP+.L_657760]
            add R13,1
            jmp .L_429602
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4295f8:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_429602:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_429617

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_429617:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,R12
            add R14,1
            call .L_438eb0

            cmp R13,R14
            jne .L_4295f8

            jmp .L_429570
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429650:

            call .L_4257d0

            mov RBX,RAX
            jmp .L_42940a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429660:

            call .L_4257d0

            test R15,R15
            mov RCX,RAX
            mov QWORD PTR [RSP+24],RCX
            jne .L_4293ee

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429680:

            call .L_4257d0

            test R14,R14
            mov R15,RAX
            mov QWORD PTR [RSP+32],R15
            jne .L_4293fc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4296a0:

            call .L_4257d0

            mov R14,RAX
            jmp .L_4293fc
.L_4296ad:

            call __stack_chk_fail@PLT
.L_4296b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4296c0:

            push R15
            push R14
            mov ESI,72
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,1
            sub RSP,168
.L_4296de:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            je .L_429ab0

            mov RAX,QWORD PTR [R12+120]
            test RAX,RAX
            je .L_429ae0

            mov RDX,QWORD PTR [R12+128]
            mov ESI,1195656518
            mov RDI,R12
            call RAX

            test RAX,RAX
            mov RBP,RAX
            je .L_429ae0
.L_429730:

            mov RDI,RBP
            lea R13,QWORD PTR [RSP+112]
            mov DWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov BYTE PTR [RSP+136],0
            mov DWORD PTR [RSP+140],0
            mov QWORD PTR [RSP+144],0
            call .L_401c30

            mov BYTE PTR [RSP+136],0
            mov RDI,RAX
            mov QWORD PTR [RSP+144],RAX
.L_42978c:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+144]
            mov RBX,RAX
            mov QWORD PTR [RSP+120],RAX
            call .L_401d40

            mov R14,QWORD PTR [RSP+120]
            mov EAX,EAX
            add RBX,RAX
            mov QWORD PTR [RSP+128],RBX
            cmp RBX,R14
            jb .L_42a654

            test R14,R14
            mov DWORD PTR [RSP+140],0
            mov DWORD PTR [RSP+112],0
            je .L_429868

            mov RSI,R13
            mov RDI,R14
            call .L_4350e0

            test AL,AL
            jne .L_429853

            mov EAX,DWORD PTR [RSP+140]
            test EAX,EAX
            je .L_42a4f4

            cmp BYTE PTR [RSP+136],0
            jne .L_42a4f4

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d70

            mov RDI,RBP
            mov RBX,RAX
            mov QWORD PTR [RSP+120],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],RBX
            je .L_42a4f4

            mov BYTE PTR [RSP+136],1
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_42978c
.L_429853:

            mov ECX,DWORD PTR [RSP+140]
            test ECX,ECX
            jne .L_42a5f2

            nop
            nop
            nop
            nop
            nop
            nop
.L_429868:

            mov RDI,QWORD PTR [RSP+144]
            call .L_401950
.L_429875:

            mov RBX,QWORD PTR [RSP+48]
            mov RDI,RBP
            mov QWORD PTR [RBX],RBP
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBP
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657760]
            test RAX,RAX
            cmove RAX,RDX
            mov QWORD PTR [RBX+24],RAX
            mov RAX,QWORD PTR [R12+120]
            test RAX,RAX
            je .L_429b00

            mov RDX,QWORD PTR [R12+128]
            mov ESI,1196643650
            mov RDI,R12
            call RAX

            test RAX,RAX
            je .L_429b00
.L_4298ca:

            mov RDI,RAX
            call .L_43a240

            mov R14,QWORD PTR [RSP+48]
            mov RBX,RAX
            mov RDI,RAX
            mov QWORD PTR [R14+8],RAX
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBX
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657760]
            test RAX,RAX
            cmove RAX,RDX
            mov QWORD PTR [R14+32],RAX
            mov RAX,QWORD PTR [R12+120]
            test RAX,RAX
            je .L_429af0

            mov RDX,QWORD PTR [R12+128]
            mov ESI,1196445523
            mov RDI,R12
            call RAX

            test RAX,RAX
            je .L_429af0
.L_42992b:

            mov RDI,RAX
            call .L_43b510

            mov R14,QWORD PTR [RSP+48]
            mov RBX,RAX
            mov RDI,RAX
            mov QWORD PTR [R14+16],RAX
            call .L_401d20

            xor ESI,ESI
            mov RDI,RBX
            call .L_401d50

            lea RDX,QWORD PTR [RIP+.L_657760]
            test RAX,RAX
            mov RDI,QWORD PTR [R14]
            cmove RAX,RDX
            mov QWORD PTR [R14+40],RAX
            call .L_401d40

            mov RDI,QWORD PTR [R14+8]
            mov EBX,EAX
            call .L_401d40

            mov RDI,QWORD PTR [R14+16]
            mov EBP,EAX
            call .L_401d40

            cmp EBX,442
            sete DL
            cmp EAX,42038
            jne .L_429b0a

            test DL,DL
            je .L_429b0a
.L_42999d:

            cmp EBP,2874
            je .L_429c38
.L_4299a9:

            cmp EBX,490
            jne .L_429b50

            cmp EAX,41638
            jne .L_429b50

            cmp EBP,3046
            je .L_429c38
.L_4299cc:

            cmp EBX,910
            jne .L_429b73

            cmp EAX,47732
            jne .L_429b73

            cmp EBP,12566
            je .L_429a80
.L_4299ef:

            cmp EBX,994
            jne .L_429b96

            cmp EAX,60336
            jne .L_429b96

            cmp EBP,24474
            je .L_429a80
.L_429a0e:

            cmp EBX,844
            jne .L_429bb9

            cmp EAX,45474
            jne .L_429bb9

            cmp EBX,188
            sete DL
            cmp EBP,7302
            je .L_429a80
.L_429a36:

            cmp EAX,3426
            jne .L_429be8

            test DL,DL
            je .L_429be8

            cmp EBP,264
            je .L_429a80
.L_429a51:

            cmp EBX,1330
            sete CL
            cmp EAX,57938
            mov EDX,ECX
            jne .L_429c14

            test CL,CL
            je .L_429c14

            cmp EBP,109904
            jne .L_429c75

            nop
            nop
            nop
            nop
            nop
.L_429a80:

            mov RAX,QWORD PTR [RSP+48]
            lea RBX,QWORD PTR [RIP+.L_657760]
            mov QWORD PTR [RAX+24],RBX
            jmp .L_429c75
.L_429a95:

            mov RDI,QWORD PTR [RSP+48]
            call .L_426e00

            mov QWORD PTR [RSP+48],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429ab0:

            mov RBX,QWORD PTR [RSP+152]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+48]
            jne .L_42a673

            add RSP,168
.L_429ad3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_429ae0:

            call .L_401c20

            mov RBP,RAX
            jmp .L_429730
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429af0:

            call .L_401c20

            jmp .L_42992b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429b00:

            call .L_401c20

            jmp .L_4298ca
.L_429b0a:

            cmp EBX,430
            sete CL
            cmp EAX,40662
            jne .L_429b22

            test CL,CL
            jne .L_42999d
.L_429b22:

            cmp EAX,39116
            jne .L_429b31

            test DL,DL
            jne .L_42999d
.L_429b31:

            cmp EAX,39374
            jne .L_4299a9

            test CL,CL
            jne .L_42999d

            jmp .L_4299a9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429b50:

            cmp EBX,478
            jne .L_42a537

            cmp EAX,41902
            jne .L_42a537

            cmp EBP,3046
            je .L_429c38
.L_429b73:

            cmp EBX,928
            jne .L_42a55a

            cmp EAX,59332
            jne .L_42a55a

            cmp EBP,23298
            je .L_429a80
.L_429b96:

            cmp EBX,1006
            jne .L_42a57d

            cmp EAX,61740
            jne .L_42a57d

            cmp EBP,24470
            je .L_429a80
.L_429bb9:

            cmp EBX,192
            jne .L_42a5a0

            cmp EAX,7254
            jne .L_42a5a0

            cmp EBP,12638
            je .L_429a80

            cmp EBP,12690
            je .L_429a80
.L_429be8:

            cmp EBX,1046
            jne .L_42a5ca

            cmp EAX,17112
            jne .L_42a5ca

            cmp EBX,1330
            sete DL
            cmp EBP,71788
            je .L_429a80
.L_429c14:

            cmp EAX,58972
            sete CL
            cmp EBP,109904
            sete AL
            test CL,AL
            je .L_429c75

            test DL,DL
            jne .L_429a80

            jmp .L_429c75
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429c38:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,5
            mov RDX,QWORD PTR [RAX+24]
            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c7a0

            cmp EAX,3
            je .L_429a80
.L_429c75:

            mov RBP,QWORD PTR [RSP+48]
            mov ESI,24
            mov RDI,QWORD PTR [RBP+32]
            mov R15,QWORD PTR [RBP+40]
            movzx EAX,BYTE PTR [RDI+8]
            movzx EDX,BYTE PTR [RDI+9]
            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+72],R15
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ECX,AX
            add RCX,RDI
            test AX,AX
            mov R12,RDX
            cmovne RDX,RCX
            movzx EBX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BX
            mov DWORD PTR [RBP+48],EAX
            movzx EDX,BYTE PTR [R15+8]
            mov DWORD PTR [RSP+60],EAX
            movzx EAX,BYTE PTR [R15+9]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmove RAX,R12
            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EAX,EDX
            mov WORD PTR [RSP+94],AX
            movzx EAX,AX
            mov DWORD PTR [RBP+52],EAX
            movzx EDX,BYTE PTR [RDI+8]
            mov DWORD PTR [RSP+88],EAX
            movzx EAX,BYTE PTR [RDI+9]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,RDI
            test DX,DX
            cmove RAX,R12
            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call calloc@PLT

            mov QWORD PTR [RBP+56],RAX
            movzx EDX,BYTE PTR [R15+8]
            mov R14,RAX
            movzx EAX,BYTE PTR [R15+9]
            mov ESI,24
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmovne R12,RAX
            movzx EDI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call calloc@PLT

            test R14,R14
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RBP+64],RAX
            jne .L_429d87

            test BX,BX
            jne .L_429a95
.L_429d87:

            cmp QWORD PTR [RSP+80],0
            jne .L_429d9b

            cmp WORD PTR [RSP+94],0
            jne .L_429a95
.L_429d9b:

            test BX,BX
            mov DWORD PTR [RSP+56],0
            mov R15,R14
            je .L_42a13f

            nop
.L_429db0:

            mov ESI,DWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+64]
            call .L_42f680

            mov QWORD PTR [R15],0
            mov R12,RAX
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R15+16],0
            movzx EAX,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [R12+1]
            mov QWORD PTR [RSP+96],R15
            mov DWORD PTR [RSP+104],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R12+5]
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R12+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42a128

            lea ECX,DWORD PTR [RSI-1]
            xor R14D,R14D
            mov QWORD PTR [RSP],R12
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+24],RBX
            lea RBX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+32],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429e40:

            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_429e5d

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RAX+R14*2+6]
.L_429e5d:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+32]
            shl EAX,8
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            movzx EDI,AX
            add RDI,QWORD PTR [RSP]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            call .L_415da0

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_42a080

            cmp DX,2
            jne .L_42a05f

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EDI,SI
            je .L_42a05f

            mov QWORD PTR [RSP+40],R14
            lea R9,QWORD PTR [RAX+4]
            xor R11D,R11D
            mov EBX,1
            mov R14D,EDI
            jmp .L_429f92
.L_429ee0:

            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov R12D,4294967295
            xor ECX,ECX
            xor R10D,R10D
            mov R8D,1
            xor ESI,ESI
.L_429ef9:

            mov R13,RBX
            shl R13,CL
            mov ECX,R10D
            mov R10D,2
            and ECX,63
            shl R10,CL
            sub R10,R13
            mov QWORD PTR [RSP+8],R10
            mov R10,RBX
            shl R10,CL
            cmp R13,R10
            mov R10,QWORD PTR [RSP+8]
            seta CL
            movzx ECX,CL
            sub R10,RCX
            or QWORD PTR [R15],R10
            cmp R12D,62
            jbe .L_42a006
.L_429f3a:

            cmp EBP,62
            mov QWORD PTR [R15+8],-1
            ja .L_42a041
.L_429f4b:

            mov ECX,EDI
            mov RSI,RBX
            mov RDI,RBX
            shl RSI,CL
            mov ECX,EDX
            mov EDX,2
            and ECX,63
            shl RDX,CL
            shl RDI,CL
            sub RDX,RSI
            cmp RSI,RDI
            seta CL
            add R11D,1
            add R9,6
            movzx ECX,CL
            sub RDX,RCX
            or QWORD PTR [R15+16],RDX
            cmp R14D,R11D
            je .L_42a05a
.L_429f8a:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_429f92:

            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,R11D
            jbe .L_429ee0

            movzx ESI,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            movzx R8D,BYTE PTR [R9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R9+1]
            shl R8D,8
            movzx EDX,SI
            mov R10D,EDX
            mov R12D,EDX
            shr EDX,9
            shr R10D,4
            mov EBP,EDX
            add R8D,ECX
            mov R13D,R10D
            movzx EDI,R8W
            mov ECX,EDI
            sub R12D,EDI
            shr EDI,9
            shr ECX,4
            sub EBP,EDI
            sub R13D,ECX
            cmp R13D,62
            jbe .L_429ef9

            cmp R12D,62
            mov QWORD PTR [R15],-1
            ja .L_429f3a
.L_42a006:

            mov ECX,R8D
            mov R10,RBX
            shl R10,CL
            mov ECX,ESI
            mov ESI,2
            and ECX,63
            mov R8,R10
            shl RSI,CL
            sub RSI,R10
            mov R10,RBX
            shl R10,CL
            cmp R8,R10
            seta CL
            movzx ECX,CL
            sub RSI,RCX
            or QWORD PTR [R15+8],RSI
            cmp EBP,62
            jbe .L_429f4b
.L_42a041:

            add R11D,1
            add R9,6
            mov QWORD PTR [R15+16],-1
            cmp R14D,R11D
            jne .L_429f8a
.L_42a05a:

            mov R14,QWORD PTR [RSP+40]
.L_42a05f:

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            je .L_42a128
.L_42a06e:

            mov RBX,QWORD PTR [RSP]
            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            jmp .L_429e40
          .byte 0x90
.L_42a080:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EBP,SI
            je .L_42a05f

            mov RBX,QWORD PTR [R15]
            mov R11,QWORD PTR [R15+8]
            lea R9,QWORD PTR [RAX+4]
            mov R10,QWORD PTR [R15+16]
            xor EDI,EDI
            mov R8D,1
            jmp .L_42a0b8
.L_42a0b0:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_42a0b8:

            shl EDX,8
            mov R12,R8
            mov R13,R8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EDX,EDI
            cmova RCX,R9
            add EDI,1
            add R9,2
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            mov ECX,ESI
            shr ESI,9
            shr ECX,4
            shl R12,CL
            mov ECX,EDX
            mov RDX,R8
            shl R13,CL
            mov ECX,ESI
            or RBX,R12
            shl RDX,CL
            or R11,R13
            mov QWORD PTR [R15],RBX
            or R10,RDX
            cmp EBP,EDI
            mov QWORD PTR [R15+8],R11
            mov QWORD PTR [R15+16],R10
            jne .L_42a0b0

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            jne .L_42a06e
.L_42a128:

            add DWORD PTR [RSP+56],1
            add R15,24
            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,DWORD PTR [RSP+60]
            jne .L_429db0
.L_42a13f:

            cmp WORD PTR [RSP+94],0
            je .L_429ab0

            mov R14,QWORD PTR [RSP+80]
            mov DWORD PTR [RSP+56],0
            mov R15,R14
            nop
            nop
            nop
            nop
            nop
.L_42a160:

            mov ESI,DWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+72]
            call .L_42f680

            mov QWORD PTR [R15],0
            mov R12,RAX
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R15+16],0
            movzx EAX,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [R12+1]
            mov QWORD PTR [RSP+96],R15
            mov DWORD PTR [RSP+104],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R12+5]
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R12+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42a4d8

            lea ECX,DWORD PTR [RSI-1]
            xor R14D,R14D
            mov QWORD PTR [RSP],R12
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+24],RBX
            lea RBX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+32],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a1f0:

            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_42a20d

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RAX+R14*2+6]
.L_42a20d:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+32]
            shl EAX,8
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            movzx EDI,AX
            add RDI,QWORD PTR [RSP]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            call .L_43bab0

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_42a430

            cmp DX,2
            jne .L_42a40f

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EDI,SI
            je .L_42a40f

            mov QWORD PTR [RSP+40],R14
            lea R9,QWORD PTR [RAX+4]
            xor R11D,R11D
            mov EBX,1
            mov R14D,EDI
            jmp .L_42a342
.L_42a290:

            xor EBP,EBP
            xor EDI,EDI
            xor EDX,EDX
            mov R12D,4294967295
            xor ECX,ECX
            xor R10D,R10D
            mov R8D,1
            xor ESI,ESI
.L_42a2a9:

            mov R13,RBX
            shl R13,CL
            mov ECX,R10D
            mov R10D,2
            and ECX,63
            shl R10,CL
            sub R10,R13
            mov QWORD PTR [RSP+8],R10
            mov R10,RBX
            shl R10,CL
            cmp R13,R10
            mov R10,QWORD PTR [RSP+8]
            seta CL
            movzx ECX,CL
            sub R10,RCX
            or QWORD PTR [R15],R10
            cmp R12D,62
            jbe .L_42a3b6
.L_42a2ea:

            cmp EBP,62
            mov QWORD PTR [R15+8],-1
            ja .L_42a3f1
.L_42a2fb:

            mov ECX,EDI
            mov RSI,RBX
            mov RDI,RBX
            shl RSI,CL
            mov ECX,EDX
            mov EDX,2
            and ECX,63
            shl RDX,CL
            shl RDI,CL
            sub RDX,RSI
            cmp RSI,RDI
            seta CL
            add R11D,1
            add R9,6
            movzx ECX,CL
            sub RDX,RCX
            or QWORD PTR [R15+16],RDX
            cmp R14D,R11D
            je .L_42a40a
.L_42a33a:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_42a342:

            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,R11D
            jbe .L_42a290

            movzx ESI,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            movzx R8D,BYTE PTR [R9]
            shl ESI,8
            add ESI,ECX
            movzx ECX,BYTE PTR [R9+1]
            shl R8D,8
            movzx EDX,SI
            mov R10D,EDX
            mov R12D,EDX
            shr EDX,9
            shr R10D,4
            mov EBP,EDX
            add R8D,ECX
            mov R13D,R10D
            movzx EDI,R8W
            mov ECX,EDI
            sub R12D,EDI
            shr EDI,9
            shr ECX,4
            sub EBP,EDI
            sub R13D,ECX
            cmp R13D,62
            jbe .L_42a2a9

            cmp R12D,62
            mov QWORD PTR [R15],-1
            ja .L_42a2ea
.L_42a3b6:

            mov ECX,R8D
            mov R10,RBX
            shl R10,CL
            mov ECX,ESI
            mov ESI,2
            and ECX,63
            mov R8,R10
            shl RSI,CL
            sub RSI,R10
            mov R10,RBX
            shl R10,CL
            cmp R8,R10
            seta CL
            movzx ECX,CL
            sub RSI,RCX
            or QWORD PTR [R15+8],RSI
            cmp EBP,62
            jbe .L_42a2fb
.L_42a3f1:

            add R11D,1
            add R9,6
            mov QWORD PTR [R15+16],-1
            cmp R14D,R11D
            jne .L_42a33a
.L_42a40a:

            mov R14,QWORD PTR [RSP+40]
.L_42a40f:

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            je .L_42a4d8
.L_42a41e:

            mov RBX,QWORD PTR [RSP]
            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            jmp .L_42a1f0
          .byte 0x90
.L_42a430:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
            mov ESI,EDX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx EBP,SI
            je .L_42a40f

            mov RBX,QWORD PTR [R15]
            mov R11,QWORD PTR [R15+8]
            lea R9,QWORD PTR [RAX+4]
            mov R10,QWORD PTR [R15+16]
            xor EDI,EDI
            mov R8D,1
            jmp .L_42a468
.L_42a460:

            movzx EDX,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX+3]
.L_42a468:

            shl EDX,8
            mov R12,R8
            mov R13,R8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EDX,EDI
            cmova RCX,R9
            add EDI,1
            add R9,2
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            mov ECX,ESI
            shr ESI,9
            shr ECX,4
            shl R12,CL
            mov ECX,EDX
            mov RDX,R8
            shl R13,CL
            mov ECX,ESI
            or RBX,R12
            shl RDX,CL
            or R11,R13
            mov QWORD PTR [R15],RBX
            or R10,RDX
            cmp EBP,EDI
            mov QWORD PTR [R15+8],R11
            mov QWORD PTR [R15+16],R10
            jne .L_42a460

            add R14,1
            cmp QWORD PTR [RSP+24],R14
            jne .L_42a41e
.L_42a4d8:

            add DWORD PTR [RSP+56],1
            add R15,24
            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,DWORD PTR [RSP+88]
            jne .L_42a160

            jmp .L_429ab0
.L_42a4f4:

            mov RDI,QWORD PTR [RSP+144]
            call .L_401950

            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+120],0
.L_42a522:

            mov RDI,RBP
            call .L_401950

            call .L_401c20

            mov RBP,RAX
            jmp .L_429875
.L_42a537:

            cmp EBX,898
            jne .L_4299cc

            cmp EAX,46470
            jne .L_4299cc

            cmp EBP,12554
            je .L_429a80
.L_42a55a:

            cmp EBX,940
            jne .L_4299ef

            cmp EAX,60732
            jne .L_4299ef

            cmp EBP,23310
            je .L_429a80
.L_42a57d:

            cmp EBX,832
            jne .L_429a0e

            cmp EAX,47162
            jne .L_429a0e

            cmp EBP,7324
            je .L_429a80
.L_42a5a0:

            cmp EBX,188
            sete CL
            cmp EAX,3852
            mov EDX,ECX
            jne .L_429a36

            test CL,CL
            je .L_429a36

            cmp EBP,248
            je .L_429a80
.L_42a5ca:

            cmp EBX,1058
            jne .L_429a51

            cmp EAX,17514
            jne .L_429a51

            cmp EBP,71794
            jne .L_429c75

            jmp .L_429a80
.L_42a5f2:

            mov RSI,R13
            mov RDI,R14
            mov DWORD PTR [RSP+140],0
            call .L_4350e0

            mov EDX,DWORD PTR [RSP+140]
            mov EBX,EAX
            test EDX,EDX
            jne .L_42a4f4

            mov RDI,QWORD PTR [RSP+144]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+120],0
            jne .L_429875

            jmp .L_42a522
.L_42a654:

            lea RCX,QWORD PTR [RIP+.L_44c5c0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_42a673:

            call __stack_chk_fail@PLT
.L_42a678:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a680:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,344
.L_42a691:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+328],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+24]
            mov R8D,DWORD PTR [RAX+184]
            mov QWORD PTR [RSP+16],RAX
            test R8D,R8D
            je .L_42a980

            mov RBP,RDX
            mov EDX,DWORD PTR [RDI+36]
            mov R15,RDI
            test EDX,EDX
            je .L_42a980

            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            mov R14,RSI
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            test AL,16
            jne .L_42ac08
.L_42a6e9:

            cmp DWORD PTR [R15],1
            mov DWORD PTR [R15+60],EAX
            mov QWORD PTR [R15+88],R15
            mov QWORD PTR [R15+128],0
            mov QWORD PTR [R15+112],0
            mov QWORD PTR [R15+120],0
            mov DWORD PTR [R15+96],EAX
            je .L_42ab58

            movzx ECX,BYTE PTR [R15+40]
            mov BYTE PTR [R15+100],0
.L_42a724:

            lea RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [R15+101],CL
            mov DWORD PTR [R15+160],EAX
            mov ECX,34
            xor EAX,EAX
            mov DWORD PTR [R15+104],EDX
            mov QWORD PTR [R15+152],R15
            mov QWORD PTR [R15+192],0
            mov RBX,RDI
            mov QWORD PTR [R15+176],0
            mov QWORD PTR [R15+184],0
            mov BYTE PTR [R15+164],1
            mov BYTE PTR [R15+165],1
            mov DWORD PTR [R15+168],4294967295
            mov QWORD PTR [RSP+24],RDI

            rep stosq QWORD PTR [RDI]

            movzx ECX,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            movzx EDX,BYTE PTR [R14+5]
            mov QWORD PTR [RSP+32],RBX
            mov DWORD PTR [RSP+40],0
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [R14+4]
            movzx EBX,CX
            mov ESI,EAX
            shl ESI,8
            add ESI,EDX
            test SI,SI
            movzx EDI,SI
            je .L_42abf0

            lea R13D,DWORD PTR [RDI-1]
            lea R12,QWORD PTR [RIP+.L_657760]
            lea RSI,QWORD PTR [R13+1]
            xor R13D,R13D
            mov QWORD PTR [RSP],RSI
            lea RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RSI
            jmp .L_42a7fa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a7f0:

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
.L_42a7fa:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_42a80f

            lea RDX,QWORD PTR [R14+R13*2+6]
.L_42a80f:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+8]
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R12
            add R13,1
            call .L_43bdc0

            cmp QWORD PTR [RSP],R13
            jne .L_42a7f0

            movzx EBX,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            shl EBX,8
            add EBX,EAX
            cmp BX,7
            je .L_42ab80

            movzx EBX,BX
.L_42a859:

            cmp EBX,8
            sete BL
.L_42a85f:

            test BL,BL
            jne .L_42aa58
.L_42a867:

            mov R14,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RIP+.L_657760]
            mov RDI,R14
            call .L_402730

            mov DWORD PTR [R14+180],0
            mov R13,QWORD PTR [R15+24]
            mov EDX,DWORD PTR [R13+180]
            jmp .L_42a8a9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a898:

            mov EDX,DWORD PTR [R13+180]
.L_42a89f:

            add EDX,1
            mov DWORD PTR [R13+180],EDX
.L_42a8a9:

            cmp DWORD PTR [R13+184],EDX
            jbe .L_42a960
.L_42a8b6:

            cmp BYTE PTR [R13+176],0
            jne .L_42a960

            mov RAX,QWORD PTR [R13+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBP],RDI
            je .L_42a910

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBP+8],RDI
            je .L_42a910

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            jne .L_42a9b0

            nop
            nop
            nop
            nop
            nop
.L_42a910:

            cmp BYTE PTR [R13+177],0
            je .L_42a898

            mov RAX,QWORD PTR [R13+200]
            cmp QWORD PTR [R13+208],RAX
            je .L_42aa30
.L_42a932:

            mov EDX,1
            mov ESI,1
            mov RDI,R13
            call .L_4022b0

            test AL,AL
            jne .L_42ab08

            mov EDX,DWORD PTR [R13+180]
            cmp DWORD PTR [R13+184],EDX
            ja .L_42a8b6
.L_42a960:

            test BL,BL
            jne .L_42ab70
.L_42a968:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+56]
            add RAX,16
            cmp RDI,RAX
            je .L_42a980

            call free@PLT
.L_42a980:

            mov RAX,QWORD PTR [RSP+328]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ad9a

            add RSP,344
.L_42a99e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a9b0:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [R15+36],EAX
            je .L_42a910

            mov ECX,DWORD PTR [R15+60]
            movzx EAX,WORD PTR [RDX+12]
            mov R14D,ECX
            and R14D,14
            mov EDX,EAX
            and R14D,EAX
            jne .L_42a910

            and EDX,8
            jne .L_42acb0
.L_42a9e0:

            mov ESI,DWORD PTR [RSP+48]
            test ESI,ESI
            jne .L_42a9ff

            jmp .L_42a910
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a9f0:

            add R14D,1
            cmp DWORD PTR [RSP+48],R14D
            jbe .L_42a910
.L_42a9ff:

            mov EAX,R14D
            mov RSI,R15
            shl RAX,4
            add RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_42a9f0

            mov EDX,DWORD PTR [R13+180]
            mov EBX,EAX
            jmp .L_42a8a9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42aa30:

            mov EAX,DWORD PTR [R13+180]
            cmp DWORD PTR [R13+188],EAX
            jne .L_42a932

            mov EDX,EAX
.L_42aa46:

            add EAX,1
            mov DWORD PTR [R13+188],EAX
            jmp .L_42a89f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42aa58:

            mov RBX,QWORD PTR [RSP+16]
            mov R13D,1
            mov RDI,RBX
            call .L_402700

            mov EAX,DWORD PTR [RBX+184]
            mov DWORD PTR [RSP],EAX
            sub EAX,1
            mov DWORD PTR [RBX+180],EAX
            mov R12,QWORD PTR [R15+24]
            mov EBX,DWORD PTR [R12+180]
.L_42aa89:

            mov EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            lea RSI,QWORD PTR [RAX+RDX*4]
            mov RDX,R13
            mov EAX,DWORD PTR [RSI]
            mov ECX,EAX
            shr ECX,4
            shl RDX,CL
            test QWORD PTR [RBP],RDX
            je .L_42aaf0

            mov RDX,R13
            mov ECX,EAX
            shl RDX,CL
            test QWORD PTR [RBP+8],RDX
            je .L_42aaf0

            shr EAX,9
            mov ECX,EAX
            mov RAX,R13
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            je .L_42aaf0

            mov EAX,DWORD PTR [RSI+4]
            test DWORD PTR [R15+36],EAX
            je .L_42aaf0

            mov EDX,DWORD PTR [R15+60]
            mov RDI,R15
            call .L_42d600

            test AL,AL
            jne .L_42ac3a

            nop
            nop
            nop
            nop
            nop
            nop
.L_42aaf0:

            sub EBX,1
            test EBX,EBX
            mov DWORD PTR [R12+180],EBX
            jns .L_42aa89

            jmp .L_42a968
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ab08:

            mov EAX,DWORD PTR [R13+188]
            mov RDX,QWORD PTR [R13+208]
            mov RCX,QWORD PTR [R13+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [R13+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [R13+188]
            mov EDX,DWORD PTR [R13+180]
            jmp .L_42aa46
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ab58:

            mov BYTE PTR [R15+100],1
            mov ECX,1
            jmp .L_42a724
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ab70:

            mov RDI,QWORD PTR [RSP+16]
            call .L_4027c0

            jmp .L_42a968
          .byte 0x90
.L_42ab80:

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
            lea RDX,QWORD PTR [R14+6]
            shl EAX,8
            add AX,CX
            je .L_42abfa
.L_42ab96:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ECX,AX
            test AX,AX
            lea R9,QWORD PTR [R14+RCX*1]
            cmovne RDX,R9
.L_42abb7:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            jne .L_42ac33

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            cmp AX,7
            je .L_42ac7e

            cmp AX,8
            sete BL
            jmp .L_42a85f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42abf0:

            cmp CX,7
            jne .L_42a859
.L_42abfa:

            lea RDX,QWORD PTR [RIP+.L_657760]
            jmp .L_42ab96
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ac08:

            movzx ECX,BYTE PTR [RSI+4]
            movzx ESI,BYTE PTR [RSI+5]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            lea RSI,QWORD PTR [R14+RCX*2+6]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            shl ECX,16
            add EAX,ECX
            jmp .L_42a6e9
.L_42ac33:

            xor EBX,EBX
            jmp .L_42a867
.L_42ac3a:

            mov EAX,DWORD PTR [RSP+48]
            test EAX,EAX
            je .L_42aaf0

            xor EBX,EBX
            jmp .L_42ac59
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ac50:

            add EBX,1
            cmp DWORD PTR [RSP+48],EBX
            jbe .L_42ac71
.L_42ac59:

            mov EAX,EBX
            mov RSI,R15
            shl RAX,4
            add RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_42ac50
.L_42ac71:

            mov EBX,DWORD PTR [R12+180]
            jmp .L_42aaf0
.L_42ac7e:

            movzx EAX,BYTE PTR [RDX+4]
            movzx ECX,BYTE PTR [RDX+5]
            shl EAX,24
            shl ECX,16
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+6]
            shl ECX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+7]
            add EAX,ECX
            je .L_42ad8e

            mov EAX,EAX
            add RDX,RAX
            jmp .L_42abb7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42acb0:

            test CL,16
            jne .L_42acce

            test CH,255
            je .L_42a9e0

            xor EAX,ECX
            test AH,255
            jne .L_42a910

            jmp .L_42a9e0
.L_42acce:

            mov RAX,QWORD PTR [R15+64]
            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            movzx R9D,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,EDI
            movzx EDI,BYTE PTR [RAX+2]
            shl EDX,16
            shl EDI,8
            add EDI,R9D
            movzx EDI,DI
            add EDX,EDI
            cmp EDX,65537
            jbe .L_42a910

            movzx EDX,BYTE PTR [RAX+12]
            movzx EDI,BYTE PTR [RAX+13]
            shl EDX,8
            add EDX,EDI
            movzx EDI,DX
            add RAX,RDI
            test DX,DX
            cmove RAX,R12
            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EDI
            cmp DX,1
            jne .L_42a910

            movzx EDX,BYTE PTR [RAX+2]
            movzx EDI,BYTE PTR [RAX+3]
            shr ECX,16
            shl EDX,8
            add EDX,EDI
            mov RDI,R12
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_42ad50

            lea RDI,QWORD PTR [RAX+RCX*4+4]
.L_42ad50:

            movzx EDX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EDX,24
            shl ECX,16
            add EDX,ECX
            movzx ECX,BYTE PTR [RDI+2]
            shl ECX,8
            add EDX,ECX
            movzx ECX,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RDX+RCX*1]
            add RAX,RDI
            test EDI,EDI
            cmove RAX,R12
            mov RDI,RAX
            call .L_42c320

            cmp EAX,-1
            je .L_42a910

            jmp .L_42a9e0
.L_42ad8e:

            lea RDX,QWORD PTR [RIP+.L_657760]
            jmp .L_42abb7
.L_42ad9a:

            call __stack_chk_fail@PLT
.L_42ad9f:

            nop
.L_42ada0:

            jmp .L_42a680
.L_42ada5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42adb0:

            sub RSP,40
.L_42adb4:

            mov R8,RCX
            mov R9,RSI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX+128]
            mov RSI,RSP
            mov RAX,QWORD PTR [RAX+160]
            mov RCX,QWORD PTR [RAX+40]
            mov RAX,QWORD PTR [RAX+64]
            mov QWORD PTR [RSP],RCX
            mov RCX,RDX
            mov RDX,R9
            mov QWORD PTR [RSP+8],RAX
            call .L_43c250

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ae0c

            add RSP,40
.L_42ae0b:

            ret 
.L_42ae0c:

            call __stack_chk_fail@PLT
.L_42ae11:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ae20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,648
.L_42ae35:

            mov QWORD PTR [RSP+104],RSI
            mov QWORD PTR [RSP+16],RDX
            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+128]
            mov QWORD PTR [RSP+136],RSI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+632],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+152],RCX
            mov QWORD PTR [RSP+8],RDI
            mov RAX,QWORD PTR [RDX+160]
            mov QWORD PTR [RSP+144],RDX
            mov EDX,DWORD PTR [RCX+144]
            mov QWORD PTR [RSP+24],RCX
            mov DWORD PTR [RSP+128],0
            mov RBX,QWORD PTR [RAX+32]
            mov QWORD PTR [RSP+176],0
            mov DWORD PTR [RSP+160],EDX
            mov DWORD PTR [RSP+164],1
            mov BYTE PTR [RSP+168],1
            mov QWORD PTR [RSP+88],RBX
            mov RBX,QWORD PTR [RAX+56]
            mov QWORD PTR [RSP+184],3
            mov RDX,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+96],RBX
            mov QWORD PTR [RSP+192],RDX
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl EAX,8
            add AX,DX
            mov EAX,4294967295
            setne BYTE PTR [RSP+200]
            mov R9D,DWORD PTR [RDI+864]
            mov QWORD PTR [RSP+336],RAX
            lea RAX,QWORD PTR [RIP+.L_436ce0]
            mov QWORD PTR [RSP+240],0
            movaps XMMWORD PTR [RSP+224],XMM0
            test R9D,R9D
            mov DWORD PTR [RSP+232],4294967295
            mov BYTE PTR [RSP+236],0
            movaps XMMWORD PTR [RSP+288],XMM0
            movaps XMMWORD PTR [RSP+208],XMM0
            movaps XMMWORD PTR [RSP+256],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+320],XMM0
            mov QWORD PTR [RSP+248],0
            mov DWORD PTR [RSP+296],4294967295
            mov BYTE PTR [RSP+300],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+176],RAX
            je .L_42b16a

            lea R14,QWORD PTR [RIP+.L_657760]
            lea R15,QWORD PTR [RIP+.L_44c340]
            xor R13D,R13D
            mov DWORD PTR [RSP+84],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42afd0:

            mov EAX,DWORD PTR [RSP+84]
            mov RSI,QWORD PTR [RSP+8]
            shl RAX,4
            add RAX,QWORD PTR [RSI+872]
            cmp R13D,DWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
            jae .L_42b127

            nop
            nop
            nop
            nop
            nop
            nop
.L_42aff8:

            mov RDI,QWORD PTR [RSP+8]
            mov EAX,R13D
            mov RSI,QWORD PTR [RSP+16]
            lea RBX,QWORD PTR [RAX*8]
            mov RDX,QWORD PTR [RDI+328]
            mov RDI,QWORD PTR [RSP+24]
            movzx EBP,WORD PTR [RDX+RAX*8]
            lea RDX,QWORD PTR [RIP+.L_44c2e8]
            xor EAX,EAX
            mov ECX,EBP
            mov DWORD PTR [RSP+36],EBP
            mov R12D,EBP
            call .L_42c190

            test AL,AL
            je .L_42b115

            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+336],EBP
            movzx ECX,BP
            mov RSI,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RCX+RCX*2]
            add RBX,QWORD PTR [RDI+328]
            lea RBP,QWORD PTR [RSI+RDX*8]
            mov R10D,DWORD PTR [RBX+4]
            mov DWORD PTR [RSP+164],R10D
            movzx EDI,BYTE PTR [RBX+2]
            mov RBX,QWORD PTR [RSP+88]
            and EDI,1
            mov BYTE PTR [RSP+168],DIL
            movzx ESI,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            shl ESI,8
            add ESI,EDX
            movzx EDX,SI
            add RDX,RBX
            test SI,SI
            cmove RDX,R14
            movzx ESI,BYTE PTR [RDX]
            movzx R9D,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,R9D
            mov R9,R14
            movzx ESI,SI
            cmp R12D,ESI
            jae .L_42b0d1

            lea RSI,QWORD PTR [RDX+RCX*2+2]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            movzx R9D,CX
            add R9,RDX
            test CX,CX
            cmove R9,R14
.L_42b0d1:

            mov R12,QWORD PTR [RSP+152]
            mov R8D,DWORD PTR [R12+184]
            test R8D,R8D
            sete CL
            test R10D,R10D
            sete DL
            or CL,DL
            mov BYTE PTR [RSP+35],CL
            je .L_42b198
.L_42b0f9:

            mov ECX,DWORD PTR [RSP+36]
            mov RSI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_44c308]
            mov RDI,QWORD PTR [RSP+24]
            xor EAX,EAX
            call .L_42c190
.L_42b115:

            mov RAX,QWORD PTR [RSP+40]
            add R13D,1
            cmp DWORD PTR [RAX],R13D
            ja .L_42aff8
.L_42b127:

            mov RBX,QWORD PTR [RSP+40]
            cmp QWORD PTR [RBX+8],0
            je .L_42b150

            mov RBP,QWORD PTR [RSP+24]
            mov RDI,RBP
            call .L_402730

            mov RDX,RBP
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+104]
            call QWORD PTR [RBX+8]
.L_42b150:

            mov RSI,QWORD PTR [RSP+8]
            add DWORD PTR [RSP+84],1
            mov EAX,DWORD PTR [RSP+84]
            cmp DWORD PTR [RSI+864],EAX
            ja .L_42afd0
.L_42b16a:

            mov RAX,QWORD PTR [RSP+632]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42bd5f

            add RSP,648
.L_42b188:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b198:

            movzx EDX,BYTE PTR [R9+2]
            movzx ECX,BYTE PTR [R9+3]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            and EDX,16
            jne .L_42baf0
.L_42b1b3:

            cmp DWORD PTR [RSP+128],1
            lea RSI,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+188],ECX
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+216],RSI
            mov QWORD PTR [RSP+248],0
            mov DWORD PTR [RSP+224],ECX
            je .L_42b850

            mov BYTE PTR [RSP+228],0
.L_42b210:

            mov RAX,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+229],DIL
            lea RDI,QWORD PTR [RSP+352]
            mov DWORD PTR [RSP+288],ECX
            mov ECX,34
            mov DWORD PTR [RSP+232],R10D
            mov RSI,RDI
            mov QWORD PTR [RSP+56],RDI
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+112],RSI

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov BYTE PTR [RSP+292],1
            mov BYTE PTR [RSP+293],1
            mov DWORD PTR [RSP+296],4294967295
            mov DWORD PTR [RSP+120],0
            movzx R10D,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            movzx EDX,BYTE PTR [R9+5]
            shl R10D,8
            add R10D,EAX
            movzx EAX,BYTE PTR [R9+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42b980

            lea EBX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+64],RBP
            mov QWORD PTR [RSP+72],R12
            mov DWORD PTR [RSP+80],R13D
            mov RBP,R9
            mov R12D,R10D
            lea RDI,QWORD PTR [RBX+1]
            xor EBX,EBX
            mov R13,RBX
            mov QWORD PTR [RSP],RDI
            nop
            nop
            nop
            nop
.L_42b2f0:

            shl EAX,8
            add EAX,EDX
            mov RDX,R14
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_42b305

            lea RDX,QWORD PTR [RBP+R13*2+6]
.L_42b305:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov RBX,RDX
            cmove RBX,R14
            cmp R12W,8
            ja .L_42b350

            movzx EAX,R12W
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b338:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            je .L_42b950

            nop
            nop
.L_42b350:

            add R13,1
            cmp R13,QWORD PTR [RSP]
            je .L_42b3b8
.L_42b35a:

            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            jmp .L_42b2f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b368:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,2
            je .L_42ba60

            cmp AX,3
            je .L_42ba30

            cmp AX,1
            jne .L_42b350

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            add R13,1
            cmp R13,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RIP+.L_42e6b0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jne .L_42b35a

            nop
            nop
            nop
.L_42b3b8:

            mov R9,RBP
            mov R12,QWORD PTR [RSP+72]
            mov RBP,QWORD PTR [RSP+64]
            movzx R10D,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            mov R13D,DWORD PTR [RSP+80]
            shl R10D,8
            add R10D,EAX
            cmp R10W,7
            je .L_42b860
.L_42b3e5:

            movzx R10D,R10W
            cmp R10D,8
            sete BYTE PTR [RSP+35]
.L_42b3f2:

            cmp BYTE PTR [RSP+35],0
            je .L_42b688

            mov RDI,R12
            call .L_402700

            mov EAX,DWORD PTR [R12+184]
            sub EAX,1
            mov DWORD PTR [R12+180],EAX
            mov R12,QWORD PTR [RSP+152]
            mov EBX,DWORD PTR [R12+180]
.L_42b428:

            mov EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBP],RDI
            je .L_42b478

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBP+8],RDI
            je .L_42b478

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            jne .L_42b998

            nop
            nop
            nop
            nop
            nop
            nop
.L_42b478:

            sub EBX,1
            test EBX,EBX
            mov DWORD PTR [R12+180],EBX
            jns .L_42b428

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b490:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+360]
            add RAX,16
            cmp RDI,RAX
            je .L_42b0f9

            call free@PLT

            jmp .L_42b0f9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b4b8:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,2
            je .L_42bac0

            cmp AX,3
            je .L_42ba90

            cmp AX,1
            jne .L_42b350

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RDI,QWORD PTR [RIP+.L_42d170]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_42b350
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b510:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_42b350

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RDI,QWORD PTR [RIP+.L_430860]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_42b350
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b550:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_42b350

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RDI,QWORD PTR [RIP+.L_42fde0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_42b350
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b590:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            je .L_42b920

            cmp AX,2
            jne .L_42b350

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RSI,QWORD PTR [RIP+.L_42d8d0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b5e0:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_42b350

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            movzx EDX,BYTE PTR [RBX+3]
            mov EDI,ESI
            shl EAX,16
            shl EDI,24
            lea ESI,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RBX+7]
            lea EDI,DWORD PTR [RAX+RSI*1]
            lea RSI,QWORD PTR [RSP+112]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            movzx EAX,BYTE PTR [RBX+2]
            cmove RDI,R14
            shl EAX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_43bdc0

            jmp .L_42b350
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b648:

            movzx EAX,BYTE PTR [RBX]
            movzx ESI,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,ESI
            cmp AX,1
            jne .L_42b350

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RSI,QWORD PTR [RIP+.L_430340]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_42b350
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b688:

            mov RDI,R12
            call .L_402730

            mov RBX,QWORD PTR [RSP+152]
            mov DWORD PTR [R12+180],0
            mov EDX,DWORD PTR [RBX+180]
            jmp .L_42b6bf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b6b0:

            mov EDX,DWORD PTR [RBX+180]
.L_42b6b6:

            add EDX,1
            mov DWORD PTR [RBX+180],EDX
.L_42b6bf:

            cmp DWORD PTR [RBX+184],EDX
            jbe .L_42b770
.L_42b6cb:

            cmp BYTE PTR [RBX+176],0
            jne .L_42b770

            mov RAX,QWORD PTR [RBX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBP],RDI
            je .L_42b720

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBP+8],RDI
            je .L_42b720

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBP+16],RAX
            jne .L_42b790

            nop
            nop
            nop
            nop
            nop
.L_42b720:

            cmp BYTE PTR [RBX+177],0
            je .L_42b6b0

            mov RAX,QWORD PTR [RBX+200]
            cmp QWORD PTR [RBX+208],RAX
            je .L_42b828
.L_42b73d:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_4022b0

            test AL,AL
            jne .L_42b8d8

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+184],EDX
            ja .L_42b6cb

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b770:

            cmp BYTE PTR [RSP+35],0
            je .L_42b490

            mov RDI,R12
            call .L_4027c0

            jmp .L_42b490
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b790:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [RSP+164],EAX
            je .L_42b720

            mov EDI,DWORD PTR [RSP+188]
            movzx EAX,WORD PTR [RDX+12]
            mov EDX,EDI
            and EDX,14
            mov ECX,EAX
            and EDX,EAX
            jne .L_42b720

            and ECX,8
            jne .L_42bb2e
.L_42b7bf:

            mov ESI,DWORD PTR [RSP+352]
            test ESI,ESI
            je .L_42b720

            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+64],RBX
            mov EBX,EDX
            mov RBP,QWORD PTR [RSP+48]
            jmp .L_42b7f0
.L_42b7e0:

            add EBX,1
            cmp DWORD PTR [RSP+352],EBX
            jbe .L_42bb20
.L_42b7f0:

            mov EAX,EBX
            mov RSI,RBP
            shl RAX,4
            add RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_42b7e0

            mov RBX,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [RSP]
            mov BYTE PTR [RSP+35],AL
            mov EDX,DWORD PTR [RBX+180]
            jmp .L_42b6bf
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b828:

            mov EAX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EAX
            jne .L_42b73d

            mov EDX,EAX
.L_42b83c:

            add EAX,1
            mov DWORD PTR [RBX+188],EAX
            jmp .L_42b6b6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b850:

            mov BYTE PTR [RSP+228],1
            mov EDI,EAX
            jmp .L_42b210
          .byte 0x90
.L_42b860:

            movzx EAX,BYTE PTR [R9+4]
            movzx ECX,BYTE PTR [R9+5]
            lea RDX,QWORD PTR [R9+6]
            shl EAX,8
            add AX,CX
            je .L_42b98b
.L_42b87a:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            lea RCX,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R9,RDX
            test AX,AX
            cmovne RCX,R9
.L_42b89a:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_42b688

            movzx EAX,BYTE PTR [RCX+2]
            movzx EDX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,EDX
            cmp AX,7
            je .L_42bc30

            cmp AX,8
            sete BYTE PTR [RSP+35]
            jmp .L_42b3f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b8d8:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RCX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBX+188]
            mov EDX,DWORD PTR [RBX+180]
            jmp .L_42b83c
.L_42b920:

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RSI,QWORD PTR [RIP+.L_42d820]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b950:

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RSI,QWORD PTR [RIP+.L_4316e0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b980:

            cmp R10W,7
            jne .L_42b3e5
.L_42b98b:

            mov RDX,R14
            jmp .L_42b87a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b998:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [RSP+164],EAX
            je .L_42b478

            mov EAX,DWORD PTR [RSP+188]
            movzx ECX,WORD PTR [RDX+12]
            mov EDX,EAX
            and EDX,14
            mov EDI,ECX
            and EDX,ECX
            jne .L_42b478

            and EDI,8
            jne .L_42bc67
.L_42b9cb:

            mov EAX,DWORD PTR [RSP+352]
            test EAX,EAX
            je .L_42b478

            mov QWORD PTR [RSP],RBP
            mov RBX,QWORD PTR [RSP+48]
            mov EBP,EDX
            jmp .L_42b9fc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b9f0:

            add EBP,1
            cmp DWORD PTR [RSP+352],EBP
            jbe .L_42ba17
.L_42b9fc:

            mov EAX,EBP
            mov RSI,RBX
            shl RAX,4
            add RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_42b9f0
.L_42ba17:

            mov RBP,QWORD PTR [RSP]
            mov EBX,DWORD PTR [R12+180]
            jmp .L_42b478
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ba30:

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RDI,QWORD PTR [RIP+.L_42f530]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ba60:

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RSI,QWORD PTR [RIP+.L_42f180]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ba90:

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RSI,QWORD PTR [RIP+.L_42d0a0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bac0:

            mov RDI,QWORD PTR [RSP+112]
            call .L_43bba0

            test RAX,RAX
            je .L_42b350

            lea RDI,QWORD PTR [RIP+.L_42e0a0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_42b350
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42baf0:

            movzx EDX,BYTE PTR [R9+4]
            movzx ESI,BYTE PTR [R9+5]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            lea RSI,QWORD PTR [R9+RDX*2+6]
            movzx EDX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,ESI
            shl EDX,16
            add ECX,EDX
            jmp .L_42b1b3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bb20:

            mov RBP,QWORD PTR [RSP]
            mov RBX,QWORD PTR [RSP+64]
            jmp .L_42b720
.L_42bb2e:

            test DIL,16
            jne .L_42bb50

            test EDI,65280
            je .L_42b7bf

            xor EAX,EDI
            test AH,255
            jne .L_42b720

            jmp .L_42b7bf
.L_42bb50:

            mov RAX,QWORD PTR [RSP+192]
            movzx ECX,BYTE PTR [RAX]
            movzx R8D,BYTE PTR [RAX+1]
            movzx R9D,BYTE PTR [RAX+3]
            shl ECX,8
            add ECX,R8D
            mov R8D,ECX
            movzx ECX,BYTE PTR [RAX+2]
            shl R8D,16
            shl ECX,8
            add ECX,R9D
            movzx ECX,CX
            add ECX,R8D
            cmp ECX,65537
            jbe .L_42b720

            movzx ECX,BYTE PTR [RAX+12]
            movzx R8D,BYTE PTR [RAX+13]
            shl ECX,8
            add ECX,R8D
            movzx R8D,CX
            add RAX,R8
            test CX,CX
            cmove RAX,R14
            mov RCX,RAX
            movzx EAX,BYTE PTR [RAX]
            movzx R8D,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,R8D
            cmp AX,1
            jne .L_42b720

            movzx EAX,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            shr EDI,16
            shl EAX,8
            add EAX,R8D
            mov R8,R14
            movzx EAX,AX
            cmp EDI,EAX
            jae .L_42bbe9

            mov EAX,EDI
            lea R8,QWORD PTR [RCX+RAX*4+4]
.L_42bbe9:

            movzx EAX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            mov DWORD PTR [RSP],EDX
            shl EDI,16
            shl EAX,24
            add EAX,EDI
            movzx EDI,BYTE PTR [R8+2]
            shl EDI,8
            add EAX,EDI
            movzx EDI,BYTE PTR [R8+3]
            add EDI,EAX
            mov RAX,RDI
            add RDI,RCX
            test EAX,EAX
            cmove RDI,R14
            call .L_42c320

            cmp EAX,-1
            mov EDX,DWORD PTR [RSP]
            je .L_42b720

            jmp .L_42b7bf
.L_42bc30:

            movzx EAX,BYTE PTR [RCX+4]
            movzx EDX,BYTE PTR [RCX+5]
            shl EAX,24
            shl EDX,16
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+6]
            shl EDX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+7]
            add EAX,EDX
            jne .L_42bc5d

            lea RCX,QWORD PTR [RIP+.L_657760]
            jmp .L_42b89a
.L_42bc5d:

            mov EAX,EAX
            add RCX,RAX
            jmp .L_42b89a
.L_42bc67:

            test AL,16
            jne .L_42bc84

            test AH,255
            je .L_42b9cb

            xor EAX,ECX
            test AH,255
            jne .L_42b478

            jmp .L_42b9cb
.L_42bc84:

            mov RCX,QWORD PTR [RSP+192]
            movzx EDI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            movzx R9D,BYTE PTR [RCX+3]
            shl EDI,8
            add EDI,R8D
            mov R8D,EDI
            movzx EDI,BYTE PTR [RCX+2]
            shl R8D,16
            shl EDI,8
            add EDI,R9D
            movzx EDI,DI
            add EDI,R8D
            cmp EDI,65537
            jbe .L_42b478

            movzx EDI,BYTE PTR [RCX+12]
            movzx R8D,BYTE PTR [RCX+13]
            shl EDI,8
            add EDI,R8D
            movzx R8D,DI
            add RCX,R8
            test DI,DI
            cmove RCX,R14
            movzx EDI,BYTE PTR [RCX]
            movzx R8D,BYTE PTR [RCX+1]
            shl EDI,8
            add EDI,R8D
            cmp DI,1
            jne .L_42b478

            movzx EDI,BYTE PTR [RCX+2]
            movzx R8D,BYTE PTR [RCX+3]
            shr EAX,16
            shl EDI,8
            add EDI,R8D
            mov R8,R14
            movzx EDI,DI
            cmp EAX,EDI
            jae .L_42bd18

            lea R8,QWORD PTR [RCX+RAX*4+4]
.L_42bd18:

            movzx EAX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            shl EAX,24
            shl EDI,16
            add EAX,EDI
            movzx EDI,BYTE PTR [R8+2]
            movzx R8D,BYTE PTR [R8+3]
            shl EDI,8
            add EAX,EDI
            mov RDI,R14
            add EAX,R8D
            je .L_42bd46

            mov EAX,EAX
            lea RDI,QWORD PTR [RCX+RAX*1]
.L_42bd46:

            mov DWORD PTR [RSP],EDX
            call .L_42c320

            add EAX,1
            mov EDX,DWORD PTR [RSP]
            je .L_42b478

            jmp .L_42b9cb
.L_42bd5f:

            call __stack_chk_fail@PLT
.L_42bd64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd70:

            movzx ECX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            mov EDX,1
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shl RAX,48
            shr RAX,53
            test DWORD PTR [RDI+RAX*4+116],EDX
            setne AL
            ret 
.L_42bd96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bda0:

            mov EAX,ESI
            push R15
            push R14
            lea RAX,QWORD PTR [RAX+RAX*4]
            push R13
            push R12
            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+RAX*4]
            sub RSP,8
            movsx EBX,WORD PTR [RBP+16]
            test EBX,EBX
            je .L_42bdcb

            movzx R14D,BYTE PTR [RBP+18]
            test R14B,2
            jne .L_42bde0
.L_42bdcb:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bde0:

            mov R13D,EBX
            add EBX,ESI
            xor EAX,EAX
            cmp EBX,ECX
            mov WORD PTR [RBP+16],AX
            je .L_42bdcb

            mov R15D,EDX
            mov ESI,EBX
            mov R12,RDI
            call .L_42bda0

            mov ESI,EBX
            mov EDX,R15D
            lea RAX,QWORD PTR [RSI+RSI*4]
            and EDX,4294967294
            cmp EDX,4
            lea RAX,QWORD PTR [R12+RAX*4]
            je .L_42be27

            mov EDX,DWORD PTR [RBP+8]
            neg EDX
            mov DWORD PTR [RAX+8],EDX
.L_42be19:

            neg R13D
            mov BYTE PTR [RAX+18],R14B
            mov WORD PTR [RAX+16],R13W
            jmp .L_42bdcb
.L_42be27:

            mov EDX,DWORD PTR [RBP+12]
            neg EDX
            mov DWORD PTR [RAX+12],EDX
            jmp .L_42be19
.L_42be31:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42be40:

            cmp ESI,1
            jbe .L_42bea8

            lea EAX,DWORD PTR [RSI-2]
            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea R14,QWORD PTR [RDX+RAX*2+2]
            mov R12,R8
            mov RBP,RCX
            mov RBX,RDX
            sub RSP,8
            mov R15D,4
.L_42be6d:

            mov RAX,QWORD PTR [R13]
            mov RDX,R12
            mov RSI,RBX
            mov EDI,DWORD PTR [RAX+R15*1]
            call RBP

            test AL,AL
            je .L_42be93

            add RBX,2
            add R15,4
            cmp RBX,R14
            jne .L_42be6d

            mov EAX,1
.L_42be93:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bea8:

            mov EAX,1
            ret 
.L_42beae:

            nop
            nop
.L_42beb0:

            test EDX,EDX
            mov R8D,EDX
            je .L_42bed0

            xor EDX,EDX
            mov EAX,4294967295
            div R8D
            mov R9D,EAX
            xor EAX,EAX
            cmp ECX,R9D
            jb .L_42bed0
.L_42becb:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bed0:

            xor EAX,EAX
            cmp RSI,QWORD PTR [RDI+8]
            jb .L_42becb

            mov RDX,QWORD PTR [RDI+16]
            cmp RSI,RDX
            ja .L_42becb

            imul ECX,R8D
            sub RDX,RSI
            cmp ECX,EDX
            setbe AL
            ret 
.L_42beee:

            nop
            nop
.L_42bef0:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov ECX,EDX
            mov RBX,RDI
            mov EDX,R13D
            mov R12,R8
            sub RSP,48
            mov DWORD PTR [R9],0
            mov DWORD PTR [R8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+32],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+152]
            mov RSI,QWORD PTR [RDI+160]
            mov RBP,R9
            push QWORD PTR [RAX+208]
            call QWORD PTR [RAX+432]

            test EAX,EAX
            mov R15D,EAX
            pop RDX
            pop RCX
            jne .L_42bf80
.L_42bf53:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_42c12a

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bf80:

            and R14D,4294967294
            mov RAX,QWORD PTR [RBX+152]
            mov RSI,QWORD PTR [RBX+160]
            cmp R14D,4
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            je .L_42c060

            lea RDI,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+176]
            mov EDX,R13D
            mov QWORD PTR [RSP+8],RDI
            mov R8,RDI
            mov RCX,R14
            mov RDI,RBX
            call QWORD PTR [RAX+400]

            test EAX,EAX
            jne .L_42c120

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov RCX,R14
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov EDX,R13D
            mov R8,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+168]
            call QWORD PTR [RAX+392]

            test EAX,EAX
            je .L_42c120

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            add EDX,DWORD PTR [RBX+140]
            sar EAX,1
            add EAX,DWORD PTR [RSP+16]
            jmp .L_42c10c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c060:

            lea R10,QWORD PTR [RSP+20]
            lea R14,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RAX+168]
            mov EDX,R13D
            mov RDI,RBX
            mov R8,R10
            mov QWORD PTR [RSP+8],R10
            mov RCX,R14
            call QWORD PTR [RAX+392]

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            jne .L_42c120

            mov RAX,QWORD PTR [RBX+152]
            mov DWORD PTR [RSP+20],0
            mov R8,R10
            mov DWORD PTR [RSP+16],0
            mov RSI,QWORD PTR [RBX+160]
            mov RCX,R14
            mov EDX,R13D
            mov RDI,RBX
            mov R9,QWORD PTR [RAX+176]
            call QWORD PTR [RAX+400]

            test EAX,EAX
            je .L_42c120

            mov RAX,QWORD PTR [RBX+152]
            mov EDX,R13D
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            mov RCX,QWORD PTR [RAX+152]
            call QWORD PTR [RAX+376]

            mov EDX,EAX
            mov ECX,DWORD PTR [RSP+16]
            shr EDX,31
            add EAX,EDX
            mov EDX,DWORD PTR [RSP+20]
            sub EDX,DWORD PTR [RBX+140]
            sar EAX,1
            sub ECX,EAX
            mov EAX,ECX
.L_42c10c:

            sub DWORD PTR [R12],EAX
            sub DWORD PTR [RBP],EDX
            jmp .L_42bf53
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c120:

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+20]
            jmp .L_42c10c
.L_42c12a:

            call __stack_chk_fail@PLT
.L_42c12f:

            nop
.L_42c130:

            push R12
            push RBP
            mov EBP,EDX
            push RBX
.L_42c136:

            mov R12,QWORD PTR [RDI+128]
            mov EBX,ESI
            movsxd RCX,DWORD PTR [R12+148]
            test ECX,ECX
            jne .L_42c15b

            mov RDI,R12
            call .L_406c10

            movsxd RCX,DWORD PTR [R12+148]
.L_42c15b:

            movsx RAX,BX
            movsxd RDX,EBP
            imul RDX,RAX
            mov EAX,ECX
            shr EAX,31
            add EAX,ECX
            sar EAX,1
            test RDX,RDX
            jns .L_42c176

            neg EAX
.L_42c176:

            cdqe 
            add RAX,RDX
            cqo 
            pop RBX
.L_42c17e:

            idiv RCX
            pop RBP
            pop R12
            ret 
.L_42c185:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c190:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_42c1e1

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_42c1e1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,1
            cmp QWORD PTR [RDI+280],0
            je .L_42c22e

            lea RAX,QWORD PTR [RSP+224]
            mov RCX,RSP
            mov DWORD PTR [RSP],24
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            call .L_4054b0
.L_42c22e:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42c246

            add RSP,216

            ret 
.L_42c246:

            call __stack_chk_fail@PLT
.L_42c24b:

            nop
            nop
            nop
            nop
            nop
.L_42c250:

            cmp BYTE PTR [RDI+112],0
            jne .L_42c25e

            cmp ESI,65535
            jbe .L_42c260
.L_42c25e:

            ret 
.L_42c260:

            mov EAX,ESI
            mov EDX,1
            mov ECX,ESI
            shr EAX,5
            shl EDX,CL
            or DWORD PTR [RDI+RAX*4+116],EDX
            ret 
.L_42c273:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c280:

            mov RCX,QWORD PTR [RSI+8]
            xor EAX,EAX
            cmp RDI,RCX
            jb .L_42c310

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_42c310

            mov RDX,R8
            sub RDX,RDI
            cmp EDX,5
            jbe .L_42c310

            lea RSI,QWORD PTR [RDI+4]
            cmp RSI,RCX
            jb .L_42c310

            cmp RSI,R8
            ja .L_42c310

            mov RDX,R8
            sub RDX,RSI
            cmp EDX,1
            jbe .L_42c310

            lea R9,QWORD PTR [RDI+6]
            cmp RCX,R9
            ja .L_42c310

            cmp R8,R9
            jb .L_42c310

            movzx EDX,BYTE PTR [RDI+4]
            movzx R10D,BYTE PTR [RDI+5]
            mov R11,R8
            sub R11,R9
            shl EDX,8
            add EDX,R10D
            movzx EDX,DX
            add EDX,EDX
            cmp EDX,R11D
            ja .L_42c310

            test BYTE PTR [RDI+3],16
            mov EAX,1
            je .L_42c310

            lea EAX,DWORD PTR [RDX+2]
            add RSI,RAX
            xor EAX,EAX
            cmp RCX,RSI
            ja .L_42c310

            cmp R8,RSI
            jb .L_42c310

            sub R8,RSI
            cmp R8D,1
            seta AL
.L_42c310:

            ret 
.L_42c312:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c320:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_42c3d8

            cmp AX,2
            jne .L_42c3c1

            movzx R9D,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl R9D,8
            add R9D,EAX
            mov EAX,4294967295
            movzx R9D,R9W
            lea R8D,DWORD PTR [R9-1]
            cmp R8D,EAX
            je .L_42c3d0

            add RDI,2
            xor R10D,R10D
            jmp .L_42c391
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c370:

            movzx EAX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jbe .L_42c438

            lea R10D,DWORD PTR [RDX+1]
            cmp R10D,R8D
            jg .L_42c3c1
.L_42c391:

            lea EDX,DWORD PTR [R8+R10*1]
            sar EDX,1
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx R11D,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_42c370

            lea R8D,DWORD PTR [RDX-1]
            cmp R10D,R8D
            jle .L_42c391
.L_42c3c1:

            mov EAX,4294967295
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c3d0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c3d8:

            movzx ECX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl ECX,8
            add ECX,EAX
            mov EAX,4294967295
            movzx ECX,CX
            sub ECX,1
            cmp ECX,EAX
            je .L_42c3d0

            add RDI,2
            xor R9D,R9D
            jmp .L_42c40b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c400:

            je .L_42c3d0

            lea R9D,DWORD PTR [RAX+1]
.L_42c406:

            cmp R9D,ECX
            jg .L_42c3c1
.L_42c40b:

            lea EAX,DWORD PTR [R9+RCX*1]
            sar EAX,1
            movsxd RDX,EAX
            lea R8,QWORD PTR [RDI+RDX*2+2]
            movzx EDX,BYTE PTR [R8]
            movzx R8D,BYTE PTR [R8+1]
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            cmp ESI,EDX
            jns .L_42c400

            lea ECX,DWORD PTR [RAX-1]
            jmp .L_42c406
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c438:

            cmp EDX,R9D
            mov EAX,1
            jb .L_42c450

            sub ESI,EAX
            mov EAX,ESI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c450:

            mov EDX,EDX
            lea RAX,QWORD PTR [RDX+RDX*2]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RCX+4]
            movzx ECX,BYTE PTR [RCX+5]
            movzx EAX,AX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            add ESI,EDX
            sub ESI,EAX
            mov EAX,ESI
            ret 
.L_42c481:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c490:

            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            cmp AX,1
            mov DWORD PTR [RDI],EDX
            je .L_42c4f0

            cmp AX,2
            jne .L_42c4e8

            mov QWORD PTR [RDI+8],RSI
            mov DWORD PTR [RDI+24],0
            xor EAX,EAX
            mov DWORD PTR [RDI+16],0
            movzx EDX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            shl EDX,8
            add DX,CX
            je .L_42c4e1

            movzx EAX,BYTE PTR [RSI+4]
            movzx EDX,BYTE PTR [RSI+5]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_42c4e1:

            mov DWORD PTR [RDI+20],EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c4e8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c4f0:

            mov QWORD PTR [RDI+8],RSI
            mov DWORD PTR [RDI+16],0
            ret 
.L_42c4fc:

            nop
            nop
            nop
            nop
.L_42c500:

            push RBX
            mov RAX,RDI
            mov RBX,RSI
            sub RSP,48
.L_42c50b:

            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RSI
            xor ESI,ESI
            mov RDI,RSP
            mov RSI,RAX
            mov DWORD PTR [RSP],0
            call .L_42c490

            mov EDI,DWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+8]
            cmp EDI,1
            lea RSI,QWORD PTR [RDX+2]
            je .L_42c613

            cmp EDI,2
            mov R8D,1
            jne .L_42c630
.L_42c551:

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            mov EDI,DWORD PTR [RSP+16]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EDI,EAX
            jae .L_42c630

            mov ECX,DWORD PTR [RSP+20]
            mov EAX,R8D
            mov R9D,ECX
            shl EAX,CL
            shr R9D,5
            and R9D,2047
            and EAX,DWORD PTR [RBX+R9*4+116]
            jne .L_42c690

            add DWORD PTR [RSP+24],1
            movzx R9D,BYTE PTR [RDX+2]
            movzx R10D,BYTE PTR [RDX+3]
            shl R9D,8
            add R9D,R10D
            movzx R9D,R9W
            cmp EDI,R9D
            jae .L_42c5cc

            mov EAX,EDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [RSI+RAX*2+2]
            movzx EAX,BYTE PTR [R9+2]
            movzx R9D,BYTE PTR [R9+3]
            shl EAX,8
            add EAX,R9D
            movzx EAX,AX
.L_42c5cc:

            cmp ECX,EAX
            je .L_42c650

            add ECX,1
            mov DWORD PTR [RSP+20],ECX
            jmp .L_42c551
.L_42c5e0:

            mov EAX,R8D
            lea RAX,QWORD PTR [RSI+RAX*2+2]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,EAX
            mov EAX,EDI
            shl EAX,CL
            shl RCX,48
            shr RCX,53
            test DWORD PTR [RBX+RCX*4+116],EAX
            jne .L_42c690

            add R8D,1
            mov DWORD PTR [RSP+16],R8D
.L_42c613:

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            mov R8D,DWORD PTR [RSP+16]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp R8D,EAX
            jb .L_42c5e0

            nop
            nop
            nop
.L_42c630:

            xor EAX,EAX
.L_42c632:

            mov RBX,QWORD PTR [RSP+40]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42c697

            add RSP,48
.L_42c646:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c650:

            add EDI,1
            mov DWORD PTR [RSP+16],EDI
            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EDI,EAX
            jae .L_42c551

            lea RAX,QWORD PTR [RDI+RDI*2]
            lea RCX,QWORD PTR [RSI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            jmp .L_42c551
.L_42c690:

            mov EAX,1
            jmp .L_42c632
.L_42c697:

            call __stack_chk_fail@PLT
.L_42c69c:

            nop
            nop
            nop
            nop
.L_42c6a0:

            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_42c6ac

            cmp EAX,2
            jne .L_42c6d0
.L_42c6ac:

            mov RDX,QWORD PTR [RDI+8]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RDI+16],EAX
            setb AL
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c6d0:

            xor EAX,EAX
            ret 
.L_42c6d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c6e0:

            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_42c790

            cmp EAX,2
            jne .L_42c730

            mov RSI,QWORD PTR [RDI+8]
            add DWORD PTR [RDI+24],1
            mov ECX,DWORD PTR [RDI+16]
            mov R8D,DWORD PTR [RDI+20]
            movzx EDX,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_42c738

            cmp R8D,EAX
            je .L_42c758

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c720:

            add R8D,1
            mov DWORD PTR [RDI+20],R8D
.L_42c728:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c730:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c738:

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp R8D,EAX
            jne .L_42c720
.L_42c758:

            add ECX,1
            mov DWORD PTR [RDI+16],ECX
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_42c728

            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RDI+20],EAX
            ret 
          .byte 0x66
          .byte 0x90
.L_42c790:

            add DWORD PTR [RDI+16],1
            ret 
.L_42c795:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c7a0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_42c830

            cmp AX,2
            jne .L_42c82d

            movzx R9D,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl R9D,8
            add R9D,EAX
            movzx R9D,R9W
            lea R8D,DWORD PTR [R9-1]
            cmp R8D,-1
            je .L_42c82d

            add RDI,2
            xor R10D,R10D
            jmp .L_42c7fd
          .byte 0x90
.L_42c7e0:

            movzx EAX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jbe .L_42c870

            lea R10D,DWORD PTR [RDX+1]
            cmp R8D,R10D
            jl .L_42c82d
.L_42c7fd:

            lea EDX,DWORD PTR [R8+R10*1]
            sar EDX,1
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx R11D,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_42c7e0

            lea R8D,DWORD PTR [RDX-1]
            cmp R8D,R10D
            jge .L_42c7fd
.L_42c82d:

            xor EAX,EAX
            ret 
.L_42c830:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,AX
            sub ESI,EAX
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_42c877

            lea RDX,QWORD PTR [RDI+RSI*2+6]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c870:

            xor EAX,EAX
            cmp EDX,R9D
            jb .L_42c880
.L_42c877:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c880:

            mov EDX,EDX
            lea RAX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            ret 
.L_42c89c:

            nop
            nop
            nop
            nop
.L_42c8a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42c8ae:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            je .L_42c9a0

            cmp AX,2
            jne .L_42c990

            movzx EAX,BYTE PTR [RDI+2]
            movzx ECX,BYTE PTR [RDI+3]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            movzx R11D,R8W
            je .L_42c990

            lea R8,QWORD PTR [RDI+4]
            xor R9D,R9D
            mov R10D,1
            nop
            nop
            nop
            nop
            nop
.L_42c900:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,R9D
            jbe .L_42c970

            movzx EAX,BYTE PTR [R8+4]
            movzx ECX,BYTE PTR [R8+5]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EDX,EAX
            jne .L_42c970

            movzx EBX,BYTE PTR [R8+2]
            movzx EAX,BYTE PTR [R8+3]
            movzx ECX,BYTE PTR [R8]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R8+1]
            shl ECX,8
            movzx EBX,BX
            add ECX,EAX
            cmp BYTE PTR [RSI+112],0
            movzx ECX,CX
            jne .L_42c970

            add EBX,1
            cmp EBX,ECX
            jbe .L_42c970

            nop
            nop
            nop
            nop
            nop
.L_42c958:

            mov EAX,ECX
            mov EBP,R10D
            shl EBP,CL
            shr EAX,5
            add ECX,1
            or DWORD PTR [RSI+RAX*4+116],EBP
            cmp EBX,ECX
            jne .L_42c958

            nop
            nop
            nop
.L_42c970:

            add R9D,1
            add R8,6
            cmp R11D,R9D
            je .L_42c990

            movzx EAX,BYTE PTR [RDI+2]
            movzx ECX,BYTE PTR [RDI+3]
            jmp .L_42c900
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c990:

            add RSP,8
.L_42c994:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_42c9a0:

            movzx EAX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            movzx R9D,R8W
            je .L_42c990

            lea R14D,DWORD PTR [R9-1]
            mov R13D,EDX
            mov RBX,RSI
            mov R12,RDI
            xor EBP,EBP
            lea R15,QWORD PTR [RIP+.L_657760]
            add R14,1
            jmp .L_42c9f5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c9e0:

            add RBP,1
            cmp RBP,R14
            je .L_42c990

            movzx EAX,BYTE PTR [R12+4]
            movzx ECX,BYTE PTR [R12+5]
.L_42c9f5:

            shl EAX,8
            mov ESI,EBP
            mov RDX,R15
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EBP
            jbe .L_42ca0b

            lea RDX,QWORD PTR [R12+RBP*2+6]
.L_42ca0b:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp R13D,EAX
            jne .L_42c9e0

            movzx EAX,BYTE PTR [R12+2]
            movzx EDX,BYTE PTR [R12+3]
            mov RDI,RBX
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            add ESI,EAX
            call .L_42c250

            jmp .L_42c9e0
.L_42ca3f:

            nop
.L_42ca40:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RSI
            sub RSP,40
.L_42ca56:

            movzx EDX,BYTE PTR [RDI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_42cc60

            cmp AX,2
            je .L_42cab0
.L_42ca82:

            xor EAX,EAX
.L_42ca84:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42cd91

            add RSP,40
.L_42ca9c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cab0:

            movzx R14D,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl R14D,8
            add EAX,R14D
            test EBP,EBP
            mov WORD PTR [RSP+14],AX
            movzx R12D,AX
            jne .L_42cb7b

            test AX,AX
            mov DWORD PTR [RSP+20],4294967295
            je .L_42ca82

            lea RAX,QWORD PTR [RSP+20]
            lea R15,QWORD PTR [RDI+4]
            xor R14D,R14D
            mov QWORD PTR [RSP],RAX
            jmp .L_42cb15
.L_42caf0:

            test ESI,ESI
            je .L_42cc4c

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cb00:

            add R14D,1
            add R15,6
            mov DWORD PTR [RSP+20],EAX
            cmp R12D,R14D
            je .L_42cd78
.L_42cb15:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_425dc0

            test EAX,EAX
            je .L_42cb70

            movzx EAX,BYTE PTR [R13+2]
            movzx EDI,BYTE PTR [R13+3]
            mov ESI,DWORD PTR [RSP+20]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_42caf0

            movzx EAX,BYTE PTR [R15]
            movzx EDI,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp ESI,EAX
            jb .L_42cc4c

            movzx EAX,BYTE PTR [R15+2]
            movzx ESI,BYTE PTR [R15+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            jmp .L_42cb00
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42cb70:

            cmp DWORD PTR [RSP+20],-1
            jne .L_42cd78
.L_42cb7b:

            cmp WORD PTR [RSP+14],0
            je .L_42ca82

            movzx R9D,BYTE PTR [R13+2]
            movzx EAX,BYTE PTR [R13+3]
            lea RDI,QWORD PTR [R13+4]
            xor ESI,ESI
            lea R10,QWORD PTR [RIP+.L_44c601]
            mov R8D,1
            shl R9D,8
            add R9D,EAX
            movzx R9D,R9W
            jmp .L_42cbc8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cbb8:

            add ESI,1
            add RDI,6
            cmp R12D,ESI
            je .L_42ca82
.L_42cbc8:

            xor EAX,EAX
            cmp ESI,R9D
            mov RDX,R10
            jae .L_42cbe5

            movzx EAX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            mov RDX,RDI
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
.L_42cbe5:

            cmp EBP,EAX
            jne .L_42cbb8

            movzx R11D,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+1]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+3]
            shl R11D,8
            shl ECX,8
            add R11D,EDX
            add ECX,EAX
            movzx R11D,R11W
            movzx EAX,CX
            add R11D,1
            cmp EAX,R11D
            jae .L_42cbb8

            mov EDX,R8D
            shl EDX,CL
            mov ECX,EDX
            mov EDX,EAX
            shr EDX,5
            test DWORD PTR [RBX+RDX*4+116],ECX
            jne .L_42cc4c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cc30:

            add EAX,1
            cmp R11D,EAX
            jbe .L_42cbb8

            mov EDX,EAX
            mov R14D,R8D
            mov ECX,EAX
            shr EDX,5
            shl R14D,CL
            test DWORD PTR [RBX+RDX*4+116],R14D
            je .L_42cc30
.L_42cc4c:

            mov EAX,1
            jmp .L_42ca84
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cc60:

            movzx R15D,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl R15D,8
            add R15D,EAX
            test EBP,EBP
            movzx R12D,R15W
            je .L_42cd10
.L_42cc7c:

            test R15W,R15W
            je .L_42ca82

            movzx EDI,BYTE PTR [R13+4]
            movzx EAX,BYTE PTR [R13+5]
            lea RSI,QWORD PTR [R13+6]
            xor EDX,EDX
            lea R8,QWORD PTR [RIP+.L_657760]
            mov R9D,1
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            jmp .L_42ccc0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ccb0:

            add EDX,1
            add RSI,2
            cmp R12D,EDX
            je .L_42ca82
.L_42ccc0:

            cmp EDI,EDX
            mov RCX,R8
            cmova RCX,RSI
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EBP,EAX
            jne .L_42ccb0

            movzx ECX,BYTE PTR [R13+2]
            movzx EAX,BYTE PTR [R13+3]
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            add ECX,EDX
            cmp ECX,65535
            ja .L_42ccb0

            mov EAX,ECX
            mov R10D,R9D
            shr EAX,5
            shl R10D,CL
            test DWORD PTR [RBX+RAX*4+116],R10D
            je .L_42ccb0

            jmp .L_42cc4c
          .byte 0x90
.L_42cd10:

            lea R14,QWORD PTR [RSP+20]
            mov RDI,RBX
            mov DWORD PTR [RSP+20],4294967295
            mov RSI,R14
            call .L_425dc0

            mov EDX,EAX
            xor EAX,EAX
            test EDX,EDX
            je .L_42ca84

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,DWORD PTR [RSP+20]
            ja .L_42cc4c

            lea EAX,DWORD PTR [R12+RAX*1-1]
            mov RSI,R14
            mov RDI,RBX
            mov DWORD PTR [RSP+20],EAX
            call .L_425dc0

            test EAX,EAX
            je .L_42cc7c

            jmp .L_42cc4c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cd78:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_425dc0

            test EAX,EAX
            je .L_42cb7b

            jmp .L_42cc4c
.L_42cd91:

            call __stack_chk_fail@PLT
.L_42cd96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cda0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42cdae:

            mov R14D,DWORD PTR [RDI+56]
            test R14D,R14D
            je .L_42d066

            mov R15D,DWORD PTR [RDI+60]
            mov EBP,DWORD PTR [RDI]
            lea RCX,QWORD PTR [RIP+.L_657760]
            mov RBX,RDI
            nop
            nop
            nop
            nop
            nop
.L_42cdd0:

            lea EAX,DWORD PTR [R14+RBP*1]
            cmp EAX,R15D
            jae .L_42ce46

            mov RSI,QWORD PTR [RBX+8]
            lea EAX,DWORD PTR [RBP+1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov DWORD PTR [RBX],EAX
            mov RBP,RAX
            mov RDI,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR [RDI+200]
            lea R12,QWORD PTR [RAX+RDX*4]
            mov EAX,DWORD PTR [RBX+16]
            movzx EDX,WORD PTR [R12+12]
            mov EDI,EAX
            and EDI,14
            test EDI,EDX
            mov R13D,EDX
            jne .L_42cdd0

            test DL,8
            mov R8D,DWORD PTR [R12]
            jne .L_42cf40
.L_42ce1a:

            movzx EDX,WORD PTR [R12+16]
            mov EAX,DWORD PTR [R12+4]
            and EAX,DWORD PTR [RBX+24]
            mov ESI,EDX
            and ESI,96
            cmp SI,32
            je .L_42ceb0
.L_42ce33:

            test EAX,EAX
            je .L_42ce46

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_42ce60

            cmp BYTE PTR [R12+15],AL
            je .L_42ce60
.L_42ce46:

            add RSP,24
.L_42ce4a:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ce60:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_42ce82

            mov RDX,QWORD PTR [RBX+40]
            mov EDI,R8D
            call RAX

            test AL,AL
            je .L_42ce46
.L_42ce7a:

            mov R14D,DWORD PTR [RBX+56]
            mov RSI,QWORD PTR [RBX+48]
.L_42ce82:

            sub R14D,1
            add RSI,2
            mov EAX,1
            mov DWORD PTR [RBX+56],R14D
            mov QWORD PTR [RBX+48],RSI
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ceb0:

            and R13D,32
            jne .L_42ce33

            cmp BYTE PTR [RBX+20],0
            je .L_42cee0

            cmp BYTE PTR [RBX+21],0
            jne .L_42ceef

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            jne .L_42ceef
.L_42ced1:

            and DH,1
            jne .L_42ce33

            jmp .L_42ceef
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42cee0:

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            je .L_42d040
.L_42ceef:

            test EAX,EAX
            je .L_42cdd0

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_42cf0a

            cmp BYTE PTR [R12+15],AL
            jne .L_42d057
.L_42cf0a:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_42cdd0

            mov QWORD PTR [RSP],RCX
            mov RDX,QWORD PTR [RBX+40]
            mov EDI,R8D
            call RAX

            test AL,AL
            mov RCX,QWORD PTR [RSP]
            je .L_42d057

            jmp .L_42ce7a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cf40:

            test AL,16
            jne .L_42cf60

            test AH,255
            je .L_42ce1a

            xor EAX,EDX
            test AH,255
            je .L_42ce1a

            jmp .L_42cdd0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42cf60:

            mov RDX,QWORD PTR [RSI+64]
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            movzx R9D,BYTE PTR [RDX+3]
            shl ESI,8
            add ESI,EDI
            mov EDI,ESI
            movzx ESI,BYTE PTR [RDX+2]
            shl EDI,16
            shl ESI,8
            add ESI,R9D
            movzx ESI,SI
            add ESI,EDI
            cmp ESI,65537
            jbe .L_42cdd0

            movzx ESI,BYTE PTR [RDX+12]
            movzx EDI,BYTE PTR [RDX+13]
            shl ESI,8
            add ESI,EDI
            movzx EDI,SI
            add RDX,RDI
            test SI,SI
            cmove RDX,RCX
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EDI
            cmp SI,1
            jne .L_42cdd0

            movzx ESI,BYTE PTR [RDX+2]
            movzx EDI,BYTE PTR [RDX+3]
            shr EAX,16
            shl ESI,8
            add ESI,EDI
            mov RDI,RCX
            movzx ESI,SI
            cmp EAX,ESI
            jae .L_42cfe4

            lea RDI,QWORD PTR [RDX+RAX*4+4]
.L_42cfe4:

            movzx EAX,BYTE PTR [RDI]
            movzx ESI,BYTE PTR [RDI+1]
            mov QWORD PTR [RSP],RCX
            mov DWORD PTR [RSP+12],R8D
            shl ESI,16
            shl EAX,24
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+2]
            shl ESI,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RAX+RSI*1]
            mov ESI,R8D
            add RDX,RDI
            test EDI,EDI
            cmove RDX,RCX
            mov RDI,RDX
            call .L_42c320

            cmp EAX,-1
            mov RCX,QWORD PTR [RSP]
            je .L_42cdd0

            mov R8D,DWORD PTR [RSP+12]
            jmp .L_42ce1a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d040:

            test DH,2
            jne .L_42ce33

            cmp BYTE PTR [RBX+21],0
            je .L_42ced1

            test EAX,EAX
            jne .L_42d085
.L_42d057:

            mov R14D,DWORD PTR [RBX+56]
            mov R15D,DWORD PTR [RBX+60]
            mov EBP,DWORD PTR [RBX]
            jmp .L_42cdd0
.L_42d066:

            lea RCX,QWORD PTR [RIP+.L_44c520]
            lea RSI,QWORD PTR [RIP+.L_44c118]
            lea RDI,QWORD PTR [RIP+.L_44c139]
            mov EDX,379
            call __assert_fail@PLT
.L_42d085:

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_42cf0a

            cmp AL,BYTE PTR [R12+15]
            jne .L_42d057

            jmp .L_42cf0a
.L_42d09d:

            nop
            nop
            nop
.L_42d0a0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,40
.L_42d0ac:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+7]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+6]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            xor EDX,EDX
            cmp EAX,-1
            je .L_42d14d

            movzx ESI,BYTE PTR [RBX+2]
            movzx EAX,BYTE PTR [RBX+3]
            mov R9,RSP
            movzx ECX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov RDI,RBP
            mov QWORD PTR [RSP+8],RBX
            shl ESI,8
            add ESI,EAX
            lea RAX,QWORD PTR [RIP+.L_426770]
            shl ECX,8
            movzx ESI,SI
            add ECX,EDX
            lea RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            lea EAX,DWORD PTR [RSI+RSI*1]
            movzx ECX,CX
            lea R8,QWORD PTR [RBX+RAX*1+6]
            call .L_426b00

            mov EDX,EAX
.L_42d14d:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_42d166

            add RSP,40
.L_42d163:

            pop RBX
            pop RBP
            ret 
.L_42d166:

            call __stack_chk_fail@PLT
.L_42d16b:

            nop
            nop
            nop
            nop
            nop
.L_42d170:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,40
.L_42d184:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_42d2f0

            movzx EDX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_42d318
.L_42d1fd:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea R14,QWORD PTR [RIP+.L_657760]
            mov QWORD PTR [RSP+8],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBP,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_425f90]
            cmovne R14,RBP
            mov QWORD PTR [RSP],RAX
            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42d2f0

            lea R12D,DWORD PTR [RSI-1]
            xor R15D,R15D
            mov R13,RSP
            lea RBP,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_42d2a8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d268:

            movzx ESI,SI
            lea EDI,DWORD PTR [RSI+RSI*1-2]
.L_42d26f:

            movzx ECX,BYTE PTR [RAX+2]
            lea RDX,QWORD PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+3]
            mov R9,R13
            lea R8,QWORD PTR [RDX+RDI*1]
            mov RDI,RBX
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            call .L_426b00

            test AL,AL
            jne .L_42d2f2

            add R15,1
            cmp R12,R15
            je .L_42d2f0

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
.L_42d2a8:

            shl EAX,8
            mov RCX,RBP
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_42d2bd

            lea RCX,QWORD PTR [R14+R15*2+2]
.L_42d2bd:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,RBP
            movzx ESI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl ESI,8
            add SI,DX
            jne .L_42d268

            xor EDI,EDI
            xor ESI,ESI
            jmp .L_42d26f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d2f0:

            xor EAX,EAX
.L_42d2f2:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42d324

            add RSP,40
.L_42d306:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d318:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBP+RAX*2+6]
            jmp .L_42d1fd
.L_42d324:

            call __stack_chk_fail@PLT
.L_42d329:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d330:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42d33e:

            mov R14D,DWORD PTR [RDI+56]
            test R14D,R14D
            je .L_42d5c2

            mov EBP,DWORD PTR [RDI]
            lea R15,QWORD PTR [RIP+.L_657760]
            mov RBX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d360:

            cmp R14D,EBP
            ja .L_42d3d2

            mov RSI,QWORD PTR [RBX+8]
            lea EAX,DWORD PTR [RBP-1]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov DWORD PTR [RBX],EAX
            mov RBP,RAX
            mov RCX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR [RCX+208]
            lea R12,QWORD PTR [RAX+RDX*4]
            mov EAX,DWORD PTR [RBX+16]
            movzx EDX,WORD PTR [R12+12]
            mov ECX,EAX
            and ECX,14
            test ECX,EDX
            mov R13D,EDX
            jne .L_42d360

            test DL,8
            mov ECX,DWORD PTR [R12]
            jne .L_42d4b0
.L_42d3a6:

            movzx EDX,WORD PTR [R12+16]
            mov EAX,DWORD PTR [R12+4]
            and EAX,DWORD PTR [RBX+24]
            mov ESI,EDX
            and ESI,96
            cmp SI,32
            je .L_42d430
.L_42d3bf:

            test EAX,EAX
            je .L_42d3d2

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_42d3e8

            cmp BYTE PTR [R12+15],AL
            je .L_42d3e8
.L_42d3d2:

            add RSP,24
.L_42d3d6:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d3e8:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_42d409

            mov RDX,QWORD PTR [RBX+40]
            mov EDI,ECX
            call RAX

            test AL,AL
            je .L_42d3d2
.L_42d401:

            mov R14D,DWORD PTR [RBX+56]
            mov RSI,QWORD PTR [RBX+48]
.L_42d409:

            sub R14D,1
            add RSI,2
            mov EAX,1
            mov DWORD PTR [RBX+56],R14D
            mov QWORD PTR [RBX+48],RSI
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d430:

            and R13D,32
            jne .L_42d3bf

            cmp BYTE PTR [RBX+20],0
            je .L_42d460

            cmp BYTE PTR [RBX+21],0
            jne .L_42d46f

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            jne .L_42d46f
.L_42d44d:

            and DH,1
            jne .L_42d3bf

            jmp .L_42d46f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d460:

            mov ESI,EDX
            and ESI,31
            cmp SI,1
            je .L_42d5a0
.L_42d46f:

            test EAX,EAX
            je .L_42d360

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_42d48a

            cmp BYTE PTR [R12+15],AL
            jne .L_42d5b7
.L_42d48a:

            mov RAX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_42d360

            mov RDX,QWORD PTR [RBX+40]
            mov EDI,ECX
            call RAX

            test AL,AL
            je .L_42d5b7

            jmp .L_42d401
.L_42d4b0:

            test AL,16
            jne .L_42d4d0

            test AH,255
            je .L_42d3a6

            xor EAX,EDX
            test AH,255
            je .L_42d3a6

            jmp .L_42d360
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d4d0:

            mov RDX,QWORD PTR [RSI+64]
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            movzx R8D,BYTE PTR [RDX+3]
            shl ESI,8
            add ESI,EDI
            movzx EDI,BYTE PTR [RDX+2]
            shl ESI,16
            shl EDI,8
            add EDI,R8D
            movzx EDI,DI
            add ESI,EDI
            cmp ESI,65537
            jbe .L_42d360

            movzx ESI,BYTE PTR [RDX+12]
            movzx EDI,BYTE PTR [RDX+13]
            shl ESI,8
            add ESI,EDI
            movzx EDI,SI
            add RDX,RDI
            test SI,SI
            cmove RDX,R15
            movzx ESI,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EDI
            cmp SI,1
            jne .L_42d360

            movzx ESI,BYTE PTR [RDX+2]
            movzx EDI,BYTE PTR [RDX+3]
            shr EAX,16
            shl ESI,8
            add ESI,EDI
            mov RDI,R15
            movzx ESI,SI
            cmp EAX,ESI
            jae .L_42d552

            lea RDI,QWORD PTR [RDX+RAX*4+4]
.L_42d552:

            movzx EAX,BYTE PTR [RDI]
            movzx ESI,BYTE PTR [RDI+1]
            mov DWORD PTR [RSP+12],ECX
            shl ESI,16
            shl EAX,24
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+2]
            shl ESI,8
            add EAX,ESI
            movzx ESI,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RAX+RSI*1]
            mov ESI,ECX
            add RDX,RDI
            test EDI,EDI
            mov RDI,RDX
            cmove RDI,R15
            call .L_42c320

            cmp EAX,-1
            je .L_42d360

            mov ECX,DWORD PTR [RSP+12]
            jmp .L_42d3a6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d5a0:

            test DH,2
            jne .L_42d3bf

            cmp BYTE PTR [RBX+21],0
            je .L_42d44d

            test EAX,EAX
            jne .L_42d5e1
.L_42d5b7:

            mov R14D,DWORD PTR [RBX+56]
            mov EBP,DWORD PTR [RBX]
            jmp .L_42d360
.L_42d5c2:

            lea RCX,QWORD PTR [RIP+.L_44c440]
            lea RSI,QWORD PTR [RIP+.L_44c118]
            lea RDI,QWORD PTR [RIP+.L_44c139]
            mov EDX,406
            call __assert_fail@PLT
.L_42d5e1:

            movzx EAX,BYTE PTR [RBX+28]
            test AL,AL
            je .L_42d48a

            cmp AL,BYTE PTR [R12+15]
            jne .L_42d5b7

            jmp .L_42d48a
.L_42d5f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d600:

            movzx ECX,WORD PTR [RSI+12]
            mov R8D,EDX
            xor EAX,EAX
            and R8D,14
            test R8D,ECX
            jne .L_42d61c

            test CL,8
            mov EAX,1
            jne .L_42d620
.L_42d61c:

            ret 
          .byte 0x66
          .byte 0x90
.L_42d620:

            test DL,16
            jne .L_42d638

            test DH,255
            je .L_42d61c

            xor ECX,EDX
            and CH,255
            sete AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d638:

            mov RDI,QWORD PTR [RDI+64]
            movzx ECX,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            movzx R8D,BYTE PTR [RDI+3]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            shl ECX,16
            shl EAX,8
            add EAX,R8D
            movzx EAX,AX
            add ECX,EAX
            xor EAX,EAX
            cmp ECX,65537
            jbe .L_42d61c

            movzx ECX,BYTE PTR [RDI+12]
            movzx R8D,BYTE PTR [RDI+13]
            shl ECX,8
            add ECX,R8D
            lea R8,QWORD PTR [RIP+.L_657760]
            movzx R9D,CX
            add RDI,R9
            test CX,CX
            cmovne R8,RDI
            movzx ECX,BYTE PTR [R8]
            movzx EDI,BYTE PTR [R8+1]
            shl ECX,8
            add ECX,EDI
            cmp CX,1
            jne .L_42d61c

            sub RSP,8
.L_42d6a9:

            movzx EAX,BYTE PTR [R8+2]
            mov ECX,EDX
            movzx EDX,BYTE PTR [R8+3]
            shr ECX,16
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_42d6d2

            mov EDX,ECX
            lea RDI,QWORD PTR [R8+RDX*4+4]
.L_42d6d2:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            mov ESI,DWORD PTR [RSI]
            shl EDX,16
            shl EAX,24
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+2]
            shl EDX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+3]
            lea EDI,DWORD PTR [RAX+RDX*1]
            mov RAX,RDI
            add RDI,R8
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            call .L_42c320

            cmp EAX,-1
            setne AL
            add RSP,8

            ret 
.L_42d716:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d720:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42d72a:

            mov RAX,QWORD PTR [RDI+24]
            mov R9D,DWORD PTR [RAX+180]
            mov RAX,QWORD PTR [RAX+200]
            lea R9,QWORD PTR [R9+R9*4]
            lea R12,QWORD PTR [RAX+R9*4]
            movzx EAX,WORD PTR [R12+12]
            mov EBX,EAX
            mov EAX,48
            and EBX,96
            or EBX,16
            test CL,CL
            cmovne EBX,EAX
            mov EAX,EBX
            or EAX,64
            test R8B,R8B
            cmovne EBX,EAX
            cmp BYTE PTR [RDI+72],0
            jne .L_42d788

            or EBX,EDX
            test EDX,EDX
            je .L_42d779
.L_42d773:

            mov WORD PTR [R12+12],BX
.L_42d779:

            add RSP,8
.L_42d77d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d788:

            mov R13,QWORD PTR [RDI+64]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov EBP,ESI
            movzx EAX,BYTE PTR [R13+4]
            movzx EDX,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R13
            test AX,AX
            cmovne RDI,RDX
            call .L_42c7a0

            cmp EAX,2
            je .L_42d810

            cmp EAX,3
            je .L_42d7d0

            mov EDX,EBX
            or EDX,2
            cmp EAX,1
            cmove EBX,EDX
            jmp .L_42d773
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d7d0:

            movzx EAX,BYTE PTR [R13+10]
            movzx EDX,BYTE PTR [R13+11]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,EBP
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R13,RDX
            test AX,AX
            cmovne RDI,R13
            or EBX,8
            call .L_42c7a0

            shl EAX,8
            or EBX,EAX
            jmp .L_42d773
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d810:

            or EBX,4
            jmp .L_42d773
.L_42d818:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d820:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
.L_42d830:

            mov RDX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov R13D,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,R13D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R12
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            xor EDX,EDX
            cmp EAX,-1
            je .L_42d8b4

            movzx EBX,BYTE PTR [R12+4]
            movzx EAX,BYTE PTR [R12+5]
            xor EDX,EDX
            xor R8D,R8D
            xor ECX,ECX
            mov RDI,RBP
            shl EBX,8
            add EBX,EAX
            add EBX,R13D
            movzx EBX,BX
            mov ESI,EBX
            call .L_42d720

            mov RDI,QWORD PTR [RBP+24]
            mov ESI,EBX
            call .L_402c60

            mov EDX,1
.L_42d8b4:

            add RSP,8
.L_42d8b8:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42d8c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d8d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_42d8dc:

            mov RDX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_42d93a

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_42d948
.L_42d93a:

            add RSP,8
.L_42d93e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d948:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            movzx EBX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EBX,8
            add EBX,EAX
            movzx EBX,BX
            mov ESI,EBX
            call .L_42d720

            mov RDI,QWORD PTR [RBP+24]
            mov ESI,EBX
            call .L_402c60

            mov EAX,1
            jmp .L_42d93a
.L_42d97f:

            nop
.L_42d980:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42d991:

            mov R13,QWORD PTR [RDI+24]
            mov EAX,DWORD PTR [R13+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R13+200]
            lea R15,QWORD PTR [RAX+RDX*4]
            movzx EBX,WORD PTR [R15+12]
            and EBX,112
            mov EBP,EBX
            or EBP,16
            cmp BYTE PTR [RDI+72],0
            je .L_42da0a

            mov R12,QWORD PTR [RDI+64]
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx EAX,BYTE PTR [R12+4]
            movzx EDX,BYTE PTR [R12+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R12
            test AX,AX
            cmovne RDI,RDX
            call .L_42c7a0

            cmp EAX,2
            je .L_42da68

            cmp EAX,3
            je .L_42da28

            or EBX,18
            movzx EBP,BP
            cmp EAX,1
            movzx EBX,BX
            cmove EBP,EBX
.L_42da05:

            mov WORD PTR [R15+12],BP
.L_42da0a:

            add RSP,8
.L_42da0e:

            mov ESI,R14D
            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_402c60

            nop
            nop
            nop
            nop
            nop
.L_42da28:

            movzx EAX,BYTE PTR [R12+10]
            movzx EDX,BYTE PTR [R12+11]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,R14D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R12,RDX
            test AX,AX
            cmovne RDI,R12
            or EBX,24
            call .L_42c7a0

            shl EAX,8
            movzx EBX,BX
            mov EBP,EAX
            or EBP,EBX
            jmp .L_42da05
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42da68:

            or EBX,20
            movzx EBP,BX
            jmp .L_42da05
.L_42da70:

            movzx EAX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            mov R9D,EAX
            shl R9D,8
            add R9D,R8D
            test R9W,R9W
            je .L_42dc20

            push R15
            push R14
            movzx R10D,R9W
            push R13
            push R12
            lea R15,QWORD PTR [RIP+.L_657760]
            push RBP
            push RBX
            mov R14,RSI
            mov R13,RDI
            xor R12D,R12D
            sub RSP,72
.L_42daae:

            mov QWORD PTR [RSP+56],RDX
            lea EDX,DWORD PTR [R10-1]
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RSP+16],RCX
.L_42dac0:

            shl EAX,8
            mov RSI,R15
            add EAX,R8D
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_42dad6

            lea RSI,QWORD PTR [R13+R12*2+2]
.L_42dad6:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R13
            test DX,DX
            cmove RAX,R15
            lea RCX,QWORD PTR [RAX+4]
            movzx EDX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            mov QWORD PTR [RSP+40],RCX
            movzx ECX,BYTE PTR [RAX+3]
            shl EDX,8
            add DX,SI
            mov BYTE PTR [RSP+29],CL
            movzx ECX,BYTE PTR [RAX+2]
            mov BYTE PTR [RSP+30],CL
            je .L_42db70

            mov RDI,QWORD PTR [RSP+56]
            movzx EDX,DX
            lea ECX,DWORD PTR [RDX+RDX*1-2]
            cmp EDX,1
            mov RBX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+32],RCX
            mov RBP,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RBX
            je .L_42db79

            sub EDX,2
            lea RBX,QWORD PTR [RAX+4]
            lea RAX,QWORD PTR [RAX+RDX*2+6]
            mov QWORD PTR [RSP+48],RAX
.L_42db4a:

            mov RDI,QWORD PTR [R14+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBX
            call RBP

            test AL,AL
            je .L_42dbeb

            add RBX,2
            cmp QWORD PTR [RSP+48],RBX
            jne .L_42db4a

            jmp .L_42db79
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42db70:

            mov QWORD PTR [RSP+32],0
.L_42db79:

            movzx EAX,WORD PTR [RSP+30]
            movzx EDX,BYTE PTR [RSP+29]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_42dbeb

            mov RCX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+32]
            lea EAX,DWORD PTR [RDX-1]
            lea RBX,QWORD PTR [RCX+RAX*4+6]
            lea RBP,QWORD PTR [RCX+RDI*1+2]
            add RBX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dbb0:

            movzx ESI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R14+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_42dbe2

            mov RDX,QWORD PTR [R14+16]
            test RDX,RDX
            je .L_42dbe2

            sub EAX,1
            mov RDI,R14
            mov DWORD PTR [R14+24],EAX
            call RDX

            add DWORD PTR [R14+24],1
.L_42dbe2:

            add RBP,4
            cmp RBP,RBX
            jne .L_42dbb0
.L_42dbeb:

            add R12,1
            cmp QWORD PTR [RSP+16],R12
            je .L_42dc08

            movzx EAX,BYTE PTR [R13]
            movzx R8D,BYTE PTR [R13+1]
            jmp .L_42dac0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dc08:

            add RSP,72
.L_42dc0c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dc20:

            ret 
.L_42dc22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dc30:

            movzx EAX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,R10D
            test R8W,R8W
            je .L_42dd78

            movzx R11D,R8W
            push R15
            push R14
            lea R8D,DWORD PTR [R11-1]
            push R13
            push R12
            push RBP
            push RBX
            mov R13,RDX
            mov R14,RSI
            mov RBP,RDI
            lea R15,QWORD PTR [R8+1]
            sub RSP,56
.L_42dc6f:

            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_657760]
            jmp .L_42dc96
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dc80:

            add RBX,1
            cmp R15,RBX
            je .L_42dd60

            movzx EAX,BYTE PTR [RBP]
            movzx R10D,BYTE PTR [RBP+1]
.L_42dc96:

            shl EAX,8
            mov RDX,R12
            add EAX,R10D
            movzx EAX,AX
            cmp EAX,EBX
            jbe .L_42dcab

            lea RDX,QWORD PTR [RBP+RBX*2+2]
.L_42dcab:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov EDX,DWORD PTR [R14+16]
            movzx ESI,AX
            add RSI,RBP
            test AX,AX
            cmove RSI,R12
            movzx EAX,BYTE PTR [RSI]
            movzx EDI,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EDX,EAX
            jne .L_42dc80

            cmp EDX,1
            jbe .L_42dd4b

            mov RAX,QWORD PTR [R13+8]
            lea R10,QWORD PTR [RSI+4]
            mov R11D,4
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RDX-2]
            lea RAX,QWORD PTR [R10+RAX*2+2]
            mov QWORD PTR [RSP+40],RAX
.L_42dd09:

            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [RSP+32],R11
            mov RSI,R10
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],R10
            mov EDI,DWORD PTR [RAX+R11*1]
            mov RAX,QWORD PTR [RSP+16]
            call RAX

            test AL,AL
            je .L_42dc80

            mov R11,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+24]
            add R11,4
            add R10,2
            cmp QWORD PTR [RSP+40],R10
            jne .L_42dd09
.L_42dd4b:

            add RSP,56
.L_42dd4f:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_42dd60:

            add RSP,56
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dd78:

            xor EAX,EAX
            ret 
.L_42dd7b:

            nop
            nop
            nop
            nop
            nop
.L_42dd80:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            je .L_42de70

            movzx R9D,R8W
            push R15
            push R14
            push R13
            lea R13D,DWORD PTR [R9-1]
            push R12
            push RBP
            push RBX
            mov R12,RDX
            mov RBP,RSI
            mov R15,RDI
            add R13,1
            sub RSP,8
.L_42ddbe:

            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_657760]
            jmp .L_42de10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ddd0:

            movzx ESI,SI
            lea EDI,DWORD PTR [RSI+RSI*1-2]
.L_42ddd7:

            movzx ECX,BYTE PTR [RAX+2]
            lea RDX,QWORD PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+3]
            mov R9,R12
            lea R8,QWORD PTR [RDX+RDI*1]
            mov RDI,RBP
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            call .L_426b00

            test AL,AL
            jne .L_42de5a

            add R14,1
            cmp R13,R14
            je .L_42de58

            movzx EAX,BYTE PTR [R15]
            movzx ECX,BYTE PTR [R15+1]
.L_42de10:

            shl EAX,8
            add EAX,ECX
            mov RCX,RBX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_42de25

            lea RCX,QWORD PTR [R15+R14*2+2]
.L_42de25:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmove RAX,RBX
            movzx ESI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl ESI,8
            add SI,DX
            jne .L_42ddd0

            xor EDI,EDI
            xor ESI,ESI
            jmp .L_42ddd7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42de58:

            xor EAX,EAX
.L_42de5a:

            add RSP,8
.L_42de5e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42de70:

            xor EAX,EAX
            ret 
.L_42de73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42de80:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,40
.L_42de8c:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_42df40

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_42df60
.L_42df01:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_425f90]
            cmovne RDI,RBX
            mov RDX,RSP
            mov QWORD PTR [RSP],RAX
            call .L_42dd80
.L_42df40:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42df67

            add RSP,40
.L_42df54:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42df60:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_42df01
.L_42df67:

            call __stack_chk_fail@PLT
.L_42df6c:

            nop
            nop
            nop
            nop
.L_42df70:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,40
.L_42df80:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov R12D,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,R12D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            xor EDX,EDX
            cmp EAX,-1
            je .L_42e064

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            lea R13,QWORD PTR [RIP+.L_657760]
            mov ESI,R12D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne R13,RDX
            mov RDI,R13
            call .L_42c7a0

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_42e088
.L_42e027:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],R13
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_4267e0]
            mov RDX,RSP
            cmovne RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_42dd80

            mov EDX,EAX
.L_42e064:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_42e091

            add RSP,40
.L_42e07a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e088:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+8]
            jmp .L_42e027
.L_42e091:

            call __stack_chk_fail@PLT
.L_42e096:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e0a0:

            jmp .L_42df70
.L_42e0a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e0b0:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            je .L_42e3a0

            push R15
            push R14
            movzx R9D,R8W
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            mov R15,RDI
            xor R13D,R13D
            sub RSP,88
.L_42e0e6:

            mov QWORD PTR [RSP+16],RDX
            lea EDX,DWORD PTR [R9-1]
            lea RSI,QWORD PTR [RDX+1]
            mov QWORD PTR [RSP+40],RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e100:

            shl EAX,8
            add EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_42e119

            lea RCX,QWORD PTR [R15+R13*2+2]
.L_42e119:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            lea RSI,QWORD PTR [RIP+.L_657760]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R15
            test DX,DX
            cmove RAX,RSI
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            lea ECX,DWORD PTR [RSI+RSI*1+2]
            add RCX,RAX
            movzx R8D,BYTE PTR [RCX]
            movzx EDI,BYTE PTR [RCX+1]
            shl R8D,8
            lea R12D,DWORD PTR [R8+RDI*1]
            mov EDI,2
            movzx R11D,R12W
            test R12W,R12W
            lea EBX,DWORD PTR [R11+R11*1]
            cmove RBX,RDI
            add RBX,RCX
            movzx EDI,BYTE PTR [RBX]
            movzx R9D,BYTE PTR [RBX+1]
            shl EDI,8
            add EDI,R9D
            lea R9,QWORD PTR [RAX+2]
            mov WORD PTR [RSP+64],DI
            movzx EDI,DI
            mov DWORD PTR [RSP+36],EDI
            lea EDI,DWORD PTR [RDI+RDI*1+2]
            add RDI,RBX
            test DX,DX
            movzx R10D,BYTE PTR [RDI]
            mov QWORD PTR [RSP+48],RDI
            movzx EDI,BYTE PTR [RDI+1]
            mov BYTE PTR [RSP+66],R10B
            mov BYTE PTR [RSP+69],DIL
            mov RDI,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RDI+8]
            mov RBP,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],R10
            je .L_42e22f

            lea EDX,DWORD PTR [RSI-1]
            mov WORD PTR [RSP+70],R12W
            mov QWORD PTR [RSP+72],RBX
            mov R12,R14
            mov QWORD PTR [RSP+56],RCX
            mov RBX,R9
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov R14D,R11D
            mov QWORD PTR [RSP+24],RAX
.L_42e1ef:

            mov RDI,QWORD PTR [R12+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBX
            call RBP

            test AL,AL
            je .L_42e308

            add RBX,2
            cmp QWORD PTR [RSP+24],RBX
            jne .L_42e1ef

            mov RAX,QWORD PTR [RSP+16]
            mov R11D,R14D
            mov R14,R12
            movzx R12D,WORD PTR [RSP+70]
            mov RCX,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+72]
            mov RBP,QWORD PTR [RAX]
.L_42e22f:

            cmp R12W,1
            ja .L_42e328
.L_42e23a:

            mov RAX,QWORD PTR [RSP+16]
            cmp WORD PTR [RSP+64],0
            mov RAX,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+8],RAX
            je .L_42e27b

            mov EAX,DWORD PTR [RSP+36]
            lea R12,QWORD PTR [RBX+2]
            sub EAX,1
            lea RBX,QWORD PTR [RBX+RAX*2+4]
.L_42e260:

            mov RDI,QWORD PTR [R14+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R12
            call RBP

            test AL,AL
            je .L_42e2e8

            add R12,2
            cmp RBX,R12
            jne .L_42e260
.L_42e27b:

            movzx EAX,WORD PTR [RSP+66]
            movzx EDX,BYTE PTR [RSP+69]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_42e2e8

            mov RSI,QWORD PTR [RSP+48]
            lea EAX,DWORD PTR [RDX-1]
            lea RBP,QWORD PTR [RSI+4]
            lea RBX,QWORD PTR [RSI+RAX*4+8]
            nop
            nop
            nop
            nop
            nop
.L_42e2a8:

            movzx ESI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R14+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_42e2da

            mov RDX,QWORD PTR [R14+16]
            test RDX,RDX
            je .L_42e2da

            sub EAX,1
            mov RDI,R14
            mov DWORD PTR [R14+24],EAX
            call RDX

            add DWORD PTR [R14+24],1
.L_42e2da:

            add RBP,4
            cmp RBP,RBX
            jne .L_42e2a8

            nop
            nop
            nop
            nop
            nop
.L_42e2e8:

            add R13,1
            cmp QWORD PTR [RSP+40],R13
            je .L_42e316
.L_42e2f3:

            movzx EAX,BYTE PTR [R15]
            movzx ECX,BYTE PTR [R15+1]
            jmp .L_42e100
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e308:

            add R13,1
            cmp QWORD PTR [RSP+40],R13
            mov R14,R12
            jne .L_42e2f3
.L_42e316:

            add RSP,88
.L_42e31a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e328:

            mov RAX,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RCX+2]
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [R11-2]
            lea RAX,QWORD PTR [RCX+RAX*2+4]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            mov R14,R13
            mov R13,RBX
            mov RBX,RBP
            mov RBP,RAX
.L_42e357:

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R12
            call RBX

            test AL,AL
            je .L_42e390

            add R12,2
            cmp QWORD PTR [RSP+24],R12
            jne .L_42e357

            mov RAX,QWORD PTR [RSP+16]
            mov RBX,R13
            mov R13,R14
            mov R14,RBP
            mov RBP,QWORD PTR [RAX]
            jmp .L_42e23a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e390:

            mov R13,R14
            mov R14,RBP
            jmp .L_42e2e8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e3a0:

            ret 
.L_42e3a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3b0:

            movzx EAX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,R10D
            test CX,CX
            je .L_42e548

            push R15
            movzx R8D,CX
            push R14
            push R13
            push R12
            sub R8D,1
            push RBP
            push RBX
            mov R13,RDX
            mov R12,RSI
            mov RBP,RDI
            lea R14,QWORD PTR [R8+1]
            sub RSP,56
.L_42e3ec:

            xor EBX,EBX
            lea R15,QWORD PTR [RIP+.L_657760]
            jmp .L_42e416
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e400:

            add RBX,1
            cmp R14,RBX
            je .L_42e530

            movzx EAX,BYTE PTR [RBP]
            movzx R10D,BYTE PTR [RBP+1]
.L_42e416:

            shl EAX,8
            mov RSI,R15
            add EAX,R10D
            movzx EAX,AX
            cmp EAX,EBX
            jbe .L_42e42b

            lea RSI,QWORD PTR [RBP+RBX*2+2]
.L_42e42b:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,RBP
            test DX,DX
            cmove RAX,R15
            movzx EDI,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,EDX
            movzx EDX,DI
            lea RSI,QWORD PTR [RAX+RDX*2+2]
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            movzx R10D,AX
            test AX,AX
            mov EAX,2
            lea EDX,DWORD PTR [R10+R10*1]
            cmove RDX,RAX
            cmp BYTE PTR [R12+20],0
            je .L_42e498

            add RDX,RSI
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            or AX,DI
            jne .L_42e400
.L_42e498:

            cmp DWORD PTR [R12+16],R10D
            jne .L_42e400

            cmp R10D,1
            jbe .L_42e519

            mov RAX,QWORD PTR [R13+16]
            lea R11,QWORD PTR [RSI+2]
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [R10-2]
            mov R10D,4
            lea RAX,QWORD PTR [RAX*4+8]
            mov QWORD PTR [RSP+40],RAX
.L_42e4d6:

            mov RAX,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+32],R10
            mov RSI,R11
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],R11
            mov EDI,DWORD PTR [RAX+R10*1]
            mov RAX,QWORD PTR [RSP+16]
            call RAX

            test AL,AL
            je .L_42e400

            mov R10,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+24]
            add R10,4
            add R11,2
            cmp R10,QWORD PTR [RSP+40]
            jne .L_42e4d6
.L_42e519:

            add RSP,56
.L_42e51d:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e530:

            add RSP,56
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e548:

            xor EAX,EAX
            ret 
.L_42e54b:

            nop
            nop
            nop
            nop
            nop
.L_42e550:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov R8D,EAX
            shl R8D,8
            add R8D,ECX
            test R8W,R8W
            je .L_42e6a0

            movzx R9D,R8W
            push R15
            push R14
            push R13
            lea R13D,DWORD PTR [R9-1]
            push R12
            push RBP
            push RBX
            mov R12,RDX
            mov RBP,RSI
            mov R15,RDI
            add R13,1
            sub RSP,8
.L_42e58e:

            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_657760]
            jmp .L_42e5b6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e5a0:

            add R14,1
            cmp R13,R14
            je .L_42e688

            movzx EAX,BYTE PTR [R15]
            movzx ECX,BYTE PTR [R15+1]
.L_42e5b6:

            shl EAX,8
            mov RDX,RBX
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_42e5cb

            lea RDX,QWORD PTR [R15+R14*2+2]
.L_42e5cb:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmove RDX,RBX
            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            lea R8D,DWORD PTR [RSI+RSI*1+2]
            add R8,RDX
            movzx EDI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl EDI,8
            add EDI,EAX
            movzx ECX,DI
            test DI,DI
            mov EDI,2
            lea EAX,DWORD PTR [RCX+RCX*1]
            cmove RAX,RDI
            add RDX,2
            add RAX,R8
            add R8,2
            movzx R9D,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            push R12
.L_42e630:

            shl R9D,8
            add R9D,EDI
            movzx R9D,R9W
            lea R10D,DWORD PTR [R9+R9*1+2]
            add R10,RAX
            add RAX,2
            lea RDI,QWORD PTR [R10+2]
            push RDI
            movzx EDI,BYTE PTR [R10]
            movzx R10D,BYTE PTR [R10+1]
            shl EDI,8
            add EDI,R10D
            movzx EDI,DI
            push RDI
            push RAX
            mov RDI,RBP
            call .L_426ba0

            add RSP,32
            test AL,AL
            je .L_42e5a0

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e688:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e6a0:

            xor EAX,EAX
            ret 
.L_42e6a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e6b0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,56
.L_42e6bc:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_42e782

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_42e7a0
.L_42e731:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_425f90]
            cmovne RDI,RBX
            mov RDX,RSP
            mov QWORD PTR [RSP],RAX
            call .L_42e550
.L_42e782:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42e7a7

            add RSP,56
.L_42e796:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e7a0:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_42e731
.L_42e7a7:

            call __stack_chk_fail@PLT
.L_42e7ac:

            nop
            nop
            nop
            nop
.L_42e7b0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,56
.L_42e7bc:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_42e882

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_42e8a0
.L_42e831:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_425f90]
            cmovne RDI,RBX
            mov RDX,RSP
            mov QWORD PTR [RSP],RAX
            call .L_42e550
.L_42e882:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42e8a7

            add RSP,56
.L_42e896:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e8a0:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_42e831
.L_42e8a7:

            call __stack_chk_fail@PLT
.L_42e8ac:

            nop
            nop
            nop
            nop
.L_42e8b0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,152
.L_42e8c7:

            movzx EDX,BYTE PTR [RDI+3]
            mov RSI,QWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+96],RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c500

            test AL,AL
            je .L_42eae9

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            lea RSI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+6]
            cmove RCX,RSI
            mov QWORD PTR [RSP+56],RCX
            movzx ECX,BYTE PTR [RBX+7]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+8]
            cmove RCX,RSI
            mov QWORD PTR [RSP+32],RCX
            movzx ECX,BYTE PTR [RBX+9]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+10]
            cmove RCX,RSI
            mov QWORD PTR [RSP+112],RCX
            movzx ECX,BYTE PTR [RBX+11]
            shl EAX,8
            add EAX,ECX
            test AX,AX
            movzx ECX,AX
            je .L_42eae9

            lea EAX,DWORD PTR [RCX-1]
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+8],RSI
            mov R14,R15
            add RAX,1
            mov QWORD PTR [RSP+104],RAX
            lea RAX,QWORD PTR [RSP+132]
            mov QWORD PTR [RSP+120],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e9c0:

            mov RSI,QWORD PTR [RSP+32]
            mov R12D,DWORD PTR [RSP+16]
            mov RBX,QWORD PTR [R14+8]
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_42eb18

            cmp AX,2
            jne .L_42ead3

            mov RSI,QWORD PTR [RSP+32]
            movzx EBP,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EBP,8
            cmp QWORD PTR [RSP+16],0
            lea EDI,DWORD PTR [RBP+RAX*1]
            mov WORD PTR [RSP+24],DI
            movzx R13D,DI
            jne .L_42ee98

            xor R15D,R15D
            test DI,DI
            mov DWORD PTR [RSP+132],4294967295
            lea RBP,QWORD PTR [RSI+4]
            je .L_42ead3

            mov DWORD PTR [RSP+44],R12D
            mov QWORD PTR [RSP+48],R14
            mov R12D,R15D
            mov R14,RBP
            mov R15,QWORD PTR [RSP+120]
            mov RBP,RSI
            jmp .L_42ea72
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ea50:

            test ESI,ESI
            je .L_42efd0

            xor EAX,EAX
.L_42ea5a:

            add R12D,1
            add R14,6
            mov DWORD PTR [RSP+132],EAX
            cmp R13D,R12D
            je .L_42efe0
.L_42ea72:

            mov RSI,R15
            mov RDI,RBX
            call .L_425dc0

            test EAX,EAX
            je .L_42ee80

            movzx EAX,BYTE PTR [RBP+2]
            movzx EDI,BYTE PTR [RBP+3]
            mov ESI,DWORD PTR [RSP+132]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_42ea50

            movzx EAX,BYTE PTR [R14]
            movzx EDI,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,EDI
            movzx EAX,AX
            cmp EAX,ESI
            ja .L_42efd0

            movzx EAX,BYTE PTR [R14+2]
            movzx ESI,BYTE PTR [R14+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            jmp .L_42ea5a
          .byte 0x66
          .byte 0x90
.L_42ead0:

            mov R14,R13
.L_42ead3:

            add QWORD PTR [RSP+16],1
            mov RAX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+104],RAX
            jne .L_42e9c0
.L_42eae9:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42f004

            add RSP,152
.L_42eb07:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42eb18:

            mov RSI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RSI+4]
            shl EAX,8
            cmp QWORD PTR [RSP+16],0
            mov EDX,EAX
            movzx EAX,BYTE PTR [RSI+5]
            lea R13D,DWORD PTR [RDX+RAX*1]
            movzx EBP,R13W
            je .L_42ef68
.L_42eb3e:

            test R13W,R13W
            je .L_42ead3

            mov R9,QWORD PTR [RSP+32]
            xor EDX,EDX
            mov R8D,1
            movzx EDI,BYTE PTR [R9+4]
            movzx EAX,BYTE PTR [R9+5]
            lea RSI,QWORD PTR [R9+6]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            jmp .L_42eb7f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eb70:

            add EDX,1
            add RSI,2
            cmp EBP,EDX
            je .L_42ead3
.L_42eb7f:

            mov RCX,QWORD PTR [RSP+8]
            cmp EDI,EDX
            cmova RCX,RSI
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,R12D
            jne .L_42eb70

            movzx ECX,BYTE PTR [R9+2]
            movzx EAX,BYTE PTR [R9+3]
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            add ECX,EDX
            cmp ECX,65535
            ja .L_42eb70

            mov EAX,ECX
            mov R10D,R8D
            shr EAX,5
            shl R10D,CL
            test DWORD PTR [RBX+RAX*4+116],R10D
            je .L_42eb70

            nop
            nop
            nop
            nop
.L_42ebd0:

            mov RSI,QWORD PTR [RSP+96]
            movzx EAX,BYTE PTR [RSI+10]
            movzx EDX,BYTE PTR [RSI+11]
            shl EAX,8
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+8]
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_42ebf9

            mov RAX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSI+RAX*2+12]
.L_42ebf9:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+96]
            test AX,AX
            cmove RDX,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RDX]
            mov R13,RDX
            movzx EDX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_42ead3

            lea ECX,DWORD PTR [RSI-1]
            xor R15D,R15D
            lea RBX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+48],RBX
            mov RBX,R14
            mov R14,R13
            mov R13,RBX
            nop
            nop
            nop
            nop
            nop
.L_42ec50:

            shl EAX,8
            mov RCX,QWORD PTR [RSP+8]
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_42ec67

            lea RCX,QWORD PTR [R14+R15*2+2]
.L_42ec67:

            movzx EDX,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,QWORD PTR [RSP+8]
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            lea R9,QWORD PTR [RAX+2]
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            lea ECX,DWORD PTR [RSI+RSI*1+2]
            add RCX,RAX
            movzx R8D,BYTE PTR [RCX]
            movzx EDI,BYTE PTR [RCX+1]
            shl R8D,8
            add R8D,EDI
            mov EDI,2
            movzx R11D,R8W
            test R8W,R8W
            lea EBX,DWORD PTR [R11+R11*1]
            cmove RBX,RDI
            add RBX,RCX
            movzx R12D,BYTE PTR [RBX]
            movzx EDI,BYTE PTR [RBX+1]
            shl R12D,8
            add R12D,EDI
            movzx EDI,R12W
            lea EBP,DWORD PTR [RDI+RDI*1+2]
            mov DWORD PTR [RSP+44],EDI
            add RBP,RBX
            test DX,DX
            movzx EDI,BYTE PTR [RBP]
            mov BYTE PTR [RSP+74],DIL
            movzx EDI,BYTE PTR [RBP+1]
            mov BYTE PTR [RSP+77],DIL
            je .L_42ed62

            lea EDX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+80],RBX
            mov QWORD PTR [RSP+88],RBP
            mov QWORD PTR [RSP+64],RCX
            mov RBP,R13
            mov WORD PTR [RSP+78],R8W
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov RBX,R9
            mov R13D,R11D
            mov QWORD PTR [RSP+24],RAX
.L_42ed23:

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RSP+56]
            mov RSI,RBX
            call .L_426830

            test AL,AL
            je .L_42ee60

            add RBX,2
            cmp QWORD PTR [RSP+24],RBX
            jne .L_42ed23

            movzx R8D,WORD PTR [RSP+78]
            mov R11D,R13D
            mov RCX,QWORD PTR [RSP+64]
            mov R13,RBP
            mov RBX,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [RSP+88]
.L_42ed62:

            cmp R8W,1
            jbe .L_42edc0

            lea EAX,DWORD PTR [R11-2]
            lea R8,QWORD PTR [RCX+2]
            mov QWORD PTR [RSP+64],RBX
            lea RAX,QWORD PTR [RCX+RAX*2+4]
            mov RBX,R8
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R13
            mov R13,RBP
            mov RBP,RAX
.L_42ed8c:

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBX
            call .L_426830

            test AL,AL
            je .L_42ee60

            add RBX,2
            cmp QWORD PTR [RSP+24],RBX
            jne .L_42ed8c

            mov RBX,QWORD PTR [RSP+64]
            mov RAX,RBP
            mov RBP,R13
            mov R13,RAX
            nop
            nop
.L_42edc0:

            test R12W,R12W
            je .L_42edf4

            mov EAX,DWORD PTR [RSP+44]
            lea R12,QWORD PTR [RBX+2]
            sub EAX,1
            lea RBX,QWORD PTR [RBX+RAX*2+4]
.L_42edd6:

            mov RDI,QWORD PTR [R13+8]
            mov RDX,QWORD PTR [RSP+112]
            mov RSI,R12
            call .L_426830

            test AL,AL
            je .L_42ee63

            add R12,2
            cmp RBX,R12
            jne .L_42edd6
.L_42edf4:

            movzx EAX,WORD PTR [RSP+74]
            movzx EDX,BYTE PTR [RSP+77]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_42ee63

            lea EAX,DWORD PTR [RDX-1]
            lea R12,QWORD PTR [RBP+4]
            lea RBX,QWORD PTR [RBP+RAX*4+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee20:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R13+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_42ee55

            mov RDX,QWORD PTR [R13+16]
            test RDX,RDX
            je .L_42ee55

            sub EAX,1
            mov RDI,R13
            mov DWORD PTR [R13+24],EAX
            call RDX

            add DWORD PTR [R13+24],1
.L_42ee55:

            add R12,4
            cmp R12,RBX
            jne .L_42ee20

            jmp .L_42ee63
.L_42ee60:

            mov R13,RBP
.L_42ee63:

            add R15,1
            cmp QWORD PTR [RSP+48],R15
            je .L_42ead0

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            jmp .L_42ec50
.L_42ee80:

            cmp DWORD PTR [RSP+132],-1
            mov R12D,DWORD PTR [RSP+44]
            mov R14,QWORD PTR [RSP+48]
            jne .L_42efea
.L_42ee98:

            cmp WORD PTR [RSP+24],0
            je .L_42ead3

            mov RSI,QWORD PTR [RSP+32]
            xor R8D,R8D
            mov R9D,1
            movzx R10D,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            lea RDI,QWORD PTR [RSI+4]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            jmp .L_42eee1

            nop
            nop
            nop
            nop
.L_42eed0:

            add R8D,1
            add RDI,6
            cmp R13D,R8D
            je .L_42ead3
.L_42eee1:

            xor EAX,EAX
            cmp R10D,R8D
            lea RDX,QWORD PTR [RIP+.L_44c601]
            jbe .L_42ef02

            movzx EAX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            mov RDX,RDI
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
.L_42ef02:

            cmp R12D,EAX
            jne .L_42eed0

            movzx ESI,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX+1]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+3]
            shl ESI,8
            shl ECX,8
            add ESI,EDX
            add ECX,EAX
            movzx ESI,SI
            movzx EAX,CX
            add ESI,1
            cmp EAX,ESI
            jae .L_42eed0

            mov EDX,R9D
            shl EDX,CL
            mov ECX,EDX
            mov EDX,EAX
            shr EDX,5
            test DWORD PTR [RBX+RDX*4+116],ECX
            jne .L_42ebd0

            mov ECX,EAX
            nop
            nop
            nop
.L_42ef48:

            add ECX,1
            cmp ESI,ECX
            jbe .L_42eed0

            mov EAX,ECX
            mov EDX,R9D
            shr EAX,5
            shl EDX,CL
            test DWORD PTR [RBX+RAX*4+116],EDX
            je .L_42ef48

            jmp .L_42ebd0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ef68:

            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RBX
            mov DWORD PTR [RSP+132],4294967295
            call .L_425dc0

            test EAX,EAX
            je .L_42ead3

            mov RSI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,DWORD PTR [RSP+132]
            ja .L_42ebd0

            mov RSI,QWORD PTR [RSP+120]
            lea EAX,DWORD PTR [RBP+RAX*1-1]
            mov RDI,RBX
            mov DWORD PTR [RSP+132],EAX
            call .L_425dc0

            test EAX,EAX
            je .L_42eb3e

            jmp .L_42ebd0
          .byte 0x90
.L_42efd0:

            mov R12D,DWORD PTR [RSP+44]
            mov R14,QWORD PTR [RSP+48]
            jmp .L_42ebd0
          .byte 0x90
.L_42efe0:

            mov R12D,DWORD PTR [RSP+44]
            mov R14,QWORD PTR [RSP+48]
.L_42efea:

            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RBX
            call .L_425dc0

            test EAX,EAX
            je .L_42ee98

            jmp .L_42ebd0
.L_42f004:

            call __stack_chk_fail@PLT
.L_42f009:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f010:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,72
.L_42f024:

            mov RDX,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            movzx ECX,BYTE PTR [RDI+3]
            mov EDX,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,EDX
            mov DWORD PTR [RSP+12],EDX
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            cmovne RDI,RCX
            call .L_42c320

            xor ECX,ECX
            cmp EAX,-1
            je .L_42f14e

            movzx EAX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            lea R14,QWORD PTR [RIP+.L_657760]
            mov EDX,DWORD PTR [RSP+12]
            mov R15,R14
            shl EAX,8
            mov ESI,EDX
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+6]
            cmovne R14,RCX
            movzx ECX,BYTE PTR [RBX+7]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [RBX+9]
            movzx R12D,AX
            add R12,RBX
            test AX,AX
            movzx EAX,BYTE PTR [RBX+8]
            cmove R12,R15
            mov RDI,R12
            shl EAX,8
            add EAX,ECX
            movzx R13D,AX
            add R13,RBX
            test AX,AX
            cmove R13,R15
            call .L_42c7a0

            movzx EDX,BYTE PTR [RBX+10]
            movzx ECX,BYTE PTR [RBX+11]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_42f170
.L_42f102:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+24],R14
            mov QWORD PTR [RSP+32],R12
            mov QWORD PTR [RSP+40],R13
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            lea RDX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_4267e0]
            cmovne RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_42e550

            mov ECX,EAX
.L_42f14e:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,ECX
            jne .L_42f179

            add RSP,72
.L_42f164:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_42f170:

            mov EAX,EAX
            lea R15,QWORD PTR [RBX+RAX*2+12]
            jmp .L_42f102
.L_42f179:

            call __stack_chk_fail@PLT
.L_42f17e:

            nop
            nop
.L_42f180:

            jmp .L_42f010
.L_42f185:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f190:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,RSI
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_657760]
            sub RSP,40
.L_42f1ab:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea R13,QWORD PTR [RDI+RAX*2+4]
            movzx EAX,BYTE PTR [R13]
            movzx EDI,BYTE PTR [R13+1]
            lea RSI,QWORD PTR [R13+2]
            shl EAX,8
            add AX,DI
            cmove RSI,RBX
            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,ESI
            mov RSI,QWORD PTR [R15+8]
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_42c500

            test AL,AL
            jne .L_42f210
.L_42f1fe:

            add RSP,40
.L_42f202:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f210:

            movzx R12D,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            lea R10,QWORD PTR [R14+4]
            movzx ESI,BYTE PTR [R14+3]
            shl R12D,8
            add R12D,EAX
            movzx R11D,R12W
            lea R9D,DWORD PTR [R11+R11*1+2]
            lea RCX,QWORD PTR [R13+R9*1]
            movzx EAX,BYTE PTR [RCX]
            shl EAX,8
            mov EDX,EAX
            movzx EAX,BYTE PTR [RCX+1]
            add EAX,EDX
            mov WORD PTR [RSP+12],AX
            movzx EAX,AX
            lea EBP,DWORD PTR [RAX+RAX*1+2]
            mov DWORD PTR [RSP+8],EAX
            add RBP,RCX
            movzx EAX,BYTE PTR [RBP]
            mov BYTE PTR [RSP+14],AL
            movzx EAX,BYTE PTR [RBP+1]
            mov BYTE PTR [RSP+25],AL
            movzx EAX,BYTE PTR [R14+2]
            shl EAX,8
            add EAX,ESI
            test AX,AX
            movzx ESI,AX
            je .L_42f2ec

            lea EAX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+16],RBP
            mov WORD PTR [RSP+26],R12W
            mov DWORD PTR [RSP+28],R11D
            mov R12,R15
            mov RBP,R10
            lea RAX,QWORD PTR [R14+RAX*2+6]
            mov R15,RCX
            mov QWORD PTR [RSP],RAX
.L_42f2a0:

            movzx EAX,BYTE PTR [RBP]
            movzx ECX,BYTE PTR [RBP+1]
            mov RSI,QWORD PTR [R12+8]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_42c500

            test AL,AL
            je .L_42f1fe

            add RBP,2
            cmp QWORD PTR [RSP],RBP
            jne .L_42f2a0

            mov RCX,R15
            mov R15,R12
            movzx R12D,WORD PTR [RSP+26]
            mov RBP,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+28]
.L_42f2ec:

            cmp R12W,1
            jbe .L_42f330

            lea EAX,DWORD PTR [R11-2]
            lea R12,QWORD PTR [R13+4]
            lea RBX,QWORD PTR [R13+RAX*2+6]
            mov R13,RCX
.L_42f303:

            mov RDI,QWORD PTR [R15+8]
            mov RDX,R14
            mov RSI,R12
            call .L_4267b0

            test AL,AL
            je .L_42f1fe

            add R12,2
            cmp RBX,R12
            jne .L_42f303

            mov RCX,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f330:

            cmp WORD PTR [RSP+12],0
            je .L_42f370

            mov EAX,DWORD PTR [RSP+8]
            lea R12,QWORD PTR [RCX+2]
            sub EAX,1
            lea RBX,QWORD PTR [RCX+RAX*2+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f350:

            mov RDI,QWORD PTR [R15+8]
            mov RDX,R14
            mov RSI,R12
            call .L_4267b0

            test AL,AL
            je .L_42f1fe

            add R12,2
            cmp RBX,R12
            jne .L_42f350
.L_42f370:

            movzx EAX,WORD PTR [RSP+14]
            movzx EDX,BYTE PTR [RSP+25]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_42f1fe

            lea EAX,DWORD PTR [RDX-1]
            lea R12,QWORD PTR [RBP+4]
            lea RBX,QWORD PTR [RBP+RAX*4+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f3a0:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [R15+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_42f3d5

            mov RDX,QWORD PTR [R15+16]
            test RDX,RDX
            je .L_42f3d5

            sub EAX,1
            mov RDI,R15
            mov DWORD PTR [R15+24],EAX
            call RDX

            add DWORD PTR [R15+24],1
.L_42f3d5:

            add R12,4
            cmp R12,RBX
            jne .L_42f3a0

            jmp .L_42f1fe
.L_42f3e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f3f0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            lea R8,QWORD PTR [RIP+.L_657760]
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_42f409:

            mov RDX,QWORD PTR [RSI+24]
            movzx EBP,BYTE PTR [RDI+2]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            shl EBP,8
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+3]
            add EBP,EAX
            movzx EBP,BP
            lea EAX,DWORD PTR [RBP+RBP*1+2]
            lea R14,QWORD PTR [RDI+RAX*1+2]
            movzx R12D,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            lea RDX,QWORD PTR [R14+2]
            shl R12D,8
            add R12W,CX
            cmove RDX,R8
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R8
            call .L_42c320

            xor EDX,EDX
            cmp EAX,-1
            je .L_42f501

            movzx ECX,R12W
            lea RSI,QWORD PTR [RIP+.L_426770]
            mov QWORD PTR [RSP+8],RBX
            lea EAX,DWORD PTR [RCX+RCX*1+2]
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP],RSI
            mov RSI,RSP
            lea R8,QWORD PTR [R14+4]
            add RAX,R14
            movzx R9D,BYTE PTR [RAX]
            movzx EDX,BYTE PTR [RAX+1]
            push RSI
.L_42f4c0:

            shl R9D,8
            add R9D,EDX
            lea RDX,QWORD PTR [RBX+4]
            movzx R9D,R9W
            lea EDI,DWORD PTR [R9+R9*1+2]
            add RDI,RAX
            add RAX,2
            lea RSI,QWORD PTR [RDI+2]
            push RSI
            movzx ESI,BYTE PTR [RDI]
            movzx EDI,BYTE PTR [RDI+1]
            shl ESI,8
            add ESI,EDI
            mov RDI,R13
            movzx ESI,SI
            push RSI
            push RAX
            mov ESI,EBP
            call .L_426ba0

            add RSP,32
            mov EDX,EAX
.L_42f501:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_42f520

            add RSP,48
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42f520:

            call __stack_chk_fail@PLT
.L_42f525:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f530:

            jmp .L_42f3f0
.L_42f535:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f540:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ECX,AX
            add RDI,RCX
            test AX,AX
            cmovne RDX,RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_42f586

            mov ESI,ESI
            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RDI,QWORD PTR [RDX+RAX*2+2]
.L_42f586:

            movzx ECX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl ECX,8
            add ECX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ESI,CX
            add RDX,RSI
            test CX,CX
            cmovne RAX,RDX
            ret 
.L_42f5a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f5b0:

            push RBX
.L_42f5b1:

            movzx EAX,BYTE PTR [RDI+4]
            lea RBX,QWORD PTR [RIP+.L_657760]
            movzx ECX,BYTE PTR [RDI+5]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDI,RCX
            test AX,AX
            cmovne RBX,RDI
            movzx R10D,BYTE PTR [RBX]
            movzx EAX,BYTE PTR [RBX+1]
            shl R10D,8
            add R10D,EAX
            movzx R10D,R10W
            sub R10D,1
            cmp R10D,-1
            je .L_42f648

            xor R11D,R11D
            jmp .L_42f603
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f5f8:

            je .L_42f660

            lea R11D,DWORD PTR [R8+1]
            cmp R11D,R10D
            jg .L_42f648
.L_42f603:

            lea R8D,DWORD PTR [R10+R11*1]
            sar R8D,1
            movsxd RAX,R8D
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [RBX+RAX*2+2]
            movzx ECX,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            mov EDI,ECX
            shl EAX,16
            shl EDI,24
            lea ECX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [R9+2]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R9+3]
            add EAX,ECX
            cmp ESI,EAX
            jae .L_42f5f8

            lea R10D,DWORD PTR [R8-1]
            cmp R11D,R10D
            jle .L_42f603
.L_42f648:

            xor EAX,EAX
            test RDX,RDX
            je .L_42f657

            mov DWORD PTR [RDX],65535
            xor EAX,EAX
.L_42f657:

            pop RBX
.L_42f658:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f660:

            test RDX,RDX
            je .L_42f670

            mov EAX,1
            mov DWORD PTR [RDX],R8D
            pop RBX
            ret 
          .byte 0x90
.L_42f670:

            mov EAX,1
            pop RBX
            ret 
.L_42f677:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f680:

            movzx EAX,BYTE PTR [RDI+8]
            movzx EDX,BYTE PTR [RDI+9]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ECX,AX
            add RDI,RCX
            test AX,AX
            cmovne RDX,RDI
            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ECX,CX
            cmp ESI,ECX
            jae .L_42f6db

            mov ESI,ESI
            lea RSI,QWORD PTR [RDX+RSI*2+2]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            movzx ESI,CX
            add RDX,RSI
            test CX,CX
            cmovne RAX,RDX
.L_42f6db:

            ret 
.L_42f6dd:

            nop
            nop
            nop
.L_42f6e0:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            lea RBX,QWORD PTR [RIP+.L_657760]
            mov R12,RDI
            sub RSP,48
.L_42f6f5:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov DWORD PTR [RSP],0
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RSI,RDI
            test AX,AX
            mov RDI,RSP
            cmove RSI,RBX
            call .L_42c490

            mov EAX,DWORD PTR [RSP]
.L_42f731:

            cmp EAX,1
            je .L_42f770

            cmp EAX,2
            je .L_42f84e
.L_42f73f:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42f8dc

            add RSP,48
.L_42f757:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f760:

            mov EDX,DWORD PTR [RSP+16]
.L_42f764:

            add EDX,1
            mov EAX,1
            mov DWORD PTR [RSP+16],EDX
.L_42f770:

            mov RSI,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+16]
            movzx ECX,BYTE PTR [RSI+2]
            movzx EDI,BYTE PTR [RSI+3]
            shl ECX,8
            add ECX,EDI
            movzx ECX,CX
            cmp EDX,ECX
            jae .L_42f73f

            mov ECX,EDX
            mov RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSI+RCX*2+4]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            mov RSI,RCX
            shl EAX,CL
            shl RSI,48
            shr RSI,53
            test DWORD PTR [RDI+RSI*4+116],EAX
            je .L_42f764
.L_42f7b7:

            movzx EAX,BYTE PTR [R12+4]
            movzx ECX,BYTE PTR [R12+5]
            shl EAX,8
            add EAX,ECX
            mov RCX,RBX
            movzx EAX,AX
            cmp EAX,EDX
            jbe .L_42f7d7

            lea RCX,QWORD PTR [R12+RDX*2+6]
.L_42f7d7:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            je .L_42f760

            cmp EAX,2
            jne .L_42f731
.L_42f800:

            mov RSI,QWORD PTR [RSP+8]
            add DWORD PTR [RSP+24],1
            mov ECX,DWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+20]
            movzx EDX,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_42f843

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_42f843:

            cmp EDI,EAX
            je .L_42f8a0

            add EDI,1
            mov DWORD PTR [RSP+20],EDI
.L_42f84e:

            mov RDX,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+16],EAX
            jae .L_42f73f

            mov ECX,DWORD PTR [RSP+20]
            mov RDI,QWORD PTR [RBP+8]
            mov EDX,1
            mov EAX,ECX
            shl EDX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [RDI+RAX*4+116],EDX
            je .L_42f800

            movzx EDX,WORD PTR [RSP+24]
            jmp .L_42f7b7

            nop
            nop
            nop
            nop
            nop
            nop
.L_42f8a0:

            add ECX,1
            mov DWORD PTR [RSP+16],ECX
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_42f84e

            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSP+20],EAX
            jmp .L_42f84e
.L_42f8dc:

            call __stack_chk_fail@PLT
.L_42f8e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f8f0:

            push R15
            push R14
            lea R14,QWORD PTR [RIP+.L_657760]
            push R13
            push R12
            mov R15D,1
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,120
.L_42f90e:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+64],0
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RSI,RDI
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            lea RDI,QWORD PTR [RSP+64]
            cmove RSI,RAX
            call .L_42c490

            mov RBP,QWORD PTR [RSP+72]
            mov R12D,DWORD PTR [RSP+80]
            mov R13D,DWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RBP+2]
            mov R10,R12
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+88]
            mov DWORD PTR [RSP+16],EAX
            mov EAX,DWORD PTR [RSP+84]
            mov DWORD PTR [RSP+4],EAX
            lea RAX,QWORD PTR [RBX+4]
            mov QWORD PTR [RSP+56],RAX
.L_42f98f:

            mov EBX,DWORD PTR [RSP+4]
            movzx EDI,WORD PTR [RSP+16]
            mov ESI,R15D
            mov WORD PTR [RSP+40],R10W
            mov EAX,EBX
            mov ECX,EBX
            mov RBX,QWORD PTR [RSP+8]
            shr EAX,5
            shl ESI,CL
            mov WORD PTR [RSP+42],DI
            and EAX,2047
            mov DWORD PTR [RSP+20],ESI
            add RAX,28
            lea RBX,QWORD PTR [RBX+R12*2+2]
            mov QWORD PTR [RSP+24],RAX
.L_42f9cb:

            cmp R13D,1
            je .L_42fa00

            cmp R13D,2
            je .L_42fb80
.L_42f9db:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42fc27

            add RSP,120
.L_42f9f3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42fa00:

            movzx EAX,BYTE PTR [RBP+2]
            movzx EDX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R10D
            jbe .L_42f9db

            mov RAX,QWORD PTR [RSP+48]
            movzx ECX,BYTE PTR [RBX]
            mov R8,QWORD PTR [RAX+8]
            movzx EAX,BYTE PTR [RBX+1]
            shl ECX,8
            add ECX,EAX
            mov EAX,R13D
            shl EAX,CL
            shl RCX,48
            shr RCX,53
            test DWORD PTR [R8+RCX*4+116],EAX
            je .L_42fbc0

            movzx EAX,WORD PTR [RSP+40]
.L_42fa47:

            mov RSI,QWORD PTR [RSP+32]
            movzx EDX,BYTE PTR [RSI+4]
            movzx ECX,BYTE PTR [RSI+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            cmp DX,AX
            jbe .L_42fa6f

            mov RDI,QWORD PTR [RSP+56]
            lea RCX,QWORD PTR [RDI+RAX*2+2]
.L_42fa6f:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,QWORD PTR [RSP+32]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx R9D,DX
            je .L_42fb11

            movzx R11D,BYTE PTR [R8+112]
            lea RSI,QWORD PTR [RDI+2]
            xor EDX,EDX
            mov DWORD PTR [RSP+44],R10D
            jmp .L_42fac7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fac0:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
.L_42fac7:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EDX
            mov RAX,R14
            cmova RAX,RSI
            test R11B,R11B
            jne .L_42fb00

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov R10D,R15D
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl R10D,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R8+RAX*1+116],R10D
.L_42fb00:

            add EDX,1
            add RSI,2
            cmp R9D,EDX
            jne .L_42fac0

            mov R10D,DWORD PTR [RSP+44]
.L_42fb11:

            cmp R13D,1
            je .L_42fbc0

            cmp R13D,2
            jne .L_42f9cb
.L_42fb25:

            add DWORD PTR [RSP+16],1
            mov EAX,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+88],EAX
            movzx EDX,BYTE PTR [RBP+2]
            movzx EAX,BYTE PTR [RBP+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp EDX,R10D
            jbe .L_42fb67

            mov RBX,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [R12+R12*2]
            lea RDX,QWORD PTR [RBX+RAX*2+2]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_42fb67:

            cmp EAX,DWORD PTR [RSP+4]
            je .L_42fbd8

            add DWORD PTR [RSP+4],1
            mov EAX,DWORD PTR [RSP+4]
            mov DWORD PTR [RSP+84],EAX
            jmp .L_42f98f
          .byte 0x90
.L_42fb80:

            movzx EAX,BYTE PTR [RBP+2]
            movzx EDX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R10D
            jbe .L_42f9db

            mov RAX,QWORD PTR [RSP+48]
            mov EDI,DWORD PTR [RSP+20]
            mov R8,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RSP+24]
            test DWORD PTR [R8+RAX*4+4],EDI
            je .L_42fb25

            movzx EAX,WORD PTR [RSP+42]
            jmp .L_42fa47
.L_42fbc0:

            lea R12D,DWORD PTR [R10+1]
            mov R10,R12
            mov DWORD PTR [RSP+80],R12D
            jmp .L_42f98f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fbd8:

            lea R12D,DWORD PTR [R10+1]
            mov DWORD PTR [RSP+80],R12D
            movzx EAX,BYTE PTR [RBP+2]
            mov R10,R12
            movzx EDX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp R12D,EAX
            jae .L_42f98f

            mov RDI,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [R12+R12*2]
            lea RDX,QWORD PTR [RDI+RAX*2+2]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSP+4],EAX
            mov DWORD PTR [RSP+84],EAX
            jmp .L_42f98f
.L_42fc27:

            call __stack_chk_fail@PLT
.L_42fc2c:

            nop
            nop
            nop
            nop
.L_42fc30:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_42fc44:

            mov R13,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EBP,DWORD PTR [R13+180]
            mov R14,QWORD PTR [R13+200]
            lea RAX,QWORD PTR [RBP+RBP*4]
            lea R15,QWORD PTR [R14+RAX*4]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [R15]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_42fd8b

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_42fda0
.L_42fcb4:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ECX,DX
            add RBX,RCX
            test DX,DX
            cmovne RAX,RBX
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            movzx ECX,DX
            je .L_42fdc0

            test ECX,ECX
            je .L_42fdb0

            xor R13D,R13D
            test BYTE PTR [R15+12],4
            lea EBX,DWORD PTR [RCX-1]
            setne R13B
            add RBX,1
            xor R15D,R15D
            add R13D,R13D
            jmp .L_42fd27
.L_42fd10:

            mov RDX,QWORD PTR [R12+24]
            mov RAX,QWORD PTR [RSP+8]
            mov EBP,DWORD PTR [RDX+180]
            mov R14,QWORD PTR [RDX+200]
.L_42fd27:

            lea RDX,QWORD PTR [RBP+RBP*4]
            mov ECX,R15D
            mov R8D,1
            and ECX,15
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            mov BYTE PTR [R14+RDX*4+14],CL
            movzx EBP,BYTE PTR [RAX+R15*2+2]
            xor ECX,ECX
            movzx EDX,BYTE PTR [RAX+R15*2+3]
            add R15,1
            shl EBP,8
            add EBP,EDX
            mov EDX,R13D
            movzx EBP,BP
            mov ESI,EBP
            call .L_42d720

            mov RDI,QWORD PTR [R12+24]
            mov ESI,EBP
            call .L_402970

            cmp RBX,R15
            jne .L_42fd10

            mov RAX,QWORD PTR [R12+24]
            add DWORD PTR [RAX+180],1
            mov EAX,1
.L_42fd8b:

            add RSP,24
.L_42fd8f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fda0:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_42fcb4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fdb0:

            mov RDI,R13
            call .L_403140

            mov EAX,1
            jmp .L_42fd8b
          .byte 0x90
.L_42fdc0:

            movzx ESI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            mov RDI,R12
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42d980

            mov EAX,1
            jmp .L_42fd8b
.L_42fddf:

            nop
.L_42fde0:

            jmp .L_42fc30
.L_42fde5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fdf0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_657760]
            mov R13,RDI
            lea RBP,QWORD PTR [RIP+.L_657760]
            sub RSP,72
.L_42fe12:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RDI,QWORD PTR [RSP+16]
            cmovne RSI,RDX
            mov QWORD PTR [RSP+8],RDI
            call .L_42c490

            nop
            nop
            nop
            nop
            nop
.L_42fe58:

            mov EAX,DWORD PTR [RSP+16]
            cmp EAX,1
            je .L_42fe90

            cmp EAX,2
            je .L_42fef0
.L_42fe6a:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ffe5

            add RSP,72
.L_42fe82:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fe90:

            mov RCX,QWORD PTR [RSP+24]
            mov ESI,DWORD PTR [RSP+32]
            movzx EDX,BYTE PTR [RCX+2]
            movzx EDI,BYTE PTR [RCX+3]
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_42fe6a

            mov EDX,ESI
            mov RDI,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RCX+RDX*2+4]
            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,EDX
            mov RDX,RCX
            shl EAX,CL
            shl RDX,48
            shr RDX,53
            test DWORD PTR [RDI+RDX*4+116],EAX
            jne .L_42ff34
.L_42fed8:

            mov RDI,QWORD PTR [RSP+8]
            call .L_42c6e0

            jmp .L_42fe58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fef0:

            mov RDX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+32],EAX
            jae .L_42fe6a

            mov ECX,DWORD PTR [RSP+36]
            mov RDI,QWORD PTR [R12+8]
            mov EDX,1
            mov EAX,ECX
            shl EDX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [RDI+RAX*4+116],EDX
            je .L_42fed8

            movzx ESI,WORD PTR [RSP+40]
.L_42ff34:

            movzx EAX,BYTE PTR [R13+4]
            movzx EDX,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            cmp AX,SI
            jbe .L_42ff53

            movzx ESI,SI
            lea RDX,QWORD PTR [R13+RSI*2+6]
.L_42ff53:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R13
            test AX,AX
            cmove RDX,RBP
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            mov R14,RDX
            mov ESI,EAX
            shl ESI,8
            add ESI,ECX
            test SI,SI
            movzx R8D,SI
            je .L_42fed8

            lea EBX,DWORD PTR [R8-1]
            xor R15D,R15D
            add RBX,1
            jmp .L_42ffae
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ffa0:

            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            mov RDI,QWORD PTR [R12+8]
.L_42ffae:

            shl EAX,8
            add EAX,ECX
            mov RCX,RBP
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_42ffc3

            lea RCX,QWORD PTR [R14+R15*2+2]
.L_42ffc3:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            add R15,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            cmp R15,RBX
            jne .L_42ffa0

            jmp .L_42fed8
.L_42ffe5:

            call __stack_chk_fail@PLT
.L_42ffea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42fff0:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_657760]
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            lea RSI,QWORD PTR [RIP+.L_657760]
            lea R14,QWORD PTR [RBP+4]
            mov EBX,1
            sub RSP,56
.L_43001b:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov R13,RSP
            mov DWORD PTR [RSP],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R13
            cmovne RSI,RDX
            call .L_42c490

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430060:

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            je .L_430098

            cmp EAX,2
            je .L_430198
.L_430071:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_430208

            add RSP,56
.L_430089:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430098:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+16]
            movzx EAX,BYTE PTR [RCX+2]
            movzx ESI,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_430071

            lea RAX,QWORD PTR [RCX+RDX*2+4]
            mov RDI,QWORD PTR [R12+16]
            movzx ESI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            je .L_4301d5
.L_4300df:

            cmp EAX,2
            je .L_4301e0

            mov RCX,R15
            nop
            nop
            nop
            nop
            nop
.L_4300f0:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            cmove RDI,R15
            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx R9D,DX
            je .L_430184

            mov R8,QWORD PTR [R12+32]
            lea RSI,QWORD PTR [RDI+2]
            xor EDX,EDX
            movzx R10D,BYTE PTR [R8+112]
            jmp .L_43013f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430138:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+1]
.L_43013f:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EDX
            mov RAX,R15
            cmova RAX,RSI
            test R10B,R10B
            jne .L_430178

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov R11D,EBX
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl R11D,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R8+RAX*1+116],R11D
.L_430178:

            add EDX,1
            add RSI,2
            cmp R9D,EDX
            jne .L_430138
.L_430184:

            mov RDI,R13
            call .L_42c6e0

            jmp .L_430060
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430198:

            mov RDX,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+16],EAX
            jae .L_430071

            movzx ESI,WORD PTR [RSP+20]
            mov RDI,QWORD PTR [R12+16]
            movzx ESI,SI
            call .L_42c250

            mov EAX,DWORD PTR [RSP]
            cmp EAX,1
            jne .L_4300df
.L_4301d5:

            movzx EDX,WORD PTR [RSP+16]
            jmp .L_4301e5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4301e0:

            movzx EDX,WORD PTR [RSP+24]
.L_4301e5:

            movzx EAX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            shl EAX,8
            add EAX,ECX
            mov RCX,R15
            cmp AX,DX
            jbe .L_4300f0

            lea RCX,QWORD PTR [R14+RDX*2+2]
            jmp .L_4300f0
.L_430208:

            call __stack_chk_fail@PLT
.L_43020d:

            nop
            nop
            nop
.L_430210:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_430217:

            mov RAX,QWORD PTR [RSI+24]
            mov RBX,RDI
            mov EDX,DWORD PTR [RAX+180]
            mov RAX,QWORD PTR [RAX+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea R12,QWORD PTR [RAX+RDX*4]
            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [R12]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_43030b

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp ECX,EDX
            jb .L_430310
.L_430289:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_657760]
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne RSI,RBX
            xor EAX,EAX
            movzx EDX,BYTE PTR [RSI]
            movzx EDI,BYTE PTR [RSI+1]
            shl EDX,8
            add DI,DX
            je .L_43030b

            mov R8D,DWORD PTR [RBP+36]
            mov EDX,DWORD PTR [R12+4]
            test R8D,R8D
            je .L_43030b

            xor ECX,ECX
            mov EAX,EDX
            movzx EDX,DI
            tzcnt ECX,R8D
            and EAX,R8D
            shr EAX,CL
            test EAX,EAX
            je .L_430330

            cmp EDX,EAX
            jb .L_430330

            sub EAX,1
            lea RCX,QWORD PTR [RIP+.L_657760]
            cmp EDX,EAX
            ja .L_430320
.L_4302ef:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42d980

            mov EAX,1
.L_43030b:

            pop RBX
.L_43030c:

            pop RBP
            pop R12
            ret 
.L_430310:

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            jmp .L_430289
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430320:

            lea RCX,QWORD PTR [RSI+RAX*2+2]
            jmp .L_4302ef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430330:

            xor EAX,EAX
            jmp .L_43030b
.L_430334:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430340:

            jmp .L_430210
.L_430345:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430350:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,328
.L_430361:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+312],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            jne .L_4303b8
.L_430386:

            xor R12D,R12D
.L_430389:

            mov RDI,QWORD PTR [RSP+312]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_430849

            add RSP,328
.L_4303aa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4303b8:

            movzx R14D,AX
            mov RBX,RDI
            mov R10,RSI
            cmp R14D,1
            je .L_430628

            cmp AX,1
            lea RDX,QWORD PTR [RDI+4]
            lea RAX,QWORD PTR [RIP+.L_657760]
            mov BYTE PTR [RSP+39],0
            mov DWORD PTR [RSP+40],0
            lea RCX,QWORD PTR [RIP+.L_425f90]
            mov DWORD PTR [RSP+44],0
            cmove RDX,RAX
            sub RSP,8
.L_4303ff:

            lea RAX,QWORD PTR [RSP+48]
            xor R8D,R8D
            mov ESI,R14D
            mov RDI,R10
            push RAX
            lea RAX,QWORD PTR [RSP+55]
            push RAX
            lea RBP,QWORD PTR [RSP+72]
            push RBP
            lea R9,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+32],R10
            call .L_426850

            add RSP,32
            test AL,AL
            mov R12D,EAX
            je .L_430386

            mov R10,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+44]
            movzx EAX,BYTE PTR [RBX]
            movzx R8D,BYTE PTR [RBX+1]
            mov ECX,DWORD PTR [RSP+40]
            movzx R13D,BYTE PTR [RSP+39]
            mov RBX,QWORD PTR [R10+24]
            cmp EDX,1
            mov ESI,DWORD PTR [RBX+180]
            ja .L_430800
.L_430465:

            test R13B,R13B
            jne .L_430650

            mov EDX,DWORD PTR [RBX+224]
.L_430474:

            mov R9D,EDX
            add EDX,1
            and R9D,7
            test R9B,R9B
            je .L_430474

            mov DWORD PTR [RBX+224],EDX
            mov RDX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RSI+RSI*4]
            shl R9D,5
            lea RSI,QWORD PTR [RDX+RSI*4]
            test BYTE PTR [RSI+12],4
            movzx EDI,BYTE PTR [RSI+14]
            jne .L_43084e

            mov BYTE PTR [RSP+24],R12B
            mov EDX,4
            mov R15D,1
.L_4304ba:

            and ECX,15
            or ECX,16
            or ECX,R9D
            mov BYTE PTR [RSI+14],CL
            mov ECX,DWORD PTR [RBX+180]
            lea RSI,QWORD PTR [RCX+RCX*4]
            mov RCX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RCX+RSI*4]
            movzx ECX,WORD PTR [RSI+16]
            mov EDI,ECX
            and EDI,31
            cmp DI,12
            jne .L_430500

            and CX,224
            or ECX,7
            mov WORD PTR [RSI+16],CX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430500:

            shl EAX,8
            mov ECX,1
            mov RDI,R10
            add EAX,R8D
            xor R8D,R8D
            mov BYTE PTR [RSP+16],R9B
            movzx EAX,AX
            mov QWORD PTR [RSP],R10
            mov ESI,EAX
            mov DWORD PTR [RSP+12],EAX
            call .L_42d720

            mov R10,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+12]
            mov RDI,QWORD PTR [R10+24]
            mov ESI,EAX
            call .L_402c60

            mov EAX,DWORD PTR [RBX+180]
            mov RSI,QWORD PTR [RBX+200]
            mov R8D,R15D
            mov ECX,1
            movzx R9D,BYTE PTR [RSP+16]
            jmp .L_43056f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430560:

            mov EAX,DWORD PTR [RBX+180]
.L_430566:

            add EAX,1
            mov DWORD PTR [RBX+180],EAX
.L_43056f:

            cmp DWORD PTR [RBP+RCX*4],EAX
            jbe .L_4306a0

            cmp BYTE PTR [RBX+176],0
            jne .L_4306a0

            test R13B,R13B
            jne .L_4305c5

            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RDX,QWORD PTR [RSI+RAX*4]
            mov EAX,R8D
            movzx ESI,BYTE PTR [RDX+14]
            test SIL,16
            jne .L_4305b5

            and ESI,15
            je .L_4305b5

            movzx ESI,SIL
            cmp ESI,R15D
            cmova ESI,R15D
            sub EAX,R15D
            add EAX,ESI
.L_4305b5:

            and EAX,15
            or EAX,R9D
            mov BYTE PTR [RDX+14],AL
            mov RSI,QWORD PTR [RBX+200]
.L_4305c5:

            cmp BYTE PTR [RBX+177],0
            je .L_430560

            cmp QWORD PTR [RBX+208],RSI
            je .L_4306f0
.L_4305db:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            mov QWORD PTR [RSP+16],RCX
            mov DWORD PTR [RSP+12],R8D
            mov BYTE PTR [RSP],R9B
            call .L_4022b0

            test AL,AL
            movzx R9D,BYTE PTR [RSP]
            mov R8D,DWORD PTR [RSP+12]
            mov RCX,QWORD PTR [RSP+16]
            jne .L_430718

            mov EAX,DWORD PTR [RBX+180]
            mov RSI,QWORD PTR [RBX+200]
            jmp .L_43056f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430628:

            movzx ESI,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            mov RDI,R10
            mov R12D,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42d980

            jmp .L_430389
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430650:

            mov RDX,QWORD PTR [RBX+200]
            lea RSI,QWORD PTR [RSI+RSI*4]
            xor R9D,R9D
            lea RSI,QWORD PTR [RDX+RSI*4]
            xor EDX,EDX
            test BYTE PTR [RSI+12],4
            movzx EDI,BYTE PTR [RSI+14]
            je .L_430839
.L_430672:

            mov R15D,EDI
            and R15D,15
            and EDI,16
            mov EDI,1
            cmove R15D,EDI
            mov EDI,R13D
            xor EDI,1
            test R13B,R13B
            mov BYTE PTR [RSP+24],DIL
            jne .L_430500

            jmp .L_4304ba
          .byte 0x66
          .byte 0x90
.L_4306a0:

            mov EDX,EAX
            mov R15D,1
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            test BYTE PTR [RDX+12],4
            movzx EDI,BYTE PTR [RDX+14]
            je .L_4306c7

            mov EDX,EDI
            and EDX,15
            test DIL,16
            cmovne R15D,EDX
.L_4306c7:

            add RCX,1
            add EAX,1
            lea EDX,DWORD PTR [R15+R8*1]
            cmp R14D,ECX
            mov DWORD PTR [RBX+180],EAX
            jbe .L_430768

            mov R8D,EDX
            jmp .L_43056f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4306f0:

            mov EDX,DWORD PTR [RBX+180]
            cmp DWORD PTR [RBX+188],EDX
            jne .L_4305db

            mov EAX,EDX
.L_430704:

            add EDX,1
            mov DWORD PTR [RBX+188],EDX
            jmp .L_430566
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430718:

            mov EAX,DWORD PTR [RBX+188]
            mov RDX,QWORD PTR [RBX+208]
            mov RSI,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,DWORD PTR [RBX+188]
            mov EAX,DWORD PTR [RBX+180]
            mov RSI,QWORD PTR [RBX+200]
            jmp .L_430704
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430768:

            movzx ECX,DIL
            sar ECX,5
            test ECX,ECX
            je .L_430389

            cmp BYTE PTR [RSP+24],0
            je .L_430389

            cmp DWORD PTR [RBX+184],EAX
            jbe .L_430389

            mov EDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDI,QWORD PTR [RSI+RDX*4]
            jmp .L_4307ee
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4307a0:

            test DL,16
            jne .L_430389

            mov ESI,EDX
            and ESI,15
            test SIL,SIL
            movzx EDX,SIL
            je .L_430389

            cmp R15D,EDX
            cmovbe EDX,R15D
            add EAX,1
            add EDX,R8D
            and EDX,15
            or EDX,R9D
            mov BYTE PTR [RDI+14],DL
            cmp DWORD PTR [RBX+184],EAX
            jbe .L_430389

            mov EDX,EAX
            lea RSI,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RBX+200]
            lea RDI,QWORD PTR [RDX+RSI*4]
.L_4307ee:

            movzx ESI,BYTE PTR [RDI+14]
            mov EDX,ESI
            sar ESI,5
            cmp ECX,ESI
            je .L_4307a0

            jmp .L_430389
.L_430800:

            add EDX,ESI
            mov RDI,RBX
            mov QWORD PTR [RSP+24],R10
            mov BYTE PTR [RSP+16],R8B
            mov BYTE PTR [RSP+12],AL
            mov DWORD PTR [RSP],ECX
            call .L_402ee0

            mov ESI,DWORD PTR [RBX+180]
            mov R10,QWORD PTR [RSP+24]
            movzx R8D,BYTE PTR [RSP+16]
            movzx EAX,BYTE PTR [RSP+12]
            mov ECX,DWORD PTR [RSP]
            jmp .L_430465
.L_430839:

            mov R15D,1
            mov BYTE PTR [RSP+24],0
            jmp .L_430500
.L_430849:

            call __stack_chk_fail@PLT
.L_43084e:

            mov EDX,4
            jmp .L_430672
.L_430858:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430860:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_43086b:

            mov RDX,QWORD PTR [RSI+24]
            mov RBX,RDI
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_430978

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_430988
.L_4308d7:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea R13,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne R13,RBX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_430978

            lea R12D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_430932
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430928:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
.L_430932:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_430947

            lea RDX,QWORD PTR [R13+R14*2+2]
.L_430947:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R13
            test AX,AX
            cmove RDI,RBX
            call .L_430350

            test AL,AL
            jne .L_43097a

            add R14,1
            cmp R12,R14
            jne .L_430928

            nop
            nop
            nop
.L_430978:

            xor EAX,EAX
.L_43097a:

            pop RBX
.L_43097b:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430988:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
            jmp .L_4308d7
.L_430994:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4309a0:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_657760]
            push RBP
            push RBX
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_657760]
            mov R13D,1
            sub RSP,72
.L_4309c5:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+8],RDI
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RDI,QWORD PTR [RSP+16]
            cmovne RSI,RDX
            call .L_42c490

            mov EDX,DWORD PTR [RSP+16]
.L_430a0a:

            cmp EDX,1
            je .L_430a4b

            cmp EDX,2
            je .L_430c49
.L_430a18:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_430cd4

            add RSP,72
.L_430a30:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_430a3b:

            mov EAX,DWORD PTR [RSP+32]
.L_430a3f:

            add EAX,1
            mov EDX,1
            mov DWORD PTR [RSP+32],EAX
.L_430a4b:

            mov RSI,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RSP+32]
            movzx ECX,BYTE PTR [RSI+2]
            movzx EDI,BYTE PTR [RSI+3]
            shl ECX,8
            add ECX,EDI
            movzx ECX,CX
            cmp EAX,ECX
            jae .L_430a18

            mov ECX,EAX
            mov RDI,QWORD PTR [RBP+8]
            mov EBX,EDX
            lea RSI,QWORD PTR [RSI+RCX*2+4]
            movzx ECX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl ECX,8
            add ECX,ESI
            mov RSI,RCX
            shl EBX,CL
            shl RSI,48
            shr RSI,53
            test DWORD PTR [RDI+RSI*4+116],EBX
            je .L_430a3f
.L_430a94:

            mov RBX,QWORD PTR [RSP+8]
            movzx ECX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            shl ECX,8
            add ECX,ESI
            mov RSI,R12
            movzx ECX,CX
            cmp ECX,EAX
            jbe .L_430ab5

            lea RSI,QWORD PTR [RBX+RAX*2+6]
.L_430ab5:

            movzx EAX,BYTE PTR [RSI]
            movzx ECX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,ECX
            movzx R15D,AX
            add R15,QWORD PTR [RSP+8]
            test AX,AX
            cmove R15,R12
            movzx ECX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            mov ESI,ECX
            shl ESI,8
            add ESI,EAX
            test SI,SI
            movzx R9D,SI
            je .L_430be4

            lea EBX,DWORD PTR [R9-1]
            xor R14D,R14D
            add RBX,1
            mov QWORD PTR [RSP],RBX
            lea RBX,QWORD PTR [R15+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430b08:

            shl ECX,8
            lea RDX,QWORD PTR [RBX+R14*2]
            add ECX,EAX
            mov RAX,R12
            movzx ECX,CX
            cmp ECX,R14D
            cmova RAX,RDX
            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmove RDX,R12
            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            movzx ESI,AX
            jbe .L_430baf

            movzx ECX,BYTE PTR [RDX+4]
            movzx EAX,BYTE PTR [RDX+5]
            shl ECX,8
            add ECX,EAX
            mov EAX,R13D
            shl EAX,CL
            shl RCX,48
            shr RCX,53
            test DWORD PTR [RDI+RCX*4+116],EAX
            je .L_430bc3

            lea RAX,QWORD PTR [RDX+6]
            lea ECX,DWORD PTR [RSI-2]
            lea RSI,QWORD PTR [RAX+RCX*2]
            jmp .L_430baa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430b80:

            movzx ECX,BYTE PTR [RAX]
            movzx R10D,BYTE PTR [RAX+1]
            mov R8D,R13D
            add RAX,2
            shl ECX,8
            add ECX,R10D
            mov R10,RCX
            shl R8D,CL
            shl R10,48
            shr R10,53
            test DWORD PTR [RDI+R10*4+116],R8D
            je .L_430bc3
.L_430baa:

            cmp RAX,RSI
            jne .L_430b80
.L_430baf:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250
.L_430bc3:

            add R14,1
            cmp QWORD PTR [RSP],R14
            je .L_430be0

            movzx ECX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            mov RDI,QWORD PTR [RBP+8]
            jmp .L_430b08
          .byte 0x90
.L_430be0:

            mov EDX,DWORD PTR [RSP+16]
.L_430be4:

            cmp EDX,1
            je .L_430a3b

            cmp EDX,2
            jne .L_430a0a
.L_430bf6:

            mov RCX,QWORD PTR [RSP+24]
            add DWORD PTR [RSP+40],1
            mov ESI,DWORD PTR [RSP+32]
            mov EDI,DWORD PTR [RSP+36]
            movzx EDX,BYTE PTR [RCX+2]
            movzx EAX,BYTE PTR [RCX+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ESI,EDX
            jae .L_430c39

            mov EAX,ESI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RCX+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_430c39:

            cmp EDI,EAX
            je .L_430c93

            add EDI,1
            mov EDX,2
            mov DWORD PTR [RSP+36],EDI
.L_430c49:

            mov RCX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp DWORD PTR [RSP+32],EAX
            jae .L_430a18

            mov ECX,DWORD PTR [RSP+36]
            mov RDI,QWORD PTR [RBP+8]
            mov EBX,R13D
            mov EAX,ECX
            shl EBX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [RDI+RAX*4+116],EBX
            je .L_430bf6

            movzx EAX,WORD PTR [RSP+40]
            jmp .L_430a94
.L_430c93:

            add ESI,1
            mov DWORD PTR [RSP+32],ESI
            movzx EAX,BYTE PTR [RCX+2]
            movzx EDX,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,EDX
            mov EDX,2
            movzx EAX,AX
            cmp ESI,EAX
            jae .L_430c49

            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RCX,QWORD PTR [RCX+RAX*2+4]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            mov DWORD PTR [RSP+36],EAX
            jmp .L_430c49
.L_430cd4:

            call __stack_chk_fail@PLT
.L_430cd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430ce0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            lea RSI,QWORD PTR [RIP+.L_657760]
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_657760]
            mov EBP,1
            sub RSP,88
.L_430d04:

            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+2]
            mov QWORD PTR [RSP+24],RDI
            mov DWORD PTR [RSP+32],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RDI,QWORD PTR [RSP+32]
            cmovne RSI,RDX
            call .L_42c490

            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RSP+20],EAX
.L_430d4d:

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,1
            je .L_430d8d

            cmp EAX,2
            je .L_430fb4
.L_430d5f:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_431033

            add RSP,88
.L_430d77:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430d88:

            add DWORD PTR [RSP+48],1
.L_430d8d:

            mov RCX,QWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RCX+2]
            movzx ESI,BYTE PTR [RCX+3]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_430d5f

            lea RAX,QWORD PTR [RCX+RDX*2+4]
            mov RDI,QWORD PTR [R15+16]
            movzx ESI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EAX
.L_430dbf:

            movzx ESI,SI
            call .L_42c250

            mov EAX,DWORD PTR [RSP+32]
            cmp EAX,1
            mov DWORD PTR [RSP+20],EAX
            je .L_430ff0

            cmp EAX,2
            jne .L_430fe8

            movzx EAX,WORD PTR [RSP+56]
.L_430de6:

            mov RDI,QWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [RDI+4]
            movzx ECX,BYTE PTR [RDI+5]
            shl EDX,8
            add EDX,ECX
            mov RCX,RBX
            cmp DX,AX
            jbe .L_430e05

            lea RCX,QWORD PTR [RDI+RAX*2+6]
.L_430e05:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx R12D,AX
            add R12,QWORD PTR [RSP+24]
            test AX,AX
            cmove R12,RBX
            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            movzx EDI,CX
            test CX,CX
            mov DWORD PTR [RSP+16],EDI
            je .L_430f50

            mov R14,QWORD PTR [R15+32]
            lea R13,QWORD PTR [R12+2]
            xor R11D,R11D
            nop
.L_430e50:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R11D
            cmova RDX,R13
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx ESI,AX
            add RSI,R12
            test AX,AX
            cmove RSI,RBX
            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            movzx R9D,DX
            jbe .L_430f02

            mov R8,QWORD PTR [R15+16]
            lea RDI,QWORD PTR [RSI+4]
            mov EDX,1
            mov DWORD PTR [RSP+12],R11D
            movzx R10D,BYTE PTR [R8+112]
            jmp .L_430eb8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430eb0:

            movzx EAX,BYTE PTR [RSI+2]
            movzx ECX,BYTE PTR [RSI+3]
.L_430eb8:

            shl EAX,8
            add EAX,ECX
            movzx EAX,AX
            cmp EAX,EDX
            mov RAX,RBX
            cmova RAX,RDI
            test R10B,R10B
            jne .L_430ef1

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov R11D,EBP
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl R11D,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R8+RAX*1+116],R11D
.L_430ef1:

            add EDX,1
            add RDI,2
            cmp R9D,EDX
            jne .L_430eb0

            mov R11D,DWORD PTR [RSP+12]
.L_430f02:

            cmp BYTE PTR [R14+112],0
            jne .L_430f2a

            movzx ECX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            mov EDX,EBP
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shr RAX,3
            and EAX,8188
            or DWORD PTR [R14+RAX*1+116],EDX
.L_430f2a:

            add R11D,1
            add R13,2
            cmp DWORD PTR [RSP+16],R11D
            je .L_430f50

            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            jmp .L_430e50
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430f50:

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,1
            je .L_430d88

            cmp EAX,2
            jne .L_430d4d

            mov RSI,QWORD PTR [RSP+40]
            add DWORD PTR [RSP+56],1
            mov ECX,DWORD PTR [RSP+48]
            mov EDI,DWORD PTR [RSP+52]
            movzx EDX,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_430fa9

            mov EAX,ECX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_430fa9:

            cmp EDI,EAX
            je .L_430ffa

            add EDI,1
            mov DWORD PTR [RSP+52],EDI
.L_430fb4:

            mov RDX,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp DWORD PTR [RSP+48],EAX
            jae .L_430d5f

            mov RDI,QWORD PTR [R15+16]
            movzx ESI,WORD PTR [RSP+52]
            jmp .L_430dbf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430fe8:

            mov RCX,RBX
            jmp .L_430e05
.L_430ff0:

            movzx EAX,WORD PTR [RSP+48]
            jmp .L_430de6
.L_430ffa:

            add ECX,1
            mov DWORD PTR [RSP+48],ECX
            movzx EAX,BYTE PTR [RSI+2]
            movzx EDX,BYTE PTR [RSI+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_430fb4

            lea RAX,QWORD PTR [RCX+RCX*2]
            lea RDX,QWORD PTR [RSI+RAX*2+4]
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            mov DWORD PTR [RSP+52],EAX
            jmp .L_430fb4
.L_431033:

            call __stack_chk_fail@PLT
.L_431038:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431040:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_43104b:

            mov RDX,QWORD PTR [RSI+24]
            mov RBX,RDI
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_431158

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jb .L_431168
.L_4310b7:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea R13,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne R13,RBX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_431158

            lea R12D,DWORD PTR [RSI-1]
            xor R14D,R14D
            lea RBX,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_431112
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431108:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
.L_431112:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_431127

            lea RDX,QWORD PTR [R13+R14*2+2]
.L_431127:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R13
            test AX,AX
            cmove RDI,RBX
            call .L_430350

            test AL,AL
            jne .L_43115a

            add R14,1
            cmp R12,R14
            jne .L_431108

            nop
            nop
            nop
.L_431158:

            xor EAX,EAX
.L_43115a:

            pop RBX
.L_43115b:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431168:

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
            jmp .L_4310b7
.L_431174:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431180:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,72
.L_431194:

            movzx ECX,BYTE PTR [RDI+5]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+4]
            mov QWORD PTR [RSP+8],RAX
            movzx EAX,BYTE PTR [RDI+4]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            test DX,DX
            movzx R12D,DX
            je .L_431258

            lea R13,QWORD PTR [RDI+6]
            xor R15D,R15D
            lea RBX,QWORD PTR [RIP+.L_657760]
            jmp .L_4311f7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4311e0:

            add R15D,1
            add R13,2
            cmp R12D,R15D
            je .L_431258

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
.L_4311f7:

            shl EAX,8
            mov RSI,QWORD PTR [RBP+8]
            add EAX,ECX
            mov RCX,RBX
            movzx EAX,AX
            cmp EAX,R15D
            cmova RCX,R13
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_42c500

            test AL,AL
            jne .L_4311e0
.L_43122f:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_431415

            add RSP,72
.L_431247:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431258:

            mov R13,QWORD PTR [RSP+8]
            lea EAX,DWORD PTR [R12+R12*1+2]
            add R13,RAX
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43140e

            lea R12D,DWORD PTR [RSI-1]
            xor R15D,R15D
            lea RBX,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_4312b3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4312a0:

            add R15,1
            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            cmp R15,R12
            je .L_4312f8
.L_4312b3:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_4312c8

            lea RDX,QWORD PTR [R13+R15*2+2]
.L_4312c8:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            call .L_42c500

            test AL,AL
            jne .L_4312a0

            jmp .L_43122f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4312f8:

            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_431300:

            lea EAX,DWORD PTR [RAX+RAX*1+2]
            movzx EDX,BYTE PTR [R14+3]
            lea RSI,QWORD PTR [RIP+.L_657760]
            lea RBX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],0
            lea R12,QWORD PTR [RIP+.L_657760]
            add R13,RAX
            movzx EAX,BYTE PTR [R14+2]
            mov RDI,RBX
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R14,RDX
            test AX,AX
            cmovne RSI,R14
            call .L_42c490

            jmp .L_4313ae
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431350:

            mov ECX,DWORD PTR [RSP+36]
            mov EDX,1
            mov EAX,ECX
            shl EDX,CL
            shr EAX,5
            and EAX,2047
            test DWORD PTR [R8+RAX*4+116],EDX
            je .L_4313a6

            movzx EDX,WORD PTR [RSP+40]
.L_431371:

            movzx EAX,BYTE PTR [R13]
            movzx ECX,BYTE PTR [R13+1]
            shl EAX,8
            add EAX,ECX
            mov RCX,R12
            movzx EAX,AX
            cmp EAX,EDX
            jbe .L_43138f

            lea RCX,QWORD PTR [R13+RDX*2+2]
.L_43138f:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            mov RDI,R8
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250
.L_4313a6:

            mov RDI,RBX
            call .L_42c6e0
.L_4313ae:

            mov RDI,RBX
            call .L_42c6a0

            test AL,AL
            je .L_43122f

            mov R9D,DWORD PTR [RSP+16]
            mov R8,QWORD PTR [RBP+8]
            cmp R9D,1
            je .L_4313e8

            cmp R9D,2
            je .L_431350

            test BYTE PTR [R8+116],1
            mov EDX,65535
            jne .L_431371

            jmp .L_4313a6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4313e8:

            mov RDI,RBX
            call .L_426320

            mov ECX,EAX
            shl RAX,48
            shr RAX,53
            shl R9D,CL
            test DWORD PTR [R8+RAX*4+116],R9D
            je .L_4313a6

            movzx EDX,WORD PTR [RSP+32]
            jmp .L_431371
.L_43140e:

            xor EAX,EAX
            jmp .L_431300
.L_431415:

            call __stack_chk_fail@PLT
.L_43141a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_431420:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
            mov R13,QWORD PTR [RSI+24]
            cmp DWORD PTR [RBX+56],3
            mov EAX,DWORD PTR [R13+180]
            mov R11,QWORD PTR [R13+200]
            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [R11+RAX*4]
            mov ESI,DWORD PTR [RAX]
            je .L_431470
.L_431456:

            xor EAX,EAX
.L_431458:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431470:

            movzx EAX,BYTE PTR [RDI+2]
            mov R14,RDI
            movzx EDI,BYTE PTR [RDI+3]
            shl EAX,8
            add EAX,EDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx R8D,AX
            add R8,R14
            test AX,AX
            cmovne RDI,R8
            call .L_42c320

            cmp EAX,-1
            mov R15D,EAX
            je .L_431456

            cmp BYTE PTR [R13+177],0
            jne .L_431580
.L_4314b0:

            movzx EAX,BYTE PTR [R14+4]
            movzx EDI,BYTE PTR [R14+5]
            shl EAX,8
            add EAX,EDI
            movzx R12D,AX
            lea EDI,DWORD PTR [R12+R12*1+2]
            lea RCX,QWORD PTR [R14+RDI*1+4]
            mov RDI,QWORD PTR [RBX+152]
            movzx EDX,BYTE PTR [RCX]
            mov QWORD PTR [RSP],RCX
            mov R9,QWORD PTR [RDI+24]
            mov BYTE PTR [RSP+12],DL
            movzx EDX,BYTE PTR [RCX+1]
            mov DWORD PTR [RBX+144],EBP
            mov DWORD PTR [RBX+200],R12D
            mov R8D,DWORD PTR [R9+184]
            mov BYTE PTR [RSP+15],DL
            mov DWORD PTR [RBX+204],R8D
            xor R8D,R8D
            cmp EBP,DWORD PTR [R9+180]
            jne .L_431527

            mov R10,QWORD PTR [R9+200]
            lea R8,QWORD PTR [RBP+RBP*4]
            lea R8,QWORD PTR [R10+R8*4]
            movzx R8D,BYTE PTR [R8+15]
.L_431527:

            mov BYTE PTR [RBX+172],R8B
            lea RDX,QWORD PTR [RIP+.L_426770]
            lea R8,QWORD PTR [R14+6]
            test AX,AX
            lea RBP,QWORD PTR [RBX+144]
            mov QWORD PTR [RBX+184],R14
            mov QWORD PTR [RBX+176],RDX
            mov QWORD PTR [RBX+192],R8
            je .L_43159b

            xor R13D,R13D
            jmp .L_431569

            nop
.L_431560:

            add R13D,1
            cmp R12D,R13D
            je .L_431590
.L_431569:

            mov RDI,RBP
            call .L_42d330

            test AL,AL
            jne .L_431560

            jmp .L_431456
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431580:

            mov EBP,DWORD PTR [R13+188]
            jmp .L_4314b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431590:

            mov R13,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBX+152]
.L_43159b:

            mov RDX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RDI+24]
            movzx EAX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            mov EDX,DWORD PTR [R13+180]
            shl EAX,8
            add EAX,R8D
            mov DWORD PTR [RBX+144],EDX
            movzx R12D,AX
            mov DWORD PTR [RBX+200],R12D
            mov R8D,DWORD PTR [RDI+184]
            mov DWORD PTR [RBX+204],R8D
            cmp EDX,DWORD PTR [RDI+180]
            je .L_4316c8

            xor EDX,EDX
.L_4315e5:

            lea RCX,QWORD PTR [RIP+.L_426770]
            mov BYTE PTR [RBX+172],DL
            test AX,AX
            mov QWORD PTR [RBX+184],R14
            mov QWORD PTR [RBX+176],RCX
            mov RCX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RCX+2]
            mov QWORD PTR [RBX+192],RDX
            je .L_431640

            xor R14D,R14D
            jmp .L_431629
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431620:

            add R14D,1
            cmp R12D,R14D
            je .L_431640
.L_431629:

            mov RDI,RBP
            call .L_42cda0

            test AL,AL
            jne .L_431620

            jmp .L_431456
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431640:

            movzx EDX,WORD PTR [RSP+12]
            movzx EAX,BYTE PTR [RSP+15]
            mov RCX,QWORD PTR [RSP]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDX,QWORD PTR [RCX+RAX*2+2]
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp R15D,EAX
            jae .L_43167e

            mov ESI,R15D
            lea RCX,QWORD PTR [RDX+RSI*2+2]
.L_43167e:

            movzx EBP,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            xor EDX,EDX
            xor ECX,ECX
            xor R8D,R8D
            mov RDI,RBX
            shl EBP,8
            add EBP,EAX
            movzx EBP,BP
            mov ESI,EBP
            call .L_42d720

            mov RDX,QWORD PTR [RBX+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RAX],EBP
            mov EAX,1
            jmp .L_431458
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4316c8:

            mov RSI,QWORD PTR [RDI+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*4]
            movzx EDX,BYTE PTR [RDX+15]
            jmp .L_4315e5
.L_4316e0:

            jmp .L_431420
.L_4316e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4316f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4316fe:

            movzx EBX,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            shl EBX,8
            add BX,AX
            je .L_4318a1

            test BL,1
            mov RBP,RDI
            mov R12,RSI
            mov R13D,EDX
            mov R14,RCX
            jne .L_4318f0

            test BL,2
            jne .L_43192b
.L_43172f:

            and R13D,4294967294
            test BL,4
            je .L_431750
.L_431738:

            cmp R13D,4
            je .L_4318b0

            add R8,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431750:

            test BL,8
            je .L_431796

            cmp R13D,4
            je .L_431792

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov RDI,R12
            mov EDX,DWORD PTR [R12+140]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            sub DWORD PTR [R9+4],EAX
.L_431792:

            add R8,2
.L_431796:

            movzx EAX,BYTE PTR [RBP+1]
            test AL,240
            je .L_4318a1

            mov EBP,DWORD PTR [R12+144]
            mov R15D,DWORD PTR [R12+148]
            mov EAX,EBP
            or EAX,R15D
            je .L_4318a1

            test BL,16
            je .L_4317ce

            test EBP,EBP
            jne .L_4319d0
.L_4317ca:

            add R8,2
.L_4317ce:

            test BL,32
            je .L_4317e0

            test R15D,R15D
            jne .L_431978
.L_4317dc:

            add R8,2
.L_4317e0:

            test BL,64
            je .L_431845

            cmp R13D,4
            jne .L_431841

            test EBP,EBP
            je .L_431841

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [R12+144]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            xor EAX,EAX
            test ESI,ESI
            je .L_43183e

            mov EDX,DWORD PTR [R12+136]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_426230

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_43183e:

            add DWORD PTR [R9],EAX
.L_431841:

            add R8,2
.L_431845:

            and EBX,128
            je .L_4318a1

            cmp R13D,4
            je .L_4318a1

            test R15D,R15D
            je .L_4318a1

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [R12+148]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add R14,RCX
            test AX,AX
            cmovne RDI,R14
            xor EAX,EAX
            test ESI,ESI
            je .L_43189d

            mov EDX,DWORD PTR [R12+140]
            mov QWORD PTR [RSP],R9
            call .L_426230

            mov R9,QWORD PTR [RSP]
.L_43189d:

            sub DWORD PTR [R9+4],EAX
.L_4318a1:

            add RSP,24
.L_4318a5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4318b0:

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov RDI,R12
            mov EDX,DWORD PTR [R12+136]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            add DWORD PTR [R9],EAX
            add R8,2
            jmp .L_431750
          .byte 0x90
.L_4318f0:

            mov EDX,DWORD PTR [RSI+136]
            movzx ESI,BYTE PTR [R8]
            mov RDI,R12
            movzx EAX,BYTE PTR [R8+1]
            mov QWORD PTR [RSP],R9
            lea R15,QWORD PTR [R8+2]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov R9,QWORD PTR [RSP]
            mov R8,R15
            add DWORD PTR [R9+8],EAX
            test BL,2
            je .L_43172f
.L_43192b:

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            mov RDI,R12
            mov EDX,DWORD PTR [R12+140]
            lea R15,QWORD PTR [R8+2]
            and R13D,4294967294
            mov QWORD PTR [RSP],R9
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov R9,QWORD PTR [RSP]
            mov R8,R15
            add DWORD PTR [R9+12],EAX
            test BL,4
            je .L_431750

            jmp .L_431738
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431978:

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [R12+148]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            xor EAX,EAX
            test ESI,ESI
            je .L_4319c7

            mov EDX,DWORD PTR [R12+140]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_426230

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_4319c7:

            add DWORD PTR [R9+12],EAX
            jmp .L_4317dc
.L_4319d0:

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,EBP
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            mov EDX,DWORD PTR [R12+136]
            call .L_426230

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            add DWORD PTR [R9+8],EAX
            jmp .L_4317ca
.L_431a1c:

            nop
            nop
            nop
            nop
.L_431a20:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_431a30:

            mov RBP,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [RBP+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBP+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            xor EDX,EDX
            cmp EAX,-1
            je .L_431aa8

            mov R9,QWORD PTR [RBP+216]
            mov EDX,DWORD PTR [R13+32]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,QWORD PTR [R13+8]
            lea R8,QWORD PTR [RBX+6]
            mov RCX,RBX
            add R9,R12
            call .L_4316f0

            add DWORD PTR [RBP+180],1
            mov EDX,1
.L_431aa8:

            add RSP,8
.L_431aac:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_431ab5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ac0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            push RBX
.L_431acb:

            mov R12,QWORD PTR [RSI+24]
            mov RBX,RDI
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R12+180]
            lea RBP,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            shl RBP,2
            mov ESI,DWORD PTR [RAX+RBP*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov R14D,EAX
            xor EAX,EAX
            cmp R14D,-1
            je .L_431b33

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp R14D,EDX
            jb .L_431b40
.L_431b33:

            pop RBX
.L_431b34:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431b40:

            movzx EDI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            imul R14D,EAX
            mov R9,QWORD PTR [R12+216]
            mov EDX,DWORD PTR [R13+32]
            mov RSI,QWORD PTR [R13+8]
            lea RDI,QWORD PTR [RBX+4]
            mov RCX,RBX
            lea R8,QWORD PTR [RBX+R14*2+8]
            add R9,RBP
            call .L_4316f0

            add DWORD PTR [R12+180],1
            mov EAX,1
            jmp .L_431b33
.L_431b8d:

            nop
            nop
            nop
.L_431b90:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,EDX
            mov RBX,RDI
            mov R12,R8
            sub RSP,24
.L_431bac:

            mov DWORD PTR [R8],0
            mov DWORD PTR [RCX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_431e20

            cmp AX,3
            je .L_431c60

            cmp AX,1
            je .L_431c10
.L_431beb:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_431ed0

            add RSP,24
.L_431c03:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_431c10:

            movzx ESI,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+136]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov DWORD PTR [R13],EAX
            movzx ESI,BYTE PTR [RBX+4]
            mov RDI,RBP
            movzx EAX,BYTE PTR [RBX+5]
            mov EDX,DWORD PTR [RBP+140]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov DWORD PTR [R12],EAX
            jmp .L_431beb
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431c60:

            movzx ESI,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+136]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov DWORD PTR [R13],EAX
            movzx ESI,BYTE PTR [RBX+4]
            mov RDI,RBP
            movzx EAX,BYTE PTR [RBX+5]
            mov EDX,DWORD PTR [RBP+140]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            mov DWORD PTR [R12],EAX
            mov ESI,DWORD PTR [RBP+144]
            test ESI,ESI
            je .L_431dc8

            movzx EAX,BYTE PTR [RBX+6]
            movzx EDX,BYTE PTR [RBX+7]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,2
            ja .L_431dc4

            movzx ECX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl ECX,8
            add ECX,R8D
            movzx ECX,CX
            cmp ESI,ECX
            jb .L_431dc4

            movzx R8D,BYTE PTR [RDI+2]
            movzx R9D,BYTE PTR [RDI+3]
            shl R8D,8
            add R8D,R9D
            movzx R8D,R8W
            cmp ESI,R8D
            ja .L_431dc4

            mov R14D,ESI
            mov R15D,4
            mov R8D,1
            sub R14D,ECX
            sub R15D,EDX
            mov R11D,16
            mov ECX,R15D
            mov EAX,R14D
            mov R10D,65535
            shr EAX,CL
            mov ECX,EDX
            mov R9D,DWORD PTR [RBP+136]
            lea RAX,QWORD PTR [RDI+RAX*2+6]
            mov EDI,R8D
            shl EDI,CL
            mov ECX,EDI
            mov EDI,R11D
            sub EDI,ECX
            mov ECX,EDI
            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shr R10D,CL
            mov ECX,R15D
            shl R8D,CL
            mov ECX,EDX
            lea EDX,DWORD PTR [R10+1]
            sub R8D,1
            and R8D,R14D
            shl EDI,8
            shr EDX,1
            add R8D,1
            add EDI,EAX
            shl R8D,CL
            mov ECX,R11D
            movzx EDI,DI
            sub ECX,R8D
            shr EDI,CL
            and EDI,R10D
            not R10D
            lea EAX,DWORD PTR [RDI+R10*1]
            cmp EDI,EDX
            cmovb EAX,EDI
            test EAX,EAX
            je .L_431dc4

            movsxd RDX,R9D
            cdqe 
            imul RAX,RDX
            cqo 
            idiv RSI
.L_431dc4:

            add DWORD PTR [R13],EAX
.L_431dc8:

            mov EAX,DWORD PTR [RBP+148]
            test EAX,EAX
            je .L_431beb

            movzx EAX,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [RBP+144]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne RDI,RBX
            xor EAX,EAX
            test ESI,ESI
            je .L_431e0e

            mov EDX,DWORD PTR [RBP+136]
            call .L_426230
.L_431e0e:

            add DWORD PTR [R12],EAX
            jmp .L_431beb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431e20:

            mov R14D,DWORD PTR [RBP+144]
            mov R15D,DWORD PTR [RBP+148]
            mov EAX,R14D
            or EAX,R15D
            jne .L_431e70
.L_431e36:

            mov R15D,1
.L_431e3c:

            movzx ESI,BYTE PTR [RBX+2]
            movzx EAX,BYTE PTR [RBX+3]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+136]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130
.L_431e5a:

            test R15B,R15B
            mov DWORD PTR [R13],EAX
            mov EAX,DWORD PTR [RSP+4]
            jne .L_431eb0
.L_431e67:

            mov DWORD PTR [R12],EAX
            jmp .L_431beb
.L_431e70:

            movzx EDX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            lea R9,QWORD PTR [RSP+4]
            mov R8,RSP
            mov ECX,4
            mov RDI,RBP
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_42bef0

            test EAX,EAX
            je .L_431e36

            test R15D,R15D
            sete R15B
            test R14D,R14D
            je .L_431e3c

            mov EAX,DWORD PTR [RSP]
            jmp .L_431e5a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431eb0:

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBP+140]
            shl ESI,8
            add ESI,EAX
            movsx ESI,SI
            call .L_42c130

            jmp .L_431e67
.L_431ed0:

            call __stack_chk_fail@PLT
.L_431ed5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ee0:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            lea R10,QWORD PTR [RIP+.L_657760]
            sub RSP,40
.L_431ef4:

            mov RBX,QWORD PTR [RSI+24]
            movzx ESI,BYTE PTR [RDI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            mov R12D,DWORD PTR [RSP+80]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            cmp EDX,EAX
            jae .L_431f27

            mov EDX,EDX
            lea R10,QWORD PTR [RDI+RDX*4+2]
.L_431f27:

            movzx ESI,BYTE PTR [R10]
            movzx EAX,BYTE PTR [R10+1]
            movzx EDX,BYTE PTR [R10+3]
            shl ESI,8
            add ESI,EAX
            movzx EAX,BYTE PTR [R10+2]
            lea R10,QWORD PTR [RIP+.L_657760]
            movzx ESI,SI
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDI,RDX
            test AX,AX
            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            cmovne R10,RDI
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp ECX,EAX
            setae DL
            cmp ESI,R9D
            setae AL
            or AL,DL
            je .L_431fa0

            xor EAX,EAX
.L_431f7d:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43206c

            add RSP,40
.L_431f95:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431fa0:

            imul ECX,R9D
            lea EDX,DWORD PTR [RCX+RSI*1]
            lea RCX,QWORD PTR [R8+RDX*2+2]
            movzx EDX,BYTE PTR [RCX]
            movzx EBP,BYTE PTR [RCX+1]
            shl EDX,8
            add BP,DX
            je .L_431f7d

            mov EAX,DWORD PTR [RBX+180]
            mov RDX,QWORD PTR [RBX+200]
            movzx EBP,BP
            mov RSI,QWORD PTR [R13+8]
            add RBP,R8
            lea RCX,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RSP+12]
            mov RDI,R10
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RAX]
            call .L_431b90

            mov RSI,QWORD PTR [RBX+200]
            mov EAX,R12D
            lea RCX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea R8,QWORD PTR [RSP+20]
            mov RDI,RBP
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov RSI,QWORD PTR [R13+8]
            mov EDX,DWORD PTR [RAX]
            call .L_431b90

            mov EAX,DWORD PTR [RBX+180]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RBX+216]
            lea RAX,QWORD PTR [RAX+RDX*4]
            mov EDX,DWORD PTR [RSP+16]
            sub EDX,DWORD PTR [RSP+8]
            mov BYTE PTR [RAX+18],1
            mov DWORD PTR [RAX+8],EDX
            mov EDX,DWORD PTR [RSP+20]
            sub EDX,DWORD PTR [RSP+12]
            mov DWORD PTR [RAX+12],EDX
            sub R12W,WORD PTR [RBX+180]
            mov WORD PTR [RAX+16],R12W
            mov EAX,1
            or DWORD PTR [RBX+132],8
            add DWORD PTR [RBX+180],1
            jmp .L_431f7d
.L_43206c:

            call __stack_chk_fail@PLT
.L_432071:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432080:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,40
.L_432094:

            mov RAX,QWORD PTR [RSI+24]
            mov EDX,DWORD PTR [RAX+180]
            mov RAX,QWORD PTR [RAX+200]
            lea R12,QWORD PTR [RDX+RDX*4]
            mov R13,RDX
            movzx EDX,BYTE PTR [RDI+3]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov R14D,EAX
            cmp R14D,-1
            je .L_432230

            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_432248
.L_432118:

            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            call .L_42cda0

            test AL,AL
            mov R12D,EAX
            je .L_432230

            movzx EAX,BYTE PTR [RBP+8]
            movzx EDX,BYTE PTR [RBP+9]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp R14D,EAX
            jb .L_432260
.L_43214f:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            lea R13,QWORD PTR [RIP+.L_657760]
            movzx EDI,BYTE PTR [RBP+4]
            mov R14,QWORD PTR [RBX+24]
            shl EAX,8
            mov R15,QWORD PTR [R14+200]
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov EAX,DWORD PTR [RBX+80]
            cmovne R13,RDX
            shl EDI,8
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [RBP+5]
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [RBP+6]
            mov DWORD PTR [RSP+24],EAX
            movzx EAX,BYTE PTR [RBP+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            mov ECX,DWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [R13]
            lea R10,QWORD PTR [R13+2]
            movzx EDI,BYTE PTR [R13+1]
            lea R9D,DWORD PTR [RCX+RAX*1+1]
            shl EDX,8
            add R9D,R9D
            add DX,DI
            je .L_432230

            mov ECX,DWORD PTR [RSP+12]
            movzx EDX,DX
            xor R8D,R8D
            lea EDI,DWORD PTR [RDX-1]
            lea RCX,QWORD PTR [RCX+RCX*4]
            shl RCX,2
            mov QWORD PTR [RSP+16],RCX
            mov R11D,DWORD PTR [R15+RCX*1]
            jmp .L_432200
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4321f8:

            lea EDI,DWORD PTR [RCX-1]
.L_4321fb:

            cmp EDI,R8D
            jl .L_432230
.L_432200:

            lea ECX,DWORD PTR [R8+RDI*1]
            sar ECX,1
            mov R15D,ECX
            imul R15D,R9D
            add R15,R10
            movzx EDX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R15+1]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            cmp R11D,EDX
            jb .L_4321f8

            jbe .L_432270

            lea R8D,DWORD PTR [RCX+1]
            jmp .L_4321fb
          .byte 0x66
          .byte 0x90
.L_432230:

            xor R12D,R12D
.L_432233:

            add RSP,40
.L_432237:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432248:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_432118
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432260:

            lea RDX,QWORD PTR [RBP+R14*2+10]
            jmp .L_43214f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432270:

            mov EDX,DWORD PTR [R14+180]
            mov RCX,QWORD PTR [R14+216]
            lea RDI,QWORD PTR [RBP+4]
            mov RSI,QWORD PTR [RBX+8]
            mov DWORD PTR [RSP+28],EAX
            lea R8,QWORD PTR [RDX+RDX*4]
            mov EDX,DWORD PTR [RBX+32]
            lea R9,QWORD PTR [RCX+R8*4]
            lea R8,QWORD PTR [R15+2]
            mov RCX,R13
            call .L_4316f0

            movsxd RCX,DWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBP+6]
            add R9,QWORD PTR [R14+216]
            mov EDX,DWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RBX+8]
            lea R8,QWORD PTR [R15+RCX*2+2]
            mov RCX,R13
            call .L_4316f0

            mov EAX,DWORD PTR [RSP+28]
            cmp EAX,1
            sbb DWORD PTR [RSP+12],-1
            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [R14+180],EAX
            jmp .L_432233
.L_4322e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4322f0:

            jmp .L_432080
.L_4322f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432300:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,40
.L_432314:

            mov R14,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R14+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R13,RAX
            mov RAX,QWORD PTR [R14+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_432480

            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_432498
.L_432395:

            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            call .L_42cda0

            test AL,AL
            mov R13D,EAX
            je .L_432480

            movzx EDI,BYTE PTR [RBP+4]
            movzx EAX,BYTE PTR [RBP+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [RBP+6]
            movsxd R12,EAX
            movzx EAX,BYTE PTR [RBP+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            mov DWORD PTR [RSP+20],EAX
            lea R15D,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RBP+8]
            movzx EDX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov EAX,DWORD PTR [R14+180]
            cmovne RDI,RDX
            mov RDX,QWORD PTR [R14+200]
            lea R9,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+8],RDX
            shl R9,2
            mov ESI,DWORD PTR [RDX+R9*1]
            mov QWORD PTR [RSP+24],R9
            call .L_42c7a0

            mov DWORD PTR [RSP+16],EAX
            movzx EAX,BYTE PTR [RBP+10]
            lea RSI,QWORD PTR [RIP+.L_657760]
            movzx ECX,BYTE PTR [RBP+11]
            mov RDX,QWORD PTR [RSP+8]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            mov EAX,DWORD PTR [RBX+80]
            cmove RDI,RSI
            lea RAX,QWORD PTR [RAX+RAX*4]
            mov ESI,DWORD PTR [RDX+RAX*4]
            call .L_42c7a0

            movzx EDX,BYTE PTR [RBP+12]
            movzx ECX,BYTE PTR [RBP+13]
            mov R8D,DWORD PTR [RSP+16]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EDX,R8D
            ja .L_4324b0

            nop
            nop
.L_432480:

            xor R13D,R13D
.L_432483:

            add RSP,40
.L_432487:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432498:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_432395
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4324b0:

            movzx EDX,BYTE PTR [RBP+14]
            movzx ECX,BYTE PTR [RBP+15]
            shl EDX,8
            add ECX,EDX
            movzx EDX,CX
            cmp EDX,EAX
            jbe .L_432480

            imul EDX,R8D
            mov R9,QWORD PTR [RSP+24]
            add R9,QWORD PTR [R14+216]
            mov RSI,QWORD PTR [RBX+8]
            lea RDI,QWORD PTR [RBP+4]
            mov RCX,RBP
            add EAX,EDX
            mov EDX,DWORD PTR [RBX+32]
            imul R15D,EAX
            lea R15,QWORD PTR [RBP+R15*2+16]
            mov R8,R15
            call .L_4316f0

            mov EAX,DWORD PTR [RBX+80]
            mov EDX,DWORD PTR [RBX+32]
            lea RDI,QWORD PTR [RBP+6]
            mov RSI,QWORD PTR [RBX+8]
            lea R8,QWORD PTR [R15+R12*2]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+216]
            lea R9,QWORD PTR [RAX+RCX*4]
            mov RCX,RBP
            call .L_4316f0

            mov EAX,DWORD PTR [RBX+80]
            mov ECX,DWORD PTR [RSP+20]
            lea EDX,DWORD PTR [RAX+1]
            test ECX,ECX
            cmovne EAX,EDX
            mov DWORD PTR [R14+180],EAX
            jmp .L_432483
.L_432539:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432540:

            jmp .L_432300
.L_432545:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432550:

            push R15
            push R14
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_657760]
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,72
.L_43256b:

            mov R15,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [R15+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            mov RAX,QWORD PTR [R15+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_4325dd

            mov EAX,EAX
            lea R13,QWORD PTR [RBX+RAX*4+6]
.L_4325dd:

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add AX,DX
            je .L_432830

            mov RAX,QWORD PTR [RBP+88]
            mov DWORD PTR [RBP+80],R14D
            lea RDI,QWORD PTR [RBP+80]
            mov DWORD PTR [RBP+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBP+140],EDX
            xor EDX,EDX
            cmp R14D,DWORD PTR [RAX+180]
            je .L_432870

            mov BYTE PTR [RBP+108],DL
            call .L_42cda0

            test AL,AL
            mov BYTE PTR [RSP+8],AL
            je .L_432830
.L_43263c:

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            mov EAX,DWORD PTR [RBP+80]
            cmovne RDI,RDX
            mov RDX,QWORD PTR [R15+200]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov QWORD PTR [RSP+16],RDX
            mov R14,RAX
            shl R12,2
            mov ESI,DWORD PTR [RDX+R12*1]
            call .L_42c320

            movzx ECX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            lea R11,QWORD PTR [RIP+.L_657760]
            mov RDX,QWORD PTR [RSP+16]
            movzx R10D,BYTE PTR [RSP+8]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            cmp EAX,ECX
            jb .L_432860
.L_4326aa:

            movzx EAX,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            mov BYTE PTR [RSP+16],R10B
            mov QWORD PTR [RSP+8],R11
            shl EAX,8
            add AX,CX
            je .L_432830

            movzx ECX,BYTE PTR [R13+2]
            movzx ESI,BYTE PTR [R13+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov EAX,DWORD PTR [R15+180]
            lea R8,QWORD PTR [RSP+52]
            shl ECX,8
            mov DWORD PTR [RSP+28],EAX
            add ECX,ESI
            movzx ESI,CX
            add RSI,RBX
            test CX,CX
            mov ECX,EAX
            lea R13,QWORD PTR [RCX+RCX*4]
            cmovne RDI,RSI
            mov RSI,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RSP+48]
            shl R13,2
            mov EDX,DWORD PTR [RDX+R13*1]
            call .L_431b90

            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RBP+8]
            lea R8,QWORD PTR [RSP+44]
            movzx EDX,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RSP+40]
            movzx EDI,DX
            add RDI,RBX
            test DX,DX
            mov RDX,QWORD PTR [R15+200]
            cmove RDI,RAX
            mov EDX,DWORD PTR [RDX+R12*1]
            call .L_431b90

            mov EDX,DWORD PTR [RBP+32]
            mov R8,QWORD PTR [R15+216]
            mov EAX,DWORD PTR [RSP+28]
            movzx R10D,BYTE PTR [RSP+16]
            cmp EDX,5
            je .L_432930

            jbe .L_4328e0

            cmp EDX,6
            je .L_432898

            cmp EDX,7
            jne .L_432920

            lea RDX,QWORD PTR [R8+R13*1]
            mov ECX,DWORD PTR [RSP+52]
            mov EBX,DWORD PTR [RSP+44]
            mov ESI,DWORD PTR [RDX+12]
            add ESI,ECX
            sub DWORD PTR [RDX+4],ESI
            mov ESI,ECX
            neg ESI
            mov DWORD PTR [RDX+12],ESI
            mov DWORD PTR [R8+R12*1+4],EBX
            mov EDX,DWORD PTR [RBP+32]
.L_4327b5:

            mov ESI,DWORD PTR [RSP+40]
            sub EBX,ECX
            mov R11D,R14D
            sub ESI,DWORD PTR [RSP+48]
            test BYTE PTR [RBP+60],1
            mov R9D,ESI
            jne .L_4327d9

            mov R11D,EAX
            neg R9D
            neg EBX
            mov R13,R12
            mov EAX,R14D
.L_4327d9:

            mov ECX,R11D
            mov ESI,EAX
            mov RDI,R8
            mov BYTE PTR [RSP+16],R10B
            mov DWORD PTR [RSP+8],EAX
            call .L_42bda0

            mov EAX,DWORD PTR [RSP+8]
            add R13,R8
            movzx R10D,BYTE PTR [RSP+16]
            mov BYTE PTR [R13+18],2
            sub R11D,EAX
            mov WORD PTR [R13+16],R11W
            mov EAX,DWORD PTR [RBP+32]
            or DWORD PTR [R15+132],8
            and EAX,4294967294
            cmp EAX,4
            je .L_4328d0

            mov DWORD PTR [R13+8],R9D
.L_432824:

            mov DWORD PTR [R15+180],R14D
            jmp .L_432833
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432830:

            xor R10D,R10D
.L_432833:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_432961

            add RSP,72
.L_43284e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432860:

            mov EAX,EAX
            lea R11,QWORD PTR [RBX+RAX*4+6]
            jmp .L_4326aa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432870:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            mov BYTE PTR [RBP+108],DL
            call .L_42cda0

            test AL,AL
            mov BYTE PTR [RSP+8],AL
            jne .L_43263c

            jmp .L_432830
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432898:

            lea RDX,QWORD PTR [R8+R13*1]
            mov ECX,DWORD PTR [RSP+52]
            mov EBX,DWORD PTR [RSP+44]
            mov ESI,DWORD PTR [RDX+12]
            add ESI,ECX
            mov DWORD PTR [RDX+4],ESI
            lea RDX,QWORD PTR [R8+R12*1]
            mov ESI,DWORD PTR [RDX+12]
            add ESI,EBX
            sub DWORD PTR [RDX+4],ESI
            mov ESI,EBX
            neg ESI
            mov DWORD PTR [RDX+12],ESI
            mov EDX,DWORD PTR [RBP+32]
            jmp .L_4327b5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4328d0:

            mov DWORD PTR [R13+12],EBX
            jmp .L_432824
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4328e0:

            cmp EDX,4
            jne .L_432920

            lea RCX,QWORD PTR [R8+R13*1]
            mov EDX,DWORD PTR [RSP+48]
            add EDX,DWORD PTR [RCX+8]
            mov DWORD PTR [RCX],EDX
            lea RDX,QWORD PTR [R8+R12*1]
            mov ECX,DWORD PTR [RSP+40]
            mov ESI,DWORD PTR [RDX+8]
            add ESI,ECX
            neg ECX
            sub DWORD PTR [RDX],ESI
            mov DWORD PTR [RDX+8],ECX
            mov EBX,DWORD PTR [RSP+44]
            mov ECX,DWORD PTR [RSP+52]
            mov EDX,DWORD PTR [RBP+32]
            jmp .L_4327b5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432920:

            mov EBX,DWORD PTR [RSP+44]
            mov ECX,DWORD PTR [RSP+52]
            jmp .L_4327b5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432930:

            lea RDX,QWORD PTR [R8+R13*1]
            mov ECX,DWORD PTR [RSP+48]
            mov ESI,DWORD PTR [RDX+8]
            add ESI,ECX
            neg ECX
            sub DWORD PTR [RDX],ESI
            mov DWORD PTR [RDX+8],ECX
            lea RCX,QWORD PTR [R8+R12*1]
            mov EDX,DWORD PTR [RSP+40]
            add EDX,DWORD PTR [RCX+8]
            mov DWORD PTR [RCX],EDX
            mov EBX,DWORD PTR [RSP+44]
            mov ECX,DWORD PTR [RSP+52]
            mov EDX,DWORD PTR [RBP+32]
            jmp .L_4327b5
.L_432961:

            call __stack_chk_fail@PLT
.L_432966:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432970:

            jmp .L_432550
.L_432975:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432980:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
.L_432994:

            mov R13,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R13+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            mov RAX,QWORD PTR [R13+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_432a70

            mov R15D,EAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R14D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R14D,DWORD PTR [RAX+180]
            je .L_432b28
.L_432a18:

            lea R12,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            mov DWORD PTR [RBX+96],8
            jmp .L_432a60
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432a30:

            mov EAX,DWORD PTR [RBX+80]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov R14,RAX
            mov RAX,QWORD PTR [R13+200]
            lea RDX,QWORD PTR [RAX+RDX*4]
            movzx EAX,BYTE PTR [RDX+14]
            test AL,16
            jne .L_432a88

            test AL,15
            je .L_432a88

            add DWORD PTR [RBX+136],1
            sub QWORD PTR [RBX+128],2
.L_432a60:

            mov RDI,R12
            call .L_42d330

            test AL,AL
            jne .L_432a30

            nop
            nop
            nop
            nop
.L_432a70:

            xor EAX,EAX
.L_432a72:

            add RSP,8
.L_432a76:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432a88:

            movzx EAX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [RDX]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RCX,RBP
            test AX,AX
            cmovne RDI,RCX
            call .L_42c320

            cmp EAX,-1
            je .L_432a70

            movzx EDX,BYTE PTR [RBP+8]
            movzx ECX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx R9D,BYTE PTR [RBP+6]
            mov RSI,RBX
            mov R8,RDI
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RCX,RBP
            test DX,DX
            movzx EDX,BYTE PTR [RBP+7]
            cmovne RDI,RCX
            shl R9D,8
            movzx ECX,BYTE PTR [RBP+11]
            add R9D,EDX
            movzx EDX,BYTE PTR [RBP+10]
            movzx R9D,R9W
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RBP,RCX
            test DX,DX
            mov ECX,EAX
            cmovne R8,RBP
            sub RSP,8
.L_432b10:

            mov EDX,R15D
            push R14
            call .L_431ee0

            pop RDX
            pop RCX
            jmp .L_432a72
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432b28:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_432a18
.L_432b3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_432b40:

            jmp .L_432980
.L_432b45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b50:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,24
.L_432b64:

            mov R14,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R14+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R13,RAX
            mov RAX,QWORD PTR [R14+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_432d68

            mov R15D,EAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_432d80
.L_432be8:

            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            mov DWORD PTR [RBX+96],8
            call .L_42d330

            test AL,AL
            je .L_432d68

            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov R12D,DWORD PTR [RBX+80]
            mov R13,QWORD PTR [R14+200]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            mov EAX,R12D
            lea RAX,QWORD PTR [RAX+RAX*4]
            cmovne RDI,RDX
            lea R9,QWORD PTR [R13+RAX*4]
            mov ESI,DWORD PTR [R9]
            mov QWORD PTR [RSP+8],R9
            call .L_42c320

            cmp EAX,-1
            je .L_432d68

            movzx ECX,BYTE PTR [RBP+10]
            movzx EDX,BYTE PTR [RBP+11]
            lea R8,QWORD PTR [RIP+.L_657760]
            mov R9,QWORD PTR [RSP+8]
            shl ECX,8
            add ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx ESI,CX
            add RSI,RBP
            test CX,CX
            cmovne RDX,RSI
            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,ESI
            movzx ECX,CX
            cmp EAX,ECX
            jae .L_432cb1

            mov EAX,EAX
            lea RCX,QWORD PTR [RDX+RAX*2+2]
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            add RDX,RCX
            test AX,AX
            cmovne R8,RDX
.L_432cb1:

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx ECX,AX
            je .L_432d68

            movzx EDX,BYTE PTR [R9+14]
            mov ESI,EDX
            mov EDX,DWORD PTR [R14+180]
            sar ESI,5
            lea RDX,QWORD PTR [RDX+RDX*4]
            movzx EAX,BYTE PTR [R13+RDX*4+14]
            test AL,16
            jne .L_432d98

            movzx EDX,AL
            sar EDX,5
            cmp EDX,ESI
            sete DIL
            and EAX,15
            setne DL
            test DIL,DL
            je .L_432d98

            test ESI,ESI
            je .L_432d98

            cmp ECX,EAX
            cmovbe EAX,ECX
            lea ECX,DWORD PTR [RAX-1]
.L_432d19:

            movzx EAX,BYTE PTR [RBP+8]
            movzx EDX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx R9D,BYTE PTR [RBP+6]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            movzx EAX,BYTE PTR [RBP+7]
            cmovne RDI,RDX
            sub RSP,8
.L_432d4a:

            shl R9D,8
            push R12
            mov EDX,R15D
            add R9D,EAX
            movzx R9D,R9W
            call .L_431ee0

            pop RDX
            pop RCX
            jmp .L_432d6a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432d68:

            xor EAX,EAX
.L_432d6a:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432d80:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_432be8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432d98:

            sub ECX,1
            jmp .L_432d19
.L_432da0:

            jmp .L_432b50
.L_432da5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432db0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
.L_432dc4:

            mov R14,QWORD PTR [RSI+24]
            movzx EDX,BYTE PTR [RDI+3]
            mov EAX,DWORD PTR [R14+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov R13,RAX
            mov RAX,QWORD PTR [R14+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBP
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            cmp EAX,-1
            je .L_432f90

            mov R15D,EAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+80],R13D
            mov DWORD PTR [RBX+136],1
            mov RAX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RAX+184]
            mov DWORD PTR [RBX+140],EDX
            xor EDX,EDX
            cmp R13D,DWORD PTR [RAX+180]
            je .L_432fa8
.L_432e48:

            mov EAX,DWORD PTR [RBX+60]
            lea RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+108],DL
            and EAX,4294967281
            mov DWORD PTR [RBX+96],EAX
            call .L_42d330

            test AL,AL
            je .L_432f90

            mov EAX,DWORD PTR [RBX+80]
            mov RDX,QWORD PTR [R14+200]
            mov R12,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            test BYTE PTR [RAX+12],8
            je .L_432f90

            mov ECX,DWORD PTR [R14+180]
            xor R9D,R9D
            lea RCX,QWORD PTR [RCX+RCX*4]
            movzx EDX,BYTE PTR [RDX+RCX*4+14]
            movzx ECX,BYTE PTR [RAX+14]
            mov R8D,EDX
            mov EDI,ECX
            sar EDX,5
            mov ESI,R8D
            sar ECX,5
            and ESI,15
            and R8D,16
            mov R8D,EDI
            cmovne ESI,R9D
            and R8D,15
            and EDI,16
            cmovne R8D,R9D
            cmp ECX,EDX
            je .L_432f75

            test EDX,EDX
            je .L_432fba

            test ESI,ESI
            jne .L_432fba
.L_432eda:

            movzx EDX,BYTE PTR [RBP+4]
            movzx ECX,BYTE PTR [RBP+5]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov ESI,DWORD PTR [RAX]
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            add RCX,RBP
            test DX,DX
            cmovne RDI,RCX
            call .L_42c320

            cmp EAX,-1
            je .L_432f90

            movzx EDX,BYTE PTR [RBP+8]
            movzx ECX,BYTE PTR [RBP+9]
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx R9D,BYTE PTR [RBP+6]
            shl EDX,8
            add EDX,ECX
            mov RCX,RDI
            movzx ESI,DX
            add RSI,RBP
            test DX,DX
            movzx EDX,BYTE PTR [RBP+7]
            cmovne RDI,RSI
            shl R9D,8
            movzx ESI,BYTE PTR [RBP+11]
            add R9D,EDX
            movzx EDX,BYTE PTR [RBP+10]
            movzx R9D,R9W
            shl EDX,8
            add EDX,ESI
            mov RSI,RBX
            movzx R8D,DX
            add R8,RBP
            test DX,DX
            mov EDX,R15D
            cmove R8,RCX
            sub RSP,8
.L_432f68:

            mov ECX,EAX
            push R12
            call .L_431ee0

            pop RDX
            pop RCX
            jmp .L_432f92
.L_432f75:

            cmp R8D,ESI
            je .L_432eda

            test ECX,ECX
            je .L_432eda

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f90:

            xor EAX,EAX
.L_432f92:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432fa8:

            mov RAX,QWORD PTR [RAX+200]
            movzx EDX,BYTE PTR [RAX+R12*1+15]
            jmp .L_432e48
.L_432fba:

            test ECX,ECX
            je .L_432f90

            test R8D,R8D
            je .L_432eda

            jmp .L_432f90
.L_432fc9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432fd0:

            jmp .L_432db0
.L_432fd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432fe0:

            mov R9,QWORD PTR [RSI+8]
            cmp RDI,R9
            jb .L_4330ca

            mov R11,QWORD PTR [RSI+16]
            cmp RDI,R11
            ja .L_4330ca

            mov RAX,R11
            sub RAX,RDI
            cmp EAX,1
            jbe .L_4330ca

            movzx R8D,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov EAX,1
            shl R8D,8
            add R8W,R10W
            je .L_43304b

            movzx R8D,R8W
            add R8,RDX
            cmp ECX,1936292453
            je .L_4330d0

            xor CX,CX
            cmp ECX,1936916480
            je .L_433198

            cmp ECX,1668677632
            je .L_433050
.L_43304b:

            ret 

            nop
            nop
            nop
.L_433050:

            cmp R9,R8
            ja .L_4330b0

            cmp R11,R8
            jb .L_4330b0

            mov RAX,R11
            sub RAX,R8
            cmp EAX,13
            jbe .L_4330b0

            lea RAX,QWORD PTR [R8+12]
            cmp R9,RAX
            ja .L_4330b0

            cmp R11,RAX
            jb .L_4330b0

            mov RDX,R11
            sub RDX,RAX
            cmp EDX,1
            jbe .L_4330b0

            lea RAX,QWORD PTR [R8+14]
            cmp R9,RAX
            ja .L_4330b0

            cmp R11,RAX
            jb .L_4330b0

            movzx EDX,BYTE PTR [R8+12]
            movzx ECX,BYTE PTR [R8+13]
            sub R11,RAX
            mov EAX,1
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea EDX,DWORD PTR [RDX+RDX*2]
            cmp EDX,R11D
            jbe .L_43304b

            nop
            nop
.L_4330b0:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_4330ca

            movzx EAX,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test AL,AL
            jne .L_4331c0
.L_4330ca:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4330d0:

            cmp R9,R8
            ja .L_4330b0

            cmp R11,R8
            jb .L_4330b0

            sub R11,R8
            cmp R11D,9
            jbe .L_4330b0

            movzx EAX,BYTE PTR [R8]
            movzx EDX,BYTE PTR [R8+1]
            shl EAX,8
            add DX,AX
            je .L_4330b0

            movzx EAX,BYTE PTR [R8+6]
            movzx ECX,BYTE PTR [R8+7]
            movzx R9D,BYTE PTR [R8+3]
            shl EAX,8
            add EAX,ECX
            movzx ECX,BYTE PTR [R8+2]
            shl ECX,8
            add CX,R9W
            jne .L_433150

            movzx ECX,BYTE PTR [R8+4]
            movzx R9D,BYTE PTR [R8+5]
            shl ECX,8
            add CX,R9W
            jne .L_433150

            test AX,AX
            jne .L_433150

            movzx ECX,BYTE PTR [R8+8]
            movzx R9D,BYTE PTR [R8+9]
            mov EAX,1
            shl ECX,8
            add CX,R9W
            jne .L_433168

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433150:

            cmp AX,DX
            ja .L_4330b0

            movzx ECX,BYTE PTR [R8+8]
            movzx EAX,BYTE PTR [R8+9]
            shl ECX,8
            add ECX,EAX
.L_433168:

            cmp CX,DX
            jb .L_4330b0

            movzx EAX,BYTE PTR [R8+4]
            movzx EDX,BYTE PTR [R8+5]
            shl EAX,8
            lea EAX,DWORD PTR [RDX+RAX*1-256]
            cmp AX,32511
            ja .L_4330b0

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433198:

            cmp R9,R8
            ja .L_4330b0

            cmp R11,R8
            jb .L_4330b0

            sub R11,R8
            cmp R11D,3
            jbe .L_4330b0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4331c0:

            xor EDX,EDX
            mov WORD PTR [RDI],DX
            ret 
.L_4331c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4331d0:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jb .L_433208

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
            mov R13,QWORD PTR [RSI+16]
            cmp RDI,R13
            jbe .L_433210
.L_4331f0:

            xor EAX,EAX
.L_4331f2:

            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433208:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433210:

            mov RDX,R13
            sub RDX,RDI
            cmp EDX,3
            jbe .L_4331f0

            movzx EDX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl EDX,8
            add EDX,R8D
            cmp DX,1
            jne .L_4331f0

            lea RDX,QWORD PTR [RDI+4]
            cmp RDX,RCX
            jb .L_4331f0

            cmp RDX,R13
            ja .L_4331f0

            mov RBX,R13
            sub RBX,RDX
            cmp EBX,1
            jbe .L_4331f0

            movzx R11D,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            mov RAX,RCX
            shl R11D,8
            add R11W,DX
            jne .L_4332f8
.L_433262:

            lea RDX,QWORD PTR [RDI+6]
            cmp RDX,RCX
            jb .L_4331f0

            mov R13,QWORD PTR [RSI+16]
            cmp RDX,R13
            ja .L_4331f0

            mov RBX,R13
            sub RBX,RDX
            cmp EBX,1
            jbe .L_4331f0

            movzx EDX,BYTE PTR [RDI+6]
            movzx R10D,BYTE PTR [RDI+7]
            mov RBX,RSI
            mov QWORD PTR [RSP+56],RDI
            shl EDX,8
            add DX,R10W
            jne .L_433750
.L_4332a5:

            mov RDI,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            jb .L_4331f0

            mov RCX,QWORD PTR [RBX+16]
            cmp RDX,RCX
            ja .L_4331f0

            mov RSI,RCX
            sub RSI,RDX
            cmp ESI,1
            jbe .L_4331f0

            movzx EDX,BYTE PTR [RDI+8]
            movzx EBP,BYTE PTR [RDI+9]
            shl EDX,8
            add DX,BP
            jne .L_433a40
.L_4332e7:

            mov EAX,1
            jmp .L_4331f2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4332f8:

            movzx R11D,R11W
            add R11,RDI
            cmp RCX,R11
            ja .L_433410

            cmp R13,R11
            jb .L_433410

            mov RDX,R13
            sub RDX,R11
            cmp EDX,1
            jbe .L_433410

            lea RDX,QWORD PTR [R11+2]
            cmp RCX,RDX
            ja .L_433410

            cmp R13,RDX
            jb .L_433410

            movzx R8D,BYTE PTR [R11]
            movzx R9D,BYTE PTR [R11+1]
            shl R8D,8
            add R8D,R9D
            mov R9,R13
            movzx R10D,R8W
            sub R9,RDX
            lea EDX,DWORD PTR [R10+R10*2]
            add EDX,EDX
            cmp EDX,R9D
            ja .L_433410

            test R8W,R8W
            je .L_433262

            cmp R9D,5
            jbe .L_433410

            lea R9,QWORD PTR [R11+6]
            cmp RCX,R9
            ja .L_433410

            cmp R13,R9
            jb .L_433410

            mov RAX,R13
            sub RAX,R9
            cmp EAX,1
            jbe .L_433410

            lea EAX,DWORD PTR [R10-1]
            lea RBX,QWORD PTR [R11+8]
            mov QWORD PTR [RSP+16],R11
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R15,QWORD PTR [RBX+RAX*2]
            lea RAX,QWORD PTR [R11+12]
            sub RAX,R9
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_4333b8:

            movzx EDX,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            shl EDX,8
            add DX,AX
            jne .L_433448

            mov RAX,RCX
.L_4333cc:

            cmp RBX,R15
            je .L_433262

            cmp RBX,RCX
            jb .L_433410

            mov R13,QWORD PTR [RSI+16]
            cmp RBX,R13
            ja .L_433410

            mov RAX,R13
            sub RAX,RBX
            cmp EAX,5
            jbe .L_433410

            add R9,QWORD PTR [RSP+8]
            cmp RCX,R9
            ja .L_433410

            cmp R13,R9
            jb .L_433410

            lea RAX,QWORD PTR [RBX+4]
            mov RDX,R13
            add RBX,6
            sub RDX,RAX
            cmp EDX,1
            ja .L_4333b8
.L_433410:

            movzx ECX,BYTE PTR [RSI+24]
            mov EAX,DWORD PTR [RSI+28]
.L_433417:

            cmp EAX,2
            ja .L_4331f0

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_4331f0

            xor R8D,R8D
            mov WORD PTR [RDI+4],R8W
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RCX
            jmp .L_433262
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433448:

            movzx EDX,DX
            add RDX,QWORD PTR [RSP+16]
            cmp RDX,RCX
            jb .L_433630

            cmp RDX,R13
            ja .L_433630

            mov RAX,R13
            sub RAX,RDX
            cmp EAX,1
            jbe .L_433630

            movzx EAX,BYTE PTR [RDX]
            movzx R8D,BYTE PTR [RDX+1]
            shl EAX,8
            add AX,R8W
            jne .L_4336a0
.L_433486:

            lea R12,QWORD PTR [RDX+2]
            mov RAX,RCX
            cmp R12,RCX
            jb .L_433630

            mov R13,QWORD PTR [RSI+16]
            cmp R12,R13
            ja .L_433630

            mov R8,R13
            sub R8,R12
            cmp R8D,1
            jbe .L_433630

            lea R10,QWORD PTR [RDX+4]
            cmp RCX,R10
            ja .L_433630

            cmp R13,R10
            jb .L_433630

            movzx R8D,BYTE PTR [RDX+2]
            movzx R11D,BYTE PTR [RDX+3]
            mov RBP,R13
            sub RBP,R10
            shl R8D,8
            add R8D,R11D
            movzx R11D,R8W
            lea R10D,DWORD PTR [R11+R11*2]
            add R10D,R10D
            cmp R10D,EBP
            ja .L_433630

            test R8W,R8W
            je .L_4333cc

            cmp EBP,5
            jbe .L_433630

            lea R8,QWORD PTR [RDX+8]
            cmp RCX,R8
            ja .L_433630

            cmp R13,R8
            jb .L_433630

            mov RAX,R13
            sub RAX,R8
            cmp EAX,1
            jbe .L_433630

            lea EAX,DWORD PTR [R11-1]
            lea R10,QWORD PTR [RDX+10]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R14,QWORD PTR [R12+RAX*2+8]
            add R12,12
            sub R12,R8
            nop
            nop
            nop
            nop
.L_433548:

            movzx EAX,BYTE PTR [R8]
            movzx R11D,BYTE PTR [R8+1]
            shl EAX,8
            add AX,R11W
            je .L_4335e0

            movzx EAX,AX
            add RAX,RDX
            cmp RAX,RCX
            jb .L_433580

            cmp RAX,R13
            ja .L_433580

            mov R11,R13
            sub R11,RAX
            cmp R11D,5
            ja .L_433640

            nop
            nop
.L_433580:

            mov EAX,DWORD PTR [RSI+28]
            movzx ECX,BYTE PTR [RSI+24]
            cmp EAX,2
            ja .L_4331f0

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            jne .L_4335d0
.L_43359a:

            cmp EAX,2
            ja .L_4331f0

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_433417

            mov BYTE PTR [R9],0
            mov BYTE PTR [R9+1],0
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RCX
            jmp .L_4333cc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4335d0:

            mov BYTE PTR [R8],0
            mov BYTE PTR [R8+1],0
            mov RCX,QWORD PTR [RSI+8]
            nop
            nop
            nop
.L_4335e0:

            cmp R14,R10
            mov RAX,RCX
            je .L_4333cc

            cmp R10,RCX
            jb .L_433630

            mov R13,QWORD PTR [RSI+16]
            cmp R10,R13
            ja .L_433630

            mov RAX,R13
            sub RAX,R10
            cmp EAX,5
            jbe .L_433630

            add R8,R12
            cmp R8,RCX
            jb .L_433630

            cmp R8,R13
            ja .L_433630

            lea RAX,QWORD PTR [R10+4]
            mov R11,R13
            add R10,6
            sub R11,RAX
            cmp R11D,1
            ja .L_433548

            nop
            nop
            nop
            nop
            nop
            nop
.L_433630:

            movzx ECX,BYTE PTR [RSI+24]
            mov EAX,DWORD PTR [RSI+28]
            jmp .L_43359a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433640:

            lea R11,QWORD PTR [RAX+4]
            cmp R11,RCX
            jb .L_433580

            cmp R13,R11
            jb .L_433580

            mov RBP,R13
            sub RBP,R11
            cmp EBP,1
            jbe .L_433580

            lea R11,QWORD PTR [RAX+6]
            cmp R11,RCX
            jb .L_433580

            cmp R13,R11
            jb .L_433580

            movzx EBP,BYTE PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+5]
            sub R13,R11
            shl EBP,8
            add EAX,EBP
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R13D
            jbe .L_4335e0

            jmp .L_433580
          .byte 0x66
          .byte 0x90
.L_4336a0:

            movzx EAX,AX
            add RAX,RDX
            cmp RAX,RCX
            jb .L_4336c0

            cmp R13,RAX
            jb .L_4336c0

            mov R8,R13
            sub R8,RAX
            cmp R8D,5
            ja .L_4336f8

            nop
            nop
            nop
            nop
.L_4336c0:

            mov EAX,DWORD PTR [RSI+28]
            movzx ECX,BYTE PTR [RSI+24]
            cmp EAX,2
            ja .L_4331f0

            lea R8D,DWORD PTR [RAX+1]
            test CL,CL
            mov DWORD PTR [RSI+28],R8D
            jne .L_433a20

            cmp R8D,3
            je .L_4331f0

            add EAX,2
            mov DWORD PTR [RSI+28],EAX
            jmp .L_433417
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4336f8:

            lea R8,QWORD PTR [RAX+4]
            cmp R8,RCX
            jb .L_4336c0

            cmp R13,R8
            jb .L_4336c0

            mov R14,R13
            sub R14,R8
            cmp R14D,1
            jbe .L_4336c0

            lea R8,QWORD PTR [RAX+6]
            cmp R8,RCX
            jb .L_4336c0

            cmp R13,R8
            jb .L_4336c0

            movzx R10D,BYTE PTR [RAX+4]
            movzx EAX,BYTE PTR [RAX+5]
            sub R13,R8
            shl R10D,8
            add EAX,R10D
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,R13D
            jbe .L_433486

            jmp .L_4336c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433750:

            movzx EDX,DX
            lea R15,QWORD PTR [RDI+RDX*1]
            cmp R15,RCX
            jb .L_4339a9

            cmp R13,R15
            jb .L_4339a9

            mov RDX,R13
            sub RDX,R15
            cmp EDX,1
            jbe .L_4339a9

            lea R11,QWORD PTR [R15+2]
            cmp R11,RCX
            mov QWORD PTR [RSP+40],R11
            jb .L_4339a9

            cmp R13,R11
            jb .L_4339a9

            movzx EDX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R15+1]
            mov R8,R13
            sub R8,R11
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*2]
            add EDI,EDI
            cmp EDI,R8D
            ja .L_4339a9

            test DX,DX
            je .L_4332a5

            movzx EAX,BYTE PTR [R15+3]
            movzx EBP,BYTE PTR [R15+2]
            lea R8,QWORD PTR [R15+6]
            mov QWORD PTR [RSP+32],R15
            mov R9,RBX
            shl EBP,24
            shl EAX,16
            lea EAX,DWORD PTR [RAX+RBP*1]
            movzx EBP,BYTE PTR [R15+4]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+5]
            add EBP,EAX
            lea EAX,DWORD PTR [RSI-1]
            mov EBX,EBP
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [R8+RAX*2]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [R15+8]
            mov R15,R11
            mov QWORD PTR [RSP+48],RAX
            jmp .L_433992
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433818:

            cmp R8,R13
            ja .L_4339a6

            mov RAX,R13
            sub RAX,R8
            cmp EAX,1
            jbe .L_4339a6

            movzx R14D,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            shl R14D,8
            add R14W,AX
            je .L_433941

            movzx R12D,R14W
            add R12,QWORD PTR [RSP+32]
            cmp RCX,R12
            ja .L_4339e0

            cmp R13,R12
            jb .L_4339e0

            mov RAX,R13
            sub RAX,R12
            cmp EAX,3
            jbe .L_4339e0

            lea RAX,QWORD PTR [R12+2]
            cmp RCX,RAX
            ja .L_4339e0

            cmp R13,RAX
            jb .L_4339e0

            mov RDI,R13
            sub RDI,RAX
            cmp EDI,1
            jbe .L_4339e0

            lea RAX,QWORD PTR [R12+4]
            cmp RCX,RAX
            ja .L_4339e0

            cmp R13,RAX
            jb .L_4339e0

            movzx EDX,BYTE PTR [R12+2]
            movzx ECX,BYTE PTR [R12+3]
            sub R13,RAX
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            add EDX,EDX
            cmp EDX,R13D
            ja .L_4339e0

            mov RSI,R9
            mov ECX,EBX
            mov RDX,R12
            mov RDI,R12
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            movzx R13D,BYTE PTR [R12]
            movzx EBP,BYTE PTR [R12+1]
            call .L_432fe0

            test AL,AL
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            je .L_4339e0

            shl R13D,8
            add BP,R13W
            je .L_43393d

            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            shl EAX,8
            add AX,DX
            jne .L_43393d

            cmp QWORD PTR [RSP+32],R12
            setb DL
            cmp EBX,1936292453
            sete AL
            test DL,AL
            jne .L_433b69
.L_43393d:

            mov RCX,QWORD PTR [R9+8]
.L_433941:

            cmp QWORD PTR [RSP+24],R8
            mov RAX,RCX
            je .L_433a10

            mov RAX,QWORD PTR [RSP+48]
            sub RAX,QWORD PTR [RSP+40]
            movzx EBX,BYTE PTR [R8+3]
            add R15,RAX
            movzx EAX,BYTE PTR [R8+2]
            shl EBX,16
            shl EAX,24
            lea EAX,DWORD PTR [RAX+RBX*1]
            movzx EBX,BYTE PTR [R8+4]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R8+5]
            add EBX,EAX
            cmp RCX,R15
            ja .L_4339a6

            mov R13,QWORD PTR [R9+16]
            add R8,6
            cmp R13,R15
            jb .L_4339a6
.L_433992:

            mov RAX,R13
            sub RAX,R15
            cmp EAX,5
            jbe .L_4339a6

            cmp RCX,R8
            jbe .L_433818
.L_4339a6:

            mov RBX,R9
.L_4339a9:

            movzx EDX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_4339b0:

            cmp EAX,2
            ja .L_4331f0

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_4331f0

            mov RAX,QWORD PTR [RSP+56]
            xor ECX,ECX
            mov WORD PTR [RAX+6],CX
            mov RAX,QWORD PTR [RBX+8]
            jmp .L_4332a5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4339e0:

            mov EAX,DWORD PTR [R9+28]
            movzx EDX,BYTE PTR [R9+24]
            cmp EAX,2
            ja .L_4331f0

            add EAX,1
            test DL,DL
            mov DWORD PTR [R9+28],EAX
            je .L_433a30

            mov BYTE PTR [R8],0
            mov BYTE PTR [R8+1],0
            jmp .L_43393d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433a10:

            mov RBX,R9
            jmp .L_4332a5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433a20:

            xor R10D,R10D
            mov WORD PTR [RDX],R10W
            mov RCX,QWORD PTR [RSI+8]
            jmp .L_433486
.L_433a30:

            mov RBX,R9
            jmp .L_4339b0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433a40:

            mov RDI,QWORD PTR [RSP+56]
            movzx EDX,DX
            lea RBP,QWORD PTR [RDI+RDX*1]
            cmp RBP,RAX
            jb .L_433b60

            cmp RCX,RBP
            jb .L_433b60

            mov RDX,RCX
            sub RDX,RBP
            cmp EDX,1
            jbe .L_433b60

            lea R14,QWORD PTR [RBP+2]
            cmp R14,RAX
            jb .L_433b60

            cmp RCX,R14
            jb .L_433b60

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            sub RCX,R14
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            lea ESI,DWORD PTR [RDX+RDX*1]
            cmp ESI,ECX
            ja .L_433b60

            test AX,AX
            je .L_4332e7

            cmp ECX,1
            jbe .L_433b60

            lea R13,QWORD PTR [RBP+4]
            lea EAX,DWORD PTR [RDX-1]
            lea R12,QWORD PTR [R13+RAX*2]
            nop
.L_433ac0:

            movzx EAX,BYTE PTR [R14]
            movzx EDI,BYTE PTR [R14+1]
            shl EAX,8
            add AX,DI
            je .L_433b30

            movzx EAX,AX
            mov RSI,RBX
            lea RDI,QWORD PTR [RBP+RAX*1]
            call .L_42c280

            test AL,AL
            jne .L_433b30

            mov EDX,DWORD PTR [RBX+28]
            cmp EDX,2
            ja .L_4331f0

            movzx EAX,BYTE PTR [RBX+24]
            add EDX,1
            mov DWORD PTR [RBX+28],EDX
            test AL,AL
            jne .L_433b26
.L_433aff:

            cmp EDX,2
            ja .L_4331f0

            add EDX,1
            test AL,AL
            mov DWORD PTR [RBX+28],EDX
            je .L_4331f0

            mov RDI,QWORD PTR [RSP+56]
            xor EDX,EDX
            mov WORD PTR [RDI+8],DX
            jmp .L_4331f2
.L_433b26:

            mov BYTE PTR [R14],0
            mov BYTE PTR [R14+1],0
            nop
.L_433b30:

            cmp R13,R12
            je .L_4332e7

            cmp R13,QWORD PTR [RBX+8]
            jb .L_433b60

            mov RAX,QWORD PTR [RBX+16]
            cmp R13,RAX
            ja .L_433b60

            sub RAX,R13
            add R14,2
            add R13,2
            cmp EAX,1
            ja .L_433ac0

            nop
            nop
            nop
            nop
.L_433b60:

            movzx EAX,BYTE PTR [RBX+24]
            mov EDX,DWORD PTR [RBX+28]
            jmp .L_433aff
.L_433b69:

            movzx EAX,R14W
            movzx ECX,BP
            sub ECX,EAX
            mov EAX,EBP
            sub EAX,R14D
            movzx EDX,CL
            xor AL,AL
            add EAX,EDX
            mov EDX,DWORD PTR [R9+28]
            movzx ESI,AX
            cmp ECX,ESI
            je .L_433b9e
.L_433b89:

            cmp EDX,1
            jbe .L_43393d
.L_433b92:

            sub EDX,1
            mov DWORD PTR [R9+28],EDX
            jmp .L_43393d
.L_433b9e:

            cmp EDX,2
            ja .L_433b92

            movzx ECX,BYTE PTR [R9+24]
            add EDX,1
            mov DWORD PTR [R9+28],EDX
            test CL,CL
            je .L_433b89

            mov EDX,EAX
            mov RSI,R9
            mov BYTE PTR [R12+1],AL
            shr DX,8
            mov ECX,1936292453
            mov RDI,R12
            mov BYTE PTR [R12],DL
            mov RDX,R12
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            call .L_432fe0

            test AL,AL
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            je .L_4339e0

            mov EDX,DWORD PTR [R9+28]
            jmp .L_433b89
.L_433bf7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433c00:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jb .L_433cd8

            mov R9,QWORD PTR [RSI+16]
            cmp RDI,R9
            ja .L_433cd8

            mov RAX,R9
            sub RAX,RDI
            cmp EAX,1
            jbe .L_433cd8

            movzx ECX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov EAX,1
            shl ECX,8
            add CX,R10W
            je .L_433ce0

            movzx ECX,CX
            add RCX,RDX
            cmp R8,RCX
            ja .L_433cb8

            cmp R9,RCX
            jb .L_433cb8

            sub R9,RCX
            cmp R9D,5
            jbe .L_433cb8

            movzx R8D,BYTE PTR [RCX+4]
            movzx EDX,BYTE PTR [RCX+5]
            shl R8D,8
            add R8D,EDX
            movzx R8D,R8W
            lea EDX,DWORD PTR [R8-1]
            cmp EDX,2
            ja .L_433ce0

            movzx R10D,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl R10D,8
            add R10D,EDX
            movzx EDX,BYTE PTR [RCX+2]
            movzx ECX,BYTE PTR [RCX+3]
            shl EDX,8
            add EDX,ECX
            cmp R10W,DX
            ja .L_433ce0

            movzx EDX,DX
            movzx R10D,R10W
            mov ECX,4
            sub EDX,R10D
            sub ECX,R8D
            sar EDX,CL
            lea EAX,DWORD PTR [RDX+RDX*1+8]
            cmp R9D,EAX
            jae .L_433cdb
.L_433cb8:

            mov EDX,DWORD PTR [RSI+28]
            cmp EDX,2
            ja .L_433cd8

            movzx EAX,BYTE PTR [RSI+24]
            add EDX,1
            mov DWORD PTR [RSI+28],EDX
            test AL,AL
            je .L_433cd8

            xor EDX,EDX
            mov WORD PTR [RDI],DX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433cd8:

            xor EAX,EAX
            ret 
.L_433cdb:

            mov EAX,1
.L_433ce0:

            ret 
.L_433ce2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433cf0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RCX
            mov R12,RSI
            sub RSP,8
.L_433d03:

            movzx EBP,BYTE PTR [RDI]
            movzx EAX,BYTE PTR [RDI+1]
            shl EBP,8
            add EBP,EAX
            lea RAX,QWORD PTR [RCX+2]
            test BPL,1
            cmovne RBX,RAX
            test BPL,2
            lea RAX,QWORD PTR [RBX+2]
            cmovne RBX,RAX
            test BPL,4
            lea RAX,QWORD PTR [RBX+2]
            cmovne RBX,RAX
            test BPL,8
            lea RAX,QWORD PTR [RBX+2]
            cmovne RBX,RAX
            test BPL,16
            jne .L_433db0
.L_433d45:

            test BPL,32
            jne .L_433dd0
.L_433d4f:

            test BPL,64
            jne .L_433d70

            and EBP,128
            mov EAX,1
            jne .L_433d93
.L_433d62:

            add RSP,8
.L_433d66:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433d70:

            mov RDX,R13
            mov RSI,R12
            mov RDI,RBX
            call .L_433c00

            test AL,AL
            je .L_433dc0

            add RBX,2
            and EBP,128
            mov EAX,1
            je .L_433d62
.L_433d93:

            add RSP,8
            mov RDX,R13
            mov RSI,R12
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_433c00
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433db0:

            mov RDI,RBX
            add RBX,2
            call .L_433c00

            test AL,AL
            jne .L_433d45
.L_433dc0:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433dd0:

            mov RDX,R13
            mov RSI,R12
            mov RDI,RBX
            call .L_433c00

            test AL,AL
            je .L_433dc0

            add RBX,2
            jmp .L_433d4f
.L_433deb:

            nop
            nop
            nop
            nop
            nop
.L_433df0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_433df8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_433ec0

            cmp AX,2
            jne .L_433f37

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R11D,CX
            je .L_433f37

            movzx EBX,BYTE PTR [RSI+112]
            lea R8,QWORD PTR [RDI+4]
            xor R10D,R10D
            mov R9D,1
            nop
            nop
            nop
.L_433e48:

            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            cmp EAX,R10D
            jbe .L_433e9d

            movzx EDX,BYTE PTR [R8+2]
            movzx EAX,BYTE PTR [R8+3]
            movzx ECX,BYTE PTR [R8]
            shl EDX,8
            add EDX,EAX
            movzx EAX,BYTE PTR [R8+1]
            shl ECX,8
            movzx EDX,DX
            add ECX,EAX
            test BL,BL
            movzx ECX,CX
            jne .L_433e9d

            add EDX,1
            cmp EDX,ECX
            jbe .L_433e9d

            nop
            nop
            nop
            nop
            nop
.L_433e88:

            mov EAX,ECX
            mov EBP,R9D
            shl EBP,CL
            shr EAX,5
            add ECX,1
            or DWORD PTR [RSI+RAX*4+116],EBP
            cmp ECX,EDX
            jne .L_433e88
.L_433e9d:

            add R10D,1
            add R8,6
            cmp R11D,R10D
            je .L_433f37

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            jmp .L_433e48
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433ec0:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R8D,CX
            je .L_433f37

            lea EBX,DWORD PTR [R8-1]
            mov RBP,RSI
            mov R14,RDI
            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_657760]
            add RBX,1
            jmp .L_433f02
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433ef8:

            movzx EAX,BYTE PTR [R14+2]
            movzx EDX,BYTE PTR [R14+3]
.L_433f02:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_433f17

            lea RDX,QWORD PTR [R14+R13*2+4]
.L_433f17:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            mov RDI,RBP
            add R13,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            cmp R13,RBX
            jne .L_433ef8
.L_433f37:

            pop RBX
.L_433f38:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_433f40:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
.L_433f54:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            mov RSI,QWORD PTR [RSI+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+3]
            movzx EAX,AX
            lea RBP,QWORD PTR [RDI+RAX*2+6]
            movzx EAX,BYTE PTR [RDI+2]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
            mov EDX,EAX
            shl EDX,8
            add EDX,ECX
            movzx ESI,DX
            test DX,DX
            mov DWORD PTR [RSP+12],ESI
            je .L_43400d

            lea R13,QWORD PTR [R14+6]
            xor R15D,R15D
            lea R12,QWORD PTR [RIP+.L_657760]
            jmp .L_433fca
.L_433fc0:

            movzx EAX,BYTE PTR [R14+4]
            movzx ECX,BYTE PTR [R14+5]
.L_433fca:

            shl EAX,8
            mov RSI,QWORD PTR [RBX+8]
            add EAX,ECX
            mov RCX,R12
            movzx EAX,AX
            cmp EAX,R15D
            cmova RCX,R13
            movzx EAX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R12
            add R15D,1
            add R13,2
            call .L_433df0

            cmp DWORD PTR [RSP+12],R15D
            jne .L_433fc0
.L_43400d:

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_434120

            lea R13D,DWORD PTR [RSI-1]
            xor R15D,R15D
            lea R12,QWORD PTR [RIP+.L_657760]
            add R13,1
            jmp .L_434044
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434040:

            movzx EDX,BYTE PTR [RBP+1]
.L_434044:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_434059

            lea RDX,QWORD PTR [RBP+R15*2+2]
.L_434059:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,QWORD PTR [RBX+24]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,R12
            add R15,1
            call .L_433df0

            cmp R13,R15
            movzx EAX,BYTE PTR [RBP]
            jne .L_434040

            movzx EDX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
.L_434094:

            lea R14D,DWORD PTR [RAX+RAX*1+2]
            add R14,RBP
            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43410f

            lea EBP,DWORD PTR [RSI-1]
            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_657760]
            add RBP,1
            jmp .L_4340d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4340d0:

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
.L_4340d9:

            shl EAX,8
            mov RDI,QWORD PTR [RBX+32]
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_4340f2

            lea RDX,QWORD PTR [R14+R13*2+2]
.L_4340f2:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            add R13,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            cmp R13,RBP
            jne .L_4340d0
.L_43410f:

            add RSP,24
.L_434113:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_434120:

            xor EAX,EAX
            jmp .L_434094
.L_434127:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434130:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jb .L_434320

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_434320

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_434320

            push R14
            push R13
            push R12
            push RBP
            lea RBP,QWORD PTR [RDI+2]
            push RBX
.L_434165:

            cmp RCX,RBP
            ja .L_434313

            cmp R8,RBP
            jb .L_434313

            movzx EAX,BYTE PTR [RDI]
            movzx R9D,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,R9D
            mov R9,R8
            movzx R10D,AX
            sub R9,RBP
            lea R11D,DWORD PTR [R10+R10*1]
            cmp R11D,R9D
            ja .L_434313

            test AX,AX
            je .L_434328

            cmp R9D,1
            jbe .L_434313

            lea RBX,QWORD PTR [RDI+4]
            lea EAX,DWORD PTR [R10-1]
            lea R12,QWORD PTR [RBX+RAX*2]
            nop
            nop
            nop
            nop
            nop
.L_4341c0:

            movzx EDI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl EDI,8
            add DI,AX
            je .L_4343a8

            movzx EDI,DI
            add RDI,RDX
            cmp RCX,RDI
            ja .L_434380

            cmp RDI,R8
            ja .L_434380

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_434380

            lea R9,QWORD PTR [RDI+2]
            cmp RCX,R9
            ja .L_434380

            cmp R8,R9
            jb .L_434380

            movzx EAX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,R10D
            mov R10,R8
            movzx R11D,AX
            sub R10,R9
            lea R13D,DWORD PTR [R11+R11*1]
            cmp R13D,R10D
            ja .L_434380

            test AX,AX
            je .L_4343a8

            cmp R9,RCX
            jb .L_434380

            cmp R10D,1
            jbe .L_434380

            lea R10,QWORD PTR [RDI+4]
            lea EAX,DWORD PTR [R11-1]
            lea R11,QWORD PTR [R10+RAX*2]
            nop
            nop
.L_434260:

            movzx EAX,BYTE PTR [R9]
            movzx R13D,BYTE PTR [R9+1]
            shl EAX,8
            add AX,R13W
            je .L_434350

            movzx EAX,AX
            add RAX,RDI
            cmp RAX,RCX
            jb .L_4342f0

            cmp RAX,R8
            ja .L_4342f0

            mov R13,R8
            sub R13,RAX
            cmp R13D,1
            jbe .L_4342f0

            lea R13,QWORD PTR [RAX+2]
            cmp R13,RCX
            jb .L_4342f0

            cmp R8,R13
            jb .L_4342f0

            mov R14,R8
            sub R14,R13
            cmp R14D,1
            jbe .L_4342f0

            lea R13,QWORD PTR [RAX+4]
            cmp R13,RCX
            jb .L_4342f0

            cmp R8,R13
            jb .L_4342f0

            movzx ECX,BYTE PTR [RAX+2]
            movzx R14D,BYTE PTR [RAX+3]
            sub R8,R13
            shl ECX,8
            add ECX,R14D
            movzx R14D,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            movzx ECX,CX
            shl R14D,8
            add EAX,R14D
            movzx EAX,AX
            lea EAX,DWORD PTR [RAX+RCX*2]
            add EAX,EAX
            cmp EAX,R8D
            jbe .L_434350

            nop
            nop
            nop
            nop
            nop
.L_4342f0:

            mov EAX,DWORD PTR [RSI+28]
            cmp EAX,2
            ja .L_434313

            movzx R8D,BYTE PTR [RSI+24]
            lea ECX,DWORD PTR [RAX+1]
            mov DWORD PTR [RSI+28],ECX
            test R8B,R8B
            jne .L_434340

            cmp ECX,3
            je .L_434313

            add EAX,2
            mov DWORD PTR [RSI+28],EAX
.L_434313:

            pop RBX
.L_434314:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_434320:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434328:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434340:

            mov BYTE PTR [R9],0
            mov BYTE PTR [R9+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434350:

            cmp R11,R10
            je .L_4343a8

            mov RCX,QWORD PTR [RSI+8]
            cmp R10,RCX
            jb .L_434380

            mov R8,QWORD PTR [RSI+16]
            cmp R10,R8
            ja .L_434380

            mov RAX,R8
            add R9,2
            sub RAX,R10
            add R10,2
            cmp EAX,1
            ja .L_434260

            nop
            nop
.L_434380:

            mov EAX,DWORD PTR [RSI+28]
            movzx ECX,BYTE PTR [RSI+24]
            cmp EAX,2
            ja .L_434313

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_434313

            mov BYTE PTR [RBP],0
            mov BYTE PTR [RBP+1],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_4343a8:

            cmp R12,RBX
            je .L_434328

            mov RCX,QWORD PTR [RSI+8]
            cmp RBX,RCX
            jb .L_434313

            mov R8,QWORD PTR [RSI+16]
            cmp RBX,R8
            ja .L_434313

            mov RAX,R8
            add RBP,2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            ja .L_4341c0

            jmp .L_434313
.L_4343e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4343f0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            mov RDI,QWORD PTR [RSI+8]
            push RBP
            push RBX
            cmp R12,RDI
            jb .L_43440f

            mov R9,QWORD PTR [RSI+16]
            cmp R12,R9
            jbe .L_434420
.L_43440f:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434420:

            mov RAX,R9
            sub RAX,R12
            cmp EAX,1
            jbe .L_43440f

            lea R13,QWORD PTR [R12+2]
            cmp RDI,R13
            ja .L_43440f

            cmp R9,R13
            jb .L_43440f

            movzx EAX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            shl EAX,8
            add EAX,ECX
            mov RCX,R9
            movzx R8D,AX
            sub RCX,R13
            lea R10D,DWORD PTR [R8+R8*1]
            cmp R10D,ECX
            ja .L_43440f

            test AX,AX
            je .L_434610

            cmp ECX,1
            jbe .L_43440f

            lea EAX,DWORD PTR [R8-1]
            add R12,4
            mov R14D,2
            lea RAX,QWORD PTR [R12+RAX*2]
            mov QWORD PTR [RSP-8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_434488:

            movzx R10D,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            shl R10D,8
            add R10W,AX
            je .L_4345d0

            movzx R10D,R10W
            add R10,RDX
            cmp RDI,R10
            ja .L_434660

            cmp R10,R9
            ja .L_434660

            mov RAX,R9
            sub RAX,R10
            cmp EAX,1
            jbe .L_434660

            lea R11,QWORD PTR [R10+2]
            cmp RDI,R11
            ja .L_434660

            cmp R9,R11
            jb .L_434660

            movzx EAX,BYTE PTR [R10]
            movzx ECX,BYTE PTR [R10+1]
            mov R8,R9
            sub R8,R11
            shl EAX,8
            add EAX,ECX
            movzx ECX,AX
            lea EBX,DWORD PTR [RCX+RCX*1]
            cmp EBX,R8D
            ja .L_434660

            test AX,AX
            je .L_4345d0

            cmp R11,RDI
            jb .L_434660

            cmp R8D,1
            jbe .L_434660

            lea RBX,QWORD PTR [R10+4]
            lea EAX,DWORD PTR [RCX-1]
            lea RBP,QWORD PTR [RBX+RAX*2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434530:

            movzx EAX,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            shl EAX,8
            add AX,CX
            je .L_434630

            movzx EAX,AX
            add RAX,R10
            cmp RDI,RAX
            ja .L_434590

            cmp RAX,R9
            ja .L_434590

            mov RCX,R9
            sub RCX,RAX
            cmp ECX,1
            jbe .L_434590

            lea R8,QWORD PTR [RAX+2]
            cmp RDI,R8
            ja .L_434590

            cmp R9,R8
            jb .L_434590

            movzx ECX,BYTE PTR [RAX]
            movzx R15D,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,R15D
            mov R15,R9
            movzx ECX,CX
            sub R15,R8
            add ECX,ECX
            cmp ECX,R15D
            jbe .L_434670
.L_434590:

            mov EAX,DWORD PTR [RSI+28]
            cmp EAX,2
            ja .L_43440f

            movzx ECX,BYTE PTR [RSI+24]
            add EAX,1
            mov DWORD PTR [RSI+28],EAX
            test CL,CL
            jne .L_434620
.L_4345aa:

            cmp EAX,2
            ja .L_43440f

            add EAX,1
            test CL,CL
            mov DWORD PTR [RSI+28],EAX
            je .L_43440f

            mov BYTE PTR [R13],0
            mov BYTE PTR [R13+1],0
            nop
            nop
            nop
            nop
            nop
.L_4345d0:

            cmp R12,QWORD PTR [RSP-8]
            je .L_434610

            mov RDI,QWORD PTR [RSI+8]
            cmp R12,RDI
            jb .L_43440f

            mov R9,QWORD PTR [RSI+16]
            cmp R12,R9
            ja .L_43440f

            mov RAX,R9
            add R13,2
            sub RAX,R12
            add R12,2
            cmp EAX,1
            ja .L_434488

            jmp .L_43440f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434610:

            pop RBX
.L_434611:

            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_434620:

            mov BYTE PTR [R11],0
            mov BYTE PTR [R11+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434630:

            cmp RBP,RBX
            je .L_4345d0

            mov RDI,QWORD PTR [RSI+8]
            cmp RBX,RDI
            jb .L_434660

            mov R9,QWORD PTR [RSI+16]
            cmp RBX,R9
            ja .L_434660

            mov RAX,R9
            add R11,2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            ja .L_434530

            nop
            nop
.L_434660:

            movzx ECX,BYTE PTR [RSI+24]
            mov EAX,DWORD PTR [RSI+28]
            jmp .L_4345aa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434670:

            add ECX,2
            add RAX,RCX
            cmp RDI,RAX
            ja .L_434590

            cmp RAX,R9
            ja .L_434590

            mov R15,R9
            sub R15,RAX
            cmp R15D,1
            jbe .L_434590

            movzx R8D,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl R8D,8
            add R8D,ECX
            movzx ECX,R8W
            add ECX,ECX
            cmp R15D,ECX
            jb .L_434590

            test R8W,R8W
            cmove RCX,R14
            add RAX,RCX
            cmp RDI,RAX
            ja .L_434590

            cmp RAX,R9
            ja .L_434590

            mov RCX,R9
            sub RCX,RAX
            cmp ECX,1
            jbe .L_434590

            lea R8,QWORD PTR [RAX+2]
            cmp RDI,R8
            ja .L_434590

            cmp R9,R8
            jb .L_434590

            movzx ECX,BYTE PTR [RAX]
            movzx R15D,BYTE PTR [RAX+1]
            shl ECX,8
            add ECX,R15D
            mov R15,R9
            movzx ECX,CX
            sub R15,R8
            add ECX,ECX
            cmp ECX,R15D
            ja .L_434590

            add ECX,2
            add RAX,RCX
            cmp RDI,RAX
            ja .L_434590

            cmp RAX,R9
            ja .L_434590

            mov RCX,R9
            sub RCX,RAX
            cmp ECX,1
            jbe .L_434590

            lea RCX,QWORD PTR [RAX+2]
            cmp RDI,RCX
            ja .L_434590

            cmp R9,RCX
            jb .L_434590

            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            sub R9,RCX
            shl EDI,8
            add EAX,EDI
            movzx EAX,AX
            shl EAX,2
            cmp EAX,R9D
            jbe .L_434630

            jmp .L_434590
.L_43477a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434780:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jb .L_4347b8

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_4347b8

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_4347b8

            movzx EAX,BYTE PTR [RDI]
            movzx R9D,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,R9W
            jne .L_4347c0

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4347b8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4347c0:

            movzx EAX,AX
            push R12
.L_4347c5:

            push RBP
            push RBX
.L_4347c7:

            lea RBX,QWORD PTR [RDX+RAX*1]
            mov R12,RSI
            mov RBP,RDI
            cmp RCX,RBX
            ja .L_434820

            cmp R8,RBX
            jb .L_434820

            sub R8,RBX
            cmp R8D,1
            jbe .L_434820

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_434850

            cmp AX,3
            je .L_434860

            cmp AX,1
            je .L_434810
.L_434802:

            mov EAX,1
.L_434807:

            pop RBX
.L_434808:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434810:

            cmp R8D,5
            seta AL
.L_434817:

            test AL,AL
            jne .L_434802

            nop
            nop
            nop
            nop
            nop
.L_434820:

            mov EDX,DWORD PTR [R12+28]
            cmp EDX,2
            ja .L_434848

            movzx EAX,BYTE PTR [R12+24]
            add EDX,1
            mov DWORD PTR [R12+28],EDX
            test AL,AL
            je .L_434848

            xor EDX,EDX
            mov WORD PTR [RBP],DX
            jmp .L_434807
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434848:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_434850:

            cmp R8D,7
            seta AL
            jmp .L_434817
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434860:

            cmp R8D,9
            jbe .L_434820

            lea RDI,QWORD PTR [RBX+6]
            mov RDX,RBX
            call .L_433c00

            test AL,AL
            je .L_434820

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,RBX
            mov RSI,R12
            call .L_433c00

            test AL,AL
            je .L_434820

            jmp .L_434802
.L_43488e:

            nop
            nop
.L_434890:

            mov RCX,QWORD PTR [RSI+8]
            cmp RDI,RCX
            jae .L_4348a0
.L_434899:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4348a0:

            mov R8,QWORD PTR [RSI+16]
            cmp RDI,R8
            ja .L_434899

            mov RAX,R8
            sub RAX,RDI
            cmp EAX,1
            jbe .L_434899

            push R14
            push R13
            push R12
            push RBP
            push RBX
            movzx EAX,BYTE PTR [RDI]
            movzx R12D,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,R12W
            jne .L_4348e0
.L_4348cd:

            mov EAX,1
.L_4348d2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4348e0:

            movzx EAX,AX
            mov RBX,RSI
            mov R13,RDI
            lea R12,QWORD PTR [RDX+RAX*1]
            cmp RCX,R12
            ja .L_4349a0

            cmp R8,R12
            jb .L_4349a0

            mov RAX,R8
            sub RAX,R12
            cmp EAX,1
            jbe .L_4349a0

            lea RAX,QWORD PTR [R12+2]
            cmp RCX,RAX
            ja .L_4349a0

            cmp R8,RAX
            jb .L_4349a0

            movzx EDX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            sub R8,RAX
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            lea EAX,DWORD PTR [RCX*4]
            cmp EAX,R8D
            ja .L_4349a0

            test DX,DX
            je .L_4348cd

            cmp R8D,3
            jbe .L_4349a0

            lea RBP,QWORD PTR [R12+4]
            lea EAX,DWORD PTR [RCX-1]
            lea R14,QWORD PTR [RBP+RAX*4]
            nop
            nop
            nop
            nop
            nop
.L_434960:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBP
            call .L_434780

            test AL,AL
            je .L_4349a0

            cmp R14,RBP
            je .L_4348cd

            lea RAX,QWORD PTR [RBP+2]
            cmp QWORD PTR [RBX+8],RAX
            ja .L_4349a0

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,RAX
            jb .L_4349a0

            sub RDX,RAX
            add RBP,4
            cmp EDX,3
            ja .L_434960

            nop
            nop
            nop
            nop
            nop
            nop
.L_4349a0:

            mov EDX,DWORD PTR [RBX+28]
            cmp EDX,2
            ja .L_4349c8

            movzx EAX,BYTE PTR [RBX+24]
            add EDX,1
            mov DWORD PTR [RBX+28],EDX
            test AL,AL
            je .L_4349c8

            xor EDX,EDX
            mov WORD PTR [R13],DX
            jmp .L_4348d2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4349c8:

            pop RBX
.L_4349c9:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4349d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4349e0:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jae .L_4349f0
.L_4349e9:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4349f0:

            mov R9,QWORD PTR [RSI+16]
            cmp RDI,R9
            ja .L_4349e9

            mov RAX,R9
            sub RAX,RDI
            cmp EAX,1
            jbe .L_4349e9

            push R14
            push R13
            push R12
            push RBP
            push RBX
            movzx EAX,BYTE PTR [RDI]
            movzx EBP,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,BP
            jne .L_434a30
.L_434a1b:

            mov EAX,1
.L_434a20:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434a30:

            movzx EAX,AX
            mov R12,RSI
            mov R13,RDI
            lea RBP,QWORD PTR [RDX+RAX*1]
            cmp R8,RBP
            ja .L_434a78

            cmp R9,RBP
            jb .L_434a78

            mov RAX,R9
            sub RAX,RBP
            cmp EAX,1
            jbe .L_434a78

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx ESI,AX
            je .L_434ac8

            xor EDX,EDX
            mov EAX,4294967295
            div ESI
            cmp ECX,EAX
            jb .L_434aa0

            nop
            nop
            nop
            nop
.L_434a78:

            mov EDX,DWORD PTR [R12+28]
            cmp EDX,2
            ja .L_434ab8

            movzx EAX,BYTE PTR [R12+24]
            add EDX,1
            mov DWORD PTR [R12+28],EDX
            test AL,AL
            je .L_434ab8

            xor EDX,EDX
            mov WORD PTR [R13],DX
            jmp .L_434a20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434aa0:

            imul ECX,ESI
            cmp ECX,2147483646
            ja .L_434a78

            lea RBX,QWORD PTR [RBP+2]
            jmp .L_434ace
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434ab8:

            pop RBX
.L_434ab9:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434ac8:

            lea RBX,QWORD PTR [RBP+2]
            xor ECX,ECX
.L_434ace:

            cmp RBX,R8
            jb .L_434a78

            cmp RBX,R9
            ja .L_434a78

            lea EAX,DWORD PTR [RCX+RCX*1]
            sub R9,RBX
            cmp EAX,R9D
            ja .L_434a78

            test ECX,ECX
            je .L_434a1b

            lea EAX,DWORD PTR [RCX-1]
            lea R14,QWORD PTR [RBP+RAX*2+4]
            jmp .L_434b05
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434af8:

            add RBX,2
            cmp R14,RBX
            je .L_434a1b
.L_434b05:

            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_434780

            test AL,AL
            jne .L_434af8

            jmp .L_434a78
.L_434b1c:

            nop
            nop
            nop
            nop
.L_434b20:

            mov RCX,QWORD PTR [RSI+8]
            xor EAX,EAX
            cmp RDI,RCX
            jb .L_434b6b

            mov RSI,QWORD PTR [RSI+16]
            cmp RDI,RSI
            ja .L_434b6b

            mov RDX,RSI
            sub RDX,RDI
            cmp EDX,1
            jbe .L_434b6b

            movzx EDX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            add RDI,2
            cmp RDI,RCX
            jb .L_434b6b

            cmp RDI,RSI
            ja .L_434b6b

            shl EDX,8
            movzx EAX,R8B
            sub RSI,RDI
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,ESI
            setbe AL
.L_434b6b:

            ret 
.L_434b6d:

            nop
            nop
            nop
.L_434b70:

            mov RDX,QWORD PTR [RSI+8]
            cmp RDI,RDX
            jb .L_434bf8

            mov RCX,QWORD PTR [RSI+16]
            cmp RDI,RCX
            ja .L_434bf8

            mov RAX,RCX
            sub RAX,RDI
            cmp EAX,1
            jbe .L_434bf8

            movzx EAX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,R8D
            cmp AX,1
            je .L_434c10

            cmp AX,2
            jne .L_434c00

            lea RSI,QWORD PTR [RDI+2]
            xor EAX,EAX
            cmp RDX,RSI
            ja .L_434c05

            cmp RCX,RSI
            jb .L_434c05

            mov R9,RCX
            sub R9,RSI
            cmp R9D,1
            jbe .L_434c05

            movzx ESI,BYTE PTR [RDI+2]
            movzx R8D,BYTE PTR [RDI+3]
            add RDI,4
            cmp RDX,RDI
            ja .L_434c05

            cmp RCX,RDI
            jb .L_434c05

            shl ESI,8
            sub RCX,RDI
            add ESI,R8D
            movzx ESI,SI
            lea EAX,DWORD PTR [RSI+RSI*2]
            add EAX,EAX
            cmp EAX,ECX
            setbe AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434bf8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434c00:

            mov EAX,1
.L_434c05:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c10:

            add RDI,2
            jmp .L_434b20
.L_434c19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434c20:

            cmp RDI,QWORD PTR [RSI+8]
            jb .L_434c90

            mov RAX,QWORD PTR [RSI+16]
            cmp RDI,RAX
            ja .L_434c90

            sub RAX,RDI
            cmp EAX,1
            jbe .L_434c90

            movzx ECX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            mov EAX,1
            shl ECX,8
            add CX,R8W
            je .L_434c92

            push RBP
            movzx ECX,CX
            push RBX
            mov RBP,RDI
            lea RDI,QWORD PTR [RDX+RCX*1]
            mov RBX,RSI
            sub RSP,8
            call .L_434b70

            test AL,AL
            jne .L_434c82

            mov EDX,DWORD PTR [RBX+28]
            cmp EDX,2
            ja .L_434c80

            movzx EAX,BYTE PTR [RBX+24]
            add EDX,1
            mov DWORD PTR [RBX+28],EDX
            test AL,AL
            jne .L_434c98

            nop
.L_434c80:

            xor EAX,EAX
.L_434c82:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c90:

            xor EAX,EAX
.L_434c92:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434c98:

            xor EDX,EDX
            mov WORD PTR [RBP],DX
            jmp .L_434c82
.L_434ca0:

            mov RAX,QWORD PTR [RSI+8]
            cmp RDI,RAX
            jb .L_434d40

            mov RCX,QWORD PTR [RSI+16]
            cmp RDI,RCX
            ja .L_434d40

            mov R8,RCX
            sub R8,RDI
            cmp R8D,1
            jbe .L_434d40

            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RDI+2]
            sub RSP,8
.L_434cd4:

            cmp RAX,RBX
            ja .L_434d33

            cmp RCX,RBX
            jb .L_434d33

            movzx EAX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            sub RCX,RBX
            shl EAX,8
            add EAX,R8D
            movzx R8D,AX
            lea R9D,DWORD PTR [R8+R8*1]
            cmp R9D,ECX
            ja .L_434d33

            test AX,AX
            je .L_434d48

            lea EAX,DWORD PTR [R8-1]
            mov R12,RDX
            mov RBP,RSI
            lea R13,QWORD PTR [RDI+RAX*2+4]
            jmp .L_434d21
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434d18:

            add RBX,2
            cmp RBX,R13
            je .L_434d48
.L_434d21:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_434c20

            test AL,AL
            jne .L_434d18
.L_434d33:

            add RSP,8
.L_434d37:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_434d40:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434d48:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_434d58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434d60:

            mov RCX,QWORD PTR [RSI+8]
            xor EAX,EAX
            cmp RDI,RCX
            jb .L_434dab

            mov RSI,QWORD PTR [RSI+16]
            cmp RDI,RSI
            ja .L_434dab

            mov RDX,RSI
            sub RDX,RDI
            cmp EDX,1
            jbe .L_434dab

            movzx EDX,BYTE PTR [RDI]
            movzx R8D,BYTE PTR [RDI+1]
            add RDI,2
            cmp RDI,RCX
            jb .L_434dab

            cmp RDI,RSI
            ja .L_434dab

            shl EDX,8
            movzx EAX,R8B
            sub RSI,RDI
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            cmp EAX,ESI
            setbe AL
.L_434dab:

            ret 
.L_434dad:

            nop
            nop
            nop
.L_434db0:

            mov R8,QWORD PTR [RSI+8]
            cmp RDI,R8
            jb .L_434eb0

            mov R9,QWORD PTR [RSI+16]
            cmp RDI,R9
            ja .L_434eb0

            mov RAX,R9
            sub RAX,RDI
            cmp EAX,1
            jbe .L_434eb0

            movzx ECX,BYTE PTR [RDI]
            movzx R10D,BYTE PTR [RDI+1]
            mov EAX,1
            shl ECX,8
            add CX,R10W
            je .L_434eb2

            push RBP
.L_434df4:

            movzx ECX,CX
            push RBX
            add RDX,RCX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_434e05:

            cmp R8,RDX
            ja .L_434e80

            cmp R9,RDX
            jb .L_434e80

            mov RDI,R9
            sub RDI,RDX
            cmp EDI,1
            jbe .L_434e80

            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            shl ECX,8
            add ECX,ESI
            cmp CX,1
            je .L_434eb8

            cmp CX,2
            jne .L_434ea2

            lea RAX,QWORD PTR [RDX+2]
            cmp R8,RAX
            ja .L_434e80

            cmp R9,RAX
            jb .L_434e80

            mov RSI,R9
            sub RSI,RAX
            cmp ESI,1
            jbe .L_434e80

            movzx EAX,BYTE PTR [RDX+2]
            movzx ECX,BYTE PTR [RDX+3]
            add RDX,4
            cmp R8,RDX
            ja .L_434e80

            cmp R9,RDX
            jb .L_434e80

            shl EAX,8
            sub R9,RDX
            add EAX,ECX
            movzx EAX,AX
            lea ECX,DWORD PTR [RAX+RAX*2]
            mov EAX,1
            add ECX,ECX
            cmp ECX,R9D
            jbe .L_434ea2

            nop
.L_434e80:

            mov EDX,DWORD PTR [RBP+28]
            cmp EDX,2
            ja .L_434ea0

            movzx EAX,BYTE PTR [RBP+24]
            add EDX,1
            mov DWORD PTR [RBP+28],EDX
            test AL,AL
            jne .L_434ed8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434ea0:

            xor EAX,EAX
.L_434ea2:

            add RSP,8
.L_434ea6:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434eb0:

            xor EAX,EAX
.L_434eb2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434eb8:

            cmp EDI,5
            jbe .L_434e80

            lea RDI,QWORD PTR [RDX+4]
            mov RSI,RBP
            call .L_434d60

            test AL,AL
            je .L_434e80

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434ed8:

            xor EDX,EDX
            mov WORD PTR [RBX],DX
            jmp .L_434ea2
.L_434edf:

            nop
.L_434ee0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            cmp RDI,QWORD PTR [RSI+8]
            jb .L_434f00

            mov RAX,QWORD PTR [RSI+16]
            cmp RDI,RAX
            jbe .L_434f18

            nop
            nop
            nop
.L_434f00:

            xor EBP,EBP
.L_434f02:

            add RSP,40
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434f18:

            sub RAX,RDI
            cmp EAX,15
            jbe .L_434f00

            mov R14,RDI
            lea RDI,QWORD PTR [RDI+2]
            mov RBX,RSI
            mov RDX,R14
            call .L_434c20

            test AL,AL
            je .L_434f00

            lea RDI,QWORD PTR [R14+8]
            mov RDX,R14
            mov RSI,RBX
            call .L_434db0

            test AL,AL
            je .L_434f00

            lea RDI,QWORD PTR [R14+10]
            mov RDX,R14
            mov RSI,RBX
            call .L_434db0

            test AL,AL
            je .L_434f00

            movzx R13D,BYTE PTR [R14+4]
            movzx EAX,BYTE PTR [R14+5]
            shl R13D,8
            add R13D,EAX
            movzx EDI,R13W
            call __popcountdi2@PLT

            movzx R12D,BYTE PTR [R14+6]
            mov R15D,EAX
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [R14+7]
            shl R12D,8
            add R12D,EAX
            movzx EDI,R12W
            call __popcountdi2@PLT

            movzx EBP,BYTE PTR [R14+12]
            mov ESI,EAX
            movzx EAX,BYTE PTR [R14+13]
            movzx EDX,BYTE PTR [R14+15]
            add ESI,R15D
            lea R15,QWORD PTR [R14+16]
            mov DWORD PTR [RSP+16],ESI
            mov RDI,RBX
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R14+14]
            movzx EBP,BP
            mov ECX,EBP
            shl EAX,8
            add EAX,EDX
            lea EDX,DWORD PTR [RSI+RSI*1]
            mov RSI,R15
            movzx EAX,AX
            imul ECX,EAX
            mov DWORD PTR [RSP+12],ECX
            call .L_42beb0

            test AL,AL
            mov EBP,EAX
            je .L_434f00

            and R13D,240
            jne .L_435070
.L_434ff2:

            and R12D,240
            je .L_434f02

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            je .L_434f02

            movsxd RAX,DWORD PTR [RSP+20]
            mov R13D,DWORD PTR [RSP+16]
            lea R12,QWORD PTR [R14+6]
            xor R8D,R8D
            lea R15,QWORD PTR [R14+RAX*2+16]
            add R13,R13
            jmp .L_435047
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435030:

            mov R8D,DWORD PTR [RSP+16]
            add R15,R13
            add R8D,1
            cmp DWORD PTR [RSP+12],R8D
            je .L_434f02
.L_435047:

            mov RCX,R15
            mov RDX,R14
            mov RSI,RBX
            mov RDI,R12
            mov DWORD PTR [RSP+16],R8D
            call .L_433cf0

            test AL,AL
            jne .L_435030

            jmp .L_434f00

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435070:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            je .L_434f02

            mov R13D,DWORD PTR [RSP+16]
            lea R12,QWORD PTR [R14+4]
            lea RAX,QWORD PTR [R13+R13*1]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],RAX
            jmp .L_4350a8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435098:

            add R15,QWORD PTR [RSP+24]
            add R13D,1
            cmp DWORD PTR [RSP+12],R13D
            je .L_4350c2
.L_4350a8:

            mov RCX,R15
            mov RDX,R14
            mov RSI,RBX
            mov RDI,R12
            call .L_433cf0

            test AL,AL
            jne .L_435098

            jmp .L_434f00
.L_4350c2:

            movzx R12D,BYTE PTR [R14+6]
            movzx EAX,BYTE PTR [R14+7]
            shl R12D,8
            add R12D,EAX
            jmp .L_434ff2
.L_4350d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4350e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            cmp RDI,QWORD PTR [RSI+8]
            jb .L_435100

            mov RAX,QWORD PTR [RSI+16]
            cmp RDI,RAX
            jbe .L_435118

            nop
            nop
            nop
.L_435100:

            xor R12D,R12D
.L_435103:

            add RSP,40
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435118:

            sub RAX,RDI
            cmp EAX,3
            jbe .L_435100

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_435100

            mov RBP,RDI
            lea RDI,QWORD PTR [RDI+4]
            mov RBX,RSI
            mov RDX,RBP
            call .L_434db0

            test AL,AL
            je .L_435100

            mov RAX,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RBP+6]
            cmp RDX,RAX
            jb .L_435100

            mov RCX,QWORD PTR [RBX+16]
            cmp RDX,RCX
            ja .L_435100

            sub RCX,RDX
            cmp ECX,1
            jbe .L_435100

            movzx R12D,BYTE PTR [RBP+6]
            movzx EDX,BYTE PTR [RBP+7]
            shl R12D,8
            add R12W,DX
            jne .L_435390
.L_43517d:

            lea RDX,QWORD PTR [RBP+8]
            cmp RDX,RAX
            jb .L_435100

            mov RAX,QWORD PTR [RBX+16]
            cmp RDX,RAX
            ja .L_435100

            sub RAX,RDX
            cmp EAX,1
            jbe .L_435100

            movzx R13D,BYTE PTR [RBP+8]
            movzx EAX,BYTE PTR [RBP+9]
            shl R13D,8
            add R13W,AX
            jne .L_4354f0
.L_4351ba:

            lea RDI,QWORD PTR [RBP+10]
            mov RDX,RBP
            mov RSI,RBX
            call .L_434db0

            test AL,AL
            mov R12D,EAX
            je .L_435100

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            movzx ECX,BYTE PTR [RBP+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBP+2]
            shl EAX,16
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            add EAX,EDX
            cmp EAX,65537
            jbe .L_435103

            mov RDX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RBP+12]
            cmp RAX,RDX
            jb .L_435100

            mov RSI,QWORD PTR [RBX+16]
            cmp RAX,RSI
            ja .L_435100

            mov RCX,RSI
            sub RCX,RAX
            cmp ECX,1
            jbe .L_435100

            movzx EAX,BYTE PTR [RBP+12]
            movzx ECX,BYTE PTR [RBP+13]
            shl EAX,8
            add AX,CX
            je .L_435103

            movzx EAX,AX
            lea R14,QWORD PTR [RBP+RAX*1]
            cmp RDX,R14
            ja .L_435360

            cmp RSI,R14
            jb .L_435360

            mov RAX,RSI
            sub RAX,R14
            cmp EAX,1
            jbe .L_435360

            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,ECX
            cmp AX,1
            jne .L_435103

            lea RAX,QWORD PTR [R14+2]
            cmp RDX,RAX
            ja .L_435360

            cmp RSI,RAX
            jb .L_435360

            mov RCX,RSI
            sub RCX,RAX
            cmp ECX,1
            jbe .L_435360

            lea R15,QWORD PTR [R14+4]
            cmp RDX,R15
            ja .L_435360

            cmp RSI,R15
            jb .L_435360

            movzx EAX,BYTE PTR [R14+2]
            movzx EDX,BYTE PTR [R14+3]
            sub RSI,R15
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            lea ECX,DWORD PTR [RDX*4]
            cmp ECX,ESI
            ja .L_435360

            test AX,AX
            je .L_435103

            cmp ESI,3
            jbe .L_435360

            lea R13,QWORD PTR [R14+8]
            lea EAX,DWORD PTR [RDX-1]
            lea RAX,QWORD PTR [R13+RAX*4]
            mov QWORD PTR [RSP],RAX
.L_435300:

            movzx EDX,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [R15+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+3]
            add EAX,EDX
            je .L_4357f1

            mov EAX,EAX
            mov RSI,RBX
            lea RDI,QWORD PTR [R14+RAX*1]
            call .L_434b70

            test AL,AL
            jne .L_4357f1

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_435100

            movzx EDX,BYTE PTR [RBX+24]
            add EAX,1
            mov DWORD PTR [RBX+28],EAX
            test DL,DL
            jne .L_4357de

            nop
.L_435360:

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_435100

            movzx R12D,BYTE PTR [RBX+24]
            add EAX,1
            mov DWORD PTR [RBX+28],EAX
            test R12B,R12B
            je .L_435100

            mov WORD PTR [RBP+12],0
            jmp .L_435103
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435390:

            movzx R12D,R12W
            mov RSI,RBX
            add R12,RBP
            mov RDX,R12
            mov RDI,R12
            call .L_434c20

            test AL,AL
            jne .L_4353e0
.L_4353a9:

            movzx ECX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_4353b0:

            cmp EAX,2
            ja .L_435100

            add EAX,1
            test CL,CL
            mov DWORD PTR [RBX+28],EAX
            je .L_435100

            xor EDX,EDX
            mov WORD PTR [RBP+6],DX
            mov RAX,QWORD PTR [RBX+8]
            jmp .L_43517d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4353e0:

            mov R15,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [R12+2]
            cmp RDX,R15
            mov RAX,R15
            jb .L_4353a9

            mov RCX,QWORD PTR [RBX+16]
            cmp RDX,RCX
            ja .L_4353a9

            mov RSI,RCX
            sub RSI,RDX
            cmp ESI,1
            jbe .L_4353a9

            lea RDX,QWORD PTR [R12+4]
            cmp R15,RDX
            ja .L_4353a9

            cmp RCX,RDX
            jb .L_4353a9

            movzx ESI,BYTE PTR [R12+2]
            movzx EDI,BYTE PTR [R12+3]
            sub RCX,RDX
            shl ESI,8
            add ESI,EDI
            movzx EDI,SI
            lea R8D,DWORD PTR [RDI+RDI*1]
            cmp R8D,ECX
            ja .L_4353a9

            test SI,SI
            je .L_43517d

            cmp ECX,1
            jbe .L_4353a9

            lea R14,QWORD PTR [R12+6]
            lea EAX,DWORD PTR [RDI-1]
            mov R13,RDX
            lea RAX,QWORD PTR [R14+RAX*2]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
.L_435460:

            movzx EDI,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            shl EDI,8
            add DI,AX
            je .L_4354b0

            movzx EDI,DI
            mov RSI,RBX
            add RDI,R12
            call .L_434d60

            test AL,AL
            jne .L_4354b0

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_435100

            movzx ECX,BYTE PTR [RBX+24]
            add EAX,1
            mov DWORD PTR [RBX+28],EAX
            test CL,CL
            je .L_4353b0

            mov BYTE PTR [R13],0
            mov BYTE PTR [R13+1],0
            mov R15,QWORD PTR [RBX+8]
.L_4354b0:

            cmp QWORD PTR [RSP],R14
            mov RAX,R15
            je .L_43517d

            cmp R14,R15
            jb .L_4353a9

            mov RAX,QWORD PTR [RBX+16]
            cmp R14,RAX
            ja .L_4353a9

            sub RAX,R14
            add R13,2
            add R14,2
            cmp EAX,1
            ja .L_435460

            jmp .L_4353a9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4354f0:

            movzx R13D,R13W
            mov RSI,RBX
            add R13,RBP
            mov RDX,R13
            mov RDI,R13
            call .L_434c20

            test AL,AL
            jne .L_435538
.L_435509:

            movzx EDX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_435510:

            cmp EAX,2
            ja .L_435100

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_435100

            xor EAX,EAX
            mov WORD PTR [RBP+8],AX
            jmp .L_4351ba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435538:

            mov R15,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [R13+2]
            cmp RAX,R15
            jb .L_435509

            mov RSI,QWORD PTR [RBX+16]
            cmp RAX,RSI
            ja .L_435509

            mov RDX,RSI
            sub RDX,RAX
            cmp EDX,1
            jbe .L_435509

            lea R9,QWORD PTR [R13+4]
            cmp R15,R9
            ja .L_435509

            cmp RSI,R9
            jb .L_435509

            movzx EDX,BYTE PTR [R13+2]
            movzx ECX,BYTE PTR [R13+3]
            shl EDX,8
            add EDX,ECX
            mov RCX,RSI
            movzx EDI,DX
            sub RCX,R9
            lea R8D,DWORD PTR [RDI+RDI*1]
            cmp R8D,ECX
            ja .L_435509

            test DX,DX
            je .L_4351ba

            cmp ECX,1
            jbe .L_435509

            lea EDX,DWORD PTR [RDI-1]
            lea R14,QWORD PTR [R13+6]
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
.L_4355b0:

            movzx R12D,BYTE PTR [R9]
            movzx EAX,BYTE PTR [R9+1]
            shl R12D,8
            add R12W,AX
            je .L_435720

            movzx R12D,R12W
            add R12,R13
            cmp R15,R12
            ja .L_4356f0

            cmp R12,RSI
            ja .L_4356f0

            mov RAX,RSI
            sub RAX,R12
            cmp EAX,1
            jbe .L_4356f0

            lea RDX,QWORD PTR [R12+2]
            cmp R15,RDX
            ja .L_4356f0

            cmp RSI,RDX
            jb .L_4356f0

            movzx EAX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            shl EAX,8
            add EAX,ECX
            mov RCX,RSI
            movzx EDI,AX
            sub RCX,RDX
            lea R8D,DWORD PTR [RDI+RDI*1]
            cmp R8D,ECX
            ja .L_4356f0

            test AX,AX
            je .L_435720

            cmp RDX,R15
            mov RAX,R15
            jb .L_4356f0

            cmp ECX,1
            jbe .L_4356f0

            lea RCX,QWORD PTR [R12+4]
            mov R15,RDX
            lea EDX,DWORD PTR [RDI-1]
            lea R8,QWORD PTR [RCX+RDX*2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435660:

            movzx EDX,BYTE PTR [R15]
            movzx EDI,BYTE PTR [R15+1]
            shl EDX,8
            add DX,DI
            je .L_4356bf

            movzx EDX,DX
            add RDX,R12
            cmp RAX,RDX
            ja .L_435776

            cmp RDX,RSI
            ja .L_435776

            sub RSI,RDX
            cmp ESI,1
            jbe .L_435776

            movzx EAX,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDI
            cmp AX,2
            je .L_435768

            cmp AX,3
            je .L_4357a8

            cmp AX,1
            je .L_435768
.L_4356bf:

            cmp R8,RCX
            je .L_435720

            mov RAX,QWORD PTR [RBX+8]
            cmp RCX,RAX
            jb .L_4356f0

            mov RSI,QWORD PTR [RBX+16]
            cmp RCX,RSI
            ja .L_4356f0

            mov RDX,RSI
            add R15,2
            sub RDX,RCX
            add RCX,2
            cmp EDX,1
            ja .L_435660

            nop
            nop
            nop
.L_4356f0:

            movzx EDX,BYTE PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+28]
.L_4356f7:

            cmp EAX,2
            ja .L_435100

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_435510

            mov BYTE PTR [R9],0
            mov BYTE PTR [R9+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435720:

            cmp QWORD PTR [RSP+24],R14
            je .L_4351ba

            mov R15,QWORD PTR [RBX+8]
            cmp R14,R15
            jb .L_435509

            mov RSI,QWORD PTR [RBX+16]
            cmp R14,RSI
            ja .L_435509

            mov RAX,RSI
            add R9,2
            sub RAX,R14
            add R14,2
            cmp EAX,1
            ja .L_4355b0

            jmp .L_435509
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435768:

            cmp ESI,3
            seta AL
            test AL,AL
            jne .L_4356bf
.L_435776:

            mov EAX,DWORD PTR [RBX+28]
            movzx EDX,BYTE PTR [RBX+24]
            cmp EAX,2
            ja .L_435100

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBX+28],EAX
            je .L_4356f7

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            jmp .L_4356bf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4357a8:

            cmp ESI,5
            jbe .L_435776

            lea RDI,QWORD PTR [RDX+4]
            mov RSI,RBX
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP],R9
            call .L_433c00

            test AL,AL
            mov R9,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            je .L_435776

            jmp .L_4356bf
.L_4357de:

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            mov BYTE PTR [R15+2],0
            mov BYTE PTR [R15+3],0
.L_4357f1:

            cmp QWORD PTR [RSP],R13
            je .L_435103

            cmp R13,QWORD PTR [RBX+8]
            jb .L_435360

            mov RAX,QWORD PTR [RBX+16]
            cmp R13,RAX
            ja .L_435360

            sub RAX,R13
            add R15,4
            add R13,4
            cmp EAX,3
            jbe .L_435360

            jmp .L_435300
.L_43582b:

            nop
            nop
            nop
            nop
            nop
.L_435830:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_43583e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            cmp EDX,8
            ja .L_435890

            mov ECX,EDX
            mov R12D,EDX
            lea RDX,QWORD PTR [RIP+.L_44c148]
            mov RBX,RDI
            mov RBP,RSI
            movsxd RAX,DWORD PTR [RDX+RCX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_435870:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_435d70

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435890:

            xor EAX,EAX
.L_435892:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            jne .L_436183

            add RSP,104
.L_4358aa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4358b8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_435e50

            cmp AX,2
            jne .L_435890

            call .L_42f6e0

            xor EAX,EAX
            jmp .L_435892
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4358e0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_435890

            call .L_42f8f0

            xor EAX,EAX
            jmp .L_435892
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435900:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_435890

            call .L_42fdf0

            xor EAX,EAX
            jmp .L_435892
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435928:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_435890

            call .L_4309a0

            xor EAX,EAX
            jmp .L_435892
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435950:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_435f30

            cmp AX,3
            je .L_436068

            cmp AX,1
            jne .L_435890

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R13,QWORD PTR [RIP+.L_657760]
            mov QWORD PTR [RSP+24],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_42bd70]
            cmovne R13,RDX
            movzx EDX,BYTE PTR [RDI+5]
            mov QWORD PTR [RSP+16],RAX
            movzx EAX,BYTE PTR [RDI+4]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_435890

            lea EAX,DWORD PTR [RDX-1]
            xor R12D,R12D
            lea R15,QWORD PTR [RIP+.L_657760]
            mov R14D,1
            add RAX,1
            mov QWORD PTR [RSP],RAX
            jmp .L_4359fe
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4359f0:

            add R12,1
            cmp QWORD PTR [RSP],R12
            je .L_435890
.L_4359fe:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov R9D,R12D
            mov R10,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_435db0

            cmp AX,2
            jne .L_4359f0

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_4359f0

            lea EAX,DWORD PTR [RDX-1]
            lea R8,QWORD PTR [R13+4]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R11,QWORD PTR [R13+RAX*2+10]
            nop
            nop
            nop
            nop
            nop
.L_435a50:

            movzx EDX,BYTE PTR [R8+4]
            movzx EAX,BYTE PTR [R8+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            cmp EDX,R9D
            ja .L_4359f0

            movzx ESI,BYTE PTR [R8+2]
            movzx EAX,BYTE PTR [R8+3]
            movzx ECX,BYTE PTR [R8]
            shl ESI,8
            add ESI,EAX
            movzx EAX,BYTE PTR [R8+1]
            shl ECX,8
            movzx ESI,SI
            mov EDI,ESI
            add ECX,EAX
            movzx EAX,CX
            sub EDI,EAX
            add EDX,EDI
            cmp EDX,R9D
            jbe .L_435d80

            lea EDX,DWORD PTR [RSI+1]
            cmp EAX,EDX
            jae .L_435d80

            mov ESI,R14D
            shl ESI,CL
            mov ECX,EAX
            shr ECX,5
            test DWORD PTR [R10+RCX*4+116],ESI
            jne .L_435adc

            mov ECX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435ac0:

            add ECX,1
            cmp EDX,ECX
            jbe .L_435d80

            mov EAX,ECX
            mov ESI,R14D
            shr EAX,5
            shl ESI,CL
            test DWORD PTR [R10+RAX*4+116],ESI
            je .L_435ac0
.L_435adc:

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R9D
            jbe .L_435af9

            lea RDX,QWORD PTR [RBX+R12*2+6]
.L_435af9:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+16]
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R15
            call .L_42da70

            jmp .L_4359f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435b28:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_436058

            cmp AX,3
            je .L_436048

            cmp AX,1
            jne .L_435890

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R13,QWORD PTR [RIP+.L_657760]
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_42bd70]
            cmovne R13,RDX
            movzx EDX,BYTE PTR [RDI+5]
            mov QWORD PTR [RSP+48],RAX
            movzx EAX,BYTE PTR [RDI+4]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_435890

            lea EAX,DWORD PTR [RDX-1]
            xor R12D,R12D
            lea R15,QWORD PTR [RIP+.L_657760]
            mov R14D,1
            add RAX,1
            mov QWORD PTR [RSP],RAX
            jmp .L_435bde
.L_435bd0:

            add R12,1
            cmp QWORD PTR [RSP],R12
            je .L_435890
.L_435bde:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            mov EDI,R12D
            mov R8,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_435e00

            cmp AX,2
            jne .L_435bd0

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_435bd0

            lea EAX,DWORD PTR [RDX-1]
            lea RSI,QWORD PTR [R13+4]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R9,QWORD PTR [R13+RAX*2+10]
            nop
            nop
            nop
            nop
            nop
.L_435c30:

            movzx EDX,BYTE PTR [RSI+4]
            movzx EAX,BYTE PTR [RSI+5]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            cmp EDX,EDI
            ja .L_435bd0

            movzx R10D,BYTE PTR [RSI+2]
            movzx EAX,BYTE PTR [RSI+3]
            movzx ECX,BYTE PTR [RSI]
            shl R10D,8
            add R10D,EAX
            movzx EAX,BYTE PTR [RSI+1]
            shl ECX,8
            movzx R10D,R10W
            mov R11D,R10D
            add ECX,EAX
            movzx EAX,CX
            sub R11D,EAX
            add EDX,R11D
            cmp EDX,EDI
            jbe .L_435d98

            lea EDX,DWORD PTR [R10+1]
            cmp EAX,EDX
            jae .L_435d98

            mov R10D,EAX
            mov R11D,R14D
            shr R10D,5
            shl R11D,CL
            test DWORD PTR [R8+R10*4+116],R11D
            jne .L_435cbd

            mov ECX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_435ca0:

            add ECX,1
            cmp EDX,ECX
            jbe .L_435d98

            mov EAX,ECX
            mov R10D,R14D
            shr EAX,5
            shl R10D,CL
            test DWORD PTR [R8+RAX*4+116],R10D
            je .L_435ca0
.L_435cbd:

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,EDI
            jbe .L_435cd9

            lea RDX,QWORD PTR [RBX+R12*2+6]
.L_435cd9:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+48]
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R15
            call .L_42e0b0

            jmp .L_435bd0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435d08:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_435890

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            lea EDI,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RBX+3]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_435830

            jmp .L_435892
          .byte 0x66
          .byte 0x90
.L_435d70:

            call .L_431180

            xor EAX,EAX
            jmp .L_435892
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435d80:

            add R8,6
            cmp R8,R11
            jne .L_435a50

            jmp .L_4359f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435d98:

            add RSI,6
            cmp R9,RSI
            jne .L_435c30

            jmp .L_435bd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435db0:

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_435dcf

            lea RDX,QWORD PTR [R13+R12*2+4]
.L_435dcf:

            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            mov EDX,R14D
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shl RAX,48
            shr RAX,53
            test DWORD PTR [R10+RAX*4+116],EDX
            jne .L_435adc

            jmp .L_4359f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435e00:

            movzx EAX,BYTE PTR [R13+2]
            movzx EDX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R12D
            jbe .L_435e1f

            lea RDX,QWORD PTR [R13+R12*2+4]
.L_435e1f:

            movzx ECX,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            mov EDX,R14D
            shl ECX,8
            add ECX,EAX
            mov RAX,RCX
            shl EDX,CL
            shl RAX,48
            shr RAX,53
            test DWORD PTR [R8+RAX*4+116],EDX
            jne .L_435cbd

            jmp .L_435bd0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435e50:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R13,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_657760]
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R13
            cmovne RSI,RDX
            call .L_42c490

            jmp .L_435ec8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435e90:

            cmp R8D,2
            jne .L_435f00

            mov ECX,DWORD PTR [RSP+36]
            mov R8D,1
            mov EAX,ECX
            movzx R9D,CX
            shl R8D,CL
            shr EAX,5
            and EAX,2047
            mov EDX,EAX
.L_435eb3:

            mov RDI,QWORD PTR [RBP+8]
            mov EAX,EDX
            test DWORD PTR [RDI+RAX*4+116],R8D
            jne .L_435f10
.L_435ec0:

            mov RDI,R13
            call .L_42c6e0
.L_435ec8:

            mov RDI,R13
            call .L_42c6a0

            test AL,AL
            je .L_435890

            mov R8D,DWORD PTR [RSP+16]
            cmp R8D,1
            jne .L_435e90

            mov RDI,R13
            call .L_426320

            movzx R9D,AX
            mov ECX,EAX
            mov EDX,R9D
            shl R8D,CL
            shr EDX,5
            jmp .L_435eb3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435f00:

            mov R8D,R12D
            xor EDX,EDX
            xor R9D,R9D
            jmp .L_435eb3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435f10:

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl ESI,8
            add ESI,EAX
            add ESI,R9D
            movzx ESI,SI
            call .L_42c250

            jmp .L_435ec0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435f30:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RSI+8]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c500

            test AL,AL
            je .L_435890

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            lea R12,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_426830]
            cmovne R12,RDX
            movzx EDX,BYTE PTR [RBX+7]
            mov QWORD PTR [RSP+16],RAX
            movzx EAX,BYTE PTR [RBX+6]
            mov QWORD PTR [RSP+24],R12
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_435890

            lea RAX,QWORD PTR [RSP+16]
            lea R14D,DWORD PTR [RDX-1]
            lea R13,QWORD PTR [RIP+.L_657760]
            xor R15D,R15D
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RBX+8]
            add R14,1
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435fd8:

            mov RSI,QWORD PTR [RBP+8]
            mov EDX,R15D
            mov RDI,R12
            call .L_42ca40

            test AL,AL
            je .L_436036

            movzx EAX,BYTE PTR [RBX+6]
            movzx EDX,BYTE PTR [RBX+7]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+8]
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RDI+R15*2]
            movzx EAX,AX
            cmp EAX,R15D
            mov RAX,RDX
            mov RDX,R13
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov RDX,QWORD PTR [RSP]
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R13
            call .L_42da70
.L_436036:

            add R15,1
            cmp R14,R15
            jne .L_435fd8

            jmp .L_435890
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436048:

            call .L_42f190

            xor EAX,EAX
            jmp .L_435892
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436058:

            call .L_42e8b0

            xor EAX,EAX
            jmp .L_435892
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436068:

            movzx EAX,BYTE PTR [RDI+6]
            movzx EDX,BYTE PTR [RDI+7]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RSI+8]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c500

            mov EDX,EAX
            xor EAX,EAX
            test DL,DL
            je .L_435892

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            movzx R12D,BYTE PTR [RBX+4]
            movzx R14D,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            movzx R13D,AX
            ja .L_436130
.L_4360bf:

            shl R12D,8
            movzx EAX,R14B
            add EAX,R12D
            test AX,AX
            movzx EDX,AX
            je .L_435890

            lea EAX,DWORD PTR [R13+R13*1]
            sub EDX,1
            lea R12,QWORD PTR [RBX+RAX*1+8]
            lea RAX,QWORD PTR [RBX+RAX*1+12]
            lea RBX,QWORD PTR [RAX+RDX*4]
            nop
            nop
            nop
            nop
.L_4360f0:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            mov EAX,DWORD PTR [RBP+24]
            movzx ESI,SI
            test EAX,EAX
            je .L_436122

            mov RDX,QWORD PTR [RBP+16]
            test RDX,RDX
            je .L_436122

            sub EAX,1
            mov RDI,RBP
            mov DWORD PTR [RBP+24],EAX
            call RDX

            add DWORD PTR [RBP+24],1
.L_436122:

            add R12,4
            cmp RBX,R12
            jne .L_4360f0

            jmp .L_435890
.L_436130:

            lea EAX,DWORD PTR [R13-2]
            lea R15,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RBX+RAX*2+10]
            mov QWORD PTR [RSP],RAX
.L_436141:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            mov RSI,QWORD PTR [RBP+8]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            call .L_42c500

            test AL,AL
            je .L_435890

            add R15,2
            cmp QWORD PTR [RSP],R15
            jne .L_436141

            jmp .L_4360bf
.L_436183:

            call __stack_chk_fail@PLT
.L_436188:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436190:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_4361a1:

            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+32]
            call .L_42f680

            movzx EBX,BYTE PTR [RAX]
            mov R15,RAX
            movzx EAX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R15+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            je .L_436243

            movzx ESI,CX
            movzx EBX,BX
            xor R14D,R14D
            lea R12D,DWORD PTR [RSI-1]
            lea RBP,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_436202
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4361f8:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_436202:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_436217

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_436217:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            add R14,1
            call .L_435830

            cmp R12,R14
            jne .L_4361f8
.L_436243:

            add RSP,8
.L_436247:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_436254:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436260:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_43626e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDX,8
            ja .L_436310

            lea RCX,QWORD PTR [RIP+.L_44c16c]
            mov EDX,EDX
            mov RBX,RDI
            mov RBP,RSI
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x90
.L_4362a0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            mov EAX,0
            je .L_4365f0
.L_4362bb:

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4368ca

            add RSP,72
.L_4362d3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4362e0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_436720

            cmp AX,3
            je .L_4366b0

            cmp AX,1
            je .L_436600

            nop
            nop
            nop
            nop
            nop
            nop
.L_436310:

            xor EAX,EAX
            jmp .L_4362bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436318:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_436330

            cmp AX,2
            jne .L_436310
.L_436330:

            xor EAX,EAX
            cmp DWORD PTR [RBP+16],1
            jne .L_4362bb
.L_436338:

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            mov RAX,QWORD PTR [RBP+8]
            cmovne RDI,RBX
            mov ESI,DWORD PTR [RAX]
            call .L_42c320

            cmp EAX,-1
            setne AL
            jmp .L_4362bb
          .byte 0x90
.L_436370:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436310

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            lea EDI,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RBX+3]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_436260

            jmp .L_4362bb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4363d8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_436838

            cmp AX,3
            je .L_4367f8

            cmp AX,1
            jne .L_436310

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            cmovne RDI,RDX
            mov ESI,DWORD PTR [RAX]
            call .L_42c320

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_436450

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
.L_436450:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],0
            shl EAX,8
            add EAX,EDX
            mov RDX,RSP
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_425f90]
            cmovne RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_42dc30

            jmp .L_4362bb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436498:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436310

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov R12,QWORD PTR [RSI+8]
            shl EAX,8
            mov ESI,DWORD PTR [R12]
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_4362bb

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_436509

            lea RAX,QWORD PTR [RBX+RCX*2+6]
.L_436509:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_657760]
            mov EDI,DWORD PTR [RBP+16]
            shl EDX,8
            add EAX,EDX
            movzx EDX,AX
            add RBX,RDX
            test AX,AX
            cmovne RSI,RBX
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_436310

            lea EAX,DWORD PTR [RDX-1]
            lea R10D,DWORD PTR [RDI-2]
            lea RCX,QWORD PTR [RSI+2]
            lea R8,QWORD PTR [RIP+.L_657760]
            lea R9,QWORD PTR [RSI+RAX*2+4]
            add R10,2
            jmp .L_436575
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436568:

            add RCX,2
            cmp R9,RCX
            je .L_436310
.L_436575:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RSI
            test AX,AX
            cmove RDX,R8
            movzx EAX,BYTE PTR [RDX+2]
            movzx R11D,BYTE PTR [RDX+3]
            shl EAX,8
            add EAX,R11D
            movzx EAX,AX
            cmp EDI,EAX
            jne .L_436568

            cmp EDI,1
            jbe .L_4365e2

            add RDX,4
            mov EBX,1
.L_4365b2:

            cmp EAX,EBX
            mov RBP,R8
            cmova RBP,RDX
            movzx R11D,BYTE PTR [RBP]
            movzx EBP,BYTE PTR [RBP+1]
            shl R11D,8
            add R11D,EBP
            movzx R11D,R11W
            cmp DWORD PTR [R12+RBX*4],R11D
            jne .L_436568

            add RBX,1
            add RDX,2
            cmp R10,RBX
            jne .L_4365b2
.L_4365e2:

            mov EAX,1
            jmp .L_4362bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4365f0:

            cmp DWORD PTR [RSI+16],1
            jne .L_4362bb

            jmp .L_436338
          .byte 0x90
.L_436600:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            cmovne RDI,RDX
            mov ESI,DWORD PTR [RAX]
            call .L_42c320

            movzx EDX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_43664e

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+6]
.L_43664e:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+16]
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_425f90]
            cmovne RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_42e3b0

            jmp .L_4362bb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4366b0:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            lea RCX,QWORD PTR [RDI+RAX*2+4]
            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            lea EAX,DWORD PTR [RSI+RSI*1+2]
            add RAX,RCX
            cmp BYTE PTR [RBP+20],0
            movzx EDI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            je .L_4366f8

            shl EDI,8
            add EDI,EAX
            xor EAX,EAX
            or DI,DX
            jne .L_4362bb
.L_4366f8:

            xor EAX,EAX
            cmp ESI,DWORD PTR [RBP+16]
            jne .L_4362bb

            lea RDX,QWORD PTR [RCX+4]
            lea RDI,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RIP+.L_426770]
            mov R8,RBX
            call .L_42be40

            jmp .L_4362bb
          .byte 0x90
.L_436720:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            lea R15,QWORD PTR [RIP+.L_657760]
            mov R12,R15
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            movzx EAX,BYTE PTR [RDI+6]
            cmovne R15,RDX
            movzx EDX,BYTE PTR [RDI+7]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+9]
            movzx R13D,AX
            add R13,RDI
            test AX,AX
            movzx EAX,BYTE PTR [RDI+8]
            cmove R13,R12
            shl EAX,8
            add EAX,EDX
            movzx R14D,AX
            add R14,RDI
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            mov RDI,R13
            cmove R14,R12
            mov ESI,DWORD PTR [RAX]
            call .L_42c7a0

            movzx EDX,BYTE PTR [RBX+10]
            movzx ECX,BYTE PTR [RBX+11]
            shl EDX,8
            add EDX,ECX
            mov RCX,R12
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_4367a6

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+12]
.L_4367a6:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+24],R15
            mov QWORD PTR [RSP+32],R13
            mov QWORD PTR [RSP+40],R14
            shl EAX,8
            add EAX,EDX
            lea RDX,QWORD PTR [RSP+16]
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_4267e0]
            cmovne RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_42e3b0

            jmp .L_4362bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4367f8:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            mov ESI,DWORD PTR [RSI+16]
            shl EDX,8
            add EDX,EAX
            xor EAX,EAX
            movzx EDX,DX
            cmp ESI,EDX
            jne .L_4362bb

            lea RDX,QWORD PTR [RDI+8]
            lea RCX,QWORD PTR [RIP+.L_426770]
            lea RDI,QWORD PTR [RBP+8]
            mov R8,RBX
            call .L_42be40

            jmp .L_4362bb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436838:

            movzx EAX,BYTE PTR [RDI+4]
            movzx EDX,BYTE PTR [RDI+5]
            lea R12,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RAX,QWORD PTR [RSI+8]
            cmovne R12,RDX
            mov RDI,R12
            mov ESI,DWORD PTR [RAX]
            call .L_42c7a0

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EDX,DX
            cmp EAX,EDX
            jae .L_436889

            mov EAX,EAX
            lea RCX,QWORD PTR [RBX+RAX*2+8]
.L_436889:

            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,RBP
            mov QWORD PTR [RSP+8],R12
            shl EAX,8
            add EAX,EDX
            mov RDX,RSP
            movzx R8D,AX
            add RBX,R8
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_4267e0]
            cmovne RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_42dc30

            jmp .L_4362bb
.L_4368ca:

            call __stack_chk_fail@PLT
.L_4368cf:

            nop
.L_4368d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,40
.L_4368dc:

            movzx EDX,BYTE PTR [RDI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_4369e0

            cmp AX,3
            je .L_436940

            cmp AX,1
            je .L_436930

            xor EAX,EAX
.L_436910:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4369ea

            add RSP,40
.L_436928:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436930:

            call .L_42de80

            jmp .L_436910
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436940:

            mov RDX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RDI+7]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RDI+6]
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov EDX,EAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_436910

            movzx ESI,BYTE PTR [RBX+2]
            movzx EAX,BYTE PTR [RBX+3]
            mov R9,RSP
            movzx ECX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov RDI,RBP
            mov QWORD PTR [RSP+8],RBX
            shl ESI,8
            add ESI,EAX
            lea RAX,QWORD PTR [RIP+.L_426770]
            shl ECX,8
            movzx ESI,SI
            add ECX,EDX
            lea RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            lea EAX,DWORD PTR [RSI+RSI*1]
            movzx ECX,CX
            lea R8,QWORD PTR [RBX+RAX*1+6]
            call .L_426b00

            jmp .L_436910
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4369e0:

            call .L_42df70

            jmp .L_436910
.L_4369ea:

            call __stack_chk_fail@PLT
.L_4369ef:

            nop
.L_4369f0:

            push R12
            lea RCX,QWORD PTR [RIP+.L_44c190]
            push RBP
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_657760]
            push RBX
            mov RBX,RDI
.L_436a08:

            cmp EDX,8
            ja .L_436a40

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436a20:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_436c20

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436a40:

            xor EAX,EAX
.L_436a42:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436a50:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_436c30

            cmp AX,2
            jne .L_436a40

            mov RDX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov EAX,DWORD PTR [RDX+180]
            mov RCX,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RBX+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov ECX,EAX
            xor EAX,EAX
            cmp ECX,-1
            je .L_436a42

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            shl EDX,8
            add EDX,ESI
            movzx EDX,DX
            cmp ECX,EDX
            jae .L_436a42

            lea RAX,QWORD PTR [RBX+RCX*2+6]
            mov RDI,RBP
            movzx ESI,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42d980

            mov EAX,1
            jmp .L_436a42
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436af8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436a40

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_436b15:

            pop RBP
            pop R12
            jmp .L_42fc30
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436b20:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436a40

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_430210
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436b48:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436a40

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_431040
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436b70:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_4368d0
          .byte 0x90
.L_436b80:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_436cd0

            cmp AX,3
            je .L_436cc0

            cmp AX,1
            jne .L_436a40

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42e7b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436bc0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436a40

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov EDI,EDX
            shl EAX,16
            shl EDI,24
            lea EDX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDI,BYTE PTR [RBX+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,RSI
            mov RBX,RAX
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            jmp .L_436a08
          .byte 0x90
.L_436c20:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_436c27:

            pop RBP
            pop R12
            jmp .L_431420
          .byte 0x90
.L_436c30:

            mov RDX,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov EAX,DWORD PTR [RDX+180]
            mov RSI,QWORD PTR [RDX+200]
            movzx EDX,BYTE PTR [RBX+3]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov R12D,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [RBX+2]
            mov ESI,R12D
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov EDX,EAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_436a42

            movzx EAX,BYTE PTR [RBX+4]
            movzx EBX,BYTE PTR [RBX+5]
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBP
            shl EAX,8
            add EBX,EAX
            add EBX,R12D
            movzx EBX,BX
            mov ESI,EBX
            call .L_42d720

            mov RDI,QWORD PTR [RBP+24]
            mov ESI,EBX
            call .L_402c60

            mov EAX,1
            jmp .L_436a42
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436cc0:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_436cc7:

            pop RBP
            pop R12
            jmp .L_42f3f0
          .byte 0x90
.L_436cd0:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42f010
.L_436cdf:

            nop
.L_436ce0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EBP,ESI
            sub RSP,24
.L_436cf3:

            mov RAX,QWORD PTR [RDI+16]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+32]
            call .L_42f680

            mov R15,RAX
            mov EAX,DWORD PTR [RBX+60]
            mov DWORD PTR [RSP+8],EAX
            mov EAX,DWORD PTR [RBX+208]
            mov DWORD PTR [RBX+208],EBP
            movzx EDX,BYTE PTR [R15+3]
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [R15+2]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            test AL,16
            jne .L_436f50
.L_436d3b:

            mov EDI,DWORD PTR [RBX]
            mov DWORD PTR [RBX+60],EAX
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            cmp EDI,1
            mov DWORD PTR [RBX+96],EAX
            je .L_436f28

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_436d73:

            mov ESI,DWORD PTR [RBX+36]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+104],ESI
            mov DWORD PTR [RBX+160],EAX
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            movzx R12D,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl R12D,8
            add R12D,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx R12D,R12W
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R9D,CX
            je .L_436f80

            lea R13D,DWORD PTR [R9-1]
            xor R14D,R14D
            lea RBP,QWORD PTR [RIP+.L_657760]
            add R13,1
            jmp .L_436e27
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436e10:

            add R14,1
            cmp R13,R14
            je .L_436f18

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_436e27:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_436e3c

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_436e3c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,R12D
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            call .L_4369f0

            test AL,AL
            je .L_436e10

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            mov EAX,1
.L_436e6e:

            mov ECX,DWORD PTR [RSP+12]
            cmp EDI,1
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+208],ECX
            mov ECX,DWORD PTR [RSP+8]
            mov DWORD PTR [RBX+60],ECX
            mov DWORD PTR [RBX+96],ECX
            je .L_436f40

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_436eb2:

            mov DWORD PTR [RBX+104],ESI
            mov ESI,DWORD PTR [RSP+8]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+160],ESI
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            add RSP,24
.L_436f06:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436f18:

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            xor EAX,EAX
            jmp .L_436e6e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436f28:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_436d73
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436f40:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_436eb2
          .byte 0x66
          .byte 0x90
.L_436f50:

            movzx EDX,BYTE PTR [R15+4]
            movzx ECX,BYTE PTR [R15+5]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RCX,QWORD PTR [R15+RDX*2+6]
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            shl EDX,16
            add EAX,EDX
            jmp .L_436d3b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436f80:

            xor EAX,EAX
            jmp .L_436e6e
.L_436f87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436f90:

            push R14
            lea RCX,QWORD PTR [RIP+.L_44c1b4]
            push R13
            push R12
            push RBP
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_657760]
            push RBX
            mov RBX,RDI
.L_436fac:

            cmp EDX,9
            ja .L_436fe0

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436fc0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_437218

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436fe0:

            xor EAX,EAX
.L_436fe2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436ff0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_437280

            cmp AX,2
            jne .L_436fe0

            mov R13,QWORD PTR [RBP+24]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov EAX,DWORD PTR [R13+180]
            lea R12,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R13+200]
            shl R12,2
            mov ESI,DWORD PTR [RAX+R12*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov R14D,EAX
            xor EAX,EAX
            cmp R14D,-1
            je .L_436fe2

            movzx EDX,BYTE PTR [RBX+6]
            movzx ECX,BYTE PTR [RBX+7]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            cmp R14D,EDX
            jae .L_436fe2

            movzx EDI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            imul R14D,EAX
            mov R9,QWORD PTR [R13+216]
            mov EDX,DWORD PTR [RBP+32]
            mov RSI,QWORD PTR [RBP+8]
            lea RDI,QWORD PTR [RBX+4]
            mov RCX,RBX
            lea R8,QWORD PTR [RBX+R14*2+8]
            add R9,R12
            call .L_4316f0

            add DWORD PTR [R13+180],1
            mov EAX,1
            jmp .L_436fe2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4370c8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_437268

            cmp AX,2
            jne .L_436fe0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_4370ef:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_432300
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437100:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436fe0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_432550
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437130:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436fe0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_432980
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437160:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436fe0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_432b50
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437190:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_436fe0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_432db0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4371c0:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_4368d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4371d8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_437328

            cmp AX,3
            je .L_437310

            cmp AX,1
            jne .L_436fe0

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_42e7b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437218:

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov EDI,EDX
            shl EAX,16
            shl EDI,24
            lea EDX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDI,BYTE PTR [RBX+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,RSI
            mov RBX,RAX
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            jmp .L_436fac
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437268:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_43726f:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_432080
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437280:

            mov R12,QWORD PTR [RBP+24]
            movzx EDX,BYTE PTR [RBX+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov EAX,DWORD PTR [R12+180]
            lea R13,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R12+200]
            shl R13,2
            mov ESI,DWORD PTR [RAX+R13*1]
            movzx EAX,BYTE PTR [RBX+2]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_42c320

            mov EDX,EAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_436fe2

            mov R9,QWORD PTR [R12+216]
            mov EDX,DWORD PTR [RBP+32]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,QWORD PTR [RBP+8]
            lea R8,QWORD PTR [RBX+6]
            mov RCX,RBX
            add R9,R13
            call .L_4316f0

            add DWORD PTR [R12+180],1
            mov EAX,1
            jmp .L_436fe2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437310:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_437317:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_42f3f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437328:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_42f010
.L_43733b:

            nop
            nop
            nop
            nop
            nop
.L_437340:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EBP,ESI
            sub RSP,24
.L_437353:

            mov RAX,QWORD PTR [RDI+16]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+40]
            call .L_42f680

            mov R15,RAX
            mov EAX,DWORD PTR [RBX+60]
            mov DWORD PTR [RSP+8],EAX
            mov EAX,DWORD PTR [RBX+208]
            mov DWORD PTR [RBX+208],EBP
            movzx EDX,BYTE PTR [R15+3]
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [R15+2]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            test AL,16
            jne .L_4375b0
.L_43739b:

            mov EDI,DWORD PTR [RBX]
            mov DWORD PTR [RBX+60],EAX
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            cmp EDI,1
            mov DWORD PTR [RBX+96],EAX
            je .L_437588

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_4373d3:

            mov ESI,DWORD PTR [RBX+36]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+104],ESI
            mov DWORD PTR [RBX+160],EAX
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            movzx R12D,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl R12D,8
            add R12D,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx R12D,R12W
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx R9D,CX
            je .L_4375e0

            lea R13D,DWORD PTR [R9-1]
            xor R14D,R14D
            lea RBP,QWORD PTR [RIP+.L_657760]
            add R13,1
            jmp .L_437487
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437470:

            add R14,1
            cmp R13,R14
            je .L_437578

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_437487:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43749c

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_43749c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,R12D
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            call .L_436f90

            test AL,AL
            je .L_437470

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            mov EAX,1
.L_4374ce:

            mov ECX,DWORD PTR [RSP+12]
            cmp EDI,1
            mov QWORD PTR [RBX+88],RBX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+208],ECX
            mov ECX,DWORD PTR [RSP+8]
            mov DWORD PTR [RBX+60],ECX
            mov DWORD PTR [RBX+96],ECX
            je .L_4375a0

            movzx EDX,BYTE PTR [RBX+40]
            mov BYTE PTR [RBX+100],0
.L_437512:

            mov DWORD PTR [RBX+104],ESI
            mov ESI,DWORD PTR [RSP+8]
            mov BYTE PTR [RBX+101],DL
            mov QWORD PTR [RBX+152],RBX
            mov QWORD PTR [RBX+192],0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov DWORD PTR [RBX+160],ESI
            mov BYTE PTR [RBX+164],1
            mov BYTE PTR [RBX+165],1
            mov DWORD PTR [RBX+168],4294967295
            add RSP,24
.L_437566:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437578:

            mov EDI,DWORD PTR [RBX]
            mov ESI,DWORD PTR [RBX+36]
            xor EAX,EAX
            jmp .L_4374ce
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437588:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_4373d3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4375a0:

            mov BYTE PTR [RBX+100],1
            mov EDX,1
            jmp .L_437512
          .byte 0x66
          .byte 0x90
.L_4375b0:

            movzx EDX,BYTE PTR [R15+4]
            movzx ECX,BYTE PTR [R15+5]
            shl EDX,8
            add EDX,ECX
            movzx EDX,DX
            lea RCX,QWORD PTR [R15+RDX*2+6]
            movzx EDX,BYTE PTR [RCX]
            movzx ECX,BYTE PTR [RCX+1]
            shl EDX,8
            add EDX,ECX
            shl EDX,16
            add EAX,EDX
            jmp .L_43739b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4375e0:

            xor EAX,EAX
            jmp .L_4374ce
.L_4375e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4375f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            mov QWORD PTR [RSP+48],RDI
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_437a7b

            cmp AX,3
            je .L_43792b

            cmp AX,1
            je .L_43763d
.L_43762c:

            add RSP,104
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43763d:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov RSI,RDI
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RSI
            mov RSI,QWORD PTR [R14+16]
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43762c

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+64],0
            lea RDI,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+72],RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4376a0:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+64]
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EAX,ESI
            jbe .L_4376c2

            mov RAX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RAX+RSI*2+6]
.L_4376c2:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+48]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDX,RAX
            movzx ECX,BYTE PTR [RDX]
            mov RDI,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RDI+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_437903

            lea EDX,DWORD PTR [RSI-1]
            add RDI,2
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+56],RDI
            mov R13,R14
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+40],RSI
            nop
            nop
            nop
            nop
            nop
.L_437730:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+56]
            shl EAX,8
            add EAX,EDX
            lea RCX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            lea RDX,QWORD PTR [RSI+RDI*2]
            cmp EAX,EDI
            mov RAX,RDX
            mov RDX,RCX
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RCX
            xor R15D,R15D
            lea RSI,QWORD PTR [RDX+4]
            movzx EBX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            mov QWORD PTR [RSP],RSI
            movzx ESI,BYTE PTR [RDX+3]
            shl EBX,8
            shl EAX,8
            add EBX,ESI
            add AX,CX
            movzx EDI,BX
            mov DWORD PTR [RSP+8],EDI
            je .L_4377d6

            movzx ECX,AX
            mov RBP,QWORD PTR [R13+16]
            cmp ECX,1
            lea R15D,DWORD PTR [RCX+RCX*1-2]
            je .L_4377d6

            sub ECX,2
            lea R14,QWORD PTR [RDX+4]
            lea R12,QWORD PTR [RDX+RCX*2+6]
            nop
.L_4377c0:

            xor EDX,EDX
            mov RSI,R14
            mov RDI,RBP
            add R14,2
            call .L_426750

            cmp R12,R14
            jne .L_4377c0
.L_4377d6:

            test BX,BX
            je .L_4378dd

            mov EAX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            sub EAX,1
            lea R14,QWORD PTR [RSI+R15*1+2]
            lea RAX,QWORD PTR [RSI+RAX*4+6]
            add R15,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437800:

            mov ECX,DWORD PTR [R13+8360]
            movzx EBX,BYTE PTR [R14]
            movzx EBP,BYTE PTR [R14+1]
            test ECX,ECX
            je .L_4378d0

            cmp QWORD PTR [R13+40],0
            je .L_4378d0

            mov R12,QWORD PTR [R13+32]
            call .L_4257d0

            cmp R12,RAX
            je .L_4378d0

            shl EBX,8
            movzx ECX,BPL
            mov R12D,1
            add ECX,EBX
            movzx EBP,CX
            shl R12D,CL
            mov EAX,EBP
            shr EAX,5
            lea RBX,QWORD PTR [R13+RAX*4]
            test DWORD PTR [RBX+164],R12D
            jne .L_4378d0

            mov R8,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4257d0

            sub DWORD PTR [R13+8360],1
            mov QWORD PTR [R13+24],RAX
            mov ESI,EBP
            mov QWORD PTR [R13+16],RAX
            mov QWORD PTR [R13+8],RAX
            mov RDI,R13
            call QWORD PTR [R13+40]

            add DWORD PTR [R13+8360],1
            cmp BYTE PTR [R13+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R13+8],R8
            mov QWORD PTR [R13+16],RCX
            mov QWORD PTR [R13+24],RDX
            jne .L_4378d0

            or DWORD PTR [RBX+164],R12D
            nop
            nop
            nop
            nop
.L_4378d0:

            add R14,4
            cmp R14,R15
            jne .L_437800
.L_4378dd:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+40],RAX
            je .L_437900

            mov RDI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            jmp .L_437730
.L_437900:

            mov R14,R13
.L_437903:

            add QWORD PTR [RSP+64],1
            mov RAX,QWORD PTR [RSP+64]
            cmp QWORD PTR [RSP+72],RAX
            je .L_43762c

            mov RSI,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RSI+4]
            movzx EDX,BYTE PTR [RSI+5]
            jmp .L_4376a0
.L_43792b:

            mov RBX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [RIP+.L_657760]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDX,BYTE PTR [RBX+7]
            lea R15,QWORD PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            mov RSI,RBX
            movzx EBX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RSI+5]
            shl EAX,8
            add EAX,EDX
            shl EBX,8
            movzx EDX,AX
            test AX,AX
            lea EDI,DWORD PTR [RDX+RDX*1]
            mov QWORD PTR [RSP+8],RDI
            lea EDI,DWORD PTR [RBX+RCX*1]
            movzx ESI,DI
            mov WORD PTR [RSP],DI
            mov DWORD PTR [RSP+16],ESI
            jne .L_437dab
.L_43799b:

            cmp WORD PTR [RSP],0
            je .L_43762c

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RSP+16]
            lea R13,QWORD PTR [R15+RAX*1+2]
            lea ECX,DWORD PTR [RDI-1]
            lea RAX,QWORD PTR [R15+RAX*1+6]
            lea R12,QWORD PTR [RAX+RCX*4]
.L_4379c0:

            mov EAX,DWORD PTR [R14+8360]
            movzx EBX,BYTE PTR [R13]
            movzx EBP,BYTE PTR [R13+1]
            test EAX,EAX
            je .L_437a69

            cmp QWORD PTR [R14+40],0
            je .L_437a69

            mov R15,QWORD PTR [R14+32]
            call .L_4257d0

            cmp R15,RAX
            je .L_437a69

            shl EBX,8
            movzx ECX,BPL
            mov EDX,1
            add ECX,EBX
            movzx EBX,CX
            shl EDX,CL
            mov EAX,EBX
            shr EAX,5
            test DWORD PTR [R14+RAX*4+164],EDX
            jne .L_437a69

            mov RDX,QWORD PTR [R14+8]
            mov R15,QWORD PTR [R14+16]
            mov RBP,QWORD PTR [R14+24]
            mov QWORD PTR [RSP],RDX
            call .L_4257d0

            sub DWORD PTR [R14+8360],1
            mov ESI,EBX
            mov RDI,R14
            mov QWORD PTR [R14+24],RAX
            mov QWORD PTR [R14+16],RAX
            mov QWORD PTR [R14+8],RAX
            call QWORD PTR [R14+40]

            mov RDX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [R14+48]
            mov ESI,EBX
            add DWORD PTR [R14+8360],1
            mov QWORD PTR [R14+16],R15
            mov QWORD PTR [R14+24],RBP
            mov QWORD PTR [R14+8],RDX
            call .L_42c250
.L_437a69:

            add R13,4
            cmp R12,R13
            jne .L_4379c0

            jmp .L_43762c
.L_437a7b:

            mov R15,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RSI+16]
            mov RBX,RDI
            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            movzx EAX,BYTE PTR [R15+6]
            cmove RDX,RBX
            mov QWORD PTR [RSP+80],RDX
            movzx EDX,BYTE PTR [R15+7]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43762c

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+40],RBX
            lea RDI,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+88],RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437b10:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+72]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+40]
            movzx EAX,AX
            cmp EAX,ESI
            jbe .L_437b30

            mov RAX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RAX+RSI*2+8]
.L_437b30:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+48]
            test AX,AX
            cmove RDX,QWORD PTR [RSP+40]
            movzx ECX,BYTE PTR [RDX]
            mov RDI,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RDI+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_437d83

            lea EDX,DWORD PTR [RSI-1]
            add RDI,2
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+64],RDI
            mov R13,R14
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+56],RSI
            nop
            nop
            nop
            nop
.L_437b98:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+64]
            movzx EAX,AX
            cmp EAX,ESI
            lea RDX,QWORD PTR [RDX+RSI*2]
            mov RAX,RDX
            mov RDX,RDI
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RDI
            xor R15D,R15D
            movzx EBX,BYTE PTR [RDX+2]
            movzx EAX,BYTE PTR [RDX]
            lea RDI,QWORD PTR [RDX+4]
            movzx ESI,BYTE PTR [RDX+3]
            movzx ECX,BYTE PTR [RDX+1]
            mov QWORD PTR [RSP],RDI
            shl EBX,8
            shl EAX,8
            add EBX,ESI
            add AX,CX
            movzx EDI,BX
            mov DWORD PTR [RSP+8],EDI
            je .L_437c5c

            movzx ECX,AX
            mov RBP,QWORD PTR [R13+16]
            cmp ECX,1
            lea R15D,DWORD PTR [RCX+RCX*1-2]
            je .L_437c5c

            sub ECX,2
            lea R14,QWORD PTR [RDX+4]
            mov WORD PTR [RSP+16],BX
            lea R12,QWORD PTR [RDX+RCX*2+6]
            mov RBX,R14
            mov R14,R12
            mov R12,RBP
            mov RBP,QWORD PTR [RSP+80]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437c40:

            mov RSI,RBX
            mov RDX,RBP
            mov RDI,R12
            add RBX,2
            call .L_426810

            cmp R14,RBX
            jne .L_437c40

            movzx EBX,WORD PTR [RSP+16]
.L_437c5c:

            test BX,BX
            je .L_437d5d

            mov EAX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            sub EAX,1
            lea R14,QWORD PTR [RSI+R15*1+2]
            lea RAX,QWORD PTR [RSI+RAX*4+6]
            add R15,RAX
            nop
            nop
            nop
.L_437c80:

            mov EDX,DWORD PTR [R13+8360]
            movzx EBX,BYTE PTR [R14]
            movzx EBP,BYTE PTR [R14+1]
            test EDX,EDX
            je .L_437d50

            cmp QWORD PTR [R13+40],0
            je .L_437d50

            mov R12,QWORD PTR [R13+32]
            call .L_4257d0

            cmp R12,RAX
            je .L_437d50

            shl EBX,8
            movzx ECX,BPL
            mov R12D,1
            add ECX,EBX
            movzx EBP,CX
            shl R12D,CL
            mov EAX,EBP
            shr EAX,5
            lea RBX,QWORD PTR [R13+RAX*4]
            test DWORD PTR [RBX+164],R12D
            jne .L_437d50

            mov R8,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4257d0

            sub DWORD PTR [R13+8360],1
            mov QWORD PTR [R13+24],RAX
            mov ESI,EBP
            mov QWORD PTR [R13+16],RAX
            mov QWORD PTR [R13+8],RAX
            mov RDI,R13
            call QWORD PTR [R13+40]

            add DWORD PTR [R13+8360],1
            cmp BYTE PTR [R13+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R13+8],R8
            mov QWORD PTR [R13+16],RCX
            mov QWORD PTR [R13+24],RDX
            jne .L_437d50

            or DWORD PTR [RBX+164],R12D
            nop
            nop
            nop
            nop
.L_437d50:

            add R14,4
            cmp R15,R14
            jne .L_437c80
.L_437d5d:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+56],RAX
            je .L_437d80

            mov RDI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            jmp .L_437b98
.L_437d80:

            mov R14,R13
.L_437d83:

            add QWORD PTR [RSP+72],1
            mov RAX,QWORD PTR [RSP+72]
            cmp QWORD PTR [RSP+88],RAX
            je .L_43762c

            mov RSI,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RSI+6]
            movzx EDX,BYTE PTR [RSI+7]
            jmp .L_437b10
.L_437dab:

            cmp EDX,1
            mov R13,QWORD PTR [R14+16]
            je .L_43799b

            mov RDI,QWORD PTR [RSP+48]
            lea EAX,DWORD PTR [RDX-2]
            lea RBP,QWORD PTR [RIP+.L_657760]
            mov QWORD PTR [RSP+24],R14
            lea RBX,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+RAX*2+10]
            mov R14,RBX
            mov RBX,RDI
            nop
            nop
            nop
            nop
            nop
.L_437de0:

            movzx EAX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            mov RSI,R13
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,RBP
            add R14,2
            call .L_433df0

            cmp R12,R14
            jne .L_437de0

            mov R14,QWORD PTR [RSP+24]
            jmp .L_43799b
.L_437e16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437e20:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,168
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            mov QWORD PTR [RSP+96],RDI
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_4384c9

            cmp AX,3
            je .L_438228

            cmp AX,1
            je .L_437e73
.L_437e5f:

            add RSP,168
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_437e73:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            mov RSI,RDI
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RSI
            mov RSI,QWORD PTR [R15+16]
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_437e5f

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+104],0
            add RCX,1
            mov QWORD PTR [RSP+112],RCX
            nop
.L_437ed0:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+104]
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EAX,ESI
            jbe .L_437ef2

            mov RAX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RAX+RSI*2+6]
.L_437ef2:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+96]
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDX,RAX
            movzx ECX,BYTE PTR [RDX]
            mov RBX,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RBX+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_438200

            lea EDX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+24],0
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+80],RSI
            lea RSI,QWORD PTR [RBX+2]
            mov QWORD PTR [RSP+88],RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437f60:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RIP+.L_657760]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+88]
            mov R13,QWORD PTR [R15+8]
            movzx EAX,AX
            cmp EAX,ESI
            lea RDX,QWORD PTR [RDX+RSI*2]
            mov RAX,RDX
            mov RDX,RCX
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RCX
            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ECX,SI
            lea EBP,DWORD PTR [RCX+RCX*1+2]
            add RBP,RDX
            movzx R12D,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl R12D,8
            lea EDI,DWORD PTR [R12+RAX*1]
            movzx EAX,DI
            mov WORD PTR [RSP+40],DI
            mov DWORD PTR [RSP+72],EAX
            add EAX,EAX
            test DI,DI
            mov EDI,2
            cmove RAX,RDI
            add RAX,RBP
            movzx EDI,BYTE PTR [RAX]
            movzx R9D,BYTE PTR [RAX+1]
            shl EDI,8
            add EDI,R9D
            mov WORD PTR [RSP],DI
            movzx EDI,DI
            lea EBX,DWORD PTR [RDI+RDI*1+2]
            mov DWORD PTR [RSP+8],EDI
            add RBX,RAX
            add RAX,2
            lea RDI,QWORD PTR [RBX+2]
            movzx R9D,BYTE PTR [RBX+1]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RDX+2]
            mov QWORD PTR [RSP+56],RDI
            movzx EDI,BYTE PTR [RBX]
            shl EDI,8
            add EDI,R9D
            test SI,SI
            mov WORD PTR [RSP+54],DI
            movzx EDI,DI
            mov DWORD PTR [RSP+64],EDI
            je .L_438066

            sub ECX,1
            mov R12,RAX
            lea R14,QWORD PTR [RDX+RCX*2+4]
            nop
            nop
            nop
            nop
.L_438050:

            xor EDX,EDX
            mov RSI,R12
            mov RDI,R13
            add R12,2
            call .L_426750

            cmp R14,R12
            jne .L_438050
.L_438066:

            cmp WORD PTR [RSP+40],0
            je .L_4380a6

            mov EAX,DWORD PTR [RSP+72]
            mov R12,QWORD PTR [R15+16]
            cmp EAX,1
            je .L_4380a6

            sub EAX,2
            lea R13,QWORD PTR [RBP+2]
            lea RBP,QWORD PTR [RBP+RAX*2+4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438090:

            xor EDX,EDX
            mov RSI,R13
            mov RDI,R12
            add R13,2
            call .L_426750

            cmp RBP,R13
            jne .L_438090
.L_4380a6:

            cmp WORD PTR [RSP],0
            mov RBP,QWORD PTR [R15+24]
            je .L_4380de

            mov EAX,DWORD PTR [RSP+8]
            mov R13,QWORD PTR [RSP+16]
            sub EAX,1
            lea R12,QWORD PTR [R13+RAX*2+2]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4380c8:

            xor EDX,EDX
            mov RSI,R13
            mov RDI,RBP
            add R13,2
            call .L_426750

            cmp R13,R12
            jne .L_4380c8
.L_4380de:

            cmp WORD PTR [RSP+54],0
            je .L_4381dd

            mov EAX,DWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            add RBX,4
            sub EAX,1
            lea R14,QWORD PTR [RSI+RAX*4+6]
            nop
.L_438100:

            mov ECX,DWORD PTR [R15+8360]
            movzx EBP,BYTE PTR [RBX]
            movzx R12D,BYTE PTR [RBX+1]
            test ECX,ECX
            je .L_4381d0

            cmp QWORD PTR [R15+40],0
            je .L_4381d0

            mov R13,QWORD PTR [R15+32]
            call .L_4257d0

            cmp R13,RAX
            je .L_4381d0

            shl EBP,8
            movzx ECX,R12B
            mov R13D,1
            add ECX,EBP
            movzx R12D,CX
            shl R13D,CL
            mov EAX,R12D
            shr EAX,5
            lea RBP,QWORD PTR [R15+RAX*4]
            test DWORD PTR [RBP+164],R13D
            jne .L_4381d0

            mov R8,QWORD PTR [R15+8]
            mov RCX,QWORD PTR [R15+16]
            mov RDX,QWORD PTR [R15+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4257d0

            sub DWORD PTR [R15+8360],1
            mov QWORD PTR [R15+24],RAX
            mov ESI,R12D
            mov QWORD PTR [R15+16],RAX
            mov QWORD PTR [R15+8],RAX
            mov RDI,R15
            call QWORD PTR [R15+40]

            add DWORD PTR [R15+8360],1
            cmp BYTE PTR [R15+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R15+8],R8
            mov QWORD PTR [R15+16],RCX
            mov QWORD PTR [R15+24],RDX
            jne .L_4381d0

            or DWORD PTR [RBP+164],R13D
            nop
            nop
            nop
.L_4381d0:

            add RBX,4
            cmp R14,RBX
            jne .L_438100
.L_4381dd:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+80],RAX
            je .L_438200

            mov RCX,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            jmp .L_437f60
.L_438200:

            add QWORD PTR [RSP+104],1
            mov RAX,QWORD PTR [RSP+104]
            cmp QWORD PTR [RSP+112],RAX
            je .L_437e5f

            mov RCX,QWORD PTR [RSP+96]
            movzx EAX,BYTE PTR [RCX+4]
            movzx EDX,BYTE PTR [RCX+5]
            jmp .L_437ed0
.L_438228:

            mov R12,QWORD PTR [RSP+96]
            lea RBX,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RSI+16]
            movzx EAX,BYTE PTR [R12+2]
            movzx EDX,BYTE PTR [R12+3]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RBP,QWORD PTR [R12+RAX*2+4]
            movzx EAX,BYTE PTR [RBP]
            movzx ECX,BYTE PTR [RBP+1]
            lea RDX,QWORD PTR [RBP+2]
            shl EAX,8
            add AX,CX
            cmove RDX,RBX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R12
            test AX,AX
            cmove RDI,RBX
            call .L_433df0

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            mov R13,QWORD PTR [R15+8]
            shl EAX,8
            add EAX,EDX
            mov WORD PTR [RSP+24],AX
            movzx EAX,AX
            mov DWORD PTR [RSP+72],EAX
            lea EAX,DWORD PTR [RAX+RAX*1+2]
            add RAX,RBP
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add ECX,EDX
            mov WORD PTR [RSP],CX
            movzx ECX,CX
            lea R14D,DWORD PTR [RCX+RCX*1+2]
            mov DWORD PTR [RSP+8],ECX
            lea RCX,QWORD PTR [RAX+R14*1]
            add RAX,2
            mov QWORD PTR [RSP+16],RAX
            movzx EAX,BYTE PTR [R12+2]
            movzx EDX,BYTE PTR [RCX]
            lea RSI,QWORD PTR [RCX+2]
            mov QWORD PTR [RSP+32],RCX
            movzx ECX,BYTE PTR [RCX+1]
            mov QWORD PTR [RSP+40],RSI
            shl EAX,8
            shl EDX,8
            lea ESI,DWORD PTR [RDX+RCX*1]
            movzx EDX,BYTE PTR [R12+3]
            movzx ECX,SI
            mov WORD PTR [RSP+54],SI
            mov DWORD PTR [RSP+56],ECX
            lea RCX,QWORD PTR [R12+4]
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            je .L_438360

            lea EAX,DWORD PTR [RDX-1]
            mov R14,RCX
            mov RCX,R12
            mov QWORD PTR [RSP+64],RBP
            mov RBP,R14
            mov R14,RCX
            lea R12,QWORD PTR [R12+RAX*2+6]
.L_438330:

            movzx EAX,BYTE PTR [RBP]
            movzx ECX,BYTE PTR [RBP+1]
            mov RSI,R13
            shl EAX,8
            add EAX,ECX
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBX
            add RBP,2
            call .L_433df0

            cmp R12,RBP
            jne .L_438330

            mov RBP,QWORD PTR [RSP+64]
.L_438360:

            cmp WORD PTR [RSP+24],0
            je .L_4383a7

            mov EAX,DWORD PTR [RSP+72]
            mov RBX,QWORD PTR [R15+16]
            cmp EAX,1
            je .L_4383a7

            sub EAX,2
            mov R13,QWORD PTR [RSP+96]
            lea R12,QWORD PTR [RBP+4]
            lea RBP,QWORD PTR [RBP+RAX*2+6]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438390:

            mov RSI,R12
            mov RDX,R13
            mov RDI,RBX
            add R12,2
            call .L_429060

            cmp RBP,R12
            jne .L_438390
.L_4383a7:

            cmp WORD PTR [RSP],0
            mov RBX,QWORD PTR [R15+24]
            je .L_4383e7

            mov EAX,DWORD PTR [RSP+8]
            mov R12,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RSP+96]
            sub EAX,1
            lea RBP,QWORD PTR [R12+RAX*2+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383d0:

            mov RSI,R12
            mov RDX,R13
            mov RDI,RBX
            add R12,2
            call .L_429060

            cmp RBP,R12
            jne .L_4383d0
.L_4383e7:

            cmp WORD PTR [RSP+54],0
            je .L_437e5f

            mov EAX,DWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+40]
            sub EAX,1
            add R8,4
            lea R12,QWORD PTR [RCX+RAX*4+6]
            mov RBX,R8
.L_438410:

            mov EAX,DWORD PTR [R15+8360]
            movzx EBP,BYTE PTR [RBX]
            movzx R13D,BYTE PTR [RBX+1]
            test EAX,EAX
            je .L_4384b7

            cmp QWORD PTR [R15+40],0
            je .L_4384b7

            mov R14,QWORD PTR [R15+32]
            call .L_4257d0

            cmp R14,RAX
            je .L_4384b7

            shl EBP,8
            movzx ECX,R13B
            mov EDX,1
            add ECX,EBP
            movzx EBP,CX
            shl EDX,CL
            mov EAX,EBP
            shr EAX,5
            test DWORD PTR [R15+RAX*4+164],EDX
            jne .L_4384b7

            mov RDX,QWORD PTR [R15+8]
            mov R14,QWORD PTR [R15+16]
            mov R13,QWORD PTR [R15+24]
            mov QWORD PTR [RSP],RDX
            call .L_4257d0

            sub DWORD PTR [R15+8360],1
            mov ESI,EBP
            mov RDI,R15
            mov QWORD PTR [R15+24],RAX
            mov QWORD PTR [R15+16],RAX
            mov QWORD PTR [R15+8],RAX
            call QWORD PTR [R15+40]

            mov RDX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [R15+48]
            mov ESI,EBP
            add DWORD PTR [R15+8360],1
            mov QWORD PTR [R15+16],R14
            mov QWORD PTR [R15+24],R13
            mov QWORD PTR [R15+8],RDX
            call .L_42c250
.L_4384b7:

            add RBX,4
            cmp R12,RBX
            jne .L_438410

            jmp .L_437e5f
.L_4384c9:

            mov R14,QWORD PTR [RSP+96]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RSI+16]
            mov RBX,RDI
            movzx EAX,BYTE PTR [R14+2]
            movzx EDX,BYTE PTR [R14+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            movzx EAX,BYTE PTR [R14+6]
            cmove RDX,RBX
            mov QWORD PTR [RSP+128],RDX
            movzx EDX,BYTE PTR [R14+7]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            movzx EAX,BYTE PTR [R14+8]
            cmove RDX,RBX
            mov QWORD PTR [RSP+144],RDX
            movzx EDX,BYTE PTR [R14+9]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R14
            test AX,AX
            movzx EAX,BYTE PTR [R14+10]
            cmove RDX,RBX
            mov QWORD PTR [RSP+104],RDX
            movzx EDX,BYTE PTR [R14+11]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_437e5f

            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+88],RBX
            add RCX,1
            mov QWORD PTR [RSP+152],RCX
            nop
            nop
            nop
            nop
            nop
.L_4385a8:

            shl EAX,8
            mov RCX,QWORD PTR [RSP+136]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+88]
            movzx EAX,AX
            cmp EAX,ECX
            jbe .L_4385cb

            mov RAX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RAX+RCX*2+12]
.L_4385cb:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+96]
            test AX,AX
            cmove RDX,QWORD PTR [RSP+88]
            movzx ECX,BYTE PTR [RDX]
            mov RBX,RDX
            mov QWORD PTR [RSP+32],RDX
            movzx EAX,BYTE PTR [RBX+1]
            mov EDX,ECX
            shl EDX,8
            add EDX,EAX
            test DX,DX
            movzx ESI,DX
            je .L_4388f0

            lea EDX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+24],0
            lea RSI,QWORD PTR [RDX+1]
            mov EDX,EAX
            mov EAX,ECX
            mov QWORD PTR [RSP+112],RSI
            lea RSI,QWORD PTR [RBX+2]
            mov QWORD PTR [RSP+120],RSI
            nop
            nop
            nop
            nop
.L_438630:

            shl EAX,8
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+88]
            add EAX,EDX
            mov RDX,QWORD PTR [RSP+120]
            mov R13,QWORD PTR [R15+8]
            movzx EAX,AX
            cmp EAX,ESI
            lea RDX,QWORD PTR [RDX+RSI*2]
            mov RAX,RDX
            mov RDX,RDI
            cmova RDX,RAX
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,QWORD PTR [RSP+32]
            test AX,AX
            cmove RDX,RDI
            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            shl ESI,8
            add ESI,EAX
            movzx ECX,SI
            lea EBP,DWORD PTR [RCX+RCX*1+2]
            add RBP,RDX
            movzx R12D,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            shl R12D,8
            lea EDI,DWORD PTR [R12+RAX*1]
            movzx EAX,DI
            mov WORD PTR [RSP+40],DI
            mov DWORD PTR [RSP+80],EAX
            add EAX,EAX
            test DI,DI
            mov EDI,2
            cmove RAX,RDI
            add RAX,RBP
            movzx EDI,BYTE PTR [RAX]
            movzx R9D,BYTE PTR [RAX+1]
            shl EDI,8
            lea EBX,DWORD PTR [RDI+R9*1]
            movzx EDI,BX
            mov WORD PTR [RSP],BX
            lea EBX,DWORD PTR [RDI+RDI*1+2]
            mov DWORD PTR [RSP+8],EDI
            add RBX,RAX
            add RAX,2
            lea RDI,QWORD PTR [RBX+2]
            movzx R9D,BYTE PTR [RBX+1]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RDX+2]
            mov QWORD PTR [RSP+56],RDI
            movzx EDI,BYTE PTR [RBX]
            shl EDI,8
            add EDI,R9D
            test SI,SI
            mov WORD PTR [RSP+54],DI
            movzx EDI,DI
            mov DWORD PTR [RSP+64],EDI
            je .L_43874c

            sub ECX,1
            mov R12,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+72],RBX
            lea R14,QWORD PTR [RDX+RCX*2+4]
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438730:

            mov RSI,RBX
            mov RDX,R12
            mov RDI,R13
            add RBX,2
            call .L_426810

            cmp R14,RBX
            jne .L_438730

            mov RBX,QWORD PTR [RSP+72]
.L_43874c:

            cmp WORD PTR [RSP+40],0
            je .L_43878f

            mov EAX,DWORD PTR [RSP+80]
            mov R12,QWORD PTR [R15+16]
            cmp EAX,1
            je .L_43878f

            sub EAX,2
            mov R14,QWORD PTR [RSP+144]
            lea R13,QWORD PTR [RBP+2]
            lea RBP,QWORD PTR [RBP+RAX*2+4]
            nop
            nop
            nop
.L_438778:

            mov RSI,R13
            mov RDX,R14
            mov RDI,R12
            add R13,2
            call .L_426810

            cmp RBP,R13
            jne .L_438778
.L_43878f:

            cmp WORD PTR [RSP],0
            mov RBP,QWORD PTR [R15+24]
            je .L_4387c7

            mov EAX,DWORD PTR [RSP+8]
            mov R13,QWORD PTR [RSP+16]
            mov R14,QWORD PTR [RSP+104]
            sub EAX,1
            lea R12,QWORD PTR [R13+RAX*2+2]
.L_4387b0:

            mov RSI,R13
            mov RDX,R14
            mov RDI,RBP
            add R13,2
            call .L_426810

            cmp R12,R13
            jne .L_4387b0
.L_4387c7:

            cmp WORD PTR [RSP+54],0
            je .L_4388cd

            mov EAX,DWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+56]
            add RBX,4
            sub EAX,1
            lea R14,QWORD PTR [RCX+RAX*4+6]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4387f0:

            mov EDX,DWORD PTR [R15+8360]
            movzx EBP,BYTE PTR [RBX]
            movzx R12D,BYTE PTR [RBX+1]
            test EDX,EDX
            je .L_4388c0

            cmp QWORD PTR [R15+40],0
            je .L_4388c0

            mov R13,QWORD PTR [R15+32]
            call .L_4257d0

            cmp R13,RAX
            je .L_4388c0

            shl EBP,8
            movzx ECX,R12B
            mov R13D,1
            add ECX,EBP
            movzx R12D,CX
            shl R13D,CL
            mov EAX,R12D
            shr EAX,5
            lea RBP,QWORD PTR [R15+RAX*4]
            test DWORD PTR [RBP+164],R13D
            jne .L_4388c0

            mov R8,QWORD PTR [R15+8]
            mov RCX,QWORD PTR [R15+16]
            mov RDX,QWORD PTR [R15+24]
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4257d0

            sub DWORD PTR [R15+8360],1
            mov QWORD PTR [R15+24],RAX
            mov ESI,R12D
            mov QWORD PTR [R15+16],RAX
            mov QWORD PTR [R15+8],RAX
            mov RDI,R15
            call QWORD PTR [R15+40]

            add DWORD PTR [R15+8360],1
            cmp BYTE PTR [R15+160],0
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R15+8],R8
            mov QWORD PTR [R15+16],RCX
            mov QWORD PTR [R15+24],RDX
            jne .L_4388c0

            or DWORD PTR [RBP+164],R13D
            nop
            nop
            nop
.L_4388c0:

            add RBX,4
            cmp R14,RBX
            jne .L_4387f0
.L_4388cd:

            add QWORD PTR [RSP+24],1
            mov RAX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+112],RAX
            je .L_4388f0

            mov RSI,QWORD PTR [RSP+32]
            movzx EAX,BYTE PTR [RSI]
            movzx EDX,BYTE PTR [RSI+1]
            jmp .L_438630
.L_4388f0:

            add QWORD PTR [RSP+136],1
            mov RAX,QWORD PTR [RSP+136]
            cmp QWORD PTR [RSP+152],RAX
            je .L_437e5f

            mov RSI,QWORD PTR [RSP+96]
            movzx EAX,BYTE PTR [RSI+10]
            movzx EDX,BYTE PTR [RSI+11]
            jmp .L_4385a8
.L_438921:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438930:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_43893e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDX,8
            ja .L_438990

            lea RCX,QWORD PTR [RIP+.L_44c1dc]
            mov EDX,EDX
            mov RBX,RDI
            mov RBP,RSI
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438970:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_438cf0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438990:

            xor EAX,EAX
.L_438992:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_438dcd

            add RSP,72
.L_4389aa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4389b8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_438d20

            cmp AX,2
            jne .L_438990

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RSI,QWORD PTR [RIP+.L_657760]
            lea R12,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],0
            lea R13,QWORD PTR [RIP+.L_657760]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R12
            cmovne RSI,RDX
            call .L_42c490

            jmp .L_438a5c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438a18:

            movzx ESI,WORD PTR [RSP+36]
.L_438a1d:

            mov RDI,R8
            call .L_42c250

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+32]
            cmp EAX,1
            je .L_438d10

            cmp EAX,2
            je .L_438aa7

            mov RCX,R13
            nop
            nop
.L_438a40:

            movzx ESI,BYTE PTR [RCX]
            movzx EAX,BYTE PTR [RCX+1]
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            mov RDI,R12
            call .L_42c6e0
.L_438a5c:

            mov RDI,R12
            call .L_42c6a0

            test AL,AL
            je .L_438990

            mov EAX,DWORD PTR [RSP+16]
            mov R8,QWORD PTR [RBP+16]
            cmp EAX,1
            je .L_438d00

            cmp EAX,2
            je .L_438a18

            xor ESI,ESI
            mov RDI,R8
            call .L_42c250

            mov EAX,DWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+32]
            cmp EAX,1
            je .L_438d10

            cmp EAX,2
            mov EDX,65535
            jne .L_438aac
.L_438aa7:

            movzx EDX,WORD PTR [RSP+40]
.L_438aac:

            movzx EAX,BYTE PTR [RBX+4]
            movzx ECX,BYTE PTR [RBX+5]
            shl EAX,8
            add EAX,ECX
            mov RCX,R13
            movzx EAX,AX
            cmp EAX,EDX
            jbe .L_438a40

            lea RCX,QWORD PTR [RBX+RDX*2+6]
            jmp .L_438a40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ad8:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438990

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [RSI+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RBX
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_438990

            lea R15D,DWORD PTR [RSI-1]
            lea R13,QWORD PTR [RIP+.L_657760]
            mov QWORD PTR [RSP],0
            lea RCX,QWORD PTR [R15+1]
            mov QWORD PTR [RSP+8],RCX
            nop
.L_438b50:

            shl EAX,8
            mov RCX,QWORD PTR [RSP]
            add EAX,EDX
            mov RDX,R13
            movzx EAX,AX
            cmp EAX,ECX
            jbe .L_438b68

            lea RDX,QWORD PTR [RBX+RCX*2+6]
.L_438b68:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            movzx ECX,AX
            add RCX,RBX
            test AX,AX
            cmove RCX,R13
            movzx EAX,BYTE PTR [RCX]
            movzx ESI,BYTE PTR [RCX+1]
            mov R14,RCX
            mov EDX,EAX
            shl EDX,8
            add EDX,ESI
            test DX,DX
            movzx EDI,DX
            je .L_438bf1

            lea R12D,DWORD PTR [RDI-1]
            xor R15D,R15D
            add R12,1
            jmp .L_438bb9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438bb0:

            movzx EAX,BYTE PTR [R14]
            movzx ESI,BYTE PTR [R14+1]
.L_438bb9:

            shl EAX,8
            mov RDI,QWORD PTR [RBP+32]
            mov R8,R13
            add EAX,ESI
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_438bd2

            lea R8,QWORD PTR [R14+R15*2+2]
.L_438bd2:

            movzx ESI,BYTE PTR [R8]
            movzx EAX,BYTE PTR [R8+1]
            add R15,1
            shl ESI,8
            add ESI,EAX
            movzx ESI,SI
            call .L_42c250

            cmp R15,R12
            jne .L_438bb0
.L_438bf1:

            add QWORD PTR [RSP],1
            mov RAX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],RAX
            je .L_438990

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            jmp .L_438b50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438c18:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438990

            call .L_42fff0

            xor EAX,EAX
            jmp .L_438992
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438c40:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438990

            call .L_430ce0

            xor EAX,EAX
            jmp .L_438992
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438c68:

            call .L_4375f0

            jmp .L_438992
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438c78:

            call .L_437e20

            jmp .L_438992
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438c88:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438990

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            mov ECX,EDX
            shl EAX,16
            shl ECX,24
            lea EDX,DWORD PTR [RCX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            lea EDI,DWORD PTR [RAX+RDX*1]
            movzx EDX,BYTE PTR [RBX+2]
            mov RAX,RDI
            add RDI,RBX
            test EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RDI,RAX
            movzx EAX,BYTE PTR [RBX+3]
            shl EDX,8
            add EDX,EAX
            movzx EDX,DX
            call .L_438930

            jmp .L_438992
          .byte 0x66
          .byte 0x90
.L_438cf0:

            call .L_433f40

            xor EAX,EAX
            jmp .L_438992
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438d00:

            mov RDI,R12
            call .L_426320

            movzx ESI,AX
            jmp .L_438a1d
.L_438d10:

            movzx EDX,WORD PTR [RSP+32]
            jmp .L_438aac
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438d20:

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            lea R12,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_657760]
            mov DWORD PTR [RSP+16],0
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,RDI
            test AX,AX
            mov RDI,R12
            cmovne RSI,RDX
            call .L_42c490

            jmp .L_438d9b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438d60:

            cmp EAX,2
            jne .L_438dc8

            movzx R13D,WORD PTR [RSP+36]
.L_438d6b:

            mov RDI,QWORD PTR [RBP+16]
            mov ESI,R13D
            call .L_42c250

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov RDI,QWORD PTR [RBP+32]
            shl ESI,8
            add ESI,EAX
            add ESI,R13D
            movzx ESI,SI
            call .L_42c250

            mov RDI,R12
            call .L_42c6e0
.L_438d9b:

            mov RDI,R12
            call .L_42c6a0

            test AL,AL
            je .L_438990

            mov EAX,DWORD PTR [RSP+16]
            cmp EAX,1
            jne .L_438d60

            mov RDI,R12
            call .L_426320

            movzx R13D,AX
            jmp .L_438d6b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438dc8:

            xor R13D,R13D
            jmp .L_438d6b
.L_438dcd:

            call __stack_chk_fail@PLT
.L_438dd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438de0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_438df1:

            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+160]
            mov RDI,QWORD PTR [RAX+32]
            call .L_42f680

            movzx EBX,BYTE PTR [RAX]
            mov R15,RAX
            movzx EAX,BYTE PTR [RAX+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBX,8
            add EBX,EAX
            movzx EAX,BYTE PTR [R15+4]
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            je .L_438e93

            movzx ESI,CX
            movzx EBX,BX
            xor R14D,R14D
            lea R12D,DWORD PTR [RSI-1]
            lea RBP,QWORD PTR [RIP+.L_657760]
            add R12,1
            jmp .L_438e52
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438e48:

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_438e52:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_438e67

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_438e67:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R13
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBP
            add R14,1
            call .L_438930

            cmp R12,R14
            jne .L_438e48
.L_438e93:

            add RSP,8
.L_438e97:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_438ea4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438eb0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_44c200]
            lea RDI,QWORD PTR [RIP+.L_657760]
            sub RSP,24
.L_438ed2:

            cmp EDX,9
            ja .L_438f50

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RSI+RDX*4]
            add RAX,RSI
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438ee8:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438f50

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [R14+16]
            mov RBX,RDI
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
            mov RSI,QWORD PTR [R14+16]
            shl EAX,8
            add EAX,EDX
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,RBX
            call .L_433df0
.L_438f50:

            add RSP,24
.L_438f54:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f68:

            add RSP,24
            mov RSI,R14
            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_437e20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f88:

            add RSP,24
            mov RSI,R14
            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4375f0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438fa8:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_438fc2

            cmp AX,2
            jne .L_438f50
.L_438fc2:

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [R14+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add R15,RDX
            test AX,AX
            cmovne RDI,R15
            call .L_433df0

            jmp .L_438f50
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438ff8:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_439190

            cmp AX,2
            jne .L_438f50

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [R14+16]
            mov RBX,RDI
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [R15+12]
            movzx EDX,BYTE PTR [R15+13]
            movzx ESI,BYTE PTR [R15+9]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+8]
            movzx R12D,AX
            shl EDX,8
            add EDX,ESI
            movzx EBP,DX
            add RBP,R15
            test DX,DX
            cmove RBP,RBX
            test AX,AX
            je .L_439096

            xor EBX,EBX
            nop
.L_439080:

            mov RSI,QWORD PTR [R14+16]
            mov EDX,EBX
            mov RDI,RBP
            add EBX,1
            call .L_42c8a0

            cmp R12D,EBX
            jne .L_439080
.L_439096:

            movzx EAX,BYTE PTR [R15+14]
            movzx EDX,BYTE PTR [R15+15]
            lea RBP,QWORD PTR [RIP+.L_657760]
            movzx ESI,BYTE PTR [R15+11]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+10]
            movzx R12D,AX
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            add R15,RSI
            test DX,DX
            cmovne RBP,R15
            test AX,AX
            je .L_438f50

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4390e0:

            mov RSI,QWORD PTR [R14+16]
            mov EDX,EBX
            mov RDI,RBP
            add EBX,1
            call .L_42c8a0

            cmp R12D,EBX
            jne .L_4390e0

            jmp .L_438f50
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439100:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438f50

            jmp .L_438fc2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439120:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_438f50

            movzx EDX,BYTE PTR [R15+4]
            movzx EAX,BYTE PTR [R15+5]
            movzx R8D,BYTE PTR [R15+3]
            shl EAX,16
            shl EDX,24
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [R15+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [R15+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,R15
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [R15+2]
            cmove RAX,RDI
            mov R15,RAX
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            jmp .L_438ed2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439190:

            movzx EAX,BYTE PTR [R15+2]
            movzx EDX,BYTE PTR [R15+3]
            lea RDI,QWORD PTR [RIP+.L_657760]
            mov RSI,QWORD PTR [R14+16]
            shl EAX,8
            add EAX,EDX
            movzx EDX,AX
            add RDX,R15
            test AX,AX
            cmovne RDI,RDX
            call .L_433df0

            movzx EAX,BYTE PTR [R15+8]
            movzx EDX,BYTE PTR [R15+9]
            mov ESI,EAX
            shl ESI,8
            add ESI,EDX
            test SI,SI
            movzx EDI,SI
            je .L_438f50

            lea ECX,DWORD PTR [RDI-1]
            mov QWORD PTR [RSP],0
            add RCX,1
            mov QWORD PTR [RSP+8],RCX
            nop
            nop
            nop
.L_4391f0:

            shl EAX,8
            mov RCX,QWORD PTR [RSP]
            add EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_657760]
            movzx EAX,AX
            cmp EAX,ECX
            jbe .L_43920c

            lea RDX,QWORD PTR [R15+RCX*2+10]
.L_43920c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            movzx EDI,BYTE PTR [R15+4]
            shl EAX,8
            add EAX,EDX
            movzx EBP,AX
            add RBP,R15
            test AX,AX
            lea RAX,QWORD PTR [RIP+.L_657760]
            cmove RBP,RAX
            movzx EAX,BYTE PTR [R15+5]
            shl EDI,8
            lea R12,QWORD PTR [RBP+2]
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [R15+6]
            mov EBX,EAX
            movzx EAX,BYTE PTR [R15+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDX,BYTE PTR [RBP]
            movzx ESI,BYTE PTR [RBP+1]
            lea EBX,DWORD PTR [RBX+RAX*1+1]
            add EBX,EBX
            shl EDX,8
            add EDX,ESI
            test DX,DX
            movzx EBP,DX
            je .L_4392a8

            xor R13D,R13D
            nop
            nop
.L_439280:

            movzx ESI,BYTE PTR [R12]
            movzx EDI,BYTE PTR [R12+1]
            add R13D,1
            add R12,RBX
            shl ESI,8
            add ESI,EDI
            mov RDI,QWORD PTR [R14+16]
            movzx ESI,SI
            call .L_42c250

            cmp EBP,R13D
            jne .L_439280
.L_4392a8:

            add QWORD PTR [RSP],1
            mov RAX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],RAX
            je .L_438f50

            movzx EAX,BYTE PTR [R15+8]
            movzx EDX,BYTE PTR [R15+9]
            jmp .L_4391f0
.L_4392cb:

            nop
            nop
            nop
            nop
            nop
.L_4392d0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            mov RDX,QWORD PTR [RSI+8]
            cmp RDI,RDX
            jae .L_4392f0
.L_4392e5:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4392f0:

            mov RCX,QWORD PTR [RSI+16]
            cmp RDI,RCX
            ja .L_4392e5

            mov R8,RCX
            sub R8,RDI
            cmp R8D,1
            jbe .L_4392e5

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            cmp AX,2
            je .L_439348

            cmp AX,3
            je .L_4393c0

            cmp AX,1
            je .L_439370

            mov EAX,1
.L_439334:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439348:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_434c20

            test AL,AL
            jne .L_4393a0
.L_439358:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439370:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_434c20

            test AL,AL
            lea RDI,QWORD PTR [RBX+4]
            je .L_439358
.L_439384:

            add RSP,8
            mov RDX,RBX
            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_434130
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4393a0:

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,RBX
            mov RSI,RBP
            call .L_434db0

            test AL,AL
            je .L_439358

            lea RDI,QWORD PTR [RBX+6]
            jmp .L_439384
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4393c0:

            cmp R8D,5
            jbe .L_439358

            movzx EAX,BYTE PTR [RDI+2]
            movzx ESI,BYTE PTR [RDI+3]
            shl EAX,8
            add AX,SI
            je .L_439358

            lea R13,QWORD PTR [RDI+6]
            cmp RDX,R13
            ja .L_439358

            cmp RCX,R13
            jb .L_439358

            movzx EAX,AX
            sub RCX,R13
            lea R14D,DWORD PTR [RAX+RAX*1]
            cmp R14D,ECX
            ja .L_439358

            sub EAX,1
            mov R12,R13
            lea R15,QWORD PTR [RDI+RAX*2+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_439410:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_434c20

            test AL,AL
            je .L_439358

            add R12,2
            cmp R15,R12
            jne .L_439410

            add R13,R14
            xor EAX,EAX
            cmp R13,QWORD PTR [RBP+8]
            jb .L_439334

            mov RCX,QWORD PTR [RBP+16]
            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            cmp R13,RCX
            ja .L_439334

            shl EDX,8
            movzx EAX,SIL
            sub RCX,R13
            add EAX,EDX
            movzx EAX,AX
            shl EAX,2
            cmp EAX,ECX
            setbe AL
            jmp .L_439334
.L_43946f:

            nop
.L_439470:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp RDI,QWORD PTR [RSI+8]
            jae .L_439488
.L_439482:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439488:

            mov RDX,QWORD PTR [RSI+16]
            cmp RDI,RDX
            ja .L_439482

            sub RDX,RDI
            cmp EDX,1
            jbe .L_439482

            cmp AX,2
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDI
            je .L_4394c0

            cmp AX,3
            je .L_439508

            cmp AX,1
            je .L_4394e0

            mov EAX,1
.L_4394ba:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4394c0:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_434c20

            test AL,AL
            jne .L_4395f0
.L_4394d4:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4394e0:

            lea RDI,QWORD PTR [RDI+2]
            mov RDX,RBX
            call .L_434c20

            test AL,AL
            lea RDI,QWORD PTR [RBX+4]
            je .L_4394d4
.L_4394f4:

            mov RDX,RBX
            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_4343f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439508:

            lea R12,QWORD PTR [RDI+2]
            mov RDX,RDI
            mov RDI,R12
            call .L_434ca0

            test AL,AL
            je .L_4394d4

            movzx EAX,BYTE PTR [RBX+2]
            movzx EDX,BYTE PTR [RBX+3]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            mov RDX,RBX
            movzx EAX,AX
            lea R12,QWORD PTR [R12+RAX*2+2]
            mov RDI,R12
            call .L_434ca0

            test AL,AL
            je .L_4394d4

            movzx EAX,BYTE PTR [R12]
            movzx EDX,BYTE PTR [R12+1]
            shl EAX,8
            add AX,DX
            je .L_4394d4

            movzx EAX,AX
            mov RDX,RBX
            mov RSI,RBP
            lea R12,QWORD PTR [R12+RAX*2+2]
            mov RDI,R12
            call .L_434ca0

            test AL,AL
            je .L_4394d4

            movzx EDX,BYTE PTR [R12]
            movzx ECX,BYTE PTR [R12+1]
            shl EDX,8
            add EDX,ECX
            mov RCX,QWORD PTR [RBP+8]
            movzx EDX,DX
            lea RDX,QWORD PTR [R12+RDX*2+2]
            cmp RDX,RCX
            jb .L_4394d4

            mov RSI,QWORD PTR [RBP+16]
            cmp RDX,RSI
            ja .L_4394d4

            mov RDI,RSI
            sub RDI,RDX
            cmp EDI,1
            jbe .L_4394d4

            lea RDI,QWORD PTR [RDX+2]
            cmp RCX,RDI
            ja .L_4394d4

            cmp RSI,RDI
            jb .L_4394d4

            movzx ECX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            sub RSI,RDI
            shl ECX,8
            add EDX,ECX
            movzx EDX,DX
            shl EDX,2
            cmp EDX,ESI
            jbe .L_4394ba

            jmp .L_4394d4
.L_4395f0:

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,RBX
            mov RSI,RBP
            call .L_434db0

            test AL,AL
            je .L_4394d4

            lea RDI,QWORD PTR [RBX+6]
            mov RDX,RBX
            mov RSI,RBP
            call .L_434db0

            test AL,AL
            je .L_4394d4

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,RBX
            mov RSI,RBP
            call .L_434db0

            test AL,AL
            je .L_4394d4

            lea RDI,QWORD PTR [RBX+10]
            jmp .L_4394f4
.L_43963e:

            nop
            nop
.L_439640:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
            mov RCX,QWORD PTR [RSI+8]
            cmp RCX,RDI
            ja .L_439670

            mov RBX,RDI
            mov R12,RDI
            mov RDI,QWORD PTR [RSI+16]
            mov RBP,RSI
            cmp RBX,RDI
            jbe .L_439688

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439670:

            xor R13D,R13D
.L_439673:

            add RSP,8
            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439688:

            mov RAX,RDI
            lea RSI,QWORD PTR [RIP+.L_44c228]
            sub RAX,RBX
            cmp EAX,1
            jbe .L_439670
.L_43969a:

            cmp EDX,8
            ja .L_4396b0

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RSI+RDX*4]
            add RAX,RSI
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4396b0:

            mov R13D,1
            jmp .L_439673
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4396c0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_439670

            cmp R12,RDI
            ja .L_439670

            sub RDI,R12
            cmp EDI,1
            jbe .L_439670

            cmp AX,1
            jne .L_4396b0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_439670

            lea R13,QWORD PTR [RBX+4]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,R13
            call .L_434ca0

            test AL,AL
            je .L_439670

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
            mov RSI,RBP
            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            lea RBX,QWORD PTR [R13+RAX*2+2]
            mov RDI,RBX
            call .L_434ca0

            test AL,AL
            je .L_439670

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            movzx EAX,AX
            lea RDI,QWORD PTR [RBX+RAX*2+2]
            jmp .L_439d79
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439760:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_439670

            cmp R12,RDI
            ja .L_439670

            mov RDX,RDI
            sub RDX,R12
            cmp EDX,1
            jbe .L_439670

            cmp AX,1
            jne .L_4396b0

            cmp EDX,7
            jbe .L_439670

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EAX,EDX
            je .L_439670

            movzx EDX,BYTE PTR [RBX+2]
            movzx R8D,BYTE PTR [RBX+3]
            mov EAX,EAX
            add R12,RAX
            shl EDX,8
            add EDX,R8D
            cmp R12,RCX
            movzx EDX,DX
            jb .L_439670

            cmp R12,RDI
            ja .L_439670

            mov RAX,RDI
            mov RBX,R12
            sub RAX,R12
            cmp EAX,1
            ja .L_43969a

            jmp .L_439670
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439810:

            add RSP,8
.L_439814:

            mov RSI,RBP
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_439470
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439830:

            add RSP,8
            mov RSI,RBP
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4392d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439850:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_439670

            cmp R12,RDI
            ja .L_439670

            sub RDI,R12
            cmp EDI,1
            jbe .L_439670

            cmp AX,1
            jne .L_4396b0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            mov R13D,EAX
            je .L_439670

            mov RDX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+4]
            cmp RAX,RDX
            jb .L_439670

            mov RCX,QWORD PTR [RBP+16]
            cmp RAX,RCX
            ja .L_439670

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_439670

            lea R10,QWORD PTR [RBX+6]
            cmp RDX,R10
            ja .L_439670

            cmp RCX,R10
            jb .L_439670

            movzx ESI,BYTE PTR [RBX+4]
            movzx EDI,BYTE PTR [RBX+5]
            shl ESI,8
            add ESI,EDI
            mov RDI,RCX
            movzx R8D,SI
            sub RDI,R10
            lea R9D,DWORD PTR [R8+R8*1]
            cmp R9D,EDI
            ja .L_439670

            test SI,SI
            je .L_439673

            cmp EDI,1
            jbe .L_439670

            lea ESI,DWORD PTR [R8-1]
            add RBX,8
            lea R11,QWORD PTR [RAX+RSI*2+4]
.L_439924:

            movzx EAX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            shl EAX,8
            add AX,SI
            je .L_439e00

            movzx EAX,AX
            lea RSI,QWORD PTR [R12+RAX*1]
            cmp RDX,RSI
            ja .L_439dd0

            cmp RSI,RCX
            ja .L_439dd0

            mov RAX,RCX
            sub RAX,RSI
            cmp EAX,1
            jbe .L_439dd0

            lea RDI,QWORD PTR [RSI+2]
            cmp RDX,RDI
            ja .L_439dd0

            cmp RCX,RDI
            jb .L_439dd0

            movzx EAX,BYTE PTR [RSI]
            movzx R8D,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,R8D
            mov R8,RCX
            movzx R9D,AX
            sub R8,RDI
            lea R14D,DWORD PTR [R9+R9*1]
            cmp R14D,R8D
            ja .L_439dd0

            test AX,AX
            je .L_439e00

            cmp RDI,RDX
            jb .L_439dd0

            cmp R8D,1
            jbe .L_439dd0

            lea R8,QWORD PTR [RSI+4]
            lea EAX,DWORD PTR [R9-1]
            lea R9,QWORD PTR [R8+RAX*2]
            nop
            nop
            nop
            nop
.L_4399c8:

            movzx EAX,BYTE PTR [RDI]
            movzx R14D,BYTE PTR [RDI+1]
            shl EAX,8
            add AX,R14W
            je .L_439da0

            movzx EAX,AX
            add RAX,RSI
            cmp RDX,RAX
            ja .L_439a29

            cmp RAX,RCX
            ja .L_439a29

            mov R14,RCX
            sub R14,RAX
            cmp R14D,1
            jbe .L_439a29

            lea R14,QWORD PTR [RAX+2]
            cmp RDX,R14
            ja .L_439a29

            cmp RCX,R14
            jb .L_439a29

            sub RCX,R14
            cmp ECX,1
            jbe .L_439a29

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
            add EAX,EAX
            cmp ECX,EAX
            jae .L_439da0
.L_439a29:

            mov EAX,DWORD PTR [RBP+28]
            movzx EDX,BYTE PTR [RBP+24]
            cmp EAX,2
            ja .L_439670

            lea ECX,DWORD PTR [RAX+1]
            test DL,DL
            mov DWORD PTR [RBP+28],ECX
            jne .L_439d8f

            cmp ECX,3
            je .L_439670

            add EAX,2
            mov DWORD PTR [RBP+28],EAX
            jmp .L_439670
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439a60:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_439670

            cmp R12,RDI
            ja .L_439670

            sub RDI,R12
            cmp EDI,1
            jbe .L_439670

            cmp AX,1
            jne .L_4396b0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            mov R13D,EAX
            je .L_439670

            mov RDX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+4]
            cmp RAX,RDX
            jb .L_439670

            mov RCX,QWORD PTR [RBP+16]
            cmp RAX,RCX
            ja .L_439670

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_439670

            lea R15,QWORD PTR [RBX+6]
            cmp RDX,R15
            ja .L_439670

            cmp RCX,R15
            jb .L_439670

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            sub RCX,R15
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_439670

            test DX,DX
            je .L_439673

            cmp ECX,1
            jbe .L_439670

            lea EDX,DWORD PTR [RSI-1]
            add RBX,8
            lea R14,QWORD PTR [RAX+RDX*2+4]
.L_439b2d:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add AX,DX
            je .L_439b80

            movzx EAX,AX
            mov RSI,RBP
            lea RDI,QWORD PTR [R12+RAX*1]
            call .L_434b20

            test AL,AL
            jne .L_439b80

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_439670

            movzx EDX,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test DL,DL
            je .L_439670

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439b80:

            cmp RBX,R14
            je .L_439673

            cmp RBX,QWORD PTR [RBP+8]
            jb .L_439670

            mov RAX,QWORD PTR [RBP+16]
            cmp RBX,RAX
            ja .L_439670

            sub RAX,RBX
            add R15,2
            add RBX,2
            cmp EAX,1
            ja .L_439b2d

            jmp .L_439670
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439bc0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_439670

            cmp R12,RDI
            ja .L_439670

            sub RDI,R12
            cmp EDI,1
            jbe .L_439670

            cmp AX,1
            jne .L_4396b0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            mov R13D,EAX
            je .L_439670

            mov RDX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+4]
            cmp RAX,RDX
            jb .L_439670

            mov RCX,QWORD PTR [RBP+16]
            cmp RAX,RCX
            ja .L_439670

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_439670

            lea R15,QWORD PTR [RBX+6]
            cmp RDX,R15
            ja .L_439670

            cmp RCX,R15
            jb .L_439670

            movzx EDX,BYTE PTR [RBX+4]
            movzx ESI,BYTE PTR [RBX+5]
            sub RCX,R15
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_439670

            test DX,DX
            je .L_439673

            cmp ECX,1
            jbe .L_439670

            lea EDX,DWORD PTR [RSI-1]
            add RBX,8
            lea R14,QWORD PTR [RAX+RDX*2+4]
.L_439c8d:

            movzx EAX,BYTE PTR [R15]
            movzx EDX,BYTE PTR [R15+1]
            shl EAX,8
            add AX,DX
            je .L_439ce0

            movzx EAX,AX
            mov RSI,RBP
            lea RDI,QWORD PTR [R12+RAX*1]
            call .L_434b20

            test AL,AL
            jne .L_439ce0

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_439670

            movzx EDX,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test DL,DL
            je .L_439670

            mov BYTE PTR [R15],0
            mov BYTE PTR [R15+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439ce0:

            cmp R14,RBX
            je .L_439673

            cmp RBX,QWORD PTR [RBP+8]
            jb .L_439670

            mov RAX,QWORD PTR [RBP+16]
            cmp RBX,RAX
            ja .L_439670

            sub RAX,RBX
            add R15,2
            add RBX,2
            cmp EAX,1
            ja .L_439c8d

            jmp .L_439670
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439d20:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp RCX,R12
            ja .L_439670

            cmp R12,RDI
            ja .L_439670

            sub RDI,R12
            cmp EDI,1
            jbe .L_439670

            cmp AX,1
            je .L_439e40

            cmp AX,2
            jne .L_4396b0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            lea RDI,QWORD PTR [RBX+4]
            je .L_439670
.L_439d79:

            add RSP,8
.L_439d7d:

            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_434b20
.L_439d8f:

            mov BYTE PTR [RDI],0
            mov BYTE PTR [RDI+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439da0:

            cmp R8,R9
            je .L_439e00

            mov RDX,QWORD PTR [RBP+8]
            cmp R8,RDX
            jb .L_439dd0

            mov RCX,QWORD PTR [RBP+16]
            cmp R8,RCX
            ja .L_439dd0

            mov RAX,RCX
            add RDI,2
            sub RAX,R8
            add R8,2
            cmp EAX,1
            ja .L_4399c8

            nop
            nop
.L_439dd0:

            mov EAX,DWORD PTR [RBP+28]
            movzx EDX,BYTE PTR [RBP+24]
            cmp EAX,2
            ja .L_439670

            add EAX,1
            test DL,DL
            mov DWORD PTR [RBP+28],EAX
            je .L_439670

            mov BYTE PTR [R10],0
            mov BYTE PTR [R10+1],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439e00:

            cmp R11,RBX
            je .L_439673

            mov RDX,QWORD PTR [RBP+8]
            cmp RBX,RDX
            jb .L_439670

            mov RCX,QWORD PTR [RBP+16]
            cmp RBX,RCX
            ja .L_439670

            mov RAX,RCX
            add R10,2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            ja .L_439924

            jmp .L_439670
          .byte 0x90
.L_439e40:

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R12
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_439670

            add RBX,4
            cmp RBX,QWORD PTR [RBP+8]
            jb .L_439670

            mov RAX,QWORD PTR [RBP+16]
            cmp RBX,RAX
            ja .L_439670

            sub RAX,RBX
            cmp EAX,1
            seta R13B
            jmp .L_439673
.L_439e81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439e90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,56
.L_439ea1:

            mov QWORD PTR [RSP+40],RDI
            call .L_4331d0

            test AL,AL
            mov BYTE PTR [RSP+15],AL
            je .L_43a088

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RDI+8]
            cmp RAX,RDX
            jb .L_43a088

            mov RCX,QWORD PTR [RBX+16]
            cmp RAX,RCX
            ja .L_43a088

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_43a088

            movzx EAX,BYTE PTR [RDI+8]
            movzx ESI,BYTE PTR [RDI+9]
            shl EAX,8
            add AX,SI
            je .L_43a08d

            movzx EAX,AX
            add RAX,RDI
            cmp RDX,RAX
            mov R10,RAX
            mov QWORD PTR [RSP+24],RAX
            ja .L_43a0f0

            cmp RCX,RAX
            jb .L_43a0f0

            mov RAX,RCX
            sub RAX,R10
            cmp EAX,1
            jbe .L_43a0f0

            lea RAX,QWORD PTR [R10+2]
            cmp RDX,RAX
            ja .L_43a0f0

            cmp RCX,RAX
            jb .L_43a0f0

            movzx EDX,BYTE PTR [R10]
            movzx ESI,BYTE PTR [R10+1]
            sub RCX,RAX
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_43a0f0

            test DX,DX
            je .L_43a08d

            cmp ECX,1
            jbe .L_43a0f0

            lea RCX,QWORD PTR [R10+4]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RSI-1]
            lea RBP,QWORD PTR [RIP+.L_657760]
            lea RAX,QWORD PTR [RCX+RAX*2]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
.L_439f98:

            mov RAX,QWORD PTR [RSP+16]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_43a0b0

            mov RAX,QWORD PTR [RSP+24]
            movzx ECX,CX
            mov RSI,RBX
            lea R14,QWORD PTR [RAX+RCX*1]
            mov RDI,R14
            call .L_42c280

            test AL,AL
            je .L_43a064

            movzx ESI,BYTE PTR [R14]
            movzx EAX,BYTE PTR [R14+1]
            movzx EDX,BYTE PTR [R14+5]
            shl ESI,8
            add ESI,EAX
            movzx EAX,BYTE PTR [R14+4]
            movzx R13D,SI
            mov EDI,EAX
            shl EDI,8
            add EDI,EDX
            test DI,DI
            movzx R8D,DI
            je .L_43a220

            lea R12D,DWORD PTR [R8-1]
            xor R15D,R15D
            add R12,1
            jmp .L_43a027
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a010:

            add R15,1
            cmp R12,R15
            je .L_43a128

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
.L_43a027:

            shl EAX,8
            add EAX,EDX
            mov RDX,RBP
            movzx EAX,AX
            cmp EAX,R15D
            jbe .L_43a03c

            lea RDX,QWORD PTR [R14+R15*2+6]
.L_43a03c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,R13D
            movzx EDI,AX
            add RDI,R14
            test AX,AX
            cmove RDI,RBP
            call .L_439640

            test AL,AL
            jne .L_43a010
.L_43a064:

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_43a088

            movzx ECX,BYTE PTR [RBX+24]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+28],EDX
            test CL,CL
            jne .L_43a0a1

            cmp EDX,3
            je .L_43a088

            add EAX,2
            mov DWORD PTR [RBX+28],EAX
            nop
            nop
            nop
.L_43a088:

            mov BYTE PTR [RSP+15],0
.L_43a08d:

            movzx EAX,BYTE PTR [RSP+15]
            add RSP,56
.L_43a096:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43a0a1:

            mov RAX,QWORD PTR [RSP+16]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
.L_43a0b0:

            mov RCX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+32],RCX
            je .L_43a08d

            mov RAX,QWORD PTR [RSP]
            cmp RAX,QWORD PTR [RBX+8]
            jb .L_43a0f0

            mov RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP]
            cmp RCX,RAX
            ja .L_43a0f0

            sub RAX,RCX
            add QWORD PTR [RSP+16],2
            add RCX,2
            cmp EAX,1
            mov QWORD PTR [RSP],RCX
            ja .L_439f98

            nop
            nop
            nop
            nop
.L_43a0f0:

            movzx EAX,BYTE PTR [RBX+24]
            mov BYTE PTR [RSP+15],AL
            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_43a088

            add EAX,1
            cmp BYTE PTR [RSP+15],0
            mov DWORD PTR [RBX+28],EAX
            je .L_43a088

            mov RAX,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov WORD PTR [RAX+8],DX
            jmp .L_43a08d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a128:

            movzx EAX,BYTE PTR [R14]
            movzx EDX,BYTE PTR [R14+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,7
            jne .L_43a0b0

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx R8D,AX
            je .L_43a230

            lea RAX,QWORD PTR [R14+6]
.L_43a160:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,RBP
            xor EDI,EDI
            movzx EDX,BYTE PTR [RAX]
            movzx ESI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ESI
            cmp DX,1
            jne .L_43a19d

            movzx EDI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
.L_43a19d:

            cmp R8D,1
            jbe .L_43a0b0

            lea EAX,DWORD PTR [R8-2]
            lea RSI,QWORD PTR [R14+8]
            lea R8,QWORD PTR [R14+RAX*2+10]
            jmp .L_43a1e5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a1c0:

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
.L_43a1d0:

            cmp EDI,EAX
            jne .L_43a064

            add RSI,2
            cmp R8,RSI
            je .L_43a0b0
.L_43a1e5:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,RBP
            movzx EDX,BYTE PTR [RAX]
            movzx R9D,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,R9D
            cmp DX,1
            je .L_43a1c0

            xor EAX,EAX
            jmp .L_43a1d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a220:

            cmp SI,7
            jne .L_43a0b0

            nop
            nop
            nop
            nop
            nop
            nop
.L_43a230:

            xor R8D,R8D
            mov RAX,RBP
            jmp .L_43a160
.L_43a23b:

            nop
            nop
            nop
            nop
            nop
.L_43a240:

            push R15
            push R14
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_657760]
            push RBP
            push RBX
            sub RSP,136
.L_43a258:

            lea R15,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+72],RDI
            mov DWORD PTR [RSP+80],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+96],0
            mov BYTE PTR [RSP+104],0
            mov DWORD PTR [RSP+108],0
            mov QWORD PTR [RSP+112],0
            call .L_401c30

            mov BYTE PTR [RSP+104],0
            mov RDI,RAX
            mov QWORD PTR [RSP+112],RAX
.L_43a2b4:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+112]
            mov RBX,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+96],RBX
            cmp RBX,RAX
            mov QWORD PTR [RSP+56],RAX
            jb .L_43a86a

            cmp QWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+108],0
            mov DWORD PTR [RSP+80],0
            je .L_43a360

            mov RBX,QWORD PTR [RSP+56]
            mov RSI,R15
            mov RDI,RBX
            call .L_4331d0

            test AL,AL
            je .L_43a398

            mov RSI,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RBX+8]
            mov RCX,RBX
            cmp RAX,RSI
            jb .L_43a398

            mov RDI,QWORD PTR [RSP+96]
            cmp RAX,RDI
            ja .L_43a398

            mov RBX,RDI
            sub RBX,RAX
            cmp EBX,1
            jbe .L_43a398

            movzx EAX,BYTE PTR [RCX+8]
            movzx EDX,BYTE PTR [RCX+9]
            shl EAX,8
            add AX,DX
            jne .L_43a430
.L_43a354:

            mov ECX,DWORD PTR [RSP+108]
            test ECX,ECX
            jne .L_43a810
.L_43a360:

            mov RDI,QWORD PTR [RSP+112]
            call .L_401950
.L_43a36a:

            mov RSI,QWORD PTR [RSP+120]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+72]
            jne .L_43a865

            add RSP,136
.L_43a38a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a398:

            mov EAX,DWORD PTR [RSP+108]
            test EAX,EAX
            jne .L_43a3e0
.L_43a3a0:

            mov RDI,QWORD PTR [RSP+112]
            call .L_401950

            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+88],0
.L_43a3c5:

            mov RDI,QWORD PTR [RSP+72]
            call .L_401950

            call .L_401c20

            mov QWORD PTR [RSP+72],RAX
            jmp .L_43a36a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a3e0:

            cmp BYTE PTR [RSP+104],0
            jne .L_43a3a0
.L_43a3e7:

            mov R14,QWORD PTR [RSP+72]
            xor ESI,ESI
            mov RDI,R14
            call .L_401d70

            mov RDI,R14
            mov RBX,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+96],RBX
            je .L_43a3a0

            mov BYTE PTR [RSP+104],1
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_43a2b4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a430:

            movzx EAX,AX
            add RAX,RCX
            cmp RSI,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP+40],RAX
            ja .L_43a6c8

            cmp RDI,RAX
            jb .L_43a6c8

            mov RAX,RDI
            sub RAX,RBX
            cmp EAX,1
            jbe .L_43a6c8

            lea RAX,QWORD PTR [RBX+2]
            cmp RSI,RAX
            ja .L_43a6c8

            cmp RDI,RAX
            jb .L_43a6c8

            movzx EDX,BYTE PTR [RBX]
            movzx ECX,BYTE PTR [RBX+1]
            shl EDX,8
            add EDX,ECX
            mov RCX,RDI
            movzx R8D,DX
            sub RCX,RAX
            lea R9D,DWORD PTR [R8+R8*1]
            cmp R9D,ECX
            ja .L_43a6c8

            test DX,DX
            je .L_43a354

            cmp ECX,1
            jbe .L_43a6c8

            lea RCX,QWORD PTR [RBX+4]
            mov QWORD PTR [RSP+32],RAX
            lea EAX,DWORD PTR [R8-1]
            lea RAX,QWORD PTR [RCX+RAX*2]
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
            nop
.L_43a4c8:

            mov RAX,QWORD PTR [RSP+32]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_43a678

            mov RAX,QWORD PTR [RSP+40]
            movzx ECX,CX
            lea R14,QWORD PTR [RAX+RCX*1]
            cmp R14,RSI
            jb .L_43a638

            cmp R14,RDI
            ja .L_43a638

            mov RAX,RDI
            sub RAX,R14
            cmp EAX,5
            jbe .L_43a638

            lea RCX,QWORD PTR [R14+4]
            cmp RCX,RSI
            mov QWORD PTR [RSP+64],RCX
            jb .L_43a638

            cmp RDI,RCX
            jb .L_43a638

            mov RAX,RDI
            sub RAX,RCX
            cmp EAX,1
            jbe .L_43a638

            lea RBX,QWORD PTR [R14+6]
            cmp RBX,RSI
            mov QWORD PTR [RSP+24],RBX
            jb .L_43a638

            cmp RDI,RBX
            jb .L_43a638

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            mov R10,RDI
            sub R10,RBX
            mov R8D,EAX
            shl R8D,8
            add R8D,EDX
            movzx R11D,R8W
            lea R9D,DWORD PTR [R11+R11*1]
            mov DWORD PTR [RSP+12],R11D
            cmp R9D,R10D
            ja .L_43a638

            test BYTE PTR [R14+3],16
            je .L_43a5b0

            add R9D,2
            add R9,RCX
            cmp R9,RSI
            jb .L_43a638

            cmp RDI,R9
            jb .L_43a638

            sub RDI,R9
            cmp EDI,1
            jbe .L_43a638

            nop
            nop
.L_43a5b0:

            movzx ESI,BYTE PTR [R14]
            movzx EDI,BYTE PTR [R14+1]
            shl ESI,8
            add ESI,EDI
            test R8W,R8W
            movzx EBX,SI
            je .L_43a7f8

            mov RBP,QWORD PTR [RSP+24]
            xor R12D,R12D
            mov RSI,RBP
            mov RBP,R14
            mov R14,RSI
            jmp .L_43a5fb
          .byte 0x66
          .byte 0x90
.L_43a5e0:

            add R12D,1
            add R14,2
            cmp DWORD PTR [RSP+12],R12D
            je .L_43a700

            movzx EAX,BYTE PTR [RBP+4]
            movzx EDX,BYTE PTR [RBP+5]
.L_43a5fb:

            shl EAX,8
            mov RSI,R15
            add EAX,EDX
            mov RDX,R13
            movzx EAX,AX
            cmp EAX,R12D
            cmova RDX,R14
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            cmove RDI,R13
            call .L_439640

            test AL,AL
            jne .L_43a5e0

            nop
            nop
            nop
            nop
.L_43a638:

            mov EAX,DWORD PTR [RSP+108]
            cmp EAX,2
            ja .L_43a3e0

            cmp BYTE PTR [RSP+104],0
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP+108],EDX
            jne .L_43a668

            cmp EDX,3
            je .L_43a3e0

            add EAX,2
            mov DWORD PTR [RSP+108],EAX
            jmp .L_43a3e7
.L_43a668:

            mov RAX,QWORD PTR [RSP+32]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
            nop
.L_43a678:

            mov RSI,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+48],RSI
            je .L_43a354

            mov RSI,QWORD PTR [RSP+88]
            cmp QWORD PTR [RSP+16],RSI
            jb .L_43a6c8

            mov RDI,QWORD PTR [RSP+96]
            mov RBX,QWORD PTR [RSP+16]
            cmp RBX,RDI
            ja .L_43a6c8

            mov RAX,RDI
            add QWORD PTR [RSP+32],2
            sub RAX,RBX
            add RBX,2
            cmp EAX,1
            mov QWORD PTR [RSP+16],RBX
            ja .L_43a4c8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a6c8:

            mov EAX,DWORD PTR [RSP+108]
            movzx EDX,BYTE PTR [RSP+104]
            cmp EAX,2
            ja .L_43a3e0

            add EAX,1
            test DL,DL
            mov DWORD PTR [RSP+108],EAX
            je .L_43a3e7

            mov RAX,QWORD PTR [RSP+56]
            xor ESI,ESI
            mov WORD PTR [RAX+8],SI
            jmp .L_43a354
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a700:

            movzx EAX,BYTE PTR [RBP]
            movzx EDX,BYTE PTR [RBP+1]
            mov R14,RBP
            shl EAX,8
            add EAX,EDX
            cmp AX,7
            jne .L_43a678

            movzx EAX,BYTE PTR [R14+4]
            movzx EDX,BYTE PTR [R14+5]
            mov ESI,0
            mov R12,QWORD PTR [RSP+24]
            shl EAX,8
            add EAX,EDX
            test AX,AX
            movzx EDX,AX
            cmove EDX,ESI
            cmove R12,R13
.L_43a740:

            movzx ESI,BYTE PTR [R12]
            movzx EAX,BYTE PTR [R12+1]
            shl ESI,8
            add ESI,EAX
            movzx EAX,SI
            add RAX,R14
            test SI,SI
            cmove RAX,R13
            movzx ESI,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            shl ESI,8
            add ESI,EDI
            xor EDI,EDI
            cmp SI,1
            jne .L_43a781

            movzx EDI,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
.L_43a781:

            cmp EDX,1
            jbe .L_43a678

            mov RCX,QWORD PTR [RSP+64]
            lea EAX,DWORD PTR [RDX-2]
            lea RSI,QWORD PTR [R14+8]
            lea R8,QWORD PTR [RCX+RAX*2+6]
            jmp .L_43a7c5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a7a0:

            movzx EDX,BYTE PTR [RAX+2]
            movzx EAX,BYTE PTR [RAX+3]
            shl EDX,8
            add EAX,EDX
            movzx EAX,AX
.L_43a7b0:

            cmp EDI,EAX
            jne .L_43a638

            add RSI,2
            cmp R8,RSI
            je .L_43a678
.L_43a7c5:

            movzx EDX,BYTE PTR [RSI]
            movzx EAX,BYTE PTR [RSI+1]
            shl EDX,8
            add EDX,EAX
            movzx EAX,DX
            add RAX,R14
            test DX,DX
            cmove RAX,R13
            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,ECX
            cmp DX,1
            je .L_43a7a0

            xor EAX,EAX
            jmp .L_43a7b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a7f8:

            cmp SI,7
            jne .L_43a678

            xor EDX,EDX
            lea R12,QWORD PTR [RIP+.L_657760]
            jmp .L_43a740
.L_43a810:

            mov RDI,QWORD PTR [RSP+56]
            mov RSI,R15
            mov DWORD PTR [RSP+108],0
            call .L_439e90

            mov EDX,DWORD PTR [RSP+108]
            mov EBX,EAX
            test EDX,EDX
            jne .L_43a3a0

            mov RDI,QWORD PTR [RSP+112]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+88],0
            jne .L_43a36a

            jmp .L_43a3c5
.L_43a865:

            call __stack_chk_fail@PLT
.L_43a86a:

            lea RCX,QWORD PTR [RIP+.L_44c5c0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_43a889:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a890:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RCX,QWORD PTR [RSI+8]
            cmp RCX,RDI
            ja .L_43a8c0

            mov RBP,RSI
            mov RSI,QWORD PTR [RSI+16]
            mov RBX,RDI
            cmp RSI,RDI
            jae .L_43a8d8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a8c0:

            xor R15D,R15D
.L_43a8c3:

            add RSP,88
            mov EAX,R15D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a8d8:

            mov RAX,RSI
            mov R14,RDI
            sub RAX,RDI
            lea RDI,QWORD PTR [RIP+.L_44c24c]
            cmp EAX,1
            jbe .L_43a8c0
.L_43a8ed:

            cmp EDX,9
            ja .L_43a900

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RDI+RDX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a900:

            mov R15D,1
            jmp .L_43a8c3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a910:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            sub RSI,R14
            cmp ESI,1
            jbe .L_43a8c0

            cmp AX,1
            jne .L_43a900

            cmp ESI,11
            jbe .L_43a8c0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_43a8c0

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_43a8c0

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,R14
            mov RSI,RBP
            call .L_434890

            test AL,AL
            je .L_43a8c0

            movzx ECX,BYTE PTR [RBX+6]
            movzx EAX,BYTE PTR [RBX+7]
            add RSP,88
.L_43a98a:

            lea RDI,QWORD PTR [RBX+10]
            mov RDX,R14
            mov RSI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            shl ECX,8
            add ECX,EAX
            movzx ECX,CX
            jmp .L_4349e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a9b0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            sub RSI,R14
            cmp ESI,1
            jbe .L_43a8c0

            cmp AX,1
            jne .L_43a900

            cmp ESI,11
            jbe .L_43a8c0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_43a8c0

            lea RDI,QWORD PTR [RBX+4]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_43a8c0

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,R14
            mov RSI,RBP
            call .L_434890

            test AL,AL
            mov R15D,EAX
            je .L_43a8c0

            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RBX+10]
            cmp RDX,RCX
            jb .L_43a8c0

            mov RAX,QWORD PTR [RBP+16]
            cmp RDX,RAX
            ja .L_43a8c0

            mov RDI,RAX
            sub RDI,RDX
            cmp EDI,1
            jbe .L_43a8c0

            movzx EDX,BYTE PTR [RBX+10]
            movzx ESI,BYTE PTR [RBX+11]
            shl EDX,8
            add DX,SI
            je .L_43a8c3

            movzx EDX,DX
            add R14,RDX
            cmp RCX,R14
            ja .L_43ab13

            cmp RAX,R14
            jb .L_43ab13

            mov RDX,RAX
            sub RDX,R14
            cmp EDX,1
            jbe .L_43ab13

            lea R12,QWORD PTR [R14+2]
            cmp RCX,R12
            ja .L_43ab13

            cmp RAX,R12
            jb .L_43ab13

            movzx EDX,BYTE PTR [R14]
            movzx ECX,BYTE PTR [R14+1]
            sub RAX,R12
            shl EDX,8
            add EDX,ECX
            movzx ECX,DX
            lea ESI,DWORD PTR [RCX+RCX*1]
            cmp ESI,EAX
            ja .L_43ab13

            test DX,DX
            je .L_43a8c3

            movzx R13D,BYTE PTR [RBX+6]
            movzx EAX,BYTE PTR [RBX+7]
            shl R13D,8
            add R13D,EAX
            lea EAX,DWORD PTR [RCX-1]
            movzx R13D,R13W
            add RAX,RAX
            lea RAX,QWORD PTR [R14+RAX*1+4]
            mov QWORD PTR [RSP],RAX
            jmp .L_43aafe
.L_43aaf0:

            add R12,2
            cmp QWORD PTR [RSP],R12
            je .L_43a8c3
.L_43aafe:

            mov ECX,R13D
            mov RDX,R14
            mov RSI,RBP
            mov RDI,R12
            call .L_4349e0

            test AL,AL
            jne .L_43aaf0
.L_43ab13:

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_43a8c0

            movzx R15D,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test R15B,R15B
            je .L_43a8c0

            mov WORD PTR [RBX+10],0
            jmp .L_43a8c3
          .byte 0x66
          .byte 0x90
.L_43ab40:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            mov RDX,RSI
            sub RDX,R14
            cmp EDX,1
            jbe .L_43a8c0

            cmp AX,1
            jne .L_43a900

            cmp EDX,7
            jbe .L_43a8c0

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EAX,EDX
            je .L_43a8c0

            movzx EDX,BYTE PTR [RBX+2]
            movzx R8D,BYTE PTR [RBX+3]
            mov EAX,EAX
            add R14,RAX
            shl EDX,8
            add EDX,R8D
            cmp R14,RCX
            movzx EDX,DX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            mov RAX,RSI
            mov RBX,R14
            sub RAX,R14
            cmp EAX,1
            ja .L_43a8ed

            jmp .L_43a8c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43abf0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            sub RSI,R14
            cmp ESI,1
            jbe .L_43a8c0

            cmp AX,1
            jne .L_43a900

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            mov R15D,EAX
            je .L_43a8c0

            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RBX+4]
            cmp RDX,RCX
            jb .L_43a8c0

            mov RSI,QWORD PTR [RBP+16]
            cmp RDX,RSI
            ja .L_43a8c0

            mov RAX,RSI
            sub RAX,RDX
            cmp EAX,1
            jbe .L_43a8c0

            lea RAX,QWORD PTR [RBX+6]
            cmp RCX,RAX
            ja .L_43a8c0

            cmp RSI,RAX
            jb .L_43a8c0

            movzx ECX,BYTE PTR [RBX+4]
            movzx EDI,BYTE PTR [RBX+5]
            sub RSI,RAX
            shl ECX,8
            add ECX,EDI
            movzx EDI,CX
            lea R10D,DWORD PTR [RDI*4]
            cmp R10D,ESI
            ja .L_43a8c0

            test CX,CX
            je .L_43a8c3

            mov RBX,RAX
            lea EAX,DWORD PTR [RDI-1]
            lea R12,QWORD PTR [RDX+RAX*4+6]
            jmp .L_43ace4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43acc0:

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_434780

            test AL,AL
            je .L_43a8c0

            add RBX,4
            cmp R12,RBX
            je .L_43a8c3
.L_43ace4:

            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_434780

            test AL,AL
            je .L_43a8c0

            jmp .L_43acc0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ad00:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            sub RSI,R14
            cmp ESI,1
            jbe .L_43a8c0

            cmp AX,1
            je .L_43aeb0

            cmp AX,2
            jne .L_43a900

            add RSP,88
.L_43ad42:

            mov RSI,RBP
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_434ee0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ad60:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp R14,RCX
            jb .L_43a8c0

            cmp R14,RSI
            ja .L_43a8c0

            sub RSI,R14
            cmp ESI,1
            jbe .L_43a8c0

            cmp AX,1
            je .L_43b140

            cmp AX,2
            jne .L_43a900

            cmp ESI,7
            jbe .L_43a8c0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_43a8c0

            movzx EAX,BYTE PTR [RBX+6]
            movzx R13D,BYTE PTR [RBX+4]
            lea R12,QWORD PTR [RBX+8]
            shl EAX,8
            shl R13D,8
            mov EDX,EAX
            movzx EAX,BYTE PTR [RBX+7]
            add EAX,EDX
            mov WORD PTR [RSP+8],AX
            movzx R15D,AX
            movzx EAX,BYTE PTR [RBX+5]
            add EAX,R13D
            movzx EDI,AX
            mov WORD PTR [RSP],AX
            call __popcountdi2@PLT

            movsxd R13,EAX
            mov ECX,R15D
            mov RSI,R12
            lea EDX,DWORD PTR [R13+R13*1]
            mov RDI,RBP
            call .L_42beb0

            test AL,AL
            je .L_43a8c0

            test BYTE PTR [RSP],240
            je .L_43a900

            cmp WORD PTR [RSP+8],0
            je .L_43a900

            lea RAX,QWORD PTR [R13+R13*1]
            add RBX,4
            xor R13D,R13D
            mov QWORD PTR [RSP],RAX
            jmp .L_43ae51
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ae40:

            add R13D,1
            add R12,QWORD PTR [RSP]
            cmp R15D,R13D
            je .L_43a900
.L_43ae51:

            mov RCX,R12
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_433cf0

            test AL,AL
            jne .L_43ae40

            jmp .L_43a8c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ae70:

            add RSP,88
.L_43ae74:

            mov RSI,RBP
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_439470
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ae90:

            add RSP,88
            mov RSI,RBP
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4392d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43aeb0:

            cmp ESI,9
            jbe .L_43a8c0

            movzx EDI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            movzx EDI,BYTE PTR [RBX+6]
            movsxd R12,EAX
            movzx EAX,BYTE PTR [RBX+7]
            shl EDI,8
            add EDI,EAX
            movzx EDI,DI
            call __popcountdi2@PLT

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            mov R13D,EAX
            call .L_434c20

            test AL,AL
            mov R15D,EAX
            je .L_43a8c0

            mov RCX,QWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RBX+8]
            cmp RAX,RCX
            jb .L_43a8c0

            mov RSI,QWORD PTR [RBP+16]
            cmp RAX,RSI
            ja .L_43a8c0

            mov RDX,RSI
            sub RDX,RAX
            cmp EDX,1
            jbe .L_43a8c0

            lea R8,QWORD PTR [RBX+10]
            cmp RCX,R8
            ja .L_43a8c0

            cmp RSI,R8
            jb .L_43a8c0

            movzx EDI,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            mov R10,RSI
            sub R10,R8
            shl EDI,8
            add EDI,EDX
            movzx EDX,DI
            lea R11D,DWORD PTR [RDX+RDX*1]
            cmp R11D,R10D
            ja .L_43a8c0

            test DI,DI
            je .L_43a8c3

            cmp R10D,1
            jbe .L_43a8c0

            lea RDI,QWORD PTR [RBX+4]
            sub EDX,1
            mov BYTE PTR [RSP+79],R15B
            lea RAX,QWORD PTR [RAX+RDX*2+4]
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+48],RDI
            lea EDI,DWORD PTR [R12+R13*1+1]
            mov R13,R8
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RBX+6]
            lea R11D,DWORD PTR [RDI+RDI*1]
            add RDI,RDI
            mov QWORD PTR [RSP],RDI
            lea RDI,QWORD PTR [R12+R12*1+2]
            lea R12,QWORD PTR [RBX+12]
            mov DWORD PTR [RSP+72],R11D
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+56],RDI
.L_43afcb:

            movzx EAX,BYTE PTR [R13]
            movzx EDX,BYTE PTR [R13+1]
            shl EAX,8
            add AX,DX
            je .L_43b068

            movzx EAX,AX
            add RAX,R14
            cmp RAX,RCX
            jb .L_43b110

            cmp RAX,RSI
            ja .L_43b110

            mov RDX,RSI
            sub RDX,RAX
            cmp EDX,1
            jbe .L_43b110

            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            shl EDX,8
            add EDX,EDI
            lea RDI,QWORD PTR [RAX+2]
            movzx R15D,DX
            cmp RCX,RDI
            mov QWORD PTR [RSP+16],RDI
            ja .L_43b110

            cmp RSI,RDI
            jb .L_43b110

            mov ECX,DWORD PTR [RSP+72]
            sub RSI,RDI
            imul ECX,R15D
            cmp ECX,ESI
            ja .L_43b110

            mov RCX,QWORD PTR [RSP+24]
            movzx ECX,BYTE PTR [RCX+5]
            and ECX,240
            jne .L_43b1ce

            mov RAX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+7]
            test AL,240
            jne .L_43b0a9
.L_43b068:

            cmp R12,QWORD PTR [RSP+8]
            je .L_43b229

            mov RCX,QWORD PTR [RBP+8]
            cmp R12,RCX
            jb .L_43a8c0

            mov RSI,QWORD PTR [RBP+16]
            cmp R12,RSI
            ja .L_43a8c0

            mov RAX,RSI
            add R13,2
            sub RAX,R12
            add R12,2
            cmp EAX,1
            ja .L_43afcb

            jmp .L_43a8c0
.L_43b0a9:

            test DX,DX
            je .L_43b068
.L_43b0ae:

            mov RBX,QWORD PTR [RSP+16]
            add RBX,QWORD PTR [RSP+56]
            xor R9D,R9D
            mov QWORD PTR [RSP+16],R13
            mov QWORD PTR [RSP+32],R12
            mov R13D,R9D
            mov R12,RBX
            mov RBX,QWORD PTR [RSP+64]
            jmp .L_43b0e9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b0d8:

            add R13D,1
            add R12,QWORD PTR [RSP]
            cmp R15D,R13D
            je .L_43b254
.L_43b0e9:

            mov RCX,R12
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_433cf0

            test AL,AL
            jne .L_43b0d8

            mov R13,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b110:

            mov EAX,DWORD PTR [RBP+28]
            cmp EAX,2
            ja .L_43a8c0

            movzx EDX,BYTE PTR [RBP+24]
            add EAX,1
            mov DWORD PTR [RBP+28],EAX
            test DL,DL
            je .L_43a8c0

            mov BYTE PTR [R13],0
            mov BYTE PTR [R13+1],0
            jmp .L_43b068
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b140:

            cmp ESI,5
            jbe .L_43a8c0

            lea RDI,QWORD PTR [RBX+2]
            mov RDX,R14
            mov RSI,RBP
            call .L_434c20

            test AL,AL
            je .L_43a8c0

            movzx R12D,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            lea R13,QWORD PTR [RBX+6]
            shl R12D,8
            add R12D,EAX
            movzx EDI,R12W
            call __popcountdi2@PLT

            cmp R13,QWORD PTR [RBP+8]
            jb .L_43a8c0

            mov RDX,QWORD PTR [RBP+16]
            cmp R13,RDX
            ja .L_43a8c0

            add EAX,EAX
            sub RDX,R13
            cmp EAX,EDX
            ja .L_43a8c0

            and R12D,240
            je .L_43a900

            add RSP,88
.L_43b1b2:

            lea RDI,QWORD PTR [RBX+4]
            mov RCX,R13
            pop RBX
            mov RDX,R14
            mov RSI,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_433cf0
.L_43b1ce:

            test DX,DX
            je .L_43b068

            lea R9,QWORD PTR [RAX+4]
            xor EBX,EBX
            mov QWORD PTR [RSP+32],R13
            mov QWORD PTR [RSP+40],R12
            mov R13D,EBX
            mov RBX,QWORD PTR [RSP+48]
            mov R12,R9
            jmp .L_43b205
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43b1f8:

            add R13D,1
            add R12,QWORD PTR [RSP]
            cmp R15D,R13D
            je .L_43b234
.L_43b205:

            mov RCX,R12
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_433cf0

            test AL,AL
            jne .L_43b1f8

            mov R13,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+40]
            jmp .L_43b110
.L_43b229:

            movzx R15D,BYTE PTR [RSP+79]
            jmp .L_43a8c3
.L_43b234:

            mov RAX,QWORD PTR [RSP+24]
            mov R13,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RAX+7]
            test AL,240
            je .L_43b068

            jmp .L_43b0ae
.L_43b254:

            mov R13,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+32]
            jmp .L_43b068
.L_43b263:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b270:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,56
.L_43b281:

            mov QWORD PTR [RSP+40],RDI
            call .L_4331d0

            test AL,AL
            mov BYTE PTR [RSP+15],AL
            je .L_43b468

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RDI+8]
            cmp RAX,RDX
            jb .L_43b468

            mov RCX,QWORD PTR [RBX+16]
            cmp RAX,RCX
            ja .L_43b468

            mov RSI,RCX
            sub RSI,RAX
            cmp ESI,1
            jbe .L_43b468

            movzx EAX,BYTE PTR [RDI+8]
            movzx ESI,BYTE PTR [RDI+9]
            shl EAX,8
            add AX,SI
            je .L_43b46d

            movzx EAX,AX
            add RAX,RDI
            cmp RDX,RAX
            mov R8,RAX
            mov QWORD PTR [RSP+24],RAX
            ja .L_43b4d0

            cmp RCX,RAX
            jb .L_43b4d0

            mov RAX,RCX
            sub RAX,R8
            cmp EAX,1
            jbe .L_43b4d0

            lea RAX,QWORD PTR [R8+2]
            cmp RDX,RAX
            ja .L_43b4d0

            cmp RCX,RAX
            jb .L_43b4d0

            movzx EDX,BYTE PTR [R8]
            movzx ESI,BYTE PTR [R8+1]
            sub RCX,RAX
            shl EDX,8
            add EDX,ESI
            movzx ESI,DX
            lea EDI,DWORD PTR [RSI+RSI*1]
            cmp EDI,ECX
            ja .L_43b4d0

            test DX,DX
            je .L_43b46d

            cmp ECX,1
            jbe .L_43b4d0

            lea RCX,QWORD PTR [R8+4]
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RSI-1]
            lea R12,QWORD PTR [RIP+.L_657760]
            lea RAX,QWORD PTR [RCX+RAX*2]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
.L_43b378:

            mov RAX,QWORD PTR [RSP+16]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_43b490

            mov RAX,QWORD PTR [RSP+24]
            movzx ECX,CX
            mov RSI,RBX
            lea R15,QWORD PTR [RAX+RCX*1]
            mov RDI,R15
            call .L_42c280

            test AL,AL
            je .L_43b443

            movzx EBP,BYTE PTR [R15]
            movzx EAX,BYTE PTR [R15+1]
            movzx EDX,BYTE PTR [R15+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R15+4]
            movzx EBP,BP
            mov ESI,EAX
            shl ESI,8
            add ESI,EDX
            test SI,SI
            movzx EDI,SI
            je .L_43b490

            lea R13D,DWORD PTR [RDI-1]
            xor R14D,R14D
            add R13,1
            jmp .L_43b407
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b3f0:

            add R14,1
            cmp R13,R14
            je .L_43b490

            movzx EAX,BYTE PTR [R15+4]
            movzx EDX,BYTE PTR [R15+5]
.L_43b407:

            shl EAX,8
            add EAX,EDX
            mov RDX,R12
            movzx EAX,AX
            cmp EAX,R14D
            jbe .L_43b41c

            lea RDX,QWORD PTR [R15+R14*2+6]
.L_43b41c:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,RBX
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,R15
            test AX,AX
            cmove RDI,R12
            call .L_43a890

            test AL,AL
            jne .L_43b3f0
.L_43b443:

            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_43b468

            movzx ECX,BYTE PTR [RBX+24]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+28],EDX
            test CL,CL
            jne .L_43b481

            cmp EDX,3
            je .L_43b468

            add EAX,2
            mov DWORD PTR [RBX+28],EAX
            nop
            nop
            nop
            nop
.L_43b468:

            mov BYTE PTR [RSP+15],0
.L_43b46d:

            movzx EAX,BYTE PTR [RSP+15]
            add RSP,56
.L_43b476:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43b481:

            mov RAX,QWORD PTR [RSP+16]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
.L_43b490:

            mov RCX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+32],RCX
            je .L_43b46d

            mov RAX,QWORD PTR [RSP]
            cmp RAX,QWORD PTR [RBX+8]
            jb .L_43b4d0

            mov RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP]
            cmp RCX,RAX
            ja .L_43b4d0

            sub RAX,RCX
            add QWORD PTR [RSP+16],2
            add RCX,2
            cmp EAX,1
            mov QWORD PTR [RSP],RCX
            ja .L_43b378

            nop
            nop
            nop
            nop
.L_43b4d0:

            movzx EAX,BYTE PTR [RBX+24]
            mov BYTE PTR [RSP+15],AL
            mov EAX,DWORD PTR [RBX+28]
            cmp EAX,2
            ja .L_43b468

            add EAX,1
            cmp BYTE PTR [RSP+15],0
            mov DWORD PTR [RBX+28],EAX
            je .L_43b468

            mov RAX,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov WORD PTR [RAX+8],DX
            jmp .L_43b46d
.L_43b501:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b510:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_657760]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_43b525:

            lea R12,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+56],RDI
            mov DWORD PTR [RSP+64],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov BYTE PTR [RSP+88],0
            mov DWORD PTR [RSP+92],0
            mov QWORD PTR [RSP+96],0
            call .L_401c30

            mov BYTE PTR [RSP+88],0
            mov RDI,RAX
            mov QWORD PTR [RSP+96],RAX
.L_43b581:

            xor ESI,ESI
            call .L_401d50

            mov RDI,QWORD PTR [RSP+96]
            mov RBX,RAX
            mov QWORD PTR [RSP+72],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+80],RBX
            cmp RBX,RAX
            mov QWORD PTR [RSP+48],RAX
            jb .L_43ba13

            cmp QWORD PTR [RSP+48],0
            mov DWORD PTR [RSP+92],0
            mov DWORD PTR [RSP+64],0
            je .L_43b630

            mov RBX,QWORD PTR [RSP+48]
            mov RSI,R12
            mov RDI,RBX
            call .L_4331d0

            test AL,AL
            je .L_43b668

            mov R9,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RBX+8]
            cmp RAX,R9
            jb .L_43b668

            mov R10,QWORD PTR [RSP+80]
            cmp RAX,R10
            ja .L_43b668

            mov RSI,R10
            sub RSI,RAX
            cmp ESI,1
            jbe .L_43b668

            movzx EAX,BYTE PTR [RBX+8]
            movzx EDX,BYTE PTR [RBX+9]
            shl EAX,8
            add AX,DX
            jne .L_43b700
.L_43b61e:

            mov ECX,DWORD PTR [RSP+92]
            test ECX,ECX
            jne .L_43b9b9

            nop
            nop
            nop
            nop
            nop
            nop
.L_43b630:

            mov RDI,QWORD PTR [RSP+96]
            call .L_401950
.L_43b63a:

            mov RSI,QWORD PTR [RSP+104]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+56]
            jne .L_43ba0e

            add RSP,120
.L_43b657:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_43b668:

            mov EAX,DWORD PTR [RSP+92]
            test EAX,EAX
            jne .L_43b6b0
.L_43b670:

            mov RDI,QWORD PTR [RSP+96]
            call .L_401950

            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+72],0
.L_43b695:

            mov RDI,QWORD PTR [RSP+56]
            call .L_401950

            call .L_401c20

            mov QWORD PTR [RSP+56],RAX
            jmp .L_43b63a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b6b0:

            cmp BYTE PTR [RSP+88],0
            jne .L_43b670
.L_43b6b7:

            mov R14,QWORD PTR [RSP+56]
            xor ESI,ESI
            mov RDI,R14
            call .L_401d70

            mov RDI,R14
            mov RBX,RAX
            mov QWORD PTR [RSP+72],RAX
            call .L_401d40

            mov EAX,EAX
            add RBX,RAX
            cmp QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],RBX
            je .L_43b670

            mov BYTE PTR [RSP+88],1
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_43b581
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b700:

            movzx EAX,AX
            add RAX,RBX
            cmp R9,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP+32],RAX
            ja .L_43b988

            cmp R10,RAX
            jb .L_43b988

            mov RAX,R10
            sub RAX,RBX
            cmp EAX,1
            jbe .L_43b988

            lea R14,QWORD PTR [RBX+2]
            cmp R9,R14
            ja .L_43b988

            cmp R10,R14
            jb .L_43b988

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            mov RDX,R10
            movzx ECX,AX
            sub RDX,R14
            lea ESI,DWORD PTR [RCX+RCX*1]
            cmp ESI,EDX
            ja .L_43b988

            test AX,AX
            je .L_43b61e

            cmp EDX,1
            jbe .L_43b988

            lea RSI,QWORD PTR [RBX+4]
            lea EAX,DWORD PTR [RCX-1]
            mov QWORD PTR [RSP+24],R14
            lea RAX,QWORD PTR [RSI+RAX*2]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+40],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b798:

            mov RAX,QWORD PTR [RSP+24]
            movzx ECX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            shl ECX,8
            add CX,AX
            je .L_43b938

            mov RAX,QWORD PTR [RSP+32]
            movzx ECX,CX
            lea RBP,QWORD PTR [RAX+RCX*1]
            cmp RBP,R9
            jb .L_43b8f8

            cmp RBP,R10
            ja .L_43b8f8

            mov RAX,R10
            sub RAX,RBP
            cmp EAX,5
            jbe .L_43b8f8

            lea RDI,QWORD PTR [RBP+4]
            cmp RDI,R9
            jb .L_43b8f8

            cmp R10,RDI
            jb .L_43b8f8

            mov RAX,R10
            sub RAX,RDI
            cmp EAX,1
            jbe .L_43b8f8

            lea RDX,QWORD PTR [RBP+6]
            cmp RDX,R9
            jb .L_43b8f8

            cmp R10,RDX
            jb .L_43b8f8

            movzx EAX,BYTE PTR [RBP+4]
            movzx ESI,BYTE PTR [RBP+5]
            mov RBX,R10
            sub RBX,RDX
            mov R11D,EAX
            shl R11D,8
            add R11D,ESI
            movzx ECX,R11W
            lea R8D,DWORD PTR [RCX+RCX*1]
            mov DWORD PTR [RSP+12],ECX
            cmp R8D,EBX
            ja .L_43b8f8

            test BYTE PTR [RBP+3],16
            je .L_43b878

            add R8D,2
            add RDI,R8
            cmp RDI,R9
            jb .L_43b8f8

            cmp R10,RDI
            jb .L_43b8f8

            sub R10,RDI
            cmp R10D,1
            jbe .L_43b8f8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b878:

            movzx EBX,BYTE PTR [RBP]
            movzx EDI,BYTE PTR [RBP+1]
            shl EBX,8
            add EBX,EDI
            test R11W,R11W
            movzx EBX,BX
            je .L_43b938

            mov R14,RDX
            xor R13D,R13D
            jmp .L_43b8bb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b8a0:

            add R13D,1
            add R14,2
            cmp DWORD PTR [RSP+12],R13D
            je .L_43b938

            movzx EAX,BYTE PTR [RBP+4]
            movzx ESI,BYTE PTR [RBP+5]
.L_43b8bb:

            shl EAX,8
            mov RDX,R15
            add EAX,ESI
            mov RSI,R12
            movzx EAX,AX
            cmp R13D,EAX
            cmovb RDX,R14
            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            shl EAX,8
            add EAX,EDX
            mov EDX,EBX
            movzx EDI,AX
            add RDI,RBP
            test AX,AX
            cmove RDI,R15
            call .L_43a890

            test AL,AL
            jne .L_43b8a0

            nop
            nop
            nop
            nop
.L_43b8f8:

            mov EAX,DWORD PTR [RSP+92]
            cmp EAX,2
            ja .L_43b6b0

            cmp BYTE PTR [RSP+88],0
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP+92],EDX
            jne .L_43b928

            cmp EDX,3
            je .L_43b6b0

            add EAX,2
            mov DWORD PTR [RSP+92],EAX
            jmp .L_43b6b7
.L_43b928:

            mov RAX,QWORD PTR [RSP+24]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RAX+1],0
            nop
            nop
            nop
            nop
.L_43b938:

            mov RCX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+40],RCX
            je .L_43b61e

            mov R9,QWORD PTR [RSP+72]
            cmp QWORD PTR [RSP+16],R9
            jb .L_43b988

            mov R10,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP+16]
            cmp RCX,R10
            ja .L_43b988

            mov RAX,R10
            add QWORD PTR [RSP+24],2
            sub RAX,RCX
            add RCX,2
            cmp EAX,1
            mov QWORD PTR [RSP+16],RCX
            ja .L_43b798

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b988:

            mov EAX,DWORD PTR [RSP+92]
            movzx EDX,BYTE PTR [RSP+88]
            cmp EAX,2
            ja .L_43b6b0

            add EAX,1
            test DL,DL
            mov DWORD PTR [RSP+92],EAX
            je .L_43b6b7

            mov RAX,QWORD PTR [RSP+48]
            xor ESI,ESI
            mov WORD PTR [RAX+8],SI
            jmp .L_43b61e
.L_43b9b9:

            mov RDI,QWORD PTR [RSP+48]
            mov RSI,R12
            mov DWORD PTR [RSP+92],0
            call .L_43b270

            mov EDX,DWORD PTR [RSP+92]
            mov EBX,EAX
            test EDX,EDX
            jne .L_43b670

            mov RDI,QWORD PTR [RSP+96]
            call .L_401950

            test BL,BL
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+72],0
            jne .L_43b63a

            jmp .L_43b695
.L_43ba0e:

            call __stack_chk_fail@PLT
.L_43ba13:

            lea RCX,QWORD PTR [RIP+.L_44c5c0]
            lea RSI,QWORD PTR [RIP+.L_43f1d0]
            lea RDI,QWORD PTR [RIP+.L_43f1e8]
            mov EDX,218
            call __assert_fail@PLT
.L_43ba32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ba40:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_43ba70

            cmp AX,3
            je .L_43ba98

            cmp AX,1
            je .L_43ba70

            lea RAX,QWORD PTR [RIP+.L_657760]
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ba70:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
.L_43ba7b:

            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ba98:

            movzx EDX,BYTE PTR [RDI+6]
            movzx EAX,BYTE PTR [RDI+7]
            shl EDX,8
            jmp .L_43ba7b
.L_43baa5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bab0:

            lea RCX,QWORD PTR [RIP+.L_44c274]
            lea R8,QWORD PTR [RIP+.L_657760]
.L_43babe:

            cmp EDX,9
            ja .L_43bb20

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_43bad0:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43bb20
.L_43bae2:

            movzx EDX,BYTE PTR [RDI+2]
            movzx EAX,BYTE PTR [RDI+3]
            shl EDX,8
            add EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_657760]
            movzx ECX,DX
            add RDI,RCX
            test DX,DX
            cmovne RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43bb08:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43bae2

            cmp AX,2
            je .L_43bae2
.L_43bb20:

            lea RAX,QWORD PTR [RIP+.L_657760]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bb30:

            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43bb20

            movzx EDX,BYTE PTR [RDI+4]
            movzx EAX,BYTE PTR [RDI+5]
            shl EDX,24
            shl EAX,16
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RDI+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RDI
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RDI+2]
            movzx EDI,BYTE PTR [RDI+3]
            cmove RAX,R8
            shl EDX,8
            add EDX,EDI
            mov RDI,RAX
            movzx EDX,DX
            jmp .L_43babe
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bb90:

            jmp .L_4266a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bb98:

            jmp .L_43ba40
.L_43bb9d:

            nop
            nop
            nop
.L_43bba0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_43bbab:

            mov RDI,QWORD PTR [RDI+8]
            mov EBX,DWORD PTR [RBP]
            test RDI,RDI
            je .L_43bbf0

            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,EBX
            ja .L_43bc07

            mov EDX,EAX
            mov R12,RDI
            shr EDX,1
            lea R13D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBP+16]
            cmp RDI,RDX
            je .L_43bc95

            cmp R13D,268435454
            ja .L_43bbe5

            cmp EAX,R13D
            jbe .L_43bc20
.L_43bbe5:

            xor EAX,EAX
            jmp .L_43bc17
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bbf0:

            lea R12,QWORD PTR [RBP+16]
            cmp EBX,15
            mov DWORD PTR [RBP+4],16
            mov QWORD PTR [RBP+8],R12
            ja .L_43bc58

            mov RDI,R12
.L_43bc07:

            lea EAX,DWORD PTR [RBX+1]
            mov DWORD PTR [RBP],EAX
            mov EAX,EBX
            shl RAX,4
            lea RAX,QWORD PTR [RDI+RAX*1]
.L_43bc17:

            pop RBX
.L_43bc18:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_43bc20:

            mov ESI,R13D
            shl RSI,4
            call realloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_43bbe5

            mov EAX,DWORD PTR [RBP]
            mov RBX,RAX
            shl RAX,4
            mov R14,RAX
.L_43bc41:

            add EBX,1
            mov QWORD PTR [RBP+8],RCX
            mov DWORD PTR [RBP+4],R13D
            mov DWORD PTR [RBP],EBX
            lea RAX,QWORD PTR [RCX+R14*1]
            jmp .L_43bc17
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bc58:

            mov EDI,32
            mov R13D,32
.L_43bc63:

            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_43bbe5

            mov EAX,EBX
            mov RDI,RCX
            mov RSI,R12
            shl RAX,4
            mov RDX,RAX
            mov R14,RAX
            call memcpy@PLT

            mov RCX,RAX
            jmp .L_43bc41
.L_43bc95:

            mov EDI,R13D
            jmp .L_43bc63
.L_43bc9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43bca0:

            push RBX
            movzx EAX,BYTE PTR [RDI]
            mov RBX,RDI
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_43bd10

            cmp AX,3
            je .L_43bcf0

            cmp AX,1
            je .L_43bcd0
.L_43bcc2:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bcd0:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43bcc2

            lea RCX,QWORD PTR [RIP+.L_42d170]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_43bcf0:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43bcc2

            lea RCX,QWORD PTR [RIP+.L_42d0a0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_43bd10:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43bcc2

            lea RCX,QWORD PTR [RIP+.L_42e0a0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
.L_43bd2f:

            nop
.L_43bd30:

            push RBX
            movzx EAX,BYTE PTR [RDI]
            mov RBX,RDI
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,2
            je .L_43bda0

            cmp AX,3
            je .L_43bd80

            cmp AX,1
            je .L_43bd60
.L_43bd52:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bd60:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43bd52

            lea RCX,QWORD PTR [RIP+.L_42e6b0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_43bd80:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43bd52

            lea RCX,QWORD PTR [RIP+.L_42f530]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x90
.L_43bda0:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43bd52

            lea RCX,QWORD PTR [RIP+.L_42f180]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RCX
            xor EAX,EAX
            pop RBX
            ret 
.L_43bdbf:

            nop
.L_43bdc0:

            lea RCX,QWORD PTR [RIP+.L_44c29c]
            lea R8,QWORD PTR [RIP+.L_657760]
            push RBX
            mov RBX,RDI
.L_43bdd2:

            cmp EDX,8
            ja .L_43be03

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bde8:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43be03

            lea RDI,QWORD PTR [RIP+.L_42d820]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
.L_43be03:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43be10:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43be03

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43be03

            lea RDI,QWORD PTR [RIP+.L_4316e0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43be03
          .byte 0x90
.L_43be40:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43bde8

            cmp AX,2
            jne .L_43be03

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43be03

            lea RDI,QWORD PTR [RIP+.L_42d8d0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43be03
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43be78:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43be03

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43be03

            lea RDI,QWORD PTR [RIP+.L_42fde0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43be03
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43beb8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43be03

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43be03

            lea RDI,QWORD PTR [RIP+.L_430340]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43be03
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bef8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43be03

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43be03

            lea RDI,QWORD PTR [RIP+.L_430860]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43be03
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bf38:

            mov RDI,RBX
            pop RBX
.L_43bf3c:

            jmp .L_43bca0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bf48:

            mov RDI,RBX
            pop RBX
            jmp .L_43bd30
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bf58:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43be03

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov EDI,EDX
            shl EAX,16
            shl EDI,24
            lea EDX,DWORD PTR [RDI+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            movzx EDI,BYTE PTR [RBX+3]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,R8
            mov RBX,RAX
            shl EDX,8
            add EDX,EDI
            movzx EDX,DX
            jmp .L_43bdd2
.L_43bfb7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bfc0:

            push RBX
.L_43bfc1:

            lea RCX,QWORD PTR [RIP+.L_44c2c0]
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_657760]
.L_43bfd2:

            cmp EDX,9
            ja .L_43c003

            mov EDX,EDX
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bfe8:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RDI,QWORD PTR [RIP+.L_431a20]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
.L_43c003:

            xor EAX,EAX
            pop RBX
.L_43c006:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c010:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43c003

            movzx EDX,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            movzx R8D,BYTE PTR [RBX+3]
            shl EAX,16
            shl EDX,24
            lea EDX,DWORD PTR [RDX+RAX*1]
            movzx EAX,BYTE PTR [RBX+6]
            shl EAX,8
            add EAX,EDX
            movzx EDX,BYTE PTR [RBX+7]
            add EDX,EAX
            mov RAX,RDX
            add RDX,RBX
            test EAX,EAX
            mov RAX,RDX
            movzx EDX,BYTE PTR [RBX+2]
            cmove RAX,RDI
            mov RBX,RAX
            shl EDX,8
            add EDX,R8D
            movzx EDX,DX
            jmp .L_43bfd2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c070:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43bfe8

            cmp AX,2
            jne .L_43c003

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RDI,QWORD PTR [RIP+.L_431ac0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43c003
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c0b8:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            je .L_43c220

            cmp AX,2
            jne .L_43c003

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RDI,QWORD PTR [RIP+.L_432540]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43c003
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c100:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43c003

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RSI,QWORD PTR [RIP+.L_432970]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_43c003
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c140:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43c003

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RDI,QWORD PTR [RIP+.L_432b40]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43c003
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c180:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43c003

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RSI,QWORD PTR [RIP+.L_432da0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_43c003
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c1c0:

            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43c003

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RDI,QWORD PTR [RIP+.L_432fd0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RDI
            jmp .L_43c003
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c200:

            mov RDI,RBX
            pop RBX
.L_43c204:

            jmp .L_43bca0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c210:

            mov RDI,RBX
            pop RBX
            jmp .L_43bd30
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c220:

            mov RDI,QWORD PTR [RSI]
            call .L_43bba0

            test RAX,RAX
            je .L_43c003

            lea RSI,QWORD PTR [RIP+.L_4322f0]
            mov QWORD PTR [RAX],RBX
            mov QWORD PTR [RAX+8],RSI
            jmp .L_43c003
.L_43c244:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c250:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,648
.L_43c265:

            mov RAX,QWORD PTR [RCX+128]
            mov QWORD PTR [RSP+104],RDX
            mov EDX,DWORD PTR [R8+144]
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],3
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RAX+160]
            mov DWORD PTR [RSP+160],EDX
            mov QWORD PTR [RSP+152],R8
            mov QWORD PTR [RSP+136],RCX
            mov DWORD PTR [RSP+164],1
            mov RDX,QWORD PTR [RAX+24]
            mov BYTE PTR [RSP+168],1
            mov QWORD PTR [RSP+88],RSI
            mov QWORD PTR [RSP+16],R8
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+632],RSI
            xor ESI,ESI
            mov QWORD PTR [RSP+192],RDX
            movzx EAX,BYTE PTR [RDX+4]
            movzx EDX,BYTE PTR [RDX+5]
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+8],RCX
            mov DWORD PTR [RSP+128],1
            movaps XMMWORD PTR [RSP+208],XMM0
            shl EAX,8
            add AX,DX
            mov EAX,4294967295
            movaps XMMWORD PTR [RSP+224],XMM0
            setne BYTE PTR [RSP+200]
            movaps XMMWORD PTR [RSP+256],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+320],XMM0
            mov R8D,DWORD PTR [RDI+944]
            mov QWORD PTR [RSP+336],RAX
            lea RAX,QWORD PTR [RIP+.L_437340]
            mov DWORD PTR [RSP+232],4294967295
            mov BYTE PTR [RSP+236],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+248],0
            test R8D,R8D
            mov DWORD PTR [RSP+296],4294967295
            mov BYTE PTR [RSP+300],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+176],RAX
            je .L_43c573

            lea RAX,QWORD PTR [RSP+352]
            lea R15,QWORD PTR [RIP+.L_657760]
            mov DWORD PTR [RSP+84],0
            mov DWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+368]
            mov QWORD PTR [RSP+96],RAX
.L_43c400:

            mov EAX,DWORD PTR [RSP+84]
            mov RSI,QWORD PTR [RSP+32]
            shl RAX,4
            add RAX,QWORD PTR [RSI+952]
            mov ESI,DWORD PTR [RSP+24]
            cmp ESI,DWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
            jae .L_43c530

            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+56],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c438:

            mov R13,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [R13+600]
            lea RBX,QWORD PTR [RAX*8]
            movzx R12D,WORD PTR [RDX+RAX*8]
            lea RDX,QWORD PTR [RIP+.L_44c2e8]
            xor EAX,EAX
            mov ECX,R12D
            mov DWORD PTR [RSP+28],R12D
            mov RBP,R12
            call .L_42c190

            test AL,AL
            mov R14D,EAX
            je .L_43c51a

            add RBX,QWORD PTR [R13+600]
            mov DWORD PTR [RSP+336],R12D
            mov ESI,R12D
            mov RDI,QWORD PTR [RSP+88]
            lea RCX,QWORD PTR [RBP+RBP*2]
            mov EDX,DWORD PTR [RBX+4]
            mov RAX,QWORD PTR [RDI+8]
            mov RDI,QWORD PTR [RDI]
            mov DWORD PTR [RSP+164],EDX
            movzx R12D,BYTE PTR [RBX+2]
            lea RBX,QWORD PTR [RAX+RCX*8]
            mov DWORD PTR [RSP+80],EDX
            and R12D,1
            mov BYTE PTR [RSP+168],R12B
            call .L_42f680

            mov R13,RAX
            mov RAX,QWORD PTR [RSP+152]
            mov EDX,DWORD PTR [RSP+80]
            mov EDI,DWORD PTR [RAX+184]
            mov QWORD PTR [RSP+48],RAX
            test EDI,EDI
            sete CL
            test EDX,EDX
            sete AL
            or CL,AL
            mov BYTE PTR [RSP+80],CL
            je .L_43c5a0
.L_43c4fe:

            mov ECX,DWORD PTR [RSP+28]
            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44c308]
            mov RDI,QWORD PTR [RSP+16]
            xor EAX,EAX
            call .L_42c190
.L_43c51a:

            mov RSI,QWORD PTR [RSP+40]
            add DWORD PTR [RSP+24],1
            mov EAX,DWORD PTR [RSP+24]
            cmp DWORD PTR [RSI],EAX
            ja .L_43c438
.L_43c530:

            mov RBX,QWORD PTR [RSP+40]
            cmp QWORD PTR [RBX+8],0
            je .L_43c559

            mov R14,QWORD PTR [RSP+16]
            mov RDI,R14
            call .L_402730

            mov RDX,R14
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+104]
            call QWORD PTR [RBX+8]
.L_43c559:

            mov RSI,QWORD PTR [RSP+32]
            add DWORD PTR [RSP+84],1
            mov EAX,DWORD PTR [RSP+84]
            cmp DWORD PTR [RSI+944],EAX
            ja .L_43c400
.L_43c573:

            mov RAX,QWORD PTR [RSP+632]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43cab2

            add RSP,648
.L_43c591:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c5a0:

            movzx EAX,BYTE PTR [R13+2]
            movzx ECX,BYTE PTR [R13+3]
            shl EAX,8
            add EAX,ECX
            test AL,16
            movzx ECX,AX
            jne .L_43c988
.L_43c5ba:

            cmp DWORD PTR [RSP+128],1
            mov RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+188],ECX
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+216],RAX
            mov DWORD PTR [RSP+224],ECX
            je .L_43c918

            mov BYTE PTR [RSP+228],0
.L_43c60f:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+288],ECX
            mov ECX,34
            mov BYTE PTR [RSP+229],R12B
            mov DWORD PTR [RSP+232],EDX
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+304],0

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+312],0
            mov BYTE PTR [RSP+292],1
            mov BYTE PTR [RSP+293],1
            mov DWORD PTR [RSP+296],4294967295
            mov DWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+112],RDI
            movzx EBP,BYTE PTR [R13]
            movzx EAX,BYTE PTR [R13+1]
            movzx EDX,BYTE PTR [R13+5]
            shl EBP,8
            add EBP,EAX
            movzx EAX,BYTE PTR [R13+4]
            movzx EBP,BP
            mov ECX,EAX
            shl ECX,8
            add ECX,EDX
            test CX,CX
            movzx ESI,CX
            je .L_43c978

            lea R12D,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+72],RBX
            lea R14,QWORD PTR [RSP+112]
            mov RBX,R13
            lea RSI,QWORD PTR [R12+1]
            xor R12D,R12D
            mov R13,R12
            mov R12,RSI
            jmp .L_43c6f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c6e8:

            movzx EAX,BYTE PTR [RBX+4]
            movzx EDX,BYTE PTR [RBX+5]
.L_43c6f0:

            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp EAX,R13D
            jbe .L_43c705

            lea RDX,QWORD PTR [RBX+R13*2+6]
.L_43c705:

            movzx EAX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [RDX+1]
            mov RSI,R14
            shl EAX,8
            add EAX,EDX
            mov EDX,EBP
            movzx EDI,AX
            add RDI,RBX
            test AX,AX
            cmove RDI,R15
            add R13,1
            call .L_43bfc0

            cmp R13,R12
            jne .L_43c6e8

            mov RBX,QWORD PTR [RSP+72]
            mov RBP,QWORD PTR [RSP+152]
.L_43c73e:

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [RAX+180],0
            mov EDX,DWORD PTR [RBP+180]
            jmp .L_43c767
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c758:

            mov EDX,DWORD PTR [RBP+180]
.L_43c75e:

            add EDX,1
            mov DWORD PTR [RBP+180],EDX
.L_43c767:

            cmp DWORD PTR [RBP+184],EDX
            jbe .L_43c820
.L_43c773:

            cmp BYTE PTR [RBP+176],0
            jne .L_43c820

            mov RAX,QWORD PTR [RBP+200]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov EAX,1
            mov RDI,RAX
            mov ESI,DWORD PTR [RDX]
            mov ECX,ESI
            shr ECX,4
            shl RDI,CL
            test QWORD PTR [RBX],RDI
            je .L_43c7d0

            mov RDI,RAX
            mov ECX,ESI
            shl RDI,CL
            test QWORD PTR [RBX+8],RDI
            je .L_43c7d0

            mov ECX,ESI
            shr ECX,9
            shl RAX,CL
            test QWORD PTR [RBX+16],RAX
            jne .L_43c860

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c7d0:

            cmp BYTE PTR [RBP+177],0
            je .L_43c758

            mov RAX,QWORD PTR [RBP+200]
            cmp QWORD PTR [RBP+208],RAX
            je .L_43c8f0
.L_43c7f1:

            mov EDX,1
            mov ESI,1
            mov RDI,RBP
            call .L_4022b0

            test AL,AL
            jne .L_43c930

            mov EDX,DWORD PTR [RBP+180]
            cmp DWORD PTR [RBP+184],EDX
            ja .L_43c773

            nop
            nop
            nop
.L_43c820:

            cmp BYTE PTR [RSP+80],0
            je .L_43c840

            mov RAX,QWORD PTR [RSP+48]
            mov RBX,QWORD PTR [RAX+208]
            cmp QWORD PTR [RAX+200],RBX
            jne .L_43ca93
.L_43c840:

            mov RDI,QWORD PTR [RSP+360]
            cmp RDI,QWORD PTR [RSP+96]
            je .L_43c4fe

            call free@PLT

            jmp .L_43c4fe
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c860:

            mov EAX,DWORD PTR [RDX+4]
            test DWORD PTR [RSP+164],EAX
            je .L_43c7d0

            mov ECX,DWORD PTR [RSP+188]
            movzx EAX,WORD PTR [RDX+12]
            mov R12D,ECX
            and R12D,14
            mov EDX,EAX
            and R12D,EAX
            jne .L_43c7d0

            and EDX,8
            jne .L_43c9b5
.L_43c896:

            mov ESI,DWORD PTR [RSP+352]
            test ESI,ESI
            je .L_43c7d0

            mov R13,QWORD PTR [RSP+56]
            jmp .L_43c8c2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c8b0:

            add R12D,1
            cmp DWORD PTR [RSP+352],R12D
            jbe .L_43c7d0
.L_43c8c2:

            mov EAX,R12D
            mov RSI,R13
            shl RAX,4
            add RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            je .L_43c8b0

            mov EDX,DWORD PTR [RBP+180]
            mov BYTE PTR [RSP+80],AL
            jmp .L_43c767
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c8f0:

            mov EAX,DWORD PTR [RBP+180]
            cmp DWORD PTR [RBP+188],EAX
            jne .L_43c7f1

            mov EDX,EAX
.L_43c904:

            add EAX,1
            mov DWORD PTR [RBP+188],EAX
            jmp .L_43c75e

            nop
            nop
            nop
            nop
            nop
            nop
.L_43c918:

            mov BYTE PTR [RSP+228],1
            mov R12D,R14D
            jmp .L_43c60f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c930:

            mov EAX,DWORD PTR [RBP+188]
            mov RDX,QWORD PTR [RBP+208]
            mov RCX,QWORD PTR [RBP+200]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RDX+RAX*4]
            mov EDX,DWORD PTR [RBP+180]
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX],XMM0
            mov EDX,DWORD PTR [RDX+16]
            mov DWORD PTR [RAX+16],EDX
            mov EAX,DWORD PTR [RBP+188]
            mov EDX,DWORD PTR [RBP+180]
            jmp .L_43c904
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c978:

            mov RBP,QWORD PTR [RSP+48]
            jmp .L_43c73e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c988:

            movzx EAX,BYTE PTR [R13+4]
            movzx ESI,BYTE PTR [R13+5]
            shl EAX,8
            add EAX,ESI
            movzx EAX,AX
            lea RSI,QWORD PTR [R13+RAX*2+6]
            movzx EAX,BYTE PTR [RSI]
            movzx ESI,BYTE PTR [RSI+1]
            shl EAX,8
            add EAX,ESI
            shl EAX,16
            add ECX,EAX
            jmp .L_43c5ba
.L_43c9b5:

            test CL,16
            jne .L_43c9d3

            test CH,255
            je .L_43c896

            xor EAX,ECX
            test AH,255
            jne .L_43c7d0

            jmp .L_43c896
.L_43c9d3:

            mov RAX,QWORD PTR [RSP+192]
            movzx EDX,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            movzx R8D,BYTE PTR [RAX+3]
            shl EDX,8
            add EDX,EDI
            movzx EDI,BYTE PTR [RAX+2]
            shl EDX,16
            shl EDI,8
            add EDI,R8D
            movzx EDI,DI
            add EDX,EDI
            cmp EDX,65537
            jbe .L_43c7d0

            movzx EDX,BYTE PTR [RAX+12]
            movzx EDI,BYTE PTR [RAX+13]
            shl EDX,8
            add EDX,EDI
            movzx EDI,DX
            add RDI,RAX
            test DX,DX
            cmove RDI,R15
            movzx EAX,BYTE PTR [RDI]
            movzx EDX,BYTE PTR [RDI+1]
            shl EAX,8
            add EAX,EDX
            cmp AX,1
            jne .L_43c7d0

            movzx EAX,BYTE PTR [RDI+2]
            movzx EDX,BYTE PTR [RDI+3]
            shr ECX,16
            shl EAX,8
            add EAX,EDX
            mov RDX,R15
            movzx EAX,AX
            cmp ECX,EAX
            jae .L_43ca59

            lea RDX,QWORD PTR [RDI+RCX*4+4]
.L_43ca59:

            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+1]
            shl EAX,24
            shl ECX,16
            add EAX,ECX
            movzx ECX,BYTE PTR [RDX+2]
            movzx EDX,BYTE PTR [RDX+3]
            shl ECX,8
            add EAX,ECX
            add EDX,EAX
            add RDI,RDX
            test EDX,EDX
            cmove RDI,R15
            call .L_42c320

            cmp EAX,-1
            je .L_43c7d0

            jmp .L_43c896
.L_43ca93:

            lea RCX,QWORD PTR [RIP+.L_44c380]
            lea RSI,QWORD PTR [RIP+.L_44c2f8]
            lea RDI,QWORD PTR [RIP+.L_44c318]
            mov EDX,1126
            call __assert_fail@PLT
.L_43cab2:

            call __stack_chk_fail@PLT
.L_43cab7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cac0:

            push R15
            push R14
            mov R14D,R8D
            push R13
            push R12
            mov R13D,R9D
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,216
.L_43cadf:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_44c608]
            mov QWORD PTR [RSP+8],RSI
            mov DWORD PTR [RSP+32],ECX
            mov EAX,DWORD PTR [RAX+RBP*4]
            mov ESI,EAX
            mov DWORD PTR [RSP+4],EAX
            call .L_428a90

            mov R12D,EAX
            mov RAX,RBP
            lea RDI,QWORD PTR [RSP+60]
            shl RAX,4
            mov DWORD PTR [RSP],0
            add RAX,RBP
            lea RBP,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+16],RDI
            shl RAX,4
            lea R15,QWORD PTR [RBX+RAX*1+336]
            add RBX,RAX
.L_43cb42:

            mov R8,QWORD PTR [RSP+16]
            mov ECX,DWORD PTR [RSP]
            mov R9,RBP
            mov EDX,DWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RSP+4]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+60],32
            call .L_4285f0

            mov EAX,DWORD PTR [RSP+60]
            test EAX,EAX
            je .L_43cbd0

            mov ECX,1
            nop
            nop
            nop
            nop
.L_43cb78:

            cmp DWORD PTR [RBP+RCX*4-4],R12D
            jae .L_43cc2f

            mov RDI,QWORD PTR [RBX+328]
            test RDI,RDI
            je .L_43cc50

            mov EAX,DWORD PTR [RBX+324]
.L_43cb99:

            mov EDX,DWORD PTR [RBX+320]
            cmp EDX,EAX
            jb .L_43cc00

            mov ESI,EAX
            shr ESI,1
            cmp R15,RDI
            lea R8D,DWORD PTR [RAX+RSI*1+8]
            je .L_43ccc0

            cmp R8D,EAX
            mov QWORD PTR [RSP+24],RCX
            jb .L_43cbd0

            cmp R8D,536870910
            jbe .L_43cc70

            nop
            nop
            nop
            nop
.L_43cbd0:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43cd06

            add RSP,216
.L_43cbee:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cc00:

            lea EAX,DWORD PTR [RDX+1]
            mov DWORD PTR [RBX+320],EAX
            lea RAX,QWORD PTR [RDI+RDX*8]
.L_43cc0d:

            test RAX,RAX
            je .L_43cbd0

            mov DWORD PTR [RAX+4],R14D
            mov EDX,DWORD PTR [RBP+RCX*4-4]
            mov ESI,R13D
            and ESI,1
            mov WORD PTR [RAX],DX
            movzx EDX,BYTE PTR [RAX+2]
            and EDX,4294967294
            or EDX,ESI
            mov BYTE PTR [RAX+2],DL
.L_43cc2f:

            mov EAX,DWORD PTR [RSP+60]
            mov EDX,ECX
            add RCX,1
            cmp EAX,EDX
            ja .L_43cb78

            add DWORD PTR [RSP],EAX
            cmp EAX,32
            je .L_43cb42

            jmp .L_43cbd0
          .byte 0x90
.L_43cc50:

            mov QWORD PTR [RBX+328],R15
            mov DWORD PTR [RBX+324],32
            mov RDI,R15
            mov EAX,32
            jmp .L_43cb99
          .byte 0x66
          .byte 0x90
.L_43cc70:

            mov ESI,R8D
            mov DWORD PTR [RSP+36],R8D
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov R9,RAX
            mov R8D,DWORD PTR [RSP+36]
            mov RCX,QWORD PTR [RSP+24]
            je .L_43cbd0
.L_43cc97:

            mov EAX,DWORD PTR [RBX+320]
            mov QWORD PTR [RBX+328],R9
            mov DWORD PTR [RBX+324],R8D
            lea EDX,DWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R9+RAX*8]
            mov DWORD PTR [RBX+320],EDX
            jmp .L_43cc0d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ccc0:

            mov EDI,R8D
            mov ESI,8
            mov QWORD PTR [RSP+40],RCX
            mov DWORD PTR [RSP+36],EDX
            mov DWORD PTR [RSP+24],R8D
            call calloc@PLT

            test RAX,RAX
            je .L_43cbd0

            mov EDX,DWORD PTR [RSP+36]
            mov RSI,R15
            mov RDI,RAX
            shl RDX,3
            call memcpy@PLT

            mov R8D,DWORD PTR [RSP+24]
            mov R9,RAX
            mov RCX,QWORD PTR [RSP+40]
            jmp .L_43cc97
.L_43cd06:

            call __stack_chk_fail@PLT
.L_43cd0b:

            nop
            nop
            nop
            nop
            nop
.L_43cd10:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            add RDI,8
            mov RCX,RBX
            sub RSP,32
.L_43cd22:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov QWORD PTR [RDI+1264],0
            and RDI,-8
            lea RBP,QWORD PTR [RSP+12]
            sub RCX,RDI
            add ECX,1280
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RBX],RSI
            mov RSI,RBP
            mov QWORD PTR [RSP+12],0
            mov DWORD PTR [RSP+20],0
            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RBX+8],XMM0
            mov EDI,DWORD PTR [RBX+12]
            movdqu XMM0,XMMWORD PTR [RDX+16]
            lea RDX,QWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+24],XMM0
            call .L_43db90

            mov RDI,QWORD PTR [RBX+16]
            call .L_43de50

            mov RDI,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RBX+52]
            lea R8,QWORD PTR [RBX+40]
            mov RDX,RBP
            mov ESI,1196643650
            mov R12D,EAX
            call .L_427960

            mov EDX,DWORD PTR [RBX+52]
            mov RDI,QWORD PTR [RBX]
            test EAX,EAX
            lea R8,QWORD PTR [RBX+60]
            setne BYTE PTR [RBX+48]
            mov ECX,R12D
            mov ESI,1196643650
            call .L_427db0

            mov RDI,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RBX+56]
            lea R8,QWORD PTR [RBX+44]
            mov RDX,RBP
            mov ESI,1196445523
            call .L_427960

            mov EDX,DWORD PTR [RBX+56]
            mov RDI,QWORD PTR [RBX]
            test EAX,EAX
            lea R8,QWORD PTR [RBX+64]
            setne BYTE PTR [RBX+49]
            mov ECX,R12D
            mov ESI,1196445523
            call .L_427db0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43ce19

            add RSP,32
.L_43ce14:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_43ce19:

            call __stack_chk_fail@PLT
.L_43ce1e:

            nop
            nop
.L_43ce20:

            push R15
            push R14
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBX,RDI
            mov R12D,EDX
            sub RSP,24
.L_43ce37:

            mov RDI,QWORD PTR [RDI+88]
            mov EBP,DWORD PTR [RBX+80]
            test RDI,RDI
            je .L_43ce90

            mov EAX,DWORD PTR [RBX+84]
            cmp EAX,EBP
            ja .L_43ceab

            mov EDX,EAX
            mov R14,RDI
            shr EDX,1
            lea R15D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBX+96]
            cmp RDI,RDX
            je .L_43cfbb

            cmp R15D,153391688
            mov DWORD PTR [RSP+4],ECX
            ja .L_43ce79

            cmp EAX,R15D
            jbe .L_43cf08
.L_43ce79:

            add RSP,24
.L_43ce7d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ce90:

            lea R14,QWORD PTR [RBX+96]
            cmp EBP,31
            mov DWORD PTR [RBX+84],32
            mov QWORD PTR [RBX+88],R14
            ja .L_43cf60

            mov RDI,R14
.L_43ceab:

            lea EAX,DWORD PTR [RBP+1]
            mov DWORD PTR [RBX+80],EAX
            lea RAX,QWORD PTR [RBP*8]
            sub RAX,RBP
            lea RAX,QWORD PTR [RDI+RAX*4]
.L_43cec0:

            test RAX,RAX
            je .L_43ce79

            test R13D,R13D
            je .L_43ce79

            mov EDX,DWORD PTR [RBX+80]
            mov DWORD PTR [RAX+12],ECX
            and ECX,1
            mov DWORD PTR [RAX+8],R12D
            mov DWORD PTR [RAX],R13D
            mov DWORD PTR [RAX+4],EDX
            mov EDX,0
            cmove R12D,EDX
            mov EDX,DWORD PTR [RBX+68]
            mov DWORD PTR [RAX+16],R12D
            mov DWORD PTR [RAX+20],EDX
            mov EDX,DWORD PTR [RBX+72]
            mov DWORD PTR [RAX+24],EDX
            add RSP,24
.L_43cefa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cf08:

            mov EAX,R15D
            lea RSI,QWORD PTR [RAX*8]
            sub RSI,RAX
            shl RSI,2
            call realloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_43ce79

            mov EDX,DWORD PTR [RBX+80]
            mov ECX,DWORD PTR [RSP+4]
            lea RAX,QWORD PTR [RDX*8]
            mov RBP,RDX
            sub RAX,RDX
            lea R9,QWORD PTR [RAX*4]
.L_43cf48:

            add EBP,1
            mov QWORD PTR [RBX+88],R8
            mov DWORD PTR [RBX+84],R15D
            mov DWORD PTR [RBX+80],EBP
            lea RAX,QWORD PTR [R8+R9*1]
            jmp .L_43cec0
          .byte 0x90
.L_43cf60:

            mov EDI,56
            mov R15D,56
.L_43cf6b:

            mov ESI,28
            mov DWORD PTR [RSP+4],ECX
            call calloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_43ce79

            mov EDX,EBP
            mov RDI,R8
            mov RSI,R14
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            lea R9,QWORD PTR [RAX*4]
            mov RDX,R9
            mov QWORD PTR [RSP+8],R9
            call memcpy@PLT

            mov R9,QWORD PTR [RSP+8]
            mov R8,RAX
            mov ECX,DWORD PTR [RSP+4]
            jmp .L_43cf48
.L_43cfbb:

            mov EDI,R15D
            jmp .L_43cf6b
.L_43cfc0:

            mov EAX,ESI
            push R13
            push R12
            mov RSI,RAX
            push RBP
            push RBX
            shl RSI,4
            add RSI,RAX
            sub RSP,8
.L_43cfd6:

            shl RSI,4
            lea RBP,QWORD PTR [RDI+RSI*1]
            mov EAX,DWORD PTR [RBP+320]
            test EAX,EAX
            je .L_43d015

            lea R13,QWORD PTR [RDI+RSI*1+320]
            mov R12,RDX
            xor EBX,EBX
            nop
            nop
            nop
.L_43cff8:

            mov RAX,QWORD PTR [R13+8]
            mov ECX,EBX
            mov RDI,R12
            add EBX,1
            movzx ESI,WORD PTR [RAX+RCX*8]
            call .L_425ab0

            cmp DWORD PTR [RBP+320],EBX
            ja .L_43cff8
.L_43d015:

            add RSP,8
.L_43d019:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43d020:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,ESI
            lea RAX,QWORD PTR [RBX+RBX*8]
            sub RSP,8
.L_43d03a:

            shl RAX,4
            lea RDX,QWORD PTR [RDI+RAX*1]
            mov RBP,QWORD PTR [RDX+1000]
            test RBP,RBP
            je .L_43d0e0

            mov EDX,DWORD PTR [RDX+996]
.L_43d058:

            lea RAX,QWORD PTR [RBX+RBX*8]
            shl RAX,4
            lea RCX,QWORD PTR [R13+RAX*1]
            mov R12D,DWORD PTR [RCX+992]
            cmp R12D,EDX
            jb .L_43d0a0

            lea RAX,QWORD PTR [R13+RAX*1+1008]
            mov ECX,EDX
            shr ECX,1
            cmp RAX,RBP
            lea R15D,DWORD PTR [RDX+RCX*1+8]
            je .L_43d160

            cmp R15D,268435454
            ja .L_43d099

            cmp R15D,EDX
            jae .L_43d108
.L_43d099:

            mov EAX,DWORD PTR [R13+RBX*4+68]
            jmp .L_43d0c9
.L_43d0a0:

            lea EAX,DWORD PTR [R12+1]
            shl R12,4
            add RBP,R12
            mov DWORD PTR [RCX+992],EAX
.L_43d0b2:

            lea RDX,QWORD PTR [R13+RBX*4]
            test RBP,RBP
            mov EAX,DWORD PTR [RDX+68]
            je .L_43d0c9

            mov DWORD PTR [RBP],EAX
            mov QWORD PTR [RBP+8],R14
            mov EAX,DWORD PTR [RDX+68]
.L_43d0c9:

            add EAX,1
            mov DWORD PTR [R13+RBX*4+68],EAX
            add RSP,8
.L_43d0d5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43d0e0:

            lea RBP,QWORD PTR [RDI+RAX*1+1008]
            mov DWORD PTR [RDX+996],8
            mov QWORD PTR [RDX+1000],RBP
            mov EDX,8
            jmp .L_43d058
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d108:

            mov ESI,R15D
            mov RDI,RBP
            shl RSI,4
            call realloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_43d099
.L_43d123:

            lea RDX,QWORD PTR [RBX+RBX*8]
            shl RDX,4
            add RDX,R13
            mov EBP,DWORD PTR [RDX+992]
            mov QWORD PTR [RDX+1000],RCX
            mov DWORD PTR [RDX+996],R15D
            lea ESI,DWORD PTR [RBP+1]
            shl RBP,4
            add RBP,RCX
            mov DWORD PTR [RDX+992],ESI
            jmp .L_43d0b2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d160:

            mov EDI,R15D
            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            je .L_43d099

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RAX
            shl RDX,4
            call memcpy@PLT

            mov RCX,RAX
            jmp .L_43d123
.L_43d18d:

            nop
            nop
            nop
.L_43d190:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,120
.L_43d1a4:

            mov ECX,DWORD PTR [RDI+60]
            mov EDX,DWORD PTR [RDI+52]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+40]
            lea R15,QWORD PTR [RSP+72]
            lea RBX,QWORD PTR [RSP+80]
            mov DWORD PTR [RSI+12],1
            mov QWORD PTR [RSP+88],0
            mov R9,RBX
            mov R8,R15
            mov QWORD PTR [RSP+32],R15
            mov DWORD PTR [RSI],EAX
            movzx EAX,BYTE PTR [RDI+48]
            mov RDI,QWORD PTR [RDI]
            mov BYTE PTR [RSI+8],AL
            mov ESI,1196643650
            call .L_427f20

            mov EAX,DWORD PTR [R13+44]
            mov ECX,DWORD PTR [R13+64]
            lea R9,QWORD PTR [RBX+4]
            mov EDX,DWORD PTR [R13+56]
            mov RDI,QWORD PTR [R13]
            lea R8,QWORD PTR [R15+4]
            mov ESI,1196445523
            mov DWORD PTR [RBP+4],EAX
            movzx EAX,BYTE PTR [R13+49]
            mov BYTE PTR [RBP+9],AL
            call .L_427f20

            mov EAX,DWORD PTR [R13+80]
            test EAX,EAX
            jne .L_43d250
.L_43d22d:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43dab7

            add RSP,120
.L_43d245:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43d250:

            mov RDI,QWORD PTR [R13+88]
            lea RCX,QWORD PTR [RIP+.L_43daf0]
            mov ESI,EAX
            mov EDX,28
            call qsort@PLT

            mov R9D,DWORD PTR [R13+80]
            cmp R9D,1
            mov EAX,R9D
            jbe .L_43d35e

            mov ECX,1
            xor EDI,EDI
            mov R8,QWORD PTR [R13+88]
            jmp .L_43d2c3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d288:

            mov R10D,ESI
            movdqu XMM0,XMMWORD PTR [RDX]
            lea RAX,QWORD PTR [R10*8]
            add ECX,1
            sub RAX,R10
            cmp R9D,ECX
            lea RAX,QWORD PTR [R8+RAX*4]
            movups XMMWORD PTR [RAX],XMM0
            mov R10,QWORD PTR [RDX+16]
            mov QWORD PTR [RAX+16],R10
            mov EDX,DWORD PTR [RDX+24]
            mov DWORD PTR [RAX+24],EDX
            lea EDX,DWORD PTR [RDI+2]
            mov EAX,R9D
            mov EDI,ESI
            jbe .L_43d353
.L_43d2c3:

            mov EDX,ECX
            mov ESI,EDI
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            lea RDX,QWORD PTR [R8+RAX*4]
            lea RAX,QWORD PTR [RSI*8]
            sub RAX,RSI
            lea ESI,DWORD PTR [RDI+1]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov EBX,DWORD PTR [RAX]
            cmp DWORD PTR [RDX],EBX
            jne .L_43d288

            test BYTE PTR [RDX+12],1
            mov R10D,DWORD PTR [RAX+12]
            mov EBX,DWORD PTR [RDX+8]
            mov R11D,R10D
            je .L_43d950

            mov R10D,DWORD PTR [RDX+16]
            or R11D,1
            mov DWORD PTR [RAX+8],EBX
            mov DWORD PTR [RAX+12],R11D
            mov DWORD PTR [RAX+16],R10D
.L_43d315:

            mov R10D,DWORD PTR [RDX+12]
            and R10D,2
            or R10D,R11D
            mov DWORD PTR [RAX+12],R10D
            mov R10D,DWORD PTR [RDX+20]
            cmp DWORD PTR [RAX+20],R10D
            cmovbe R10D,DWORD PTR [RAX+20]
            mov DWORD PTR [RAX+20],R10D
            mov EDX,DWORD PTR [RDX+24]
            cmp DWORD PTR [RAX+24],EDX
            cmovbe EDX,DWORD PTR [RAX+24]
            add ECX,1
            cmp R9D,ECX
            mov DWORD PTR [RAX+24],EDX
            mov EDX,ESI
            mov EAX,R9D
            ja .L_43d2c3
.L_43d353:

            cmp R9D,EDX
            jbe .L_43d35e

            mov DWORD PTR [R13+80],EDX
            mov EAX,EDX
.L_43d35e:

            test EAX,EAX
            je .L_43d604

            lea RAX,QWORD PTR [RSP+96]
            mov R11D,1
            xor R12D,R12D
            mov R15D,R11D
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+100]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_43d3c5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d390:

            test EAX,EAX
            je .L_43d3b4

            bsr EAX,EAX
            mov EBX,32
            xor EAX,31
            sub EBX,EAX
            mov EAX,8
            cmp EBX,8
            cmova EBX,EAX
            add EBX,R15D
            cmp EBX,32
            jbe .L_43d3f8
.L_43d3b4:

            mov EAX,DWORD PTR [R13+80]
            add R12D,1
            cmp EAX,R12D
            jbe .L_43d5f8
.L_43d3c5:

            mov EDX,R12D
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            mov RDX,QWORD PTR [R13+88]
            lea R14,QWORD PTR [RDX+RAX*4]
            test BYTE PTR [R14+12],1
            mov EAX,DWORD PTR [R14+8]
            je .L_43d390

            cmp EAX,1
            jne .L_43d390

            mov EBX,R15D
            cmp EBX,32
            ja .L_43d3b4

            nop
            nop
            nop
            nop
            nop
.L_43d3f8:

            mov R8D,DWORD PTR [R14]
            cmp R8D,DWORD PTR [RSP+80]
            jne .L_43d40a

            mov EAX,DWORD PTR [R14+20]
            mov DWORD PTR [RSP+88],EAX
.L_43d40a:

            mov ECX,DWORD PTR [R13+60]
            mov EDX,DWORD PTR [R13+52]
            mov ESI,1196643650
            mov R9,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R13]
            call .L_428450

            mov R8D,DWORD PTR [R14]
            cmp DWORD PTR [RSP+84],R8D
            mov DWORD PTR [RSP],EAX
            jne .L_43d43a

            mov EAX,DWORD PTR [R14+24]
            mov DWORD PTR [RSP+92],EAX
.L_43d43a:

            mov ECX,DWORD PTR [R13+64]
            mov EDX,DWORD PTR [R13+56]
            mov ESI,1196445523
            mov R9,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R13]
            call .L_428450

            mov R10D,DWORD PTR [RSP]
            or R10D,EAX
            je .L_43d978
.L_43d462:

            mov R9,QWORD PTR [RBP+24]
            mov R8D,DWORD PTR [RBP+16]
            test R9,R9
            mov RDX,R9
            je .L_43d4f8

            mov EAX,DWORD PTR [RBP+20]
            cmp EAX,R8D
            ja .L_43d51f

            mov EDX,EAX
            shr EDX,1
            lea R11D,DWORD PTR [RAX+RDX*1+8]
            lea RDX,QWORD PTR [RBP+32]
            cmp R9,RDX
            je .L_43d9f0

            cmp EAX,R11D
            mov DWORD PTR [RSP+56],R10D
            ja .L_43d967

            cmp R11D,119304646
            ja .L_43d967

            mov EAX,R11D
            mov RDI,R9
            mov DWORD PTR [RSP+24],R11D
            lea RSI,QWORD PTR [RAX+RAX*8]
            shl RSI,2
            call realloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_43d967

            mov EAX,DWORD PTR [RBP+16]
            mov R10D,DWORD PTR [RSP+56]
            mov R11D,DWORD PTR [RSP+24]
            mov R8,RAX
            lea RAX,QWORD PTR [RAX+RAX*8]
            shl RAX,2
            mov QWORD PTR [RSP],RAX
            jmp .L_43da54
.L_43d4f8:

            lea R9,QWORD PTR [RBP+32]
            cmp R8D,7
            mov DWORD PTR [RBP+20],8
            mov EDI,20
            mov R11D,20
            mov QWORD PTR [RBP+24],R9
            mov RDX,R9
            ja .L_43d9f3
.L_43d51f:

            lea EAX,DWORD PTR [R8+1]
            mov DWORD PTR [RBP+16],EAX
            lea RAX,QWORD PTR [R8+R8*8]
            lea RAX,QWORD PTR [RDX+RAX*4]
.L_43d52e:

            test RAX,RAX
            je .L_43d967

            mov EDX,DWORD PTR [R14]
            mov ECX,DWORD PTR [R14+12]
            movzx ESI,BYTE PTR [RAX+32]
            mov DWORD PTR [RAX],EDX
            mov EDX,DWORD PTR [RSP+96]
            and ESI,4294967293
            mov DWORD PTR [RAX+4],EDX
            mov EDX,DWORD PTR [RSP+100]
            mov DWORD PTR [RAX+8],EDX
            mov EDX,DWORD PTR [R14+20]
            mov DWORD PTR [RAX+12],EDX
            mov EDX,DWORD PTR [R14+24]
            mov DWORD PTR [RAX+16],EDX
            mov EDX,ECX
            shr EDX,2
            xor EDX,1
            and EDX,1
            add EDX,EDX
            or EDX,ESI
            and ECX,1
            mov BYTE PTR [RAX+32],DL
            je .L_43d5a0

            cmp DWORD PTR [R14+8],1
            jne .L_43d5a0

            movabs RSI,4294967296
            mov EDX,1
            mov QWORD PTR [RAX+20],RSI
            jmp .L_43d5cf
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d5a0:

            mov ECX,R15D
            mov ESI,DWORD PTR [R14+16]
            mov EDI,1
            shl EDI,CL
            mov EDX,1
            mov ECX,EBX
            shl EDX,CL
            mov ECX,R15D
            mov DWORD PTR [RAX+20],R15D
            sub EDX,EDI
            shl ESI,CL
            mov R15D,EBX
            mov DWORD PTR [RAX+24],EDX
            and ESI,EDX
            or DWORD PTR [RBP+12],ESI
            and EDX,EDI
.L_43d5cf:

            mov DWORD PTR [RAX+28],EDX
            movzx EDX,BYTE PTR [RAX+32]
            test R10D,R10D
            sete CL
            add R12D,1
            and EDX,4294967294
            or EDX,ECX
            mov BYTE PTR [RAX+32],DL
            mov EAX,DWORD PTR [R13+80]
            cmp EAX,R12D
            ja .L_43d3c5

            nop
            nop
            nop
.L_43d5f8:

            test EAX,EAX
            je .L_43d604
.L_43d5fc:

            mov DWORD PTR [R13+80],0
.L_43d604:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R13
            call .L_43d020

            xor EDX,EDX
            mov ESI,1
            mov RDI,R13
            call .L_43d020

            lea RAX,QWORD PTR [R13+992]
            lea R14,QWORD PTR [RBP+320]
            xor R15D,R15D
            mov QWORD PTR [RSP],R13
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RBP+880]
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+40],RAX
            mov RAX,R15
            mov R15,R14
            mov R14,RAX
.L_43d658:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RSP+16],R14D
            mov EDX,DWORD PTR [RAX+R14*4+68]
            test EDX,EDX
            je .L_43d759

            xor EAX,EAX
            mov R10,R14
            xor R12D,R12D
            mov R14,R15
            mov DWORD PTR [RSP+56],0
            mov R15D,EAX
            nop
            nop
            nop
            nop
.L_43d688:

            mov RAX,QWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RAX+R10*4]
            cmp ECX,65535
            je .L_43d6a8

            mov RAX,QWORD PTR [RSP+40]
            cmp DWORD PTR [RAX+R10*4],R12D
            je .L_43d848
.L_43d6a8:

            mov EAX,DWORD PTR [RBP+16]
            test EAX,EAX
            je .L_43d713

            xor EBX,EBX
            lea R13,QWORD PTR [R10*4]
            mov QWORD PTR [RSP+8],R10
            jmp .L_43d6c8
.L_43d6c0:

            add EBX,1
            cmp DWORD PTR [RBP+16],EBX
            jbe .L_43d70e
.L_43d6c8:

            mov EAX,EBX
            lea RDX,QWORD PTR [RAX+RAX*8]
            mov RAX,QWORD PTR [RBP+24]
            lea RAX,QWORD PTR [RAX+RDX*4]
            lea RDX,QWORD PTR [RAX+R13*1]
            cmp DWORD PTR [RDX+12],R12D
            jne .L_43d6c0

            movzx R9D,BYTE PTR [RAX+32]
            mov R8D,DWORD PTR [RAX+24]
            mov RDI,RBP
            mov RAX,QWORD PTR [RSP]
            mov ECX,DWORD PTR [RDX+4]
            add EBX,1
            mov EDX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RAX]
            shr R9B,1
            and R9D,1
            call .L_43cac0

            cmp DWORD PTR [RBP+16],EBX
            ja .L_43d6c8
.L_43d70e:

            mov R10,QWORD PTR [RSP+8]
.L_43d713:

            mov EBX,DWORD PTR [R14]
            cmp EBX,R15D
            ja .L_43d788
.L_43d71b:

            mov RAX,QWORD PTR [RSP+24]
            mov EDI,DWORD PTR [RSP+56]
            cmp DWORD PTR [RAX],EDI
            jbe .L_43d73d

            mov RAX,QWORD PTR [RAX+8]
            mov R13D,EDI
            shl R13,4
            cmp DWORD PTR [RAX+R13*1],R12D
            je .L_43d880
.L_43d73d:

            mov RAX,QWORD PTR [RSP]
            add R12D,1
            mov R15D,EBX
            cmp DWORD PTR [RAX+R10*4+68],R12D
            ja .L_43d688

            mov R15,R14
            mov R14,R10
.L_43d759:

            add QWORD PTR [RSP+24],144
            add R15,272
            add QWORD PTR [RSP+48],80
            cmp R14,1
            je .L_43d22d

            mov R14D,1
            jmp .L_43d658
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d788:

            mov RDX,QWORD PTR [R14+8]
            mov R13D,R15D
            mov ESI,EBX
            lea RCX,QWORD PTR [RIP+.L_43dad0]
            sub ESI,R15D
            mov QWORD PTR [RSP+8],R10
            lea RDI,QWORD PTR [RDX+R13*8]
            mov EDX,8
            call qsort@PLT

            mov EBX,DWORD PTR [R14]
            lea ESI,DWORD PTR [R15+1]
            mov R10,QWORD PTR [RSP+8]
            mov EDX,ESI
            cmp ESI,EBX
            jae .L_43d71b

            mov RDI,QWORD PTR [R14+8]
            jmp .L_43d7f1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d7d0:

            mov RCX,QWORD PTR [RCX]
            mov EAX,ESI
            add EDX,1
            mov QWORD PTR [RDI+RAX*8],RCX
            mov EBX,DWORD PTR [R14]
            lea ECX,DWORD PTR [R15+2]
            mov R15D,ESI
            cmp EBX,EDX
            jbe .L_43d833
.L_43d7ea:

            lea ESI,DWORD PTR [R15+1]
            mov R13D,R15D
.L_43d7f1:

            mov EAX,EDX
            lea RCX,QWORD PTR [RDI+RAX*8]
            lea RAX,QWORD PTR [RDI+R13*8]
            movzx EBX,WORD PTR [RAX]
            cmp WORD PTR [RCX],BX
            jne .L_43d7d0

            mov R8D,DWORD PTR [RCX+4]
            or DWORD PTR [RAX+4],R8D
            add EDX,1
            movzx R8D,BYTE PTR [RAX+2]
            movzx EBX,BYTE PTR [RCX+2]
            and EBX,R8D
            and R8D,4294967294
            mov ECX,EBX
            and ECX,1
            or R8D,ECX
            mov ECX,ESI
            mov BYTE PTR [RAX+2],R8B
            mov EBX,DWORD PTR [R14]
            cmp EBX,EDX
            ja .L_43d7ea
.L_43d833:

            cmp EBX,ECX
            jbe .L_43d71b

            mov DWORD PTR [R14],ECX
            mov EBX,ECX
            jmp .L_43d71b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d848:

            mov RAX,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+16]
            mov R9D,1
            mov R8D,1
            mov RDI,RBP
            mov QWORD PTR [RSP+8],R10
            mov RSI,QWORD PTR [RAX]
            call .L_43cac0

            mov R10,QWORD PTR [RSP+8]
            jmp .L_43d6a8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d880:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSI-8]
            test RDI,RDI
            je .L_43d8e8

            mov EAX,DWORD PTR [RSI-12]
            mov EDX,DWORD PTR [RSI-16]
            cmp EDX,EAX
            jb .L_43d90a

            mov ECX,EAX
            shr ECX,1
            cmp RDI,QWORD PTR [RSP+48]
            lea R15D,DWORD PTR [RAX+RCX*1+8]
            je .L_43d991

            cmp R15D,EAX
            jb .L_43d93d

            cmp R15D,268435454
            ja .L_43d93d

            mov ESI,R15D
            mov QWORD PTR [RSP+8],R10
            shl RSI,4
            call realloc@PLT

            test RAX,RAX
            mov R8,RAX
            mov R10,QWORD PTR [RSP+8]
            jne .L_43d9ce

            jmp .L_43d93d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d8e8:

            mov RDI,QWORD PTR [RSP+48]
            mov R15D,14
            mov EDX,DWORD PTR [RDI-16]
            mov QWORD PTR [RDI-8],RDI
            mov DWORD PTR [RDI-12],4
            cmp EDX,3
            ja .L_43d991
.L_43d90a:

            mov R8D,EDX
            lea EAX,DWORD PTR [RDX+1]
            mov RSI,QWORD PTR [RSP+48]
            mov RDX,R8
            shl RDX,4
            lea R8,QWORD PTR [RDI+RDX*1]
            mov DWORD PTR [RSI-16],EAX
.L_43d923:

            test R8,R8
            je .L_43d93d

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [R8],EBX
            mov RAX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+R13*1+8]
            mov QWORD PTR [R8+8],RAX
.L_43d93d:

            add DWORD PTR [RSP+56],1
            jmp .L_43d73d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d950:

            and R11D,4294967294
            cmp DWORD PTR [RAX+8],EBX
            cmovae EBX,DWORD PTR [RAX+8]
            mov DWORD PTR [RAX+12],R11D
            mov DWORD PTR [RAX+8],EBX
            jmp .L_43d315
.L_43d967:

            mov EAX,DWORD PTR [R13+80]
            test EAX,EAX
            jne .L_43d5fc

            jmp .L_43d604
.L_43d978:

            mov EAX,DWORD PTR [R14+12]
            test AL,8
            jne .L_43da70
.L_43d984:

            test AL,2
            jne .L_43d462

            jmp .L_43d3b4
.L_43d991:

            mov EDI,R15D
            mov ESI,16
            mov QWORD PTR [RSP+8],R10
            mov DWORD PTR [RSP+60],EDX
            call calloc@PLT

            test RAX,RAX
            mov R10,QWORD PTR [RSP+8]
            je .L_43d93d

            mov EDX,DWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,RAX
            shl RDX,4
            call memcpy@PLT

            mov R10,QWORD PTR [RSP+8]
            mov R8,RAX
.L_43d9ce:

            mov RSI,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RSI-16]
            mov QWORD PTR [RSI-8],R8
            mov DWORD PTR [RSI-12],R15D
            lea EDX,DWORD PTR [RAX+1]
            shl RAX,4
            add R8,RAX
            mov DWORD PTR [RSI-16],EDX
            jmp .L_43d923
.L_43d9f0:

            mov EDI,R11D
.L_43d9f3:

            mov ESI,36
            mov DWORD PTR [RSP],R8D
            mov DWORD PTR [RSP+48],R10D
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+56],R11D
            call calloc@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_43d967

            mov EAX,DWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+40]
            mov RDI,RCX
            mov RSI,R9
            mov DWORD PTR [RSP+24],EAX
            lea RAX,QWORD PTR [RAX+RAX*8]
            shl RAX,2
            mov RDX,RAX
            mov QWORD PTR [RSP],RAX
            call memcpy@PLT

            mov R8D,DWORD PTR [RSP+24]
            mov R11D,DWORD PTR [RSP+56]
            mov RCX,RAX
            mov R10D,DWORD PTR [RSP+48]
.L_43da54:

            mov RAX,QWORD PTR [RSP]
            add R8D,1
            mov QWORD PTR [RBP+24],RCX
            mov DWORD PTR [RBP+20],R11D
            mov DWORD PTR [RBP+16],R8D
            add RAX,RCX
            jmp .L_43d52e
.L_43da70:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [R14]
            mov ESI,1196643650
            mov RDI,QWORD PTR [R13]
            mov DWORD PTR [RSP+24],R10D
            call .L_427be0

            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [R14]
            mov ESI,1196445523
            mov RDI,QWORD PTR [R13]
            mov DWORD PTR [RSP],EAX
            call .L_427be0

            or EAX,DWORD PTR [RSP]
            jne .L_43dabc

            mov EAX,DWORD PTR [R14+12]
            mov R10D,DWORD PTR [RSP+24]
            jmp .L_43d984
.L_43dab7:

            call __stack_chk_fail@PLT
.L_43dabc:

            mov R10D,EAX
            jmp .L_43d462
.L_43dac4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dad0:

            movzx EAX,WORD PTR [RSI]
            cmp WORD PTR [RDI],AX
            jb .L_43dae0

            seta AL
            movzx EAX,AL
            ret 
          .byte 0x90
.L_43dae0:

            mov EAX,4294967295
            ret 
.L_43dae6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43daf0:

            mov EAX,DWORD PTR [RSI]
            cmp DWORD PTR [RDI],EAX
            je .L_43db00

            sbb EAX,EAX
            or EAX,1
            ret 

            nop
            nop
            nop
            nop
.L_43db00:

            mov EAX,DWORD PTR [RSI+4]
            cmp DWORD PTR [RDI+4],EAX
            jb .L_43db0f

            seta AL
            movzx EAX,AL
            ret 
.L_43db0f:

            mov EAX,4294967295
            ret 
.L_43db15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43db20:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov ESI,45
            mov RBP,RDI
            call strchr@PLT

            test RAX,RAX
            je .L_43db70

            mov EBX,EAX
            sub EBX,EBP
.L_43db3d:

            mov ESI,45
            mov RDI,R12
            call strchr@PLT

            test RAX,RAX
            je .L_43db80

            sub EAX,R12D
.L_43db52:

            cmp EBX,EAX
            mov RSI,R12
            mov RDI,RBP
            cmovae EAX,EBX
            pop RBX
            pop RBP
            pop R12
            mov EDX,EAX
            jmp strncmp@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43db70:

            mov RDI,RBP
            call strlen@PLT

            mov EBX,EAX
            jmp .L_43db3d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43db80:

            mov RDI,R12
            call strlen@PLT

            jmp .L_43db52
.L_43db8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43db90:

            cmp EDI,1281453935
            mov DWORD PTR [RDX],1145457748
            je .L_43dc48

            jbe .L_43dc10

            cmp EDI,1449224553
            je .L_43dc28

            cmp EDI,1500080489
            je .L_43dc68

            cmp EDI,1315663727
            je .L_43dc38
.L_43dbc0:

            mov ECX,EDI
            or ECX,536870912
            cmp EDI,1265525857
            mov DWORD PTR [RSI],ECX
            je .L_43dc88

            jbe .L_43dc90

            cmp EDI,1332902241
            je .L_43dc78

            jbe .L_43dcc0

            cmp EDI,1415671148
            je .L_43dce0

            cmp EDI,1415933045
            jne .L_43dc23

            mov EAX,1952803890
            jmp .L_43dc7d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dc10:

            test EDI,EDI
            je .L_43dc58

            cmp EDI,1214870113
            mov EAX,1801547361
            jne .L_43dbc0

            mov DWORD PTR [RSI],EAX
.L_43dc23:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43dc28:

            mov EAX,1986095392
            mov DWORD PTR [RSI],EAX
            jmp .L_43dc23

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dc38:

            mov EAX,1852534560
            mov DWORD PTR [RSI],EAX
            jmp .L_43dc23
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dc48:

            mov EAX,1818324768
            mov DWORD PTR [RSI],EAX
            jmp .L_43dc23

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dc58:

            mov EAX,1145457748
            mov DWORD PTR [RSI],EAX
            jmp .L_43dc23
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dc68:

            mov EAX,2036932640
            mov DWORD PTR [RSI],EAX
            jmp .L_43dc23
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dc78:

            mov EAX,1869773106
.L_43dc7d:

            mov DWORD PTR [RDX],ECX
            mov DWORD PTR [RSI],EAX
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_43dc88:

            mov EAX,1802396722
            jmp .L_43dc7d
          .byte 0x90
.L_43dc90:

            cmp EDI,1147500129
            je .L_43dcb8

            jbe .L_43dd10

            cmp EDI,1198877298
            je .L_43dcf0

            cmp EDI,1198879349
            jne .L_43dd23

            mov EAX,1735750194
            jmp .L_43dc7d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dcb8:

            mov EAX,1684370994
            jmp .L_43dc7d
          .byte 0x90
.L_43dcc0:

            cmp EDI,1298954605
            je .L_43dd00

            cmp EDI,1299803506
            jne .L_43dd22

            mov EAX,1836674354
            jmp .L_43dc7d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dce0:

            mov EAX,1953328178
            jmp .L_43dc7d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dcf0:

            mov EAX,1735029298
            jmp .L_43dc7d

            nop
            nop
            nop
            nop
            nop
            nop
.L_43dd00:

            mov EAX,1835822386
            jmp .L_43dc7d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43dd10:

            cmp EDI,1113943655
            jne .L_43dd24

            mov EAX,1651402546
            jmp .L_43dc7d
.L_43dd22:

            ret 
.L_43dd23:

            ret 
.L_43dd24:

            ret 
.L_43dd25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dd30:

            movzx EDX,DIL
            cmp EDX,50
            je .L_43dd80

            xor EAX,EAX
            cmp EDI,1145457748
            je .L_43ddc0

            mov EAX,EDI
            and EAX,65280
            cmp EAX,8192
            jne .L_43dd61

            mov EAX,EDI
            shr EAX,8
            and EAX,65280
            or EDI,EAX
            movzx EDX,DIL
.L_43dd61:

            mov EAX,EDI
            movzx ECX,AH
            or EDI,ECX
            cmp EDX,32
            cmovne EDI,EAX
            mov EAX,EDI
            and EAX,3758096383
.L_43dd75:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dd80:

            cmp EDI,1802396722
            je .L_43de40

            jbe .L_43ddc8

            cmp EDI,1869773106
            je .L_43de30

            ja .L_43ddf8

            cmp EDI,1835822386
            mov EAX,1298954605
            je .L_43dd75

            cmp EDI,1836674354
            mov EAX,1299803506
            jne .L_43de1a

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ddc0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ddc8:

            cmp EDI,1684370994
            mov EAX,1147500129
            je .L_43dd75

            jbe .L_43de20

            cmp EDI,1735029298
            mov EAX,1198877298
            je .L_43dd75

            cmp EDI,1735750194
            mov EAX,1198879349
            jne .L_43de1a

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ddf8:

            cmp EDI,1952803890
            mov EAX,1415933045
            je .L_43dd75

            cmp EDI,1953328178
            mov EAX,1415671148
            je .L_43dd75
.L_43de1a:

            mov EAX,1517976186
            ret 
.L_43de20:

            cmp EDI,1651402546
            mov EAX,1113943655
            jne .L_43de1a

            ret 
          .byte 0x90
.L_43de30:

            mov EAX,1332902241
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43de40:

            mov EAX,1265525857
            ret 
.L_43de46:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43de50:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_43de5e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_43df80

            call .L_4058d0

            lea RSI,QWORD PTR [RIP+.L_44c610]
            mov RDI,RAX
            mov RBP,RAX
            call strstr@PLT

            test RAX,RAX
            je .L_43def8

            xor ECX,ECX
.L_43de95:

            movzx EDX,BYTE PTR [RAX+RCX*1+6]
            mov ESI,EDX
            lea R8D,DWORD PTR [RDX-97]
            and ESI,4294967263
            sub ESI,65
            cmp SIL,25
            ja .L_43def0

            lea ESI,DWORD PTR [RDX-32]
            cmp R8B,26
            cmovb EDX,ESI
            mov BYTE PTR [RSP+RCX*1+4],DL
            add RCX,1
            cmp RCX,4
            jne .L_43de95
.L_43dec4:

            mov EDX,DWORD PTR [RSP+4]
            bswap EDX
.L_43deca:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_43e0c2

            add RSP,24
.L_43dee4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_43def0:

            test ECX,ECX
            jne .L_43e0a1
.L_43def8:

            lea RSI,QWORD PTR [RIP+.L_44c63f]
            mov RDI,RBP
            call strstr@PLT

            test RAX,RAX
            mov EDX,1230000200
            jne .L_43deca

            lea RSI,QWORD PTR [RIP+.L_44c633]
            mov RDI,RBP
            call strstr@PLT

            test RAX,RAX
            mov EDX,1095782472
            jne .L_43deca

            xor R12D,R12D
            mov R13D,607
            lea R14,QWORD PTR [RIP+.L_44c700]
            jmp .L_43df48
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43df40:

            cmp RBX,R12
            jbe .L_43df90
.L_43df45:

            mov R13,RBX
.L_43df48:

            lea RBX,QWORD PTR [R13+R12*1]
            mov RDI,RBP
            shr RBX,1
            lea R15,QWORD PTR [R14+RBX*8]
            mov RSI,R15
            call .L_43db20

            test EAX,EAX
            js .L_43df40

            je .L_43e082

            lea R12,QWORD PTR [RBX+1]
            cmp R12,R13
            jae .L_43df90

            mov RBX,R13
            jmp .L_43df45
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43df80:

            mov EDX,1684434036
            jmp .L_43deca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43df90:

            lea RSI,QWORD PTR [RIP+.L_44c617]
            mov RDI,RBP
            call .L_43db20

            test EAX,EAX
            jne .L_43e040

            lea R12,QWORD PTR [RIP+.L_44c660]
            xor R13D,R13D
            mov R14,R12
            jmp .L_43dfd6
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dfc0:

            cmp AL,45
            je .L_43e02d
.L_43dfc4:

            add R13D,1
            add R14,16
            cmp R13D,9
            je .L_43e078
.L_43dfd6:

            mov RDX,R14
.L_43dfd9:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_43dfd9

            mov ECX,EAX
            mov RSI,R14
            mov RDI,RBP
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            cmove RDX,RCX
            mov ECX,EAX
            add CL,AL
            sbb RDX,3
            mov EBX,EDX
            sub EBX,R14D
            mov RDX,RBX
            call strncmp@PLT

            test EAX,EAX
            jne .L_43dfc4

            movzx EAX,BYTE PTR [RBP+RBX*1]
            test AL,AL
            jne .L_43dfc0
.L_43e02d:

            shl R13,4
            mov EDX,DWORD PTR [R12+R13*1+12]
            jmp .L_43deca
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e040:

            mov ESI,45
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            je .L_43e094
.L_43e052:

            sub RAX,RBP
            cmp RAX,3
            jne .L_43df80

            mov ESI,3
            mov RDI,RBP
            call .L_4056e0

            and EAX,3755991039
            mov EDX,EAX
            jmp .L_43deca
.L_43e078:

            mov EDX,1514689312
            jmp .L_43deca
.L_43e082:

            test R15,R15
            je .L_43df90

            mov EDX,DWORD PTR [R15+4]
            jmp .L_43deca
.L_43e094:

            mov RDI,RBP
            call strlen@PLT

            add RAX,RBP
            jmp .L_43e052
.L_43e0a1:

            lea RDX,QWORD PTR [RSP+4]
            movsxd RAX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e0b0:

            mov BYTE PTR [RDX+RAX*1],32
            add RAX,1
            cmp EAX,4
            jne .L_43e0b0

            jmp .L_43dec4
.L_43e0c2:

            call __stack_chk_fail@PLT
.L_43e0c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e0d0:

            sub RSP,40
.L_43e0d4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp EDI,1684434036
            je .L_43e18a

            mov EDX,1095127584
            lea RCX,QWORD PTR [RIP+.L_44c704]
            jmp .L_43e10f
          .byte 0x66
          .byte 0x90
.L_43e100:

            add RAX,1
            cmp RAX,607
            je .L_43e148

            mov EDX,DWORD PTR [RCX+RAX*8]
.L_43e10f:

            cmp EDX,EDI
            jne .L_43e100

            lea RDX,QWORD PTR [RIP+.L_44c700]
            mov ESI,4294967295
            lea RDI,QWORD PTR [RDX+RAX*8]
            call .L_405830
.L_43e128:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            jne .L_43e23d

            add RSP,40
.L_43e140:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e148:

            mov EAX,EDI
            xor AX,AX
            cmp EAX,1514668032
            je .L_43e18e

            cmp EDI,1095782472
            je .L_43e177

            cmp EDI,1230000200
            jne .L_43e1aa

            lea RDI,QWORD PTR [RIP+.L_44c63c]
            mov ESI,4294967295
            call .L_405830

            jmp .L_43e128
.L_43e177:

            lea RDI,QWORD PTR [RIP+.L_44c630]
            mov ESI,4294967295
            call .L_405830

            jmp .L_43e128
.L_43e18a:

            xor EAX,EAX
            jmp .L_43e128
.L_43e18e:

            cmp EDI,1514689312
            je .L_43e227

            cmp EDI,1514689568
            je .L_43e211

            cmp EDI,1514686496
            je .L_43e1fb
.L_43e1aa:

            movabs RAX,128021741186424
            mov ESI,4294967295
            mov BYTE PTR [RSP+23],0
            mov QWORD PTR [RSP+13],RAX
            mov EAX,EDI
            shr EAX,24
            mov BYTE PTR [RSP+19],AL
            mov EAX,EDI
            shr EAX,16
            cmp DIL,32
            mov BYTE PTR [RSP+20],AL
            mov EAX,EDI
            mov BYTE PTR [RSP+21],AH
            mov EAX,0
            cmove EDI,EAX
            mov BYTE PTR [RSP+22],DIL
            lea RDI,QWORD PTR [RSP+13]
            call .L_405830

            jmp .L_43e128
.L_43e1fb:

            lea RDI,QWORD PTR [RIP+.L_44c61a]
            mov ESI,4294967295
            call .L_405830

            jmp .L_43e128
.L_43e211:

            lea RDI,QWORD PTR [RIP+.L_44c628]
            mov ESI,4294967295
            call .L_405830

            jmp .L_43e128
.L_43e227:

            lea RDI,QWORD PTR [RIP+.L_44c620]
            mov ESI,4294967295
            call .L_405830

            jmp .L_43e128
.L_43e23d:

            call __stack_chk_fail@PLT
.L_43e242:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e250:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_656250]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_656258]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4198944

            test RBP,RBP
            je .L_43e2a6

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e290:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_43e290
.L_43e2a6:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43e2b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e2c0:

            ret 
.L_43e2c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e2d0:

            mov RDX,QWORD PTR [RIP+.L_6571c8]
            xor ESI,ESI
            jmp __cxa_atexit@PLT
.L_43e2de:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_43e304:
          .string "rb"
.L_43e307:
          .string "malloc error!\n"
.L_43e316:
          .string "read error!\n"
          .zero 13
.L_43e330:
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x40
          .byte 0x5f
          .byte 0x25
          .byte 0x26
          .byte 0x29
.L_43e340:
          .string "hb-object-private.hh"
.L_43e355:
          .string "hb_object_is_valid (obj)"
          .zero 18
.L_43e380:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_blob_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 5
.L_43e400:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_blob_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 11
.L_43e4e0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_blob_t]"
          .zero 10
.L_43e520:
          .string "Type* hb_object_reference(Type*) [with Type = hb_blob_t]"
          .zero 7
.L_43e560:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e5f8:
          .string "hb-buffer.cc"
.L_43e605:
          .string "have_output"
.L_43e611:
          .string "i <= len"
.L_43e61a:
          .string "i <= out_len + (len - idx)"
.L_43e635:
          .string "idx >= count"
.L_43e642:
          .string "buffer->have_positions"
.L_43e659:
          .string "!have_positions"
          .zero 7
.L_43e670:
          .string "(uintptr_t) pos % sizeof (scratch_buffer_t) == 0"
          .zero 7
.L_43e6a8:
          .string "content_type == HB_BUFFER_CONTENT_TYPE_UNICODE || (!len && content_type == HB_BUFFER_CONTENT_TYPE_INVALID)"
          .zero 5
.L_43e718:
          .string "buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE || (!buffer->len && buffer->content_type == HB_BUFFER_CONTENT_TYPE_INVALID)"
          .zero 5
.L_43e7a0:
          .string "buffer->content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS"
          .zero 10
.L_43e7e0:
          .string "void hb_buffer_t::sort(unsigned int, unsigned int, int (*)(const hb_glyph_info_t*, const hb_glyph_info_t*))"
          .zero 20
.L_43e860:
          .string "void hb_buffer_normalize_glyphs(hb_buffer_t*)"
          .zero 18
.L_43e8a0:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf32_t<false>; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned int]"
          .zero 23
.L_43e980:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_latin1_t; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned char]"
          .zero 28
.L_43ea60:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf32_t<>; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned int]"
          .zero 28
.L_43eb40:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf16_t; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = short unsigned int]"
          .zero 24
.L_43ec20:
          .string "void hb_buffer_add_utf(hb_buffer_t*, const typename utf_t::codepoint_t*, int, unsigned int, int) [with utf_t = hb_utf8_t; hb_buffer_t = hb_buffer_t; typename utf_t::codepoint_t = unsigned char]"
          .zero 30
.L_43ed00:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_buffer_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 3
.L_43ed80:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_buffer_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 9
.L_43ee60:
          .string "bool hb_object_destroy(Type*) [with Type = hb_buffer_t]"
          .zero 8
.L_43eea0:
          .string "Type* hb_object_reference(Type*) [with Type = hb_buffer_t]"
          .zero 5
.L_43eee0:
          .string "void hb_buffer_t::guess_segment_properties()"
          .zero 19
.L_43ef20:
          .string "bool hb_buffer_t::move_to(unsigned int)"
          .zero 24
.L_43ef60:
          .string "void hb_buffer_t::swap_buffers()"
          .zero 31
.L_43efa0:
          .string "hb_buffer_t::scratch_buffer_t* hb_buffer_t::get_scratch_buffer(unsigned int*)"
          .zero 18
.L_43f000:
          .string "bool hb_buffer_t::shift_forward(unsigned int)"
          .zero 18
.L_43f040:
          .string "bool hb_buffer_t::make_room_for(unsigned int, unsigned int)"
.L_43f07c:
          .string "HB_OPTIONS"
.L_43f087:
          .string "uniscribe-bug-compatible"
.L_43f0a0:
          .string "invalid"
.L_43f0a8:
          .string "1.3.2"
          .zero 18
.L_43f0c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f1c0:
          .string "ltr"
          .byte 0x72
          .byte 0x74
          .byte 0x6c
          .byte 0x0
          .byte 0x74
          .byte 0x74
          .byte 0x62
          .byte 0x0
          .byte 0x62
          .byte 0x74
          .byte 0x74
          .byte 0x0
.L_43f1d0:
          .string "hb-open-type-private.hh"
.L_43f1e8:
          .string "this->start <= this->end"
          .zero 31
.L_43f220:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_face_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 5
.L_43f2a0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_face_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 11
.L_43f380:
          .string "bool hb_object_destroy(Type*) [with Type = hb_face_t]"
          .zero 10
.L_43f3c0:
          .string "Type* hb_object_reference(Type*) [with Type = hb_face_t]"
          .zero 7
.L_43f400:
          .string "void OT::hb_sanitize_context_t::start_processing()"
.L_43f433:
          .byte 0x67
          .byte 0x69
          .byte 0x64
.L_43f436:
          .string "%u"
.L_43f439:
          .byte 0x67
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_43f43d:
          .byte 0x75
          .byte 0x6e
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f460:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_font_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 5
.L_43f4e0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_font_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 11
.L_43f5c0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_font_t]"
          .zero 10
.L_43f600:
          .string "Type* hb_object_reference(Type*) [with Type = hb_font_t]"
          .zero 7
.L_43f640:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_font_funcs_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 31
.L_43f6e0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_font_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 5
.L_43f7c0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_font_funcs_t]"
          .zero 4
.L_43f800:
          .string "Type* hb_object_reference(Type*) [with Type = hb_font_funcs_t]"
          .zero 1
.L_43f840:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xe9
          .byte 0x3f
.L_43f848:
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
.L_43f84b:
          .byte 0x6f
          .byte 0x66
          .byte 0x66
          .byte 0x0
.L_43f84f:
          .string "hb-shape-plan.cc"
.L_43f860:
          .string "fallback"
.L_43f869:
          .string "!hb_object_is_inert (buffer)"
          .zero 2
.L_43f888:
          .string "props->direction != HB_DIRECTION_INVALID"
          .zero 7
.L_43f8b8:
          .string "buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE"
          .zero 1
.L_43f8f0:
          .string "shape_plan->face_unsafe == font->face"
          .zero 2
.L_43f918:
          .string "hb_segment_properties_equal (&shape_plan->props, &buffer->props)"
          .zero 7
.L_43f960:
          .string "hb_bool_t hb_shape_plan_execute(hb_shape_plan_t*, hb_font_t*, hb_buffer_t*, const hb_feature_t*, unsigned int)"
          .zero 17
.L_43f9e0:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_shape_plan_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 31
.L_43fa80:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_shape_plan_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 5
.L_43fb60:
          .string "bool hb_object_destroy(Type*) [with Type = hb_shape_plan_t]"
          .zero 4
.L_43fba0:
          .string "Type* hb_object_reference(Type*) [with Type = hb_shape_plan_t]"
          .zero 1
.L_43fbe0:
          .string "hb_shape_plan_t* hb_shape_plan_create(hb_face_t*, const hb_segment_properties_t*, const hb_feature_t*, unsigned int, const char* const*)"
          .zero 23
.L_43fc80:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_43fd50:
          .string "HB_SHAPER_LIST"
          .zero 1
.L_43fd60:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_unicode_funcs_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 28
.L_43fe00:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_unicode_funcs_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 2
.L_43fee0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_unicode_funcs_t]"
          .zero 1
.L_43ff20:
          .string "Type* hb_object_reference(Type*) [with Type = hb_unicode_funcs_t]"
          .zero 30
.L_43ff80:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0x16
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x17
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0xe
          .byte 0x18
          .byte 0xc
          .byte 0x19
          .byte 0xd
          .byte 0xa
          .byte 0xb
          .byte 0x1a
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x1b
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x28
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3d
          .byte 0x3e
          .byte 0x3f
          .byte 0x40
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x46
          .byte 0x47
          .byte 0x48
          .byte 0x49
          .byte 0x4a
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x52
          .byte 0x53
          .byte 0x0
          .byte 0x55
          .byte 0x56
          .byte 0x57
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x0
          .byte 0x5c
          .byte 0x5d
          .byte 0x5e
          .byte 0x5f
          .byte 0x60
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x3
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x7b
          .byte 0x7c
          .byte 0x7d
          .byte 0x7e
          .byte 0x7f
          .byte 0x80
          .byte 0x81
          .byte 0x82
          .byte 0x83
          .byte 0x80
          .byte 0x85
          .byte 0x86
          .byte 0x87
          .byte 0x88
          .byte 0x89
          .byte 0x8a
          .byte 0x8b
          .byte 0x8c
          .byte 0x8d
          .byte 0x8e
          .byte 0x8f
          .byte 0x90
          .byte 0x91
          .byte 0x92
          .byte 0x93
          .byte 0x94
          .byte 0x95
          .byte 0x96
          .byte 0x97
          .byte 0x98
          .byte 0x99
          .byte 0x9a
          .byte 0x9b
          .byte 0x9c
          .byte 0x9d
          .byte 0x9e
          .byte 0x9f
          .byte 0xa0
          .byte 0xa1
          .byte 0xa2
          .byte 0xa3
          .byte 0xa4
          .byte 0xa5
          .byte 0xa6
          .byte 0xa7
          .byte 0xa8
          .byte 0xa9
          .byte 0xaa
          .byte 0xab
          .byte 0xac
          .byte 0xad
          .byte 0xae
          .byte 0xaf
          .byte 0xb0
          .byte 0xb1
          .byte 0xb2
          .byte 0xb3
          .byte 0xb4
          .byte 0xb5
          .byte 0xb6
          .byte 0xb7
          .byte 0xb8
          .byte 0xb9
          .byte 0xba
          .byte 0xbb
          .byte 0xbc
          .byte 0xbd
          .byte 0xbe
          .byte 0xbf
          .byte 0xc0
          .byte 0xc1
          .byte 0xc2
          .byte 0xc3
          .byte 0xc4
          .byte 0xc5
          .byte 0xc6
          .byte 0xc7
          .byte 0xc8
          .byte 0xc9
          .byte 0xca
          .byte 0xcb
          .byte 0xcc
          .byte 0xcd
          .byte 0xce
          .byte 0xcf
          .byte 0xd0
          .byte 0xd1
          .byte 0xd2
          .byte 0xd3
          .byte 0xd4
          .byte 0xd5
          .byte 0xd6
          .byte 0xd7
          .byte 0xd8
          .byte 0xd9
          .byte 0xda
          .byte 0xdb
          .byte 0xdc
          .byte 0xdd
          .byte 0xde
          .byte 0xdf
          .byte 0xe0
          .byte 0xe1
          .byte 0xe2
          .byte 0xe3
          .byte 0xe4
          .byte 0xe5
          .byte 0xe6
          .byte 0xe7
          .byte 0xe8
          .byte 0xe9
          .byte 0xea
          .byte 0xeb
          .byte 0xec
          .byte 0xed
          .byte 0xee
          .byte 0xef
          .byte 0xf0
          .byte 0xf1
          .byte 0xf2
          .byte 0xf3
          .byte 0xf4
          .byte 0xf5
          .byte 0xf6
          .byte 0xf7
          .byte 0xf8
          .byte 0xf9
          .byte 0xfa
          .byte 0xfb
          .byte 0xfc
          .byte 0xfd
          .byte 0xfe
          .byte 0xff
.L_440080:
          .long .L_40ddf0-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40da68-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40db10-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40db70-.L_440080
          .long .L_40da55-.L_440080
          .long .L_40dbd0-.L_440080
          .long .L_40dcf8-.L_440080
.L_4400b8:
          .long .L_40e370-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40df78-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e040-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e0b0-.L_4400b8
          .long .L_40e6c4-.L_4400b8
          .long .L_40e140-.L_4400b8
          .long .L_40e270-.L_4400b8
.L_4400f0:
          .long .L_40e8c8-.L_4400f0
          .long .L_40e0a0-.L_4400f0
          .long .L_40e99f-.L_4400f0
          .long .L_40e0a0-.L_4400f0
          .long .L_40e0a0-.L_4400f0
          .long .L_40e0a0-.L_4400f0
          .long .L_40e954-.L_4400f0
          .long .L_40e0a0-.L_4400f0
          .long .L_40e8a0-.L_4400f0
          .long .L_40e92c-.L_4400f0
.L_440118:
          .long .L_40ebb0-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ef80-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ef10-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40ee80-.L_440118
          .long .L_40ebf0-.L_440118
          .long .L_40eb40-.L_440118
          .long .L_40eb40-.L_440118
          .long .L_40ec58-.L_440118
.L_440154:
          .long .L_40fb90-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40ff10-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fe38-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fdb0-.L_440154
          .long .L_40fb58-.L_440154
          .long .L_40fae0-.L_440154
          .long .L_40fae0-.L_440154
          .long .L_40fc00-.L_440154
          .zero 16
.L_4401a0:
          .string "void OT::hb_sanitize_context_t::start_processing()"
          .zero 13
.L_4401e0:
          .byte 0x74
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x63
          .byte 0x73
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x6e
          .byte 0x72
          .byte 0x65
          .byte 0x6b
          .byte 0x61
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x74
          .byte 0x6c
          .byte 0x63
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440200:
          .byte 0x70
          .byte 0x6d
          .byte 0x63
          .byte 0x63
          .byte 0x6c
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6b
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x6b
          .byte 0x6d
          .byte 0x6b
          .byte 0x6d
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440220:
          .long .L_413290-.L_440220
          .long .L_4132b0-.L_440220
          .long .L_4132d0-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_4132f0-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413318-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413278-.L_440220
          .long .L_413250-.L_440220
.L_44029c:
          .long .L_414bd0-.L_44029c
          .long .L_414ba8-.L_44029c
          .long .L_414990-.L_44029c
          .long .L_414990-.L_44029c
          .long .L_414990-.L_44029c
          .long .L_414be0-.L_44029c
          .long .L_414c10-.L_44029c
          .long .L_414c80-.L_44029c
          .long .L_414990-.L_44029c
.L_4402c0:
          .long .L_414bd0-.L_4402c0
          .long .L_414d2e-.L_4402c0
          .long .L_414cf2-.L_4402c0
          .long .L_414cf2-.L_4402c0
          .long .L_414cf2-.L_4402c0
          .long .L_414d4b-.L_4402c0
          .long .L_414d80-.L_4402c0
          .long .L_414df2-.L_4402c0
          .long .L_414cf2-.L_4402c0
          .zero 28
.L_440300:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::HeadlessArrayOf<OT::GlyphID>]"
          .zero 1
.L_440360:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::HeadlessArrayOf<OT::GlyphID>]"
          .zero 29
.L_4403e0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::Ligature]"
          .zero 17
.L_440440:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 16
.L_440500:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 12
.L_4405c0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::LigatureSet]"
          .zero 14
.L_440620:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 13
.L_4406e0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<short unsigned int, 2> >, OT::IntType<short unsigned int, 2> >]"
          .zero 9
.L_4407a0:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::LigatureSubstFormat1]"
          .zero 5
.L_440800:
          .string "Type* OT::hb_serialize_context_t::copy() [with Type = OT::SubstLookup]"
          .zero 25
.L_440860:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::ArrayOf<OT::GlyphID, OT::IntType<short unsigned int, 2> >]"
          .zero 4
.L_4408e0:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::SortedArrayOf<OT::RangeRecord>]"
          .zero 31
.L_440960:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::CoverageFormat2]"
          .zero 10
.L_4409c0:
          .string "Type* OT::hb_serialize_context_t::extend(Type&) [with Type = OT::SortedArrayOf<OT::GlyphID>]"
          .zero 3
.L_440a20:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::CoverageFormat1]"
          .zero 10
.L_440a80:
          .string "Type* OT::hb_serialize_context_t::extend_min(Type&) [with Type = OT::Coverage]"
          .zero 17
.L_440ae0:
          .string "void apply_stch(const hb_ot_shape_plan_t*, hb_buffer_t*, hb_font_t*)"
          .zero 27
.L_440b40:
          .zero 192
.L_440c00:
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x6c
          .byte 0x6f
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x69
          .byte 0x6c
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440c20:
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x5
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440ce0:
          .byte 0x6c
          .byte 0x6f
          .byte 0x73
          .byte 0x69
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x32
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x33
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x32
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440d00:
          .byte 0xdf
          .byte 0xfe
          .byte 0x88
          .byte 0xfe
          .byte 0xf9
          .byte 0xfe
          .byte 0x82
          .byte 0xfe
          .byte 0xf5
          .byte 0xfe
          .byte 0x8e
          .byte 0xfe
          .byte 0xfb
          .byte 0xfe
          .byte 0x84
          .byte 0xfe
          .byte 0xf7
          .byte 0xfe
          .byte 0xe0
          .byte 0xfe
          .byte 0x88
          .byte 0xfe
          .byte 0xfa
          .byte 0xfe
          .byte 0x82
          .byte 0xfe
          .byte 0xf6
          .byte 0xfe
          .byte 0x8e
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x84
          .byte 0xfe
          .byte 0xf8
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440d40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0xfe
          .byte 0x81
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0xfe
          .byte 0x83
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0xfe
          .byte 0x85
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0xfe
          .byte 0x87
          .byte 0xfe
          .byte 0x8b
          .byte 0xfe
          .byte 0x8c
          .byte 0xfe
          .byte 0x8a
          .byte 0xfe
          .byte 0x89
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0xfe
          .byte 0x8d
          .byte 0xfe
          .byte 0x91
          .byte 0xfe
          .byte 0x92
          .byte 0xfe
          .byte 0x90
          .byte 0xfe
          .byte 0x8f
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xfe
          .byte 0x93
          .byte 0xfe
          .byte 0x97
          .byte 0xfe
          .byte 0x98
          .byte 0xfe
          .byte 0x96
          .byte 0xfe
          .byte 0x95
          .byte 0xfe
          .byte 0x9b
          .byte 0xfe
          .byte 0x9c
          .byte 0xfe
          .byte 0x9a
          .byte 0xfe
          .byte 0x99
          .byte 0xfe
          .byte 0x9f
          .byte 0xfe
          .byte 0xa0
          .byte 0xfe
          .byte 0x9e
          .byte 0xfe
          .byte 0x9d
          .byte 0xfe
          .byte 0xa3
          .byte 0xfe
          .byte 0xa4
          .byte 0xfe
          .byte 0xa2
          .byte 0xfe
          .byte 0xa1
          .byte 0xfe
          .byte 0xa7
          .byte 0xfe
          .byte 0xa8
          .byte 0xfe
          .byte 0xa6
          .byte 0xfe
          .byte 0xa5
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xfe
          .byte 0xa9
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0xfe
          .byte 0xab
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0xfe
          .byte 0xad
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xfe
          .byte 0xaf
          .byte 0xfe
          .byte 0xb3
          .byte 0xfe
          .byte 0xb4
          .byte 0xfe
          .byte 0xb2
          .byte 0xfe
          .byte 0xb1
          .byte 0xfe
          .byte 0xb7
          .byte 0xfe
          .byte 0xb8
          .byte 0xfe
          .byte 0xb6
          .byte 0xfe
          .byte 0xb5
          .byte 0xfe
          .byte 0xbb
          .byte 0xfe
          .byte 0xbc
          .byte 0xfe
          .byte 0xba
          .byte 0xfe
          .byte 0xb9
          .byte 0xfe
          .byte 0xbf
          .byte 0xfe
          .byte 0xc0
          .byte 0xfe
          .byte 0xbe
          .byte 0xfe
          .byte 0xbd
          .byte 0xfe
          .byte 0xc3
          .byte 0xfe
          .byte 0xc4
          .byte 0xfe
          .byte 0xc2
          .byte 0xfe
          .byte 0xc1
          .byte 0xfe
          .byte 0xc7
          .byte 0xfe
          .byte 0xc8
          .byte 0xfe
          .byte 0xc6
          .byte 0xfe
          .byte 0xc5
          .byte 0xfe
          .byte 0xcb
          .byte 0xfe
          .byte 0xcc
          .byte 0xfe
          .byte 0xca
          .byte 0xfe
          .byte 0xc9
          .byte 0xfe
          .byte 0xcf
          .byte 0xfe
          .byte 0xd0
          .byte 0xfe
          .byte 0xce
          .byte 0xfe
          .byte 0xcd
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0xfe
          .byte 0xd4
          .byte 0xfe
          .byte 0xd2
          .byte 0xfe
          .byte 0xd1
          .byte 0xfe
          .byte 0xd7
          .byte 0xfe
          .byte 0xd8
          .byte 0xfe
          .byte 0xd6
          .byte 0xfe
          .byte 0xd5
          .byte 0xfe
          .byte 0xdb
          .byte 0xfe
          .byte 0xdc
          .byte 0xfe
          .byte 0xda
          .byte 0xfe
          .byte 0xd9
          .byte 0xfe
          .byte 0xdf
          .byte 0xfe
          .byte 0xe0
          .byte 0xfe
          .byte 0xde
          .byte 0xfe
          .byte 0xdd
          .byte 0xfe
          .byte 0xe3
          .byte 0xfe
          .byte 0xe4
          .byte 0xfe
          .byte 0xe2
          .byte 0xfe
          .byte 0xe1
          .byte 0xfe
          .byte 0xe7
          .byte 0xfe
          .byte 0xe8
          .byte 0xfe
          .byte 0xe6
          .byte 0xfe
          .byte 0xe5
          .byte 0xfe
          .byte 0xeb
          .byte 0xfe
          .byte 0xec
          .byte 0xfe
          .byte 0xea
          .byte 0xfe
          .byte 0xe9
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0xfe
          .byte 0xed
          .byte 0xfe
          .byte 0xe8
          .byte 0xfb
          .byte 0xe9
          .byte 0xfb
          .byte 0xf0
          .byte 0xfe
          .byte 0xef
          .byte 0xfe
          .byte 0xf3
          .byte 0xfe
          .byte 0xf4
          .byte 0xfe
          .byte 0xf2
          .byte 0xfe
          .byte 0xf1
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0xfb
          .byte 0x50
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0xfb
          .byte 0x69
          .byte 0xfb
          .byte 0x67
          .byte 0xfb
          .byte 0x66
          .byte 0xfb
          .byte 0x60
          .byte 0xfb
          .byte 0x61
          .byte 0xfb
          .byte 0x5f
          .byte 0xfb
          .byte 0x5e
          .byte 0xfb
          .byte 0x54
          .byte 0xfb
          .byte 0x55
          .byte 0xfb
          .byte 0x53
          .byte 0xfb
          .byte 0x52
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0xfb
          .byte 0x59
          .byte 0xfb
          .byte 0x57
          .byte 0xfb
          .byte 0x56
          .byte 0xfb
          .byte 0x64
          .byte 0xfb
          .byte 0x65
          .byte 0xfb
          .byte 0x63
          .byte 0xfb
          .byte 0x62
          .byte 0xfb
          .byte 0x5c
          .byte 0xfb
          .byte 0x5d
          .byte 0xfb
          .byte 0x5b
          .byte 0xfb
          .byte 0x5a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0xfb
          .byte 0x79
          .byte 0xfb
          .byte 0x77
          .byte 0xfb
          .byte 0x76
          .byte 0xfb
          .byte 0x74
          .byte 0xfb
          .byte 0x75
          .byte 0xfb
          .byte 0x73
          .byte 0xfb
          .byte 0x72
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0xfb
          .byte 0x7d
          .byte 0xfb
          .byte 0x7b
          .byte 0xfb
          .byte 0x7a
          .byte 0xfb
          .byte 0x80
          .byte 0xfb
          .byte 0x81
          .byte 0xfb
          .byte 0x7f
          .byte 0xfb
          .byte 0x7e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0xfb
          .byte 0x88
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0xfb
          .byte 0x84
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0xfb
          .byte 0x82
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xfb
          .byte 0x86
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xfb
          .byte 0x8c
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xfb
          .byte 0x8a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0xfb
          .byte 0x6d
          .byte 0xfb
          .byte 0x6b
          .byte 0xfb
          .byte 0x6a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0xfb
          .byte 0x71
          .byte 0xfb
          .byte 0x6f
          .byte 0xfb
          .byte 0x6e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xfb
          .byte 0x91
          .byte 0xfb
          .byte 0x8f
          .byte 0xfb
          .byte 0x8e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xfb
          .byte 0xd6
          .byte 0xfb
          .byte 0xd4
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xfb
          .byte 0x95
          .byte 0xfb
          .byte 0x93
          .byte 0xfb
          .byte 0x92
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xfb
          .byte 0x9d
          .byte 0xfb
          .byte 0x9b
          .byte 0xfb
          .byte 0x9a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0xfb
          .byte 0x99
          .byte 0xfb
          .byte 0x97
          .byte 0xfb
          .byte 0x96
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0xfb
          .byte 0x9e
          .byte 0xfb
          .byte 0xa2
          .byte 0xfb
          .byte 0xa3
          .byte 0xfb
          .byte 0xa1
          .byte 0xfb
          .byte 0xa0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0xfb
          .byte 0xad
          .byte 0xfb
          .byte 0xab
          .byte 0xfb
          .byte 0xaa
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0xfb
          .byte 0xa4
          .byte 0xfb
          .byte 0xa8
          .byte 0xfb
          .byte 0xa9
          .byte 0xfb
          .byte 0xa7
          .byte 0xfb
          .byte 0xa6
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0xfb
          .byte 0xe0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xfb
          .byte 0xd9
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0xfb
          .byte 0xd7
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xfb
          .byte 0xdb
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0xfb
          .byte 0xe2
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xfb
          .byte 0xde
          .byte 0xfb
          .byte 0xfe
          .byte 0xfb
          .byte 0xff
          .byte 0xfb
          .byte 0xfd
          .byte 0xfb
          .byte 0xfc
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xfb
          .byte 0xe7
          .byte 0xfb
          .byte 0xe5
          .byte 0xfb
          .byte 0xe4
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0xfb
          .byte 0xae
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0xfb
          .byte 0xb0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4412e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x8
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x4
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x5
          .byte 0x5
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x5
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x5
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x7
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x1
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
.L_44179e:
          .string "hb-ot-shape-complex-arabic.cc"
.L_4417bc:
          .string "j == 0"
.L_4417c3:
          .string "!this->ran_out_of_room"
          .zero 6
.L_4417e0:
          .string "this->start <= (char *) &obj && (char *) &obj <= this->head && (char *) &obj + size >= this->head"
          .zero 6
.L_441848:
          .string "this->start < (char *) &obj && (char *) &obj <= this->head && (char *) &obj + size >= this->head"
          .zero 3
.L_4418ac:
          .long .L_415e0e-.L_4418ac
          .long .L_415e20-.L_4418ac
          .long .L_415dc0-.L_4418ac
          .long .L_415dc0-.L_4418ac
          .long .L_415dc0-.L_4418ac
          .long .L_415eb0-.L_4418ac
          .long .L_415e40-.L_4418ac
          .long .L_415df8-.L_4418ac
          .long .L_415dc0-.L_4418ac
          .zero 16
.L_4418e0:
          .string "default"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441940:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x6d
          .byte 0x6a
          .byte 0x6c
          .byte 0x6f
          .byte 0x6d
          .byte 0x6a
          .byte 0x76
          .byte 0x6f
          .byte 0x6d
          .byte 0x6a
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441960:
          .long .L_416f60-.L_441960
          .long .L_416f15-.L_441960
          .long .L_416f15-.L_441960
          .long .L_416f80-.L_441960
          .long .L_416fb0-.L_441960
          .long .L_416fd0-.L_441960
          .long .L_416f15-.L_441960
          .long .L_416f15-.L_441960
          .long .L_416ff0-.L_441960
          .long .L_416f15-.L_441960
          .long .L_416f15-.L_441960
          .long .L_416ee8-.L_441960
          .long .L_416f15-.L_441960
          .long .L_417018-.L_441960
          .long .L_416f38-.L_441960
          .zero 4
.L_4419a0:
          .byte 0x30
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441a20:
          .long .L_417347-.L_441a20
          .long .L_4179bd-.L_441a20
          .long .L_4179a9-.L_441a20
          .long .L_41795a-.L_441a20
          .long .L_41790a-.L_441a20
          .long .L_417880-.L_441a20
          .long .L_417860-.L_441a20
          .long .L_4177c6-.L_441a20
          .long .L_41779d-.L_441a20
          .long .L_417812-.L_441a20
          .long .L_417347-.L_441a20
          .long .L_417347-.L_441a20
          .long .L_417752-.L_441a20
          .long .L_41772a-.L_441a20
          .long .L_4176e1-.L_441a20
          .long .L_417699-.L_441a20
          .long .L_417649-.L_441a20
          .long .L_4175f9-.L_441a20
          .long .L_4175a9-.L_441a20
          .long .L_417559-.L_441a20
          .long .L_417511-.L_441a20
          .long .L_4174c9-.L_441a20
          .long .L_41747b-.L_441a20
          .long .L_417424-.L_441a20
          .long .L_4173c4-.L_441a20
.L_441a84:
          .long .L_4186e2-.L_441a84
          .long .L_4179a1-.L_441a84
          .long .L_4186d4-.L_441a84
          .long .L_4186c6-.L_441a84
          .long .L_4186bd-.L_441a84
          .long .L_4186b6-.L_441a84
          .long .L_4186a8-.L_441a84
          .long .L_4186a1-.L_441a84
          .long .L_418693-.L_441a84
          .long .L_4186f0-.L_441a84
          .long .L_4186f0-.L_441a84
          .long .L_41774a-.L_441a84
          .long .L_41868c-.L_441a84
          .long .L_4176d9-.L_441a84
          .long .L_417691-.L_441a84
          .long .L_417641-.L_441a84
          .long .L_4175f1-.L_441a84
          .long .L_4175a1-.L_441a84
          .long .L_417551-.L_441a84
          .long .L_417509-.L_441a84
          .long .L_4174c1-.L_441a84
          .long .L_417473-.L_441a84
          .long .L_41741c-.L_441a84
          .long .L_4173bc-.L_441a84
.L_441ae4:
          .long .L_417e9f-.L_441ae4
          .long .L_417e92-.L_441ae4
          .long .L_417e84-.L_441ae4
          .long .L_417e76-.L_441ae4
          .long .L_417e6f-.L_441ae4
          .long .L_417e63-.L_441ae4
          .long .L_417e55-.L_441ae4
          .long .L_4186a1-.L_441ae4
          .long .L_417e47-.L_441ae4
          .long .L_417ead-.L_441ae4
          .long .L_417ead-.L_441ae4
          .long .L_417e3a-.L_441ae4
          .long .L_41868c-.L_441ae4
          .long .L_417e2d-.L_441ae4
          .long .L_417e20-.L_441ae4
          .long .L_417e13-.L_441ae4
          .long .L_417e06-.L_441ae4
          .long .L_417df9-.L_441ae4
          .long .L_417dec-.L_441ae4
          .long .L_417ddf-.L_441ae4
          .long .L_417dd2-.L_441ae4
          .long .L_417dc5-.L_441ae4
          .long .L_417c21-.L_441ae4
          .long .L_417c14-.L_441ae4
.L_441b44:
          .long .L_417d88-.L_441b44
          .long .L_417d76-.L_441b44
          .long .L_417d63-.L_441b44
          .long .L_417d50-.L_441b44
          .long .L_417d44-.L_441b44
          .long .L_417860-.L_441b44
          .long .L_417d31-.L_441b44
          .long .L_417d25-.L_441b44
          .long .L_417d12-.L_441b44
          .long .L_417d9b-.L_441b44
          .long .L_417d9b-.L_441b44
          .long .L_417d00-.L_441b44
          .long .L_417cf4-.L_441b44
          .long .L_417ce2-.L_441b44
          .long .L_417cd0-.L_441b44
          .long .L_417cbe-.L_441b44
          .long .L_417cac-.L_441b44
          .long .L_417c9a-.L_441b44
          .long .L_417c88-.L_441b44
          .long .L_417c76-.L_441b44
          .long .L_417c64-.L_441b44
          .long .L_417c52-.L_441b44
          .long .L_417c40-.L_441b44
          .long .L_417c2e-.L_441b44
.L_441ba4:
          .long .L_4180c7-.L_441ba4
          .long .L_417e92-.L_441ba4
          .long .L_4180b9-.L_441ba4
          .long .L_4180ab-.L_441ba4
          .long .L_417f85-.L_441ba4
          .long .L_417e63-.L_441ba4
          .long .L_417f77-.L_441ba4
          .long .L_417f8e-.L_441ba4
          .long .L_417f69-.L_441ba4
          .long .L_4180d5-.L_441ba4
          .long .L_4180d5-.L_441ba4
          .long .L_417e3a-.L_441ba4
          .long .L_41868c-.L_441ba4
          .long .L_417e2d-.L_441ba4
          .long .L_417e20-.L_441ba4
          .long .L_417e13-.L_441ba4
          .long .L_417e06-.L_441ba4
          .long .L_417df9-.L_441ba4
          .long .L_417dec-.L_441ba4
          .long .L_417ddf-.L_441ba4
          .long .L_417dd2-.L_441ba4
          .long .L_417dc5-.L_441ba4
          .long .L_417c21-.L_441ba4
          .long .L_417c14-.L_441ba4
.L_441c04:
          .long .L_41807d-.L_441c04
          .long .L_418070-.L_441c04
          .long .L_418062-.L_441c04
          .long .L_418054-.L_441c04
          .long .L_417a04-.L_441c04
          .long .L_417e63-.L_441c04
          .long .L_418046-.L_441c04
          .long .L_4186a1-.L_441c04
          .long .L_418038-.L_441c04
          .long .L_41808b-.L_441c04
          .long .L_41808b-.L_441c04
          .long .L_41802b-.L_441c04
          .long .L_418024-.L_441c04
          .long .L_418017-.L_441c04
          .long .L_41800a-.L_441c04
          .long .L_417ffd-.L_441c04
          .long .L_417ff0-.L_441c04
          .long .L_417fe3-.L_441c04
          .long .L_417fd6-.L_441c04
          .long .L_417fc9-.L_441c04
          .long .L_417fbc-.L_441c04
          .long .L_417faf-.L_441c04
          .long .L_417fa2-.L_441c04
          .long .L_417f95-.L_441c04
.L_441c64:
          .long .L_418404-.L_441c64
          .long .L_4183f5-.L_441c64
          .long .L_4183e5-.L_441c64
          .long .L_4183d5-.L_441c64
          .long .L_4183ce-.L_441c64
          .long .L_4183c0-.L_441c64
          .long .L_4183b0-.L_441c64
          .long .L_417799-.L_441c64
          .long .L_4183a0-.L_441c64
          .long .L_418414-.L_441c64
          .long .L_418414-.L_441c64
          .long .L_418391-.L_441c64
          .long .L_418388-.L_441c64
          .long .L_418379-.L_441c64
          .long .L_41836a-.L_441c64
          .long .L_41835b-.L_441c64
          .long .L_41834c-.L_441c64
          .long .L_41833d-.L_441c64
          .long .L_41832e-.L_441c64
          .long .L_41831f-.L_441c64
          .long .L_418310-.L_441c64
          .long .L_418301-.L_441c64
          .long .L_41817f-.L_441c64
          .long .L_418170-.L_441c64
.L_441cc4:
          .long .L_4182c4-.L_441cc4
          .long .L_4182b2-.L_441cc4
          .long .L_41829f-.L_441cc4
          .long .L_41828c-.L_441cc4
          .long .L_417e6a-.L_441cc4
          .long .L_417859-.L_441cc4
          .long .L_418279-.L_441cc4
          .long .L_417d25-.L_441cc4
          .long .L_418266-.L_441cc4
          .long .L_4182d7-.L_441cc4
          .long .L_4182d7-.L_441cc4
          .long .L_418254-.L_441cc4
          .long .L_417cf4-.L_441cc4
          .long .L_418242-.L_441cc4
          .long .L_418230-.L_441cc4
          .long .L_41821e-.L_441cc4
          .long .L_41820c-.L_441cc4
          .long .L_4181fa-.L_441cc4
          .long .L_4181e8-.L_441cc4
          .long .L_4181d6-.L_441cc4
          .long .L_4181c4-.L_441cc4
          .long .L_4181b2-.L_441cc4
          .long .L_4181a0-.L_441cc4
          .long .L_41818e-.L_441cc4
.L_441d24:
          .long .L_4179b4-.L_441d24
          .long .L_4179a1-.L_441d24
          .long .L_417951-.L_441d24
          .long .L_417901-.L_441d24
          .long .L_417d49-.L_441d24
          .long .L_417860-.L_441d24
          .long .L_4177bd-.L_441d24
          .long .L_4186a1-.L_441d24
          .long .L_417809-.L_441d24
          .long .L_41867c-.L_441d24
          .long .L_41867c-.L_441d24
          .long .L_41774a-.L_441d24
          .long .L_41868c-.L_441d24
          .long .L_4176d9-.L_441d24
          .long .L_417691-.L_441d24
          .long .L_417641-.L_441d24
          .long .L_4175f1-.L_441d24
          .long .L_4175a1-.L_441d24
          .long .L_417551-.L_441d24
          .long .L_417509-.L_441d24
          .long .L_4174c1-.L_441d24
          .long .L_417473-.L_441d24
          .long .L_41741c-.L_441d24
          .long .L_4173bc-.L_441d24
.L_441d84:
          .long .L_418639-.L_441d84
          .long .L_418625-.L_441d84
          .long .L_418610-.L_441d84
          .long .L_4185fb-.L_441d84
          .long .L_4183c9-.L_441d84
          .long .L_4185ed-.L_441d84
          .long .L_4185d8-.L_441d84
          .long .L_417799-.L_441d84
          .long .L_4185c3-.L_441d84
          .long .L_41864e-.L_441d84
          .long .L_41864e-.L_441d84
          .long .L_4185af-.L_441d84
          .long .L_417721-.L_441d84
          .long .L_41859b-.L_441d84
          .long .L_418587-.L_441d84
          .long .L_418573-.L_441d84
          .long .L_41855f-.L_441d84
          .long .L_41854b-.L_441d84
          .long .L_418537-.L_441d84
          .long .L_418523-.L_441d84
          .long .L_41850f-.L_441d84
          .long .L_4184fb-.L_441d84
          .long .L_4184e7-.L_441d84
          .long .L_4184d3-.L_441d84
          .zero 28
.L_441e00:
          .string "void initial_reordering_consonant_syllable(const hb_ot_shape_plan_t*, hb_face_t*, hb_buffer_t*, unsigned int, unsigned int)"
          .zero 4
.L_441e80:
          .string "void final_reordering_syllable(const hb_ot_shape_plan_t*, hb_buffer_t*, unsigned int, unsigned int)"
          .zero 28
.L_441f00:
          .string "void hb_ot_map_t::get_stage_lookups(unsigned int, unsigned int, const hb_ot_map_t::lookup_map_t**, unsigned int*) const"
          .zero 8
.L_441f80:
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4423c0:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x4
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x7
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x9
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0xd
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x12
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x14
          .byte 0x15
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442600:
          .byte 0xb2
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x29
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x27
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x3b
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x3e
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x26
          .byte 0x1
          .byte 0x2f
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x41
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x52
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x55
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x60
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x63
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x88
          .byte 0x1
          .byte 0x8c
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x93
          .byte 0x1
          .byte 0x96
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0x72
          .byte 0x0
          .byte 0xc2
          .byte 0x1
          .byte 0x73
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x79
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x7c
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xb4
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x87
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x9a
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x9b
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x9e
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0xa1
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xa6
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0xa9
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0xac
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0xaf
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x12
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x49
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x48
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x26
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0x47
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x8
          .byte 0x1
          .byte 0x46
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0x45
          .byte 0x0
          .byte 0x42
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x44
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0x11
          .byte 0x1
          .byte 0x43
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x42
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x13
          .byte 0x1
          .byte 0x15
          .byte 0x1
          .byte 0x41
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x40
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x25
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x27
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x2b
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x2e
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x31
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x34
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x38
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x52
          .byte 0x1
          .byte 0x6d
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x4b
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x6c
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x95
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x6b
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x6a
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x8e
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x69
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x68
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x67
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x66
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x7f
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x65
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x4a
          .byte 0x0
          .byte 0x66
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x4c
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x4d
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x50
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x53
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x56
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x59
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0x99
          .byte 0x1
          .byte 0x9b
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0x92
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0x6f
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0x90
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xa6
          .byte 0x1
          .byte 0x8f
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0x8e
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xaa
          .byte 0x1
          .byte 0x8d
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0x8c
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0xd7
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0x8b
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb3
          .byte 0x1
          .byte 0x8a
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0x89
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0x6e
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0xbb
          .byte 0x1
          .byte 0xb2
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0x70
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x71
          .byte 0x0
          .byte 0xc3
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x77
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x7a
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x7d
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0xdd
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0x93
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0x11
          .byte 0x2
          .byte 0x94
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0xf8
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xf7
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0x96
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0x95
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x99
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x9c
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x9f
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0xa4
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0xb1
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x15
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442a60:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x99
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x9b
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x3
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x1c
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x6
          .byte 0x1
          .byte 0x9
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x19
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x16
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x13
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4d
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x22
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x49
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x47
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x45
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x4e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x43
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x43
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x30
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x40
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x33
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x3d
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x36
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x29
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x29
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x45
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x47
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x49
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x65
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4b
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x4c
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x2a
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x3a
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x2d
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0xbf
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xbf
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x71
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x73
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x79
          .byte 0x1
          .byte 0x7a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x71
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x7c
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x82
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6f
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8c
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x8e
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x93
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x97
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x99
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x52
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x97
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x97
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x52
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9b
          .byte 0x1
          .byte 0x6b
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0x58
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0x68
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0x5b
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa1
          .byte 0x1
          .byte 0x65
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x65
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0x5e
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xa6
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x50
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x50
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8a
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x82
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6f
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xaa
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x79
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x71
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xac
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x73
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x9a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x51
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0x9c
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb3
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x9b
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb9
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0xc0
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x99
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc2
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xc9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x97
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcb
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd2
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x95
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x93
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdd
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x79
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x79
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0x91
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x91
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0x7e
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0x8e
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x8e
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0x81
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf0
          .byte 0x1
          .byte 0x8b
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x8b
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0x84
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x77
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x77
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x93
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xf7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x95
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xf9
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xf8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x97
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0xbe
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x99
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0x78
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x88
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb2
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0x7b
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xbc
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x54
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xbc
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0xcb
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0xcd
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x9
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0xa
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xb
          .byte 0x2
          .byte 0x68
          .byte 0x1
          .byte 0xc
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0xd
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x6f
          .byte 0x1
          .byte 0xd
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x54
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x74
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x11
          .byte 0x2
          .byte 0xa0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0xb8
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x13
          .byte 0x2
          .byte 0xa2
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0xb5
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0xa5
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0xb2
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0xa8
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1c
          .byte 0x2
          .byte 0xaf
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0xca
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0xab
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x62
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x4f
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0xb
          .byte 0x2
          .byte 0x68
          .byte 0x1
          .byte 0x23
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0xba
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0xba
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x28
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x29
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x2a
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x2b
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4458a0:
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x16
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x90
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xc0
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xce
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x7
          .byte 0x2
          .byte 0xc
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x12
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0x1c
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x2c
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x30
          .byte 0x2
          .byte 0x36
          .byte 0x2
          .byte 0x38
          .byte 0x2
          .byte 0x3a
          .byte 0x2
          .byte 0x46
          .byte 0x2
          .byte 0x52
          .byte 0x2
          .byte 0x5e
          .byte 0x2
          .byte 0x6a
          .byte 0x2
          .byte 0x76
          .byte 0x2
          .byte 0x82
          .byte 0x2
          .byte 0x8e
          .byte 0x2
          .byte 0x9a
          .byte 0x2
          .byte 0xa6
          .byte 0x2
          .byte 0xa8
          .byte 0x2
          .byte 0xb9
          .byte 0x2
          .byte 0xc0
          .byte 0x2
          .byte 0xc5
          .byte 0x2
          .byte 0xc9
          .byte 0x2
          .byte 0xcb
          .byte 0x2
          .byte 0xd0
          .byte 0x2
          .byte 0xd4
          .byte 0x2
          .byte 0xd6
          .byte 0x2
          .byte 0xdb
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe1
          .byte 0x2
          .byte 0xe6
          .byte 0x2
          .byte 0xea
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xf2
          .byte 0x2
          .byte 0xf4
          .byte 0x2
          .byte 0xf6
          .byte 0x2
          .byte 0xfc
          .byte 0x2
          .byte 0xfe
          .byte 0x2
          .byte 0x0
          .byte 0x3
          .byte 0x6
          .byte 0x3
          .byte 0x8
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0x10
          .byte 0x3
          .byte 0x12
          .byte 0x3
          .byte 0x14
          .byte 0x3
          .byte 0x20
          .byte 0x3
          .byte 0x2c
          .byte 0x3
          .byte 0x38
          .byte 0x3
          .byte 0x44
          .byte 0x3
          .byte 0x50
          .byte 0x3
          .byte 0x5c
          .byte 0x3
          .byte 0x68
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x80
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x98
          .byte 0x3
          .byte 0x9d
          .byte 0x3
          .byte 0xa9
          .byte 0x3
          .byte 0xb5
          .byte 0x3
          .byte 0xba
          .byte 0x3
          .byte 0xbe
          .byte 0x3
          .byte 0xc3
          .byte 0x3
          .byte 0xc7
          .byte 0x3
          .byte 0xc9
          .byte 0x3
          .byte 0xce
          .byte 0x3
          .byte 0xd2
          .byte 0x3
          .byte 0xd4
          .byte 0x3
          .byte 0xd9
          .byte 0x3
          .byte 0xdd
          .byte 0x3
          .byte 0xdf
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xf2
          .byte 0x3
          .byte 0xf9
          .byte 0x3
          .byte 0xff
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x4
          .byte 0x9
          .byte 0x4
          .byte 0xb
          .byte 0x4
          .byte 0xd
          .byte 0x4
          .byte 0x13
          .byte 0x4
          .byte 0x15
          .byte 0x4
          .byte 0x17
          .byte 0x4
          .byte 0x1d
          .byte 0x4
          .byte 0x1f
          .byte 0x4
          .byte 0x21
          .byte 0x4
          .byte 0x23
          .byte 0x4
          .byte 0x36
          .byte 0x4
          .byte 0x46
          .byte 0x4
          .byte 0x56
          .byte 0x4
          .byte 0x65
          .byte 0x4
          .byte 0x76
          .byte 0x4
          .byte 0x86
          .byte 0x4
          .byte 0x96
          .byte 0x4
          .byte 0xa5
          .byte 0x4
          .byte 0xb6
          .byte 0x4
          .byte 0xc6
          .byte 0x4
          .byte 0xd6
          .byte 0x4
          .byte 0xe5
          .byte 0x4
          .byte 0xf6
          .byte 0x4
          .byte 0x6
          .byte 0x5
          .byte 0x16
          .byte 0x5
          .byte 0x25
          .byte 0x5
          .byte 0x36
          .byte 0x5
          .byte 0x46
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0x65
          .byte 0x5
          .byte 0x70
          .byte 0x5
          .byte 0x7b
          .byte 0x5
          .byte 0x82
          .byte 0x5
          .byte 0x85
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0x8d
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x96
          .byte 0x5
          .byte 0xa2
          .byte 0x5
          .byte 0xab
          .byte 0x5
          .byte 0xb2
          .byte 0x5
          .byte 0xbb
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xd4
          .byte 0x5
          .byte 0xe1
          .byte 0x5
          .byte 0xed
          .byte 0x5
          .byte 0xf8
          .byte 0x5
          .byte 0x5
          .byte 0x6
          .byte 0x11
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x29
          .byte 0x6
          .byte 0x35
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0x4d
          .byte 0x6
          .byte 0x59
          .byte 0x6
          .byte 0x64
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0x82
          .byte 0x6
          .byte 0x8e
          .byte 0x6
          .byte 0x9e
          .byte 0x6
          .byte 0xae
          .byte 0x6
          .byte 0xbf
          .byte 0x6
          .byte 0xd0
          .byte 0x6
          .byte 0xe1
          .byte 0x6
          .byte 0xf2
          .byte 0x6
          .byte 0x3
          .byte 0x7
          .byte 0x13
          .byte 0x7
          .byte 0x23
          .byte 0x7
          .byte 0x34
          .byte 0x7
          .byte 0x45
          .byte 0x7
          .byte 0x56
          .byte 0x7
          .byte 0x67
          .byte 0x7
          .byte 0x78
          .byte 0x7
          .byte 0x88
          .byte 0x7
          .byte 0x98
          .byte 0x7
          .byte 0xa9
          .byte 0x7
          .byte 0xba
          .byte 0x7
          .byte 0xcb
          .byte 0x7
          .byte 0xdc
          .byte 0x7
          .byte 0xed
          .byte 0x7
          .byte 0xfd
          .byte 0x7
          .byte 0xd
          .byte 0x8
          .byte 0x1e
          .byte 0x8
          .byte 0x2f
          .byte 0x8
          .byte 0x40
          .byte 0x8
          .byte 0x51
          .byte 0x8
          .byte 0x62
          .byte 0x8
          .byte 0x72
          .byte 0x8
          .byte 0x82
          .byte 0x8
          .byte 0x92
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xb1
          .byte 0x8
          .byte 0xc2
          .byte 0x8
          .byte 0xd2
          .byte 0x8
          .byte 0xe2
          .byte 0x8
          .byte 0xf1
          .byte 0x8
          .byte 0x2
          .byte 0x9
          .byte 0x12
          .byte 0x9
          .byte 0x22
          .byte 0x9
          .byte 0x31
          .byte 0x9
          .byte 0x42
          .byte 0x9
          .byte 0x52
          .byte 0x9
          .byte 0x62
          .byte 0x9
          .byte 0x71
          .byte 0x9
          .byte 0x82
          .byte 0x9
          .byte 0x92
          .byte 0x9
          .byte 0xa2
          .byte 0x9
          .byte 0xb1
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xd1
          .byte 0x9
          .byte 0xd3
          .byte 0x9
          .byte 0xd6
          .byte 0x9
          .byte 0xd9
          .byte 0x9
          .byte 0xdb
          .byte 0x9
          .byte 0xe2
          .byte 0x9
          .byte 0xee
          .byte 0x9
          .byte 0xf7
          .byte 0x9
          .byte 0xfe
          .byte 0x9
          .byte 0x7
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x20
          .byte 0xa
          .byte 0x2d
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x44
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x5d
          .byte 0xa
          .byte 0x68
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x81
          .byte 0xa
          .byte 0x8c
          .byte 0xa
          .byte 0x99
          .byte 0xa
          .byte 0xa5
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xce
          .byte 0xa
          .byte 0xda
          .byte 0xa
          .byte 0xea
          .byte 0xa
          .byte 0xfa
          .byte 0xa
          .byte 0xb
          .byte 0xb
          .byte 0x1c
          .byte 0xb
          .byte 0x2d
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x4f
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x6f
          .byte 0xb
          .byte 0x80
          .byte 0xb
          .byte 0x91
          .byte 0xb
          .byte 0xa2
          .byte 0xb
          .byte 0xb3
          .byte 0xb
          .byte 0xc4
          .byte 0xb
          .byte 0xd4
          .byte 0xb
          .byte 0xe4
          .byte 0xb
          .byte 0xf5
          .byte 0xb
          .byte 0x6
          .byte 0xc
          .byte 0x17
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x49
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x6a
          .byte 0xc
          .byte 0x7b
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x9d
          .byte 0xc
          .byte 0xa9
          .byte 0xc
          .byte 0xba
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xda
          .byte 0xc
          .byte 0xe9
          .byte 0xc
          .byte 0xfa
          .byte 0xc
          .byte 0xa
          .byte 0xd
          .byte 0x1a
          .byte 0xd
          .byte 0x29
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x5a
          .byte 0xd
          .byte 0x69
          .byte 0xd
          .byte 0x7a
          .byte 0xd
          .byte 0x8a
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xa9
          .byte 0xd
          .byte 0xba
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xda
          .byte 0xd
          .byte 0xe9
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0xff
          .byte 0xd
          .byte 0x6
          .byte 0xe
          .byte 0x9
          .byte 0xe
          .byte 0xb
          .byte 0xe
          .byte 0xe
          .byte 0xe
          .byte 0x11
          .byte 0xe
          .byte 0x13
          .byte 0xe
          .byte 0x1a
          .byte 0xe
          .byte 0x26
          .byte 0xe
          .byte 0x2f
          .byte 0xe
          .byte 0x36
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0x4b
          .byte 0xe
          .byte 0x58
          .byte 0xe
          .byte 0x65
          .byte 0xe
          .byte 0x71
          .byte 0xe
          .byte 0x7c
          .byte 0xe
          .byte 0x89
          .byte 0xe
          .byte 0x95
          .byte 0xe
          .byte 0xa0
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xd1
          .byte 0xe
          .byte 0xdd
          .byte 0xe
          .byte 0xe8
          .byte 0xe
          .byte 0xf5
          .byte 0xe
          .byte 0x6
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x22
          .byte 0xf
          .byte 0x32
          .byte 0xf
          .byte 0x43
          .byte 0xf
          .byte 0x54
          .byte 0xf
          .byte 0x65
          .byte 0xf
          .byte 0x76
          .byte 0xf
          .byte 0x87
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0xa7
          .byte 0xf
          .byte 0xb8
          .byte 0xf
          .byte 0xc9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0xeb
          .byte 0xf
          .byte 0xfc
          .byte 0xf
          .byte 0xc
          .byte 0x10
          .byte 0x1c
          .byte 0x10
          .byte 0x2d
          .byte 0x10
          .byte 0x3e
          .byte 0x10
          .byte 0x4f
          .byte 0x10
          .byte 0x60
          .byte 0x10
          .byte 0x71
          .byte 0x10
          .byte 0x81
          .byte 0x10
          .byte 0x91
          .byte 0x10
          .byte 0xa2
          .byte 0x10
          .byte 0xb3
          .byte 0x10
          .byte 0xc4
          .byte 0x10
          .byte 0xd5
          .byte 0x10
          .byte 0xe6
          .byte 0x10
          .byte 0xf2
          .byte 0x10
          .byte 0x2
          .byte 0x11
          .byte 0xe
          .byte 0x11
          .byte 0x1e
          .byte 0x11
          .byte 0x2e
          .byte 0x11
          .byte 0x3d
          .byte 0x11
          .byte 0x4e
          .byte 0x11
          .byte 0x5e
          .byte 0x11
          .byte 0x6e
          .byte 0x11
          .byte 0x7d
          .byte 0x11
          .byte 0x8e
          .byte 0x11
          .byte 0x9e
          .byte 0x11
          .byte 0xae
          .byte 0x11
          .byte 0xbd
          .byte 0x11
          .byte 0xce
          .byte 0x11
          .byte 0xde
          .byte 0x11
          .byte 0xee
          .byte 0x11
          .byte 0xfd
          .byte 0x11
          .byte 0xe
          .byte 0x12
          .byte 0x1e
          .byte 0x12
          .byte 0x2e
          .byte 0x12
          .byte 0x3d
          .byte 0x12
          .byte 0x48
          .byte 0x12
          .byte 0x53
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x5f
          .byte 0x12
          .byte 0x62
          .byte 0x12
          .byte 0x65
          .byte 0x12
          .byte 0x67
          .byte 0x12
          .byte 0x6e
          .byte 0x12
          .byte 0x7a
          .byte 0x12
          .byte 0x83
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x93
          .byte 0x12
          .byte 0x9f
          .byte 0x12
          .byte 0xac
          .byte 0x12
          .byte 0xb9
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xd0
          .byte 0x12
          .byte 0xdd
          .byte 0x12
          .byte 0xe9
          .byte 0x12
          .byte 0xf4
          .byte 0x12
          .byte 0x1
          .byte 0x13
          .byte 0xd
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x25
          .byte 0x13
          .byte 0x31
          .byte 0x13
          .byte 0x3c
          .byte 0x13
          .byte 0x49
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x66
          .byte 0x13
          .byte 0x76
          .byte 0x13
          .byte 0x86
          .byte 0x13
          .byte 0x97
          .byte 0x13
          .byte 0xa8
          .byte 0x13
          .byte 0xb9
          .byte 0x13
          .byte 0xca
          .byte 0x13
          .byte 0xdb
          .byte 0x13
          .byte 0xeb
          .byte 0x13
          .byte 0xfb
          .byte 0x13
          .byte 0xc
          .byte 0x14
          .byte 0x1d
          .byte 0x14
          .byte 0x2e
          .byte 0x14
          .byte 0x3f
          .byte 0x14
          .byte 0x50
          .byte 0x14
          .byte 0x60
          .byte 0x14
          .byte 0x70
          .byte 0x14
          .byte 0x81
          .byte 0x14
          .byte 0x92
          .byte 0x14
          .byte 0xa3
          .byte 0x14
          .byte 0xb4
          .byte 0x14
          .byte 0xc5
          .byte 0x14
          .byte 0xd5
          .byte 0x14
          .byte 0xe5
          .byte 0x14
          .byte 0xf6
          .byte 0x14
          .byte 0x7
          .byte 0x15
          .byte 0x18
          .byte 0x15
          .byte 0x29
          .byte 0x15
          .byte 0x3a
          .byte 0x15
          .byte 0x4a
          .byte 0x15
          .byte 0x5c
          .byte 0x15
          .byte 0x6c
          .byte 0x15
          .byte 0x7e
          .byte 0x15
          .byte 0x8a
          .byte 0x15
          .byte 0x91
          .byte 0x15
          .byte 0x94
          .byte 0x15
          .byte 0x96
          .byte 0x15
          .byte 0x99
          .byte 0x15
          .byte 0x9c
          .byte 0x15
          .byte 0x9e
          .byte 0x15
          .byte 0xa5
          .byte 0x15
          .byte 0xb6
          .byte 0x15
          .byte 0xc6
          .byte 0x15
          .byte 0xd6
          .byte 0x15
          .byte 0xe5
          .byte 0x15
          .byte 0xf5
          .byte 0x15
          .byte 0x5
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x16
          .byte 0x2f
          .byte 0x16
          .byte 0x3a
          .byte 0x16
          .byte 0x47
          .byte 0x16
          .byte 0x53
          .byte 0x16
          .byte 0x5e
          .byte 0x16
          .byte 0x6b
          .byte 0x16
          .byte 0x77
          .byte 0x16
          .byte 0x82
          .byte 0x16
          .byte 0x8f
          .byte 0x16
          .byte 0x9b
          .byte 0x16
          .byte 0xa6
          .byte 0x16
          .byte 0xb2
          .byte 0x16
          .byte 0xbb
          .byte 0x16
          .byte 0xc2
          .byte 0x16
          .byte 0xcb
          .byte 0x16
          .byte 0xd7
          .byte 0x16
          .byte 0xe8
          .byte 0x16
          .byte 0xf1
          .byte 0x16
          .byte 0xf8
          .byte 0x16
          .byte 0xff
          .byte 0x16
          .byte 0x2
          .byte 0x17
          .byte 0x4
          .byte 0x17
          .byte 0x7
          .byte 0x17
          .byte 0xa
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445ce0:
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x4
          .byte 0xb
          .byte 0xb
          .byte 0x4
          .byte 0x3
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x4
          .byte 0x3
          .byte 0x1
          .byte 0x1
          .byte 0x10
          .byte 0x6
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x12
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xb
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xa
          .byte 0xa
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0x10
          .byte 0xb
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xf
          .byte 0x11
          .byte 0xf
          .byte 0x11
          .byte 0xb
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0x10
          .byte 0xf
          .byte 0xf
          .byte 0xe
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xc
          .byte 0xb
          .byte 0xa
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x10
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445f00:
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0x8
          .byte 0x4
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x10
          .byte 0x8
          .byte 0xd
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x4
          .byte 0x8
          .byte 0x6
          .byte 0x6
          .byte 0x10
          .byte 0x10
          .byte 0x8
          .byte 0x8
.L_446064:
          .byte 0x1
          .byte 0x12
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x4
          .byte 0xe
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x11
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x4
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xe
          .byte 0x4
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x3
          .byte 0xd
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xd
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0xa
          .byte 0x9
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446340:
          .byte 0x74
          .byte 0x6b
          .byte 0x75
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446348:
          .byte 0x6e
          .byte 0x68
          .byte 0x6b
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x68
          .byte 0x70
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x72
          .byte 0x6b
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x74
          .byte 0x61
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x63
          .byte 0x6a
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x61
          .byte 0x66
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4463a8:
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x69
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446400:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x76
          .byte 0x65
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x6e
          .byte 0x65
          .byte 0x42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x72
          .byte 0x75
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x6a
          .byte 0x75
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x79
          .byte 0x72
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x6d
          .byte 0x61
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x6c
          .byte 0x65
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x64
          .byte 0x6e
          .byte 0x4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x79
          .byte 0x6c
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x6e
          .byte 0x69
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x6d
          .byte 0x68
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x9
          .byte 0x0
          .byte 0x0
.L_446564:
          .byte 0xb0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x17
          .byte 0x0
          .byte 0x0
.L_446590:
          .string "hb-ot-shape-complex-indic.cc"
.L_4465ad:
          .string "hb-ot-map-private.hh"
.L_4465c2:
          .string "!has_reph"
          .zero 4
.L_4465d0:
          .string "reph_pos != REPH_POS_DONT_CARE"
          .zero 1
.L_4465f0:
          .string "stage <= stages[table_index].len"
          .zero 7
.L_446618:
          .string "indic_plan->config->reph_mode == REPH_MODE_VIS_REPHA"
          .zero 19
.L_446660:
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x4
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x8
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x4
          .byte 0x6
          .byte 0xf
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0xb
          .byte 0x8
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x4
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0x8
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x3
          .byte 0x8
          .byte 0x8
          .byte 0xb
          .byte 0xe
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x11
          .byte 0xb
          .byte 0x11
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x11
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x11
          .byte 0x8
          .byte 0x11
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x11
          .byte 0x8
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0x8
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xb
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x8
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0x3
          .byte 0x7
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0x8
          .byte 0x6
          .byte 0x8
          .byte 0xb
          .byte 0x7
          .byte 0xb
          .byte 0xd
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x3
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0x7
          .byte 0x6
          .byte 0xe
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x8
          .byte 0xf
          .byte 0x8
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x5
          .byte 0xf
          .byte 0x6
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x7
          .byte 0x6
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xb
          .byte 0x3
          .byte 0x6
          .byte 0x3
          .byte 0xb
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447460:
          .long .L_41c3c1-.L_447460
          .long .L_41c4a1-.L_447460
          .long .L_41c451-.L_447460
          .long .L_41c374-.L_447460
          .long .L_41c316-.L_447460
          .long .L_41c2cf-.L_447460
          .long .L_41c273-.L_447460
          .long .L_41c409-.L_447460
.L_447480:
          .string "default"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4474e0:
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447540:
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447580:
          .byte 0x0
          .byte 0x1
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1d
          .byte 0x20
          .byte 0x23
          .byte 0x24
          .byte 0x28
          .byte 0x29
          .byte 0x2a
          .byte 0x19
          .byte 0x26
          .byte 0x27
          .byte 0x25
          .byte 0x1c
          .byte 0x2b
          .byte 0x2c
          .byte 0x0
          .byte 0x2
          .byte 0xc
          .byte 0x0
          .byte 0x3
          .byte 0x9
          .byte 0xd
          .byte 0xe
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x5
          .byte 0x10
          .byte 0x11
          .byte 0xf
          .byte 0x8
          .byte 0x15
          .byte 0x4
          .byte 0x6
          .byte 0x7
          .byte 0xa
          .byte 0xb
          .byte 0x0
          .byte 0x18
          .byte 0x1a
          .byte 0x1b
          .byte 0x1e
          .byte 0x1f
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4475c0:
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x0
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x25
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x26
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x27
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x27
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x28
          .byte 0x14
          .byte 0x14
          .byte 0x28
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x29
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x28
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x29
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x29
          .byte 0x14
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x1
          .byte 0x1
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x14
          .byte 0x21
          .byte 0x14
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x14
          .byte 0x1d
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x14
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x22
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x14
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2b
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2c
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2d
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2d
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2e
          .byte 0x2a
          .byte 0x2a
          .byte 0x2e
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2f
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2e
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2f
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2f
          .byte 0x2a
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x30
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x14
          .byte 0x15
          .byte 0x31
          .byte 0x17
          .byte 0x17
          .byte 0x14
          .byte 0x18
          .byte 0x14
          .byte 0x19
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x14
          .byte 0x1a
          .byte 0x14
          .byte 0x14
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x14
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x1
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x1
          .byte 0x2a
          .byte 0x8
          .byte 0x1
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x8
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0x2a
          .byte 0xf
          .byte 0x2a
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0x2a
          .byte 0xb
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x10
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0x2a
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2a
          .byte 0x5
          .byte 0x2a
          .byte 0x6
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x8
          .byte 0x2a
          .byte 0x2a
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x2a
          .byte 0x33
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447a40:
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x8f
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0x1b
          .byte 0x2
          .byte 0x37
          .byte 0x2
          .byte 0x51
          .byte 0x2
          .byte 0x56
          .byte 0x2
          .byte 0x70
          .byte 0x2
          .byte 0x88
          .byte 0x2
          .byte 0x9e
          .byte 0x2
          .byte 0xb4
          .byte 0x2
          .byte 0xd0
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0x8
          .byte 0x3
          .byte 0x24
          .byte 0x3
          .byte 0x41
          .byte 0x3
          .byte 0x5d
          .byte 0x3
          .byte 0x7c
          .byte 0x3
          .byte 0x98
          .byte 0x3
          .byte 0xb4
          .byte 0x3
          .byte 0xd0
          .byte 0x3
          .byte 0xec
          .byte 0x3
          .byte 0x8
          .byte 0x4
          .byte 0x24
          .byte 0x4
          .byte 0x40
          .byte 0x4
          .byte 0x5c
          .byte 0x4
          .byte 0x78
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447aa0:
          .byte 0x1f
          .byte 0x1c
          .byte 0x19
          .byte 0x4
          .byte 0x19
          .byte 0x17
          .byte 0x15
          .byte 0x15
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x10
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x19
          .byte 0x4
          .byte 0x19
          .byte 0x17
          .byte 0x15
          .byte 0x15
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1c
          .byte 0x1b
          .byte 0x1e
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447ae0:
          .byte 0x1
          .byte 0x1f
          .byte 0x3
          .byte 0x1e
          .byte 0x5
          .byte 0x1d
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x1d
          .byte 0x3
          .byte 0x19
          .byte 0x5
          .byte 0x19
          .byte 0x5
          .byte 0x19
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x1
          .byte 0x10
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x5
          .byte 0x1d
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x1d
          .byte 0x3
          .byte 0x19
          .byte 0x5
          .byte 0x19
          .byte 0x5
          .byte 0x19
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1e
          .byte 0x3
          .byte 0x1d
          .byte 0x1
          .byte 0x1e
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x3
          .byte 0x1d
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447b40:
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x74
          .byte 0x73
          .byte 0x69
          .byte 0x64
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447b60:
          .byte 0x66
          .byte 0x68
          .byte 0x70
          .byte 0x72
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x66
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x66
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447b80:
          .long .L_41ce30-.L_447b80
          .long .L_41cea0-.L_447b80
          .long .L_41ce80-.L_447b80
          .long .L_41ce58-.L_447b80
          .long .L_41ce90-.L_447b80
          .zero 12
.L_447ba0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447c00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447c60:
          .byte 0xd
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447ca0:
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447d40:
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447da0:
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447e10:
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447e40:
          .long .L_41dbcc-.L_447e40
          .long .L_41e1a0-.L_447e40
          .long .L_41e194-.L_447e40
          .long .L_41dbcc-.L_447e40
          .long .L_41dbcc-.L_447e40
          .long .L_41e14c-.L_447e40
          .long .L_41e104-.L_447e40
          .long .L_41e0c0-.L_447e40
          .long .L_41e080-.L_447e40
          .long .L_41e038-.L_447e40
          .long .L_41dfe2-.L_447e40
          .long .L_41df9a-.L_447e40
          .long .L_41df52-.L_447e40
          .long .L_41df0a-.L_447e40
          .long .L_41dec6-.L_447e40
          .long .L_41de85-.L_447e40
          .long .L_41de2a-.L_447e40
          .zero 28
.L_447ea0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447f20:
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0xe
          .byte 0x0
          .byte 0x2
          .byte 0xf
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447f60:
          .byte 0x1
          .byte 0x1a
          .byte 0x2
          .byte 0x3
          .byte 0x1
          .byte 0x17
          .byte 0x1
          .byte 0x2b
          .byte 0x2c
          .byte 0x2e
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x27
          .byte 0x28
          .byte 0x29
          .byte 0x2d
          .byte 0x2a
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x4
          .byte 0x5
          .byte 0x16
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x6
          .byte 0x1
          .byte 0x1
          .byte 0x18
          .byte 0x19
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x1
          .byte 0x2f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447fa0:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x2
          .byte 0x5
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x6
          .byte 0x4
          .byte 0x4
          .byte 0x1
          .byte 0x7
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x2
          .byte 0x2
          .byte 0x8
          .byte 0x9
          .byte 0x4
          .byte 0x4
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x4
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x4
          .byte 0x1b
          .byte 0x1a
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x20
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x30
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x29
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1e
          .byte 0x31
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x29
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x25
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x27
          .byte 0x21
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x1c
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x1d
          .byte 0x1c
          .byte 0x1c
          .byte 0x1e
          .byte 0x1f
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x21
          .byte 0x28
          .byte 0x20
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x1c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x1c
          .byte 0x33
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x32
          .byte 0x34
          .byte 0x32
          .byte 0x5
          .byte 0x35
          .byte 0x33
          .byte 0x32
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x38
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x13
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x13
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xe
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x10
          .byte 0xa
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x36
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x1
          .byte 0x39
          .byte 0x3
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x3
          .byte 0x36
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x6
          .byte 0x36
          .byte 0x36
          .byte 0x1
          .byte 0x37
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0x36
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0xa
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x36
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x36
          .byte 0x3b
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3a
          .byte 0x3c
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4484a0:
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xf7
          .byte 0x1
          .byte 0x18
          .byte 0x2
          .byte 0x39
          .byte 0x2
          .byte 0x5a
          .byte 0x2
          .byte 0x7b
          .byte 0x2
          .byte 0x85
          .byte 0x2
          .byte 0x87
          .byte 0x2
          .byte 0x89
          .byte 0x2
          .byte 0xaa
          .byte 0x2
          .byte 0xcb
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0x21
          .byte 0x3
          .byte 0x35
          .byte 0x3
          .byte 0x49
          .byte 0x3
          .byte 0x6a
          .byte 0x3
          .byte 0x8b
          .byte 0x3
          .byte 0xac
          .byte 0x3
          .byte 0xcd
          .byte 0x3
          .byte 0xee
          .byte 0x3
          .byte 0xf
          .byte 0x4
          .byte 0x30
          .byte 0x4
          .byte 0x51
          .byte 0x4
          .byte 0x72
          .byte 0x4
          .byte 0x93
          .byte 0x4
          .byte 0x95
          .byte 0x4
          .byte 0xbd
          .byte 0x4
          .byte 0xde
          .byte 0x4
          .byte 0xf5
          .byte 0x4
          .byte 0xf8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448520:
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x20
          .byte 0x20
          .byte 0x1
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x13
          .byte 0x13
          .byte 0x13
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x1
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x13
          .byte 0x13
          .byte 0x13
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x1
          .byte 0x27
          .byte 0x20
          .byte 0x16
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448560:
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x15
          .byte 0x15
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0xd
          .byte 0x15
          .byte 0x4
          .byte 0x4
          .byte 0xd
          .byte 0xd
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x8
          .byte 0x27
          .byte 0x15
          .byte 0x2a
          .byte 0x29
          .byte 0x2a
          .byte 0x2a
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4485e0:
          .byte 0x73
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x6e
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x74
          .byte 0x73
          .byte 0x69
          .byte 0x64
          .byte 0x6d
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x6d
          .byte 0x77
          .byte 0x6c
          .byte 0x62
.L_448600:
          .byte 0x6c
          .byte 0x6f
          .byte 0x73
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x61
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x32
          .byte 0x64
          .byte 0x65
          .byte 0x6d
          .byte 0x32
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x33
          .byte 0x6e
          .byte 0x69
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448620:
          .byte 0x66
          .byte 0x72
          .byte 0x6b
          .byte 0x72
          .byte 0x66
          .byte 0x76
          .byte 0x62
          .byte 0x61
          .byte 0x66
          .byte 0x77
          .byte 0x6c
          .byte 0x62
          .byte 0x66
          .byte 0x6c
          .byte 0x61
          .byte 0x68
          .byte 0x66
          .byte 0x74
          .byte 0x73
          .byte 0x70
          .byte 0x75
          .byte 0x74
          .byte 0x61
          .byte 0x76
          .byte 0x74
          .byte 0x63
          .byte 0x6a
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448640:
          .long .L_41eac0-.L_448640
          .long .L_41eb00-.L_448640
          .long .L_41eb80-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ebd0-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ec20-.L_448640
          .long .L_41ebb0-.L_448640
          .long .L_41ec00-.L_448640
          .long .L_41ea40-.L_448640
          .zero 24
.L_4486a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x23
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x16
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x1f
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x12
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x23
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0xc
          .byte 0x21
          .byte 0x1d
          .byte 0x1e
          .byte 0x1c
          .byte 0x1c
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1c
          .byte 0x1c
          .byte 0x1c
          .byte 0x1
          .byte 0x23
          .byte 0x27
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1c
          .byte 0x23
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x27
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x27
          .byte 0x23
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x25
          .byte 0x27
          .byte 0x23
          .byte 0x25
          .byte 0x25
          .byte 0x8
          .byte 0x18
          .byte 0x1f
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x21
          .byte 0xc
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1a
          .byte 0x26
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x19
          .byte 0x21
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x22
          .byte 0x16
          .byte 0x23
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1e
          .byte 0x1c
          .byte 0x1a
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x19
          .byte 0x19
          .byte 0x19
          .byte 0x19
          .byte 0x0
          .byte 0xc
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x18
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1f
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2a
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x18
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x21
          .byte 0x22
          .byte 0x16
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0xc
          .byte 0xb
          .byte 0xb
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1f
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x21
          .byte 0x18
          .byte 0x18
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xb
          .byte 0xb
          .byte 0x23
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x17
          .byte 0x17
          .byte 0x8
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x25
          .byte 0x25
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x25
          .byte 0x27
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x27
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x21
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1a
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x26
          .byte 0x26
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x1a
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x18
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1f
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0xb
          .byte 0x1d
          .byte 0x1d
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x21
          .byte 0x16
          .byte 0x16
          .byte 0x21
          .byte 0x22
          .byte 0x1d
          .byte 0x1e
          .byte 0x1c
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x18
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x18
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x27
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x25
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x16
          .byte 0x22
          .byte 0x21
          .byte 0x16
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0xc
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x27
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x15
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x22
          .byte 0x26
          .byte 0x25
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x20
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x27
          .byte 0x25
          .byte 0x27
          .byte 0x12
          .byte 0x12
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0xc
          .byte 0x21
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x1
          .byte 0x12
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0xc
          .byte 0x1f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x20
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0xc
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x16
          .byte 0x16
          .byte 0x23
          .byte 0x16
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x16
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x23
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x23
          .byte 0x23
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x25
          .byte 0x27
          .byte 0x21
          .byte 0x16
          .byte 0x23
          .byte 0x22
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0xc
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1e
          .byte 0x1b
          .byte 0x23
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x16
          .byte 0x21
          .byte 0x22
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x23
          .byte 0x21
          .byte 0x21
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x0
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x21
          .byte 0x25
          .byte 0x25
          .byte 0x27
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x0
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0x22
          .byte 0x16
          .byte 0x22
          .byte 0x21
          .byte 0x23
          .byte 0x25
          .byte 0x25
          .byte 0x0
.L_449ab8:
          .long .L_423500-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423490-.L_449ab8
          .long .L_423510-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423520-.L_449ab8
          .long .L_423510-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423490-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423460-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_423409-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_4234f8-.L_449ab8
          .long .L_423460-.L_449ab8
.L_449cb8:
          .long .L_423d83-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d83-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d1f-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d1f-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d80-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d80-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d80-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d18-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d18-.L_449cb8
          .long .L_423c20-.L_449cb8
          .long .L_423d18-.L_449cb8
          .long .L_423d80-.L_449cb8
          .long .L_423d18-.L_449cb8
.L_449d44:
          .long .L_4245ac-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4245ac-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_42454f-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_42454f-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4245a9-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4245a9-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4245a9-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_424548-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_424548-.L_449d44
          .long .L_4243f8-.L_449d44
          .long .L_424548-.L_449d44
          .long .L_4245a9-.L_449d44
          .long .L_424548-.L_449d44
.L_449dd0:
          .long .L_424ee0-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424fc8-.L_449dd0
          .long .L_424fa0-.L_449dd0
          .long .L_424ee0-.L_449dd0
          .long .L_424f20-.L_449dd0
          .long .L_424ff8-.L_449dd0
          .long .L_424fe0-.L_449dd0
          .zero 24
.L_449e40:
          .string "void* hb_object_get_user_data(Type*, hb_user_data_key_t*) [with Type = hb_set_t; hb_user_data_key_t = hb_user_data_key_t]"
          .zero 6
.L_449ec0:
          .string "bool hb_object_set_user_data(Type*, hb_user_data_key_t*, void*, hb_destroy_func_t, hb_bool_t) [with Type = hb_set_t; hb_user_data_key_t = hb_user_data_key_t; hb_destroy_func_t = void (*)(void*); hb_bool_t = int]"
          .zero 12
.L_449fa0:
          .string "bool hb_object_destroy(Type*) [with Type = hb_set_t]"
          .zero 11
.L_449fe0:
          .string "Type* hb_object_reference(Type*) [with Type = hb_set_t]"
          .zero 8
.L_44a020:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c098:
          .string "hb-ot-layout-gpos-table.hh"
.L_44c0b3:
          .string "j < i"
.L_44c0b9:
          .string "end == match_positions[idx]"
          .zero 3
.L_44c0d8:
          .string "!!(type & ATTACH_TYPE_MARK) ^ !!(type & ATTACH_TYPE_CURSIVE)"
          .zero 3
.L_44c118:
          .string "hb-ot-layout-gsubgpos-private.hh"
.L_44c139:
          .string "num_items > 0"
          .zero 1
.L_44c148:
          .long .L_435890-.L_44c148
          .long .L_4358b8-.L_44c148
          .long .L_4358e0-.L_44c148
          .long .L_435900-.L_44c148
          .long .L_435928-.L_44c148
          .long .L_435950-.L_44c148
          .long .L_435b28-.L_44c148
          .long .L_435d08-.L_44c148
          .long .L_435870-.L_44c148
.L_44c16c:
          .long .L_436310-.L_44c16c
          .long .L_436318-.L_44c16c
          .long .L_4362a0-.L_44c16c
          .long .L_4362a0-.L_44c16c
          .long .L_436498-.L_44c16c
          .long .L_4363d8-.L_44c16c
          .long .L_4362e0-.L_44c16c
          .long .L_436370-.L_44c16c
          .long .L_4362a0-.L_44c16c
.L_44c190:
          .long .L_436a40-.L_44c190
          .long .L_436a50-.L_44c190
          .long .L_436af8-.L_44c190
          .long .L_436b20-.L_44c190
          .long .L_436b48-.L_44c190
          .long .L_436b70-.L_44c190
          .long .L_436b80-.L_44c190
          .long .L_436bc0-.L_44c190
          .long .L_436a20-.L_44c190
.L_44c1b4:
          .long .L_436fe0-.L_44c1b4
          .long .L_436ff0-.L_44c1b4
          .long .L_4370c8-.L_44c1b4
          .long .L_437100-.L_44c1b4
          .long .L_437130-.L_44c1b4
          .long .L_437160-.L_44c1b4
          .long .L_437190-.L_44c1b4
          .long .L_4371c0-.L_44c1b4
          .long .L_4371d8-.L_44c1b4
          .long .L_436fc0-.L_44c1b4
.L_44c1dc:
          .long .L_438990-.L_44c1dc
          .long .L_4389b8-.L_44c1dc
          .long .L_438ad8-.L_44c1dc
          .long .L_438c18-.L_44c1dc
          .long .L_438c40-.L_44c1dc
          .long .L_438c68-.L_44c1dc
          .long .L_438c78-.L_44c1dc
          .long .L_438c88-.L_44c1dc
          .long .L_438970-.L_44c1dc
.L_44c200:
          .long .L_438f50-.L_44c200
          .long .L_438fa8-.L_44c200
          .long .L_438ff8-.L_44c200
          .long .L_439100-.L_44c200
          .long .L_438ee8-.L_44c200
          .long .L_438ee8-.L_44c200
          .long .L_438ee8-.L_44c200
          .long .L_438f88-.L_44c200
          .long .L_438f68-.L_44c200
          .long .L_439120-.L_44c200
.L_44c228:
          .long .L_4396b0-.L_44c228
          .long .L_439d20-.L_44c228
          .long .L_439bc0-.L_44c228
          .long .L_439a60-.L_44c228
          .long .L_439850-.L_44c228
          .long .L_439830-.L_44c228
          .long .L_439810-.L_44c228
          .long .L_439760-.L_44c228
          .long .L_4396c0-.L_44c228
.L_44c24c:
          .long .L_43a900-.L_44c24c
          .long .L_43ad60-.L_44c24c
          .long .L_43ad00-.L_44c24c
          .long .L_43abf0-.L_44c24c
          .long .L_43a910-.L_44c24c
          .long .L_43a9b0-.L_44c24c
          .long .L_43a910-.L_44c24c
          .long .L_43ae90-.L_44c24c
          .long .L_43ae70-.L_44c24c
          .long .L_43ab40-.L_44c24c
.L_44c274:
          .long .L_43bb20-.L_44c274
          .long .L_43bb08-.L_44c274
          .long .L_43bb08-.L_44c274
          .long .L_43bad0-.L_44c274
          .long .L_43bad0-.L_44c274
          .long .L_43bad0-.L_44c274
          .long .L_43bad0-.L_44c274
          .long .L_43bb98-.L_44c274
          .long .L_43bb90-.L_44c274
          .long .L_43bb30-.L_44c274
.L_44c29c:
          .long .L_43be03-.L_44c29c
          .long .L_43be40-.L_44c29c
          .long .L_43be78-.L_44c29c
          .long .L_43beb8-.L_44c29c
          .long .L_43bef8-.L_44c29c
          .long .L_43bf38-.L_44c29c
          .long .L_43bf48-.L_44c29c
          .long .L_43bf58-.L_44c29c
          .long .L_43be10-.L_44c29c
.L_44c2c0:
          .long .L_43c003-.L_44c2c0
          .long .L_43c070-.L_44c2c0
          .long .L_43c0b8-.L_44c2c0
          .long .L_43c100-.L_44c2c0
          .long .L_43c140-.L_44c2c0
          .long .L_43c180-.L_44c2c0
          .long .L_43c1c0-.L_44c2c0
          .long .L_43c200-.L_44c2c0
          .long .L_43c210-.L_44c2c0
          .long .L_43c010-.L_44c2c0
.L_44c2e8:
          .string "start lookup %d"
.L_44c2f8:
          .string "hb-ot-layout.cc"
.L_44c308:
          .string "end lookup %d"
          .zero 2
.L_44c318:
          .string "!buffer->has_separate_output ()"
          .zero 8
.L_44c340:
          .long .L_42b350-.L_44c340
          .long .L_42b590-.L_44c340
          .long .L_42b550-.L_44c340
          .long .L_42b648-.L_44c340
          .long .L_42b510-.L_44c340
          .long .L_42b4b8-.L_44c340
          .long .L_42b368-.L_44c340
          .long .L_42b5e0-.L_44c340
          .long .L_42b338-.L_44c340
          .zero 28
.L_44c380:
          .string "void apply_string(OT::hb_apply_context_t*, const typename Proxy::Lookup&, const hb_ot_layout_lookup_accelerator_t&) [with Proxy = GPOSProxy; typename Proxy::Lookup = OT::PosLookup]"
          .zero 11
.L_44c440:
          .string "bool OT::hb_apply_context_t::skipping_iterator_t::prev()"
          .zero 7
.L_44c480:
          .string "bool OT::apply_lookup(OT::hb_apply_context_t*, unsigned int, unsigned int*, unsigned int, const OT::LookupRecord*, unsigned int)"
          .zero 31
.L_44c520:
          .string "bool OT::hb_apply_context_t::skipping_iterator_t::next()"
          .zero 7
.L_44c560:
          .string "void OT::propagate_attachment_offsets(hb_glyph_position_t*, unsigned int, hb_direction_t)"
          .zero 6
.L_44c5c0:
          .string "void OT::hb_sanitize_context_t::start_processing()"
          .zero 5
.L_44c5f8:
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c601:
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c608:
          .byte 0x42
          .byte 0x55
          .byte 0x53
          .byte 0x47
          .byte 0x53
          .byte 0x4f
          .byte 0x50
          .byte 0x47
.L_44c610:
          .byte 0x78
          .byte 0x2d
          .byte 0x68
          .byte 0x62
.L_44c614:
          .byte 0x6f
          .byte 0x74
          .byte 0x0
.L_44c617:
          .string "zh"
.L_44c61a:
          .string "zh-hk"
.L_44c620:
          .string "zh-Hans"
.L_44c628:
          .string "zh-Hant"
.L_44c630:
          .byte 0x75
          .byte 0x6e
          .byte 0x64
.L_44c633:
          .string "-fonnapa"
.L_44c63c:
          .byte 0x75
          .byte 0x6e
          .byte 0x64
.L_44c63f:
          .string "-fonipa"
          .zero 25
.L_44c660:
          .byte 0x7a
          .byte 0x68
          .byte 0x2d
          .byte 0x63
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x53
          .byte 0x48
          .byte 0x5a
          .byte 0x7a
          .byte 0x68
          .byte 0x2d
          .byte 0x68
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x48
          .byte 0x48
          .byte 0x5a
          .byte 0x7a
          .byte 0x68
          .byte 0x2d
          .byte 0x6d
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .string " HHZzh-sg"
          .zero 6
          .string " SHZzh-tw"
          .zero 6
          .string " THZzh-hans"
          .zero 4
          .string " SHZzh-hant-hk"
          .zero 1
          .string " HHZzh-hant-mo"
          .zero 1
          .string " HHZzh-hant"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x54
          .byte 0x48
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c700:
          .string "aa"
          .zero 1
.L_44c704:
          .string " RFAab"
          .zero 1
          .string " KBAabq"
          .string " ABAacf"
          .string " NAFach"
          .string " HCAacr"
          .string " RCAada"
          .string " GNDady"
          .string " YDAaf"
          .zero 1
          .string " KFAahg"
          .string " WGAaii"
          .string " AWSaio"
          .string " OIAaiw"
          .string " IRAak"
          .zero 1
          .string " IWTaka"
          .string " AKAalt"
          .string " TLAam"
          .zero 1
          .string " HMAamf"
          .string " NBHan"
          .zero 1
          .string " GRAang"
          .string " GNAar"
          .zero 1
          .string " ARAarb"
          .string " ARAarn"
          .string " PAMary"
          .string " ROMas"
          .zero 1
          .string " MSAast"
          .string " TSAath"
          .string " HTAatj"
          .string " RCRatv"
          .string " TLAav"
          .zero 1
          .string " RVAawa"
          .string " AWAay"
          .zero 1
          .string " MYAaz"
          .zero 1
          .string " EZAazb"
          .string " BZAazj"
          .string " EZAba"
          .zero 1
          .string " HSBbad"
          .string "0DABbai"
          .string " LMBbal"
          .string " ILBban"
          .string " NABbar"
          .string " RABbbc"
          .string " CBBbci"
          .string " UABbcl"
          .string " KIBbcq"
          .string " HCBbdy"
          .string " YDBbe"
          .zero 1
          .string " LEBbem"
          .string " MEBber"
          .string " REBbfq"
          .string " DABbft"
          .string " TLBbfu"
          .string " HALbfy"
          .string " GABbg"
          .zero 1
          .string " RGBbgc"
          .string " CGBbgq"
          .string " QGBbhb"
          .string " IHBbhk"
          .string " KIBbho"
          .string " OHBbi"
          .zero 1
          .string " SIBbik"
          .string " KIBbin"
          .string " ODEbjj"
          .string " JJBbjt"
          .string " NLBbla"
          .string " FKBble"
          .string " NLBblk"
          .string " KLBbln"
          .string " KIBbm"
          .zero 1
          .string " BMBbn"
          .zero 1
          .string " NEBbo"
          .zero 1
          .string " BITbpy"
          .string " YPBbqi"
          .string " CRLbr"
          .zero 1
          .string " ERBbra"
          .string " IRBbrh"
          .string " HRBbrx"
          .string " XRBbs"
          .zero 1
          .string " SOBbtb"
          .string " ITBbto"
          .string " KIBbts"
          .string " STBbug"
          .string " GUBbxr"
          .string " UBRbyn"
          .string " LIBca"
          .zero 1
          .string " TACcak"
          .string " KACcbk"
          .string " KBCce"
          .zero 1
          .string " EHCceb"
          .string " BECcgg"
          .string " GGCch"
          .zero 1
          .string " AHCchk"
          .string "0KHCcho"
          .string " OHCchp"
          .string " PHCchr"
          .string " RHCchy"
          .string " YHCckb"
          .string " RUKckt"
          .string " KHCcop"
          .string " POCcpp"
          .string " PPCcr"
          .zero 1
          .string " ERCcre"
          .string " RCYcrh"
          .string " TRCcrj"
          .string " RCEcrk"
          .string " RCWcrl"
          .string " RCEcrm"
          .string " RCMcrx"
          .string " RRCcs"
          .zero 1
          .string " YSCcsb"
          .string " BSCctg"
          .string " GTCcts"
          .string " KIBcu"
          .zero 1
          .string " LSCcuk"
          .string " KUCcv"
          .zero 1
          .string " UHCcwd"
          .string " RCDcy"
          .zero 1
          .string " LEWda"
          .zero 1
          .string " NADdap"
          .string " SINdar"
          .string " RADdax"
          .string " XADde"
          .zero 1
          .string " UEDdgo"
          .string " OGDdhd"
          .string " WAMdhg"
          .string " GHDdin"
          .string " KNDdiq"
          .string " QIDdje"
          .string " RJDdjr"
          .string "0RJDdng"
          .string " NUDdnj"
          .string " JNDdoi"
          .string " RGDdsb"
          .string " BSLduj"
          .string " JUDdv"
          .zero 1
          .string " VIDdyu"
          .string " LUJdz"
          .zero 1
          .string " NZDee"
          .zero 1
          .string " EWEefi"
          .string " IFEekk"
          .string " ITEel"
          .zero 1
          .string " LLEemk"
          .string " KNMen"
          .zero 1
          .string " GNEenf"
          .string " ENFenh"
          .string " ENTeo"
          .zero 1
          .string " OTNeot"
          .string " ITBes"
          .zero 1
          .string " PSEesu"
          .string " USEet"
          .zero 1
          .string " ITEeu"
          .zero 1
          .string " QUEeve"
          .string " NVEevn"
          .string " KVEfa"
          .zero 1
          .string " RAFfan"
          .string "0NAFfat"
          .string " TAFff"
          .zero 1
          .string " LUFfi"
          .zero 1
          .string " NIFfil"
          .string " LIPfj"
          .zero 1
          .string " IJFflm"
          .string " LAHfo"
          .zero 1
          .string " SOFfon"
          .string " NOFfr"
          .zero 1
          .string " ARFfrc"
          .string " CRFfrp"
          .string " PRFfuf"
          .string " ATFfur"
          .string " LRFfuv"
          .string " VUFfy"
          .zero 1
          .string " IRFga"
          .zero 1
          .string " IRIgaa"
          .string " DAGgag"
          .string " GAGgbm"
          .string " WAGgd"
          .zero 1
          .string " EAGgez"
          .string " ZEGggo"
          .string " NOGgih"
          .string " HIGgil"
          .string "0LIGgkp"
          .string " PKGgl"
          .zero 1
          .string " LAGgld"
          .string " NANgle"
          .string " TRIglk"
          .string " KLGgn"
          .zero 1
          .string " AUGgnn"
          .string " NNGgno"
          .string " NOGgog"
          .string " GOGgon"
          .string " NOGgrt"
          .string " ORGgru"
          .string " GOSgsw"
          .string " SLAgu"
          .zero 1
          .string " JUGguc"
          .string " CUGguf"
          .string " FUGguk"
          .string " ZMGguz"
          .string " ZUGgv"
          .zero 1
          .string " XNMha"
          .zero 1
          .string " UAHhar"
          .string " IRHhaw"
          .string " WAHhay"
          .string " YAHhaz"
          .string " ZAHhe"
          .zero 1
          .string " RWIhi"
          .zero 1
          .string " NIHhil"
          .string " LIHhmn"
          .string " NMHhnd"
          .string " DNHhne"
          .string " HHChno"
          .string " DNHho"
          .zero 1
          .string " OMHhoc"
          .string "  OHhoj"
          .string " RAHhr"
          .zero 1
          .string " VRHhsb"
          .string " BSUht"
          .zero 1
          .string " IAHhu"
          .zero 1
          .string " NUHhy"
          .zero 1
          .string " EYHhz"
          .zero 1
          .string " REHia"
          .zero 1
          .string " ANIiba"
          .string " ABIibb"
          .string " BBIid"
          .zero 1
          .string " DNIie"
          .zero 1
          .string " ELIig"
          .zero 1
          .string " OBIigb"
          .string " IBEii"
          .zero 1
          .string " MIYijc"
          .string " OJIijo"
          .string " OJIik"
          .zero 1
          .string " KPIilo"
          .string " OLIinh"
          .string " GNIio"
          .zero 1
          .string " ODIis"
          .zero 1
          .string " LSIit"
          .zero 1
          .string " ATIiu"
          .zero 1
          .string " UNIja"
          .zero 1
          .string " NAJjam"
          .string " MAJjbo"
          .string " OBJjv"
          .zero 1
          .string " VAJka"
          .zero 1
          .string " TAKkaa"
          .string " KRKkab"
          .string "0BAKkam"
          .string " BMKkar"
          .string " NRKkat"
          .string " EGKkbd"
          .string " BAKkde"
          .string " EDKkdr"
          .string " MRKkdt"
          .string " YUKkea"
          .string " AEKkek"
          .string " KEKkex"
          .string " NKKkfa"
          .string " DOKkfr"
          .string " CAKkfx"
          .string " LUKkfy"
          .string " NMKkg"
          .zero 1
          .string " NOKkha"
          .string " ISKkhb"
          .string " DBXkht"
          .string " NHKkhw"
          .string " WHKki"
          .zero 1
          .string " KIKkiu"
          .string " UIKkj"
          .zero 1
          .string " AUKkjd"
          .string " DJKkjh"
          .string " AHKkjp"
          .string " PJKkk"
          .zero 1
          .string " ZAKkl"
          .zero 1
          .string " NRGkln"
          .string " LAKkm"
          .zero 1
          .string " MHKkmb"
          .string " NBMkmw"
          .string " OMKkn"
          .zero 1
          .string " NAKknn"
          .string " KOKko"
          .zero 1
          .string " ROKkoi"
          .string " POKkok"
          .string " KOKkon"
          .string "0NOKkos"
          .string " SOKkpe"
          .string " LPKkpv"
          .string " ZOKkpy"
          .string " KYKkqy"
          .string " TRKkr"
          .zero 1
          .string " RNKkri"
          .string " IRKkrl"
          .string " LRKkru"
          .string " UUKks"
          .zero 1
          .string " HSKksh"
          .string "0HSKksw"
          .string " WSKktb"
          .string " BEKktu"
          .string " NOKku"
          .zero 1
          .string " RUKkum"
          .string " MUKkv"
          .zero 1
          .string " MOKkvd"
          .string " IUKkw"
          .zero 1
          .string " ROCkxc"
          .string " SMKkxu"
          .string " IUKky"
          .zero 1
          .string " RIKkyu"
          .string " UYKla"
          .zero 1
          .string " TALlad"
          .string " DUJlb"
          .zero 1
          .string " ZTLlbe"
          .string " KALlbj"
          .string " KDLlez"
          .string " ZELlg"
          .zero 1
          .string " GULli"
          .zero 1
          .string " MILlif"
          .string " BMLlij"
          .string " JILlis"
          .string " SILljp"
          .string " PJLlki"
          .string " IKLlld"
          .string " DALlmn"
          .string " MALlmo"
          .string " OMLln"
          .zero 1
          .string " NILlo"
          .zero 1
          .string " OALlom"
          .string " MOLlrc"
          .string " CRLlt"
          .zero 1
          .string " HTLlu"
          .zero 1
          .string " BULlua"
          .string " BULluo"
          .string " OULlus"
          .string " ZIMluy"
          .string " HULluz"
          .string " CRLlv"
          .zero 1
          .string " IVLlzz"
          .string " ZALmad"
          .string " DAMmag"
          .string " GAMmai"
          .string " HTMmak"
          .string " RKMmal"
          .string " LAMmam"
          .string " MAMman"
          .string " KNMmdc"
          .string " ELMmdf"
          .string " KOMmdr"
          .string " RDMmdy"
          .string " ELMmen"
          .string " EDMmer"
          .string " REMmfe"
          .string " EFMmg"
          .zero 1
          .string " GLMmh"
          .zero 1
          .string " HAMmhr"
          .string " AMLmi"
          .zero 1
          .string " IRMmin"
          .string " NIMmk"
          .zero 1
          .string " DKMmku"
          .string " KNMmkw"
          .string " WKMml"
          .zero 1
          .string " RLMmlq"
          .string " KNMmn"
          .zero 1
          .string " GNMmnc"
          .string " HCMmni"
          .string " INMmnk"
          .string " DNMmns"
          .string " NAMmnw"
          .string " NOMmo"
          .zero 1
          .string " LOMmoh"
          .string " HOMmos"
          .string " SOMmpe"
          .string " JAMmr"
          .zero 1
          .string " RAMmrj"
          .string " AMHms"
          .zero 1
          .string " YLMmsc"
          .string " KNMmt"
          .zero 1
          .string " STMmtr"
          .string " WAMmus"
          .string " SUMmve"
          .string " WAMmwk"
          .string " KNMmwl"
          .string " LWMmwr"
          .string " WAMmww"
          .string " WWMmy"
          .zero 1
          .string " MRBmym"
          .string " NEMmyn"
          .string " NYMmyq"
          .string " KNMmyv"
          .string " ZREmzn"
          .string " NZMna"
          .zero 1
          .string " UANnag"
          .string " GANnah"
          .string " HANnap"
          .string " PANnb"
          .zero 1
          .string " RONnco"
          .string " BISnd"
          .zero 1
          .string " BDNndc"
          .string " CDNnds"
          .string " SDNne"
          .zero 1
          .string " PENnew"
          .string " WENng"
          .zero 1
          .string " GDNnga"
          .string " AGNngl"
          .string " WMLngo"
          .string " TXSniu"
          .string " UINniv"
          .string " LIGnl"
          .zero 1
          .string " DLNnn"
          .zero 1
          .string " NYNno"
          .zero 1
          .string " RONnod"
          .string " ATNnoe"
          .string " EONnog"
          .string " GONnov"
          .string " VONnqo"
          .string " OKNnr"
          .zero 1
          .string " BDNnsk"
          .string " SANnso"
          .string " TOSnv"
          .zero 1
          .string " VANny"
          .zero 1
          .string " IHCnym"
          .string " MYNnyn"
          .string " LKNoc"
          .zero 1
          .string " ICOoj"
          .zero 1
          .string " BJOojs"
          .string " RCOokm"
          .string " HOKom"
          .zero 1
          .string " OROor"
          .zero 1
          .string " IROos"
          .zero 1
          .string " SSOpa"
          .zero 1
          .string " NAPpag"
          .string " GAPpam"
          .string " MAPpap"
          .string "0PAPpau"
          .string " UAPpcc"
          .string " CCPpcd"
          .string " DCPpce"
          .string " GLPpdc"
          .string " CDPpes"
          .string " RAFphk"
          .string " KHPpi"
          .zero 1
          .string " LAPpih"
          .string " HIPpl"
          .zero 1
          .string " KLPpll"
          .string " GLPplp"
          .string " PAPpms"
          .string " SMPpnb"
          .string " BNPpoh"
          .string " HOPpon"
          .string " NOPprs"
          .string " IRDps"
          .zero 1
          .string " SAPpt"
          .zero 1
          .string " GTPpwo"
          .string " OWPqu"
          .zero 1
          .string " ZUQquc"
          .string " CUQquh"
          .string " HUQquz"
          .string " ZUQqvi"
          .string " IVQqwh"
          .string " HWQraj"
          .string " JARrar"
          .string " RARrbb"
          .string " GLPrej"
          .string " JERria"
          .string " AIRrif"
          .string " FIRril"
          .string " AIRrit"
          .string " TIRrki"
          .string " KRArkw"
          .string " WKRrm"
          .zero 1
          .string " SMRrmy"
          .string " YMRrn"
          .zero 1
          .string " NURro"
          .zero 1
          .string " MORrom"
          .string " YORrtm"
          .string " MTRru"
          .zero 1
          .string " SURrue"
          .string " YSRrup"
          .string " PURrw"
          .zero 1
          .string " AURrwr"
          .string " WAMsa"
          .zero 1
          .string " NASsah"
          .string " KAYsam"
          .string " AAPsas"
          .string " SASsat"
          .string " TASsc"
          .zero 1
          .string " DRSsck"
          .string " DASscn"
          .string " NCSsco"
          .string " OCSscs"
          .string " ALSsd"
          .zero 1
          .string " DNSse"
          .zero 1
          .string " MSNseh"
          .string " ANSsel"
          .string " LESsg"
          .zero 1
          .string " OGSsga"
          .string " AGSsgs"
          .string " SGSsgw"
          .string " GHCshi"
          .string " IHSshn"
          .string " NHSsi"
          .zero 1
          .string " HNSsid"
          .string " DISsjd"
          .string " MSKsk"
          .zero 1
          .string " YKSskr"
          .string " KRSsl"
          .zero 1
          .string " VLSsm"
          .zero 1
          .string " OMSsma"
          .string " MSSsmj"
          .string " MSLsmn"
          .string " MSIsms"
          .string " SKSsn"
          .zero 1
          .string "0ANSsnk"
          .string " KNSso"
          .zero 1
          .string " LMSsop"
          .string " POSsq"
          .zero 1
          .string " IQSsr"
          .zero 1
          .string " BRSsrr"
          .string " RRSss"
          .zero 1
          .string " ZWSst"
          .zero 1
          .string " TOSstq"
          .string " QTSstv"
          .string " GISsu"
          .zero 1
          .string " NUSsuk"
          .string " KUSsuq"
          .string " RUSsv"
          .zero 1
          .string " EVSsva"
          .string " AVSsw"
          .zero 1
          .string " KWSswb"
          .string " RMCswh"
          .string " KWSswv"
          .string " WAMsxu"
          .string " UXSsyl"
          .string " LYSsyr"
          .string " RYSszl"
          .string " LZSta"
          .zero 1
          .string " MATtab"
          .string " BATtcy"
          .string " LUTtdd"
          .string " DDTte"
          .zero 1
          .string " LETtem"
          .string " NMTtet"
          .string " TETtg"
          .zero 1
          .string " JATth"
          .zero 1
          .string " AHTti"
          .zero 1
          .string " YGTtig"
          .string " RGTtiv"
          .string " VITtk"
          .zero 1
          .string " MKTtl"
          .zero 1
          .string " LGTtmh"
          .string " HMTtn"
          .zero 1
          .string " ANTto"
          .zero 1
          .string " NGTtod"
          .string "0DOTtoi"
          .string " GNTtpi"
          .string " IPTtr"
          .zero 1
          .string " KRTtru"
          .string " AUTts"
          .zero 1
          .string " GSTtt"
          .zero 1
          .string " TATtum"
          .string " MUTtvl"
          .string " LVTtw"
          .zero 1
          .string " IWTty"
          .zero 1
          .string " THTtyv"
          .string " VUTtyz"
          .string " ZYTtzm"
          .string " MZTtzo"
          .string " OZTudm"
          .string " MDUug"
          .zero 1
          .string " GYUuk"
          .zero 1
          .string " RKUumb"
          .string " BMUunr"
          .string " NUMur"
          .zero 1
          .string " DRUuz"
          .zero 1
          .string " BZUuzn"
          .string " BZUuzs"
          .string " BZUve"
          .zero 1
          .string " NEVvec"
          .string " CEVvi"
          .zero 1
          .string " TIVvls"
          .string " ELFvmw"
          .string " KAMvo"
          .zero 1
          .string " LOVvro"
          .string " ORVwa"
          .zero 1
          .string " NLWwar"
          .string " RAWwbm"
          .string "  AWwbr"
          .string " GAWwle"
          .string " GISwo"
          .zero 1
          .string " FLWwry"
          .string " WAMwtm"
          .string " MTWxal"
          .string " MLKxan"
          .string " KESxh"
          .zero 1
          .string " SHXxjb"
          .string " BJXxog"
          .string " GOXxom"
          .string " OMKxpe"
          .string " EPXxsl"
          .string " LSSxst"
          .string " GISxwo"
          .string " DOTyao"
          .string " OAYyap"
          .string " PAYyi"
          .zero 1
          .string " IIJyo"
          .zero 1
          .string " ABYyso"
          .string " SINza"
          .zero 1
          .string " AHZzea"
          .string " AEZzgh"
          .string " HGZzne"
          .string " DNZzu"
          .zero 1
          .string " LUZzum"
          .string " CRLzza"
          .byte 0x20
          .byte 0x41
          .byte 0x5a
          .byte 0x5a
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_656250:
          .quad .L_401750
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_656258:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_656260:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x68
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6563a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6571e0
          .byte 0xe8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x66
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_656460:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6565b8:
          .quad .L_407300
          .quad .L_407460
.L_6565c8:
          .quad .L_406f50
          .quad .L_406f90
.L_6565d8:
          .quad .L_407160
          .quad .L_4071b0
.L_6565e8:
          .quad .L_407630
          .quad .L_4076e0
.L_6565f8:
          .quad .L_407200
          .quad .L_407250
.L_656608:
          .quad .L_407530
          .quad .L_4070b0
.L_656618:
          .quad .L_407050
          .quad .L_407400
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4072a0
          .quad .L_4073e0
          .quad .L_406f40
          .quad .L_406f80
          .quad .L_406fc0
          .quad .L_406fd0
          .quad .L_406fe0
          .quad .L_407000
          .quad .L_407010
          .quad .L_4073d0
          .quad .L_4072c0
          .quad .L_407020
          .quad .L_407040
          .quad .L_407080
          .zero 24
.L_656820:
          .string "ot"
          .zero 13
.L_656830:
          .quad .L_4113b0
          .byte 0x66
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x62
          .byte 0x61
          .byte 0x63
          .byte 0x6b
.L_656840:
          .zero 8
          .quad .L_4250e0
          .zero 16
.L_656860:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40b9b0
          .quad .L_40b9c0
          .quad .L_40b9d0
          .quad .L_40b9e0
          .quad .L_40b9f0
          .quad .L_40ba00
          .quad .L_40ba10
          .quad .L_40ba20
          .zero 128
.L_6569a0:
          .string "arabic"
          .zero 1
          .quad .L_4130d0
          .zero 8
          .quad .L_412eb0
          .quad .L_413900
          .zero 8
          .quad .L_4133e0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414550
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_656a00:
          .string "hangul"
          .zero 1
          .quad .L_4160e0
          .quad .L_4160c0
          .quad .L_415ff0
          .quad .L_415fe0
          .quad .L_416130
          .zero 32
          .quad .L_415f30
          .zero 8
.L_656a60:
          .string "hebrew"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_416e70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_656ac0:
          .string "indic"
          .zero 2
          .quad .L_417190
          .quad .L_417120
          .quad .L_419b40
          .quad .L_417110
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41a0f0
          .quad .L_418710
          .quad .L_4187c0
          .zero 8
.L_656b20:
          .string "myanmar"
          .quad .L_41c090
          .quad .L_41c070
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ca10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_656b80:
          .string "thai"
          .zero 35
          .quad .L_41cef0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_656be0:
          .string "default"
          .quad .L_41d3d0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_656c40:
          .quad .L_657375
          .quad .L_41d870
          .zero 8
          .quad .L_41d700
          .quad .L_41d6e0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41e2d0
          .quad .L_41d670
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_656ca0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4256a0
          .quad .L_425680
          .quad .L_425670
          .quad .L_425650
          .quad .L_425630
          .quad .L_425620
          .quad .L_425610
          .quad .L_4255f0
          .zero 128
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 8
.L_6571c8:
          .zero 24
.L_6571e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_6572a0:
          .zero 8
.L_6572a8:
          .zero 8
.L_6572b0:
          .zero 8
.L_6572b8:
          .zero 8
.L_6572c0:
          .zero 181
.L_657375:
          .zero 83
.L_6573c8:
          .zero 8
.L_6573d0:
          .zero 8
.L_6573d8:
          .zero 8
.L_6573e0:
          .zero 32
.L_657400:
          .zero 288
.L_657520:
          .zero 288
.L_657640:
          .zero 288
.L_657760:
          .zero 264
#-----------------------------------
.align 8
.globl _end
.type _end, @notype
#-----------------------------------
_end:
#===================================
# end section .bss
#===================================
