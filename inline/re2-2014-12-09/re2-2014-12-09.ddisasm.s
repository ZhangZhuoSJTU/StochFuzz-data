#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_402824:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_43e1d8]
            call fopen@PLT

            test RAX,RAX
            je .L_4028a8

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_4028c8

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_4028b2

            mov RSI,RBP
            mov RDI,R12
            call .L_4029d0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_4028a2:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_4028a8:

            mov EDI,1
            call exit@PLT
.L_4028b2:

            lea RDI,QWORD PTR [RIP+.L_43e1e9]
            call puts@PLT

            mov EDI,3
            call exit@PLT
.L_4028c8:

            lea RDI,QWORD PTR [RIP+.L_43e1db]
            call puts@PLT

            mov EDI,2
            call exit@PLT
.L_4028de:

            nop
            nop
.L_402910:

            ret 
.L_402912:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402920:

            push RBP
            mov EAX,OFFSET .L_64a310
            cmp RAX,OFFSET .L_64a310
            mov RBP,RSP
            je .L_402948

            mov EAX,0
            test RAX,RAX
            je .L_402948

            pop RBP
            mov EDI,OFFSET .L_64a310
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402948:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402950:

            mov ESI,OFFSET .L_64a310
            push RBP
            sub RSI,OFFSET .L_64a310
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_402988

            mov EAX,0
            test RAX,RAX
            je .L_402988

            pop RBP
            mov EDI,OFFSET .L_64a310
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402988:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4029c0:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_402950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4029d0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,304
.L_4029df:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSI-3]
            cmp RAX,61
            ja .L_402b53

            movzx EAX,BYTE PTR [RDI+1]
            mov R12,RDI
            mov DWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+24],8388608
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov BYTE PTR [RSP+22],0
            test AL,1
            je .L_402a38

            mov DWORD PTR [RSP+16],2
.L_402a38:

            mov EDX,EAX
            lea RBX,QWORD PTR [RSP+48]
            lea R14,QWORD PTR [R12+2]
            shr DL,1
            and EDX,1
            mov BYTE PTR [RSP+20],DL
            mov EDX,EAX
            shr DL,2
            and EDX,1
            mov BYTE PTR [RSP+21],DL
            mov EDX,EAX
            shr DL,3
            and EDX,1
            mov BYTE PTR [RSP+32],DL
            mov EDX,EAX
            shr DL,4
            and EDX,1
            mov BYTE PTR [RSP+33],DL
            mov EDX,EAX
            shr DL,5
            and EDX,1
            mov BYTE PTR [RSP+34],DL
            mov EDX,EAX
            shr AL,7
            mov BYTE PTR [RSP+36],AL
            lea RAX,QWORD PTR [RBX+16]
            shr DL,6
            and EDX,1
            mov QWORD PTR [RSP+48],RAX
            mov RAX,R12
            mov BYTE PTR [RSP+35],DL
            add RAX,RSI
            je .L_402aaa

            test R14,R14
            je .L_402c3c
.L_402aaa:

            lea RBP,QWORD PTR [RSI-2]
            cmp RBP,15
            mov QWORD PTR [RSP],RBP
            jg .L_402b80

            cmp RBP,1
            jne .L_402c78

            movzx EAX,BYTE PTR [R12+2]
            mov R13,RSP
            mov BYTE PTR [RSP+64],AL
.L_402ad3:

            mov RAX,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+48]
            lea RBP,QWORD PTR [RSP+80]
            mov RSI,R13
            mov RDI,RBP
            mov QWORD PTR [RSP+56],RAX
            mov BYTE PTR [RDX+RAX*1],0
            lea RDX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+8],EAX
.L_402b07:

            call .L_406f90
.L_402b0c:

            mov EAX,DWORD PTR [RSP+232]
            test EAX,EAX
            jne .L_402b38

            mov RAX,QWORD PTR [RSP+48]
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+8],EAX
.L_402b33:

            call .L_40b540
.L_402b38:

            mov RDI,RBP
            add RBX,16
            call .L_40bc10

            mov RDI,QWORD PTR [RSP+48]
            cmp RDI,RBX
            je .L_402b53

            call _ZdlPv@PLT
.L_402b53:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            jne .L_402c48

            add RSP,304
.L_402b73:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402b80:

            mov R13,RSP
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,R13
.L_402b8b:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDX
.L_402b9e:

            cmp EBP,8
            jae .L_402bd8

            test BPL,4
            jne .L_402c25

            test EBP,EBP
            je .L_402ad3

            movzx EDX,BYTE PTR [R12+2]
            test BPL,2
            mov BYTE PTR [RAX],DL
            je .L_402ad3

            mov ESI,EBP
            movzx EDX,WORD PTR [R14+RSI*1-2]
            mov WORD PTR [RAX+RSI*1-2],DX
            jmp .L_402ad3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402bd8:

            mov RDX,QWORD PTR [R12+2]
            mov QWORD PTR [RAX],RDX
            mov EDX,EBP
            mov RCX,QWORD PTR [R14+RDX*1-8]
            mov QWORD PTR [RAX+RDX*1-8],RCX
            lea RDX,QWORD PTR [RAX+8]
            and RDX,-8
            sub RAX,RDX
            lea ESI,DWORD PTR [RBP+RAX*1]
            sub R14,RAX
            and ESI,4294967288
            cmp ESI,8
            jb .L_402ad3

            and ESI,4294967288
            xor EAX,EAX
.L_402c0f:

            mov ECX,EAX
            add EAX,8
            mov RDI,QWORD PTR [R14+RCX*1]
            cmp EAX,ESI
            mov QWORD PTR [RDX+RCX*1],RDI
            jb .L_402c0f

            jmp .L_402ad3
.L_402c25:

            mov EDX,DWORD PTR [R12+2]
            mov ESI,EBP
            mov DWORD PTR [RAX],EDX
            mov EDX,DWORD PTR [R14+RSI*1-4]
            mov DWORD PTR [RAX+RSI*1-4],EDX
            jmp .L_402ad3
.L_402c3c:

            lea RDI,QWORD PTR [RIP+.L_43e1a8]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_402c48:

            call __stack_chk_fail@PLT
.L_402c4d:

            mov R12,RAX
.L_402c50:

            mov RDI,QWORD PTR [RSP+48]
            add RBX,16
            cmp RDI,RBX
            je .L_402c63

            call _ZdlPv@PLT
.L_402c63:

            mov RDI,R12
            call _Unwind_Resume@PLT
.L_402c6b:

            mov RDI,RBP
            mov R12,RAX
            call .L_40bc10

            jmp .L_402c50
.L_402c78:

            lea RAX,QWORD PTR [RBX+16]
            mov R13,RSP
            jmp .L_402b9e
.L_402c84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402c90:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_40bd7c]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_402ca5:

            mov EBX,DWORD PTR [RCX]
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+8],R8D
            test EBX,EBX
            jle .L_402d66

            mov R14,RDI
            movsx EDI,BYTE PTR [RDX]
            mov RBP,RDX
            mov R13,RCX
            mov R12D,EDI
            call isspace@PLT

            test EAX,EAX
            jne .L_402d80
.L_402cd4:

            cmp R12B,45
            je .L_402dd0

            cmp EBX,2
            jle .L_402d49

            cmp R12B,48
            jne .L_402d90

            cmp BYTE PTR [RBP+1],48
            jne .L_402d90

            xor EAX,EAX
.L_402cf9:

            lea EDX,DWORD PTR [RBX-3]
            mov RSI,RBP
            lea RDX,QWORD PTR [RBP+RDX*1+1]
            nop
            nop
            nop
            nop
.L_402d08:

            cmp BYTE PTR [RSI+2],48
            jne .L_402da0

            add RSI,1
            sub EBX,1
            cmp RSI,RDX
            jne .L_402d08

            test AL,AL
            je .L_402df5

            mov EBX,3
            jmp .L_402db4
.L_402d30:

            movsx EDI,BYTE PTR [RBP]
            mov R12D,EDI
            call isspace@PLT

            test EAX,EAX
            je .L_402cd4
.L_402d40:

            add RBP,1
            sub EBX,1
            jne .L_402d30
.L_402d49:

            movsxd R12,EBX
            mov RSI,RBP
            mov RDI,R14
            mov RDX,R12
            call memmove@PLT
.L_402d5a:

            mov BYTE PTR [R14+R12*1],0
            mov R15,R14
            mov DWORD PTR [R13],EBX
.L_402d66:

            add RSP,24
.L_402d6a:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402d80:

            mov R8D,DWORD PTR [RSP+8]
            test R8B,R8B
            jne .L_402d40

            jmp .L_402d66
.L_402d8c:

            mov RBP,RSI
            nop
.L_402d90:

            cmp EBX,DWORD PTR [RSP+12]
            jl .L_402d49

            lea R15,QWORD PTR [RIP+.L_40bd7c]
            jmp .L_402d66
          .byte 0x90
.L_402da0:

            test AL,AL
            je .L_402d8c
.L_402da4:

            add EBX,1
            cmp EBX,DWORD PTR [RSP+12]
            lea R15,QWORD PTR [RIP+.L_40bd7c]
            jge .L_402d66
.L_402db4:

            movsxd R12,EBX
            sub RSI,1
            mov RDI,R14
            mov RDX,R12
            call memmove@PLT

            mov BYTE PTR [R14],45
            jmp .L_402d5a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402dd0:

            sub EBX,1
            lea RSI,QWORD PTR [RBP+1]
            cmp EBX,2
            jle .L_402da4

            cmp BYTE PTR [RBP+1],48
            jne .L_402da4

            cmp BYTE PTR [RBP+2],48
            jne .L_402da4

            mov RBP,RSI
            mov EAX,1
            jmp .L_402cf9
.L_402df5:

            mov RBP,RSI
            mov EBX,2
            jmp .L_402d90
.L_402dff:

            nop
.L_402e00:

            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,264
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RDX
            xor EDX,EDX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_402e58
.L_402e2a:

            xor EAX,EAX
.L_402e2c:

            mov RBX,QWORD PTR [RSP+248]
            xor RBX,QWORD PTR FS:[40]
            jne .L_402f05

            add RSP,264
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402e58:

            lea RAX,QWORD PTR [RSP+32]
            mov R12,RCX
            lea RCX,QWORD PTR [RSP+12]
            mov RDX,RDI
            mov ESI,201
            mov R8D,1
            mov RDI,RAX
            call .L_402c90

            mov RBX,RAX
            call __errno_location@PLT

            test BPL,BPL
            mov R13,RAX
            mov DWORD PTR [RAX],0
            lea RSI,QWORD PTR [RSP+24]
            mov RDI,RBX
            jne .L_402ee0

            call strtod@PLT
.L_402e9e:

            movsxd RAX,DWORD PTR [RSP+12]
            add RBX,RAX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_402e2a

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_402e2a

            test R12,R12
            mov EAX,1
            je .L_402e2c

            test BPL,BPL
            jne .L_402ef0

            movsd QWORD PTR [R12],XMM0
            jmp .L_402e2c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ee0:

            call strtof@PLT

            cvtss2sd XMM0,XMM0
            jmp .L_402e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ef0:

            pxor XMM1,XMM1
            mov EAX,EBP
            cvtsd2ss XMM1,XMM0
            movss DWORD PTR [R12],XMM1
            jmp .L_402e2c
.L_402f05:

            call __stack_chk_fail@PLT
.L_402f0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402f10:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_402f1e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_402f3c

            test RDX,RDX
            jne .L_402fc7
.L_402f3c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_402f90

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_402fc0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_402f64:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402fd3

            add RSP,16
.L_402f84:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402f90:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_402fa9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_402f64
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402fc0:

            test RBX,RBX
            je .L_402f64

            jmp .L_402fa9
.L_402fc7:

            lea RDI,QWORD PTR [RIP+.L_40bfa0]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_402fd3:

            call __stack_chk_fail@PLT
.L_402fd8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402fe0:

            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,56
.L_402fec:

            movsxd RDX,DWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp EDX,99
            jle .L_4030c0

            xor ESI,ESI
            mov RBP,RSP
            mov EDX,100
.L_403013:

            call .L_414d90

            lea RCX,QWORD PTR [RBP+16]
            movsxd RDX,EDX
            mov RSI,RAX
            add RDX,RAX
            mov RDI,RBP
            mov QWORD PTR [RSP],RCX
            call .L_402f10
.L_403031:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RSP+8]
            cmp RAX,2
            jbe .L_4030f0

            lea RSI,QWORD PTR [RIP+.L_40bd92]
            mov EDX,3
            mov RDI,RBP
.L_403059:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_40305e:

            lea RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RDX
            mov RCX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RAX+16]
            cmp RCX,RDX
            je .L_4030e0

            mov QWORD PTR [RBX],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RCX
.L_40307c:

            mov RCX,QWORD PTR [RAX+8]
            add RBP,16
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RAX],RDX
            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            cmp RDI,RBP
            je .L_4030a5

            call _ZdlPv@PLT
.L_4030a5:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4030eb

            add RSP,56
.L_4030bc:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4030c0:

            mov RSI,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RBX+16]
            mov RDI,RBX
            mov QWORD PTR [RBX],RAX
            add RDX,RSI
.L_4030d0:

            call .L_402f10
.L_4030d5:

            jmp .L_4030a5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4030e0:

            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_40307c
.L_4030eb:

            call __stack_chk_fail@PLT
.L_4030f0:

            lea RDI,QWORD PTR [RIP+.L_40bd7d]
.L_4030f7:

            call _ZSt20__throw_length_errorPKc@PLT
.L_4030fc:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_403111

            call _ZdlPv@PLT
.L_403111:

            mov RDI,RBX
.L_403114:

            call _Unwind_Resume@PLT
.L_403119:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403120:

            xor EAX,EAX
            cmp ESI,1
            mov QWORD PTR [RDI+8],8388608
            sete AL
            mov BYTE PTR [RDI+16],0
            mov BYTE PTR [RDI+17],0
            add EAX,1
            cmp ESI,2
            mov BYTE PTR [RDI+18],0
            mov DWORD PTR [RDI],EAX
            sete AL
            cmp ESI,3
            mov BYTE PTR [RDI+4],AL
            mov BYTE PTR [RDI+5],AL
            setne BYTE PTR [RDI+6]
            mov BYTE PTR [RDI+19],0
            mov BYTE PTR [RDI+20],1
            mov BYTE PTR [RDI+21],0
            mov BYTE PTR [RDI+22],0
            mov BYTE PTR [RDI+23],0
            ret 
.L_403169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403170:

            mov RAX,QWORD PTR [RDI+120]
            test RAX,RAX
            je .L_40317d

            mov EAX,DWORD PTR [RAX+12]
            ret 
.L_40317d:

            mov EAX,4294967295
            ret 
.L_403183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403190:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_403199:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_403228

            mov EAX,DWORD PTR [RBX+152]
            mov RBP,QWORD PTR [RIP+.L_64a350]
            test EAX,EAX
            jne .L_4031d6

            mov RBP,QWORD PTR [RBX+200]
            test RBP,RBP
            je .L_403200
.L_4031d6:

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_403228

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_40322d

            add RSP,24
.L_4031fa:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403200:

            mov RDI,QWORD PTR [RBX+112]
.L_403204:

            call .L_4103e0
.L_403209:

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [RBX+200],RAX
            jne .L_4031d6

            mov RBP,QWORD PTR [RIP+.L_64a350]
            mov QWORD PTR [RBX+200],RBP
            jmp .L_4031d6
.L_403228:

            call abort@PLT
.L_40322d:

            call __stack_chk_fail@PLT
.L_403232:

            mov RBX,RAX
            mov RDI,RSP
            call .L_40c4d0

            mov RDI,RBX
.L_403240:

            call _Unwind_Resume@PLT
.L_403245:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403250:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_403259:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_4032e8

            mov EAX,DWORD PTR [RBX+152]
            mov RBP,QWORD PTR [RIP+.L_64a348]
            test EAX,EAX
            jne .L_403296

            mov RBP,QWORD PTR [RBX+208]
            test RBP,RBP
            je .L_4032c0
.L_403296:

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_4032e8

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4032ed

            add RSP,24
.L_4032ba:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4032c0:

            mov RDI,QWORD PTR [RBX+112]
.L_4032c4:

            call .L_410490
.L_4032c9:

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [RBX+208],RAX
            jne .L_403296

            mov RBP,QWORD PTR [RIP+.L_64a348]
            mov QWORD PTR [RBX+208],RBP
            jmp .L_403296
.L_4032e8:

            call abort@PLT
.L_4032ed:

            call __stack_chk_fail@PLT
.L_4032f2:

            mov RBX,RAX
            mov RDI,RSP
            call .L_40c4d0

            mov RDI,RBX
.L_403300:

            call _Unwind_Resume@PLT
.L_403305:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403310:

            movsxd RSI,DWORD PTR [RDI+8]
            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            add RSI,RDX
            cmp RSI,RDX
            ja .L_403330

            jmp .L_403368
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403328:

            cmp RSI,RCX
            mov RDX,RCX
            jbe .L_40335e
.L_403330:

            cmp BYTE PTR [RDX],92
            lea RCX,QWORD PTR [RDX+1]
            jne .L_403328

            cmp RCX,RSI
            lea RDI,QWORD PTR [RDX+2]
            jae .L_403360

            movsx EDX,BYTE PTR [RDX+1]
            sub EDX,48
            cmp EDX,9
            ja .L_403360

            cmp EAX,EDX
            mov RCX,RDI
            cmovl EAX,EDX
            cmp RSI,RCX
            mov RDX,RCX
            ja .L_403330
.L_40335e:

            ret 
.L_403360:

            mov RCX,RDI
            jmp .L_403328
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403368:

            ret 
.L_40336a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403370:

            push R15
            push R14
            lea RAX,QWORD PTR [RDI+16]
            push R13
            push R12
            mov R15,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_403388:

            mov QWORD PTR [RDI],RAX
            mov BYTE PTR [RDI+16],0
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov QWORD PTR [RDI+8],0
            lea ESI,DWORD PTR [RAX+RAX*1]
            movsxd RSI,ESI
.L_4033a5:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@PLT

            mov EAX,DWORD PTR [R15+8]
            test EAX,EAX
            jle .L_4034b0

            xor R12D,R12D
            jmp .L_40341b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4033c0:

            cmp BPL,122
            jle .L_4033d8
.L_4033c6:

            cmp BPL,95
            je .L_4033d8

            cmp BPL,57
            jg .L_403442

            nop
            nop
            nop
            nop
            nop
            nop
.L_4033d8:

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+8],RAX
            lea R13,QWORD PTR [R14+1]
            mov EDX,15
            je .L_4033ef

            mov RDX,QWORD PTR [RBX+16]
.L_4033ef:

            cmp R13,RDX
            ja .L_403490
.L_4033f8:

            mov BYTE PTR [RAX+R14*1],BPL
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],R13
            mov BYTE PTR [RAX+R13*1],0
.L_403408:

            lea EAX,DWORD PTR [R12+1]
            add R12,1
            cmp DWORD PTR [R15+8],EAX
            jle .L_4034b0
.L_40341b:

            mov RAX,QWORD PTR [R15]
            mov R14,QWORD PTR [RBX+8]
            movzx EBP,BYTE PTR [RAX+R12*1]
            cmp BPL,96
            jg .L_4033c0

            cmp BPL,64
            jg .L_4034c8

            cmp BPL,47
            jg .L_4033c6

            test BPL,BPL
            js .L_4033d8
.L_403442:

            test BPL,BPL
            je .L_403500

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+8],RAX
            lea RBP,QWORD PTR [R14+1]
            mov EDX,15
            je .L_403462

            mov RDX,QWORD PTR [RBX+16]
.L_403462:

            cmp RBP,RDX
            ja .L_4034e0
.L_403467:

            mov BYTE PTR [RAX+R14*1],92
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R15]
            mov R14,QWORD PTR [RBX+8]
            movzx EBP,BYTE PTR [RAX+R12*1]
            jmp .L_4033d8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403490:

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R14
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RAX,QWORD PTR [RBX]
            jmp .L_4033f8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4034b0:

            add RSP,24
.L_4034b4:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4034c8:

            cmp BPL,90
            jle .L_4033d8

            jmp .L_4033c6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4034e0:

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R14
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RAX,QWORD PTR [RBX]
            jmp .L_403467
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403500:

            movabs RAX,9223372036854775807
            sub RAX,R14
            cmp RAX,3
            jbe .L_40352c

            lea RSI,QWORD PTR [RIP+.L_40bd96]
            mov EDX,4
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_403408
.L_40352c:

            lea RDI,QWORD PTR [RIP+.L_40bd7d]
            call _ZSt20__throw_length_errorPKc@PLT
.L_403538:

            mov RDI,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+8],RDI
            mov RBP,RAX
            je .L_40354a

            call _ZdlPv@PLT
.L_40354a:

            mov RDI,RBP
.L_40354d:

            call _Unwind_Resume@PLT
.L_403552:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403560:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,296
.L_403571:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI+120],0
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            je .L_4039d8

            mov RDX,QWORD PTR [RDI+72]
            lea R15,QWORD PTR [RSP+48]
            mov EBX,ECX
            lea R14,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+112]
            mov RSI,QWORD PTR [RDI+64]
            lea RAX,QWORD PTR [R15+16]
            mov RBP,RDI
            mov R13D,ECX
            cmp EDX,ECX
            mov RDI,R12
            mov QWORD PTR [RSP+56],0
            cmovle EBX,EDX
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [R14+16]
            mov DWORD PTR [RSP+12],EBX
            movsxd RBX,EBX
            mov BYTE PTR [RSP+64],0
            cmp RBX,RDX
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [R12+16]
            cmovbe RDX,RBX
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RSP+96],0
            add RDX,RSI
            mov QWORD PTR [RSP+112],RAX
.L_403609:

            call .L_402f10

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_403a20

            lea RCX,QWORD PTR [R15+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_403a58

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_403a67

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_40366a:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R12
            je .L_403689

            call _ZdlPv@PLT
.L_403689:

            mov RDX,QWORD PTR [RBP+72]
            lea R12,QWORD PTR [RSP+144]
            mov RSI,QWORD PTR [RBP+64]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            cmp RBX,RDX
            cmovbe RDX,RBX
            mov QWORD PTR [RSP+144],RAX
            add RDX,RSI
            call .L_402f10
.L_4036b8:

            mov RSI,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RSP+152]
            cmp RSI,RAX
            je .L_4039e0

            lea RCX,QWORD PTR [R14+16]
            mov RAX,QWORD PTR [RSP+160]
            cmp RDI,RCX
            je .L_403aa0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
            je .L_403aaf

            mov QWORD PTR [RSP+144],RDI
            mov QWORD PTR [RSP+160],RCX
.L_40371d:

            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+144]
            cmp RDI,R12
            je .L_403742

            call _ZdlPv@PLT
.L_403742:

            cmp BYTE PTR [RBP+96],0
            je .L_403790

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            jle .L_403790

            lea EDI,DWORD PTR [RAX-1]
            xor EAX,EAX
            add RDI,1
            jmp .L_403769
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403760:

            add RAX,1
            cmp RAX,RDI
            je .L_403790
.L_403769:

            mov RCX,QWORD PTR [RSP+48]
            add RCX,RAX
            movzx EDX,BYTE PTR [RCX]
            lea ESI,DWORD PTR [RDX-97]
            cmp SIL,25
            ja .L_403760

            add RAX,1
            sub EDX,32
            cmp RAX,RDI
            mov BYTE PTR [RCX],DL
            jne .L_403769

            nop
            nop
            nop
            nop
            nop
.L_403790:

            lea R12,QWORD PTR [RSP+176]
            sub R13D,DWORD PTR [RSP+12]
            lea RBX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RSP+192],0
            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBX+16]
            test R13D,R13D
            mov QWORD PTR [RSP+208],RAX
            jg .L_4038d0
.L_4037ef:

            mov RAX,QWORD PTR [RSP+88]
            test RAX,RAX
            je .L_403920

            mov RDX,QWORD PTR [RSP+80]
            lea RBP,QWORD PTR [RSP+240]
            lea RSI,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+40],EAX
            mov RDI,RBP
            mov QWORD PTR [RSP+32],RDX
.L_40381b:

            call .L_415a60

            mov RSI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RSP+248]
            cmp RSI,RAX
            je .L_403ac8

            lea RCX,QWORD PTR [R14+16]
            mov RAX,QWORD PTR [RSP+256]
            cmp RDI,RCX
            je .L_403a80

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
            je .L_403a8f

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_403884:

            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+240]
            cmp RDI,RBP
            je .L_4038a9

            call _ZdlPv@PLT
.L_4038a9:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            mov EBP,1
            jmp .L_403956
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4038d0:

            mov RDI,QWORD PTR [RBP+120]
            mov ECX,R13D
            mov RDX,RBX
            mov RSI,R12
            call .L_422fb0

            test AL,AL
            je .L_4037ef

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+176]
            mov RDI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RDX,QWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov RDI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4038a9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403920:

            mov RDI,QWORD PTR [RSP+16]
            lea RCX,QWORD PTR [RIP+.L_40bd7c]
            xor R8D,R8D
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+8]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            mov RDI,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RIP+.L_40bd7c]
            xor R8D,R8D
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+8]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_403954:

            xor EBP,EBP
.L_403956:

            mov RDI,QWORD PTR [RSP+208]
            add RBX,16
            cmp RDI,RBX
            je .L_40396c

            call _ZdlPv@PLT
.L_40396c:

            mov RDI,QWORD PTR [RSP+176]
            add R12,16
            cmp RDI,R12
            je .L_403982

            call _ZdlPv@PLT
.L_403982:

            mov RDI,QWORD PTR [RSP+80]
            add R14,16
            cmp RDI,R14
            je .L_403995

            call _ZdlPv@PLT
.L_403995:

            mov RDI,QWORD PTR [RSP+48]
            add R15,16
            cmp RDI,R15
            je .L_4039a8

            call _ZdlPv@PLT
.L_4039a8:

            mov RBX,QWORD PTR [RSP+280]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_403b54

            add RSP,296
.L_4039c8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4039d8:

            xor EBP,EBP
            jmp .L_4039a8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4039e0:

            test RDX,RDX
            je .L_403a08

            cmp RDX,1
            je .L_403b20

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+80]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403a08:

            mov QWORD PTR [RSP+88],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_40371d
          .byte 0x66
          .byte 0x90
.L_403a20:

            test RDX,RDX
            je .L_403a40

            cmp RDX,1
            je .L_403b00

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
.L_403a40:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_40366a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a58:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_403a67:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_40366a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403a80:

            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
.L_403a8f:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+240],RDI
            jmp .L_403884
.L_403aa0:

            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+88],RDX
            mov QWORD PTR [RSP+96],RAX
.L_403aaf:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+144],RDI
            jmp .L_40371d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403ac8:

            test RDX,RDX
            je .L_403aea

            cmp RDX,1
            jne .L_403b40

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+80]
.L_403aea:

            mov QWORD PTR [RSP+88],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+240]
            jmp .L_403884
.L_403b00:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_403a40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b20:

            movzx EAX,BYTE PTR [RSP+160]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_403a08
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403b40:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_403aea
.L_403b54:

            call __stack_chk_fail@PLT
.L_403b59:

            mov RBP,RAX
.L_403b5c:

            mov RDI,QWORD PTR [RSP+80]
            add R14,16
            cmp RDI,R14
            je .L_403b6f

            call _ZdlPv@PLT
.L_403b6f:

            mov RDI,QWORD PTR [RSP+48]
            add R15,16
            cmp RDI,R15
            je .L_403b82

            call _ZdlPv@PLT
.L_403b82:

            mov RDI,RBP
.L_403b85:

            call _Unwind_Resume@PLT
.L_403b8a:

            mov RDI,QWORD PTR [RSP+208]
            add RBX,16
            mov RBP,RAX
            cmp RDI,RBX
            je .L_403ba3

            call _ZdlPv@PLT
.L_403ba3:

            mov RDI,QWORD PTR [RSP+176]
            add R12,16
            cmp RDI,R12
            je .L_403b5c

            call _ZdlPv@PLT

            jmp .L_403b5c
.L_403bbb:

            nop
            nop
            nop
            nop
            nop
.L_403bc0:

            cmp QWORD PTR [RDI+112],0
            je .L_403bf0

            mov EAX,DWORD PTR [RDI+192]
            cmp EAX,-1
            je .L_403bd8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403bd8:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+112]
            call .L_410340

            mov DWORD PTR [RBX+192],EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403bf0:

            mov EAX,4294967295
            ret 
.L_403bf6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c00:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_403c07:

            mov RAX,QWORD PTR [RSI]
            mov RBP,RDX
            movsxd RSI,DWORD PTR [RSI+8]
            mov EBX,4294967295
            add RSI,RAX
            cmp RSI,RAX
            jbe .L_403c54

            nop
            nop
.L_403c20:

            cmp BYTE PTR [RAX],92
            lea RCX,QWORD PTR [RAX+1]
            jne .L_403c4c

            cmp RCX,RSI
            je .L_403c70

            movsx ECX,BYTE PTR [RAX+1]
            cmp ECX,92
            je .L_403c48

            sub ECX,48
            cmp ECX,9
            ja .L_403cc0

            cmp EBX,ECX
            cmovl EBX,ECX
.L_403c48:

            lea RCX,QWORD PTR [RAX+2]
.L_403c4c:

            cmp RSI,RCX
            mov RAX,RCX
            ja .L_403c20
.L_403c54:

            mov RDI,R12
            call .L_403bc0

            mov EDX,EAX
            mov EAX,1
            cmp EDX,EBX
            jl .L_403c98

            pop RBX
.L_403c68:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403c70:

            mov RDX,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RIP+.L_40bfd0]
            mov RDI,RBP
            mov R8D,45
            xor ESI,ESI
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403c98:

            mov RDI,R12
            call .L_403bc0

            lea RSI,QWORD PTR [RIP+.L_40c040]
            mov ECX,EAX
            mov EDX,EBX
            mov RDI,RBP
            xor EAX,EAX
            call .L_4155b0

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403cc0:

            mov RDX,QWORD PTR [RBP+8]
            lea RCX,QWORD PTR [RIP+.L_40c000]
            mov RDI,RBP
            mov R8D,61
            xor ESI,ESI
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_403ce2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cf0:

            test RDX,RDX
            sete AL
            ret 
.L_403cf7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d00:

            test RDX,RDX
            je .L_403d30

            sub RSP,8
            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+8]
            mov RCX,RDI
            movsxd R8,ESI
            mov RDI,RAX
            xor ESI,ESI
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            mov EAX,1
            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403d30:

            mov EAX,1
            ret 
.L_403d36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d40:

            test RDX,RDX
            je .L_403d4b

            mov QWORD PTR [RDX],RDI
            mov DWORD PTR [RDX+8],ESI
.L_403d4b:

            mov EAX,1
            ret 
.L_403d51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d60:

            xor EAX,EAX
            cmp ESI,1
            je .L_403d70
.L_403d67:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d70:

            test RDX,RDX
            mov EAX,1
            je .L_403d67

            movzx ECX,BYTE PTR [RDI]
            mov BYTE PTR [RDX],CL
            ret 
.L_403d80:

            xor EAX,EAX
            cmp ESI,1
            je .L_403d90
.L_403d87:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d90:

            test RDX,RDX
            mov EAX,1
            je .L_403d87

            movzx ECX,BYTE PTR [RDI]
            mov BYTE PTR [RDX],CL
            ret 
.L_403da0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_403de0
.L_403dc2:

            xor EAX,EAX
.L_403dc4:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_403e53

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_403de0:

            lea RAX,QWORD PTR [RSP+32]
            mov EBP,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov ESI,33
            mov R12,RDX
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            mov RBX,RAX
            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,EBP
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtol@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_403dc2

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_403dc2

            test R12,R12
            mov EAX,1
            je .L_403dc4

            mov QWORD PTR [R12],RCX
            jmp .L_403dc4
.L_403e53:

            call __stack_chk_fail@PLT
.L_403e58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e60:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_403ea8
.L_403e82:

            xor EAX,EAX
.L_403e84:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_403f2a

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
.L_403ea8:

            lea RAX,QWORD PTR [RSP+32]
            mov R12D,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov RBP,RDX
            mov ESI,33
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            cmp BYTE PTR [RAX],45
            mov RBX,RAX
            je .L_403e82

            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,R12D
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtoul@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_403e82

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_403e82

            test RBP,RBP
            mov EAX,1
            je .L_403e84

            mov QWORD PTR [RBP],RCX
            jmp .L_403e84
.L_403f2a:

            call __stack_chk_fail@PLT
.L_403f2f:

            nop
.L_403f30:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403da0

            test AL,AL
            je .L_403f63

            mov RDX,QWORD PTR [RSP]
            movsx RCX,DX
            cmp RDX,RCX
            je .L_403f80

            xor EAX,EAX
.L_403f63:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_403f8a

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f80:

            test RBX,RBX
            je .L_403f63

            mov WORD PTR [RBX],DX
            jmp .L_403f63
.L_403f8a:

            call __stack_chk_fail@PLT
.L_403f8f:

            nop
.L_403f90:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403e60

            test AL,AL
            je .L_403fc3

            mov RDX,QWORD PTR [RSP]
            test RDX,-65536
            je .L_403fe0

            xor EAX,EAX
.L_403fc3:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_403fea

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fe0:

            test RBX,RBX
            je .L_403fc3

            mov WORD PTR [RBX],DX
            jmp .L_403fc3
.L_403fea:

            call __stack_chk_fail@PLT
.L_403fef:

            nop
.L_403ff0:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403da0

            test AL,AL
            je .L_404022

            mov RDX,QWORD PTR [RSP]
            movsxd RCX,EDX
            cmp RDX,RCX
            je .L_404040

            xor EAX,EAX
.L_404022:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_404049

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404040:

            test RBX,RBX
            je .L_404022

            mov DWORD PTR [RBX],EDX
            jmp .L_404022
.L_404049:

            call __stack_chk_fail@PLT
.L_40404e:

            nop
            nop
.L_404050:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_403e60

            test AL,AL
            je .L_404081

            mov RDX,QWORD PTR [RSP]
            mov ECX,EDX
            cmp RDX,RCX
            je .L_4040a0

            xor EAX,EAX
.L_404081:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4040a9

            add RSP,16
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040a0:

            test RBX,RBX
            je .L_404081

            mov DWORD PTR [RBX],EDX
            jmp .L_404081
.L_4040a9:

            call __stack_chk_fail@PLT
.L_4040ae:

            nop
            nop
.L_4040b0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_4040f0
.L_4040d2:

            xor EAX,EAX
.L_4040d4:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_404163

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_4040f0:

            lea RAX,QWORD PTR [RSP+32]
            mov EBP,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov ESI,33
            mov R12,RDX
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            mov RBX,RAX
            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,EBP
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtoll@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_4040d2

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_4040d2

            test R12,R12
            mov EAX,1
            je .L_4040d4

            mov QWORD PTR [R12],RCX
            jmp .L_4040d4
.L_404163:

            call __stack_chk_fail@PLT
.L_404168:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404170:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
            test ESI,ESI
            mov DWORD PTR [RSP+12],ESI
            jne .L_4041b8
.L_404192:

            xor EAX,EAX
.L_404194:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40423a

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
.L_4041b8:

            lea RAX,QWORD PTR [RSP+32]
            mov R12D,ECX
            lea RCX,QWORD PTR [RSP+12]
            xor R8D,R8D
            mov RBP,RDX
            mov ESI,33
            mov RDX,RDI
            mov RDI,RAX
            call .L_402c90

            cmp BYTE PTR [RAX],45
            mov RBX,RAX
            je .L_404192

            call __errno_location@PLT

            lea RSI,QWORD PTR [RSP+24]
            mov EDX,R12D
            mov RDI,RBX
            mov DWORD PTR [RAX],0
            mov R13,RAX
            call strtoull@PLT

            movsxd RDX,DWORD PTR [RSP+12]
            mov RCX,RAX
            add RBX,RDX
            cmp QWORD PTR [RSP+24],RBX
            jne .L_404192

            mov EAX,DWORD PTR [R13]
            test EAX,EAX
            jne .L_404192

            test RBP,RBP
            mov EAX,1
            je .L_404194

            mov QWORD PTR [RBP],RCX
            jmp .L_404194
.L_40423a:

            call __stack_chk_fail@PLT
.L_40423f:

            nop
.L_404240:

            mov RCX,RDX
            xor EDX,EDX
            jmp .L_402e00
.L_40424a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404250:

            mov RCX,RDX
            mov EDX,1
            jmp .L_402e00
.L_40425d:

            nop
            nop
            nop
.L_404260:

            mov ECX,10
            jmp .L_403f30
.L_40426a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404270:

            mov ECX,16
            jmp .L_403f30
.L_40427a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404280:

            mov ECX,8
            jmp .L_403f30
.L_40428a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404290:

            xor ECX,ECX
            jmp .L_403f30
.L_404297:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042a0:

            mov ECX,10
            jmp .L_403f90
.L_4042aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042b0:

            mov ECX,16
            jmp .L_403f90
.L_4042ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042c0:

            mov ECX,8
            jmp .L_403f90
.L_4042ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042d0:

            xor ECX,ECX
            jmp .L_403f90
.L_4042d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042e0:

            mov ECX,10
            jmp .L_403ff0
.L_4042ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4042f0:

            mov ECX,16
            jmp .L_403ff0
.L_4042fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404300:

            mov ECX,8
            jmp .L_403ff0
.L_40430a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404310:

            xor ECX,ECX
            jmp .L_403ff0
.L_404317:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404320:

            mov ECX,10
            jmp .L_404050
.L_40432a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404330:

            mov ECX,16
            jmp .L_404050
.L_40433a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404340:

            mov ECX,8
            jmp .L_404050
.L_40434a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404350:

            xor ECX,ECX
            jmp .L_404050
.L_404357:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404360:

            mov ECX,10
            jmp .L_403da0
.L_40436a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404370:

            mov ECX,16
            jmp .L_403da0
.L_40437a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404380:

            mov ECX,8
            jmp .L_403da0
.L_40438a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404390:

            xor ECX,ECX
            jmp .L_403da0
.L_404397:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4043a0:

            mov ECX,10
            jmp .L_403e60
.L_4043aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043b0:

            mov ECX,16
            jmp .L_403e60
.L_4043ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043c0:

            mov ECX,8
            jmp .L_403e60
.L_4043ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043d0:

            xor ECX,ECX
            jmp .L_403e60
.L_4043d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4043e0:

            mov ECX,10
            jmp .L_4040b0
.L_4043ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043f0:

            mov ECX,16
            jmp .L_4040b0
.L_4043fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404400:

            mov ECX,8
            jmp .L_4040b0
.L_40440a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404410:

            xor ECX,ECX
            jmp .L_4040b0
.L_404417:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404420:

            mov ECX,10
            jmp .L_404170
.L_40442a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404430:

            mov ECX,16
            jmp .L_404170
.L_40443a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404440:

            mov ECX,8
            jmp .L_404170
.L_40444a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404450:

            xor ECX,ECX
            jmp .L_404170
.L_404457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404460:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,520
.L_404474:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_404774

            cmp EAX,2
            je .L_404528

            cmp BYTE PTR [RDI+6],0
            mov EAX,4
            jne .L_404538
.L_4044aa:

            cmp BYTE PTR [RBX+4],0
            jne .L_4044b5

            or EAX,1940
.L_4044b5:

            cmp BYTE PTR [RBX+16],0
            je .L_4044be

            or EAX,2
.L_4044be:

            cmp BYTE PTR [RBX+17],0
            je .L_4044c7

            or AH,8
.L_4044c7:

            cmp BYTE PTR [RBX+18],0
            je .L_4044d0

            or EAX,8
.L_4044d0:

            cmp BYTE PTR [RBX+19],0
            je .L_4044d9

            or AH,16
.L_4044d9:

            cmp BYTE PTR [RBX+20],0
            jne .L_4044e2

            or EAX,1
.L_4044e2:

            cmp BYTE PTR [RBX+21],0
            je .L_4044ea

            or AL,128
.L_4044ea:

            cmp BYTE PTR [RBX+22],0
            je .L_4044f3

            or AH,1
.L_4044f3:

            cmp BYTE PTR [RBX+23],0
            je .L_4044fc

            or EAX,16
.L_4044fc:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404a3f

            add RSP,520
.L_40451a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404528:

            mov EAX,36
            jmp .L_4044aa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404538:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4045c8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4045cd:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_404687:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40468c:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_40469c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,138
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4046d8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40bda6]
            mov EDX,17
.L_4046e8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSolsEi@PLT
.L_4046f8:

            cmp BYTE PTR [RSP+112],0
            je .L_404780
.L_404703:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_404735

            call _ZdlPv@PLT
.L_404735:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT
.L_404774:

            mov EAX,4
            jmp .L_4044aa
          .byte 0x66
          .byte 0x90
.L_404780:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_404962

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_4048c0

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_4047fa:

            call .L_402f10
.L_4047ff:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_404974

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4049d2

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4049e1

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_40485d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_404881
.L_40487c:

            call _ZdlPv@PLT
.L_404881:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_404890:

            call write@PLT
.L_404895:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_404703

            call _ZdlPv@PLT

            jmp .L_404703
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4048c0:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
.L_4048d7:

            call .L_402f10

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4049a5

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_4049f4

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_404a03

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_40493a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_40487c

            jmp .L_404881
.L_404962:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40496f:

            jmp .L_404881
.L_404974:

            test RDX,RDX
            je .L_404992

            cmp RDX,1
            je .L_404a29

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_404992:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_40485d
.L_4049a5:

            test RDX,RDX
            je .L_4049bf

            cmp RDX,1
            je .L_404a16

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_4049bf:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_40493a
.L_4049d2:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4049e1:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_40485d
.L_4049f4:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_404a03:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_40493a
.L_404a16:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4049bf
.L_404a29:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_404992
.L_404a3f:

            call __stack_chk_fail@PLT
.L_404a44:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_404a5b

            call _ZdlPv@PLT
.L_404a5b:

            call _ZSt9terminatev@PLT
.L_404a60:

            jmp .L_404a44
.L_404a62:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
.L_404a70:

            call _Unwind_Resume@PLT
.L_404a75:

            mov RBX,RAX
.L_404a78:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_404a91:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_404aa5:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            jmp .L_404a78
.L_404ac9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ad0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,552
.L_404ae1:

            movsxd R10,DWORD PTR [RDX+8]
            mov R14,QWORD PTR [RDX]
            mov QWORD PTR [RSP+24],RDI
            mov QWORD PTR [RSP+32],RDX
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP+16],RCX
            mov DWORD PTR [RSP+8],R8D
            lea R15,QWORD PTR [R14+R10*1]
            cmp R15,R14
            jbe .L_404bd7

            mov RBX,RSI
            nop
.L_404b20:

            movzx EBP,BYTE PTR [R14]
            lea R13,QWORD PTR [R14+1]
            cmp BPL,92
            jne .L_404b80

            cmp R15,R13
            ja .L_404be8
.L_404b37:

            mov RAX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+46]
            test AL,AL
            jne .L_404ca5

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b50:

            mov RDI,QWORD PTR [RSP+536]
            xor RDI,QWORD PTR FS:[40]
            jne .L_405745

            add RSP,552
.L_404b6e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b80:

            mov RDX,QWORD PTR [RBX]
            mov R14,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RBX+16]
            mov ECX,15
            cmp RDX,RSI
            lea R12,QWORD PTR [R14+1]
            je .L_404b9d

            mov RCX,QWORD PTR [RBX+16]
.L_404b9d:

            cmp R12,RCX
            jbe .L_404bba

            xor EDX,EDX
            mov R8D,1
            xor ECX,ECX
            mov RSI,R14
            mov RDI,RBX
.L_404bb2:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RDX,QWORD PTR [RBX]
.L_404bba:

            mov BYTE PTR [RDX+R14*1],BPL
            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],R12
            mov BYTE PTR [RDX+R14*1+1],0
            mov R14,R13
.L_404bce:

            cmp R15,R14
            ja .L_404b20
.L_404bd7:

            mov EAX,1
            jmp .L_404b50
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404be8:

            movsx EAX,BYTE PTR [R14+1]
            lea EBP,DWORD PTR [RAX-48]
            cmp EBP,9
            jbe .L_404c50

            cmp EAX,92
            jne .L_404b37

            mov RAX,QWORD PTR [RBX]
            mov RBP,QWORD PTR [RBX+8]
            lea RCX,QWORD PTR [RBX+16]
            mov EDX,15
            cmp RAX,RCX
            lea R12,QWORD PTR [RBP+1]
            je .L_404c1b

            mov RDX,QWORD PTR [RBX+16]
.L_404c1b:

            cmp R12,RDX
            jbe .L_404c38

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT

            mov RAX,QWORD PTR [RBX]
.L_404c38:

            mov BYTE PTR [RAX+RBP*1],92
            mov RAX,QWORD PTR [RBX]
            add R14,2
            mov QWORD PTR [RBX+8],R12
            mov BYTE PTR [RAX+RBP*1+1],0
            jmp .L_404bce
          .byte 0x66
          .byte 0x90
.L_404c50:

            cmp EBP,DWORD PTR [RSP+8]
            jge .L_404fe0

            movsxd RBP,EBP
            shl RBP,4
            add RBP,QWORD PTR [RSP+16]
            movsxd RDX,DWORD PTR [RBP+8]
            test EDX,EDX
            jg .L_404c80
.L_404c6e:

            add R14,2
            jmp .L_404bce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404c80:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBX+8]
            cmp RDX,RAX
            ja .L_405739

            mov RSI,QWORD PTR [RBP]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_404ca3:

            jmp .L_404c6e
.L_404ca5:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_404d3e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_404d43:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_404e14:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_404e19:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_404e29:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,881
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_404e65:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bdd5]
            mov EDX,25
.L_404e75:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RAX]
            test RBP,RBP
            je .L_40529d

            mov RDI,RBP
            call strlen@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RDX,RAX
            mov RSI,RBP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_404ea2:

            cmp BYTE PTR [RSP+144],0
            jne .L_40521d

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_40550d

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_40546e

            lea R14,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_404f1f:

            call .L_402f10
.L_404f24:

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_4055d7

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_40556c

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_40557b

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_404f7f:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R14
            je .L_404f9e
.L_404f99:

            call _ZdlPv@PLT
.L_404f9e:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_404fad:

            call write@PLT
.L_404fb2:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            mov BYTE PTR [RSP+144],1
            cmp RDI,RBP
            je .L_40521d

            call _ZdlPv@PLT

            jmp .L_40521d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404fe0:

            mov RAX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+46]
            test AL,AL
            je .L_404b50

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_40508a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40508f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_405160:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405165:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_405175:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,869
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4051b1:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bdb8]
            mov EDX,16
.L_4051c1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,EBP
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40bdc9]
            mov EDX,11
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov R14,QWORD PTR [RAX]
            test R14,R14
            je .L_4052be

            mov RDI,R14
            call strlen@PLT

            mov RSI,R14
            mov RDX,RAX
            mov RDI,RBP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40520f:

            cmp BYTE PTR [RSP+144],0
            je .L_4052d9
.L_40521d:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40525a

            call _ZdlPv@PLT
.L_40525a:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_404b50
.L_40529d:

            mov RAX,QWORD PTR [RSP+152]
            mov RAX,QWORD PTR [RAX-24]
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov ESI,DWORD PTR [RDI+32]
            or ESI,1
.L_4052b4:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
.L_4052b9:

            jmp .L_404ea2
.L_4052be:

            mov RAX,QWORD PTR [RBP]
            mov RDI,QWORD PTR [RAX-24]
            add RDI,RBP
            mov ESI,DWORD PTR [RDI+32]
            or ESI,1
.L_4052cf:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
.L_4052d4:

            jmp .L_40520f
.L_4052d9:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_4054fc

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_4053e0

            lea R14,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_405348:

            call .L_402f10
.L_40534d:

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_40553b

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_40551e

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_40552d

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_4053a8:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R14
            je .L_4053c7
.L_4053c2:

            call _ZdlPv@PLT
.L_4053c7:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_4053d6:

            call write@PLT
.L_4053db:

            jmp .L_404fb2
.L_4053e0:

            lea R14,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+80],RAX
.L_4053f1:

            call .L_402f10
.L_4053f6:

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_405625

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_405608

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_405617

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_40544b:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+80]
            cmp RDI,R14
            jne .L_4053c2

            jmp .L_4053c7
.L_40546e:

            lea R14,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+80],RAX
.L_40547f:

            call .L_402f10
.L_405484:

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_4055a6

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_405589

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_405598

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4054d9:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+80]
            cmp RDI,R14
            jne .L_404f99

            jmp .L_404f9e
.L_4054fc:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
.L_405503:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_405508:

            jmp .L_4053c7
.L_40550d:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
.L_405514:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_405519:

            jmp .L_404f9e
.L_40551e:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_40552d:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_4053a8
.L_40553b:

            test RDX,RDX
            je .L_405559

            cmp RDX,1
            je .L_405694

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_405559:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_4053a8
.L_40556c:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_40557b:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_404f7f
.L_405589:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_405598:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4054d9
.L_4055a6:

            test RDX,RDX
            je .L_4055c4

            cmp RDX,1
            je .L_405665

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_4055c4:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4054d9
.L_4055d7:

            test RDX,RDX
            je .L_4055f5

            cmp RDX,1
            je .L_40567b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_4055f5:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_404f7f
.L_405608:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_405617:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_40544b
.L_405625:

            test RDX,RDX
            je .L_40563f

            cmp RDX,1
            je .L_405652

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_40563f:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_40544b
.L_405652:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_40563f
.L_405665:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4055c4
.L_40567b:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4055f5
.L_405694:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_405559
.L_4056ad:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
.L_4056bb:

            call _Unwind_Resume@PLT
.L_4056c0:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4056d4:

            jmp .L_4056ad
.L_4056d6:

            jmp .L_4056c0
.L_4056d8:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
.L_4056f9:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_405712:

            mov RBP,RAX
            jmp .L_4056f9
.L_405717:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            cmp RDI,RBP
            je .L_40572a

            call _ZdlPv@PLT
.L_40572a:

            call _ZSt9terminatev@PLT
.L_40572f:

            jmp .L_405717
.L_405731:

            jmp .L_405717
.L_405733:

            jmp .L_405717
.L_405735:

            jmp .L_4056d8
.L_405737:

            jmp .L_405712
.L_405739:

            lea RDI,QWORD PTR [RIP+.L_40bd7d]
            call _ZSt20__throw_length_errorPKc@PLT
.L_405745:

            call __stack_chk_fail@PLT
.L_40574a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405750:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,56
            mov R12,RDX
            sub RSP,632
.L_40576f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+616],RAX
            xor EAX,EAX
.L_405782:

            call _Znwm@PLT

            xor ESI,ESI
            mov RDI,RAX
            mov RBP,RAX
            call pthread_rwlock_init@PLT

            test EAX,EAX
            jne .L_406a2f

            movsxd RDX,DWORD PTR [R13+8]
            mov RSI,QWORD PTR [R13]
            mov QWORD PTR [RBX],RBP
            lea RBP,QWORD PTR [RSP+224]
            lea R13,QWORD PTR [RBP+16]
            mov RDI,RBP
            add RDX,RSI
            mov QWORD PTR [RSP+224],R13
            call .L_402f10
.L_4057c6:

            mov RSI,QWORD PTR [RSP+224]
            mov RDI,QWORD PTR [RBX+8]
            cmp RSI,R13
            je .L_405eb8

            lea RAX,QWORD PTR [RBX+24]
            mov RCX,QWORD PTR [RSP+232]
            mov RDX,QWORD PTR [RSP+240]
            cmp RDI,RAX
            je .L_405a70

            test RDI,RDI
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RBX+24],RDX
            je .L_405a7c

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RAX
.L_405821:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RDI],0
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,RAX
            je .L_405846

            call _ZdlPv@PLT
.L_405846:

            mov EAX,DWORD PTR [R12]
            lea RDI,QWORD PTR [RIP+.L_64a360]
            lea R13,QWORD PTR [RBX+40]
            mov DWORD PTR [RBX+40],EAX
            movzx EAX,BYTE PTR [R12+4]
            mov BYTE PTR [RBX+44],AL
            movzx EAX,BYTE PTR [R12+5]
            mov BYTE PTR [RBX+45],AL
            movzx EAX,BYTE PTR [R12+6]
            mov BYTE PTR [RBX+46],AL
            mov RAX,QWORD PTR [R12+8]
            mov QWORD PTR [RBX+48],RAX
            movzx EAX,BYTE PTR [R12+16]
            mov BYTE PTR [RBX+56],AL
            movzx EAX,BYTE PTR [R12+17]
            mov BYTE PTR [RBX+57],AL
            movzx EAX,BYTE PTR [R12+18]
            mov BYTE PTR [RBX+58],AL
            movzx EAX,BYTE PTR [R12+19]
            mov BYTE PTR [RBX+59],AL
            movzx EAX,BYTE PTR [R12+20]
            mov BYTE PTR [RBX+60],AL
            movzx EAX,BYTE PTR [R12+21]
            mov BYTE PTR [RBX+61],AL
            movzx EAX,BYTE PTR [R12+22]
            mov BYTE PTR [RBX+62],AL
            movzx EAX,BYTE PTR [R12+23]
            mov BYTE PTR [RBX+63],AL
            call pthread_mutex_lock@PLT

            cmp QWORD PTR [RIP+.L_64a358],0
            je .L_406370
.L_4058d7:

            lea RDI,QWORD PTR [RIP+.L_64a360]
            call pthread_mutex_unlock@PLT

            mov RAX,QWORD PTR [RIP+.L_64a358]
            mov DWORD PTR [RBX+152],0
            mov RDI,R13
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+104],0
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+144],RAX
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+208],0
            mov DWORD PTR [RBX+192],4294967295
            mov DWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],0
            mov DWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
.L_405963:

            call .L_404460

            mov RDX,QWORD PTR [RBX+8]
            lea R13,QWORD PTR [RSP+96]
            lea R12,QWORD PTR [RSP+80]
            mov ESI,EAX
            mov RDI,R12
            mov QWORD PTR [RSP+80],RDX
            mov RDX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+88],EDX
            mov RDX,R13
            call .L_42ee70

            test RAX,RAX
            mov QWORD PTR [RBX+104],RAX
            je .L_405a90

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+72],0
            lea RCX,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RBX+96]
            lea RSI,QWORD PTR [RBX+64]
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RBX+104]
            mov BYTE PTR [RBX+96],0
            call .L_40fee0

            test AL,AL
            je .L_406408

            mov RDI,QWORD PTR [RSP+72]
            mov QWORD PTR [RBX+112],RDI
.L_4059d7:

            mov RAX,QWORD PTR [RBX+48]
            movabs RDX,6148914691236517206
            lea RCX,QWORD PTR [RAX+RAX*1]
            mov RAX,RCX
            sar RCX,63
            imul RDX
            mov RSI,RDX
            sub RSI,RCX
            call .L_41b280

            test RAX,RAX
            mov QWORD PTR [RBX+120],RAX
            je .L_405ef8

            mov RDI,RAX
            call .L_429500
.L_405a13:

            mov BYTE PTR [RBX+136],AL
            mov RBX,QWORD PTR [RSP+120]
            test RBX,RBX
            je .L_405a41
.L_405a23:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_405a34

            call _ZdlPv@PLT
.L_405a34:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_405a41:

            mov RAX,QWORD PTR [RSP+616]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406a2a

            add RSP,632
.L_405a5f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405a70:

            mov QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RBX+24],RDX
.L_405a7c:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+224],RDI
            jmp .L_405821
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405a90:

            mov RAX,QWORD PTR [RIP+.L_64a358]
            cmp QWORD PTR [RBX+144],RAX
            je .L_4064b0
.L_405aa4:

            cmp BYTE PTR [RBX+46],0
            je .L_405dc9

            lea RDI,QWORD PTR [RBP+120]
            mov BYTE PTR [RSP+224],0
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+568],0
            mov QWORD PTR [RSP+560],0
            mov BYTE PTR [RSP+569],0
            xor ESI,ESI
            mov QWORD PTR [RSP+344],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+576],0
            mov QWORD PTR [RSP+584],0
            mov QWORD PTR [RSP+592],0
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+232],R14
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_405b48:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405b4d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+232],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+344],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+240],RAX
            mov QWORD PTR [RSP+288],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+304],16
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+328],0
            mov QWORD PTR [RSP+312],RAX
.L_405c1e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405c23:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_405c33:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,201
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_405c6f:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40bdef]
            mov EDX,15
.L_405c7f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBX+8]
            mov RSI,R12
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+88],EAX
            lea RAX,QWORD PTR [RSP+160]
            mov RDI,RAX
            mov QWORD PTR [RSP+56],RAX
            call .L_402fe0
.L_405cad:

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+160]
            lea RDI,QWORD PTR [RBP+8]
.L_405cc1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40bdff]
            mov EDX,3
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+192]
            mov RSI,R13
            mov RDI,R15
            call .L_40cfb0
.L_405cf0:

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov RDI,R12
.L_405d03:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_405d08:

            mov RDI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            cmp RDI,RAX
            je .L_405d1e

            call _ZdlPv@PLT
.L_405d1e:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+160]
            add RAX,16
            cmp RDI,RAX
            je .L_405d39

            call _ZdlPv@PLT
.L_405d39:

            cmp BYTE PTR [RSP+224],0
            je .L_406210
.L_405d47:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+312]
            mov QWORD PTR [RSP+232],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+344],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_405d84

            call _ZdlPv@PLT
.L_405d84:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+240],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+RAX*1+232],RCX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+344],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_405dc9:

            movsxd RDX,DWORD PTR [RSP+112]
            mov RSI,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+224],RAX
            add RDX,RSI
.L_405de5:

            call .L_402f10
.L_405dea:

            mov RSI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBX+160]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RAX
            je .L_406420

            lea RAX,QWORD PTR [RBX+176]
            mov RCX,QWORD PTR [RSP+240]
            cmp RDI,RAX
            je .L_406460

            test RDI,RDI
            mov RAX,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+160],RSI
            mov QWORD PTR [RBX+168],RDX
            mov QWORD PTR [RBX+176],RCX
            je .L_406475

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RAX
.L_405e5b:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,RBP
            je .L_405e80

            call _ZdlPv@PLT
.L_405e80:

            mov EAX,DWORD PTR [RSP+96]
            mov EDX,1
            cmp EAX,13
            ja .L_405e98

            lea RDX,QWORD PTR [RIP+.L_40c840]
            mov EDX,DWORD PTR [RDX+RAX*4]
.L_405e98:

            mov DWORD PTR [RBX+152],EDX
.L_405e9e:

            mov RBX,QWORD PTR [RSP+120]
            test RBX,RBX
            jne .L_405a23

            jmp .L_405a41
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405eb8:

            mov RDX,QWORD PTR [RSP+232]
            test RDX,RDX
            je .L_405ee0

            cmp RDX,1
            je .L_406490

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+8]
.L_405ee0:

            mov QWORD PTR [RBX+16],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+224]
            jmp .L_405821
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405ef8:

            cmp BYTE PTR [RBX+46],0
            je .L_4061cf

            lea RDI,QWORD PTR [RBP+120]
            mov BYTE PTR [RSP+224],0
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+568],0
            mov QWORD PTR [RSP+560],0
            mov BYTE PTR [RSP+569],0
            xor ESI,ESI
            mov QWORD PTR [RSP+344],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+576],0
            mov QWORD PTR [RSP+584],0
            mov QWORD PTR [RSP+592],0
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+232],R14
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_405f9c:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_405fa1:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+232],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+344],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+240],RAX
            mov QWORD PTR [RSP+288],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+304],16
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+328],0
            mov QWORD PTR [RSP+312],RAX
.L_406072:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_406077:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_406087:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,223
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4060c3:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40be03]
            mov EDX,17
.L_4060d3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBX+8]
            lea R15,QWORD PTR [RSP+192]
            mov RSI,R12
            mov RDI,R15
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+88],EAX
            call .L_402fe0
.L_4060fc:

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            lea RDI,QWORD PTR [RBP+8]
.L_406110:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be15]
            mov EDX,1
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_406129:

            mov RDI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            cmp RDI,RAX
            je .L_40613f

            call _ZdlPv@PLT
.L_40613f:

            cmp BYTE PTR [RSP+224],0
            je .L_4065b8
.L_40614d:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+312]
            mov QWORD PTR [RSP+232],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+344],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+240],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_40618a

            call _ZdlPv@PLT
.L_40618a:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+240],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+RAX*1+232],RCX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+344],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_4061cf:

            mov EDI,32
.L_4061d4:

            call _Znwm@PLT
.L_4061d9:

            lea RDX,QWORD PTR [RIP+.L_43e1a0-205022]
            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+16]
            mov RDI,RBP
            lea RSI,QWORD PTR [RDX-34]
            mov QWORD PTR [RBP],RAX
.L_4061f2:

            call .L_402f10
.L_4061f7:

            mov QWORD PTR [RBX+144],RBP
            mov DWORD PTR [RBX+152],14
            jmp .L_405e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406210:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            lea R12,QWORD PTR [RSP+128]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RSP+144],0
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RSP+280]
            test RAX,RAX
            je .L_4067e0

            mov RDX,QWORD PTR [RSP+264]
            mov RSI,QWORD PTR [RSP+272]
            cmp RAX,RDX
            jbe .L_4064f8

            lea RDX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+192],RDX
            mov RDX,RAX
.L_40628a:

            call .L_402f10
.L_40628f:

            mov RSI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+200]
            cmp RSI,RAX
            je .L_4067f8

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+208]
            cmp RDI,RCX
            je .L_4068a3

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_4068bb

            mov QWORD PTR [RSP+192],RDI
            mov QWORD PTR [RSP+208],RCX
.L_406303:

            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RDI],0
            add R15,16
            mov RDI,QWORD PTR [RSP+192]
            cmp RDI,R15
            je .L_406328
.L_406323:

            call _ZdlPv@PLT
.L_406328:

            movsxd RDX,DWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            mov EDI,2
.L_40633d:

            call write@PLT
.L_406342:

            mov RDI,QWORD PTR [RSP+128]
            add R12,16
            mov BYTE PTR [RSP+224],1
            cmp RDI,R12
            je .L_405d47

            call _ZdlPv@PLT

            jmp .L_405d47
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406370:

            mov EDI,32
.L_406375:

            call _Znwm@PLT

            lea RDX,QWORD PTR [RAX+16]
            mov EDI,48
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            mov QWORD PTR [RIP+.L_64a358],RAX
            mov QWORD PTR [RAX],RDX
            call _Znwm@PLT

            lea RDX,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov EDI,48
            mov QWORD PTR [RIP+.L_64a350],RAX
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RDX
            call _Znwm@PLT
.L_4063d2:

            lea RDX,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RIP+.L_64a348],RAX
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RDX
            jmp .L_4058d7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406408:

            mov RDI,QWORD PTR [RBX+104]
.L_40640c:

            call .L_40feb0

            mov RDI,RAX
            mov QWORD PTR [RBX+112],RAX
            jmp .L_4059d7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406420:

            test RDX,RDX
            je .L_406448

            cmp RDX,1
            jne .L_4064d8

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+160]
.L_406448:

            mov QWORD PTR [RBX+168],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+224]
            jmp .L_405e5b
.L_406460:

            mov QWORD PTR [RBX+160],RSI
            mov QWORD PTR [RBX+168],RDX
            mov QWORD PTR [RBX+176],RCX
.L_406475:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+224],RDI
            jmp .L_405e5b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406490:

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+8]
            jmp .L_405ee0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4064b0:

            mov EDI,32
            call _Znwm@PLT
.L_4064ba:

            mov RSI,R13
            mov RDI,RAX
            mov R14,RAX
.L_4064c3:

            call .L_40cfb0
.L_4064c8:

            mov QWORD PTR [RBX+144],R14
            jmp .L_405aa4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4064d8:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RBX+160]
            jmp .L_406448
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4064f8:

            mov R15,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+160],RAX
.L_40650c:

            call .L_402f10
.L_406511:

            mov RSI,QWORD PTR [RSP+160]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+168]
            cmp RSI,RAX
            je .L_406838

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+176]
            cmp RDI,RCX
            je .L_406875

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_40688d

            mov QWORD PTR [RSP+160],RDI
            mov QWORD PTR [RSP+176],RCX
.L_406585:

            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+168],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+160]
            add RAX,16
            cmp RDI,RAX
            jne .L_406323

            jmp .L_406328
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4065b8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            lea R12,QWORD PTR [RSP+128]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RSP+144],0
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RSP+280]
            test RAX,RAX
            je .L_4068cc

            mov RDX,QWORD PTR [RSP+264]
            mov RSI,QWORD PTR [RSP+272]
            cmp RAX,RDX
            jbe .L_406718

            lea RDX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+192],RDX
            mov RDX,RAX
.L_406632:

            call .L_402f10
.L_406637:

            mov RSI,QWORD PTR [RSP+192]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+200]
            cmp RSI,RAX
            je .L_4068dd

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+208]
            cmp RDI,RCX
            je .L_406985

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_40699d

            mov QWORD PTR [RSP+192],RDI
            mov QWORD PTR [RSP+208],RCX
.L_4066ab:

            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RDI],0
            add R15,16
            mov RDI,QWORD PTR [RSP+192]
            cmp RDI,R15
            je .L_4066d0
.L_4066cb:

            call _ZdlPv@PLT
.L_4066d0:

            movsxd RDX,DWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            mov EDI,2
.L_4066e5:

            call write@PLT
.L_4066ea:

            mov RDI,QWORD PTR [RSP+128]
            add R12,16
            mov BYTE PTR [RSP+224],1
            cmp RDI,R12
            je .L_40614d

            call _ZdlPv@PLT

            jmp .L_40614d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406718:

            lea RCX,QWORD PTR [RSP+160]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+160],RAX
.L_406737:

            call .L_402f10
.L_40673c:

            mov RSI,QWORD PTR [RSP+160]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+168]
            cmp RSI,RAX
            je .L_40691a

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+176]
            cmp RDI,RCX
            je .L_406957

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
            je .L_40696f

            mov QWORD PTR [RSP+160],RDI
            mov QWORD PTR [RSP+176],RCX
.L_4067b0:

            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+168],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+160]
            add RAX,16
            cmp RDI,RAX
            jne .L_4066cb

            jmp .L_4066d0
          .byte 0x66
          .byte 0x90
.L_4067e0:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_4067e7:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4067ec:

            jmp .L_406328
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4067f8:

            test RDX,RDX
            je .L_40681c

            cmp RDX,1
            je .L_4069ae

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
.L_40681c:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_406303
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406838:

            test RDX,RDX
            je .L_40685c

            cmp RDX,1
            je .L_4069cd

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
.L_40685c:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+160]
            jmp .L_406585
.L_406875:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_40688d:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+160],RDI
            jmp .L_406585
.L_4068a3:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_4068bb:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+192],RDI
            jmp .L_406303
.L_4068cc:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_4068d3:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4068d8:

            jmp .L_4066d0
.L_4068dd:

            test RDX,RDX
            je .L_406901

            cmp RDX,1
            je .L_406a0b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
.L_406901:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_4066ab
.L_40691a:

            test RDX,RDX
            je .L_40693e

            cmp RDX,1
            je .L_4069ec

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
.L_40693e:

            mov QWORD PTR [RSP+136],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+160]
            jmp .L_4067b0
.L_406957:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_40696f:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+160],RDI
            jmp .L_4067b0
.L_406985:

            mov QWORD PTR [RSP+128],RSI
            mov QWORD PTR [RSP+136],RDX
            mov QWORD PTR [RSP+144],RAX
.L_40699d:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+192],RDI
            jmp .L_4066ab
.L_4069ae:

            movzx EAX,BYTE PTR [RSP+208]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_40681c
.L_4069cd:

            movzx EAX,BYTE PTR [RSP+176]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_40685c
.L_4069ec:

            movzx EAX,BYTE PTR [RSP+176]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_40693e
.L_406a0b:

            movzx EAX,BYTE PTR [RSP+208]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_406901
.L_406a2a:

            call __stack_chk_fail@PLT
.L_406a2f:

            call abort@PLT
.L_406a34:

            mov ESI,32
            mov RDI,R14
            mov RBX,RAX
            call _ZdlPvm@PLT
.L_406a44:

            mov RBP,QWORD PTR [RSP+120]
            test RBP,RBP
            je .L_406a6d

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_406a60

            call _ZdlPv@PLT
.L_406a60:

            mov ESI,32
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_406a6d:

            mov RDI,RBX
.L_406a70:

            call _Unwind_Resume@PLT
.L_406a75:

            mov RDI,QWORD PTR [RSP+128]
            add R12,16
            cmp RDI,R12
            je .L_406a8b

            call _ZdlPv@PLT
.L_406a8b:

            call _ZSt9terminatev@PLT
.L_406a90:

            jmp .L_406a75
.L_406a92:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            mov RBX,RAX
            cmp RDI,R15
            je .L_406aab
.L_406aa6:

            call _ZdlPv@PLT
.L_406aab:

            mov RDI,RBP
            call .L_40c160

            jmp .L_406a44
.L_406ab5:

            jmp .L_406a75
.L_406ab7:

            jmp .L_406a75
.L_406ab9:

            mov RBX,RAX
.L_406abc:

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+160]
            add RDX,16
            cmp RDI,RDX
            jne .L_406aa6

            jmp .L_406aab
.L_406ad4:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            mov RBX,RAX
            cmp RDI,R15
            je .L_406abc

            call _ZdlPv@PLT

            jmp .L_406abc
.L_406aef:

            mov RBX,RAX
            jmp .L_406a44
.L_406af7:

            mov ESI,32
            mov RDI,RBP
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_406a44
.L_406b0c:

            mov RBX,RAX
            jmp .L_406aab
.L_406b11:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_406a44
.L_406b22:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+RAX*1+232],RCX
.L_406b47:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+344],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_406a44
.L_406b62:

            mov RBX,RAX
            jmp .L_406b47
.L_406b67:

            jmp .L_406b62
.L_406b69:

            jmp .L_406b22
.L_406b6b:

            jmp .L_406b11
.L_406b6d:

            jmp .L_406b0c
.L_406b6f:

            nop
.L_406b70:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+80]
            push RBX
            lea RBP,QWORD PTR [RDI+24]
            mov RBX,RDI
            sub RSP,48
.L_406b8e:

            mov QWORD PTR [RDI+8],RBP
            mov QWORD PTR [RDI+16],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RSI,RSI
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
            mov DWORD PTR [RSP+16],1
            mov BYTE PTR [RSP+20],0
            mov BYTE PTR [RSP+21],0
            mov BYTE PTR [RSP+22],1
            mov QWORD PTR [RSP+24],8388608
            mov BYTE PTR [RSP+32],0
            mov BYTE PTR [RSP+33],0
            mov BYTE PTR [RSP+34],0
            mov BYTE PTR [RSP+35],0
            mov BYTE PTR [RSP+36],1
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov QWORD PTR [RSP],RSI
            je .L_406c6b

            mov RDI,RSI
            call strlen@PLT
.L_406c6b:

            lea RDX,QWORD PTR [RSP+16]
            mov RSI,RSP
            mov RDI,RBX
            mov DWORD PTR [RSP+8],EAX
.L_406c7a:

            call .L_405750
.L_406c7f:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406c9c

            add RSP,48
.L_406c93:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406c9c:

            call __stack_chk_fail@PLT
.L_406ca1:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_406cb5

            call _ZdlPv@PLT
.L_406cb5:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_406cc3

            call _ZdlPv@PLT
.L_406cc3:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_406cd1

            call _ZdlPv@PLT
.L_406cd1:

            mov RDI,R14
.L_406cd4:

            call _Unwind_Resume@PLT
.L_406cd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ce0:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+80]
            push RBX
            lea RBP,QWORD PTR [RDI+24]
            mov RBX,RDI
            sub RSP,48
.L_406cfe:

            mov QWORD PTR [RDI+8],RBP
            mov QWORD PTR [RDI+16],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            lea RDX,QWORD PTR [RSP+16]
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
            mov DWORD PTR [RSP+16],1
            mov BYTE PTR [RSP+20],0
            mov BYTE PTR [RSP+21],0
            mov BYTE PTR [RSP+22],1
            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+24],8388608
            mov BYTE PTR [RSP+32],0
            mov BYTE PTR [RSP+33],0
            mov BYTE PTR [RSP+34],0
            mov BYTE PTR [RSP+35],0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RSI+8]
            mov RSI,RSP
            mov BYTE PTR [RSP+36],1
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov DWORD PTR [RSP+8],EAX
.L_406de1:

            call .L_405750
.L_406de6:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406e03

            add RSP,48
.L_406dfa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406e03:

            call __stack_chk_fail@PLT
.L_406e08:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_406e1c

            call _ZdlPv@PLT
.L_406e1c:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_406e2a

            call _ZdlPv@PLT
.L_406e2a:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_406e38

            call _ZdlPv@PLT
.L_406e38:

            mov RDI,R14
.L_406e3b:

            call _Unwind_Resume@PLT
.L_406e40:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+80]
            push RBX
            lea RBP,QWORD PTR [RDI+24]
            mov RBX,RDI
            sub RSP,32
.L_406e5e:

            mov QWORD PTR [RDI+8],RBP
            mov QWORD PTR [RDI+16],0
            mov RDX,RSP
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
            mov DWORD PTR [RSP],1
            mov BYTE PTR [RSP+4],0
            mov BYTE PTR [RSP+5],0
            mov BYTE PTR [RSP+6],1
            mov QWORD PTR [RSP+8],8388608
            mov BYTE PTR [RSP+16],0
            mov BYTE PTR [RSP+17],0
            mov BYTE PTR [RSP+18],0
            mov BYTE PTR [RSP+19],0
            mov BYTE PTR [RSP+20],1
            mov BYTE PTR [RSP+21],0
            mov BYTE PTR [RSP+22],0
            mov BYTE PTR [RSP+23],0
.L_406f2c:

            call .L_405750
.L_406f31:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406f4e

            add RSP,32
.L_406f45:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_406f4e:

            call __stack_chk_fail@PLT
.L_406f53:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_406f67

            call _ZdlPv@PLT
.L_406f67:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_406f75

            call _ZdlPv@PLT
.L_406f75:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_406f83

            call _ZdlPv@PLT
.L_406f83:

            mov RDI,R14
.L_406f86:

            call _Unwind_Resume@PLT
.L_406f8b:

            nop
            nop
            nop
            nop
            nop
.L_406f90:

            push R14
            push R13
            lea R13,QWORD PTR [RDI+176]
            push R12
            lea R12,QWORD PTR [RDI+80]
            push RBP
            lea RBP,QWORD PTR [RDI+24]
            push RBX
.L_406fa7:

            mov QWORD PTR [RDI+16],0
            mov BYTE PTR [RDI+24],0
            mov DWORD PTR [RDI+40],1
            mov RBX,RDI
            mov QWORD PTR [RDI+8],RBP
            mov BYTE PTR [RDI+44],0
            mov BYTE PTR [RDI+45],0
            mov BYTE PTR [RDI+46],1
            mov QWORD PTR [RDI+48],8388608
            mov BYTE PTR [RDI+56],0
            mov BYTE PTR [RDI+57],0
            mov BYTE PTR [RDI+58],0
            mov BYTE PTR [RDI+59],0
            mov BYTE PTR [RDI+60],1
            mov BYTE PTR [RDI+61],0
            mov BYTE PTR [RDI+62],0
            mov BYTE PTR [RDI+63],0
            mov QWORD PTR [RDI+64],R12
            mov QWORD PTR [RDI+72],0
            mov BYTE PTR [RDI+80],0
            mov QWORD PTR [RDI+160],R13
            mov QWORD PTR [RDI+168],0
            mov BYTE PTR [RDI+176],0
.L_40701e:

            call .L_405750
.L_407023:

            pop RBX
.L_407024:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40702c:

            mov RDI,QWORD PTR [RBX+160]
            mov R14,RAX
            cmp R13,RDI
            je .L_407040

            call _ZdlPv@PLT
.L_407040:

            mov RDI,QWORD PTR [RBX+64]
            cmp R12,RDI
            je .L_40704e

            call _ZdlPv@PLT
.L_40704e:

            mov RDI,QWORD PTR [RBX+8]
            cmp RBP,RDI
            je .L_40705c

            call _ZdlPv@PLT
.L_40705c:

            mov RDI,R14
.L_40705f:

            call _Unwind_Resume@PLT
.L_407064:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407070:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,552
.L_407084:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_40761d

            mov RBP,QWORD PTR [RBX+128]
            test RBP,RBP
            je .L_407100
.L_4070b8:

            mov RDI,QWORD PTR [RSP+24]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_40761d

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_407662

            add RSP,552
.L_4070eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407100:

            mov RAX,QWORD PTR [RIP+.L_64a358]
            cmp QWORD PTR [RBX+144],RAX
            jne .L_4070b8

            mov RCX,QWORD PTR [RBX+48]
            movabs RDX,6148914691236517206
            mov RDI,QWORD PTR [RBX+112]
            mov RAX,RCX
            sar RCX,63
            imul RDX
            mov RSI,RDX
            sub RSI,RCX
.L_407132:

            call .L_41b290
.L_407137:

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [RBX+128],RAX
            jne .L_4070b8

            cmp BYTE PTR [RBX+46],0
            je .L_407410

            lea R12,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R15
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4071ed:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4071f2:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_4072b3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4072b8:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_4072c9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,244
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407307:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_40be17]
            mov EDX,25
.L_407318:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBX+8]
            lea R14,QWORD PTR [RSP+112]
            lea RSI,QWORD PTR [RSP+32]
            mov RDI,R14
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+40],EAX
            call .L_402fe0
.L_407340:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            lea RDI,QWORD PTR [R12+8]
.L_40734f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be15]
            mov EDX,1
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407368:

            mov RDI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_40737b

            call _ZdlPv@PLT
.L_40737b:

            cmp BYTE PTR [RSP+144],0
            je .L_40744e
.L_407389:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_4073ca

            call _ZdlPv@PLT
.L_4073ca:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],RDX
            mov QWORD PTR [RSP+264],R15
            call _ZNSt8ios_baseD2Ev@PLT
.L_407410:

            mov EDI,32
.L_407415:

            call _Znwm@PLT
.L_40741a:

            lea RDX,QWORD PTR [RIP+.L_40c0f2]
            mov R12,RAX
            lea RAX,QWORD PTR [RAX+16]
            mov RDI,R12
            lea RSI,QWORD PTR [RDX-42]
            mov QWORD PTR [R12],RAX
.L_407433:

            call .L_402f10
.L_407438:

            mov QWORD PTR [RBX+144],R12
            mov DWORD PTR [RBX+152],14
            jmp .L_4070b8
.L_40744e:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_407622

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_407585

            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_4074bf:

            call .L_402f10
.L_4074c4:

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_407636

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_4076ac

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_4076bb

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_407524:

            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,R14
            je .L_407548
.L_407543:

            call _ZdlPv@PLT
.L_407548:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_407557:

            call write@PLT
.L_40755c:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_407389

            call _ZdlPv@PLT

            jmp .L_407389
.L_407585:

            lea R14,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+80],RAX
.L_407596:

            call .L_402f10

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_407667

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_40768f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_40769e

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4075f5:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+88],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+80]
            cmp RDI,R14
            jne .L_407543

            jmp .L_407548
.L_40761d:

            call abort@PLT
.L_407622:

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R12+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_407631:

            jmp .L_407548
.L_407636:

            test RDX,RDX
            je .L_407654

            cmp RDX,1
            je .L_4076c9

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_407654:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_407524
.L_407662:

            call __stack_chk_fail@PLT
.L_407667:

            test RDX,RDX
            je .L_407681

            cmp RDX,1
            je .L_4076e2

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_407681:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_4075f5
.L_40768f:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_40769e:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+80],RAX
            jmp .L_4075f5
.L_4076ac:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_4076bb:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+112],RAX
            jmp .L_407524
.L_4076c9:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_407654
.L_4076e2:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_407681
.L_4076f5:

            mov RBX,RAX
.L_4076f8:

            lea RDI,QWORD PTR [RSP+24]
            call .L_40c4d0

            mov RDI,RBX
.L_407705:

            call _Unwind_Resume@PLT
.L_40770a:

            mov RDI,QWORD PTR [RSP+112]
            add R14,16
            mov RBX,RAX
            cmp RDI,R14
            je .L_407720

            call _ZdlPv@PLT
.L_407720:

            mov RDI,R12
            call .L_40c160

            jmp .L_4076f8
.L_40772a:

            mov ESI,32
            mov RDI,R12
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_4076f8
.L_40773c:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_407754

            call _ZdlPv@PLT
.L_407754:

            call _ZSt9terminatev@PLT
.L_407759:

            jmp .L_40773c
.L_40775b:

            mov RBX,RAX
            jmp .L_407720
.L_407760:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_4076f8
.L_40776f:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],RDX
.L_407797:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+264],R15
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_4076f8
.L_4077ae:

            mov RBX,RAX
            jmp .L_407797
.L_4077b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4077c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,712
.L_4077d4:

            mov EDI,DWORD PTR [RDI+152]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],R9
            test EDI,EDI
            jne .L_407980

            cmp QWORD PTR [RBP+112],0
            je .L_407980

            movsxd R13,EDX
            mov EAX,R13D
            shr EAX,31
            cmp R13D,ECX
            setg R12B
            or R12B,AL
            jne .L_407c18

            cmp ECX,DWORD PTR [RSI+8]
            mov R15,RSI
            mov DWORD PTR [RSP+16],R8D
            jg .L_407c18

            movdqu XMM0,XMMWORD PTR [RSI]
            sub ECX,R13D
            lea RDX,QWORD PTR [RSP+160]
            movsxd RAX,R13D
            mov RDI,RBP
            mov QWORD PTR [RSP+160],0
            movaps XMMWORD PTR [RSP+144],XMM0
            mov DWORD PTR [RSP+152],ECX
            mov ECX,DWORD PTR [RSP+768]
            add QWORD PTR [RSP+144],RAX
            test ECX,ECX
            mov EAX,0
            cmovne RAX,RDX
            mov DWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+96],RAX
.L_407889:

            call .L_403bc0
.L_40788e:

            mov RBX,QWORD PTR [RBP+120]
            add EAX,1
            cmp DWORD PTR [RSP+768],EAX
            mov R8D,DWORD PTR [RSP+16]
            cmovle EAX,DWORD PTR [RSP+768]
            cmp BYTE PTR [RBX],0
            mov DWORD PTR [RSP+76],EAX
            je .L_4080f0

            test R13D,R13D
            jne .L_407950

            cmp BYTE PTR [RBX+1],1
            je .L_409224

            cmp R8D,2
            mov R8D,1
            je .L_409224
.L_4078d9:

            mov RAX,QWORD PTR [RBP+72]
            test RAX,RAX
            je .L_40822f
.L_4078e6:

            mov ECX,DWORD PTR [RSP+152]
            movsxd R13,EAX
            cmp EAX,ECX
            jg .L_407950

            cmp BYTE PTR [RBP+96],0
            movsxd R14,EAX
            mov R9,QWORD PTR [RSP+144]
            mov RDI,QWORD PTR [RBP+64]
            je .L_4081dd

            lea RAX,QWORD PTR [RDI+R14*1]
            cmp RDI,RAX
            lea RAX,QWORD PTR [R9+R14*1]
            jb .L_407931

            jmp .L_408210
          .byte 0x90
.L_407920:

            add R9,1
            add RDI,1
            cmp R9,RAX
            je .L_408210
.L_407931:

            movzx EDX,BYTE PTR [R9]
            lea R10D,DWORD PTR [RDX-65]
            lea ESI,DWORD PTR [RDX+32]
            cmp R10B,26
            cmovb EDX,ESI
            cmp DL,BYTE PTR [RDI]
            je .L_407920

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407950:

            xor R12D,R12D
.L_407953:

            mov RCX,QWORD PTR [RSP+696]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40a5c9

            add RSP,712
.L_407974:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_407980:

            cmp BYTE PTR [RBP+46],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_407a28:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407a2d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_407afe:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407b03:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_407b13:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,538
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407b4f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be31]
            mov EDX,13
.L_407b5f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+144]
            lea RDI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407b7b:

            cmp BYTE PTR [RSP+304],0
            je .L_407f70
.L_407b89:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_407bc6

            call _ZdlPv@PLT
.L_407bc6:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            xor R12D,R12D
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RCX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RCX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_407953
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c18:

            cmp BYTE PTR [RBP+46],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_407cc4:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407cc9:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_407d9a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_407d9f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_407daf:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,544
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407deb:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c0f8]
            mov EDX,35
.L_407dfb:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_407e00:

            cmp BYTE PTR [RSP+304],0
            jne .L_407b89

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_409211

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_408c90

            lea RCX,QWORD PTR [RSP+272]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+88],RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_407ea0:

            call .L_402f10
.L_407ea5:

            mov RSI,QWORD PTR [RSP+272]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            cmp RSI,RAX
            je .L_409623

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_4097d7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_4097ef

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_407f1d:

            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_407f47
.L_407f42:

            call _ZdlPv@PLT
.L_407f47:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_407f5c:

            call write@PLT
.L_407f61:

            jmp .L_4080c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407f70:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_408c78

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            ja .L_408110

            lea RCX,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+80],RCX
            mov QWORD PTR [RSP+240],RAX
.L_407fff:

            call .L_402f10
.L_408004:

            mov RSI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            cmp RSI,RAX
            je .L_408d60

            mov RAX,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+256]
            add RAX,16
            cmp RDI,RAX
            je .L_408ddd

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
            je .L_408df5

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RAX
.L_40807c:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4080a6
.L_4080a1:

            call _ZdlPv@PLT
.L_4080a6:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_4080bb:

            call write@PLT
.L_4080c0:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_407b89

            call _ZdlPv@PLT

            jmp .L_407b89
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4080f0:

            mov RAX,QWORD PTR [RBP+72]
            test RAX,RAX
            je .L_408bc0

            test R13D,R13D
            jne .L_407950

            jmp .L_4078e6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408110:

            lea RCX,QWORD PTR [RSP+272]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+88],RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_408132:

            call .L_402f10
.L_408137:

            mov RSI,QWORD PTR [RSP+272]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            cmp RSI,RAX
            je .L_408da0

            mov RAX,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+288]
            add RAX,16
            cmp RDI,RAX
            je .L_408e0b

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
            je .L_408e23

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RAX
.L_4081af:

            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            jne .L_4080a1

            jmp .L_4080a6
.L_4081dd:

            mov RDX,R14
            mov RSI,R9
            mov DWORD PTR [RSP+32],R8D
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP+16],R9
            call memcmp@PLT

            test EAX,EAX
            jne .L_407950

            mov R9,QWORD PTR [RSP+16]
            mov R8D,DWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [R9+R14*1]
.L_408210:

            sub ECX,R13D
            mov QWORD PTR [RSP+144],RAX
            cmp R8D,2
            mov EAX,1
            mov DWORD PTR [RSP+152],ECX
            cmovne R8D,EAX
.L_40822f:

            cmp DWORD PTR [RSP+76],5
            movzx EAX,BYTE PTR [RBP+45]
            movsxd RCX,DWORD PTR [RBX+12]
            mov BYTE PTR [RSP+143],0
            mov DWORD PTR [RSP+104],EAX
            setle AL
            and AL,BYTE PTR [RBP+136]
            mov DWORD PTR [RSP+112],ECX
            mov BYTE PTR [RSP+111],AL
            mov EAX,262144
            cqo 
            idiv RCX
            mov DWORD PTR [RSP+116],EAX
.L_408267:

            cmp R8D,2
            mov EAX,2
            cmovne EAX,DWORD PTR [RSP+104]
            cmp BYTE PTR [RSP+111],0
            mov DWORD PTR [RSP+104],EAX
            je .L_4088d8

            mov EAX,DWORD PTR [R15+8]
            cmp EAX,4096
            jg .L_4088d8

            cmp DWORD PTR [RSP+76],1
            setg DL
            cmp EAX,8
            setle AL
            or DL,AL
            je .L_408a60

            movzx R14D,BYTE PTR [RIP+.L_64a340]
            test R14B,R14B
            jne .L_409ce8

            mov BYTE PTR [RSP+111],DL
            mov DWORD PTR [RSP+96],1
.L_4082c6:

            mov RAX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+120],1
            mov QWORD PTR [RSP+176],RAX
            mov EAX,DWORD PTR [RSP+152]
            mov DWORD PTR [RSP+184],EAX
.L_4082e9:

            cmp BYTE PTR [RSP+111],0
            je .L_408e39

            test R14B,R14B
            je .L_40866d

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_40839f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4083a4:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_408475:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40847a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_40848a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,744
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4084c6:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_4084d6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40850f:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408523:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_40855e:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+64]
.L_408573:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RIP+.L_40bf05]
            mov EDX,15
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4085a7:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_4085c2

            call _ZdlPv@PLT
.L_4085c2:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4085dd

            call _ZdlPv@PLT
.L_4085dd:

            cmp BYTE PTR [RSP+304],0
            je .L_409e76
.L_4085eb:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_408628

            call _ZdlPv@PLT
.L_408628:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_40866d:

            lea RSI,QWORD PTR [RSP+176]
            sub RSP,8
.L_408679:

            mov RDI,QWORD PTR [RBP+120]
            mov EAX,DWORD PTR [RSP+84]
            mov ECX,1
            mov RDX,R15
            push RAX
            mov R9,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+120]
.L_408694:

            call .L_4289f0

            test AL,AL
            pop R8
            pop R9
.L_40869f:

            jne .L_408856

            cmp BYTE PTR [RSP+120],0
            jne .L_407953

            cmp BYTE PTR [RBP+46],0
            je .L_407953

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,749
            mov RDI,RBX
            call .L_40c530
.L_4086d6:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bf15]
.L_4086e1:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_4086e6:

            mov RDI,RBX
            call .L_40c160

            jmp .L_407953
.L_4086f3:

            xor R13D,R13D
            cmp BYTE PTR [RIP+.L_64a340],0
            je .L_40882f

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,668
            mov RDI,RBX
.L_40871a:

            call .L_40c530
.L_40871f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_40872f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_408768:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40877c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R14,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R14
            mov QWORD PTR [RSP+88],R14
            call .L_4159f0
.L_4087b2:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R13
.L_4087c5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40bebb]
            mov RDI,R13
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_4087f0:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R14
            add RAX,16
            cmp RDI,RAX
            je .L_408809

            call _ZdlPv@PLT
.L_408809:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_408824

            call _ZdlPv@PLT
.L_408824:

            mov RDI,RBX
            xor R13D,R13D
            call .L_40c160
.L_40882f:

            cmp DWORD PTR [RSP+76],1
            jg .L_409010

            jne .L_408856

            mov RAX,QWORD PTR [RSP+160]
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RDX],RAX
            mov EAX,DWORD PTR [RSP+168]
            mov DWORD PTR [RDX+8],EAX
.L_408856:

            test R13D,R13D
            jle .L_408877

            mov EAX,DWORD PTR [RSP+768]
            test EAX,EAX
            jle .L_408877

            mov RDX,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RDX+8]
            sub QWORD PTR [RDX],R13
            add EAX,R13D
            mov DWORD PTR [RDX+8],EAX
.L_408877:

            mov EBX,DWORD PTR [RSP+76]
            cmp DWORD PTR [RSP+768],EBX
            jle .L_4088c7

            mov EDX,DWORD PTR [RSP+768]
            movsxd RCX,EBX
            mov RSI,QWORD PTR [RSP+8]
            mov RAX,RCX
            shl RAX,4
            sub EDX,1
            add RAX,RSI
            sub EDX,EBX
            add RDX,RCX
            shl RDX,4
            lea RDX,QWORD PTR [RSI+RDX*1+16]
            nop
            nop
.L_4088b0:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RAX,RDX
            jne .L_4088b0
.L_4088c7:

            mov R12D,1
            jmp .L_407953
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4088d8:

            cmp DWORD PTR [RSP+112],500
            jg .L_408a60

            mov EAX,DWORD PTR [RSP+116]
            cmp DWORD PTR [R15+8],EAX
            jg .L_408a60

            cmp DWORD PTR [RSP+76],1
            jle .L_408a60

            movzx R14D,BYTE PTR [RIP+.L_64a340]
            mov DWORD PTR [RSP+96],1
            test R14B,R14B
            je .L_4082c6

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,698
            mov RDI,RBX
.L_40892f:

            call .L_40c530
.L_408934:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_408944:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40897d:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408991:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_4089ca:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R14
.L_4089dd:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40bee9]
            mov RDI,R14
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_408a08:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_408a23

            call _ZdlPv@PLT
.L_408a23:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_408a3e

            call _ZdlPv@PLT
.L_408a3e:

            mov RDI,RBX
            call .L_40c160

            movzx R14D,BYTE PTR [RIP+.L_64a340]
            mov DWORD PTR [RSP+96],1
            jmp .L_4082c6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408a60:

            lea RAX,QWORD PTR [RSP+144]
            mov ECX,1
            mov RDX,R15
            mov RDI,RBX
            mov QWORD PTR [RSP+120],RAX
            push 0
.L_408a7a:

            mov RSI,RAX
            lea RAX,QWORD PTR [RSP+151]
            push RAX
            mov R8D,DWORD PTR [RSP+120]
            lea R9,QWORD PTR [RSP+176]
.L_408a93:

            call .L_422330

            test AL,AL
            pop R10
            pop R11
.L_408a9e:

            jne .L_40882f

            cmp BYTE PTR [RSP+143],0
            movzx R14D,BYTE PTR [RIP+.L_64a340]
            je .L_40969d

            test R14B,R14B
            mov DWORD PTR [RSP+96],1
            je .L_4082c6

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,708
            mov RDI,RBX
            call .L_40c530
.L_408ae7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_408af7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_408b30:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408b44:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_408b7a:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R14
.L_408b8d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be4b]
            mov RDI,R14
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_408bb8:

            jmp .L_408a08
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408bc0:

            cmp DWORD PTR [RSP+76],5
            movsxd RCX,DWORD PTR [RBX+12]
            movzx EDI,BYTE PTR [RBP+45]
            mov BYTE PTR [RSP+143],0
            setle AL
            and AL,BYTE PTR [RBP+136]
            mov DWORD PTR [RSP+112],ECX
            mov DWORD PTR [RSP+104],EDI
            mov BYTE PTR [RSP+111],AL
            mov EAX,262144
            cqo 
            idiv RCX
            mov DWORD PTR [RSP+116],EAX
            lea EAX,DWORD PTR [R8-1]
            cmp EAX,1
            jbe .L_40996e

            lea RAX,QWORD PTR [RSP+144]
            mov R8D,EDI
            xor ECX,ECX
            mov RDX,R15
            mov RDI,RBX
            mov QWORD PTR [RSP+120],RAX
            push 0
.L_408c1f:

            mov RSI,RAX
            lea R13,QWORD PTR [RSP+151]
            push R13
            mov R9,QWORD PTR [RSP+112]
.L_408c31:

            call .L_422330
.L_408c36:

            test AL,AL
            pop R14
            pop RDX
.L_408c3b:

            jne .L_409050

            movzx EAX,BYTE PTR [RIP+.L_64a340]
            cmp BYTE PTR [RSP+143],0
            mov BYTE PTR [RSP+111],AL
            je .L_409833

            test AL,AL
            jne .L_409ff7
.L_408c62:

            xor R14D,R14D
            xor R13D,R13D
            mov DWORD PTR [RSP+96],0
            jmp .L_4082c6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408c78:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_408c81:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_408c86:

            jmp .L_4080a6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408c90:

            lea RCX,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov R15,RCX
            mov QWORD PTR [RSP+80],RCX
            mov QWORD PTR [RSP+240],RAX
.L_408caf:

            call .L_402f10
.L_408cb4:

            mov RSI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            cmp RSI,RAX
            je .L_409660

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_409805

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40981d

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_408d2c:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_407f42

            jmp .L_407f47
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d60:

            test RDX,RDX
            je .L_408d84

            cmp RDX,1
            je .L_40994f

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
.L_408d84:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+240]
            jmp .L_40807c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408da0:

            test RDX,RDX
            je .L_408dc4

            cmp RDX,1
            je .L_409930

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
.L_408dc4:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+272]
            jmp .L_4081af
.L_408ddd:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
.L_408df5:

            mov RAX,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+240],RDI
            jmp .L_40807c
.L_408e0b:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RCX
.L_408e23:

            mov RAX,QWORD PTR [RSP+88]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+272],RDI
            jmp .L_4081af
.L_408e39:

            cmp DWORD PTR [RSP+112],500
            jg .L_40922f

            mov EAX,DWORD PTR [RSP+116]
            cmp DWORD PTR [RSP+184],EAX
            jg .L_40922f

            test R14B,R14B
            je .L_408f8f

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,754
            mov RDI,RBX
.L_408e78:

            call .L_40c530
.L_408e7d:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_408e8d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_408ec6:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_408eda:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_408f13:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R14
.L_408f26:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R14,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40bf31]
            mov RDI,R14
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_408f51:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_408f6c

            call _ZdlPv@PLT
.L_408f6c:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_408f87

            call _ZdlPv@PLT
.L_408f87:

            mov RDI,RBX
            call .L_40c160
.L_408f8f:

            lea RSI,QWORD PTR [RSP+176]
            sub RSP,8
.L_408f9b:

            mov RDI,QWORD PTR [RBP+120]
            mov EAX,DWORD PTR [RSP+84]
            mov RDX,R15
            push RAX
            mov R9,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+112]
.L_408fb5:

            call .L_417d20

            test AL,AL
            pop RSI
            pop RDI
.L_408fbe:

            jne .L_408856

            cmp BYTE PTR [RSP+120],0
            jne .L_407953

            cmp BYTE PTR [RBP+46],0
            je .L_407953

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,760
            mov RDI,RBX
            call .L_40c530
.L_408ff5:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bf42]
.L_409000:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_409005:

            jmp .L_4086e6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409010:

            mov RAX,QWORD PTR [RSP+160]
            movzx R14D,BYTE PTR [RIP+.L_64a340]
            mov BYTE PTR [RSP+120],0
            mov DWORD PTR [RSP+104],2
            mov DWORD PTR [RSP+96],1
            mov QWORD PTR [RSP+176],RAX
            mov EAX,DWORD PTR [RSP+168]
            mov DWORD PTR [RSP+184],EAX
            jmp .L_4082e9
.L_409050:

            cmp BYTE PTR [RIP+.L_64a340],0
            jne .L_409976
.L_40905d:

            cmp QWORD PTR [RSP+96],0
            je .L_4088c7

            mov RDI,RBP
.L_40906c:

            call .L_407070

            test RAX,RAX
            je .L_407950

            lea RSI,QWORD PTR [RSP+160]
            push 0
.L_409084:

            push R13
            mov R8D,1
            mov ECX,1
            mov RDX,R15
            mov R9,RSI
            mov RDI,RAX
            call .L_422330

            test AL,AL
            pop RBX
            pop R13
.L_4090a4:

            jne .L_4086f3

            movzx EAX,BYTE PTR [RIP+.L_64a340]
            cmp BYTE PTR [RSP+143],0
            mov BYTE PTR [RSP+111],AL
            je .L_40a3eb

            test AL,AL
            je .L_408c62

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,654
            mov RDI,RBX
            call .L_40c530
.L_4090e7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_4090f7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_409130:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_409144:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R14,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R14
            mov QWORD PTR [RSP+88],R14
            call .L_4159f0
.L_40917a:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R13
.L_40918d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be80]
            mov RDI,R13
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_4091b8:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R14
            add RAX,16
            cmp RDI,RAX
            je .L_4091d1

            call _ZdlPv@PLT
.L_4091d1:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4091ec

            call _ZdlPv@PLT
.L_4091ec:

            mov RDI,RBX
            xor R13D,R13D
            call .L_40c160

            movzx R14D,BYTE PTR [RIP+.L_64a340]
            mov BYTE PTR [RSP+111],0
            mov DWORD PTR [RSP+96],0
            jmp .L_4082c6
.L_409211:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40921a:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40921f:

            jmp .L_407f47
.L_409224:

            mov R8D,2
            jmp .L_4078d9
.L_40922f:

            test R14B,R14B
            je .L_4095a8

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_4092da:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4092df:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_4093b0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4093b5:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_4093c5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,765
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_409401:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_409411:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40944a:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40945e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_409499:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+64]
.L_4094ae:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-205377]
            mov EDX,11
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4094e2:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_4094fd

            call _ZdlPv@PLT
.L_4094fd:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_409518

            call _ZdlPv@PLT
.L_409518:

            cmp BYTE PTR [RSP+304],0
            je .L_40a0e9
.L_409526:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_409563

            call _ZdlPv@PLT
.L_409563:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_4095a8:

            lea RSI,QWORD PTR [RSP+176]
            sub RSP,8
.L_4095b4:

            mov RDI,QWORD PTR [RBP+120]
            mov EAX,DWORD PTR [RSP+84]
            mov RDX,R15
            push RAX
            mov R9,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+112]
.L_4095ce:

            call .L_428390

            test AL,AL
            pop RDX
            pop RCX
            jne .L_408856

            cmp BYTE PTR [RSP+120],0
            jne .L_407953

            cmp BYTE PTR [RBP+46],0
            je .L_407953

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,770
            mov RDI,RBX
            call .L_40c530
.L_40960e:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bf6b]
.L_409619:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40961e:

            jmp .L_4086e6
.L_409623:

            test RDX,RDX
            je .L_409647

            cmp RDX,1
            je .L_409e38

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
.L_409647:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+272]
            jmp .L_407f1d
.L_409660:

            test RDX,RDX
            je .L_409684

            cmp RDX,1
            je .L_409e57

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
.L_409684:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+240]
            jmp .L_408d2c
.L_40969d:

            test R14B,R14B
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,715
            mov RDI,RBX
.L_4096bd:

            call .L_40c530
.L_4096c2:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_4096d2:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40970b:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40971f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R15
            mov QWORD PTR [RSP+88],R15
            call .L_4159f0
.L_409755:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,RBP
.L_409768:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be58]
            mov RDI,RBP
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_409793:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R15
            add RAX,16
            cmp RDI,RAX
            je .L_4097ac

            call _ZdlPv@PLT
.L_4097ac:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4097c7

            call _ZdlPv@PLT
.L_4097c7:

            mov RDI,RBX
            xor R12D,R12D
            call .L_40c160

            jmp .L_407953
.L_4097d7:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_4097ef:

            mov RAX,QWORD PTR [RSP+88]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+272],RDI
            jmp .L_407f1d
.L_409805:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40981d:

            mov RAX,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+240],RDI
            jmp .L_408d2c
.L_409833:

            cmp BYTE PTR [RSP+111],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,631
            mov RDI,RBX
.L_409855:

            call .L_40c530
.L_40985a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_40986a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_4098a3:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_4098b7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R15
            mov QWORD PTR [RSP+88],R15
            call .L_4159f0
.L_4098ed:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,RBP
.L_409900:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov RBP,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be58]
            mov RDI,RBP
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40992b:

            jmp .L_409793
.L_409930:

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_408dc4
.L_40994f:

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_408d84
.L_40996e:

            xor R13D,R13D
            jmp .L_408267
.L_409976:

            lea RBX,QWORD PTR [RSP+304]
            mov BYTE PTR [RSP+304],0
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+648],0
            mov QWORD PTR [RSP+640],0
            mov BYTE PTR [RSP+649],0
            xor ESI,ESI
            mov QWORD PTR [RSP+424],RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+672],0
            mov QWORD PTR [RSP+680],0
            mov QWORD PTR [RSP+312],R14
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+24],RAX
.L_409a18:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_409a1d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+312],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+424],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+368],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+384],16
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+408],0
            mov QWORD PTR [RSP+392],RAX
.L_409aee:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_409af3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_409b03:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,637
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_409b3f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_409b4f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_409b88:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_409b9c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_409bd4:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+64]
.L_409be9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+64],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RIP+.L_40be6e]
            mov EDX,17
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_409c1d:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_409c38

            call _ZdlPv@PLT
.L_409c38:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_409c53

            call _ZdlPv@PLT
.L_409c53:

            cmp BYTE PTR [RSP+304],0
            je .L_40a26a
.L_409c61:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+312],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+424],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_409c9e

            call _ZdlPv@PLT
.L_409c9e:

            mov RAX,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+320],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_40905d
.L_409ce8:

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,690
            mov RDI,RBX
.L_409cff:

            call .L_40c530
.L_409d04:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_409d14:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_409d4d:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_409d61:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+272]
            lea RSI,QWORD PTR [RSP+144]
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            call .L_4159f0
.L_409d9c:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+16]
.L_409db1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_40bece]
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_409de0:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_409dfb

            call _ZdlPv@PLT
.L_409dfb:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_409e16

            call _ZdlPv@PLT
.L_409e16:

            mov RDI,RBX
            call .L_40c160

            mov BYTE PTR [RSP+111],R14B
            mov DWORD PTR [RSP+96],1
            movzx R14D,BYTE PTR [RIP+.L_64a340]
            jmp .L_4082c6
.L_409e38:

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+280]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_409647
.L_409e57:

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+248]
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_409684
.L_409e76:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_40a69a

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_40a431

            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_409efd:

            call .L_402f10
.L_409f02:

            mov RCX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a6fa

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_40a890

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a8a8

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_409f7f:

            mov RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_409fb1
.L_409fac:

            call _ZdlPv@PLT
.L_409fb1:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_409fc6:

            call write@PLT
.L_409fcb:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_4085eb

            call _ZdlPv@PLT

            jmp .L_4085eb
.L_409ff7:

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,625
            mov RDI,RBX
.L_40a00e:

            call .L_40c530
.L_40a013:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_40a023:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40a05c:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40a070:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R14,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R14
            mov QWORD PTR [RSP+88],R14
            call .L_4159f0
.L_40a0a6:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R13
.L_40a0b9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R13,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be4b]
            mov RDI,R13
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40a0e4:

            jmp .L_4091b8
.L_40a0e9:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_40a6ad

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_40a4fd

            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_40a170:

            call .L_402f10
.L_40a175:

            mov RCX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a954

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_40a926

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a93e

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_40a1f2:

            mov RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_40a224
.L_40a21f:

            call _ZdlPv@PLT
.L_40a224:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_40a239:

            call write@PLT
.L_40a23e:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_409526

            call _ZdlPv@PLT

            jmp .L_409526
.L_40a26a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RAX
            mov RAX,QWORD PTR [RSP+360]
            test RAX,RAX
            je .L_40a98e

            mov RDX,QWORD PTR [RSP+344]
            mov RSI,QWORD PTR [RSP+352]
            cmp RAX,RDX
            jbe .L_40a5ce

            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+272],RDX
            mov RDX,RAX
.L_40a2f1:

            call .L_402f10
.L_40a2f6:

            mov RCX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a8ec

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+288]
            add RCX,16
            cmp RDI,RCX
            je .L_40a8be

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a8d6

            mov QWORD PTR [RSP+272],RDI
            mov QWORD PTR [RSP+288],RCX
.L_40a373:

            mov RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+280],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_40a3a5
.L_40a3a0:

            call _ZdlPv@PLT
.L_40a3a5:

            movsxd RDX,DWORD PTR [RSP+216]
            mov RSI,QWORD PTR [RSP+208]
            mov EDI,2
.L_40a3ba:

            call write@PLT
.L_40a3bf:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+304],1
            add RAX,16
            cmp RDI,RAX
            je .L_409c61

            call _ZdlPv@PLT

            jmp .L_409c61
.L_40a3eb:

            cmp BYTE PTR [RSP+111],0
            jne .L_40a734
.L_40a3f6:

            cmp BYTE PTR [RBP+46],0
            je .L_407950

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,664
            mov RDI,RBX
.L_40a417:

            call .L_40c530
.L_40a41c:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bea9]
.L_40a427:

            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40a42c:

            jmp .L_4097c7
.L_40a431:

            mov RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+240],RAX
.L_40a445:

            call .L_402f10
.L_40a44a:

            mov RCX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a6c0

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_40a862

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a87a

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_40a4c7:

            mov RAX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_409fac

            jmp .L_409fb1
.L_40a4fd:

            mov RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+240],RAX
.L_40a511:

            call .L_402f10
.L_40a516:

            mov RCX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40aa37

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_40aa09

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40aa21

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_40a593:

            mov RAX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_40a21f

            jmp .L_40a224
.L_40a5c9:

            call __stack_chk_fail@PLT
.L_40a5ce:

            mov RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+240],RAX
.L_40a5e2:

            call .L_402f10
.L_40a5e7:

            mov RCX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40a9cf

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+256]
            add RCX,16
            cmp RDI,RCX
            je .L_40a9a1

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
            je .L_40a9b9

            mov QWORD PTR [RSP+240],RDI
            mov QWORD PTR [RSP+256],RCX
.L_40a664:

            mov RAX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            jne .L_40a3a0

            jmp .L_40a3a5
.L_40a69a:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40a6a3:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40a6a8:

            jmp .L_409fb1
.L_40a6ad:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40a6b6:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40a6bb:

            jmp .L_40a224
.L_40a6c0:

            test RDX,RDX
            je .L_40a6e9

            cmp RDX,1
            jne .L_40ac39

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
.L_40a6e9:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a4c7
.L_40a6fa:

            test RDX,RDX
            je .L_40a723

            cmp RDX,1
            jne .L_40ac1a

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
.L_40a723:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_409f7f
.L_40a734:

            lea RBX,QWORD PTR [RSP+304]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,660
            mov RDI,RBX
.L_40a74b:

            call .L_40c530
.L_40a750:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be3f]
            mov EDX,6
.L_40a760:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov DWORD PTR [RSP+200],EAX
            lea RAX,QWORD PTR [RSP+240]
            mov RDI,RAX
            mov QWORD PTR [RSP+80],RAX
            call .L_402fe0
.L_40a799:

            mov RDX,QWORD PTR [RSP+248]
            mov RSI,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RBX+8]
.L_40a7ad:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be46]
            mov EDX,2
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea R15,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [RSP+120]
            mov RDI,R15
            mov QWORD PTR [RSP+88],R15
            call .L_4159f0
.L_40a7e3:

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+272]
            mov RDI,R12
.L_40a7f6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be49]
            mov EDX,1
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_40be95]
            mov RDI,R12
            call _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.L_40a821:

            mov RDI,QWORD PTR [RSP+272]
            mov RAX,R15
            add RAX,16
            cmp RDI,RAX
            je .L_40a83a

            call _ZdlPv@PLT
.L_40a83a:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_40a855

            call _ZdlPv@PLT
.L_40a855:

            mov RDI,RBX
            call .L_40c160

            jmp .L_40a3f6
.L_40a862:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a87a:

            mov RAX,QWORD PTR [RSP+80]
            add RAX,16
            mov QWORD PTR [RSP+240],RAX
            jmp .L_40a4c7
.L_40a890:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a8a8:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,16
            mov QWORD PTR [RSP+272],RAX
            jmp .L_409f7f
.L_40a8be:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a8d6:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,16
            mov QWORD PTR [RSP+272],RAX
            jmp .L_40a373
.L_40a8ec:

            test RDX,RDX
            je .L_40a915

            cmp RDX,1
            jne .L_40ab86

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
.L_40a915:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a373
.L_40a926:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a93e:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,16
            mov QWORD PTR [RSP+272],RAX
            jmp .L_40a1f2
.L_40a954:

            test RDX,RDX
            je .L_40a97d

            cmp RDX,1
            jne .L_40aa71

            movzx EAX,BYTE PTR [RSP+288]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
.L_40a97d:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a1f2
.L_40a98e:

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+88]
.L_40a997:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40a99c:

            jmp .L_40a3a5
.L_40a9a1:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40a9b9:

            mov RAX,QWORD PTR [RSP+80]
            add RAX,16
            mov QWORD PTR [RSP+240],RAX
            jmp .L_40a664
.L_40a9cf:

            test RDX,RDX
            je .L_40a9f8

            cmp RDX,1
            jne .L_40aa8b

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
.L_40a9f8:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a664
.L_40aa09:

            mov QWORD PTR [RSP+208],RSI
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP+224],RAX
.L_40aa21:

            mov RAX,QWORD PTR [RSP+80]
            add RAX,16
            mov QWORD PTR [RSP+240],RAX
            jmp .L_40a593
.L_40aa37:

            test RDX,RDX
            je .L_40aa60

            cmp RDX,1
            jne .L_40aaee

            movzx EAX,BYTE PTR [RSP+256]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
.L_40aa60:

            mov QWORD PTR [RSP+216],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_40a593
.L_40aa71:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            jmp .L_40a97d
.L_40aa8b:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            jmp .L_40a9f8
.L_40aaa5:

            mov RBP,RAX
            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+272]
            add RAX,16
            cmp RDI,RAX
            je .L_40aac3

            call _ZdlPv@PLT
.L_40aac3:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_40aade

            call _ZdlPv@PLT
.L_40aade:

            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
.L_40aae9:

            call _Unwind_Resume@PLT
.L_40aaee:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            jmp .L_40aa60
.L_40ab08:

            jmp .L_40aaa5
.L_40ab0a:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+208]
            add RAX,16
            cmp RDI,RAX
            je .L_40ab25

            call _ZdlPv@PLT
.L_40ab25:

            call _ZSt9terminatev@PLT
.L_40ab2a:

            mov RBP,RAX
.L_40ab2d:

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+424],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40ab4b:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R14-24]
            mov RDX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+312],R14
            mov QWORD PTR [RSP+RAX*1+312],RDX
            jmp .L_40ab2d
.L_40ab72:

            mov RBP,RAX
            jmp .L_40aac3
.L_40ab7a:

            mov RBP,RAX
            jmp .L_40aade
.L_40ab82:

            jmp .L_40ab7a
.L_40ab84:

            jmp .L_40ab0a
.L_40ab86:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            jmp .L_40a915
.L_40aba0:

            jmp .L_40ab0a
.L_40aba5:

            jmp .L_40ab72
.L_40aba7:

            jmp .L_40ab7a
.L_40aba9:

            jmp .L_40ab72
.L_40abab:

            jmp .L_40ab7a
.L_40abad:

            jmp .L_40ab72
.L_40abaf:

            jmp .L_40ab7a
.L_40abb1:

            jmp .L_40ab7a
.L_40abb3:

            jmp .L_40ab7a
.L_40abb5:

            jmp .L_40ab0a
.L_40abba:

            jmp .L_40ab2a
.L_40abbf:

            jmp .L_40aaa5
.L_40abc4:

            jmp .L_40aaa5
.L_40abc9:

            jmp .L_40ab72
.L_40abcb:

            jmp .L_40ab7a
.L_40abcd:

            jmp .L_40aaa5
.L_40abd2:

            jmp .L_40ab72
.L_40abd4:

            jmp .L_40ab72
.L_40abd6:

            jmp .L_40ab7a
.L_40abd8:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40abec:

            jmp .L_40ab7a
.L_40abee:

            jmp .L_40abd8
.L_40abf0:

            jmp .L_40ab4b
.L_40abf5:

            jmp .L_40aaa5
.L_40abfa:

            jmp .L_40ab72
.L_40abff:

            jmp .L_40ab7a
.L_40ac04:

            jmp .L_40abd8
.L_40ac06:

            jmp .L_40ab4b
.L_40ac0b:

            jmp .L_40ab2a
.L_40ac10:

            jmp .L_40ab7a
.L_40ac15:

            jmp .L_40ab0a
.L_40ac1a:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+280]
            jmp .L_40a723
.L_40ac34:

            jmp .L_40ab7a
.L_40ac39:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+248]
            jmp .L_40a6e9
.L_40ac53:

            jmp .L_40ab0a
.L_40ac58:

            jmp .L_40aaa5
.L_40ac5d:

            jmp .L_40ab72
.L_40ac62:

            jmp .L_40ab7a
.L_40ac67:

            jmp .L_40abd8
.L_40ac6c:

            jmp .L_40aaa5
.L_40ac71:

            jmp .L_40aaa5
.L_40ac76:

            jmp .L_40ab72
.L_40ac7b:

            jmp .L_40ab7a
.L_40ac80:

            jmp .L_40ab4b
.L_40ac85:

            jmp .L_40ab2a
.L_40ac8a:

            jmp .L_40ab72
.L_40ac8f:

            jmp .L_40ab7a
.L_40ac94:

            jmp .L_40aaa5
.L_40ac99:

            jmp .L_40ab7a
.L_40ac9e:

            jmp .L_40ab7a
.L_40aca3:

            jmp .L_40ab0a
.L_40aca8:

            jmp .L_40ab7a
.L_40acad:

            jmp .L_40abd8
.L_40acb2:

            jmp .L_40ab4b
.L_40acb7:

            jmp .L_40ab2a
.L_40acbc:

            jmp .L_40aaa5
.L_40acc1:

            jmp .L_40ab72
.L_40acc6:

            jmp .L_40ab0a
.L_40accb:

            jmp .L_40ab0a
.L_40acd0:

            jmp .L_40aaa5
.L_40acd5:

            jmp .L_40ab72
.L_40acda:

            jmp .L_40aaa5
.L_40acdf:

            jmp .L_40ab0a
.L_40ace4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40acf0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,536
.L_40ad04:

            mov R10D,DWORD PTR [RDI+152]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            test R10D,R10D
            je .L_40ad60

            movzx EDX,BYTE PTR [RDI+46]
            test DL,DL
            jne .L_40ae40
.L_40ad2f:

            mov RBX,QWORD PTR [RSP+520]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40b52c

            add RSP,536
.L_40ad4f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ad60:

            test R9D,R9D
            mov R12,RSI
            mov R15,RCX
            sete BYTE PTR [RSP+8]
            test RCX,RCX
            mov R13,R8
            mov R14D,R9D
            movzx EAX,BYTE PTR [RSP+8]
            jne .L_40ae30

            xor ESI,ESI
            test AL,AL
            je .L_40ae30
.L_40ad8c:

            lea RBX,QWORD PTR [RSP+128]
            lea RCX,QWORD PTR [RBX+272]
            mov RAX,RBX
            nop
            nop
.L_40ada0:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RAX,RCX
            jne .L_40ada0

            cmp ESI,17
            jg .L_40b140

            sub RSP,8
.L_40adc4:

            mov ECX,DWORD PTR [R12+8]
            mov R8D,EDX
            push RSI
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBP
            mov R9,RBX
.L_40add8:

            call .L_4077c0
.L_40addd:

            xor ECX,ECX
            test AL,AL
            pop RSI
            pop RDI
.L_40ade3:

            je .L_40b1e0
.L_40ade9:

            test R15,R15
            je .L_40adfc

            movsxd RAX,DWORD PTR [RBX+8]
            add RAX,QWORD PTR [RBX]
            sub RAX,QWORD PTR [R12]
            mov DWORD PTR [R15],EAX
.L_40adfc:

            test R13,R13
            sete DL
            or DL,BYTE PTR [RSP+8]
            je .L_40b0a7

            test RCX,RCX
            je .L_40b1f8
.L_40ae15:

            mov RDI,RCX
            mov BYTE PTR [RSP+8],DL
            call _ZdaPv@PLT

            movzx EDX,BYTE PTR [RSP+8]
            jmp .L_40ad2f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ae30:

            lea ESI,DWORD PTR [R14+1]
            jmp .L_40ad8c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ae40:

            lea RBX,QWORD PTR [RSP+128]
            mov BYTE PTR [RSP+128],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40aed9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40aede:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_40af9b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40afa0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40bd9b]
            mov EDX,10
.L_40afb0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,795
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40afec:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40be31]
            mov EDX,13
.L_40affc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RAX,QWORD PTR [RBP+144]
            lea RDI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40b018:

            cmp BYTE PTR [RSP+128],0
            je .L_40b202
.L_40b026:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40b05b

            call _ZdlPv@PLT
.L_40b05b:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EDX,EDX
            jmp .L_40ad2f
.L_40b0a7:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RCX
            mov BYTE PTR [RSP+16],DL
.L_40b0b3:

            call .L_403bc0

            cmp R14D,EAX
            mov RCX,QWORD PTR [RSP+8]
            jg .L_40b1cb

            test R14D,R14D
            jle .L_40b1e7

            lea EAX,DWORD PTR [R14-1]
            lea RBP,QWORD PTR [RBX+16]
            shl RAX,4
            lea RBX,QWORD PTR [RBX+RAX*1+32]
            jmp .L_40b0f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b0e8:

            add RBP,16
            add R13,8
            cmp RBX,RBP
            je .L_40b1e7
.L_40b0f9:

            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RSP+8],RCX
            mov ESI,DWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RBP]
            mov RDX,QWORD PTR [RAX]
            call QWORD PTR [RAX+8]

            test AL,AL
            mov RCX,QWORD PTR [RSP+8]
            jne .L_40b0e8

            test RCX,RCX
            mov BYTE PTR [RSP+8],AL
            je .L_40b1e0

            mov RDI,RCX
            call _ZdaPv@PLT

            movzx EDX,BYTE PTR [RSP+8]
            jmp .L_40ad2f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b140:

            movsxd RCX,ESI
            mov DWORD PTR [RSP+28],EDX
            mov DWORD PTR [RSP+24],ESI
            mov RDI,RCX
            mov QWORD PTR [RSP+16],RCX
            shl RDI,4
            call _Znam@PLT

            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+28]
            mov RBX,RAX
            mov ESI,DWORD PTR [RSP+24]
            sub RCX,1
.L_40b170:

            sub RCX,1
            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RCX,-1
            jne .L_40b170

            sub RSP,8
.L_40b190:

            mov ECX,DWORD PTR [R12+8]
            mov R8D,EDX
            push RSI
            xor EDX,EDX
            mov R9,RBX
            mov RSI,R12
            mov RDI,RBP
            call .L_4077c0
.L_40b1a9:

            mov EDX,EAX
            test DL,DL
            pop RAX
            pop RCX
            jne .L_40b3c4

            mov RDI,RBX
            mov BYTE PTR [RSP+8],DL
            call _ZdaPv@PLT

            movzx EDX,BYTE PTR [RSP+8]
            jmp .L_40ad2f
.L_40b1cb:

            test RCX,RCX
            movzx EDX,BYTE PTR [RSP+16]
            jne .L_40ae15

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b1e0:

            xor EDX,EDX
            jmp .L_40ad2f
.L_40b1e7:

            test RCX,RCX
            je .L_40b1f8

            mov RDI,RCX
            call _ZdaPv@PLT

            nop
            nop
            nop
            nop
.L_40b1f8:

            mov EDX,1
            jmp .L_40ad2f
.L_40b202:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_40c157]
            lea RBP,QWORD PTR [RSP+32]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_40b3cc

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_40b32b

            lea RDI,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+64],RAX
.L_40b270:

            call .L_402f10
.L_40b275:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            add RAX,16
            cmp RSI,RAX
            je .L_40b40b

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+80]
            cmp RDI,RCX
            je .L_40b438

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_40b447

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_40b2cf:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_40b2f3
.L_40b2ee:

            call _ZdlPv@PLT
.L_40b2f3:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_40b302:

            call write@PLT
.L_40b307:

            mov RDI,QWORD PTR [RSP+32]
            add RBP,16
            mov BYTE PTR [RSP+128],1
            cmp RDI,RBP
            je .L_40b026

            call _ZdlPv@PLT

            jmp .L_40b026
.L_40b32b:

            lea RDI,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
.L_40b341:

            call .L_402f10

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            add RAX,16
            cmp RSI,RAX
            je .L_40b3dd

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_40b45a

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_40b469

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_40b39c:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_40b2ee

            jmp .L_40b2f3
.L_40b3c4:

            mov RCX,RBX
            jmp .L_40ade9
.L_40b3cc:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40b3d8:

            jmp .L_40b2f3
.L_40b3dd:

            test RDX,RDX
            je .L_40b3fb

            cmp RDX,1
            je .L_40b48f

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_40b3fb:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_40b39c
.L_40b40b:

            test RDX,RDX
            je .L_40b425

            cmp RDX,1
            je .L_40b47c

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_40b425:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40b2cf
.L_40b438:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_40b447:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_40b2cf
.L_40b45a:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_40b469:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_40b39c
.L_40b47c:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40b425
.L_40b48f:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40b3fb
.L_40b4a5:

            mov RDI,QWORD PTR [RSP+32]
            add RBP,16
            cmp RDI,RBP
            je .L_40b4b8

            call _ZdlPv@PLT
.L_40b4b8:

            call _ZSt9terminatev@PLT
.L_40b4bd:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
.L_40b4cb:

            call _Unwind_Resume@PLT
.L_40b4d0:

            jmp .L_40b4a5
.L_40b4d2:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40b4e6:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
.L_40b50e:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40b527:

            mov RBP,RAX
            jmp .L_40b50e
.L_40b52c:

            call __stack_chk_fail@PLT
.L_40b531:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b540:

            mov RAX,RDI
            mov R8,RDX
            mov RDI,RSI
            mov R9D,ECX
            mov EDX,2
            xor ECX,ECX
            mov RSI,RAX
            jmp .L_40acf0
.L_40b55b:

            nop
            nop
            nop
            nop
            nop
.L_40b560:

            mov RAX,RDI
            mov R8,RDX
            mov RDI,RSI
            mov R9D,ECX
            xor EDX,EDX
            xor ECX,ECX
            mov RSI,RAX
            jmp .L_40acf0
.L_40b578:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b580:

            push RBX
            mov R9D,ECX
            mov RBX,RDI
            mov R8,RDX
            mov RDI,RSI
            mov EDX,1
            sub RSP,16
.L_40b596:

            mov RSI,RBX
            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_40acf0

            test AL,AL
            je .L_40b5c2

            movsxd RCX,DWORD PTR [RSP+4]
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
.L_40b5c2:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_40b5d8

            add RSP,16
.L_40b5d6:

            pop RBX
            ret 
.L_40b5d8:

            call __stack_chk_fail@PLT
.L_40b5dd:

            nop
            nop
            nop
.L_40b5e0:

            push RBX
            mov R9D,ECX
            mov RBX,RDI
            mov R8,RDX
            mov RDI,RSI
            xor EDX,EDX
            sub RSP,16
.L_40b5f3:

            mov RSI,RBX
            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_40acf0

            test AL,AL
            je .L_40b61f

            movsxd RCX,DWORD PTR [RSP+4]
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
.L_40b61f:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_40b635

            add RSP,16
.L_40b633:

            pop RBX
            ret 
.L_40b635:

            call __stack_chk_fail@PLT
.L_40b63a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40b640:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RDI
            sub RSP,344
.L_40b65a:

            lea R14,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+328],RAX
            xor EAX,EAX
            lea RDX,QWORD PTR [R14+272]
            mov RAX,R14
            nop
            nop
            nop
            nop
.L_40b680:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_40b680

            mov RDI,RBP
            call .L_403310

            lea EBX,DWORD PTR [RAX+1]
            cmp EBX,17
            jle .L_40b6d8
.L_40b6a7:

            xor EBX,EBX
.L_40b6a9:

            mov RCX,QWORD PTR [RSP+328]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_40b7b4

            add RSP,344
.L_40b6c9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b6d8:

            mov RCX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [R12]
            mov RSI,RSP
            sub RSP,8
            xor EDX,EDX
            xor R8D,R8D
            mov R9,R14
            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            mov DWORD PTR [RSP+16],ECX
            push RBX
.L_40b6fd:

            call .L_4077c0
.L_40b702:

            test AL,AL
            pop RDX
            pop RCX
            je .L_40b6a7

            lea R15,QWORD PTR [RSP+16]
            mov R8D,EBX
            mov RCX,R14
            mov RDX,RBP
            mov RDI,R13
            mov QWORD PTR [RSP+24],0
            lea RAX,QWORD PTR [R15+16]
            mov RSI,R15
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
.L_40b733:

            call .L_404ad0

            test AL,AL
            mov EBX,EAX
            mov RDI,QWORD PTR [RSP+16]
            jne .L_40b75a
.L_40b743:

            add R15,16
            cmp RDI,R15
            je .L_40b6a9

            call _ZdlPv@PLT

            jmp .L_40b6a9
.L_40b75a:

            mov RCX,QWORD PTR [R12+8]
            mov RSI,QWORD PTR [RSP+48]
            sub RSI,QWORD PTR [R12]
            movsxd RAX,DWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+24]
            mov RDX,RCX
            sub RDX,RSI
            cmp RAX,RDX
            cmovbe RDX,RAX
            cmp RSI,RCX
            ja .L_40b7b9

            mov RCX,RDI
            mov RDI,R12
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_40b78f:

            mov RDI,QWORD PTR [RSP+16]
            jmp .L_40b743
.L_40b796:

            mov RDI,QWORD PTR [RSP+16]
            add R15,16
            mov RBX,RAX
            cmp RDI,R15
            je .L_40b7ac

            call _ZdlPv@PLT
.L_40b7ac:

            mov RDI,RBX
.L_40b7af:

            call _Unwind_Resume@PLT
.L_40b7b4:

            call __stack_chk_fail@PLT
.L_40b7b9:

            mov RDX,RSI
            lea RDI,QWORD PTR [RIP+.L_43e1a0-204928]
            lea RSI,QWORD PTR [RIP+.L_40bf83]
            xor EAX,EAX
.L_40b7cc:

            call _ZSt24__throw_out_of_range_fmtPKcz@PLT
.L_40b7d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b7e0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            lea R13,QWORD PTR [RBP-336]
            push R12
            push RBX
            mov R14,RDI
            sub RSP,408
.L_40b7fe:

            mov QWORD PTR [RBP-432],RDX
            lea RDX,QWORD PTR [R13+272]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            mov QWORD PTR [RBP-400],RSI
            mov RAX,R13
            nop
            nop
            nop
.L_40b828:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RAX,RDX
            jne .L_40b828

            mov RDI,QWORD PTR [RBP-432]
            call .L_403310

            lea R12D,DWORD PTR [RAX+1]
            cmp R12D,17
            jg .L_40ba30

            mov RAX,QWORD PTR [R14]
            lea RSI,QWORD PTR [RBP-368]
            mov RCX,QWORD PTR [R14+8]
            mov QWORD PTR [RBP-360],0
            mov BYTE PTR [RBP-352],0
            lea RDX,QWORD PTR [RSI+16]
            mov QWORD PTR [RBP-408],RSI
            mov RDI,RAX
            add RDI,RCX
            mov QWORD PTR [RBP-368],RDX
            mov QWORD PTR [RBP-424],RDI
            jb .L_40ba30

            lea RDI,QWORD PTR [RBP-384]
            mov RBX,RAX
            mov DWORD PTR [RBP-412],0
            xor R15D,R15D
            mov QWORD PTR [RBP-440],RDI
            jmp .L_40b90c
          .byte 0x66
          .byte 0x90
.L_40b8c0:

            mov RDX,QWORD PTR [RBP-432]
            mov RSI,QWORD PTR [RBP-408]
            mov R8D,R12D
            mov RDI,QWORD PTR [RBP-400]
            mov RCX,R13
.L_40b8db:

            call .L_404ad0

            movsxd RBX,DWORD PTR [RBP-328]
            add DWORD PTR [RBP-412],1
            add RBX,QWORD PTR [RBP-336]
            cmp QWORD PTR [RBP-424],RBX
            mov R15,RBX
            jb .L_40b9a0
.L_40b905:

            mov RAX,QWORD PTR [R14]
            mov RCX,QWORD PTR [R14+8]
.L_40b90c:

            sub RSP,8
            mov RSI,QWORD PTR [RBP-440]
            mov RDI,QWORD PTR [RBP-400]
            mov RDX,RBX
            push R12
            mov R9,R13
            sub RDX,RAX
            xor R8D,R8D
            mov QWORD PTR [RBP-384],RAX
            mov DWORD PTR [RBP-376],ECX
.L_40b939:

            call .L_4077c0

            test AL,AL
            pop RCX
            pop RSI
            je .L_40b9a0

            mov RAX,QWORD PTR [RBP-336]
            cmp RAX,RBX
            mov QWORD PTR [RBP-392],RAX
            ja .L_40b9e8
.L_40b95b:

            cmp QWORD PTR [RBP-392],R15
            jne .L_40b8c0

            mov EDX,DWORD PTR [RBP-328]
            test EDX,EDX
            jne .L_40b8c0

            cmp QWORD PTR [RBP-424],RBX
            ja .L_40ba68

            mov R15,QWORD PTR [RBP-392]
            add RBX,1
.L_40b98e:

            cmp QWORD PTR [RBP-424],RBX
            jae .L_40b905

            nop
            nop
            nop
            nop
            nop
.L_40b9a0:

            mov EAX,DWORD PTR [RBP-412]
            test EAX,EAX
            je .L_40b9c6

            cmp QWORD PTR [RBP-424],RBX
            ja .L_40baa3
.L_40b9b7:

            mov RDI,QWORD PTR [RBP-408]
            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_@PLT
.L_40b9c6:

            mov RAX,QWORD PTR [RBP-408]
            mov RDI,QWORD PTR [RBP-368]
            add RAX,16
            cmp RDI,RAX
            je .L_40ba3a

            call _ZdlPv@PLT

            jmp .L_40ba3a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b9e8:

            mov RDX,RAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP-360]
            sub RDX,RBX
            cmp RDX,RAX
            ja .L_40bb0f

            mov RDI,QWORD PTR [RBP-408]
            mov RSI,RBX
.L_40ba12:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RAX,QWORD PTR [RBP-336]
            mov QWORD PTR [RBP-392],RAX
            jmp .L_40b95b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ba30:

            mov DWORD PTR [RBP-412],0
.L_40ba3a:

            mov RSI,QWORD PTR [RBP-56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RBP-412]
            jne .L_40bb0a

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_40ba61:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ba68:

            movabs RAX,9223372036854775807
            cmp QWORD PTR [RBP-360],RAX
            je .L_40bb1b

            mov RDI,QWORD PTR [RBP-408]
            mov EDX,1
            mov RSI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            add RBX,1
            mov R15,QWORD PTR [RBP-392]
            jmp .L_40b98e
.L_40baa3:

            mov RDX,QWORD PTR [RBP-424]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP-360]
            sub RDX,RBX
            cmp RDX,RAX
            ja .L_40bad7

            mov RDI,QWORD PTR [RBP-408]
            mov RSI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_40b9b7
.L_40bad7:

            lea RDI,QWORD PTR [RIP+.L_40bd7d]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40bae3:

            mov RDX,QWORD PTR [RBP-408]
            mov RDI,QWORD PTR [RBP-368]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_40bb02

            call _ZdlPv@PLT
.L_40bb02:

            mov RDI,RBX
.L_40bb05:

            call _Unwind_Resume@PLT
.L_40bb0a:

            call __stack_chk_fail@PLT
.L_40bb0f:

            lea RDI,QWORD PTR [RIP+.L_40bd7d]
.L_40bb16:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40bb1b:

            lea RDI,QWORD PTR [RIP+.L_40bd7d]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40bb27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bb30:

            push R14
            push R13
            mov R10,RDI
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov R12,RSI
            mov R13,RCX
            sub RSP,288
.L_40bb4b:

            mov R14,RSP
            lea RDX,QWORD PTR [R14+272]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov RAX,R14
            nop
            nop
            nop
            nop
            nop
.L_40bb70:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_40bb70

            mov RDI,RBP
            call .L_403310

            lea EBX,DWORD PTR [RAX+1]
            cmp EBX,17
            jle .L_40bbc0
.L_40bb97:

            xor EAX,EAX
.L_40bb99:

            mov RSI,QWORD PTR [RSP+280]
            xor RSI,QWORD PTR FS:[40]
            jne .L_40bc07

            add RSP,288
.L_40bbb3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bbc0:

            sub RSP,8
            mov ECX,DWORD PTR [R10+8]
            xor EDX,EDX
            push RBX
            xor R8D,R8D
            mov R9,R14
            mov RSI,R10
            mov RDI,R12
            call .L_4077c0

            test AL,AL
            pop RDX
            pop RCX
            je .L_40bb97

            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [R13+8],0
            mov R8D,EBX
            mov RCX,R14
            mov RDX,RBP
            mov RSI,R13
            mov RDI,R12
            mov BYTE PTR [RAX],0
            call .L_404ad0

            jmp .L_40bb99
.L_40bc07:

            call __stack_chk_fail@PLT
.L_40bc0c:

            nop
            nop
            nop
            nop
.L_40bc10:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40bc19:

            mov RDI,QWORD PTR [RDI+112]
            test RDI,RDI
            je .L_40bc27

            call .L_40f430
.L_40bc27:

            mov RDI,QWORD PTR [RBX+104]
            test RDI,RDI
            je .L_40bc35

            call .L_40f430
.L_40bc35:

            mov RBP,QWORD PTR [RBX]
            test RBP,RBP
            je .L_40bc5a

            mov RDI,RBP
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_40bd77

            mov ESI,56
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bc5a:

            mov RBP,QWORD PTR [RBX+120]
            test RBP,RBP
            je .L_40bc78

            mov RDI,RBP
            call .L_430900

            mov ESI,440
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bc78:

            mov RBP,QWORD PTR [RBX+128]
            test RBP,RBP
            je .L_40bc99

            mov RDI,RBP
            call .L_430900

            mov ESI,440
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bc99:

            mov RBP,QWORD PTR [RBX+144]
            cmp QWORD PTR [RIP+.L_64a358],RBP
            je .L_40bccd

            test RBP,RBP
            je .L_40bccd

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_40bcc0

            call _ZdlPv@PLT
.L_40bcc0:

            mov ESI,32
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bccd:

            mov RBP,QWORD PTR [RBX+200]
            test RBP,RBP
            je .L_40bcfb

            cmp RBP,QWORD PTR [RIP+.L_64a350]
            je .L_40bcfb

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c780

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bcfb:

            mov RBP,QWORD PTR [RBX+208]
            test RBP,RBP
            je .L_40bd29

            cmp RBP,QWORD PTR [RIP+.L_64a348]
            je .L_40bd29

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c7e0

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_40bd29:

            mov RDI,QWORD PTR [RBX+160]
            lea RAX,QWORD PTR [RBX+176]
            cmp RDI,RAX
            je .L_40bd41

            call _ZdlPv@PLT
.L_40bd41:

            mov RDI,QWORD PTR [RBX+64]
            lea RAX,QWORD PTR [RBX+80]
            cmp RDI,RAX
            je .L_40bd53

            call _ZdlPv@PLT
.L_40bd53:

            mov RDI,QWORD PTR [RBX+8]
            add RBX,24
            cmp RDI,RBX
            je .L_40bd70

            add RSP,8
.L_40bd64:

            pop RBX
            pop RBP
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bd70:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40bd77:

            call abort@PLT
.L_40bd7c:
          .zero 1
.L_40bd7d:
          .string "basic_string::append"
.L_40bd92:
          .string "..."
.L_40bd96:
          .string "\\x00"
.L_40bd9b:
          .string "re2/re2.cc"
.L_40bda6:
          .string "Unknown encoding "
.L_40bdb8:
          .string "requested group "
.L_40bdc9:
          .string " in regexp "
.L_40bdd5:
          .string "invalid rewrite pattern: "
.L_40bdef:
          .string "Error parsing \'"
.L_40bdff:
          .string "\': "
.L_40be03:
          .string "Error compiling \'"
.L_40be15:
          .string "\'"
.L_40be17:
          .string "Error reverse compiling \'"
.L_40be31:
          .string "Invalid RE2: "
.L_40be3f:
          .string "Match "
.L_40be46:
          .string " ["
.L_40be49:
          .string "]"
.L_40be4b:
          .string " DFA failed."
.L_40be58:
          .string " used DFA - no match."
.L_40be6e:
          .string " used DFA - match"
.L_40be80:

            and BYTE PTR [RDX+101],DH
            jbe .L_40beea
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x44
          .byte 0x46
          .byte 0x41
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x2e
          .byte 0x0
.L_40be95:
          .string " DFA inconsistency."
.L_40bea9:
          .string "DFA inconsistency"
.L_40bebb:
          .string " used reverse DFA."
.L_40bece:
          .string " skipping DFA for OnePass."
.L_40bee9:
          .byte 0x20
.L_40beea:

            jae .L_40bf57
          .byte 0x69
          .byte 0x70
          .byte 0x70
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x44
          .byte 0x46
          .byte 0x41
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x42
          .byte 0x69
          .byte 0x74
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x2e
          .byte 0x0
.L_40bf05:
          .string " using OnePass."
.L_40bf15:
          .string "SearchOnePass inconsistency"
.L_40bf31:
          .string " using BitState."
.L_40bf42:
          .byte 0x53
          .byte 0x65
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x42
          .byte 0x69
          .byte 0x74
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
.L_40bf57:

            imul ESI,DWORD PTR [RBX+116],2036559461
            add BYTE PTR [RAX],AH
            jne .L_40bfd5
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x4e
          .byte 0x46
          .byte 0x41
          .byte 0x2e
          .byte 0x0
.L_40bf6b:
          .string "SearchNFA inconsistency"
.L_40bf83:
          .string "basic_string::replace"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bfa0:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_40bfd0:

            push RDX
            ja .L_40c046
          .byte 0x69
.L_40bfd5:

            je .L_40c03c
          .byte 0x20
          .byte 0x73
          .byte 0x63
          .byte 0x68
          .byte 0x65
          .byte 0x6d
          .byte 0x61
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
          .byte 0x27
          .byte 0x5c
          .byte 0x27
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x77
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x74
          .byte 0x20
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c000:
          .byte 0x52
          .byte 0x65
          .byte 0x77
          .byte 0x72
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x73
          .byte 0x63
          .byte 0x68
          .byte 0x65
          .byte 0x6d
          .byte 0x61
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
          .byte 0x27
          .byte 0x5c
          .byte 0x27
          .byte 0x20
          .byte 0x6d
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x62
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x77
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x79
          .byte 0x20
          .byte 0x61
          .byte 0x20
          .byte 0x64
          .byte 0x69
          .byte 0x67
          .byte 0x69
          .byte 0x74
          .byte 0x20
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x27
          .byte 0x5c
          .byte 0x27
.L_40c03c:

            add BYTE PTR CS:[RAX],AL
          .zero 1
.L_40c040:
          .byte 0x52
          .byte 0x65
          .byte 0x77
          .byte 0x72
          .byte 0x69
          .byte 0x74
.L_40c046:

            and BYTE PTR GS:[RBX+99],DH
            push 543255909
          .byte 0x72
          .byte 0x65
          .byte 0x71
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x74
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x20
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x63
          .byte 0x68
          .byte 0x65
          .byte 0x73
          .byte 0x2c
          .byte 0x20
          .byte 0x62
          .byte 0x75
          .byte 0x74
          .byte 0x20
          .byte 0x74
          .byte 0x68
          .byte 0x65
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x67
          .byte 0x65
          .byte 0x78
          .byte 0x70
          .byte 0x20
          .byte 0x6f
          .byte 0x6e
          .byte 0x6c
          .byte 0x79
          .byte 0x20
          .byte 0x68
          .byte 0x61
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x68
          .byte 0x65
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x73
          .byte 0x75
          .byte 0x62
          .byte 0x65
          .byte 0x78
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x6f
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x67
          .byte 0x65
          .byte 0x20
          .byte 0x2d
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69

            insb BYTE PTR [RDI],DX
            and BYTE PTR GS:[RSI+97],AH
            imul EBP,DWORD PTR [RBP+RIZ*2+100],0
            add BYTE PTR [RAX],AL
          .byte 0x70
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x6f
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x67
          .byte 0x65
          .byte 0x20
          .byte 0x2d
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
.L_40c0f2:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_40c0f8:

            push RDX
            xor R15B,BYTE PTR [R10]
            and BYTE PTR [RCX+110],CH
            jbe .L_40c162

            insb BYTE PTR [RDI],DX
            imul ESP,DWORD PTR [RAX+RIZ*1+115],1953653108
            jo .L_40c17b

            jae .L_40c13a
          .byte 0x20
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x70
          .byte 0x6f
          .byte 0x73
          .byte 0x20

            jo .L_40c179

            imul ESI,DWORD PTR [RDX+46],0
            add BYTE PTR [RIP+.L_64a3d0+1593595848],AH
            pop RDI
            jo .L_40c197
          .byte 0x73
          .byte 0x20
          .byte 0x28
          .byte 0x77
          .byte 0x68
          .byte 0x69
          .byte 0x63
          .byte 0x68
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x7a
          .byte 0x75
          .byte 0x29
          .byte 0x20
          .byte 0x3e
.L_40c13a:

            and BYTE PTR [RAX+RBP*2+105],DH
          .byte 0x73
          .byte 0x2d
          .byte 0x3e
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x28
          .byte 0x29
          .byte 0x20
          .byte 0x28
          .byte 0x77
          .byte 0x68
          .byte 0x69
          .byte 0x63
          .byte 0x68
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x7a
          .byte 0x75
          .byte 0x29
          .byte 0x0
.L_40c157:

            or AL,BYTE PTR [RAX]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c160:

            push R12
.L_40c162:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,112
.L_40c16b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
.L_40c179:

            xor EAX,EAX
.L_40c17b:

            cmp BYTE PTR [RDI],0
            je .L_40c218
.L_40c184:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RBX+88]
            mov QWORD PTR [RBX+8],RAX
            add RAX,40
.L_40c197:

            mov QWORD PTR [RBX+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RBX+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40c1b4

            call _ZdlPv@PLT
.L_40c1b4:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+16],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RBX+RAX*1+8],RDX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RBX+120],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40c4ad

            add RSP,112
.L_40c20f:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c218:

            lea RSI,QWORD PTR [RIP+.L_40c157]
            add RDI,8
            mov EDX,1
            mov RBP,RSP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+8],0
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_40c3b8

            mov RDX,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RBX+48]
            cmp RAX,RDX
            ja .L_40c320

            lea R12,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+32],RAX
.L_40c276:

            call .L_402f10
.L_40c27b:

            mov RSI,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+40]
            cmp RSI,RAX
            je .L_40c3d0

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+48]
            cmp RDI,RCX
            je .L_40c440

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
            je .L_40c44e

            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+48],RCX
.L_40c2cf:

            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+32]
            cmp RDI,R12
            je .L_40c2ee
.L_40c2e9:

            call _ZdlPv@PLT
.L_40c2ee:

            movsxd RDX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            mov EDI,2
.L_40c2fc:

            call write@PLT
.L_40c301:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov BYTE PTR [RBX],1
            cmp RDI,RBP
            je .L_40c184

            call _ZdlPv@PLT

            jmp .L_40c184
          .byte 0x90
.L_40c320:

            lea R12,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+64],RDX
            mov RDX,RAX
.L_40c335:

            call .L_402f10

            mov RSI,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+72]
            cmp RSI,RAX
            je .L_40c408

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+80]
            cmp RDI,RCX
            je .L_40c460

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
            je .L_40c46e

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_40c38e:

            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+64]
            cmp RDI,R12
            jne .L_40c2e9

            jmp .L_40c2ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c3b8:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40c3c4:

            jmp .L_40c2ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c3d0:

            test RDX,RDX
            je .L_40c3f0

            cmp RDX,1
            je .L_40c498

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
            nop
            nop
            nop
.L_40c3f0:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40c2cf
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c408:

            test RDX,RDX
            je .L_40c428

            cmp RDX,1
            je .L_40c480

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c428:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40c38e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c440:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
.L_40c44e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+32],RDI
            jmp .L_40c2cf
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c460:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
.L_40c46e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_40c38e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c480:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
            jmp .L_40c428
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c498:

            movzx EAX,BYTE PTR [RSP+48]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
            jmp .L_40c3f0
.L_40c4ad:

            call __stack_chk_fail@PLT
.L_40c4b2:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            cmp RDI,RBP
            je .L_40c4c4

            call _ZdlPv@PLT
.L_40c4c4:

            call _ZSt9terminatev@PLT
.L_40c4c9:

            jmp .L_40c4b2
.L_40c4cb:

            nop
            nop
            nop
            nop
            nop
.L_40c4d0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_40c4e5

            add RSP,8
            ret 
.L_40c4e5:

            call abort@PLT
.L_40c4ea:

            nop
            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.weak _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev
.type _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev, @function
#-----------------------------------
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev:
#-----------------------------------
.align 16
.weak _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
.type _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev, @function
#-----------------------------------
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            mov RDI,QWORD PTR [RDI+72]
            lea RAX,QWORD PTR [RBX+88]
            cmp RDI,RAX
            je .L_40c510

            call _ZdlPv@PLT
.L_40c510:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX],RAX
            pop RBX
            jmp _ZNSt6localeD1Ev@PLT
.L_40c524:
          .string ":"
.L_40c526:
          .string ": "
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c530:

            push R15
            push R14
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push R13
            lea R13,QWORD PTR [RDI+120]
            push R12
            push RBP
            push RBX
            lea RBP,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov R12,RSI
            sub RSP,24
.L_40c553:

            mov BYTE PTR [RDI],0
            mov RDI,R13
            mov DWORD PTR [RSP+12],EDX
            call _ZNSt8ios_baseC2Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RBX+344],0
            xor ESI,ESI
            mov QWORD PTR [RBX+120],R14
            mov QWORD PTR [RBX+336],0
            mov BYTE PTR [RBX+345],0
            mov QWORD PTR [RBX+352],0
            mov RDI,QWORD PTR [RAX-24]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RBX+360],0
            mov QWORD PTR [RBX+368],0
            mov QWORD PTR [RBX+376],0
            add RDI,RBP
            mov QWORD PTR [RDI],RAX
.L_40c5c9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40c5ce:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            lea R15,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            add RAX,40
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+16],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov DWORD PTR [RBX+80],16
            mov QWORD PTR [RBX+96],0
            mov BYTE PTR [RBX+104],0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RBX+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RBX+88],RAX
.L_40c655:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40c65a:

            test R12,R12
            je .L_40c6c0

            mov RDI,R12
            call strlen@PLT

            mov RSI,R12
            mov RDX,RAX
            mov RDI,RBP
.L_40c670:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40c675:

            lea RSI,QWORD PTR [RIP+.L_40c524]
            mov EDX,1
            mov RDI,RBP
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RSP+12]
            mov RDI,RBP
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_40c526]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            add RSP,24
.L_40c6ad:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c6c0:

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RAX-24]
            add RDI,RBP
            mov ESI,DWORD PTR [RDI+32]
            or ESI,1
            call _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
.L_40c6d6:

            jmp .L_40c675
.L_40c6d8:

            mov RDI,R15
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RBX+RAX*1+8],RCX
.L_40c6fe:

            mov RDI,R13
            mov QWORD PTR [RBX+120],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_40c70d:

            call _Unwind_Resume@PLT
.L_40c712:

            mov RBP,RAX
            jmp .L_40c6fe
.L_40c717:

            mov RBX,RAX
            mov RDI,RBP
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40c72a:

            nop
            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.weak _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev
.type _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev, @function
#-----------------------------------
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            mov RDI,QWORD PTR [RDI+72]
            lea RAX,QWORD PTR [RBX+88]
            cmp RDI,RAX
            je .L_40c750

            call _ZdlPv@PLT
.L_40c750:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RDI,RBX
            mov ESI,104
            pop RBX
            jmp _ZdlPvm@PLT
.L_40c771:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c780:

            test RSI,RSI
            je .L_40c7d0

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_40c78f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_40c780

            mov RDI,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RBX+48]
            mov RBP,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40c7b1

            call _ZdlPv@PLT
.L_40c7b1:

            mov RDI,RBX
            mov RBX,RBP
            call _ZdlPv@PLT

            test RBP,RBP
            jne .L_40c78f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c7d0:

            ret 
.L_40c7d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c7e0:

            test RSI,RSI
            je .L_40c830

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_40c7ef:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_40c7e0

            mov RDI,QWORD PTR [RBX+40]
            lea RAX,QWORD PTR [RBX+56]
            mov RBP,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40c811

            call _ZdlPv@PLT
.L_40c811:

            mov RDI,RBX
            mov RBX,RBP
            call _ZdlPv@PLT

            test RBP,RBP
            jne .L_40c7ef

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c830:

            ret 
.L_40c832:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            nop
            nop
            nop
            nop
.L_40c840:

            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c880:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            lea R13,QWORD PTR [RDI+8]
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            mov R14D,1
            sub RSP,8
            test RSI,RSI
            je .L_40c8e8
.L_40c8a6:

            mov EDI,40
            call _Znwm@PLT

            mov RBX,RAX
            mov RAX,QWORD PTR [R15]
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov EDI,R14D
            mov QWORD PTR [RBX+32],RAX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RBP+40],1
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c8e8:

            cmp RDX,R13
            je .L_40c8a6

            xor R14D,R14D
            mov EAX,DWORD PTR [RDX+32]
            cmp DWORD PTR [RCX+4],EAX
            setl R14B
            jmp .L_40c8a6
.L_40c8fc:

            nop
            nop
            nop
            nop
.L_40c900:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_40c90e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_40c92c

            test RDX,RDX
            jne .L_40c9b7
.L_40c92c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_40c980

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_40c9b0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_40c954:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40c9c3

            add RSP,16
.L_40c974:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c980:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_40c999:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_40c954
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c9b0:

            test RBX,RBX
            je .L_40c954

            jmp .L_40c999
.L_40c9b7:

            lea RDI,QWORD PTR [RIP+.L_410588]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_40c9c3:

            call __stack_chk_fail@PLT
.L_40c9c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c9d0:

            pxor XMM0,XMM0
            mov BYTE PTR [RDI],SIL
            mov BYTE PTR [RDI+1],0
            mov WORD PTR [RDI+2],DX
            mov QWORD PTR [RDI+4],1
            mov QWORD PTR [RDI+12],0
            mov DWORD PTR [RDI+20],0
            movups XMMWORD PTR [RDI+24],XMM0
            ret 
.L_40c9fb:

            nop
            nop
            nop
            nop
            nop
.L_40ca00:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_40ca10:

            movsxd RAX,DWORD PTR [RDI+24]
            test EAX,EAX
            je .L_40ca90

            cmp EAX,7
            mov R12,QWORD PTR [RDI+32]
            jle .L_40ca77

            lea EBP,DWORD PTR [RAX-1]
            and EBP,EAX
            jne .L_40ca77

            lea EDI,DWORD PTR [RAX+RAX*1]
            movsxd RDI,EDI
            shl RDI,2
            call _Znam@PLT

            mov EDX,DWORD PTR [RBX+24]
            mov QWORD PTR [RBX+32],RAX
            test EDX,EDX
            jle .L_40cab0

            xor EDX,EDX
            jmp .L_40ca54
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ca50:

            mov RAX,QWORD PTR [RBX+32]
.L_40ca54:

            mov ECX,DWORD PTR [R12+RDX*1]
            add EBP,1
            mov DWORD PTR [RAX+RDX*1],ECX
            add RDX,4
            cmp DWORD PTR [RBX+24],EBP
            jg .L_40ca50
.L_40ca67:

            mov RDI,R12
            call _ZdaPv@PLT

            movsxd RAX,DWORD PTR [RBX+24]
            mov R12,QWORD PTR [RBX+32]
.L_40ca77:

            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+24],EDX
            mov DWORD PTR [R12+RAX*4],R13D
            add RSP,8
.L_40ca85:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ca90:

            mov EDI,32
            call _Znam@PLT

            mov R12,RAX
            mov QWORD PTR [RBX+32],RAX
            movsxd RAX,DWORD PTR [RBX+24]
            jmp .L_40ca77
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cab0:

            test R12,R12
            jne .L_40ca67

            mov R12,RAX
            movsxd RAX,DWORD PTR [RBX+24]
            jmp .L_40ca77
.L_40cabe:

            nop
            nop
.L_40cac0:

            push RBP
            push RBX
            mov EBX,EDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            mov EDX,21
            mov WORD PTR [RAX+2],BP
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            mov QWORD PTR [RAX+28],0
            mov DWORD PTR [RAX+36],0
            mov DWORD PTR [RAX+24],EBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40cb10:

            cmp BYTE PTR [RDI],8
            jne .L_40cb20

            movzx EDX,WORD PTR [RDI+2]
            mov RAX,RDI
            cmp ESI,EDX
            je .L_40cb70
.L_40cb20:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,8
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],BP
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov WORD PTR [RAX+6],SI
            movups XMMWORD PTR [RAX+24],XMM0
            mov QWORD PTR [RAX+8],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40cb70:

            ret 
.L_40cb72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cb80:

            cmp BYTE PTR [RDI],7
            jne .L_40cb90

            movzx EDX,WORD PTR [RDI+2]
            mov RAX,RDI
            cmp ESI,EDX
            je .L_40cbe0
.L_40cb90:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,7
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],BP
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov WORD PTR [RAX+6],SI
            movups XMMWORD PTR [RAX+24],XMM0
            mov QWORD PTR [RAX+8],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40cbe0:

            ret 
.L_40cbe2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cbf0:

            cmp BYTE PTR [RDI],9
            jne .L_40cc00

            movzx EDX,WORD PTR [RDI+2]
            mov RAX,RDI
            cmp ESI,EDX
            je .L_40cc50
.L_40cc00:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,9
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],BP
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov WORD PTR [RAX+6],SI
            movups XMMWORD PTR [RAX+24],XMM0
            mov QWORD PTR [RAX+8],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40cc50:

            ret 
.L_40cc52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cc60:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40cc67:

            mov EDI,40
            mov R12D,ESI
            mov EBX,EDX
            call _Znwm@PLT

            mov EDX,11
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],R12W
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+28],0
            mov DWORD PTR [RAX+36],0
            mov WORD PTR [RAX+6],SI
            mov QWORD PTR [RAX+8],RBP
            mov DWORD PTR [RAX+24],EBX
            pop RBX
.L_40ccb4:

            pop RBP
            pop R12
            ret 
.L_40ccb8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ccc0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,40
            mov R13D,ESI
            mov EBP,EDX
            mov EBX,ECX
            sub RSP,8
.L_40ccd9:

            call _Znwm@PLT

            mov EDX,10
            mov ECX,1
            mov ESI,1
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],R13W
            mov WORD PTR [RAX+4],CX
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+32],0
            mov WORD PTR [RAX+6],SI
            mov QWORD PTR [RAX+8],R12
            mov DWORD PTR [RAX+28],EBP
            mov DWORD PTR [RAX+24],EBX
            add RSP,8
.L_40cd1b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40cd22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cd30:

            push RBP
            push RBX
            mov EBX,EDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            mov EDX,3
            mov WORD PTR [RAX+2],BP
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            mov QWORD PTR [RAX+28],0
            mov DWORD PTR [RAX+36],0
            mov DWORD PTR [RAX+24],EBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40cd80:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            sub RSP,8
.L_40cd8d:

            test ESI,ESI
            jle .L_40ce28

            cmp ESI,1
            mov RBX,RDI
            mov R12D,ESI
            je .L_40ce10

            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov RBP,RAX
            mov EAX,4
            mov WORD PTR [RBP+2],R13W
            mov QWORD PTR [RBP+4],1
            mov WORD PTR [RBP],AX
            lea EAX,DWORD PTR [R12-1]
            mov QWORD PTR [RBP+12],0
            movups XMMWORD PTR [RBP+24],XMM0
            lea R12,QWORD PTR [RBX+RAX*4+4]
            mov DWORD PTR [RBP+20],0
            nop
            nop
            nop
            nop
.L_40cde8:

            mov RDI,RBP
            add RBX,4
            mov ESI,DWORD PTR [RBX-4]
            call .L_40ca00

            cmp R12,RBX
            jne .L_40cde8

            add RSP,8
.L_40ce00:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ce10:

            mov EDI,DWORD PTR [RDI]
            add RSP,8
            mov ESI,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_40cd30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ce28:

            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,2
            mov WORD PTR [RAX],DX
            mov WORD PTR [RAX+2],R13W
            mov RBP,RAX
            mov QWORD PTR [RAX+4],1
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40ce6f:

            nop
.L_40ce70:

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            mov EBP,ESI
            sub RSP,8
            call _Znwm@PLT

            mov EDX,20
            mov WORD PTR [RAX+2],BP
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+24],RBX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40cebb:

            nop
            nop
            nop
            nop
            nop
.L_40cec0:

            push RBX
            mov EDX,40
            mov RBX,RSI
            sub RSP,48
.L_40cecd:

            movdqu XMM0,XMMWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+32]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+16]
            mov QWORD PTR [RSP+32],RAX
            movaps XMMWORD PTR [RSP+16],XMM0
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+32]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov QWORD PTR [RBX+32],RAX
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jne .L_40cf2e

            add RSP,48
.L_40cf2c:

            pop RBX
            ret 
.L_40cf2e:

            call __stack_chk_fail@PLT
.L_40cf33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cf40:

            push RBX
            lea RAX,QWORD PTR [RDI+16]
            mov RBX,RDI
            sub RSP,16
            cmp ESI,13
            jbe .L_40cf78

            lea RSI,QWORD PTR [RIP+.L_4108e4]
            mov QWORD PTR [RDI],RAX
            mov EAX,16
.L_40cf60:

            lea RDX,QWORD PTR [RSI+RAX*1]
.L_40cf64:

            mov RDI,RBX
            call .L_40c900

            add RSP,16
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cf78:

            lea RDX,QWORD PTR [RIP+.L_646f40]
            movsxd RSI,ESI
            mov QWORD PTR [RDI],RAX
            mov RSI,QWORD PTR [RDX+RSI*8]
            mov RDX,-1
            test RSI,RSI
            je .L_40cf64

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call strlen@PLT

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_40cf60
.L_40cfa9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cfb0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_40cfbd:

            mov EDX,DWORD PTR [RSI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            movsxd RAX,DWORD PTR [RSI]
            test EDX,EDX
            jne .L_40d028

            cmp EAX,13
            lea RDX,QWORD PTR [RDI+16]
            jbe .L_40d170

            lea RSI,QWORD PTR [RIP+.L_4108e4]
            mov QWORD PTR [RDI],RDX
            mov EAX,16
.L_40cff3:

            lea RDX,QWORD PTR [RSI+RAX*1]
.L_40cff7:

            mov RDI,RBX
.L_40cffa:

            call .L_40c900
.L_40cfff:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_40d1b7

            add RSP,104
.L_40d01a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d028:

            lea R12,QWORD PTR [RSP+16]
            cmp EAX,13
            mov RBP,RSI
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            lea RDX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+16],RDX
            jbe .L_40d128

            lea R13,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RIP+.L_4108e4]
            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+48],RAX
            mov EAX,16
.L_40d06b:

            lea RDX,QWORD PTR [RSI+RAX*1]
.L_40d06f:

            mov RDI,R13
.L_40d072:

            call .L_40c900
.L_40d077:

            mov RDX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R12
.L_40d084:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_40d089:

            mov RDI,QWORD PTR [RSP+48]
            add R13,16
            cmp RDI,R13
            je .L_40d09c

            call _ZdlPv@PLT
.L_40d09c:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RSP+24]
            cmp RAX,1
            jbe .L_40d1bc

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,R12
.L_40d0c4:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            movsxd RDX,DWORD PTR [RBP+16]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RBP+8]
            cmp RDX,RAX
            ja .L_40d1e6

            mov RDI,R12
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            lea RAX,QWORD PTR [RBX+16]
            add R12,16
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,R12
            je .L_40d1a8

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX+16],RAX
.L_40d116:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_40cfff
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d128:

            lea RDX,QWORD PTR [RIP+.L_646f40]
            lea R13,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RDX+RAX*8]
            lea RAX,QWORD PTR [R13+16]
            mov RDX,-1
            mov QWORD PTR [RSP+48],RAX
            test RSI,RSI
            je .L_40d06f

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call strlen@PLT

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_40d06b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d170:

            lea RCX,QWORD PTR [RIP+.L_646f40]
            mov QWORD PTR [RDI],RDX
            mov RDX,-1
            mov RSI,QWORD PTR [RCX+RAX*8]
            test RSI,RSI
            je .L_40cff7

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call strlen@PLT

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_40cff3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d1a8:

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_40d116
.L_40d1b7:

            call __stack_chk_fail@PLT
.L_40d1bc:

            lea RDI,QWORD PTR [RIP+.L_4108f5]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40d1c8:

            mov RBX,RAX
.L_40d1cb:

            mov RDI,QWORD PTR [RSP+16]
            add R12,16
            cmp RDI,R12
            je .L_40d1de

            call _ZdlPv@PLT
.L_40d1de:

            mov RDI,RBX
.L_40d1e1:

            call _Unwind_Resume@PLT
.L_40d1e6:

            lea RDI,QWORD PTR [RIP+.L_4108f5]
.L_40d1ed:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40d1f2:

            mov RDI,QWORD PTR [RSP+48]
            add R13,16
            mov RBX,RAX
            cmp RDI,R13
            je .L_40d1cb

            call _ZdlPv@PLT

            jmp .L_40d1cb
.L_40d20a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40d210:

            mov EAX,DWORD PTR [RSI]
            mov DWORD PTR [RDI],EAX
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RDI+8],RAX
            mov EAX,DWORD PTR [RSI+16]
            mov DWORD PTR [RDI+16],EAX
            ret 
.L_40d223:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d230:

            lea RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RDI+24],0
            mov QWORD PTR [RDI+32],0
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+40],RAX
            mov QWORD PTR [RDI+48],RAX
            mov DWORD PTR [RDI+8],0
            ret 
.L_40d262:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d270:

            mov RAX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RDI+24]
            test RAX,RAX
            je .L_40d2b0

            mov RDX,RCX
            jmp .L_40d294
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d288:

            mov RDX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_40d2a2
.L_40d294:

            cmp ESI,DWORD PTR [RAX+36]
            jle .L_40d288

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_40d294
.L_40d2a2:

            cmp RDX,RCX
            je .L_40d2b0

            cmp ESI,DWORD PTR [RDX+32]
            setge AL
            ret 
          .byte 0x66
          .byte 0x90
.L_40d2b0:

            xor EAX,EAX
            ret 
.L_40d2b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d2c0:

            mov EAX,DWORD PTR [RDI]
            xor EAX,DWORD PTR [RDI+4]
            test EAX,67108863
            sete AL
            ret 
.L_40d2ce:

            nop
            nop
.L_40d2d0:

            movsxd RDI,EDI
            sub RSP,8
            lea RDI,QWORD PTR [RDI*8+24]
            call _Znam@PLT

            lea RDX,QWORD PTR [RAX+24]
            mov DWORD PTR [RAX+16],0
            mov BYTE PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            mov QWORD PTR [RAX+8],RDX
            add RSP,8
            ret 
.L_40d302:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d310:

            jmp _ZdaPv@PLT
.L_40d315:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d320:

            push RBX
.L_40d321:

            mov EAX,DWORD PTR [RDI+16]
            mov RBX,RDI
            add EAX,1
            cdqe 
            lea RDI,QWORD PTR [RAX*8+24]
            call _Znam@PLT

            movzx EDX,BYTE PTR [RBX]
            movsxd RCX,DWORD PTR [RBX+16]
            lea R10,QWORD PTR [RAX+24]
            mov DWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+8],R10
            mov BYTE PTR [RAX],DL
            mov EDX,1114112
            sub EDX,DWORD PTR [RBX+4]
            mov DWORD PTR [RAX+4],EDX
            mov RDX,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RDX+RCX*8]
            cmp RDX,R9
            je .L_40d3d8

            xor ECX,ECX
            xor EDI,EDI
            jmp .L_40d393
          .byte 0x90
.L_40d370:

            movsxd R8,EDI
            sub ESI,1
            add RDX,8
            lea R8,QWORD PTR [R10+R8*8]
            add EDI,1
            mov DWORD PTR [R8],ECX
            mov DWORD PTR [R8+4],ESI
            mov EBX,DWORD PTR [RDX-4]
            cmp RDX,R9
            lea ECX,DWORD PTR [RBX+1]
            je .L_40d3a8
.L_40d393:

            mov ESI,DWORD PTR [RDX]
            cmp ESI,ECX
            jne .L_40d370

            mov EBX,DWORD PTR [RDX+4]
            add RDX,8
            cmp RDX,R9
            lea ECX,DWORD PTR [RBX+1]
            jne .L_40d393
.L_40d3a8:

            cmp ECX,1114111
            jle .L_40d3b8

            mov DWORD PTR [RAX+16],EDI
            pop RBX
.L_40d3b4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d3b8:

            movsxd RDX,EDI
            add EDI,1
            lea R10,QWORD PTR [R10+RDX*8]
.L_40d3c2:

            mov DWORD PTR [R10],ECX
            mov DWORD PTR [R10+4],1114111
            mov DWORD PTR [RAX+16],EDI
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d3d8:

            mov EDI,1
            xor ECX,ECX
            jmp .L_40d3c2
.L_40d3e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d3f0:

            mov ECX,DWORD PTR [RDI+16]
            mov R8,QWORD PTR [RDI+8]
            test ECX,ECX
            jg .L_40d40e

            jmp .L_40d42c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d400:

            add EDX,1
            lea R8,QWORD PTR [R8+RAX*1+8]
            sub ECX,EDX
            test ECX,ECX
            jle .L_40d42c
.L_40d40e:

            mov EDX,ECX
            sar EDX,1
            movsxd RAX,EDX
            shl RAX,3
            lea RDI,QWORD PTR [R8+RAX*1]
            cmp DWORD PTR [RDI+4],ESI
            jl .L_40d400

            cmp DWORD PTR [RDI],ESI
            jle .L_40d430

            mov ECX,EDX
            test ECX,ECX
            jg .L_40d40e
.L_40d42c:

            xor EAX,EAX
            ret 
          .byte 0x90
.L_40d430:

            mov EAX,1
            ret 
.L_40d436:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d440:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            lea R13,QWORD PTR [R12+24]
            sub RSP,8
.L_40d452:

            movsxd RAX,DWORD PTR [RDI+56]
            lea RDI,QWORD PTR [RAX*8+24]
            call _Znam@PLT

            mov RBP,RAX
            add RAX,24
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [R12+40]
            mov DWORD PTR [RBP+16],0
            mov BYTE PTR [RBP],0
            mov DWORD PTR [RBP+4],0
            cmp RAX,R13
            je .L_40d4d8

            xor EBX,EBX
            nop
            nop
            nop
            nop
.L_40d490:

            mov RDX,QWORD PTR [RAX+32]
            add RBX,1
            mov RDI,RAX
            mov QWORD PTR [RBP+RBX*8+16],RDX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp RAX,R13
            jne .L_40d490
.L_40d4aa:

            mov EAX,DWORD PTR [R12+8]
            mov DWORD PTR [RBP+16],EBX
            mov DWORD PTR [RBP+4],EAX
            mov EAX,DWORD PTR [R12]
            xor EAX,DWORD PTR [R12+4]
            test EAX,67108863
            mov RAX,RBP
            sete BYTE PTR [RBP]
            add RSP,8
.L_40d4ce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d4d8:

            xor EBX,EBX
            jmp .L_40d4aa
.L_40d4dc:

            nop
            nop
            nop
            nop
.L_40d4e0:

            push R14
            push R13
            mov R13D,EDI
            push R12
            push RBP
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBX
            sub RSP,400
            mov RBX,RSP
            mov BYTE PTR [RSP],0
            lea RDI,QWORD PTR [RBX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+344],0
            xor ESI,ESI
            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+336],0
            mov BYTE PTR [RSP+345],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+368],0
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+8],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R14
.L_40d58e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40d593:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+8],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+80],16
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+104],0
            mov QWORD PTR [RSP+88],RAX
.L_40d626:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40d62b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41090d]
            mov EDX,14
.L_40d63b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,492
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40d677:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091e]
            mov EDX,16
.L_40d687:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_40d698:

            mov RDI,RBX
            call .L_410610

            call abort@PLT
.L_40d6a5:

            mov R13,RAX
.L_40d6a8:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_40d6b9:

            call _Unwind_Resume@PLT
.L_40d6be:

            mov RDI,RBX
            call .L_410610

            call abort@PLT
.L_40d6cb:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
.L_40d6da:

            call _Unwind_Resume@PLT
.L_40d6df:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+8],RBP
            mov QWORD PTR [RSP+RAX*1+8],R14
            jmp .L_40d6a8
.L_40d6fb:

            nop
            nop
            nop
            nop
            nop
.L_40d700:

            push R15
            push R14
            mov R15D,EDI
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            sub RSP,56
.L_40d714:

            test EDX,EDX
            jne .L_40d770

            cmp R15D,6
            mov EDI,40
            je .L_40d9f0

            call _Znwm@PLT

            mov RBX,RAX
            mov EAX,2
            mov WORD PTR [RBX],AX
.L_40d737:

            pxor XMM0,XMM0
            mov WORD PTR [RBX+2],R13W
            mov QWORD PTR [RBX+4],1
            mov QWORD PTR [RBX+12],0
            mov DWORD PTR [RBX+20],0
            movups XMMWORD PTR [RBX+24],XMM0
.L_40d75b:

            add RSP,56
.L_40d75f:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d770:

            cmp EDI,6
            mov R12,RSI
            mov EBP,EDX
            jne .L_40d880

            test R8B,R8B
            je .L_40d880

            movsxd RBX,EDX
            movabs RAX,1152921504606846975
            cmp RBX,RAX
            ja .L_40da4c

            shl RBX,3
            mov RDI,RBX
            call _Znam@PLT

            mov RDX,RBX
            mov R14,RAX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov ESI,EBP
            mov EDX,R13D
            mov RDI,R14
            call .L_42e5a0

            cmp EAX,1
            mov EBP,EAX
            je .L_40da20

            cmp EBP,65535
            mov R12,R14
            jg .L_40d88f
.L_40d7e1:

            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            test EBP,EBP
            mov RBX,RAX
            mov BYTE PTR [RAX],R15B
            mov BYTE PTR [RAX+1],0
            mov WORD PTR [RAX+2],R13W
            mov QWORD PTR [RAX+4],1
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            js .L_40da3e

            cmp EBP,1
            jle .L_40da08

            movsxd RDI,EBP
            shl RDI,3
            call _Znam@PLT

            mov WORD PTR [RBX+6],BP
            mov QWORD PTR [RBX+8],RAX
.L_40d83e:

            lea EDX,DWORD PTR [RBP-1]
            lea RSI,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
.L_40d850:

            mov RCX,QWORD PTR [R12+RDX*1]
            mov QWORD PTR [RAX+RDX*1],RCX
            add RDX,8
            cmp RSI,RDX
            jne .L_40d850
.L_40d861:

            test R14,R14
            je .L_40d75b
.L_40d86a:

            mov RDI,R14
            call _ZdaPv@PLT

            jmp .L_40d75b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d880:

            xor R14D,R14D
            cmp EBP,65535
            jle .L_40d7e1
.L_40d88f:

            lea EDX,DWORD PTR [RBP+65534]
            mov EDI,40
            mov RAX,RDX
            shl RAX,16
            add RAX,RDX
            shl RAX,15
            add RDX,RAX
            shr RDX,47
            mov DWORD PTR [RSP+8],EDX
            call _Znwm@PLT

            mov EDX,DWORD PTR [RSP+8]
            pxor XMM0,XMM0
            mov RBX,RAX
            mov BYTE PTR [RAX],R15B
            mov BYTE PTR [RAX+1],0
            mov WORD PTR [RAX+2],R13W
            mov QWORD PTR [RAX+4],1
            test EDX,4294901760
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            jne .L_40da45

            movsxd RAX,EDX
            cmp EDX,1
            lea RDI,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RDI
            jle .L_40d91c

            mov DWORD PTR [RSP+8],EDX
            call _Znam@PLT

            mov EDX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+8],RAX
.L_40d91c:

            cmp DX,1
            mov WORD PTR [RBX+6],DX
            jbe .L_40da30

            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+16],RAX
.L_40d933:

            lea EAX,DWORD PTR [RDX-1]
            test EAX,EAX
            mov DWORD PTR [RSP+40],EAX
            jle .L_40d9a1

            sub EDX,2
            mov R11,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+32],RBX
            mov RAX,RDX
            mov DWORD PTR [RSP+44],EBP
            mov RBP,R12
            shl RAX,16
            sub RAX,RDX
            mov RBX,R11
            lea RAX,QWORD PTR [R12+RAX*8+524280]
            mov QWORD PTR [RSP+8],RAX
.L_40d96c:

            xor R8D,R8D
            mov RSI,RBP
            mov ECX,R13D
            mov EDX,65535
            mov EDI,R15D
            add RBP,524280
            call .L_40d700

            add RBX,8
            mov QWORD PTR [RBX-8],RAX
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_40d96c

            mov RBX,QWORD PTR [RSP+32]
            mov EBP,DWORD PTR [RSP+44]
.L_40d9a1:

            mov EDI,DWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+16]
            xor R8D,R8D
            mov RSI,QWORD PTR [RSP+24]
            mov ECX,R13D
            mov EDX,EDI
            lea R10,QWORD PTR [RAX+RSI*1-8]
            mov EAX,EDI
            shl EAX,16
            sub EDX,EAX
            sub EAX,EDI
            mov EDI,R15D
            cdqe 
            add EDX,EBP
            mov QWORD PTR [RSP+8],R10
            lea RSI,QWORD PTR [R12+RAX*8]
            call .L_40da60

            mov R10,QWORD PTR [RSP+8]
            test R14,R14
            mov QWORD PTR [R10],RAX
            jne .L_40d86a

            jmp .L_40d75b
.L_40d9f0:

            call _Znwm@PLT

            mov EDX,1
            mov RBX,RAX
            mov WORD PTR [RAX],DX
            jmp .L_40d737
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40da08:

            test EBP,EBP
            mov WORD PTR [RAX+6],BP
            lea RAX,QWORD PTR [RAX+8]
            jne .L_40d83e

            jmp .L_40d861
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40da20:

            mov RDI,R14
            mov RBX,QWORD PTR [R14]
            call _ZdaPv@PLT

            jmp .L_40d75b
.L_40da30:

            lea RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_40d933
.L_40da3e:

            mov EDI,EBP
            call .L_40d4e0
.L_40da45:

            mov EDI,EDX
            call .L_40d4e0
.L_40da4c:

            call __cxa_throw_bad_array_new_length@PLT
.L_40da51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40da60:

            cmp EDX,1
            je .L_40da70

            movzx R8D,R8B
            jmp .L_40d700
          .byte 0x66
          .byte 0x90
.L_40da70:

            mov RAX,QWORD PTR [RSI]
            ret 
.L_40da74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40da80:

            cmp ESI,1
            je .L_40daa0

            mov ECX,EDX
            mov R8D,1
            mov EDX,ESI
            mov RSI,RDI
            mov EDI,6
            jmp .L_40d700
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40daa0:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_40daa4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dab0:

            cmp ESI,1
            je .L_40dad0

            mov ECX,EDX
            xor R8D,R8D
            mov EDX,ESI
            mov RSI,RDI
            mov EDI,6
            jmp .L_40d700
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dad0:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_40dad4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dae0:

            cmp ESI,1
            je .L_40db00

            mov ECX,EDX
            xor R8D,R8D
            mov EDX,ESI
            mov RSI,RDI
            mov EDI,5
            jmp .L_40d700
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40db00:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_40db04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40db10:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
            movzx EDX,BYTE PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp DL,BYTE PTR [RSI]
            je .L_40db68
.L_40db3b:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40e1bb

            add RSP,520
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40db68:

            cmp DL,21
            mov RBX,RDI
            ja .L_40dcd0

            lea RCX,QWORD PTR [RIP+.L_411d50]
            movsxd RAX,DWORD PTR [RCX+RDX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40db88:

            movzx EDX,WORD PTR [RSI+2]
            xor EAX,EAX
            xor DX,WORD PTR [RDI+2]
            and EDX,64
            jne .L_40db3b

            mov ECX,DWORD PTR [RSI+28]
            cmp DWORD PTR [RDI+28],ECX
            jne .L_40db3b

            nop
.L_40dba0:

            mov EAX,DWORD PTR [RSI+24]
            cmp DWORD PTR [RBX+24],EAX
            sete AL
            jmp .L_40db3b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dbb0:

            mov EAX,1
            jmp .L_40db3b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dbc0:

            movsxd RDX,DWORD PTR [RDI+24]
            xor EAX,EAX
            cmp EDX,DWORD PTR [RSI+24]
            jne .L_40db3b

            movzx ECX,WORD PTR [RSI+2]
            xor CX,WORD PTR [RDI+2]
            and ECX,1
            jne .L_40db3b

            mov RSI,QWORD PTR [RSI+32]
            mov RDI,QWORD PTR [RDI+32]
            shl RDX,2
            call memcmp@PLT

            test EAX,EAX
            sete AL
            jmp .L_40db3b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dc00:

            movzx EAX,WORD PTR [RSI+2]
            xor AX,WORD PTR [RDI+2]
            not EAX
            shr AX,15
            jmp .L_40db3b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dc18:

            mov RCX,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RSI+24]
            xor EAX,EAX
            mov EBX,DWORD PTR [RSI+4]
            cmp DWORD PTR [RCX+4],EBX
            jne .L_40db3b

            movsxd RDI,DWORD PTR [RCX+16]
            movsxd R8,DWORD PTR [RSI+16]
            cmp RDI,R8
            lea RDX,QWORD PTR [RDI*8]
            jne .L_40db3b

            mov RSI,QWORD PTR [RSI+8]
            mov RDI,QWORD PTR [RCX+8]
            call memcmp@PLT

            test EAX,EAX
            sete AL
            jmp .L_40db3b
          .byte 0x66
          .byte 0x90
.L_40dc60:

            xor EAX,EAX
            mov ECX,DWORD PTR [RSI+24]
            cmp DWORD PTR [RDI+24],ECX
            jne .L_40db3b

            mov RAX,QWORD PTR [RSI+32]
            cmp QWORD PTR [RDI+32],RAX
            sete AL
            jmp .L_40db3b
          .byte 0x66
          .byte 0x90
.L_40dc80:

            movzx EAX,WORD PTR [RSI+6]
            cmp WORD PTR [RDI+6],AX
            sete AL
            jmp .L_40db3b
.L_40dc90:

            movzx EAX,WORD PTR [RSI+2]
            xor AX,WORD PTR [RDI+2]
            shr AX,6
            xor EAX,1
            and EAX,1
            jmp .L_40db3b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dcb0:

            xor EAX,EAX
            mov ECX,DWORD PTR [RSI+24]
            cmp DWORD PTR [RDI+24],ECX
            jne .L_40db3b

            movzx EAX,WORD PTR [RSI+2]
            xor AX,WORD PTR [RDI+2]
            not EAX
            and EAX,1
            jmp .L_40db3b
.L_40dcd0:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40dd60:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40dd65:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_40de1f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40de24:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186192]
            mov EDX,13
.L_40de34:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,385
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40de70:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4105b8]
            mov EDX,32
.L_40de80:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSolsEi@PLT
.L_40de91:

            cmp BYTE PTR [RSP+112],0
            je .L_40df10
.L_40de98:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_40deca

            call _ZdlPv@PLT
.L_40deca:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_40db3b
.L_40df10:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_40e0df

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_40e03f

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_40df84:

            call .L_40c900
.L_40df89:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_40e0f0

            lea RDI,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+96]
            cmp RAX,RDI
            je .L_40e14e

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_40e15d

            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDI
.L_40dfe6:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_40e00a
.L_40e005:

            call _ZdlPv@PLT
.L_40e00a:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_40e019:

            call write@PLT
.L_40e01e:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_40de98

            call _ZdlPv@PLT

            jmp .L_40de98
.L_40e03f:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_40e055:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_40e121

            lea RDI,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+64]
            cmp RAX,RDI
            je .L_40e170

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_40e17f

            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDI
.L_40e0b7:

            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_40e005

            jmp .L_40e00a
.L_40e0df:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40e0eb:

            jmp .L_40e00a
.L_40e0f0:

            test RDX,RDX
            je .L_40e10e

            cmp RDX,1
            je .L_40e1a5

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
.L_40e10e:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_40dfe6
.L_40e121:

            test RDX,RDX
            je .L_40e13b

            cmp RDX,1
            je .L_40e192

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
.L_40e13b:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_40e0b7
.L_40e14e:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_40e15d:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_40dfe6
.L_40e170:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_40e17f:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+48],RAX
            jmp .L_40e0b7
.L_40e192:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            jmp .L_40e13b
.L_40e1a5:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_40e10e
.L_40e1bb:

            call __stack_chk_fail@PLT
.L_40e1c0:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_40e1d3

            call _ZdlPv@PLT
.L_40e1d3:

            call _ZSt9terminatev@PLT
.L_40e1d8:

            jmp .L_40e1c0
.L_40e1da:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
.L_40e1e8:

            call _Unwind_Resume@PLT
.L_40e1ed:

            mov RBX,RAX
.L_40e1f0:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40e209:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40e21d:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDI
            jmp .L_40e1f0
.L_40e241:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e250:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,520
.L_40e264:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp WORD PTR [RDI+6],0
            jne .L_40e2d0

            movzx EAX,BYTE PTR [RBP]
            cmp AL,11
            je .L_40e518
.L_40e28a:

            cmp AL,20
            je .L_40e550

            cmp AL,4
            je .L_40e2c0
.L_40e296:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e873

            add RSP,520
.L_40e2b4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_40e2c0:

            mov RDI,QWORD PTR [RBP+32]
            test RDI,RDI
            je .L_40e296

            call _ZdaPv@PLT

            jmp .L_40e296
.L_40e2d0:

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40e360:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40e365:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_40e41f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40e424:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186192]
            mov EDX,13
.L_40e434:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,34
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40e470:

            lea RCX,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41092f]
            mov EDX,21
            mov RDI,RCX
            mov QWORD PTR [RSP],RCX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            cmp BYTE PTR [RSP+112],0
            mov RCX,QWORD PTR [RSP]
            je .L_40e590
.L_40e49b:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_40e4cd

            call _ZdlPv@PLT
.L_40e4cd:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            movzx EAX,BYTE PTR [RBP]
            cmp AL,11
            jne .L_40e28a
.L_40e518:

            mov RBX,QWORD PTR [RBP+32]
            test RBX,RBX
            je .L_40e296

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e536

            call _ZdlPv@PLT
.L_40e536:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT

            jmp .L_40e296
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e550:

            mov RDI,QWORD PTR [RBP+24]
            test RDI,RDI
            je .L_40e55e

            call _ZdaPv@PLT
.L_40e55e:

            mov RBX,QWORD PTR [RBP+32]
            test RBX,RBX
            je .L_40e296

            mov RSI,QWORD PTR [RBX+32]
            lea RDI,QWORD PTR [RBX+16]
            call .L_411ee0

            mov ESI,64
            mov RDI,RBX
            call _ZdlPvm@PLT

            jmp .L_40e296
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e590:

            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            mov RDI,RCX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_40e770

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_40e6c8

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_40e605:

            call .L_40c900
.L_40e60a:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40e788

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_40e828

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_40e837

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_40e668:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_40e68c
.L_40e687:

            call _ZdlPv@PLT
.L_40e68c:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_40e69b:

            call write@PLT
.L_40e6a0:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_40e49b

            call _ZdlPv@PLT

            jmp .L_40e49b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e6c8:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_40e6e1:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40e7c8

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_40e800

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_40e80f

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_40e744:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_40e687

            jmp .L_40e68c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e770:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40e77d:

            jmp .L_40e68c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e788:

            test RDX,RDX
            je .L_40e7b0

            cmp RDX,1
            je .L_40e85d

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e7b0:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_40e668
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e7c8:

            test RDX,RDX
            je .L_40e7e8

            cmp RDX,1
            je .L_40e84a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e7e8:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_40e744
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e800:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_40e80f:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_40e744
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e828:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_40e837:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_40e668
.L_40e84a:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_40e7e8
.L_40e85d:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_40e7b0
.L_40e873:

            call __stack_chk_fail@PLT
.L_40e878:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT
.L_40e889:

            call _ZSt9terminatev@PLT
.L_40e88e:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_40e889

            call _ZdlPv@PLT

            jmp .L_40e889
.L_40e8a7:

            jmp .L_40e88e
.L_40e8a9:

            lea RDI,QWORD PTR [RBX+16]
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            jmp .L_40e878
.L_40e8ca:

            lea RDI,QWORD PTR [RBX+8]
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_40e889
.L_40e8d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e8e0:

            cmp WORD PTR [RDI+6],0
            je .L_40e8f0

            xor EAX,EAX
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_40e8f0:

            push RBX
            mov RBX,RDI
            call .L_40e250

            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov EAX,1
            pop RBX
            ret 
.L_40e90d:

            nop
            nop
            nop
.L_40e910:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,88
.L_40e924:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RDI,RDI
            sete DL
            test RSI,RSI
            sete AL
            or DL,AL
            je .L_40e978

            cmp RDI,RSI
            sete R12B
.L_40e94b:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40eb7f

            add RSP,88
.L_40e966:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e978:

            call .L_40db10
.L_40e97d:

            test AL,AL
            mov R12D,EAX
            je .L_40e94b

            movzx EAX,BYTE PTR [RBX]
            lea EDX,DWORD PTR [RAX-5]
            cmp DL,6
            ja .L_40e94b

            lea RCX,QWORD PTR [RSP+32]
            lea R15,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RCX
            lea RCX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+24],RCX
.L_40e9c3:

            cmp AL,5
            jb .L_40ea28

            cmp AL,6
            jbe .L_40ea70

            cmp AL,11
            ja .L_40ea28

            cmp WORD PTR [RBX+6],1
            mov RDI,QWORD PTR [RBX+8]
            jbe .L_40e9e1

            mov RDI,QWORD PTR [RDI]
.L_40e9e1:

            cmp WORD PTR [RBP+6],1
            mov QWORD PTR [RSP+32],RDI
            mov RSI,QWORD PTR [RBP+8]
            jbe .L_40e9f4

            mov RSI,QWORD PTR [RSI]
.L_40e9f4:

            mov QWORD PTR [RSP+40],RSI
.L_40e9f9:

            call .L_40db10

            test AL,AL
            jne .L_40eb70
.L_40ea06:

            mov RDI,QWORD PTR [RSP+48]
            xor R12D,R12D
.L_40ea0e:

            test RDI,RDI
            je .L_40e94b

            call _ZdlPv@PLT

            jmp .L_40e94b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ea28:

            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+56]
            sub RAX,RDI
            sar RAX,3
            test EAX,EAX
            je .L_40ea0e

            lea ESI,DWORD PTR [RAX-2]
            movsxd RSI,ESI
            lea RDX,QWORD PTR [RSI*8]
            cmp RSI,RAX
            lea RCX,QWORD PTR [RDI+RDX*1]
            mov RBP,QWORD PTR [RDI+RDX*1+8]
            mov RBX,QWORD PTR [RCX]
            ja .L_40eb60

            jae .L_40ea67

            mov QWORD PTR [RSP+56],RCX
.L_40ea67:

            movzx EAX,BYTE PTR [RBX]
            jmp .L_40e9c3
          .byte 0x90
.L_40ea70:

            movzx EAX,WORD PTR [RBX+6]
            lea RCX,QWORD PTR [RBX+8]
            xor R13D,R13D
            xor R14D,R14D
            mov QWORD PTR [RSP+8],RCX
            test AX,AX
            jne .L_40eb19

            jmp .L_40ea28
          .byte 0x66
          .byte 0x90
.L_40ea90:

            mov RAX,QWORD PTR [RBX+8]
.L_40ea94:

            cmp WORD PTR [RBP+6],1
            mov RDI,QWORD PTR [RAX+R13*1]
            lea RAX,QWORD PTR [RBP+8]
            mov QWORD PTR [RSP+32],RDI
            jbe .L_40eaac

            mov RAX,QWORD PTR [RBP+8]
.L_40eaac:

            mov RSI,QWORD PTR [RAX+R13*1]
            mov QWORD PTR [RSP+40],RSI
            call .L_40db10

            test AL,AL
            je .L_40ea06

            mov RSI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+64]
            cmp RSI,RAX
            je .L_40eb40

            test RSI,RSI
            je .L_40eade

            mov RDX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSI],RDX
.L_40eade:

            add RSI,8
            mov QWORD PTR [RSP+56],RSI
.L_40eae7:

            cmp RSI,RAX
            je .L_40eb30

            test RSI,RSI
            je .L_40eaf9

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSI],RAX
.L_40eaf9:

            add RSI,8
            mov QWORD PTR [RSP+56],RSI
.L_40eb02:

            movzx EDX,WORD PTR [RBX+6]
            add R14D,1
            add R13,8
            cmp EDX,R14D
            mov EAX,EDX
            jle .L_40ea28
.L_40eb19:

            cmp AX,1
            ja .L_40ea90

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_40ea94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40eb30:

            mov RDX,QWORD PTR [RSP+24]
            mov RDI,R15
            call .L_4120e0

            jmp .L_40eb02
          .byte 0x90
.L_40eb40:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,R15
            call .L_4120e0

            mov RSI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+64]
            jmp .L_40eae7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eb60:

            sub RSI,RAX
            mov RDI,R15
            call .L_412230
.L_40eb6b:

            jmp .L_40ea67
.L_40eb70:

            mov RBX,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+40]
            jmp .L_40ea67
.L_40eb7f:

            call __stack_chk_fail@PLT
.L_40eb84:

            mov RDI,QWORD PTR [RSP+48]
            mov RBX,RAX
            test RDI,RDI
            je .L_40eb96

            call _ZdlPv@PLT
.L_40eb96:

            mov RDI,RBX
.L_40eb99:

            call _Unwind_Resume@PLT
.L_40eb9e:

            nop
            nop
.L_40eba0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_40ebae:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,EDX
            jg .L_40ed08

            cmp EDX,64
            mov R13,RDI
            mov EBX,ESI
            mov R14D,EDX
            jle .L_40ebdc

            cmp ESI,122
            jle .L_40edd5
.L_40ebdc:

            mov RAX,QWORD PTR [R13+32]
            lea R12,QWORD PTR [R13+16]
            lea RBP,QWORD PTR [R13+24]
            test RAX,RAX
            je .L_40ee38

            mov RDX,RBP
            mov RCX,RAX
            jmp .L_40ec0c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ec00:

            mov RDX,RCX
            mov RCX,QWORD PTR [RCX+16]
            test RCX,RCX
            je .L_40ec1a
.L_40ec0c:

            cmp DWORD PTR [RCX+36],EBX
            jge .L_40ec00

            mov RCX,QWORD PTR [RCX+24]
            test RCX,RCX
            jne .L_40ec0c
.L_40ec1a:

            cmp RBP,RDX
            je .L_40ec28

            cmp DWORD PTR [RDX+32],EBX
            jle .L_40ecf8
.L_40ec28:

            test EBX,EBX
            mov ECX,DWORD PTR [R13+8]
            jle .L_40ed30

            lea EDI,DWORD PTR [RBX-1]
            mov RSI,RBP
            mov RDX,RAX
            jmp .L_40ec4c
          .byte 0x90
.L_40ec40:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40ec5a
.L_40ec4c:

            cmp EDI,DWORD PTR [RDX+36]
            jle .L_40ec40

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40ec4c
.L_40ec5a:

            cmp RBP,RSI
            je .L_40ed30

            mov R15D,DWORD PTR [RSI+32]
            cmp EDI,R15D
            jl .L_40ed30

            mov EAX,DWORD PTR [RSI+36]
            mov RDI,R12
            cmp R14D,EAX
            cmovl R14D,EAX
            sub EAX,R15D
            add EAX,1
            sub ECX,EAX
            mov DWORD PTR [R13+8],ECX
            call .L_412cd0

            cmp R14D,1114110
            mov RAX,QWORD PTR [R13+32]
            mov ECX,DWORD PTR [R13+8]
            jg .L_40ee30

            test RAX,RAX
            lea EDI,DWORD PTR [R14+1]
            mov EBX,R15D
            je .L_40ed7f
.L_40ecb3:

            mov RDX,RAX
            mov RSI,RBP
            jmp .L_40eccc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ecc0:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40ecda
.L_40eccc:

            cmp DWORD PTR [RDX+36],EDI
            jge .L_40ecc0

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40eccc
.L_40ecda:

            cmp RBP,RSI
            je .L_40ed48

            mov EDX,DWORD PTR [RSI+32]
            cmp EDX,EDI
            jg .L_40ed48

            mov R14D,DWORD PTR [RSI+36]
            mov EAX,R14D
            sub EAX,EDX
            jmp .L_40edb7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ecf8:

            cmp DWORD PTR [RDX+36],R14D
            jl .L_40ec28

            nop
            nop
            nop
            nop
            nop
            nop
.L_40ed08:

            xor EAX,EAX
.L_40ed0a:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40ee78

            add RSP,24
.L_40ed22:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ed30:

            cmp R14D,1114110
            lea EDI,DWORD PTR [R14+1]
            jle .L_40ecb3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ed48:

            test RAX,RAX
            je .L_40ed7f

            mov RSI,RBP
            jmp .L_40ed64
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ed58:

            mov RSI,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_40ed72
.L_40ed64:

            cmp EBX,DWORD PTR [RAX+36]
            jle .L_40ed58

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_40ed64
.L_40ed72:

            cmp RSI,RBP
            je .L_40ed7f

            mov EAX,DWORD PTR [RSI+32]
            cmp EAX,R14D
            jle .L_40edb0
.L_40ed7f:

            mov EAX,R14D
            mov RSI,RSP
            mov RDI,R12
            sub EAX,EBX
            mov DWORD PTR [RSP],EBX
            mov DWORD PTR [RSP+4],R14D
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            mov DWORD PTR [R13+8],EAX
            call .L_412d80

            mov EAX,1
            jmp .L_40ed0a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40edb0:

            mov EDI,DWORD PTR [RSI+36]
            sub EDI,EAX
            mov EAX,EDI
.L_40edb7:

            add EAX,1
            mov RDI,R12
            sub ECX,EAX
            mov DWORD PTR [R13+8],ECX
            call .L_412cd0

            mov RAX,QWORD PTR [R13+32]
            mov ECX,DWORD PTR [R13+8]
            jmp .L_40ed48
.L_40edd5:

            cmp ESI,65
            mov EDX,65
            mov EAX,90
            cmovge EDX,ESI
            cmp R14D,90
            cmovle EAX,R14D
            cmp EAX,EDX
            jl .L_40ee07

            sub EAX,EDX
            lea ECX,DWORD PTR [RAX+1]
            mov EAX,1
            shl EAX,CL
            lea ECX,DWORD PTR [RDX-65]
            sub EAX,1
            shl EAX,CL
            or DWORD PTR [RDI],EAX
.L_40ee07:

            cmp EBX,97
            mov EAX,97
            cmovge EAX,EBX
            cmp R14D,122
            jg .L_40ee56

            cmp R14D,EAX
            jl .L_40ebdc

            mov EDX,R14D
            jmp .L_40ee5b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ee30:

            mov EBX,R15D
            jmp .L_40ed48
.L_40ee38:

            test EBX,EBX
            mov ECX,DWORD PTR [R13+8]
            jg .L_40ed7f

            cmp R14D,1114110
            jg .L_40ed48

            jmp .L_40ed7f
.L_40ee56:

            mov EDX,122
.L_40ee5b:

            sub EDX,EAX
            lea ECX,DWORD PTR [RDX+1]
            mov EDX,1
            shl EDX,CL
            lea ECX,DWORD PTR [RAX-97]
            sub EDX,1
            shl EDX,CL
            or DWORD PTR [R13+4],EDX
            jmp .L_40ebdc
.L_40ee78:

            call __stack_chk_fail@PLT
.L_40ee7d:

            nop
            nop
            nop
.L_40ee80:

            push R12
            push RBP
            lea RBP,QWORD PTR [RSI+24]
            push RBX
            mov RBX,QWORD PTR [RSI+40]
            cmp RBX,RBP
            je .L_40eeb6

            mov R12,RDI
            nop
            nop
            nop
            nop
.L_40ee98:

            mov EDX,DWORD PTR [RBX+36]
            mov ESI,DWORD PTR [RBX+32]
            mov RDI,R12
            call .L_40eba0

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp RAX,RBP
            mov RBX,RAX
            jne .L_40ee98
.L_40eeb6:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40eebb:

            nop
            nop
            nop
            nop
            nop
.L_40eec0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov EDI,64
            push RBP
            push RBX
            lea R12,QWORD PTR [R15+24]
            sub RSP,24
.L_40eeda:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call _Znwm@PLT

            mov RBX,QWORD PTR [R15+40]
            mov DWORD PTR [RAX+24],0
            mov RBP,RAX
            mov QWORD PTR [RAX+32],0
            add RAX,24
            mov QWORD PTR [RBP+56],0
            mov QWORD PTR [RBP+40],RAX
            mov QWORD PTR [RBP+48],RAX
            cmp RBX,R12
            mov QWORD PTR [RBP],0
            mov DWORD PTR [RBP+8],0
            je .L_40ef60

            lea R14,QWORD PTR [RBP+16]
            mov R13,RSP
            nop
            nop
            nop
            nop
.L_40ef38:

            mov EAX,DWORD PTR [RBX+36]
            mov EDX,DWORD PTR [RBX+32]
            mov RSI,R13
            mov RDI,R14
            mov DWORD PTR [RSP],EDX
            mov DWORD PTR [RSP+4],EAX
            call .L_412d80

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp RAX,R12
            mov RBX,RAX
            jne .L_40ef38
.L_40ef60:

            mov EAX,DWORD PTR [R15]
            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov DWORD PTR [RBP],EAX
            mov EAX,DWORD PTR [R15+4]
            mov DWORD PTR [RBP+4],EAX
            mov EAX,DWORD PTR [R15+8]
            mov DWORD PTR [RBP+8],EAX
            mov RAX,RBP
            jne .L_40ef96

            add RSP,24
.L_40ef8b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40ef96:

            call __stack_chk_fail@PLT
.L_40ef9b:

            nop
            nop
            nop
            nop
            nop
.L_40efa0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_40efae:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,1114110
            jg .L_40f038

            cmp ESI,121
            mov R15,RDI
            mov EBP,ESI
            jg .L_40efe0

            cmp ESI,96
            jg .L_40f0c1

            mov DWORD PTR [RDI+4],0
.L_40efe0:

            cmp EBP,89
            jle .L_40f0b0
.L_40efe9:

            lea EBX,DWORD PTR [RBP+1]
            lea R12,QWORD PTR [R15+24]
            mov R13,RSP
            nop
            nop
            nop
            nop
            nop
.L_40eff8:

            mov RAX,QWORD PTR [R15+32]
            test RAX,RAX
            je .L_40f038

            mov RSI,R12
            jmp .L_40f01c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f010:

            mov RSI,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_40f02a
.L_40f01c:

            cmp DWORD PTR [RAX+36],EBX
            jge .L_40f010

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_40f01c
.L_40f02a:

            cmp R12,RSI
            je .L_40f038

            cmp DWORD PTR [RSI+32],1114111
            jle .L_40f060
.L_40f038:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f0f3

            add RSP,24
.L_40f050:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f060:

            mov RAX,QWORD PTR [RSI+32]
            lea R14,QWORD PTR [R15+16]
            mov RDI,R14
            mov QWORD PTR [RSP],RAX
            call .L_412cd0

            mov EDX,DWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+4]
            sub EAX,EDX
            add EAX,1
            sub DWORD PTR [R15+8],EAX
            cmp EDX,EBP
            jg .L_40eff8

            mov RSI,R13
            mov RDI,R14
            mov DWORD PTR [RSP+4],EBP
            call .L_412dc0

            mov EAX,DWORD PTR [RSP+4]
            sub EAX,DWORD PTR [RSP]
            add EAX,1
            add DWORD PTR [R15+8],EAX
            jmp .L_40eff8
          .byte 0x66
          .byte 0x90
.L_40f0b0:

            cmp EBP,64
            jg .L_40f0dd

            mov DWORD PTR [R15],0
            jmp .L_40efe9
.L_40f0c1:

            mov ECX,122
            mov EAX,67108863
            sub ECX,ESI
            shr EAX,CL
            and DWORD PTR [RDI+4],EAX
            cmp EBP,89
            jg .L_40efe9

            jmp .L_40f0b0
.L_40f0dd:

            mov ECX,90
            mov EAX,67108863
            sub ECX,EBP
            shr EAX,CL
            and DWORD PTR [R15],EAX
            jmp .L_40efe9
.L_40f0f3:

            call __stack_chk_fail@PLT
.L_40f0f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f100:

            push R15
            push R14
            movabs RDX,2305843009213693951
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_40f118:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            add RAX,1
            cmp RAX,RDX
            ja .L_40f350

            test RAX,RAX
            mov R12,RDI
            jne .L_40f2c0

            mov RBX,QWORD PTR [R12+40]
            lea R13,QWORD PTR [R12+24]
            cmp RBX,R13
            je .L_40f309
.L_40f173:

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            je .L_40f298

            xor EBP,EBP
.L_40f180:

            lea R14,QWORD PTR [RSP+8]
            lea R15,QWORD PTR [RSP+16]
            jmp .L_40f193
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f190:

            mov EAX,DWORD PTR [RAX+32]
.L_40f193:

            sub EAX,1
            mov RSI,R14
            mov RDI,R15
            mov DWORD PTR [RSP+8],EBP
            mov DWORD PTR [RSP+12],EAX
.L_40f1a4:

            call .L_412f60

            mov EAX,DWORD PTR [RBX+36]
            mov RDI,RBX
            lea EBP,DWORD PTR [RAX+1]
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp R13,RAX
            mov RBX,RAX
            jne .L_40f190
.L_40f1bf:

            cmp EBP,1114111
            jle .L_40f330
.L_40f1cb:

            lea RBP,QWORD PTR [R12+16]
            mov RSI,QWORD PTR [R12+32]
            mov RDI,RBP
            call .L_411ee0

            mov RDI,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+24],RDI
            mov QWORD PTR [R12+32],0
            mov QWORD PTR [R12+40],R13
            mov QWORD PTR [R12+48],R13
            mov QWORD PTR [R12+56],0
            je .L_40f236

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f210:

            lea RSI,QWORD PTR [RDI+RBX*8]
            mov RDI,RBP
            call .L_412dc0

            mov RDI,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+24]
            add RBX,1
            sub RAX,RDI
            sar RAX,3
            cmp RBX,RAX
            jb .L_40f210
.L_40f236:

            mov EAX,DWORD PTR [R12]
            not EAX
            and EAX,67108863
            mov DWORD PTR [R12],EAX
            mov EAX,DWORD PTR [R12+4]
            not EAX
            and EAX,67108863
            mov DWORD PTR [R12+4],EAX
            mov EAX,1114112
            sub EAX,DWORD PTR [R12+8]
            test RDI,RDI
            mov DWORD PTR [R12+8],EAX
            je .L_40f26f

            call _ZdlPv@PLT
.L_40f26f:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f376

            add RSP,56
.L_40f287:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f298:

            mov EAX,DWORD PTR [RBX+36]
            mov RDI,RBX
            lea EBP,DWORD PTR [RAX+1]
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            cmp R13,RAX
            mov RBX,RAX
            je .L_40f1bf

            mov EAX,DWORD PTR [RAX+32]
            jmp .L_40f180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f2c0:

            lea RBX,QWORD PTR [RAX*8]
            mov RDI,RBX
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RBP,RAX
            test RDI,RDI
            je .L_40f2e2

            call _ZdlPv@PLT
.L_40f2e2:

            lea RAX,QWORD PTR [RBP+RBX*1]
            mov RBX,QWORD PTR [R12+40]
            lea R13,QWORD PTR [R12+24]
            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],RBP
            mov QWORD PTR [RSP+32],RAX
            cmp RBX,R13
            jne .L_40f173
.L_40f309:

            lea RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            movabs RAX,4785070309113856
            mov QWORD PTR [RSP+8],RAX
            call .L_412f60

            jmp .L_40f1cb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f330:

            lea RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+8],EBP
            mov DWORD PTR [RSP+12],1114111
            call .L_412f60

            jmp .L_40f1cb
.L_40f350:

            lea RDI,QWORD PTR [RIP+.L_410945]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40f35c:

            mov RDI,QWORD PTR [RSP+16]
            mov RBX,RAX
            test RDI,RDI
            je .L_40f36e

            call _ZdlPv@PLT
.L_40f36e:

            mov RDI,RBX
.L_40f371:

            call _Unwind_Resume@PLT
.L_40f376:

            call __stack_chk_fail@PLT
.L_40f37b:

            nop
            nop
            nop
            nop
            nop
.L_40f380:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,48
            mov R12,RSI
            sub RSP,24
.L_40f398:

            call _Znwm@PLT

            mov RBX,RAX
            mov RAX,QWORD PTR [R13]
            mov RSI,R12
            lea RDX,QWORD PTR [RBX+32]
            mov RDI,RBP
            mov RAX,QWORD PTR [RAX]
            mov DWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+32],RAX
            call .L_413020

            test RDX,RDX
            je .L_40f408

            test RAX,RAX
            lea RCX,QWORD PTR [RBP+8]
            mov EDI,1
            je .L_40f3f0
.L_40f3d4:

            mov RSI,RBX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RBP+40],1
            add RSP,24
.L_40f3e5:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_40f3f0:

            cmp RDX,RCX
            je .L_40f3d4

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBX+32],RAX
            setb DIL
            jmp .L_40f3d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f408:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40f425:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f430:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_40f439:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI+4]
            cmp AX,-1
            je .L_40f480

            sub EAX,1
            test AX,AX
            mov WORD PTR [RDI+4],AX
            jne .L_40f464

            call .L_40f5a0
.L_40f464:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f59a

            add RSP,40
.L_40f47c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_40f480:

            lea RDI,QWORD PTR [RIP+.L_64a3a0]
            call pthread_mutex_lock@PLT

            mov RDI,QWORD PTR [RIP+.L_64a3c8]
            mov QWORD PTR [RSP+8],RBX
            mov RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+8]
            mov RAX,RCX
            test RDX,RDX
            jne .L_40f50c
.L_40f4a8:

            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RDX
            lea RDX,QWORD PTR [RSP+16]
            call .L_40f380

            mov RDI,QWORD PTR [RIP+.L_64a3c8]
.L_40f4c6:

            mov EBP,DWORD PTR [RAX+40]
            sub EBP,1
            cmp EBP,65534
            jg .L_40f530

            lea RSI,QWORD PTR [RSP+16]
            mov WORD PTR [RBX+4],BP
            mov QWORD PTR [RSP+16],RBX
            call .L_411f60
.L_40f4e7:

            lea RDI,QWORD PTR [RIP+.L_64a3a0]
            call pthread_mutex_unlock@PLT

            jmp .L_40f464
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f500:

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40f51b
.L_40f50c:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40f500

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40f50c
.L_40f51b:

            cmp RCX,RAX
            je .L_40f4a8

            cmp RBX,QWORD PTR [RAX+32]
            jb .L_40f4a8

            jmp .L_40f4c6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f530:

            mov RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+8],RBX
            mov RAX,RCX
            test RDX,RDX
            jne .L_40f55c

            jmp .L_40f57b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f550:

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
.L_40f557:

            test RDX,RDX
            je .L_40f570
.L_40f55c:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40f550

            mov RDX,QWORD PTR [RDX+24]
            jmp .L_40f557
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f570:

            cmp RCX,RAX
            je .L_40f57b

            cmp RBX,QWORD PTR [RAX+32]
            jae .L_40f592
.L_40f57b:

            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RDX
            lea RDX,QWORD PTR [RSP+16]
            call .L_40f380
.L_40f592:

            mov DWORD PTR [RAX+40],EBP
            jmp .L_40f4e7
.L_40f59a:

            call __stack_chk_fail@PLT
.L_40f59f:

            nop
.L_40f5a0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,536
.L_40f5b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp WORD PTR [RDI+6],0
            je .L_40f970

            lea R12,QWORD PTR [RSP+128]
            mov QWORD PTR [RDI+16],0
            xor EBP,EBP
            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40f625
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f600:

            mov RDI,RBX
            call .L_40e250

            mov ESI,40
            mov RDI,RBX
            call _ZdlPvm@PLT

            test RBP,RBP
            je .L_40f982

            mov RBX,RBP
            mov RBP,QWORD PTR [RBP+16]
.L_40f625:

            cmp WORD PTR [RBX+4],0
            jne .L_40f6c0
.L_40f630:

            movzx EAX,WORD PTR [RBX+6]
            test AX,AX
            je .L_40f600

            cmp AX,1
            lea RCX,QWORD PTR [RBX+8]
            jbe .L_40f647

            mov RCX,QWORD PTR [RBX+8]
.L_40f647:

            mov QWORD PTR [RSP+16],R12
            mov R15D,1
            mov R12,RBP
            mov RBP,RBX
            mov RBX,RCX
            jmp .L_40f696
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f660:

            sub EAX,1
            mov WORD PTR [R14+4],AX
.L_40f668:

            test AX,AX
            jne .L_40f680

            cmp WORD PTR [R14+6],0
            je .L_40f950

            mov QWORD PTR [R14+16],R12
            mov R12,R14
.L_40f680:

            movzx EAX,WORD PTR [RBP+6]
.L_40f684:

            mov EDX,R15D
            movzx ESI,AX
            add R15,1
            cmp ESI,EDX
            jle .L_40f920
.L_40f696:

            mov R14,QWORD PTR [RBX+R15*8-8]
            test R14,R14
            je .L_40f684

            movzx EAX,WORD PTR [R14+4]
            cmp AX,-1
            jne .L_40f660

            mov RDI,R14
.L_40f6ae:

            call .L_40f430
.L_40f6b3:

            movzx EAX,WORD PTR [R14+4]
            jmp .L_40f668
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f6c0:

            mov RDI,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+128],0
            call _ZNSt8ios_baseC2Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+472],0
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_40f74a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40f74f:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R12+16]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_40f810:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_40f815:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186192]
            mov EDX,13
.L_40f826:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,136
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_40f864:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186443]
            mov EDX,20
.L_40f875:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,WORD PTR [RBX+4]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSo9_M_insertImEERSoT_@PLT
.L_40f888:

            cmp BYTE PTR [RSP+128],0
            je .L_40f9b0
.L_40f896:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_40f8cc

            call _ZdlPv@PLT
.L_40f8cc:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+136],R13
            mov QWORD PTR [RSP+RAX*1+136],RCX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+248],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_40f630
          .byte 0x66
          .byte 0x90
.L_40f920:

            cmp AX,1
            mov RCX,RBX
            mov RBX,RBP
            mov RBP,R12
            mov R12,QWORD PTR [RSP+16]
            jbe .L_40f93c

            mov RDI,RCX
            call _ZdaPv@PLT
.L_40f93c:

            xor EAX,EAX
            mov WORD PTR [RBX+6],AX
            jmp .L_40f600
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f950:

            mov RDI,R14
            call .L_40e250

            mov ESI,40
            mov RDI,R14
            call _ZdlPvm@PLT

            movzx EAX,WORD PTR [RBP+6]
            jmp .L_40f684
          .byte 0x66
          .byte 0x90
.L_40f970:

            call .L_40e250

            mov ESI,40
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_40f982:

            mov RAX,QWORD PTR [RSP+520]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40fc99

            add RSP,536
.L_40f9a0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f9b0:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_40fba0

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            jbe .L_40fac0

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
.L_40fa2b:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40fbb1

            mov RAX,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_40fc31

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_40fc40

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RAX
.L_40fa8f:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_40fb59

            jmp .L_40fb5e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fac0:

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+64],RAX
            call .L_40c900
.L_40fadb:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_40fbe2

            mov RAX,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_40fc0f

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_40fc1e

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RAX
.L_40fb3a:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_40fb5e
.L_40fb59:

            call _ZdlPv@PLT
.L_40fb5e:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_40fb6d:

            call write@PLT
.L_40fb72:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_40f896

            call _ZdlPv@PLT

            jmp .L_40f896
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fba0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [R12+88]
.L_40fbaa:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_40fbaf:

            jmp .L_40fb5e
.L_40fbb1:

            test RDX,RDX
            je .L_40fbcf

            cmp RDX,1
            je .L_40fc66

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_40fbcf:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_40fa8f
.L_40fbe2:

            test RDX,RDX
            je .L_40fbfc

            cmp RDX,1
            je .L_40fc53

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_40fbfc:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40fb3a
.L_40fc0f:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_40fc1e:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_40fb3a
.L_40fc31:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_40fc40:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_40fa8f
.L_40fc53:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40fbfc
.L_40fc66:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_40fbcf
.L_40fc7c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_40fc94

            call _ZdlPv@PLT
.L_40fc94:

            call _ZSt9terminatev@PLT
.L_40fc99:

            call __stack_chk_fail@PLT
.L_40fc9e:

            mov RBX,RAX
            mov RDI,R12
            call .L_40c160

            mov RDI,RBX
.L_40fcac:

            call _Unwind_Resume@PLT
.L_40fcb1:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40fcc6:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R13
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_40fcee:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+248],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40fd0f:

            mov RBX,RAX
            jmp .L_40fcee
.L_40fd14:

            jmp .L_40fc7c
.L_40fd19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fd20:

            push RBX
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_64a3a0]
            sub RSP,32
.L_40fd2f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call pthread_mutex_lock@PLT

            mov RDI,QWORD PTR [RIP+.L_64a3c8]
            test RDI,RDI
            je .L_40fe60

            cmp WORD PTR [RBX+4],-1
            lea RAX,QWORD PTR [RDI+8]
            mov RDX,QWORD PTR [RDI+16]
            je .L_40fdf8

            test RDX,RDX
            mov QWORD PTR [RSP+8],RBX
            mov RSI,RAX
            jne .L_40fd8c

            jmp .L_40fda6
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fd80:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40fd9b
.L_40fd8c:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40fd80

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40fd8c
.L_40fd9b:

            cmp RAX,RSI
            je .L_40fda6

            cmp RBX,QWORD PTR [RSI+32]
            jae .L_40fdbd
.L_40fda6:

            lea RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            call .L_40f380

            mov RSI,RAX
.L_40fdbd:

            mov EAX,4294967295
            mov DWORD PTR [RSI+40],65535
            mov WORD PTR [RBX+4],AX
.L_40fdcd:

            lea RDI,QWORD PTR [RIP+.L_64a3a0]
            call pthread_mutex_unlock@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40fea9

            add RSP,32
.L_40fdf1:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fdf8:

            test RDX,RDX
            mov QWORD PTR [RSP+8],RBX
            mov RSI,RAX
            jne .L_40fe1c

            jmp .L_40fe36
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fe10:

            mov RSI,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_40fe2b
.L_40fe1c:

            cmp RBX,QWORD PTR [RDX+32]
            jbe .L_40fe10

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_40fe1c
.L_40fe2b:

            cmp RAX,RSI
            je .L_40fe36

            cmp RBX,QWORD PTR [RSI+32]
            jae .L_40fe4d
.L_40fe36:

            lea RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            call .L_40f380

            mov RSI,RAX
.L_40fe4d:

            add DWORD PTR [RSI+40],1
            jmp .L_40fdcd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fe60:

            mov EDI,48
            call _Znwm@PLT

            cmp WORD PTR [RBX+4],-1
            lea RSI,QWORD PTR [RAX+8]
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov RDI,RAX
            mov QWORD PTR [RAX+24],RSI
            mov QWORD PTR [RAX+32],RSI
            mov QWORD PTR [RIP+.L_64a3c8],RAX
            mov QWORD PTR [RSP+8],RBX
            jne .L_40fda6

            jmp .L_40fe36
.L_40fea9:

            call __stack_chk_fail@PLT
.L_40feae:

            nop
            nop
.L_40feb0:

            movzx EDX,WORD PTR [RDI+4]
            mov RAX,RDI
            cmp DX,-3
            ja .L_40fec8

            add EDX,1
            mov WORD PTR [RDI+4],DX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fec8:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDI
            call .L_40fd20

            mov RAX,QWORD PTR [RSP+8]
            add RSP,24
            ret 
.L_40fee0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_40feee:

            mov QWORD PTR [RSI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            mov BYTE PTR [RAX],0
            mov BYTE PTR [RDX],0
            xor EAX,EAX
            mov QWORD PTR [RCX],0
            cmp BYTE PTR [RDI],5
            je .L_40ff40
.L_40ff1d:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41025b

            add RSP,72
.L_40ff35:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40ff40:

            mov R12,RDI
            movzx EDI,WORD PTR [RDI+6]
            mov RBP,RSI
            mov R13,RDX
            mov R15,RCX
            lea R10,QWORD PTR [R12+8]
            cmp DI,1
            jbe .L_40ff60

            mov R10,QWORD PTR [R12+8]
.L_40ff60:

            test EDI,EDI
            je .L_40ff94

            mov RAX,QWORD PTR [R10]
            cmp BYTE PTR [RAX],18
            jne .L_40ff94

            lea RAX,QWORD PTR [R10+8]
            xor EBX,EBX
            jmp .L_40ff8d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ff78:

            mov RCX,QWORD PTR [RAX]
            mov R14,RAX
            add RAX,8
            movzx ESI,BYTE PTR [RCX]
            cmp SIL,18
            jne .L_40ffa0

            mov EBX,EDX
.L_40ff8d:

            lea EDX,DWORD PTR [RBX+1]
            cmp EDX,EDI
            jne .L_40ff78
.L_40ff94:

            xor EAX,EAX
            jmp .L_40ff1d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ffa0:

            cmp SIL,3
            je .L_410150

            cmp SIL,4
            jne .L_40ff94

            test BYTE PTR [RCX+2],32
            mov EAX,DWORD PTR [RCX+24]
            mov QWORD PTR [RSP+8],R10
            mov QWORD PTR [RSP],RCX
            jne .L_41006d

            shl EAX,2
            xor EDX,EDX
            mov RDI,RBP
            movsxd RSI,EAX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc@PLT

            mov RCX,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RBP]
            mov R10,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RCX+24]
            test ESI,ESI
            jle .L_410257

            lea RAX,QWORD PTR [RSP+48]
            xor R11D,R11D
            xor R8D,R8D
            mov QWORD PTR [RSP+40],RAX
            jmp .L_410018
.L_410000:

            mov BYTE PTR [RDX],AL
            add RDX,1
.L_410006:

            add R8D,1
            add R11,4
            cmp DWORD PTR [RCX+24],R8D
            jle .L_4101e8
.L_410018:

            mov RAX,QWORD PTR [RCX+32]
            mov EAX,DWORD PTR [RAX+R11*1]
            cmp EAX,127
            mov DWORD PTR [RSP+48],EAX
            jle .L_410000

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,RDX
            mov QWORD PTR [RSP+32],R11
            mov QWORD PTR [RSP+24],R10
            mov DWORD PTR [RSP+20],R8D
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_4148e0

            mov RDX,QWORD PTR [RSP]
            cdqe 
            mov R11,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [RSP+8]
            add RDX,RAX
            jmp .L_410006
.L_41006d:

            movsxd RSI,EAX
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc@PLT

            mov RCX,QWORD PTR [RSP]
            xor EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RCX+24]
            test EDI,EDI
            jle .L_4100ab

            nop
            nop
            nop
            nop
.L_410090:

            mov RSI,QWORD PTR [RCX+32]
            mov RDX,QWORD PTR [RBP]
            mov ESI,DWORD PTR [RSI+RAX*4]
            mov BYTE PTR [RDX+RAX*1],SIL
            lea EDX,DWORD PTR [RAX+1]
            add RAX,1
            cmp DWORD PTR [RCX+24],EDX
            jg .L_410090
.L_4100ab:

            mov RAX,QWORD PTR [R14]
            movzx EDX,WORD PTR [R12+6]
            lea R14D,DWORD PTR [RBX+2]
            movzx EAX,WORD PTR [RAX+2]
            mov BYTE PTR [R13],AL
            and BYTE PTR [R13],1
            cmp EDX,R14D
            jle .L_410190

            add EBX,3
            movsxd RSI,R14D
            movsxd RBX,EBX
            lea RBP,QWORD PTR [RSI*8]
            mov RAX,RBX
            neg RAX
            lea R13,QWORD PTR [RBP+RAX*8]
            add R13,R10
            jmp .L_410101
          .byte 0x90
.L_4100f0:

            add EAX,1
            mov WORD PTR [RDI+4],AX
.L_4100f7:

            mov EAX,EBX
            add RBX,1
            cmp EDX,EAX
            jle .L_410128
.L_410101:

            mov RDI,QWORD PTR [R13+RBX*8]
            movzx EAX,WORD PTR [RDI+4]
            cmp AX,-3
            jbe .L_4100f0

            mov QWORD PTR [RSP],R10
            call .L_40fd20

            movzx EDX,WORD PTR [R12+6]
            mov R10,QWORD PTR [RSP]
            jmp .L_4100f7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410128:

            sub EDX,R14D
            lea RSI,QWORD PTR [R10+RBP*1]
            cmp EDX,1
            jne .L_4101d0

            mov RAX,QWORD PTR [RSI]
.L_41013b:

            mov QWORD PTR [R15],RAX
            mov EAX,1
            jmp .L_40ff1d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410150:

            test BYTE PTR [RCX+2],32
            mov R8D,DWORD PTR [RCX+24]
            jne .L_410164

            cmp R8D,127
            jg .L_410206
.L_410164:

            mov RSI,QWORD PTR [RBP+8]
            movsx R8D,R8B
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            mov QWORD PTR [RSP],R10
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov R10,QWORD PTR [RSP]
            jmp .L_4100ab
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410190:

            movzx EBX,WORD PTR [R12+2]
            mov EDI,40
            call _Znwm@PLT

            pxor XMM0,XMM0
            mov EDX,2
            mov WORD PTR [RAX],DX
            mov QWORD PTR [RAX+4],1
            mov WORD PTR [RAX+2],BX
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            movups XMMWORD PTR [RAX+24],XMM0
            jmp .L_41013b
.L_4101d0:

            movzx ECX,WORD PTR [R12+2]
            xor R8D,R8D
            mov EDI,5
            call .L_40d700

            jmp .L_41013b
.L_4101e8:

            mov RSI,RDX
            sub RSI,QWORD PTR [RBP]
.L_4101ef:

            xor EDX,EDX
            mov RDI,RBP
            mov QWORD PTR [RSP],R10
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc@PLT

            mov R10,QWORD PTR [RSP]
            jmp .L_4100ab
.L_410206:

            lea RSI,QWORD PTR [RCX+24]
            lea RCX,QWORD PTR [RSP+52]
            mov QWORD PTR [RSP+8],R10
            mov RDI,RCX
            mov QWORD PTR [RSP],RCX
            call .L_4148e0

            movsxd RDX,EAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RSP]
            mov R10,QWORD PTR [RSP+8]
            cmp RDX,RAX
            ja .L_410260

            mov RSI,RCX
            mov RDI,RBP
            mov QWORD PTR [RSP],R10
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov R10,QWORD PTR [RSP]
            jmp .L_4100ab
.L_410257:

            xor ESI,ESI
            jmp .L_4101ef
.L_41025b:

            call __stack_chk_fail@PLT
.L_410260:

            lea RDI,QWORD PTR [RIP+.L_4108f5]
            call _ZSt20__throw_length_errorPKc@PLT
.L_41026c:

            nop
            nop
            nop
            nop
.L_410270:

            push RBP
            push RBX
            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI+4]
            cmp AX,-1
            movzx EBX,AX
            je .L_4102b0
.L_410293:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_410339

            add RSP,40
            pop RBX
            pop RBP
            ret 
.L_4102b0:

            mov RBP,RDI
            lea RDI,QWORD PTR [RIP+.L_64a3a0]
            xor EBX,EBX
            call pthread_mutex_lock@PLT

            mov RDI,QWORD PTR [RIP+.L_64a3c8]
            test RDI,RDI
            je .L_410328

            mov RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+8],RBP
            mov RAX,RCX
            test RDX,RDX
            jne .L_4102f4

            jmp .L_41030e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4102e8:

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
            test RDX,RDX
            je .L_410303
.L_4102f4:

            cmp RBP,QWORD PTR [RDX+32]
            jbe .L_4102e8

            mov RDX,QWORD PTR [RDX+24]
            test RDX,RDX
            jne .L_4102f4
.L_410303:

            cmp RCX,RAX
            je .L_41030e

            cmp RBP,QWORD PTR [RAX+32]
            jae .L_410325
.L_41030e:

            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RDX
            lea RDX,QWORD PTR [RSP+16]
            call .L_40f380
.L_410325:

            mov EBX,DWORD PTR [RAX+40]
.L_410328:

            lea RDI,QWORD PTR [RIP+.L_64a3a0]
            call pthread_mutex_unlock@PLT

            jmp .L_410293
.L_410339:

            call __stack_chk_fail@PLT
.L_41033e:

            nop
            nop
.L_410340:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea RBP,QWORD PTR [RIP+.L_646e90]
            sub RSP,48
.L_410352:

            mov RBX,RSP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_410368:

            call .L_411db0
.L_41036d:

            mov ECX,1
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+20],1000000
.L_410387:

            call .L_413e00
.L_41038c:

            mov R12D,DWORD PTR [RSP+24]
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            call .L_412ab0

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_4103b9

            add RSP,48
.L_4103b4:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4103b9:

            call __stack_chk_fail@PLT
.L_4103be:

            mov R12,RAX
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            call .L_412ab0

            mov RDI,R12
.L_4103d0:

            call _Unwind_Resume@PLT
.L_4103d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4103e0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea RBP,QWORD PTR [RIP+.L_646ed0]
            sub RSP,48
.L_4103f2:

            mov RBX,RSP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_410408:

            call .L_411db0
.L_41040d:

            mov ECX,1
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+20],1000000
.L_41042f:

            call .L_413e00
.L_410434:

            mov R12,QWORD PTR [RSP+24]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP],RBP
            call .L_412ab0

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41046a

            add RSP,48
.L_410465:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41046a:

            call __stack_chk_fail@PLT
.L_41046f:

            mov RBP,RAX
            mov RDI,RBX
            call .L_412b90

            mov RDI,RBP
.L_41047d:

            call _Unwind_Resume@PLT
.L_410482:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410490:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea RBP,QWORD PTR [RIP+.L_646f10]
            sub RSP,48
.L_4104a2:

            mov RBX,RSP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_4104b8:

            call .L_411db0
.L_4104bd:

            mov ECX,1
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+20],1000000
.L_4104df:

            call .L_413e00
.L_4104e4:

            mov R12,QWORD PTR [RSP+24]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP],RBP
            call .L_412ab0

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41051a

            add RSP,48
.L_410515:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41051a:

            call __stack_chk_fail@PLT
.L_41051f:

            mov RBP,RAX
            mov RDI,RBX
            call .L_412c30

            mov RDI,RBP
.L_41052d:

            call _Unwind_Resume@PLT
.L_410532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410540:

            cmp BYTE PTR [RSI],11
            mov EAX,EDX
            je .L_410550

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410550:

            add DWORD PTR [RDI+24],1
            ret 
.L_410555:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410560:

            mov EAX,EDX
            ret 
.L_410563:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410570:

            mov EAX,ESI
            ret 
.L_410573:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410580:

            mov EAX,ECX
            ret 
.L_410583:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410588:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_4105b8:
          .string "Unexpected op in Regexp::Equal: "
          .zero 7
.L_4105e0:

            outsb DX,BYTE PTR [RSI]
            outsd DX,DWORD PTR [RSI]
            and BYTE PTR [RCX+114],AH
            jne .L_410655
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x20

            outsw DX,WORD PTR [RSI]
            jb .L_410610
          .byte 0x72
          .byte 0x65

            jo .L_410659
          .byte 0x74
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x6f
          .byte 0x70
          .byte 0x65
          .byte 0x72
          .byte 0x61

            je .L_410671

            jb .L_410604
.L_410604:

            or AL,BYTE PTR [RAX]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410610:

            push R12
            push RBP
            lea RSI,QWORD PTR [RIP+.L_410604]
            push RBX
            mov EDX,1
            mov RBX,RDI
            add RDI,8
            sub RSP,112
.L_41062b:

            mov RBP,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
.L_41063e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410643:

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+8],0
            mov BYTE PTR [RSP+16],0
.L_410655:

            mov QWORD PTR [RSP],RAX
.L_410659:

            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_410820

            mov RDX,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RBX+48]
            cmp RAX,RDX
.L_410671:

            jbe .L_410750

            lea R12,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+64],RDX
            mov RDX,RAX
.L_41068c:

            call .L_40c900
.L_410691:

            mov RSI,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+72]
            cmp RSI,RAX
            je .L_410838

            lea RAX,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+80]
            cmp RDI,RAX
            je .L_410800

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
            je .L_41080e

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RAX
.L_4106e5:

            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+64]
            cmp RDI,R12
            je .L_410704
.L_4106ff:

            call _ZdlPv@PLT
.L_410704:

            movsxd RDX,DWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            mov EDI,2
.L_410712:

            call write@PLT
.L_410717:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov BYTE PTR [RBX],1
            cmp RDI,RBP
            je .L_41072c

            call _ZdlPv@PLT
.L_41072c:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4108c0

            add RSP,112
.L_410744:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410750:

            lea R12,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+32],RAX
.L_410762:

            call .L_40c900

            mov RSI,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+40]
            cmp RSI,RAX
            je .L_410870

            lea RAX,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+48]
            cmp RDI,RAX
            je .L_4107e0

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
            je .L_4107ee

            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+48],RAX
.L_4107b3:

            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RDI],0
            add R12,16
            mov RDI,QWORD PTR [RSP+32]
            cmp RDI,R12
            jne .L_4106ff

            jmp .L_410704
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4107e0:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
.L_4107ee:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+32],RDI
            jmp .L_4107b3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410800:

            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
.L_41080e:

            lea RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_4106e5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410820:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41082c:

            jmp .L_410704
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410838:

            test RDX,RDX
            je .L_410853

            cmp RDX,1
            jne .L_4108a0

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
.L_410853:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4106e5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410870:

            test RDX,RDX
            je .L_41088b

            cmp RDX,1
            jne .L_4108b0

            movzx EAX,BYTE PTR [RSP+48]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
.L_41088b:

            mov QWORD PTR [RSP+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4107b3
          .byte 0x66
          .byte 0x90
.L_4108a0:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP]
            jmp .L_410853
.L_4108b0:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP]
            jmp .L_41088b
.L_4108c0:

            call __stack_chk_fail@PLT
.L_4108c5:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_4108da

            call _ZdlPv@PLT
.L_4108da:

            mov RDI,RBX
.L_4108dd:

            call _Unwind_Resume@PLT
.L_4108e2:

            jmp .L_4108c5
.L_4108e4:

            jne .L_410954
          .byte 0x65
          .byte 0x78
          .byte 0x70
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x0
.L_4108f5:
          .string "basic_string::append"
.L_41090a:
          .string ": "
.L_41090d:
          .string "./re2/regexp.h"
.L_41091c:
          .string ":"
.L_41091e:
          .string "Cannot AllocSub "
.L_41092f:
          .string "Regexp not destroyed."
.L_410945:
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x65
.L_410954:

            add BYTE PTR [RDX+97],AL
            and BYTE PTR FS:[RDX+101],DH
            jb .L_4109c4
          .byte 0x6e
          .byte 0x63
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x75
          .byte 0x6e
          .byte 0x74
          .byte 0x20
          .byte 0x0
.L_41096a:

            outsb DX,BYTE PTR [RSI]
            outsd DX,DWORD PTR [RSI]
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x0
.L_410973:
          .string "invalid escape sequence"
.L_41098b:
          .string "invalid character class"
.L_4109a3:
          .string "invalid character class range"
.L_4109c1:
          .byte 0x6d
          .byte 0x69
          .byte 0x73
.L_4109c4:

            jae .L_410a2f

            outsb DX,BYTE PTR [RSI]
            and BYTE PTR [EBP],BL
.L_4109cb:

            insd DWORD PTR [RDI],DX
            imul ESI,DWORD PTR [RBX+115],543649385
            sub DWORD PTR [RAX],EAX
.L_4109d5:
          .string "trailing \\"
.L_4109e0:
          .string "invalid repetition size"
.L_4109f8:
          .string "bad repetition operator"
.L_410a10:

            imul EBP,DWORD PTR [RSI+118],1684630625
            and BYTE PTR [RAX+101],DH
            jb .L_410a88

            and BYTE PTR [RDI+112],CH
            jb .L_410a83
          .byte 0x74
          .byte 0x6f

            jb .L_410a26
.L_410a26:

            imul EBP,DWORD PTR [RSI+118],1684630625
          .byte 0x20
          .byte 0x55
.L_410a2f:

            push RSP
          .byte 0x46
          .byte 0x2d
          .byte 0x38
          .byte 0x0
.L_410a34:
          .string "invalid named capture group"
# WARNING: found overlapping blocks at address 10808
# WARNING: found overlapping blocks at address 10814
# WARNING: found overlapping blocks at address 10818
# WARNING: found overlapping blocks at address 1081c
# WARNING: found overlapping blocks at address 1081f

            jb 67719
            xor CH,BYTE PTR [RDI]
          .byte 0x72
          .byte 0x65
          .byte 0x67
          .byte 0x65
          .byte 0x78
          .byte 0x70
          .byte 0x2e
          .byte 0x63
          .byte 0x63
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_410a60:
          .string "CaptureNamesWalker::ShortVisit called"
# WARNING: found overlapping blocks at address 10849
# WARNING: found overlapping blocks at address 10853
.set .L_410a83, . - 3

.L_410a88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410a90:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_410aa8:

            lea RBX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+12],EDX
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_410b50:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_410b55:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_410c12:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_410c17:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186192]
            mov EDX,13
.L_410c27:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,606
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410c63:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_410a60]
            mov EDX,37
.L_410c73:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_410c78:

            cmp BYTE PTR [RSP+128],0
            je .L_410d28
.L_410c86:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_410cb4

            call _ZdlPv@PLT
.L_410cb4:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_41101e

            add RSP,536
.L_410d1a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410d28:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_410f10

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_410e68

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_410da0:

            call .L_40c900
.L_410da5:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_410f28

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_410fa0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_410faf

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_410e04:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_410e28
.L_410e23:

            call _ZdlPv@PLT
.L_410e28:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_410e37:

            call write@PLT
.L_410e3c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_410c86

            call _ZdlPv@PLT

            jmp .L_410c86
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e68:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_410e82:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_410f68

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_410fc8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_410fd7

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_410ee6:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_410e23

            jmp .L_410e28
          .byte 0x66
          .byte 0x90
.L_410f10:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_410f1e:

            jmp .L_410e28
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410f28:

            test RDX,RDX
            je .L_410f50

            cmp RDX,1
            je .L_411008

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410f50:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_410e04
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410f68:

            test RDX,RDX
            je .L_410f88

            cmp RDX,1
            je .L_410ff0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_410f88:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_410ee6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410fa0:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_410faf:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_410e04
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410fc8:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_410fd7:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_410ee6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410ff0:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410f88
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411008:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_410f50
.L_41101e:

            call __stack_chk_fail@PLT
.L_411023:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_41103b

            call _ZdlPv@PLT
.L_41103b:

            call _ZSt9terminatev@PLT
.L_411040:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_411067:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_41107b:

            call _Unwind_Resume@PLT
.L_411080:

            jmp .L_411023
.L_411082:

            mov R13,RAX
            jmp .L_411067
.L_411087:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41109b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4110ae:
          .byte 0x66
          .byte 0x90
.L_4110b0:
          .string "NamedCapturesWalker::ShortVisit called"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4110e0:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_4110f8:

            lea RBX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+12],EDX
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4111a0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4111a5:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_411262:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_411267:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186192]
            mov EDX,13
.L_411277:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,566
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4112b3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4110b0]
            mov EDX,38
.L_4112c3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4112c8:

            cmp BYTE PTR [RSP+128],0
            je .L_411378
.L_4112d6:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_411304

            call _ZdlPv@PLT
.L_411304:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_41166e

            add RSP,536
.L_41136a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411378:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_411560

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_4114b8

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_4113f0:

            call .L_40c900
.L_4113f5:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_411578

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_4115f0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_4115ff

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_411454:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_411478
.L_411473:

            call _ZdlPv@PLT
.L_411478:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_411487:

            call write@PLT
.L_41148c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_4112d6

            call _ZdlPv@PLT

            jmp .L_4112d6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4114b8:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_4114d2:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4115b8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_411618

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_411627

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_411536:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_411473

            jmp .L_411478
          .byte 0x66
          .byte 0x90
.L_411560:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41156e:

            jmp .L_411478
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411578:

            test RDX,RDX
            je .L_4115a0

            cmp RDX,1
            je .L_411658

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4115a0:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_411454
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4115b8:

            test RDX,RDX
            je .L_4115d8

            cmp RDX,1
            je .L_411640

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4115d8:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_411536
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4115f0:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_4115ff:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_411454
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411618:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_411627:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_411536
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411640:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4115d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411658:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4115a0
.L_41166e:

            call __stack_chk_fail@PLT
.L_411673:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_41168b

            call _ZdlPv@PLT
.L_41168b:

            call _ZSt9terminatev@PLT
.L_411690:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_4116b7:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_4116cb:

            call _Unwind_Resume@PLT
.L_4116d0:

            jmp .L_411673
.L_4116d2:

            mov R13,RAX
            jmp .L_4116b7
.L_4116d7:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4116eb:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4116fe:

            nop
            nop
.L_411700:
          .string "NumCapturesWalker::ShortVisit called"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_411730:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_411748:

            lea RBX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+12],EDX
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4117f0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4117f5:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_4118b2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4118b7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-186192]
            mov EDX,13
.L_4118c7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,522
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_411903:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_411700]
            mov EDX,36
.L_411913:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_411918:

            cmp BYTE PTR [RSP+128],0
            je .L_4119c8
.L_411926:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_411954

            call _ZdlPv@PLT
.L_411954:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_411cbe

            add RSP,536
.L_4119ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4119c8:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_411bb0

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_411b08

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_411a40:

            call .L_40c900
.L_411a45:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_411bc8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_411c40

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_411c4f

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_411aa4:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_411ac8
.L_411ac3:

            call _ZdlPv@PLT
.L_411ac8:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_411ad7:

            call write@PLT
.L_411adc:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_411926

            call _ZdlPv@PLT

            jmp .L_411926
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411b08:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_411b22:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_411c08

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_411c68

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_411c77

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_411b86:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_411ac3

            jmp .L_411ac8
          .byte 0x66
          .byte 0x90
.L_411bb0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_411bbe:

            jmp .L_411ac8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411bc8:

            test RDX,RDX
            je .L_411bf0

            cmp RDX,1
            je .L_411ca8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411bf0:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_411aa4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411c08:

            test RDX,RDX
            je .L_411c28

            cmp RDX,1
            je .L_411c90

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c28:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_411b86
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411c40:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_411c4f:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_411aa4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411c68:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_411c77:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_411b86
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411c90:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_411c28
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411ca8:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_411bf0
.L_411cbe:

            call __stack_chk_fail@PLT
.L_411cc3:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_411cdb

            call _ZdlPv@PLT
.L_411cdb:

            call _ZSt9terminatev@PLT
.L_411ce0:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
.L_411d07:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_411d1b:

            call _Unwind_Resume@PLT
.L_411d20:

            jmp .L_411cc3
.L_411d22:

            mov R13,RAX
            jmp .L_411d07
.L_411d27:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_411d3b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_411d4e:

            nop
            nop
.L_411d50:
          .byte .L_411dd0-.L_411d50
          .byte 0xbf
          .byte 0xff
          .byte 0xff
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dcb0-.L_411d50
          .long .L_40dbc0-.L_411d50
          .long .L_40dc80-.L_411d50
          .long .L_40dc80-.L_411d50
          .long .L_40dc90-.L_411d50
          .long .L_40dc90-.L_411d50
          .long .L_40dc90-.L_411d50
          .long .L_40db88-.L_411d50
          .long .L_40dc60-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dbb0-.L_411d50
          .long .L_40dc00-.L_411d50
          .long .L_40dc18-.L_411d50
          .long .L_40dba0-.L_411d50
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411db0:

            lea RAX,QWORD PTR [RIP+.L_649cd0]
            push R12
            push RBP
            push RBX
.L_411dbb:

            mov RBP,RDI
            mov QWORD PTR [RDI],RAX
            mov EDI,80
.L_411dc6:

            call _Znwm@PLT
.L_411dcb:

            mov EDI,64
.L_411dd0:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBX,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_411e22:

            call _Znwm@PLT
.L_411e27:

            mov RCX,QWORD PTR [RBX+8]
            mov EDI,512
            mov QWORD PTR [RBX],RAX
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R12,QWORD PTR [RAX+RDX*8]
.L_411e3e:

            call _Znwm@PLT
.L_411e43:

            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [RBP+8],RBX
            mov BYTE PTR [RBP+16],0
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+64],RDX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+48],RAX
            pop RBX
.L_411e77:

            pop RBP
            pop R12
            ret 
.L_411e7b:

            mov RBP,RAX
.L_411e7e:

            mov RDI,RBX
            mov ESI,80
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_411e8e:

            call _Unwind_Resume@PLT
.L_411e93:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_411e9b:

            call __cxa_rethrow@PLT
.L_411ea0:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBP
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBX]
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
.L_411ec7:

            call __cxa_rethrow@PLT
.L_411ecc:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            jmp .L_411e7e
.L_411ed6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ee0:

            test RSI,RSI
            je .L_411f18

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_411eef:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_411ee0

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_411eef

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411f18:

            ret 
.L_411f1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_411f20:

            test RSI,RSI
            je .L_411f58

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_411f2f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_411f20

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_411f2f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411f58:

            ret 
.L_411f5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_411f60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            lea R13,QWORD PTR [RBP+8]
            sub RSP,8
.L_411f75:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_4120c8

            mov RDX,QWORD PTR [RSI]
            mov R15,R13
            mov RBX,RDI
            jmp .L_411f99
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411f90:

            mov RBX,QWORD PTR [RBX+24]
            test RBX,RBX
            je .L_411fb0
.L_411f99:

            cmp QWORD PTR [RBX+32],RDX
            jb .L_411f90

            mov RAX,QWORD PTR [RBX+16]
            jbe .L_412008

            mov R15,RBX
            mov RBX,RAX
            test RBX,RBX
            jne .L_411f99
.L_411fb0:

            cmp R13,R15
            sete AL
.L_411fb6:

            cmp QWORD PTR [RBP+24],R15
            mov R14,QWORD PTR [RBP+40]
            jne .L_4120c0

            test AL,AL
            je .L_4120c0
.L_411fcc:

            mov RSI,RDI
            mov RDI,RBP
            call .L_411f20

            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],R13
            mov QWORD PTR [RBP+32],R13
            mov QWORD PTR [RBP+40],0
.L_411fef:

            add RSP,8
.L_411ff3:

            mov RAX,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412008:

            mov RCX,QWORD PTR [RBX+24]
            test RCX,RCX
            jne .L_412024

            jmp .L_412038
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412018:

            mov R15,RCX
            mov RCX,QWORD PTR [RCX+16]
            test RCX,RCX
            je .L_412038
.L_412024:

            cmp RDX,QWORD PTR [RCX+32]
            jb .L_412018

            mov RCX,QWORD PTR [RCX+24]
            test RCX,RCX
            jne .L_412024

            nop
            nop
            nop
            nop
            nop
.L_412038:

            test RAX,RAX
            je .L_41204f
.L_41203d:

            cmp RDX,QWORD PTR [RAX+32]
            ja .L_4120a0

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            jne .L_41203d
.L_41204f:

            cmp QWORD PTR [RBP+24],RBX
            mov R14,QWORD PTR [RBP+40]
            je .L_4120b0
.L_412059:

            cmp R15,RBX
            je .L_4120c0

            nop
            nop
.L_412060:

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@PLT

            mov RDI,RBX
            mov RSI,R13
            mov R12,RAX
            call _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@PLT

            mov RDI,RAX
            mov RBX,R12
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP+40]
            sub RAX,1
            cmp R12,R15
            mov QWORD PTR [RBP+40],RAX
            jne .L_412060

            sub R14,RAX
            jmp .L_411fef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4120a0:

            mov RAX,QWORD PTR [RAX+24]
            jmp .L_412038
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4120b0:

            cmp R15,R13
            jne .L_412059

            jmp .L_411fcc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4120c0:

            xor R14D,R14D
            jmp .L_411fef
.L_4120c8:

            mov R15,R13
            mov EAX,1
            jmp .L_411fb6
.L_4120d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4120e0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_4120f7:

            mov RCX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov RAX,RCX
            sub R14,RBX
            sub RAX,RBX
            sar RAX,3
            test RAX,RAX
            je .L_4121d0

            lea RSI,QWORD PTR [RAX+RAX*1]
            mov R15,-8
            cmp RAX,RSI
            jbe .L_4121e8
.L_412128:

            mov RDI,R15
            mov QWORD PTR [RSP],RDX
            call _Znwm@PLT

            mov RBX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,R12
            mov RDX,QWORD PTR [RSP]
            mov R13,RAX
            add R15,RAX
            sub R8,RBX
.L_41214c:

            add R14,R13
            je .L_412157

            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [R14],RAX
.L_412157:

            cmp R12,RBX
            je .L_41217c

            mov RDX,R8
            mov RSI,RBX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_41217c:

            mov R14,RCX
            lea R8,QWORD PTR [R13+R8*1+8]
            sub R14,R12
            cmp RCX,R12
            je .L_41219d

            mov RDI,R8
            mov RDX,R14
            mov RSI,R12
            call memcpy@PLT

            mov R8,RAX
.L_41219d:

            add R14,R8
            test RBX,RBX
            je .L_4121ad

            mov RDI,RBX
            call _ZdlPv@PLT
.L_4121ad:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],R14
            mov QWORD PTR [RBP+16],R15
            add RSP,24
.L_4121bd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4121d0:

            mov ESI,1
.L_4121d5:

            lea R15,QWORD PTR [RSI*8]
            jmp .L_412128
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4121e8:

            movabs RAX,2305843009213693951
            cmp RSI,RAX
            ja .L_412128

            test RSI,RSI
            jne .L_4121d5

            mov R8,R14
            xor R15D,R15D
            xor R13D,R13D
            jmp .L_41214c
.L_41220e:

            jbe .L_412275
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x5f
          .byte 0x4d
          .byte 0x5f
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x61
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412230:

            test RSI,RSI
            je .L_412278

            mov RCX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,RCX
            mov R8,RCX
            sar RAX,3
            cmp RAX,RSI
            jb .L_412280

            mov RDX,RSI
            mov RAX,RCX
            nop
            nop
            nop
            nop
            nop
            nop
.L_412258:

            mov QWORD PTR [RAX],0
            add RAX,8
            sub RDX,1
            jne .L_412258

            lea RAX,QWORD PTR [RCX+RSI*8]
            mov QWORD PTR [RDI+8],RAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
.L_412275:

            add BYTE PTR [RAX],R8B
.L_412278:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412280:

            push R15
.L_412282:

            push R14
            movabs RDX,2305843009213693951
            push R13
            push R12
            mov RAX,RDX
            push RBP
            push RBX
            mov RBX,RCX
            mov RBP,RSI
            mov R12,RDI
            sub RSP,24
.L_4122a4:

            mov R15,QWORD PTR [RDI]
            sub RBX,R15
            mov R14,RBX
            sar R14,3
            sub RAX,R14
            cmp RSI,RAX
            ja .L_41239a

            cmp RSI,R14
            mov RAX,R14
            cmovae RAX,RSI
            add RAX,R14
            jb .L_412380

            cmp RAX,RDX
            ja .L_412380

            test RAX,RAX
            je .L_41238c

            lea R13,QWORD PTR [RAX*8]
.L_4122ea:

            mov RDI,R13
            call _Znwm@PLT

            mov R8,QWORD PTR [R12+8]
            mov R15,QWORD PTR [R12]
            mov R9,RAX
            add R13,RAX
            mov RDX,R8
            sub RDX,R15
.L_412307:

            lea RAX,QWORD PTR [R9+RBX*1]
            mov RCX,RBP
            nop
            nop
.L_412310:

            mov QWORD PTR [RAX],0
            add RAX,8
            sub RCX,1
            jne .L_412310

            cmp R15,R8
            je .L_412370

            mov RDI,R9
            mov RSI,R15
            call memmove@PLT

            mov R9,RAX
.L_412334:

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            call _ZdlPv@PLT

            mov R9,QWORD PTR [RSP+8]
.L_412346:

            lea RSI,QWORD PTR [RBP+R14*1]
            mov QWORD PTR [R12],R9
            mov QWORD PTR [R12+16],R13
            lea RAX,QWORD PTR [R9+RSI*8]
            mov QWORD PTR [R12+8],RAX
            add RSP,24
.L_412361:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412370:

            test R15,R15
            je .L_412346

            jmp .L_412334
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412380:

            mov R13,-8
            jmp .L_4122ea
.L_41238c:

            mov RDX,RBX
            xor R13D,R13D
            xor R9D,R9D
            jmp .L_412307
.L_41239a:

            lea RDI,QWORD PTR [RIP+.L_41220e]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4123a6:
          .string "./re2/walker-inl.h"
.L_4123b9:
          .string "Stack not empty."
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4123d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_4123e1:

            mov RCX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            test RCX,RCX
            je .L_412434

            mov RAX,QWORD PTR [RCX+72]
            sub RAX,QWORD PTR [RCX+40]
            sar RAX,3
            sub RAX,1
            shl RAX,4
            mov RDX,RAX
            mov RAX,QWORD PTR [RCX+48]
            sub RAX,QWORD PTR [RCX+56]
            sar RAX,5
            add RAX,RDX
            mov RDX,QWORD PTR [RCX+32]
            sub RDX,QWORD PTR [RCX+16]
            sar RDX,5
            add RAX,RDX
            jne .L_412460
.L_412434:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_412a21

            add RSP,520
.L_412452:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412460:

            lea RBX,QWORD PTR [RSP+112]
            mov RBP,RDI
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4124f3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4124f8:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_4125b2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4125b7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4123a6]
            mov EDX,18
.L_4125c7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,147
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_412603:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4123b9]
            mov EDX,16
.L_412613:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_412618:

            cmp BYTE PTR [RSP+112],0
            je .L_412760
.L_412623:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_412655

            call _ZdlPv@PLT
.L_412655:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
.L_4126a0:

            mov RSI,QWORD PTR [RBX+72]
            mov RAX,RSI
            sub RAX,QWORD PTR [RBX+40]
            sar RAX,3
            sub RAX,1
            shl RAX,4
            mov RDX,RAX
            mov RAX,RCX
            sub RAX,RDI
            sar RAX,5
            add RAX,RDX
            mov RDX,QWORD PTR [RBX+32]
            sub RDX,QWORD PTR [RBX+16]
            sar RDX,5
            add RAX,RDX
            je .L_412434

            cmp RCX,RDI
            je .L_412710
.L_4126e1:

            mov RDI,QWORD PTR [RCX-8]
            mov ESI,4
            call _ZdlPvm@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RCX,RDI
            je .L_412720

            sub RCX,32
            mov QWORD PTR [RBX+48],RCX
            jmp .L_4126a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412710:

            mov RCX,QWORD PTR [RSI-8]
            add RCX,512
            jmp .L_4126e1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412720:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [RBX+56],RAX
            add RAX,480
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            mov RBX,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_4126a0
          .byte 0x90
.L_412760:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_412944

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_4128a0

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_4127d6:

            call .L_40c900
.L_4127db:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_412956

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_4129b4

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4129c3

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_412839:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_41285d
.L_412858:

            call _ZdlPv@PLT
.L_41285d:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_41286c:

            call write@PLT
.L_412871:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_412623

            call _ZdlPv@PLT

            jmp .L_412623
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4128a0:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_4128b9:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_412987

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4129d6

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4129e5

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41291c:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_412858

            jmp .L_41285d
.L_412944:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_412951:

            jmp .L_41285d
.L_412956:

            test RDX,RDX
            je .L_412974

            cmp RDX,1
            je .L_412a0b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_412974:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_412839
.L_412987:

            test RDX,RDX
            je .L_4129a1

            cmp RDX,1
            je .L_4129f8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_4129a1:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41291c
.L_4129b4:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4129c3:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_412839
.L_4129d6:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4129e5:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41291c
.L_4129f8:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4129a1
.L_412a0b:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_412974
.L_412a21:

            call __stack_chk_fail@PLT
.L_412a26:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_412a3d

            call _ZdlPv@PLT
.L_412a3d:

            call _ZSt9terminatev@PLT
.L_412a42:

            jmp .L_412a26
.L_412a44:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
.L_412a66:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_412a7a:

            call _Unwind_Resume@PLT
.L_412a7f:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_412a92:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_412aa6:

            mov RBP,RAX
            jmp .L_412a66
.L_412aab:

            nop
            nop
            nop
            nop
            nop
.L_412ab0:

            lea RAX,QWORD PTR [RIP+.L_649cd0]
            push R12
            push RBP
            push RBX
.L_412abb:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_4123d0

            mov RBP,QWORD PTR [RBX+8]
            test RBP,RBP
            je .L_412b20

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_412b0a

            mov RAX,QWORD PTR [RBP+72]
            mov RBX,QWORD PTR [RBP+40]
            lea R12,QWORD PTR [RAX+8]
            cmp R12,RBX
            jbe .L_412b05

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412af0:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call _ZdlPv@PLT

            cmp R12,RBX
            ja .L_412af0

            mov RDI,QWORD PTR [RBP]
.L_412b05:

            call _ZdlPv@PLT
.L_412b0a:

            pop RBX
.L_412b0b:

            mov RDI,RBP
            mov ESI,80
            pop RBP
            pop R12
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412b20:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_412b25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412b30:

            push RBX
            mov RBX,RDI
            call .L_412ab0

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_412b47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412b50:

            lea RAX,QWORD PTR [RIP+.L_646e90]
            mov QWORD PTR [RDI],RAX
            jmp .L_412ab0
.L_412b5f:

            nop
.L_412b60:

            lea RAX,QWORD PTR [RIP+.L_646e90]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_412ab0

            mov RDI,RBX
            mov ESI,32
            pop RBX
            jmp _ZdlPvm@PLT
.L_412b81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412b90:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_646ed0]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412bc5

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c780

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412bc5:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_412ab0
.L_412bd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412be0:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_646ed0]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412c15

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c780

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412c15:

            mov RDI,RBX
            call .L_412ab0

            add RSP,8
            mov RDI,RBX
            mov ESI,32
            pop RBX
            pop RBP
            jmp _ZdlPvm@PLT
.L_412c30:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_646f10]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412c65

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c7e0

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412c65:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_412ab0
.L_412c73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412c80:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_646f10]
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_412cb5

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,RBP
            call .L_40c7e0

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_412cb5:

            mov RDI,RBX
            call .L_412ab0

            add RSP,8
            mov RDI,RBX
            mov ESI,32
            pop RBX
            pop RBP
            jmp _ZdlPvm@PLT
.L_412cd0:

            push RBX
            mov RBX,RDI
            mov RDI,RSI
            lea RSI,QWORD PTR [RBX+8]
            call _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@PLT

            mov RDI,RAX
            call _ZdlPv@PLT

            sub QWORD PTR [RBX+40],1
            pop RBX
            ret 
.L_412cef:

            nop
.L_412cf0:

            push RBX
            sub RSP,16
.L_412cf5:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_412d50

            mov EDX,DWORD PTR [RSI+4]
            jmp .L_412d19
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412d08:

            mov RAX,QWORD PTR [RBX+16]
            mov ECX,1
            test RAX,RAX
            je .L_412d29
.L_412d16:

            mov RBX,RAX
.L_412d19:

            cmp EDX,DWORD PTR [RBX+32]
            jl .L_412d08

            mov RAX,QWORD PTR [RBX+24]
            xor ECX,ECX
            test RAX,RAX
            jne .L_412d16
.L_412d29:

            test CL,CL
            mov R8,RBX
            jne .L_412d54
.L_412d30:

            xor EDX,EDX
            mov ECX,DWORD PTR [RBX+36]
            cmp ECX,DWORD PTR [RSI]
            mov RAX,RBX
            cmovl RAX,RDX
            cmovl RDX,R8
.L_412d42:

            add RSP,16
.L_412d46:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d50:

            lea RBX,QWORD PTR [RDI+8]
.L_412d54:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_412d42

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R8,RBX
            mov RSI,QWORD PTR [RSP+8]
            mov RBX,RAX
            jmp .L_412d30
.L_412d79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d80:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_412cf0

            test RDX,RDX
            jne .L_412da0

            add RSP,8
            xor EDX,EDX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_412da0:

            mov RCX,RBP
            mov RDI,RBX
            mov RSI,RAX
            call .L_40c880

            add RSP,8
            mov EDX,1
            pop RBX
            pop RBP
            ret 
.L_412dba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412dc0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_412cf0

            test RDX,RDX
            jne .L_412de0

            add RSP,8
            xor EDX,EDX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_412de0:

            mov RCX,RBP
            mov RDI,RBX
            mov RSI,RAX
            call .L_40c880

            add RSP,8
            mov EDX,1
            pop RBX
            pop RBP
            ret 
.L_412dfa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412e00:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,24
.L_412e17:

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RDI]
            mov RCX,RAX
            sub R14,RDI
            sub RCX,RDI
            sar RCX,3
            test RCX,RCX
            je .L_412f18

            lea RSI,QWORD PTR [RCX+RCX*1]
            mov R13,-8
            cmp RCX,RSI
            jbe .L_412f30
.L_412e48:

            mov RDI,R13
            mov QWORD PTR [RSP+8],RDX
            call _Znwm@PLT

            mov RDI,QWORD PTR [RBP]
            mov R12,RAX
            mov RDX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBP+8]
            lea R15,QWORD PTR [R12+8]
            add R13,R12
.L_412e6d:

            add R14,R12
            je .L_412e78

            mov RDX,QWORD PTR [RDX]
            mov QWORD PTR [R14],RDX
.L_412e78:

            cmp RBX,RDI
            je .L_412eb6

            mov RCX,R12
            mov RDX,RDI
            nop
            nop
            nop
            nop
            nop
.L_412e88:

            test RCX,RCX
            je .L_412e93

            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RCX],RSI
.L_412e93:

            add RDX,8
            add RCX,8
            cmp RBX,RDX
            jne .L_412e88

            lea RDX,QWORD PTR [RDI+8]
            mov RSI,RBX
            sub RSI,RDX
            mov RDX,RSI
            shr RDX,3
            lea R15,QWORD PTR [R12+RDX*8+16]
.L_412eb6:

            cmp RBX,RAX
            je .L_412ef0

            mov RDX,RBX
            mov RCX,R15
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ec8:

            test RCX,RCX
            je .L_412ed3

            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RCX],RSI
.L_412ed3:

            add RDX,8
            add RCX,8
            cmp RDX,RAX
            jne .L_412ec8

            add RBX,8
            sub RDX,RBX
            shr RDX,3
            lea R15,QWORD PTR [R15+RDX*8+8]
.L_412ef0:

            test RDI,RDI
            je .L_412efa

            call _ZdlPv@PLT
.L_412efa:

            mov QWORD PTR [RBP],R12
            mov QWORD PTR [RBP+8],R15
            mov QWORD PTR [RBP+16],R13
            add RSP,24
.L_412f0a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412f18:

            mov ESI,1
.L_412f1d:

            lea R13,QWORD PTR [RSI*8]
            jmp .L_412e48
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412f30:

            movabs RCX,2305843009213693951
            cmp RSI,RCX
            ja .L_412e48

            test RSI,RSI
            jne .L_412f1d

            mov R15D,8
            xor R13D,R13D
            xor R12D,R12D
            jmp .L_412e6d
.L_412f59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412f60:

            mov RAX,QWORD PTR [RDI+8]
            cmp RAX,QWORD PTR [RDI+16]
            je .L_412f80

            test RAX,RAX
            je .L_412f75

            mov RDX,QWORD PTR [RSI]
            mov QWORD PTR [RAX],RDX
.L_412f75:

            add RAX,8
            mov QWORD PTR [RDI+8],RAX
            ret 
          .byte 0x66
          .byte 0x90
.L_412f80:

            mov RDX,RSI
            mov RSI,RAX
            jmp .L_412e00
.L_412f8b:

            nop
            nop
            nop
            nop
            nop
.L_412f90:

            push RBP
            push RBX
            sub RSP,8
.L_412f96:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_412ff0

            mov R8,QWORD PTR [RSI]
            jmp .L_412fba
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412fa8:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_412fcf
.L_412fb7:

            mov RBX,RAX
.L_412fba:

            mov RCX,QWORD PTR [RBX+32]
            cmp R8,RCX
            jb .L_412fa8

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_412fb7
.L_412fcf:

            test R9B,R9B
            mov R10,RBX
            jne .L_412ff4
.L_412fd7:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8,RCX
            cmova RAX,RDX
            cmova RDX,R10
.L_412fe7:

            add RSP,8
.L_412feb:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_412ff0:

            lea RBX,QWORD PTR [RDI+8]
.L_412ff4:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_412fe7

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_412fd7
.L_41301a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_413020:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_413034:

            cmp RSI,RAX
            je .L_4130b8

            mov R13,QWORD PTR [RDX]
            cmp R13,QWORD PTR [RSI+32]
            mov RBX,RSI
            jae .L_413080

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_413074

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jbe .L_4130cc

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_413074:

            add RSP,8
.L_413078:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_413080:

            jbe .L_4130e8

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_413074

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jae .L_4130cc

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_413074
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4130b8:

            cmp QWORD PTR [RDI+40],0
            je .L_4130cc

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [RBX+32],RAX
            jb .L_413100
.L_4130cc:

            add RSP,8
.L_4130d0:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_412f90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4130e8:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413100:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_413110:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41311e:

            mov RBX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RSI
            test RBX,RBX
            je .L_413208

            mov RAX,QWORD PTR [RSP]
            mov R15,QWORD PTR [RAX+8]
            mov RBP,QWORD PTR [RAX]
            jmp .L_413159
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413148:

            mov RAX,QWORD PTR [RBX+16]
            mov ESI,1
            test RAX,RAX
            je .L_4131a7
.L_413156:

            mov RBX,RAX
.L_413159:

            mov R14,QWORD PTR [RBX+40]
            mov R13,QWORD PTR [RBX+32]
            cmp R15,R14
            mov R12,R14
            cmovbe R12,R15
            test R12,R12
            je .L_413182

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call memcmp@PLT

            test EAX,EAX
            jne .L_413198
.L_413182:

            mov RAX,R15
            sub RAX,R14
            cmp RAX,2147483647
            jg .L_41319c

            cmp RAX,-2147483648
            jl .L_413148
.L_413198:

            test EAX,EAX
            js .L_413148
.L_41319c:

            mov RAX,QWORD PTR [RBX+24]
            xor ESI,ESI
            test RAX,RAX
            jne .L_413156
.L_4131a7:

            test SIL,SIL
            mov R9,RBX
            jne .L_41320c

            test R12,R12
            jne .L_41324b
.L_4131b8:

            sub R14,R15
            cmp R14,2147483647
            jg .L_4131f0
.L_4131c4:

            cmp R14,-2147483648
            jl .L_4131d4

            mov EAX,R14D
.L_4131d0:

            test EAX,EAX
            jns .L_4131f0
.L_4131d4:

            add RSP,24
.L_4131d8:

            xor EAX,EAX
            mov RDX,R9
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4131f0:

            add RSP,24
            mov RAX,RBX
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413208:

            lea RBX,QWORD PTR [RDI+8]
.L_41320c:

            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RAX+24],RBX
            je .L_413280

            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov RCX,QWORD PTR [RSP]
            mov R14,QWORD PTR [RAX+40]
            mov R9,RBX
            mov R13,QWORD PTR [RAX+32]
            mov RBX,RAX
            mov R15,QWORD PTR [RCX+8]
            mov R12,R14
            mov RBP,QWORD PTR [RCX]
            cmp R15,R14
            cmovbe R12,R15
            test R12,R12
            je .L_4131b8
.L_41324b:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,R13
            mov QWORD PTR [RSP],R9
            call memcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP]
            jne .L_4131d0

            sub R14,R15
            cmp R14,2147483647
            jle .L_4131c4

            jmp .L_4131f0
          .byte 0x66
          .byte 0x90
.L_413280:

            add RSP,24
.L_413284:

            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_413294:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132a0:

            push R15
            lea RAX,QWORD PTR [RDI+8]
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R15,RDX
            sub RSP,24
.L_4132b8:

            cmp RSI,RAX
            je .L_4134b8

            mov R12,QWORD PTR [RDX+8]
            mov RBP,QWORD PTR [RSI+40]
            mov RBX,RSI
            mov R8,QWORD PTR [RSI+32]
            mov R14,QWORD PTR [RDX]
            cmp R12,RBP
            mov RCX,RBP
            cmovbe RCX,R12
            test RCX,RCX
            jne .L_413398

            mov RAX,R12
            sub RAX,RBP
            cmp RAX,2147483647
            jg .L_4133ea
.L_4132f8:

            cmp RAX,-2147483648
            jl .L_413308

            test EAX,EAX
            jns .L_413490
.L_413308:

            cmp QWORD PTR [R13+24],RBX
            mov RAX,RBX
            mov RDX,RBX
            je .L_4134a5

            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov RBP,QWORD PTR [RAX+40]
            mov RCX,RAX
            cmp R12,RBP
            mov RDX,RBP
            cmovbe RDX,R12
            test RDX,RDX
            je .L_41334e

            mov RDI,QWORD PTR [RAX+32]
            mov RSI,R14
            mov QWORD PTR [RSP],RAX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP]
            jne .L_413369
.L_41334e:

            sub RBP,R12
            cmp RBP,2147483647
            jg .L_413510

            cmp RBP,-2147483648
            jl .L_413371

            mov EAX,EBP
.L_413369:

            test EAX,EAX
            jns .L_413510
.L_413371:

            cmp QWORD PTR [RCX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmove RBX,RCX
            add RSP,24
.L_413387:

            mov RDX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413398:

            mov RDX,RCX
            mov RSI,R8
            mov RDI,R14
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memcmp@PLT

            test EAX,EAX
            mov R8,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            jne .L_413530

            mov RAX,R12
            sub RAX,RBP
            cmp RAX,2147483647
            jle .L_4132f8

            nop
            nop
            nop
            nop
            nop
            nop
.L_4133d8:

            mov RDX,RCX
            mov RSI,R14
            mov RDI,R8
            call memcmp@PLT

            test EAX,EAX
            jne .L_413405
.L_4133ea:

            sub RBP,R12
            cmp RBP,2147483647
            jg .L_4134a0

            cmp RBP,-2147483648
            jl .L_41340d

            mov EAX,EBP
.L_413405:

            test EAX,EAX
            jns .L_4134a0
.L_41340d:

            cmp QWORD PTR [R13+32],RBX
            je .L_4134f5

            mov RDI,RBX
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            mov RBP,QWORD PTR [RAX+40]
            mov RCX,RAX
            cmp R12,RBP
            mov RDX,RBP
            cmovbe RDX,R12
            test RDX,RDX
            je .L_41344d

            mov RSI,QWORD PTR [RAX+32]
            mov RDI,R14
            mov QWORD PTR [RSP],RAX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP]
            jne .L_413469
.L_41344d:

            sub R12,RBP
            cmp R12,2147483647
            jg .L_413510

            cmp R12,-2147483648
            jl .L_413471

            mov EAX,R12D
.L_413469:

            test EAX,EAX
            jns .L_413510
.L_413471:

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RBX,RCX
            cmovne RAX,RCX
            mov RDX,RBX
            jmp .L_4134a5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413490:

            test RCX,RCX
            jne .L_4133d8

            jmp .L_4133ea
          .byte 0x66
          .byte 0x90
.L_4134a0:

            mov RAX,RBX
            xor EDX,EDX
.L_4134a5:

            add RSP,24
.L_4134a9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4134b8:

            cmp QWORD PTR [RDI+40],0
            je .L_413510

            mov RBX,QWORD PTR [RDI+32]
            mov R12,QWORD PTR [RDX+8]
            mov RBP,QWORD PTR [RBX+40]
            mov RDX,R12
            cmp RBP,R12
            cmovbe RDX,RBP
            test RDX,RDX
            jne .L_413540
.L_4134da:

            sub RBP,R12
            cmp RBP,2147483647
            jg .L_413510

            cmp RBP,-2147483648
            jl .L_4134f5

            mov EAX,EBP
.L_4134f1:

            test EAX,EAX
            jns .L_413510
.L_4134f5:

            add RSP,24
.L_4134f9:

            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413510:

            add RSP,24
            mov RSI,R15
            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_413110
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413530:

            js .L_413308

            jmp .L_4133d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413540:

            mov RDI,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [R15]
            call memcmp@PLT

            test EAX,EAX
            je .L_4134da

            jmp .L_4134f1
.L_413552:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413560:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,56
            cmp BYTE PTR [RSI],11
            je .L_413590
.L_413575:

            add RSP,56
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413590:

            mov RAX,QWORD PTR [RSI+32]
            mov RBX,RSI
            test RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            je .L_413575

            mov RAX,QWORD PTR [RDI+24]
            mov R14,RDI
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_413720

            mov R14,QWORD PTR [RAX+16]
            lea RSI,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+24],RSI
            test R14,R14
            je .L_413859

            mov RAX,QWORD PTR [RSP+32]
            mov R12,QWORD PTR [RSP+24]
            mov RCX,R14
            mov R13,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_4135f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4135f0:

            mov RCX,QWORD PTR [RCX+24]
            test RCX,RCX
            je .L_413650
.L_4135f9:

            mov R15,QWORD PTR [RCX+40]
            mov RDX,R13
            cmp R15,R13
            cmovbe RDX,R15
            test RDX,RDX
            je .L_413628

            mov RDI,QWORD PTR [RCX+32]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            jne .L_413640
.L_413628:

            sub R15,R13
            cmp R15,2147483647
            jg .L_413644

            cmp R15,-2147483648
            jl .L_4135f0

            mov EAX,R15D
.L_413640:

            test EAX,EAX
            js .L_4135f0
.L_413644:

            mov R12,RCX
            mov RCX,QWORD PTR [RCX+16]
            test RCX,RCX
            jne .L_4135f9
.L_413650:

            cmp R12,QWORD PTR [RSP+24]
            je .L_413691

            mov R15,QWORD PTR [R12+40]
            cmp R13,R15
            mov RDX,R15
            cmovbe RDX,R13
            test RDX,RDX
            jne .L_413700
.L_41366f:

            mov RAX,R13
            sub RAX,R15
            cmp RAX,2147483647
            jg .L_413575

            cmp RAX,-2147483648
            jl .L_413691
.L_413689:

            test EAX,EAX
            jns .L_413575
.L_413691:

            mov R15,QWORD PTR [RSP+24]
            jmp .L_4136ad
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4136a0:

            mov R14,QWORD PTR [R14+24]
.L_4136a4:

            test R14,R14
            je .L_413800
.L_4136ad:

            mov R12,QWORD PTR [R14+40]
            mov RDX,R13
            cmp R12,R13
            cmovbe RDX,R12
            test RDX,RDX
            je .L_4136d2

            mov RDI,QWORD PTR [R14+32]
            mov RSI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            jne .L_4136ec
.L_4136d2:

            mov RCX,R12
            sub RCX,R13
            cmp RCX,2147483647
            jg .L_4136f0

            cmp RCX,-2147483648
            jl .L_4136a0

            mov EAX,ECX
.L_4136ec:

            test EAX,EAX
            js .L_4136a0
.L_4136f0:

            mov R15,R14
            mov R14,QWORD PTR [R14+16]
            jmp .L_4136a4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413700:

            mov RSI,QWORD PTR [R12+32]
            mov RDI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            je .L_41366f

            jmp .L_413689
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413720:

            mov EDI,48
.L_413725:

            call _Znwm@PLT

            lea R15,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+40],RAX
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+24],R15
            mov QWORD PTR [RAX+32],R15
            mov QWORD PTR [R14+24],RAX
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RSP+32],RAX
.L_41375f:

            mov QWORD PTR [RSP+24],R15
.L_413764:

            mov EDI,72
            mov R13,R15
            call _Znwm@PLT
.L_413771:

            mov R15,RAX
            lea R14,QWORD PTR [RAX+32]
            lea RAX,QWORD PTR [RAX+48]
            mov QWORD PTR [R15+32],RAX
            mov R12,RAX
            mov RAX,QWORD PTR [RSP+32]
            mov RDI,R14
            mov RSI,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX+8]
            add RDX,RSI
.L_413795:

            call .L_40c900
.L_41379a:

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,R14
            mov RSI,R13
            mov DWORD PTR [R15+64],0
            call .L_4132a0

            test RDX,RDX
            mov R14,RAX
            mov R13,RDX
            je .L_413863

            cmp QWORD PTR [RSP+24],RDX
            je .L_4137d1

            test RAX,RAX
            je .L_413881
.L_4137d1:

            mov EDI,1
.L_4137d6:

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,R13
            mov RSI,R15
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            mov RAX,QWORD PTR [RSP+40]
            add QWORD PTR [RAX+40],1
.L_4137f0:

            mov EAX,DWORD PTR [RBX+24]
            mov DWORD PTR [R15+64],EAX
            jmp .L_413575
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413800:

            cmp R15,QWORD PTR [RSP+24]
            je .L_413764

            mov R14,QWORD PTR [R15+40]
            cmp R13,R14
            mov RDX,R14
            cmovbe RDX,R13
            test RDX,RDX
            je .L_413830

            mov RSI,QWORD PTR [R15+32]
            mov RDI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            jne .L_41384f
.L_413830:

            mov R8,R13
            sub R8,R14
            cmp R8,2147483647
            jg .L_4137f0

            cmp R8,-2147483648
            jl .L_413764

            mov EAX,R8D
.L_41384f:

            test EAX,EAX
            js .L_413764

            jmp .L_4137f0
.L_413859:

            mov R15,QWORD PTR [RSP+24]
            jmp .L_41375f
.L_413863:

            mov RDI,QWORD PTR [R15+32]
            cmp R12,RDI
            je .L_413871

            call _ZdlPv@PLT
.L_413871:

            mov RDI,R15
            mov R15,R14
            call _ZdlPv@PLT

            jmp .L_4137f0
.L_413881:

            mov R14,QWORD PTR [R15+40]
            mov RCX,QWORD PTR [RDX+40]
            cmp R14,RCX
            mov RDX,RCX
            cmovbe RDX,R14
            test RDX,RDX
            je .L_4138b3

            mov RSI,QWORD PTR [R13+32]
            mov RDI,QWORD PTR [R15+32]
            mov QWORD PTR [RSP+8],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            jne .L_4138d3
.L_4138b3:

            mov RAX,R14
            xor EDI,EDI
            sub RAX,RCX
            cmp RAX,2147483647
            jg .L_4137d6

            cmp RAX,-2147483648
            jl .L_4137d1
.L_4138d3:

            shr EAX,31
            mov EDI,EAX
            jmp .L_4137d6
.L_4138dd:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RDI,R15
            call _ZdlPv@PLT
.L_4138ed:

            call __cxa_rethrow@PLT
.L_4138f2:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_4138fd:

            call _Unwind_Resume@PLT
.L_413902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413910:

            push RBP
            push RBX
            sub RSP,8
.L_413916:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_413970

            mov R8D,DWORD PTR [RSI]
            jmp .L_41393a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413928:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_41394e
.L_413937:

            mov RBX,RAX
.L_41393a:

            mov ECX,DWORD PTR [RBX+32]
            cmp R8D,ECX
            jl .L_413928

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_413937
.L_41394e:

            test R9B,R9B
            mov R10,RBX
            jne .L_413974
.L_413956:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8D,ECX
            cmovg RAX,RDX
            cmovg RDX,R10
.L_413966:

            add RSP,8
.L_41396a:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413970:

            lea RBX,QWORD PTR [RDI+8]
.L_413974:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_413966

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8D,DWORD PTR [RBP]
            mov ECX,DWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_413956
.L_413999:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4139a0:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_4139b4:

            cmp RSI,RAX
            je .L_413a38

            mov R13D,DWORD PTR [RDX]
            cmp R13D,DWORD PTR [RSI+32]
            mov RBX,RSI
            jge .L_413a00

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_4139f4

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13D,DWORD PTR [RAX+32]
            mov RDX,RAX
            jle .L_413a4a

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_4139f4:

            add RSP,8
.L_4139f8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_413a00:

            jle .L_413a60

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_4139f4

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13D,DWORD PTR [RAX+32]
            mov RDX,RAX
            jge .L_413a4a

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_4139f4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413a38:

            cmp QWORD PTR [RDI+40],0
            je .L_413a4a

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RDX]
            cmp DWORD PTR [RBX+32],EAX
            jl .L_413a70
.L_413a4a:

            add RSP,8
.L_413a4e:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_413910
          .byte 0x90
.L_413a60:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_413a70:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_413a80:

            push R15
            push R14
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            sub RSP,24
            cmp BYTE PTR [RSI],11
            je .L_413ab0
.L_413a96:

            add RSP,24
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413ab0:

            mov R14,QWORD PTR [RSI+32]
            test R14,R14
            je .L_413a96

            mov R13,QWORD PTR [RDI+24]
            mov RBP,RDI
            test R13,R13
            je .L_413bc0

            mov RAX,QWORD PTR [R13+16]
            lea R15,QWORD PTR [R13+8]
            mov EBP,DWORD PTR [RSI+24]
            mov RBX,R15
            test RAX,RAX
            jne .L_413aec

            jmp .L_413b04
          .byte 0x66
          .byte 0x90
.L_413ae0:

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_413afa
.L_413aec:

            cmp EBP,DWORD PTR [RAX+32]
            jle .L_413ae0

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_413aec
.L_413afa:

            cmp R15,RBX
            je .L_413b04

            cmp EBP,DWORD PTR [RBX+32]
            jge .L_413b62
.L_413b04:

            mov EDI,72
            mov QWORD PTR [RSP+8],RBX
            call _Znwm@PLT

            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+32],EBP
            lea RBP,QWORD PTR [RAX+56]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+48],0
            mov BYTE PTR [RAX+56],0
            mov QWORD PTR [RAX+40],RBP
            mov RDI,R13
            mov RBX,RAX
            call .L_4139a0

            test RDX,RDX
            je .L_413b78

            cmp R15,RDX
            je .L_413b4d

            test RAX,RAX
            je .L_413bb0
.L_413b4d:

            mov EDI,1
.L_413b52:

            mov RCX,R15
            mov RSI,RBX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [R13+40],1
.L_413b62:

            lea RDI,QWORD PTR [RBX+40]
            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            jmp .L_413a96
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413b78:

            mov RDI,QWORD PTR [RBX+40]
            cmp RBP,RDI
            je .L_413b90

            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
.L_413b90:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,RAX
            jmp .L_413b62
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413bb0:

            xor EDI,EDI
            mov EAX,DWORD PTR [RDX+32]
            cmp DWORD PTR [RBX+32],EAX
            setl DIL
            jmp .L_413b52
          .byte 0x66
          .byte 0x90
.L_413bc0:

            mov EDI,48
            mov QWORD PTR [RSP+8],RSI
            call _Znwm@PLT

            mov RSI,QWORD PTR [RSP+8]
            lea RBX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBP+24],RAX
            mov R13,RAX
            mov DWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],RBX
            mov QWORD PTR [RAX+32],RBX
            mov R15,RBX
            mov QWORD PTR [RAX+40],0
            mov R14,QWORD PTR [RSI+32]
            mov EBP,DWORD PTR [RSI+24]
            jmp .L_413b04
.L_413c0d:

            nop
            nop
            nop
.L_413c10:

            mov RCX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RDI+48]
            lea RDX,QWORD PTR [RCX-32]
            cmp RAX,RDX
            je .L_413c40

            test RAX,RAX
            je .L_413c36

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RAX+16],XMM0
.L_413c36:

            add RAX,32
            mov QWORD PTR [RDI+48],RAX
            ret 
          .byte 0x90
.L_413c40:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_413c54:

            mov R12,QWORD PTR [RDI+72]
            mov RCX,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RDI+8]
            mov RAX,R12
            sub RAX,RCX
            mov RSI,RDX
            sar RAX,3
            sub RSI,RAX
            cmp RSI,1
            jbe .L_413cd0
.L_413c75:

            mov EDI,512
            call _Znwm@PLT

            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_413c9e

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX+16],XMM0
.L_413c9e:

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            add RSP,8
.L_413cc5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_413cd0:

            mov RSI,QWORD PTR [RDI+40]
            mov RAX,R12
            sub RAX,RSI
            sar RAX,3
            lea R14,QWORD PTR [RAX+2]
            lea R13,QWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R14+R14*1]
            cmp RDX,RAX
            ja .L_413d98

            test RDX,RDX
            je .L_413dc8

            lea R12,QWORD PTR [RDX+RDX*1+2]
            movabs RAX,2305843009213693951
            cmp R12,RAX
            ja .L_413df0
.L_413d14:

            lea RDI,QWORD PTR [R12*8]
            call _Znwm@PLT

            mov R15,RAX
            mov RAX,R12
            mov RSI,QWORD PTR [RBX+40]
            sub RAX,R14
            shr RAX,1
            lea R14,QWORD PTR [R15+RAX*8]
            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            cmp RDX,RSI
            je .L_413d4d

            sub RDX,RSI
            mov RDI,R14
            call memmove@PLT
.L_413d4d:

            mov RDI,QWORD PTR [RBX]
            shl R13,3
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],R15
            mov QWORD PTR [RBX+8],R12
.L_413d60:

            mov RAX,QWORD PTR [R14]
            lea R12,QWORD PTR [R14+R13*1-8]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            add RAX,512
            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+56],RAX
            add RAX,512
            mov QWORD PTR [RBX+64],RAX
            jmp .L_413c75
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413d98:

            sub RDX,R14
            add R12,8
            shl R13,3
            shr RDX,1
            lea R14,QWORD PTR [RCX+RDX*8]
            mov RDX,R12
            sub RDX,RSI
            cmp RSI,R14
            jbe .L_413dd8

            cmp RSI,R12
            je .L_413d60

            mov RDI,R14
            call memmove@PLT

            jmp .L_413d60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413dc8:

            mov R12D,3
            jmp .L_413d14
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413dd8:

            cmp RSI,R12
            je .L_413d60

            mov RDI,R13
            sub RDI,RDX
            add RDI,R14
            call memmove@PLT

            jmp .L_413d60
.L_413df0:

            call _ZSt17__throw_bad_allocv@PLT
.L_413df5:
          .string "Walk NULL"
          .byte 0x90
.L_413e00:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov EBX,EDX
            sub RSP,552
.L_413e19:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            mov BYTE PTR [RSP],CL
.L_413e2f:

            call .L_4123d0

            test RBP,RBP
            je .L_414040

            mov RDI,QWORD PTR [R15+8]
            lea R12,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RBP
            mov DWORD PTR [RSP+24],4294967295
            mov DWORD PTR [RSP+28],EBX
            lea R13,QWORD PTR [RIP+.L_410580]
            mov RSI,R12
            mov QWORD PTR [RSP+40],0
            call .L_413c10

            mov RAX,QWORD PTR [R15+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
.L_413e7f:

            cmp RDI,RBP
            je .L_413fa5
.L_413e88:

            mov R9D,DWORD PTR [RBP-24]
            mov R14,QWORD PTR [RBP-32]
            cmp R9D,-1
            jne .L_413fc2
.L_413e9a:

            mov EAX,DWORD PTR [R15+20]
            mov R8,QWORD PTR [R15]
            mov EDX,DWORD PTR [RBP-20]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [R15+20],EAX
            js .L_4143e8

            mov BYTE PTR [RSP+16],0
            mov RCX,R12
            mov RSI,R14
            mov RDI,R15
            call QWORD PTR [R8+16]
.L_413ec5:

            cmp BYTE PTR [RSP+16],0
            mov EBX,EAX
            mov DWORD PTR [RBP-16],EAX
            jne .L_413f1a

            movzx EAX,WORD PTR [R14+6]
            mov DWORD PTR [RBP-24],0
            mov QWORD PTR [RBP-8],0
            cmp AX,1
            je .L_414440

            mov R9D,0
            ja .L_4144e0

            nop
            nop
            nop
            nop
            nop
.L_413f00:

            mov RAX,QWORD PTR [R15]
            mov R8,QWORD PTR [RBP-8]
            mov EBX,DWORD PTR [RBP-16]
            mov EDX,DWORD PTR [RBP-20]
            mov R10,QWORD PTR [RAX+24]
            cmp R10,R13
            jne .L_4144c0
.L_413f1a:

            mov R14,QWORD PTR [R15+8]
            mov RBP,QWORD PTR [R14+48]
            mov RDI,QWORD PTR [R14+56]
            cmp RBP,RDI
            je .L_414400

            sub RBP,32
            mov QWORD PTR [R14+48],RBP
.L_413f37:

            mov RCX,QWORD PTR [R14+72]
            mov RDX,RCX
            sub RDX,QWORD PTR [R14+40]
            sar RDX,3
            sub RDX,1
            mov RSI,RDX
            mov RDX,RBP
            sub RDX,RDI
            shl RSI,4
            sar RDX,5
            add RDX,RSI
            mov RSI,QWORD PTR [R14+32]
            sub RSI,QWORD PTR [R14+16]
            sar RSI,5
            add RDX,RSI
            je .L_4143b9

            cmp RBP,RDI
            mov RDX,RBP
            je .L_414030
.L_413f7f:

            mov RSI,QWORD PTR [RDX-8]
            movsxd RAX,DWORD PTR [RDX-24]
            test RSI,RSI
            je .L_414028

            mov DWORD PTR [RSI+RAX*4],EBX
            mov EAX,DWORD PTR [RDX-24]
.L_413f96:

            add EAX,1
            cmp RDI,RBP
            mov DWORD PTR [RDX-24],EAX
            jne .L_413e88
.L_413fa5:

            mov RBP,QWORD PTR [RCX-8]
            add RBP,512
            mov R9D,DWORD PTR [RBP-24]
            mov R14,QWORD PTR [RBP-32]
            cmp R9D,-1
            je .L_413e9a
.L_413fc2:

            movzx EAX,WORD PTR [R14+6]
.L_413fc7:

            test AX,AX
            je .L_413f00

            cmp AX,1
            jbe .L_41444b

            movzx EDX,AX
            mov RCX,QWORD PTR [R14+8]
            cmp R9D,EDX
            jl .L_41445b
.L_413fea:

            mov RDX,QWORD PTR [R15]
            mov R8,QWORD PTR [RBP-8]
            mov EBX,DWORD PTR [RBP-16]
            mov R10,QWORD PTR [RDX+24]
            mov EDX,DWORD PTR [RBP-20]
            cmp R10,R13
            jne .L_4144c0
.L_414004:

            cmp AX,1
            jbe .L_413f1a

            mov RDI,QWORD PTR [RBP-8]
            test RDI,RDI
            je .L_413f1a

            call _ZdaPv@PLT

            jmp .L_413f1a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414028:

            mov DWORD PTR [RDX-12],EBX
            jmp .L_413f96
.L_414030:

            mov RAX,QWORD PTR [RCX-8]
            lea RDX,QWORD PTR [RAX+512]
            jmp .L_413f7f
.L_414040:

            lea RBP,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4140d9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4140de:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_41419b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4141a0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4123a6]
            mov EDX,18
.L_4141b0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_41091c]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,160
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41090a]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4141ec:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_413df5]
            mov EDX,9
.L_4141fc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_414201:

            cmp BYTE PTR [RSP+144],0
            jne .L_41433f

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_410604]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_4145f0

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_414546

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RAX
.L_414285:

            call .L_40c900
.L_41428a:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41460f

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_41466d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41467c

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4142e8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_41430c
.L_414307:

            call _ZdlPv@PLT
.L_41430c:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41431b:

            call write@PLT
.L_414320:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_41433f

            call _ZdlPv@PLT
.L_41433f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_414374

            call _ZdlPv@PLT
.L_414374:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT
.L_4143b9:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+536]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4146dd

            add RSP,552
.L_4143d9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4143e8:

            mov BYTE PTR [R15+16],1
            mov RSI,R14
            mov RDI,R15
.L_4143f3:

            call QWORD PTR [R8+40]

            mov EBX,EAX
            jmp .L_413f1a
          .byte 0x66
          .byte 0x90
.L_414400:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [R14+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [R14+72],RDX
            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [R14+56],RAX
            add RAX,480
            mov QWORD PTR [R14+48],RAX
            mov QWORD PTR [R14+64],RDX
            mov R14,QWORD PTR [R15+8]
            mov RBP,QWORD PTR [R14+48]
            mov RDI,QWORD PTR [R14+56]
            jmp .L_413f37
          .byte 0x90
.L_414440:

            lea RDX,QWORD PTR [RBP-12]
            xor R9D,R9D
            mov QWORD PTR [RBP-8],RDX
.L_41444b:

            movzx EDX,AX
            lea RCX,QWORD PTR [R14+8]
            cmp R9D,EDX
            jge .L_413fea
.L_41445b:

            movsxd RAX,R9D
            test R9D,R9D
            lea RSI,QWORD PTR [RAX*8]
            mov RDX,QWORD PTR [RCX+RAX*8]
            jle .L_414480

            cmp BYTE PTR [RSP],0
            je .L_414480

            cmp QWORD PTR [RCX+RSI*1-8],RDX
            je .L_414500
.L_414480:

            mov EAX,DWORD PTR [RBP-16]
            mov RDI,QWORD PTR [R15+8]
            mov RSI,R12
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+28],EAX
            call .L_413c10

            mov RAX,QWORD PTR [R15+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_413e7f
          .byte 0x66
          .byte 0x90
.L_4144c0:

            mov ECX,EBX
            mov RSI,R14
            mov RDI,R15
            call R10

            mov EBX,EAX
            movzx EAX,WORD PTR [R14+6]
            jmp .L_414004
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4144e0:

            lea RDI,QWORD PTR [RAX*4]
            call _Znam@PLT
.L_4144ed:

            mov R9D,DWORD PTR [RBP-24]
            mov QWORD PTR [RBP-8],RAX
            movzx EAX,WORD PTR [R14+6]
            jmp .L_413fc7
          .byte 0x90
.L_414500:

            mov RDX,QWORD PTR [R15]
            mov RCX,QWORD PTR [RBP-8]
            mov R8,QWORD PTR [RDX+32]
            lea RDX,QWORD PTR [RAX*4]
            mov EAX,DWORD PTR [RCX+RDX*1-4]
            lea RBX,QWORD PTR [RCX+RDX*1]
            lea RCX,QWORD PTR [RIP+.L_410570]
            cmp R8,RCX
            jne .L_414602
.L_41452b:

            mov DWORD PTR [RBX],EAX
            mov RAX,QWORD PTR [R15+8]
            add DWORD PTR [RBP-24],1
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_413e7f
.L_414546:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41455f:

            call .L_40c900

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_414640

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_41468f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41469e

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_4145c8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_414307

            jmp .L_41430c
.L_4145f0:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4145fd:

            jmp .L_41430c
.L_414602:

            mov ESI,EAX
            mov RDI,R15
.L_414607:

            call R8

            jmp .L_41452b
.L_41460f:

            test RDX,RDX
            je .L_41462d

            cmp RDX,1
            je .L_4146c7

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_41462d:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4142e8
.L_414640:

            test RDX,RDX
            je .L_41465a

            cmp RDX,1
            je .L_4146b1

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_41465a:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_4145c8
.L_41466d:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41467c:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4142e8
.L_41468f:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41469e:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_4145c8
.L_4146b1:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41465a
.L_4146c7:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41462d
.L_4146dd:

            call __stack_chk_fail@PLT
.L_4146e2:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_4146f9

            call _ZdlPv@PLT
.L_4146f9:

            call _ZSt9terminatev@PLT
.L_4146fe:

            jmp .L_4146e2
.L_414700:

            mov RBX,RAX
.L_414703:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41471c:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],RCX
            jmp .L_414703
.L_414746:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41475a:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41476d:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414770:
          .string "N3re26Regexp6WalkerIiEE"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414790:
          .string "N3re217NumCapturesWalkerE"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4147b0:
          .string "N3re219NamedCapturesWalkerE"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4147d0:

            xor R14,QWORD PTR [RDX+101]
            xor DH,BYTE PTR [RCX]
            cmp BYTE PTR [RBX+97],AL
            jo .L_41484f

            jne .L_41484f
          .byte 0x65
          .byte 0x4e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x73
          .byte 0x57
          .byte 0x61
          .byte 0x6c
          .byte 0x6b
          .byte 0x65
          .byte 0x72
          .byte 0x45
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4147f0:

            movzx EAX,BYTE PTR [RSI]
            cmp EAX,127
            jle .L_414840
          .byte 0xf
          .byte 0xb6
          .byte 0x4e
          .byte 0x1
          .byte 0x8d
          .byte 0x51
          .byte 0x80
          .byte 0xf6
          .byte 0xc2
          .byte 0xc0
          .byte 0x74
          .byte 0xc
.L_414804:

            mov DWORD PTR [RDI],65533
            mov EAX,1
            ret 
          .byte 0x3d
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0xb6
          .byte 0xca
          .byte 0x7f
          .byte 0x36

            cmp EAX,191
            jle .L_414804

            shl EAX,6
            or EAX,ECX
            and EAX,2047
            cmp EAX,127
            jle .L_414804

            mov DWORD PTR [RDI],EAX
            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414840:

            mov DWORD PTR [RDI],EAX
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41484f:

            add BYTE PTR [RDI],CL
            mov DH,86
            add AL,BYTE PTR [RBX-1024032574]
            sal BYTE PTR [RBP-88],61
            out DX,EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI+RCX*1-74],AL
            ret 18814

            movzx ESI,BYTE PTR [RSI+3]
            add ESI,-128
            test SIL,192
            jne .L_414804

            cmp EAX,247
            jg .L_414804

            shl EAX,6
            movzx ESI,SIL
            or EAX,ECX
            shl EAX,6
            or EAX,R8D
            shl EAX,6
            or EAX,ESI
            and EAX,2097151
            cmp EAX,65535
            jle .L_414804

            mov DWORD PTR [RDI],EAX
            mov EAX,4
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            shl EAX,6
            or EAX,ECX
            shl EAX,6
            or EAX,R8D
            movzx EAX,AX
            cmp EAX,2047
            jle .L_414804

            mov DWORD PTR [RDI],EAX
            mov EAX,3
            ret 
.L_4148d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4148e0:

            movsxd RAX,DWORD PTR [RSI]
            cmp RAX,127
            jbe .L_414938

            cmp RAX,2047
            jbe .L_414940

            cmp RAX,1114111
            ja .L_414980

            mov RDX,RAX
            mov ESI,EAX
            mov RCX,RAX
            shr RDX,6
            and ESI,63
            shr RCX,12
            and EDX,63
            or ESI,4294967168
            or EDX,4294967168
            cmp RAX,65535
            ja .L_414960

            or ECX,4294967264
            mov BYTE PTR [RDI+1],DL
            mov BYTE PTR [RDI+2],SIL
            mov BYTE PTR [RDI],CL
            mov EAX,3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414938:

            mov BYTE PTR [RDI],AL
            mov EAX,1
            ret 
.L_414940:

            mov RDX,RAX
            and EAX,63
            shr RDX,6
            or EAX,4294967168
            or EDX,4294967232
            mov BYTE PTR [RDI+1],AL
            mov EAX,2
            mov BYTE PTR [RDI],DL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414960:

            shr RAX,18
            and ECX,63
            mov BYTE PTR [RDI+2],DL
            or EAX,4294967280
            or ECX,4294967168
            mov BYTE PTR [RDI+3],SIL
            mov BYTE PTR [RDI],AL
            mov BYTE PTR [RDI+1],CL
            mov EAX,4
            ret 
          .byte 0x90
.L_414980:

            mov ESI,4294967229
            mov EDX,4294967231
            mov ECX,4294967279
            mov BYTE PTR [RDI],CL
            mov BYTE PTR [RDI+1],DL
            mov EAX,3
            mov BYTE PTR [RDI+2],SIL
            ret 
.L_41499e:

            nop
            nop
.L_4149a0:

            sub RSP,56
            mov DWORD PTR [RSP+12],EDI
            lea RSI,QWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RSP+30]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_4148e0

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4149dc

            add RSP,56
            ret 
.L_4149dc:

            call __stack_chk_fail@PLT
.L_4149e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4149f0:

            xor EAX,EAX
            test ESI,ESI
            jle .L_414a32

            movzx EDX,BYTE PTR [RDI]
            mov EAX,1
            cmp EDX,127
            jle .L_414a32

            xor EAX,EAX
            cmp ESI,1
            je .L_414a32

            cmp EDX,223
            mov EAX,1
            jle .L_414a32

            xor EAX,EAX
            cmp ESI,2
            je .L_414a32

            cmp EDX,239
            setle AL
            cmp ESI,3
            setg DL
            or EAX,EDX
            movzx EAX,AL
.L_414a32:

            ret 
.L_414a34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414a40:

            sub RSP,24
.L_414a44:

            mov R9,RDI
            xor R10D,R10D
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            lea R11,QWORD PTR [RSP+4]
            jmp .L_414a74
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414a68:

            test EAX,EAX
            je .L_414a90

            add R9,1
.L_414a70:

            add R10,1
.L_414a74:

            movzx EAX,BYTE PTR [R9]
            cmp EAX,127
            jle .L_414a68

            mov RSI,R9
            mov RDI,R11
            call .L_4147f0

            cdqe 
            add R9,RAX
            jmp .L_414a70
          .byte 0x90
.L_414a90:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_414aa8

            add RSP,24
.L_414aa7:

            ret 
.L_414aa8:

            call __stack_chk_fail@PLT
.L_414aad:

            nop
            nop
            nop
.L_414ab0:

            sub RSP,24
.L_414ab4:

            mov R9,RDI
            mov R10D,ESI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,127
            lea R11,QWORD PTR [RSP+4]
            jle .L_414b10
.L_414ad4:

            movzx EAX,BYTE PTR [R9]
            cmp RAX,127
            jg .L_414af1
.L_414ade:

            test RAX,RAX
            je .L_414b30

            add R9,1
            movzx EAX,BYTE PTR [R9]
            cmp RAX,127
            jle .L_414ade
.L_414af1:

            mov RSI,R9
            mov RDI,R11
            call .L_4147f0

            cmp DWORD PTR [RSP+4],R10D
            je .L_414b50

            cdqe 
            add R9,RAX
            jmp .L_414ad4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b10:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414b55

            add RSP,24
.L_414b24:

            jmp strchr@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414b30:

            xor EAX,EAX
.L_414b32:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_414b55

            add RSP,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414b50:

            mov RAX,R9
            jmp .L_414b32
.L_414b55:

            call __stack_chk_fail@PLT
.L_414b5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_414b60:

            push RBX
            movsxd RDX,DWORD PTR [RSI+8]
            mov RBX,RDI
            mov RSI,QWORD PTR [RSI]
            call _ZNSo5writeEPKcl@PLT

            mov RAX,RBX
            pop RBX
            ret 
.L_414b75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414b80:

            mov R8D,DWORD PTR [RDI+8]
            xor EAX,EAX
            cmp R8D,DWORD PTR [RSI+8]
            je .L_414b90
.L_414b8c:

            ret 

            nop
            nop
.L_414b90:

            test R8D,R8D
            mov RCX,QWORD PTR [RSI]
            mov RDX,QWORD PTR [RDI]
            movsxd RSI,R8D
            jle .L_414baa

            movzx EDI,BYTE PTR [RCX+RSI*1-1]
            cmp BYTE PTR [RDX+RSI*1-1],DIL
            jne .L_414b8c
.L_414baa:

            lea RAX,QWORD PTR [RDX+RSI*1]
            cmp RAX,RDX
            jbe .L_414bd5

            movzx ESI,BYTE PTR [RCX]
            cmp BYTE PTR [RDX],SIL
            je .L_414bc8
.L_414bbb:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0x90
.L_414bc0:

            movzx EDI,BYTE PTR [RCX]
            cmp BYTE PTR [RDX],DIL
            jne .L_414bbb
.L_414bc8:

            add RDX,1
            add RCX,1
            cmp RAX,RDX
            jne .L_414bc0
.L_414bd5:

            mov EAX,1
            ret 
.L_414bdb:

            nop
            nop
            nop
            nop
            nop
.L_414be0:

            movsxd R8,DWORD PTR [RDI+8]
            mov RDX,QWORD PTR [RSI+8]
            mov RAX,RSI
            mov RCX,QWORD PTR [RDI]
            xor ESI,ESI
            mov RDI,RAX
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_414bf8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414c00:

            push RBX
            movsxd RBX,DWORD PTR [RDI+8]
            mov RAX,RSI
            sub RBX,RCX
            cmp RBX,RDX
            cmova RBX,RDX
            add RCX,QWORD PTR [RDI]
            mov RDI,RAX
            movsxd RDX,EBX
            mov RSI,RCX
            call memcpy@PLT

            mov EAX,EBX
            pop RBX
            ret 
.L_414c27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414c30:

            movsxd R8,DWORD PTR [RDI+8]
            mov EAX,ESI
            test R8D,R8D
            jle .L_414d16

            cmp R8,RDX
            jbe .L_414d16

            mov R9,QWORD PTR [RDI]
            lea R10,QWORD PTR [R9+R8*1]
            sub R8,RDX
            lea RCX,QWORD PTR [R9+RDX*1]
            sar R8,2
            test R8,R8
            jle .L_414d1c

            cmp BYTE PTR [RCX],SIL
            je .L_414d21

            cmp SIL,BYTE PTR [RCX+1]
            lea RDX,QWORD PTR [RCX+1]
            je .L_414ce8

            cmp SIL,BYTE PTR [RCX+2]
            lea RDX,QWORD PTR [RCX+2]
            je .L_414ce8

            cmp SIL,BYTE PTR [RCX+3]
            lea RDI,QWORD PTR [RCX+R8*4]
            lea RDX,QWORD PTR [RCX+3]
            jne .L_414ca7

            jmp .L_414ce8
.L_414c90:

            cmp AL,BYTE PTR [RCX+4]
            je .L_414ce8

            cmp AL,BYTE PTR [RDX+1]
            je .L_414ce0

            cmp AL,BYTE PTR [RDX+2]
            je .L_414cf8

            cmp AL,BYTE PTR [RDX+3]
            je .L_414d00

            mov RCX,RDX
.L_414ca7:

            lea RDX,QWORD PTR [RCX+4]
            cmp RDX,RDI
            jne .L_414c90
.L_414cb0:

            mov RAX,R10
            sub RAX,RDX
            cmp RAX,2
            je .L_414ccb

            cmp RAX,3
            jne .L_414d10

            cmp SIL,BYTE PTR [RDX]
            je .L_414ce8

            add RDX,1
.L_414ccb:

            cmp SIL,BYTE PTR [RDX]
            je .L_414ce8

            add RDX,1
.L_414cd4:

            cmp SIL,BYTE PTR [RDX]
            mov EAX,4294967295
            je .L_414ce8

            ret 
.L_414ce0:

            lea RDX,QWORD PTR [RCX+5]
            nop
            nop
            nop
            nop
.L_414ce8:

            cmp R10,RDX
            je .L_414d16

            mov EAX,EDX
            sub EAX,R9D
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414cf8:

            lea RDX,QWORD PTR [RCX+6]
            jmp .L_414ce8
          .byte 0x66
          .byte 0x90
.L_414d00:

            lea RDX,QWORD PTR [RCX+7]
            jmp .L_414ce8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414d10:

            cmp RAX,1
            je .L_414cd4
.L_414d16:

            mov EAX,4294967295
            ret 
.L_414d1c:

            mov RDX,RCX
            jmp .L_414cb0
.L_414d21:

            mov RDX,RCX
            jmp .L_414ce8
.L_414d26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d30:

            mov EAX,DWORD PTR [RDI+8]
            mov R8D,ESI
            test EAX,EAX
            jle .L_414d7a

            sub EAX,1
            mov RDI,QWORD PTR [RDI]
            cdqe 
            cmp RAX,RDX
            cmovbe RDX,RAX
            movsxd RCX,EDX
            mov EAX,EDX
            cmp SIL,BYTE PTR [RDI+RCX*1]
            je .L_414d7f

            lea ECX,DWORD PTR [RDX-1]
            movsxd RCX,ECX
            mov RAX,RCX
            sub RAX,RDX
            mov RDX,RAX
            jmp .L_414d73
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414d68:

            sub RCX,1
            cmp BYTE PTR [RDI+RCX*1+1],R8B
            je .L_414d7f
.L_414d73:

            cmp RCX,RDX
            mov EAX,ECX
            jne .L_414d68
.L_414d7a:

            mov EAX,4294967295
.L_414d7f:

            ret 
.L_414d81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d90:

            movsxd RCX,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI]
            cmp RCX,RSI
            cmovbe RSI,RCX
            sub RCX,RSI
            add RAX,RSI
            cmp RCX,RDX
            cmova RCX,RDX
            mov EDX,ECX
            ret 
.L_414dae:

            nop
            nop
.L_414db0:

            mov ECX,DWORD PTR [RDI+8]
            test ECX,ECX
            js .L_414eca

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movsxd RBX,ECX
            sub RSP,24
            cmp RBX,RDX
            jb .L_414ec0

            mov R14,QWORD PTR [RDI]
            movsxd R13,DWORD PTR [RSI+8]
            mov R15,QWORD PTR [RSI]
            lea RBP,QWORD PTR [R14+RBX*1]
            lea RDI,QWORD PTR [R14+RDX*1]
            lea RAX,QWORD PTR [R15+R13*1]
            cmp RBP,RDI
            je .L_414df5

            cmp R15,RAX
            jne .L_414e20
.L_414df5:

            sub RDI,R14
            lea RAX,QWORD PTR [RDI+R13*1]
            cmp RBX,RAX
            jb .L_414ec0

            mov EAX,EDI
.L_414e07:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414e20:

            lea R8,QWORD PTR [R15+1]
            mov R12,R15
            not R12
            add R12,RAX
            cmp RAX,R8
            je .L_414ea0
.L_414e32:

            mov QWORD PTR [RSP+8],R8
            sub RSP,8
            mov RDX,R15
            push 0
            mov RSI,RBP
            call .L_4150c0

            cmp RBP,RAX
            pop RDX
            pop RCX
.L_414e4d:

            je .L_414e98

            lea RDI,QWORD PTR [RAX+1]
            cmp RBP,RDI
            je .L_414df5

            mov R8,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+R12*1]
            mov RDX,RDI
            mov RCX,R8
            jmp .L_414e79
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414e70:

            add RDX,1
            cmp RBP,RDX
            je .L_414e98
.L_414e79:

            movzx R9D,BYTE PTR [RCX]
            cmp BYTE PTR [RDX],R9B
            jne .L_414e32

            add RCX,1
            cmp RDX,RSI
            jne .L_414e70

            mov RDI,RAX
            jmp .L_414df5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414e98:

            mov RDI,RBP
            jmp .L_414df5
.L_414ea0:

            sub RSP,8
.L_414ea4:

            mov RSI,RBP
            mov RDX,R15
            push 0
            call .L_4150c0

            pop RSI
            pop RDI
            mov RDI,RAX
            jmp .L_414df5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414ec0:

            mov EAX,4294967295
            jmp .L_414e07
.L_414eca:

            or EAX,4294967295
            ret 
.L_414ece:

            nop
            nop
.L_414ed0:

            sub RSP,24
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov RSI,RSP
            xor EDX,EDX
            call .L_414db0

            cmp EAX,-1
            setne AL
            add RSP,24
            ret 
.L_414ef2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_414f0e:

            movsxd RCX,DWORD PTR [RDI+8]
            mov R8D,DWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp ECX,R8D
            jl .L_415078

            test R8D,R8D
            je .L_415038

            movsxd R12,R8D
            mov R13,QWORD PTR [RDI]
            mov RBX,QWORD PTR [RSI]
            sub RCX,R12
            mov R15,RDI
            cmp RCX,RDX
            cmova RCX,RDX
            lea R14,QWORD PTR [RBX+R12*1]
            add RCX,R12
            lea RBP,QWORD PTR [R13+RCX*1]
            cmp R13,RBP
            je .L_415068

            cmp RBX,R14
            je .L_415068

            lea RDX,QWORD PTR [R14-1]
            cmp RBX,RDX
            je .L_415080

            lea RAX,QWORD PTR [RSP+40]
            mov R11,RBP
            add RBX,1
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RAX
.L_414fa7:

            mov QWORD PTR [RSP+40],R14
            mov QWORD PTR [RSP+48],R13
            sub RSP,8
.L_414fb5:

            mov QWORD PTR [RSP+64],R11
            push 0
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+16]
            call .L_4151b0

            mov RCX,QWORD PTR [RSP+80]
            pop RAX
            pop RDX
.L_414fdc:

            cmp R13,RCX
            je .L_415078

            lea R11,QWORD PTR [RCX-1]
            cmp R13,R11
            je .L_415078

            mov RDI,RBX
            lea RSI,QWORD PTR [R14-2]
            mov RDX,R11
            sub RDI,R14
            add RDI,RCX
            jmp .L_415015
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415008:

            sub RDX,1
            sub RSI,1
            cmp R13,RDX
            je .L_415078
.L_415015:

            movzx EAX,BYTE PTR [RSI]
            cmp BYTE PTR [RDX-1],AL
            jne .L_414fa7

            cmp RDX,RDI
            jne .L_415008
.L_415022:

            sub RCX,R12
            cmp RBP,RCX
            je .L_415078

            mov EAX,ECX
            sub EAX,DWORD PTR [R15]
            jmp .L_415042
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415038:

            cmp RCX,RDX
            cmovbe RDX,RCX
            mov RAX,RDX
.L_415042:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4150b7

            add RSP,88
.L_415056:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415068:

            mov QWORD PTR [RSP+40],RBP
            mov RCX,RBP
.L_415070:

            cmp RCX,R13
            jne .L_415022

            nop
            nop
            nop
.L_415078:

            mov EAX,4294967295
            jmp .L_415042
          .byte 0x90
.L_415080:

            mov QWORD PTR [RSP+48],R14
            mov QWORD PTR [RSP+56],R13
            lea RDI,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RBP
            lea RCX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RSP+56]
            sub RSP,8
            push 0
            call .L_4151b0

            mov RCX,QWORD PTR [RSP+56]
            pop RSI
            pop RDI
            jmp .L_415070
.L_4150b7:

            call __stack_chk_fail@PLT
.L_4150bc:

            nop
            nop
            nop
            nop
.L_4150c0:

            mov RCX,RSI
            sub RCX,RDI
            mov RAX,RCX
            sar RAX,2
            test RAX,RAX
            jle .L_415191

            movzx R8D,BYTE PTR [RDX]
            cmp BYTE PTR [RDI],R8B
            je .L_415196

            cmp BYTE PTR [RDI+1],R8B
            je .L_41519a

            cmp BYTE PTR [RDI+2],R8B
            je .L_41519f

            cmp BYTE PTR [RDI+3],R8B
            lea R9,QWORD PTR [RDI+RAX*4]
            jne .L_41512b

            jmp .L_4151a4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415110:

            cmp BYTE PTR [RDI+4],R8B
            je .L_415152

            cmp BYTE PTR [RCX+1],R8B
            je .L_415158

            cmp BYTE PTR [RCX+2],R8B
            je .L_415160

            cmp BYTE PTR [RCX+3],R8B
            je .L_415168

            mov RDI,RCX
.L_41512b:

            lea RCX,QWORD PTR [RDI+4]
            cmp RCX,R9
            mov RAX,RCX
            jne .L_415110

            mov RCX,RSI
            sub RCX,R9
.L_41513d:

            cmp RCX,2
            je .L_415184

            cmp RCX,3
            je .L_415177

            cmp RCX,1
            je .L_41516d

            mov RAX,RSI
.L_415152:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415158:

            lea RAX,QWORD PTR [RDI+5]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415160:

            lea RAX,QWORD PTR [RDI+6]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415168:

            lea RAX,QWORD PTR [RDI+7]
            ret 
.L_41516d:

            movzx EDX,BYTE PTR [RDX]
.L_415170:

            cmp DL,BYTE PTR [RAX]
            cmovne RAX,RSI
            ret 
.L_415177:

            movzx EDX,BYTE PTR [RDX]
            cmp BYTE PTR [RAX],DL
            je .L_415152

            add RAX,1
            jmp .L_415187
.L_415184:

            movzx EDX,BYTE PTR [RDX]
.L_415187:

            cmp BYTE PTR [RAX],DL
            je .L_415152

            add RAX,1
            jmp .L_415170
.L_415191:

            mov RAX,RDI
            jmp .L_41513d
.L_415196:

            mov RAX,RDI
            ret 
.L_41519a:

            lea RAX,QWORD PTR [RDI+1]
            ret 
.L_41519f:

            lea RAX,QWORD PTR [RDI+2]
            ret 
.L_4151a4:

            lea RAX,QWORD PTR [RDI+3]
            ret 
.L_4151a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4151b0:

            mov R9,QWORD PTR [RSI]
            mov RAX,RDI
            mov RDI,QWORD PTR [RDX]
            mov RDX,R9
            sub RDX,RDI
            mov R11,RDX
            sar R11,2
            test R11,R11
            jle .L_4152e2

            push RBX
.L_4151d0:

            mov R8,QWORD PTR [RCX]
            movzx EBX,BYTE PTR [R8-1]
            cmp BYTE PTR [R9-1],BL
            je .L_41528a

            lea R10,QWORD PTR [R9-1]
            mov QWORD PTR [RSI],R10
            movzx EBX,BYTE PTR [R8-1]
            cmp BYTE PTR [R9-2],BL
            je .L_415278

            lea R10,QWORD PTR [R9-2]
            mov QWORD PTR [RSI],R10
            movzx EBX,BYTE PTR [R9-3]
            cmp BYTE PTR [R8-1],BL
            je .L_415278

            lea RBX,QWORD PTR [R9+1]
            shl R11,2
            lea RDX,QWORD PTR [R9-3]
            sub RBX,R11
            jmp .L_41525f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415220:

            lea R9,QWORD PTR [RDX-1]
            cmp RDX,RBX
            mov QWORD PTR [RSI],R9
            je .L_415290

            movzx R10D,BYTE PTR [RDX-2]
            cmp BYTE PTR [R8-1],R10B
            je .L_41528a

            lea R10,QWORD PTR [RDX-2]
            mov QWORD PTR [RSI],R10
            movzx R9D,BYTE PTR [R8-1]
            cmp BYTE PTR [RDX-3],R9B
            je .L_415278

            lea R10,QWORD PTR [RDX-3]
            sub RDX,4
            mov QWORD PTR [RSI],R10
            movzx R9D,BYTE PTR [R8-1]
            cmp BYTE PTR [R11-4],R9B
            je .L_415278
.L_41525f:

            mov QWORD PTR [RSI],RDX
            movzx R9D,BYTE PTR [R8-1]
            mov R11,RDX
            cmp BYTE PTR [RDX-1],R9B
            jne .L_415220

            mov QWORD PTR [RAX],RDX
            pop RBX
.L_415274:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415278:

            mov QWORD PTR [RAX],R10
            pop RBX
            ret 
.L_41527d:

            mov RDX,QWORD PTR [RCX]
            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            jne .L_4152d9
.L_41528a:

            mov QWORD PTR [RAX],R9
            pop RBX
            ret 
          .byte 0x90
.L_415290:

            mov RDX,R9
            sub RDX,RDI
            cmp RDX,2
            je .L_4152ad

            cmp RDX,3
            je .L_41527d

            cmp RDX,1
            je .L_4152d4
.L_4152a8:

            mov QWORD PTR [RAX],RDI
            pop RBX
            ret 
.L_4152ad:

            mov RDX,QWORD PTR [RCX]
.L_4152b0:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_41528a

            sub R9,1
            mov QWORD PTR [RSI],R9
.L_4152c1:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_41528a

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_4152a8
.L_4152d4:

            mov RDX,QWORD PTR [RCX]
            jmp .L_4152c1
.L_4152d9:

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_4152b0
.L_4152e2:

            cmp RDX,2
            je .L_4152f8

            cmp RDX,3
            je .L_415328

            cmp RDX,1
            je .L_415323
.L_4152f4:

            mov QWORD PTR [RAX],RDI
            ret 
.L_4152f8:

            mov RDX,QWORD PTR [RCX]
.L_4152fb:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_41531f

            sub R9,1
            mov QWORD PTR [RSI],R9
.L_41530c:

            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_41531f

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_4152f4
.L_41531f:

            mov QWORD PTR [RAX],R9
            ret 
.L_415323:

            mov RDX,QWORD PTR [RCX]
            jmp .L_41530c
.L_415328:

            mov RDX,QWORD PTR [RCX]
            movzx ECX,BYTE PTR [RDX-1]
            cmp BYTE PTR [R9-1],CL
            je .L_41531f

            sub R9,1
            mov QWORD PTR [RSI],R9
            jmp .L_4152fb
.L_41533e:
          .byte 0x66
          .byte 0x90
.L_415340:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415350:

            push R15
            push R14
            mov R8,RSI
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDX
            mov ECX,1024
            mov ESI,1024
            mov EBX,1024
            sub RSP,1096
.L_415379:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1080],RAX
            xor EAX,EAX
            lea RBP,QWORD PTR [RSP+24]
            lea R15,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RDI
            movdqu XMM0,XMMWORD PTR [RDX]
            mov R9,RBP
            mov RDI,R15
            movups XMMWORD PTR [RSP+24],XMM0
            mov RAX,QWORD PTR [RDX+16]
            mov EDX,1
            mov QWORD PTR [RSP+40],RAX
            call __vsnprintf_chk@PLT

            cmp EAX,1023
            ja .L_4153e0

            jmp .L_415480
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4153d0:

            mov RDI,R15
            mov DWORD PTR [RSP+4],EAX
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RSP+4]
.L_4153e0:

            lea EDX,DWORD PTR [RAX+1]
            add EBX,EBX
            test EAX,EAX
            cmovns EBX,EDX
            movsxd R14,EBX
            mov RDI,R14
            call _Znam@PLT

            movdqu XMM0,XMMWORD PTR [R12]
            mov R15,RAX
            mov R9,RBP
            mov R8,R13
            mov RCX,-1
            movups XMMWORD PTR [RBP],XMM0
            mov RAX,QWORD PTR [R12+16]
            mov EDX,1
            mov RSI,R14
            mov RDI,R15
            mov QWORD PTR [RBP+16],RAX
            call __vsnprintf_chk@PLT

            test EAX,EAX
            js .L_4153d0

            cmp EBX,EAX
            jle .L_4153d0

            mov RDI,QWORD PTR [RSP+8]
            movsxd RDX,EAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            ja .L_4154af

            mov RSI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RDI,R15
            call _ZdaPv@PLT
.L_41545b:

            mov RAX,QWORD PTR [RSP+1080]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4154aa

            add RSP,1096
.L_415475:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_415480:

            mov RCX,QWORD PTR [RSP+8]
            movsxd RDX,EAX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RCX+8]
            cmp RDX,RAX
            ja .L_4154af

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_41545b
.L_4154aa:

            call __stack_chk_fail@PLT
.L_4154af:

            lea RDI,QWORD PTR [RIP+.L_415721]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4154bb:

            nop
            nop
            nop
            nop
            nop
.L_4154c0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,208
.L_4154ce:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41551d

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41551d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+240]
            lea RBP,QWORD PTR [RBX+16]
            mov RDX,RSP
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX],RBP
            mov QWORD PTR [RBX+8],0
            mov BYTE PTR [RBX+16],0
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
.L_41556c:

            call .L_415350
.L_415571:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415590

            add RSP,208
.L_41558b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_415590:

            call __stack_chk_fail@PLT
.L_415595:

            mov RDI,QWORD PTR [RBX]
            mov R12,RAX
            cmp RBP,RDI
            je .L_4155a5

            call _ZdlPv@PLT
.L_4155a5:

            mov RDI,R12
.L_4155a8:

            call _Unwind_Resume@PLT
.L_4155ad:

            nop
            nop
            nop
.L_4155b0:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_415606

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_415606:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RDI]
            mov BYTE PTR [RAX],0
            call .L_415350

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41566a

            add RSP,216

            ret 
.L_41566a:

            call __stack_chk_fail@PLT
.L_41566f:

            nop
.L_415670:

            sub RSP,216
.L_415677:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_4156c6

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_4156c6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_415350

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41571c

            add RSP,216
.L_41571b:

            ret 
.L_41571c:

            call __stack_chk_fail@PLT
.L_415721:
          .string "basic_string::append"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415740:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_41574e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_41576c

            test RDX,RDX
            jne .L_4157f7
.L_41576c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_4157c0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_4157f0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_415794:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_415803

            add RSP,16
.L_4157b4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4157c0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_4157d9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_415794
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4157f0:

            test RBX,RBX
            je .L_415794

            jmp .L_4157d9
.L_4157f7:

            lea RDI,QWORD PTR [RIP+.L_415bb0]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_415803:

            call __stack_chk_fail@PLT
.L_415808:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415810:

            movsxd RSI,ESI
            push R15
            push R14
            push R13
            lea R13,QWORD PTR [RDI+RSI*1]
            push R12
            push RBP
            push RBX
            mov R12,RDX
            mov R14D,ECX
            sub RSP,8
.L_41582b:

            cmp RDI,R13
            jae .L_4159e6

            xor EBX,EBX
            cmp ECX,1
            mov RBP,RDI
            mov EAX,ECX
            lea R15,QWORD PTR [RIP+.L_415c17]
            jg .L_4158bf

            jmp .L_4159d0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415850:

            cmp R8B,39
            je .L_415998

            cmp R8B,92
            je .L_415978

            cmp R8B,34
            je .L_415958
.L_41586e:

            lea EDX,DWORD PTR [R8-32]
            cmp DL,94
            jbe .L_4159b8

            cmp EAX,3
            jle .L_4159d0

            movsxd RDI,EBX
            mov RCX,R15
            mov RDX,-1
            add RDI,R12
            mov ESI,1
            xor EAX,EAX
            add EBX,4
            call __sprintf_chk@PLT

            nop
            nop
            nop
            nop
            nop
.L_4158a8:

            add RBP,1
            mov EAX,R14D
            sub EAX,EBX
            cmp R13,RBP
            je .L_415900
.L_4158b6:

            cmp EAX,1
            jle .L_4159d0
.L_4158bf:

            movzx R8D,BYTE PTR [RBP]
            cmp R8B,13
            je .L_415918

            jg .L_415850

            cmp R8B,9
            je .L_415938

            cmp R8B,10
            jne .L_41586e

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add RBP,1
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],110
            mov EAX,R14D
            sub EAX,EBX
            cmp R13,RBP
            jne .L_4158b6

            nop
            nop
            nop
            nop
            nop
.L_415900:

            test EAX,EAX
            jle .L_4159d0

            movsxd RAX,EBX
            mov BYTE PTR [R12+RAX*1],0
            jmp .L_4159d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415918:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],114
            jmp .L_4158a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415938:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],116
            jmp .L_4158a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415958:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],34
            jmp .L_4158a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415978:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],92
            jmp .L_4158a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415998:

            lea EAX,DWORD PTR [RBX+1]
            movsxd RDX,EBX
            add EBX,2
            mov BYTE PTR [R12+RDX*1],92
            cdqe 
            mov BYTE PTR [R12+RAX*1],39
            jmp .L_4158a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4159b8:

            movsxd RAX,EBX
            add EBX,1
            mov BYTE PTR [R12+RAX*1],R8B
            jmp .L_4158a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4159d0:

            mov EBX,4294967295
.L_4159d5:

            add RSP,8
.L_4159d9:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4159e6:

            mov EAX,ECX
            xor EBX,EBX
            jmp .L_415900
.L_4159ef:

            nop
.L_4159f0:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_415a00:

            mov EAX,DWORD PTR [RSI+8]
            lea R13D,DWORD PTR [RAX*4+1]
            movsxd RDI,R13D
            call _Znam@PLT

            mov ESI,DWORD PTR [R12+8]
            mov RDI,QWORD PTR [R12]
            mov ECX,R13D
            mov RDX,RAX
            mov RBP,RAX
            call .L_415810

            lea RDX,QWORD PTR [RBX+16]
            mov RSI,RBP
            mov RDI,RBX
            mov QWORD PTR [RBX],RDX
            movsxd RDX,EAX
            add RDX,RBP
            call .L_415740

            mov RDI,RBP
            call _ZdaPv@PLT

            add RSP,8
.L_415a4e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_415a58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a60:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_415a69:

            movsxd RDX,DWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            mov RBP,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            add RDX,RSI
            mov QWORD PTR [RSP],RAX
.L_415a91:

            call .L_415740
.L_415a96:

            mov EAX,DWORD PTR [RSP+8]
            lea ESI,DWORD PTR [RAX-1]
            xor EAX,EAX
.L_415a9f:

            mov EDX,ESI
            shr EDX,31
            mov ECX,EDX
            or CL,AL
            jne .L_415ad6
.L_415aaa:

            mov RDI,QWORD PTR [RSP]
            movsxd RDX,ESI
            add RDI,RDX
            movzx ECX,BYTE PTR [RDI]
            cmp ECX,255
            mov EAX,ECX
            je .L_415b20

            mov EDX,ESI
            add EAX,1
            shr EDX,31
            mov BYTE PTR [RDI],AL
            mov EAX,1
            mov ECX,EDX
            or CL,AL
            je .L_415aaa
.L_415ad6:

            lea RDX,QWORD PTR [RBX+16]
            test AL,AL
            mov QWORD PTR [RBX],RDX
            je .L_415b50

            mov RAX,QWORD PTR [RSP]
            add RBP,16
            cmp RAX,RBP
            je .L_415b40

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RBX+16],RAX
.L_415afa:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBX+8],RAX
.L_415b03:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+40]
            xor RBX,QWORD PTR FS:[40]
            jne .L_415b76

            add RSP,56
.L_415b1a:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415b20:

            mov RCX,QWORD PTR [RSP+8]
            cmp RDX,RCX
            ja .L_415b7b

            mov QWORD PTR [RSP+8],RDX
            sub ESI,1
            mov BYTE PTR [RDI],0
            xor EAX,EAX
            jmp .L_415a9f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415b40:

            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_415afa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415b50:

            lea RDX,QWORD PTR [RIP+.L_415c31]
            mov RDI,RBX
            mov RSI,RDX
.L_415b5d:

            call .L_415740

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            cmp RDI,RBP
            je .L_415b03

            call _ZdlPv@PLT

            jmp .L_415b03
.L_415b76:

            call __stack_chk_fail@PLT
.L_415b7b:

            lea RSI,QWORD PTR [RIP+.L_415c1d]
            lea RDI,QWORD PTR [RIP+.L_415be0]
            xor EAX,EAX
            call _ZSt24__throw_out_of_range_fmtPKcz@PLT
.L_415b90:

            mov RDI,QWORD PTR [RSP]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_415ba5

            call _ZdlPv@PLT
.L_415ba5:

            mov RDI,RBX
.L_415ba8:

            call _Unwind_Resume@PLT
.L_415bad:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415bb0:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_415be0:

            and EAX,1595947635
            pop RDI
            jo .L_415c57
          .byte 0x73
          .byte 0x20
          .byte 0x28
          .byte 0x77
          .byte 0x68
          .byte 0x69
          .byte 0x63
          .byte 0x68
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x7a
          .byte 0x75
          .byte 0x29
          .byte 0x20
          .byte 0x3e
          .byte 0x20
          .byte 0x74
          .byte 0x68
          .byte 0x69
          .byte 0x73
          .byte 0x2d
          .byte 0x3e
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x28
          .byte 0x29
          .byte 0x20
          .byte 0x28
          .byte 0x77
          .byte 0x68
          .byte 0x69
          .byte 0x63
          .byte 0x68
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x7a
          .byte 0x75
          .byte 0x29
          .byte 0x0
.L_415c17:
          .string "\\%03o"
.L_415c1d:
          .string "basic_string::erase"
.L_415c31:

            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415c40:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_415c4e:

            mov RAX,QWORD PTR FS:[40]
.L_415c57:

            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_415c6c

            test RDX,RDX
            jne .L_415cf7
.L_415c6c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_415cc0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_415cf0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_415c94:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_415d03

            add RSP,16
.L_415cb4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415cc0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_415cd9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_415c94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415cf0:

            test RBX,RBX
            je .L_415c94

            jmp .L_415cd9
.L_415cf7:

            lea RDI,QWORD PTR [RIP+.L_417eb0]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_415d03:

            call __stack_chk_fail@PLT
.L_415d08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415d10:

            mov QWORD PTR [RDI],RSI
            mov QWORD PTR [RDI+8],0
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+32],0
            mov BYTE PTR [RDI+40],0
            mov BYTE PTR [RDI+41],0
            mov BYTE PTR [RDI+42],0
            mov QWORD PTR [RDI+48],0
            mov DWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+64],0
            mov DWORD PTR [RDI+72],0
            mov QWORD PTR [RDI+80],0
            mov DWORD PTR [RDI+88],0
            mov QWORD PTR [RDI+96],0
            mov QWORD PTR [RDI+104],0
            ret 
.L_415d7b:

            nop
            nop
            nop
            nop
            nop
.L_415d80:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+80]
            test RDI,RDI
            je .L_415d92

            call _ZdaPv@PLT
.L_415d92:

            mov RDI,QWORD PTR [RBX+96]
            test RDI,RDI
            je .L_415da0

            call _ZdaPv@PLT
.L_415da0:

            mov RDI,QWORD PTR [RBX+64]
            test RDI,RDI
            je .L_415db0

            pop RBX
            jmp _ZdaPv@PLT
          .byte 0x90
.L_415db0:

            pop RBX
            ret 
.L_415db2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415dc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,520
.L_415dd4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+108]
            lea EDI,DWORD PTR [RAX+RAX*1]
            movabs RAX,576460752303423487
            mov DWORD PTR [RBX+108],EDI
            movsxd RDI,EDI
            cmp RDI,RAX
            ja .L_416386

            shl RDI,4
.L_415e0a:

            call _Znam@PLT
.L_415e0f:

            movsxd RDX,DWORD PTR [RBX+104]
            mov R12,QWORD PTR [RBX+96]
            mov RDI,RAX
            mov RBP,RAX
            mov RSI,R12
            shl RDX,4
            call memmove@PLT

            mov RDI,R12
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RBX+108]
            cmp DWORD PTR [RBX+104],EAX
            mov QWORD PTR [RBX+96],RBP
            jge .L_415e70

            mov EAX,1
.L_415e42:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41638b

            add RSP,520
.L_415e60:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415e70:

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R12
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_415eff:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_415f04:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+128],R13
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],0
            mov BYTE PTR [RSP+216],0
.L_415fbe:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_415fc3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_417edc]
            mov EDX,15
.L_415fd3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_417eec]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,113
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_417eee]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41600f:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_417ef1]
            mov EDX,19
.L_41601f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_416024:

            cmp BYTE PTR [RSP+112],0
            je .L_4160a0
.L_41602b:

            mov RDI,QWORD PTR [RSP+200]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],R13
            cmp RDI,RAX
            je .L_416056

            call _ZdlPv@PLT
.L_416056:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_415e42
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4160a0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_417eda]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_4162f8

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_4161a8

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_41611a:

            call .L_415c40

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4162b8

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_416338

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_416347

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41617d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_416241

            jmp .L_416246
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4161a8:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
            call .L_415c40
.L_4161c4:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_416280

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_416310

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41631f

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_416222:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_416246
.L_416241:

            call _ZdlPv@PLT
.L_416246:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_416255:

            call write@PLT
.L_41625a:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_41602b

            call _ZdlPv@PLT

            jmp .L_41602b
          .byte 0x90
.L_416280:

            test RDX,RDX
            je .L_4162a0

            cmp RDX,1
            je .L_41635a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
.L_4162a0:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_416222
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4162b8:

            test RDX,RDX
            je .L_4162e0

            cmp RDX,1
            je .L_416370

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4162e0:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41617d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4162f8:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
.L_416300:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_416305:

            jmp .L_416246
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416310:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41631f:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_416222
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416338:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_416347:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41617d
.L_41635a:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4162a0
.L_416370:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4162e0
.L_416386:

            call __cxa_throw_bad_array_new_length@PLT
.L_41638b:

            call __stack_chk_fail@PLT
.L_416390:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4163a4:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4163b7:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_4163ce

            call _ZdlPv@PLT
.L_4163ce:

            call _ZSt9terminatev@PLT
.L_4163d3:

            jmp .L_4163b7
.L_4163d5:

            mov R13,RAX
.L_4163d8:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
            call _Unwind_Resume@PLT
.L_4163f1:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
            jmp .L_4163d8
.L_416414:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416420:

            push RBP
            push RBX
            mov EBP,ECX
            mov RBX,RDI
            sub RSP,24
.L_41642b:

            mov EAX,DWORD PTR [RDI+108]
            cmp DWORD PTR [RDI+104],EAX
            jge .L_4164a8
.L_416433:

            mov RCX,QWORD PTR [RBX]
            movsxd RAX,ESI
            mov RCX,QWORD PTR [RCX+32]
            mov EAX,DWORD PTR [RCX+RAX*8]
            and EAX,7
            cmp EAX,7
            je .L_41649c

            test EBP,EBP
            jne .L_41647e

            mov EAX,DWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX+80]
            lea ECX,DWORD PTR [RAX+1]
            mov RAX,RDX
            sub RAX,QWORD PTR [RBX+8]
            imul ECX,ESI
            add ECX,EAX
            mov EAX,ECX
            shr EAX,5
            lea R8,QWORD PTR [RDI+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov EDI,DWORD PTR [R8]
            test EDI,EAX
            jne .L_41649c

            or EAX,EDI
            mov DWORD PTR [R8],EAX
.L_41647e:

            movsxd RAX,DWORD PTR [RBX+104]
            mov RCX,QWORD PTR [RBX+96]
            lea EDI,DWORD PTR [RAX+1]
            shl RAX,4
            add RAX,RCX
            mov DWORD PTR [RBX+104],EDI
            mov DWORD PTR [RAX],ESI
            mov QWORD PTR [RAX+8],RDX
            mov DWORD PTR [RAX+4],EBP
.L_41649c:

            add RSP,24
.L_4164a0:

            pop RBX
            pop RBP
            ret 

            nop
            nop
            nop
            nop
            nop
.L_4164a8:

            mov QWORD PTR [RSP+8],RDX
            mov DWORD PTR [RSP+4],ESI
            call .L_415dc0

            test AL,AL
            mov ESI,DWORD PTR [RSP+4]
            mov RDX,QWORD PTR [RSP+8]
            jne .L_416433

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_4164ce:

            nop
            nop
.L_4164d0:

            push R15
            push R14
            xor ECX,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,568
.L_4164e6:

            mov DWORD PTR [RDI+104],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            movsxd RAX,DWORD PTR [RDI+16]
            add RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+16],RAX
.L_41650d:

            call .L_416420

            mov BYTE PTR [RSP+15],0
.L_416517:

            mov EAX,DWORD PTR [RBX+104]
            test EAX,EAX
            jle .L_4165e8
.L_416522:

            sub EAX,1
            lea RBP,QWORD PTR [RIP+.L_417f3c]
            mov DWORD PTR [RBX+104],EAX
            cdqe 
            shl RAX,4
            add RAX,QWORD PTR [RBX+96]
            mov ESI,DWORD PTR [RAX]
            mov R15,QWORD PTR [RAX+8]
            mov R13D,DWORD PTR [RAX+4]
.L_416543:

            mov RDI,QWORD PTR [RBX]
            movsxd RAX,ESI
            mov RCX,QWORD PTR [RDI+32]
            lea R12,QWORD PTR [RCX+RAX*8]
            mov EDX,DWORD PTR [R12]
            mov EAX,EDX
            and EAX,7
            cmp EAX,6
            ja .L_4167e0

            movsxd RAX,DWORD PTR [RBP+RAX*4]
            add RAX,RBP
            jmp RAX
.L_41656d:

            mov R15,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_416578:

            cmp BYTE PTR [RBX+42],0
            jne .L_416a80
.L_416582:

            mov ESI,DWORD PTR [RBX+56]
            test ESI,ESI
            je .L_416c20

            mov RDX,QWORD PTR [RBX+64]
            mov RAX,QWORD PTR [RBX+48]
            movzx R8D,BYTE PTR [RBX+41]
            mov QWORD PTR [RDX+8],R15
            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            je .L_416be0

            test R8B,R8B
            je .L_416c20

            movsxd RDI,DWORD PTR [RAX+8]
            add RCX,RDI
            cmp R15,RCX
            ja .L_4174f0
.L_4165c3:

            movsxd RAX,DWORD PTR [RBX+16]
            add RAX,QWORD PTR [RBX+8]
            cmp R15,RAX
            je .L_416c20

            mov EAX,DWORD PTR [RBX+104]
            mov BYTE PTR [RSP+15],1
            test EAX,EAX
            jg .L_416522

            nop
            nop
            nop
            nop
.L_4165e8:

            mov RCX,QWORD PTR [RSP+552]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+15]
            jne .L_417a45

            add RSP,568
.L_41660b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_416616:

            mov R15,QWORD PTR [RSP+16]
            xor R13D,R13D
            nop
            nop
.L_416620:

            mov R14D,DWORD PTR [R12+4]
            lea RDI,QWORD PTR [RBX+24]
            mov RSI,R15
            call .L_4311b0

            not EAX
            test EAX,R14D
            jne .L_416517
.L_41663c:

            mov ESI,DWORD PTR [R12]
            mov EAX,R15D
            mov R8,QWORD PTR [RBX+80]
            sub EAX,DWORD PTR [RBX+8]
            shr ESI,3
            jmp .L_4167a7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416658:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_416660:

            cmp QWORD PTR [RSP+16],R15
            jbe .L_416517

            cmp BYTE PTR [R12+6],0
            movzx ECX,BYTE PTR [R15]
            movzx ESI,BYTE PTR [R12+4]
            movzx EAX,BYTE PTR [R12+5]
            jne .L_4172d8
.L_416687:

            cmp ESI,ECX
            jg .L_416517

            cmp ECX,EAX
            jg .L_416517

            shr EDX,3
            add R15,1
            mov R8,QWORD PTR [RBX+80]
            mov EAX,R15D
            mov ESI,EDX
            sub EAX,DWORD PTR [RBX+8]
            jmp .L_4167a7
.L_4166af:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
            nop
.L_4166b8:

            shr EDX,3
            mov EAX,EDX
            mov RSI,RAX
            mov EAX,DWORD PTR [RCX+RAX*8]
            and EAX,7
            cmp EAX,2
            je .L_416bb0
.L_4166cf:

            mov RDX,QWORD PTR [RSP+16]
            xor ECX,ECX
            mov RDI,RBX
            call .L_416420
.L_4166de:

            jmp .L_41663c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4166e8:

            test R13D,R13D
            lea RAX,QWORD PTR [RIP+.L_417f58]
            lea R9,QWORD PTR [RIP+.L_417fac]
            je .L_416c30

            cmp R13D,1
            jne .L_416fc0

            mov ECX,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [R12+4]
            mov R10,R15
            sub R10,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+80]
            add ECX,1
            imul ECX,ESI
            add ECX,R10D
            mov EDX,ECX
            shl R13D,CL
            shr EDX,5
            lea RDX,QWORD PTR [R8+RDX*4]
            mov R11D,DWORD PTR [RDX]
            test R13D,R11D
            jne .L_416517

            or R13D,R11D
            mov DWORD PTR [RDX],R13D
            mov RCX,QWORD PTR [RDI+32]
            movsxd RDX,ESI
            lea R12,QWORD PTR [RCX+RDX*8]
            mov EDX,DWORD PTR [R12]
            mov R11D,EDX
            and R11D,7
            cmp R11D,6
            ja .L_4167d5

            movsxd R11,DWORD PTR [RAX+R11*4]
            add RAX,R11
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416770:

            test R13D,R13D
            je .L_416cb8

            cmp R13D,1
            jne .L_416d48

            movsxd RDX,DWORD PTR [R12+4]
            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RAX+RDX*8],R15
            jmp .L_416517
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416798:

            mov R8,QWORD PTR [RBX+80]
.L_41679c:

            mov EAX,R15D
            sub EAX,DWORD PTR [RBX+8]
.L_4167a2:

            shr EDX,3
            mov ESI,EDX
.L_4167a7:

            mov ECX,DWORD PTR [RBX+16]
            add ECX,1
            imul ECX,ESI
            add ECX,EAX
            mov EAX,ECX
            shr EAX,5
            lea RDI,QWORD PTR [R8+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov EDX,DWORD PTR [RDI]
            test EDX,EAX
            jne .L_416517

            or EAX,EDX
            mov DWORD PTR [RDI],EAX
            jmp .L_416543
.L_4167d5:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4167e0:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RDI],R15
.L_41687d:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_416882:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_416953:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_416958:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417edc]
            mov EDX,15
.L_416968:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417eec]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,174
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_417eee]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4169a4:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417f05]
            mov EDX,19
.L_4169b4:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [R12]
            lea RDI,QWORD PTR [RBP+8]
            and ESI,7
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_417f19]
            mov EDX,5
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,R13D
            mov RDI,RBX
            call _ZNSolsEi@PLT
.L_4169eb:

            cmp BYTE PTR [RSP+160],0
            je .L_416aa0
.L_4169f9:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+280],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_416a36

            call _ZdlPv@PLT
.L_416a36:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+168],R14
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+RAX*1+168],R15
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RSP+15],0
            jmp .L_4165e8
.L_416a80:

            movsxd RAX,DWORD PTR [RBX+16]
            add RAX,QWORD PTR [RBX+8]
            cmp R15,RAX
            jne .L_416517

            jmp .L_416582
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416aa0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417eda]
            lea R12,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_417730

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            jbe .L_4172f0

            lea R13,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_416b16:

            call .L_415c40
.L_416b1b:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_417741

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_417660

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41766f

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_416b80:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R13
            jne .L_417376

            jmp .L_41737b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416bb0:

            mov ESI,DWORD PTR [R12+4]
            mov RDX,R15
            xor ECX,ECX
            mov RDI,RBX
.L_416bbd:

            call .L_416420

            mov R15,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [R12+4]
            mov R8,QWORD PTR [RBX+80]
            mov EAX,R15D
            sub EAX,DWORD PTR [RBX+8]
            jmp .L_4167a7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416be0:

            test ESI,ESI
            jle .L_416c11
.L_416be4:

            add RDX,8
            add RAX,8
            xor ESI,ESI
            nop
            nop
.L_416bf0:

            mov RDI,QWORD PTR [RDX-8]
            mov RCX,QWORD PTR [RDX]
            add ESI,1
            add RDX,16
            add RAX,16
            sub RCX,RDI
            mov QWORD PTR [RAX-24],RDI
            mov DWORD PTR [RAX-16],ECX
            cmp DWORD PTR [RBX+56],ESI
            jg .L_416bf0
.L_416c11:

            test R8B,R8B
            jne .L_4165c3

            nop
            nop
            nop
            nop
            nop
            nop
.L_416c20:

            mov BYTE PTR [RSP+15],1
            jmp .L_4165e8
.L_416c2a:

            mov R15,QWORD PTR [RSP+16]
            nop
.L_416c30:

            mov ECX,1
            mov RDX,R15
            mov RDI,RBX
            call .L_416420
.L_416c40:

            mov ESI,DWORD PTR [R12]
            mov ECX,DWORD PTR [RBX+16]
            mov RDX,R15
            sub RDX,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+80]
            shr ESI,3
            add ECX,1
            imul ECX,ESI
            mov EAX,EDX
            add ECX,EDX
            mov EDX,ECX
            shr EDX,5
            lea R9,QWORD PTR [R8+RDX*4]
            mov EDX,1
            shl EDX,CL
            mov EDI,DWORD PTR [R9]
            test EDX,EDI
            jne .L_416517

            or EDX,EDI
            mov DWORD PTR [R9],EDX
            mov RDX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RDX+32]
            mov EDX,ESI
            lea R12,QWORD PTR [RDI+RDX*8]
            mov EDX,DWORD PTR [R12]
            mov ECX,EDX
            and ECX,7
            cmp ECX,6
            ja .L_4167d5

            lea R11,QWORD PTR [RIP+.L_417f74]
            movsxd RCX,DWORD PTR [R11+RCX*4]
            add RCX,R11
            jmp RCX
.L_416cae:

            mov R15,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
.L_416cb8:

            lea R14,QWORD PTR [RIP+.L_417f90]
.L_416cbf:

            movsxd RAX,DWORD PTR [R12+4]
            test EAX,EAX
            js .L_416cd1

            cmp DWORD PTR [RBX+72],EAX
            jg .L_4174fd
.L_416cd1:

            mov R9D,DWORD PTR [R12]
            mov ECX,DWORD PTR [RBX+16]
            mov RDX,R15
            sub RDX,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+80]
            shr R9D,3
            add ECX,1
            imul ECX,R9D
            mov ESI,R9D
            mov EAX,EDX
            add ECX,EDX
            mov EDX,ECX
            shr EDX,5
            lea R10,QWORD PTR [R8+RDX*4]
            mov EDX,1
            shl EDX,CL
            mov EDI,DWORD PTR [R10]
            test EDI,EDX
            jne .L_416517

            or EDX,EDI
            mov RDI,QWORD PTR [RBX]
            xor R13D,R13D
            mov DWORD PTR [R10],EDX
            mov EDX,R9D
            mov RCX,QWORD PTR [RDI+32]
            lea R12,QWORD PTR [RCX+RDX*8]
            mov EDX,DWORD PTR [R12]
            mov R10D,EDX
            and R10D,7
            cmp R10D,6
            ja .L_4167e0

            movsxd R10,DWORD PTR [R14+R10*4]
            add R10,R14
            jmp R10

            nop
            nop
            nop
.L_416d48:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RDI],R15
.L_416de5:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_416dea:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_416ebb:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_416ec0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417edc]
            mov EDX,15
.L_416ed0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417eec]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,242
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_417eee]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_416f0c:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417f1f]
            mov EDX,25
.L_416f1c:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_416f2d:

            cmp BYTE PTR [RSP+160],0
            je .L_4173b8
.L_416f3b:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+280],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_416f78

            call _ZdlPv@PLT
.L_416f78:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+168],R14
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+RAX*1+168],R15
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_416517

            nop
            nop
            nop
.L_416fc0:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RDI],R15
.L_41705d:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_417062:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_417133:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_417138:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417edc]
            mov EDX,15
.L_417148:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417eec]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,197
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_417eee]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_417184:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417f1f]
            mov EDX,25
.L_417194:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_4171a5:

            cmp BYTE PTR [RSP+160],0
            jne .L_416f3b

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417eda]
            lea R12,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_4177a9

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_417524

            lea R13,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+96],RAX
.L_417220:

            call .L_415c40
.L_417225:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_417833

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41792a

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_417939

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41727b:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R13
            je .L_41729a
.L_417295:

            call _ZdlPv@PLT
.L_41729a:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_4172a9:

            call write@PLT
.L_4172ae:

            mov RDI,QWORD PTR [RSP+64]
            add R12,16
            mov BYTE PTR [RSP+160],1
            cmp RDI,R12
            je .L_416f3b

            call _ZdlPv@PLT

            jmp .L_416f3b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4172d8:

            lea EDI,DWORD PTR [RCX-65]
            cmp EDI,25
            ja .L_416687

            add ECX,32
            jmp .L_416687
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4172f0:

            lea R13,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+96],RAX
.L_417301:

            call .L_415c40
.L_417306:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_417778

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_417680

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41768f

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41735c:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R13
            je .L_41737b
.L_417376:

            call _ZdlPv@PLT
.L_41737b:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41738a:

            call write@PLT
.L_41738f:

            mov RDI,QWORD PTR [RSP+64]
            add R12,16
            mov BYTE PTR [RSP+160],1
            cmp RDI,R12
            je .L_4169f9

            call _ZdlPv@PLT

            jmp .L_4169f9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4173b8:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_417eda]
            lea R12,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_4177ba

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            jbe .L_4175d1

            lea R13,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41742e:

            call .L_415c40
.L_417433:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_417864

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_4178ed

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_4178fc

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_417498:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R13
            je .L_4174bd
.L_4174b8:

            call _ZdlPv@PLT
.L_4174bd:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_4174cc:

            call write@PLT
.L_4174d1:

            jmp .L_4172ae
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4174e0:

            xor R13D,R13D
            jmp .L_416620
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4174f0:

            test ESI,ESI
            jg .L_416be4

            jmp .L_4165c3
.L_4174fd:

            mov RDX,QWORD PTR [RBX+64]
            mov ECX,1
            mov RDI,RBX
            mov RDX,QWORD PTR [RDX+RAX*8]
.L_41750d:

            call .L_416420
.L_417512:

            movsxd RDX,DWORD PTR [R12+4]
            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RAX+RDX*8],R15
            jmp .L_416cd1
.L_417524:

            lea R13,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41753e:

            call .L_415c40
.L_417543:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_4177cb

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_4178cd

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_4178dc

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_4175a8:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R13
            jne .L_417295

            jmp .L_41729a
.L_4175d1:

            lea R13,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+96],RAX
.L_4175e2:

            call .L_415c40
.L_4175e7:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_417802

            lea RCX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41790d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41791c

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41763d:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R13,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R13
            jne .L_4174b8

            jmp .L_4174bd
.L_417660:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41766f:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_416b80
.L_417680:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41768f:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41735c
.L_41769d:

            xor R13D,R13D
            jmp .L_4167a2
.L_4176a5:

            mov ESI,R9D
            jmp .L_416cbf
.L_4176ad:

            shr EDX,3
            mov EAX,EDX
            mov EAX,DWORD PTR [RDI+RAX*8]
            and EAX,7
            cmp EAX,2
            je .L_417947

            mov ESI,EDX
            xor R13D,R13D
            jmp .L_4166cf
.L_4176cb:

            mov EAX,DWORD PTR [RBX+16]
            shr EDX,3
            mov ESI,EDX
            lea ECX,DWORD PTR [RAX+1]
            imul ECX,EDX
            add ECX,R10D
            mov EAX,ECX
            shr EAX,5
            lea RDX,QWORD PTR [R8+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov R10D,DWORD PTR [RDX]
            test EAX,R10D
            jne .L_416517

            or EAX,R10D
            mov DWORD PTR [RDX],EAX
            mov RCX,QWORD PTR [RDI+32]
            movsxd RAX,ESI
            lea R12,QWORD PTR [RCX+RAX*8]
            mov EDX,DWORD PTR [R12]
            mov EAX,EDX
            and EAX,7
            cmp EAX,6
            ja .L_4167d5

            movsxd RAX,DWORD PTR [R9+RAX*4]
            add R9,RAX
            jmp R9
.L_417724:

            xor R13D,R13D
            jmp .L_41679c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417730:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_417737:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41773c:

            jmp .L_41737b
.L_417741:

            test RDX,RDX
            je .L_417762

            cmp RDX,1
            je .L_4178b1

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_417762:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_416b80
.L_417778:

            test RDX,RDX
            je .L_417796

            cmp RDX,1
            je .L_41789b

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_417796:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41735c
.L_4177a9:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_4177b0:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4177b5:

            jmp .L_41729a
.L_4177ba:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,R12
.L_4177c1:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4177c6:

            jmp .L_4174bd
.L_4177cb:

            test RDX,RDX
            je .L_4177ec

            cmp RDX,1
            je .L_417a13

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_4177ec:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_4175a8
.L_417802:

            test RDX,RDX
            je .L_417820

            cmp RDX,1
            je .L_417a2f

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_417820:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41763d
.L_417833:

            test RDX,RDX
            je .L_417851

            cmp RDX,1
            je .L_4179e1

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_417851:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41727b
.L_417864:

            test RDX,RDX
            je .L_417885

            cmp RDX,1
            je .L_4179f7

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_417885:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_417498
.L_41789b:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_417796
.L_4178b1:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_417762
.L_4178cd:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_4178dc:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_4175a8
.L_4178ed:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_4178fc:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_417498
.L_41790d:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41791c:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41763d
.L_41792a:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_417939:

            lea RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41727b
.L_417947:

            mov ESI,DWORD PTR [R12+4]
            xor ECX,ECX
            mov RDX,R15
            mov RDI,RBX
.L_417954:

            call .L_416420

            mov EAX,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [R12+4]
            mov R8,QWORD PTR [RBX+80]
            lea ECX,DWORD PTR [RAX+1]
            mov RAX,QWORD PTR [RSP+16]
            sub RAX,QWORD PTR [RBX+8]
            imul ECX,ESI
            add ECX,EAX
            mov EAX,ECX
            shr EAX,5
            lea RDX,QWORD PTR [R8+RAX*4]
            mov EAX,1
            shl EAX,CL
            mov EDI,DWORD PTR [RDX]
            test EAX,EDI
            jne .L_416517

            or EAX,EDI
            xor R13D,R13D
            mov DWORD PTR [RDX],EAX
            mov RAX,QWORD PTR [RBX]
            mov RCX,QWORD PTR [RAX+32]
            movsxd RAX,ESI
            lea R12,QWORD PTR [RCX+RAX*8]
            mov EDX,DWORD PTR [R12]
            mov EAX,EDX
            and EAX,7
            cmp EAX,6
            ja .L_4167e0

            lea RDI,QWORD PTR [RIP+.L_417fc8]
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_4179c7:

            mov R15,QWORD PTR [RSP+16]
            xor R13D,R13D
            jmp .L_4166b8
.L_4179d4:

            mov R15,QWORD PTR [RSP+16]
            xor R13D,R13D
            jmp .L_41679c
.L_4179e1:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_417851
.L_4179f7:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_417885
.L_417a13:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4177ec
.L_417a2f:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_417820
.L_417a45:

            call __stack_chk_fail@PLT
.L_417a4a:

            mov RBX,RAX
.L_417a4d:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_417a6b:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R14-24]
            mov QWORD PTR [RSP+168],R14
            mov QWORD PTR [RSP+RAX*1+168],R15
            jmp .L_417a4d
.L_417a8d:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_417aa0:

            mov RDI,QWORD PTR [RSP+64]
            add R12,16
            cmp RDI,R12
            je .L_417ab3

            call _ZdlPv@PLT
.L_417ab3:

            call _ZSt9terminatev@PLT
.L_417ab8:

            jmp .L_417aa0
.L_417aba:

            jmp .L_417aa0
.L_417abc:

            jmp .L_417aa0
.L_417abe:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_417ad2:

            jmp .L_417a8d
.L_417ad4:

            jmp .L_417a4a
.L_417ad9:

            jmp .L_417abe
.L_417adb:

            jmp .L_417aa0
.L_417add:

            jmp .L_417aa0
.L_417adf:

            jmp .L_417a4a
.L_417ae4:

            jmp .L_417a6b
.L_417ae6:

            jmp .L_417abe
.L_417ae8:

            jmp .L_417a8d
.L_417aea:

            jmp .L_417a6b
.L_417aef:

            nop
.L_417af0:

            push R12
            push RBP
            mov R11D,R8D
            push RBX
.L_417af7:

            mov R10,QWORD PTR [RSI]
            mov R12D,DWORD PTR [RSP+32]
            mov QWORD PTR [RDI+8],R10
            mov R10D,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+16],R10D
            mov R10,QWORD PTR [RDX]
            mov QWORD PTR [RDI+24],R10
            mov EDX,DWORD PTR [RDX+8]
            test R10,R10
            mov DWORD PTR [RDI+32],EDX
            je .L_417cc0
.L_417b21:

            mov RDX,QWORD PTR [RDI]
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_417b40

            mov RBX,QWORD PTR [RSI]
            cmp QWORD PTR [RDI+24],RBX
            je .L_417b40
.L_417b34:

            xor EAX,EAX
.L_417b36:

            pop RBX
.L_417b37:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417b40:

            cmp BYTE PTR [RDX+1],0
            jne .L_417ca0
.L_417b4a:

            or EAX,ECX
            test R8B,R8B
            mov BYTE PTR [RDI+40],AL
            jne .L_417b59

            movzx R11D,BYTE PTR [RDX+1]
.L_417b59:

            mov BYTE PTR [RDI+41],R11B
            movzx EAX,BYTE PTR [RDX+1]
            test R12D,R12D
            mov QWORD PTR [RDI+48],R9
            mov DWORD PTR [RDI+56],R12D
            mov BYTE PTR [RDI+42],AL
            jle .L_417b93

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_417b78:

            mov QWORD PTR [R9],0
            mov DWORD PTR [R9+8],0
            add EAX,1
            add R9,16
            cmp DWORD PTR [RDI+56],EAX
            jg .L_417b78
.L_417b93:

            mov EAX,DWORD PTR [RSI+8]
            movsxd RDX,DWORD PTR [RDX+12]
            mov RBP,RSI
            mov RBX,RDI
            add EAX,1
            cdqe 
            imul RAX,RDX
            lea RDX,QWORD PTR [RAX+62]
            add RAX,31
            cmovs RAX,RDX
            movabs RDX,2305843009213693950
            sar RAX,5
            mov DWORD PTR [RDI+88],EAX
            cdqe 
            cmp RAX,RDX
            ja .L_417d11

            lea RDI,QWORD PTR [RAX*4]
            add R12D,R12D
            call _Znam@PLT

            movsxd RDX,DWORD PTR [RBX+88]
            xor ESI,ESI
            mov QWORD PTR [RBX+80],RAX
            mov RDI,RAX
            shl RDX,2
            call memset@PLT

            cmp R12D,1
            mov DWORD PTR [RBX+72],R12D
            jle .L_417cd8

            movsxd R12,R12D
            lea RDI,QWORD PTR [R12*8]
.L_417c10:

            call _Znam@PLT

            movsxd RDX,DWORD PTR [RBX+72]
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBX+64],RAX
            shl RDX,3
            call memset@PLT

            mov DWORD PTR [RBX+108],256
            mov EDI,4096
            call _Znam@PLT

            cmp BYTE PTR [RBX+40],0
            mov QWORD PTR [RBX+96],RAX
            jne .L_417cf0

            movsxd RAX,DWORD PTR [RBP+8]
            mov R12,QWORD PTR [RBP]
            add RAX,R12
            jb .L_417b34

            nop
            nop
            nop
            nop
            nop
.L_417c60:

            mov RAX,QWORD PTR [RBX+64]
            mov RDX,R12
            mov RDI,RBX
            mov QWORD PTR [RAX],R12
            mov RAX,QWORD PTR [RBX]
            mov ESI,DWORD PTR [RAX+4]
            call .L_4164d0

            test AL,AL
            jne .L_417b36

            movsxd RAX,DWORD PTR [RBP+8]
            add R12,1
            add RAX,QWORD PTR [RBP]
            cmp R12,RAX
            jbe .L_417c60

            jmp .L_417b34
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417ca0:

            movsxd RBX,DWORD PTR [RDI+32]
            movsxd R10,DWORD PTR [RSI+8]
            add RBX,QWORD PTR [RDI+24]
            add R10,QWORD PTR [RSI]
            cmp RBX,R10
            jne .L_417b34

            jmp .L_417b4a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417cc0:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDI+24],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+32],EAX
            jmp .L_417b21
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417cd8:

            mov DWORD PTR [RBX+72],2
            mov EDI,16
            jmp .L_417c10
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417cf0:

            mov RDX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RBX+64]
            mov RDI,RBX
            mov QWORD PTR [RAX],RDX
            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBP]
            pop RBX
.L_417d06:

            pop RBP
            pop R12
            mov ESI,DWORD PTR [RAX+4]
            jmp .L_4164d0
.L_417d11:

            call __cxa_throw_bad_array_new_length@PLT
.L_417d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417d20:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R14,RSI
            push RBX
            mov R13,R9
.L_417d33:

            mov EBX,R8D
            sub RSP,152
            mov QWORD PTR [RBP-192],0
            mov EAX,DWORD PTR [RBP+16]
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RSI
            xor ESI,ESI
            cmp R8D,2
            mov DWORD PTR [RBP-184],0
            je .L_417e78

            cmp ECX,1
            sete CL
            movzx ECX,CL
.L_417d77:

            xor R8D,R8D
            test EBX,EBX
            lea R12,QWORD PTR [RBP-176]
            setne R8B
            sub RSP,8
            mov QWORD PTR [RBP-176],RDI
            push RAX
            mov R9,R13
            mov RSI,R14
            mov RDI,R12
            mov QWORD PTR [RBP-168],0
            mov DWORD PTR [RBP-160],0
            mov QWORD PTR [RBP-152],0
            mov DWORD PTR [RBP-144],0
            mov BYTE PTR [RBP-136],0
            mov BYTE PTR [RBP-135],0
            mov BYTE PTR [RBP-134],0
            mov QWORD PTR [RBP-128],0
            mov DWORD PTR [RBP-120],0
            mov QWORD PTR [RBP-112],0
            mov DWORD PTR [RBP-104],0
            mov QWORD PTR [RBP-96],0
            mov DWORD PTR [RBP-88],0
            mov QWORD PTR [RBP-80],0
            mov QWORD PTR [RBP-72],0
.L_417e18:

            call .L_417af0
.L_417e1d:

            test AL,AL
            mov R15D,EAX
            pop RDX
            pop RCX
            je .L_417e2b

            cmp EBX,2
            je .L_417e58
.L_417e2b:

            mov RDI,R12
            call .L_415d80

            mov RSI,QWORD PTR [RBP-56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_417e96

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417e58:

            movsxd RDX,DWORD PTR [R14+8]
            movsxd RAX,DWORD PTR [R13+8]
            add RAX,QWORD PTR [R13]
            add RDX,QWORD PTR [R14]
            cmp RDX,RAX
            sete AL
            mov R15D,EAX
            jmp .L_417e2b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417e78:

            test EAX,EAX
            mov ECX,1
            jg .L_417d77

            mov EAX,1
            lea R13,QWORD PTR [RBP-192]
            jmp .L_417d77
.L_417e96:

            call __stack_chk_fail@PLT
.L_417e9b:

            mov RBX,RAX
            mov RDI,R12
            call .L_415d80

            mov RDI,RBX
.L_417ea9:

            call _Unwind_Resume@PLT
.L_417eae:
          .byte 0x66
          .byte 0x90
.L_417eb0:
          .string "basic_string::_M_construct null not valid"
.L_417eda:

            or AL,BYTE PTR [RAX]
.L_417edc:
          .string "re2/bitstate.cc"
.L_417eec:
          .string ":"
.L_417eee:
          .string ": "
.L_417ef1:
          .string "Job stack overflow."
.L_417f05:
          .string "Unexpected opcode: "
.L_417f19:
          .string " arg "
.L_417f1f:
          .byte 0x42
          .byte 0x61
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .string "rg in kInstCapture: "
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417f3c:
          .long .L_4166e8-.L_417f3c
          .long .L_4166b8-.L_417f3c
          .long .L_416660-.L_417f3c
          .long .L_416770-.L_417f3c
          .long .L_416620-.L_417f3c
          .long .L_416578-.L_417f3c
          .long .L_416798-.L_417f3c
.L_417f58:
          .long .L_416c30-.L_417f58
          .long .L_4166af-.L_417f58
          .long .L_416658-.L_417f58
          .long .L_416cb8-.L_417f58
          .long .L_4174e0-.L_417f58
          .long .L_416578-.L_417f58
          .long .L_4176cb-.L_417f58
.L_417f74:
          .long .L_416c30-.L_417f74
          .long .L_4176ad-.L_417f74
          .long .L_416658-.L_417f74
          .long .L_416cb8-.L_417f74
          .long .L_4174e0-.L_417f74
          .long .L_416578-.L_417f74
          .long .L_41769d-.L_417f74
.L_417f90:
          .long .L_4166e8-.L_417f90
          .long .L_4166af-.L_417f90
          .long .L_416658-.L_417f90
          .long .L_4176a5-.L_417f90
          .long .L_4174e0-.L_417f90
          .long .L_416578-.L_417f90
          .long .L_41769d-.L_417f90
.L_417fac:
          .long .L_416c30-.L_417fac
          .long .L_4166af-.L_417fac
          .long .L_416658-.L_417fac
          .long .L_416cb8-.L_417fac
          .long .L_4174e0-.L_417fac
          .long .L_416578-.L_417fac
          .long .L_417724-.L_417fac
.L_417fc8:
          .long .L_416c2a-.L_417fc8
          .long .L_4179c7-.L_417fc8
          .long .L_416517-.L_417fc8
          .long .L_416cae-.L_417fc8
          .long .L_416616-.L_417fc8
          .long .L_41656d-.L_417fc8
          .long .L_4179d4-.L_417fc8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_417ff0:

            mov BYTE PTR [RDI+32],1
            xor EAX,EAX
            ret 
.L_417ff7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418000:

            cmp BYTE PTR [RDI+32],0
            je .L_418009

            mov BYTE PTR [RCX],1
.L_418009:

            xor EAX,EAX
            ret 
.L_41800c:

            nop
            nop
            nop
            nop
.L_418010:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_41801e:

            mov RBP,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RBP,RBP
            sete DL
            cmp ESI,3
            setg AL
            or DL,AL
            jne .L_418088

            movzx EAX,BYTE PTR [RBP]
            mov R12,RDI
            cmp AL,11
            je .L_418090

            cmp AL,18
            je .L_4181c0

            cmp AL,5
            mov EBX,EDX
            je .L_4180f0

            nop
            nop
.L_418060:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_41820d

            add RSP,40
.L_41807a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418088:

            xor EBX,EBX
            jmp .L_418060
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418090:

            cmp WORD PTR [RBP+6],1
            mov RDI,QWORD PTR [RBP+8]
            jbe .L_41809e

            mov RDI,QWORD PTR [RDI]
.L_41809e:

            mov DWORD PTR [RSP+8],ESI
            call .L_40feb0

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_418010

            test AL,AL
            mov EBX,EAX
            je .L_4181a8

            movzx ESI,WORD PTR [RBP+2]
            mov RDI,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RBP+24]
            call .L_40cc60

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f430

            jmp .L_418060
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4180f0:

            movzx EAX,WORD PTR [RBP+6]
            test AX,AX
            je .L_418060

            cmp AX,1
            mov RDI,QWORD PTR [RBP+8]
            jbe .L_41810a

            mov RDI,QWORD PTR [RDI]
.L_41810a:

            mov DWORD PTR [RSP+8],ESI
            call .L_40feb0

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_418010

            test AL,AL
            mov EBX,EAX
            je .L_4181a8

            movzx EDI,WORD PTR [RBP+6]
            shl RDI,3
            call _Znam@PLT

            movzx ESI,WORD PTR [RBP+6]
            mov R14,RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [R14],RAX
            cmp ESI,1
            mov EAX,ESI
            jle .L_4181e8

            lea RCX,QWORD PTR [RBP+8]
            mov R13D,8
            mov R15D,1
            mov QWORD PTR [RSP+8],RCX
            jmp .L_418194
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418170:

            mov RAX,QWORD PTR [RBP+8]
.L_418174:

            mov RDI,QWORD PTR [RAX+R13*1]
            add R15D,1
            call .L_40feb0

            movzx ESI,WORD PTR [RBP+6]
            mov QWORD PTR [R14+R13*1],RAX
            add R13,8
            cmp ESI,R15D
            mov EAX,ESI
            jle .L_4181e8
.L_418194:

            cmp AX,1
            ja .L_418170

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_418174
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4181a8:

            mov RDI,QWORD PTR [RSP+16]
            call .L_40f430

            jmp .L_418060
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4181c0:

            movzx EDX,WORD PTR [RBP+2]
            xor ESI,ESI
            xor EDI,EDI
            mov EBX,1
            call .L_40cd80

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f430

            jmp .L_418060
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4181e8:

            movzx EDX,WORD PTR [RBP+2]
            mov RDI,R14
            call .L_40dae0

            mov RDI,R14
            mov QWORD PTR [R12],RAX
            call _ZdaPv@PLT

            mov RDI,RBP
            call .L_40f430

            jmp .L_418060
.L_41820d:

            call __stack_chk_fail@PLT
.L_418212:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418220:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_41822e:

            mov RBP,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RBP,RBP
            sete DL
            cmp ESI,3
            setg AL
            or DL,AL
            jne .L_418298

            movzx EAX,BYTE PTR [RBP]
            mov R12,RDI
            cmp AL,11
            je .L_4182a0

            cmp AL,19
            je .L_4183d0

            cmp AL,5
            mov EBX,EDX
            je .L_418300

            nop
            nop
.L_418270:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_41841d

            add RSP,40
.L_41828a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418298:

            xor EBX,EBX
            jmp .L_418270
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4182a0:

            cmp WORD PTR [RBP+6],1
            mov RDI,QWORD PTR [RBP+8]
            jbe .L_4182ae

            mov RDI,QWORD PTR [RDI]
.L_4182ae:

            mov DWORD PTR [RSP+8],ESI
            call .L_40feb0

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_418220

            test AL,AL
            mov EBX,EAX
            je .L_4183c0

            movzx ESI,WORD PTR [RBP+2]
            mov RDI,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RBP+24]
            call .L_40cc60

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f430

            jmp .L_418270
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418300:

            movzx EAX,WORD PTR [RBP+6]
            test AX,AX
            je .L_418270

            cmp AX,1
            lea RDX,QWORD PTR [RBP+8]
            jbe .L_41831b

            mov RDX,QWORD PTR [RBP+8]
.L_41831b:

            mov RDI,QWORD PTR [RDX+RAX*8-8]
            mov DWORD PTR [RSP+8],ESI
            call .L_40feb0

            mov ESI,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RAX
            add ESI,1
            call .L_418220

            test AL,AL
            mov EBX,EAX
            je .L_4183c0

            movzx EDI,WORD PTR [RBP+6]
            shl RDI,3
            call _Znam@PLT

            movzx EDX,WORD PTR [RBP+6]
            mov RCX,QWORD PTR [RSP+16]
            mov R14,RAX
            movzx ESI,DX
            mov RAX,RDX
            mov QWORD PTR [R14+RDX*8-8],RCX
            cmp ESI,1
            jle .L_4183f8

            lea RCX,QWORD PTR [RBP+8]
            xor R13D,R13D
            xor R15D,R15D
            mov QWORD PTR [RSP+8],RCX
            jmp .L_4183af
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418388:

            mov RAX,QWORD PTR [RBP+8]
.L_41838c:

            mov RDI,QWORD PTR [RAX+R13*1]
            add R15D,1
            call .L_40feb0

            movzx ESI,WORD PTR [RBP+6]
            mov QWORD PTR [R14+R13*1],RAX
            add R13,8
            lea ECX,DWORD PTR [RSI-1]
            mov EAX,ESI
            cmp ECX,R15D
            jle .L_4183f8
.L_4183af:

            cmp AX,1
            ja .L_418388

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_41838c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4183c0:

            mov RDI,QWORD PTR [RSP+16]
            call .L_40f430

            jmp .L_418270
          .byte 0x90
.L_4183d0:

            movzx EDX,WORD PTR [RBP+2]
            xor ESI,ESI
            xor EDI,EDI
            mov EBX,1
            call .L_40cd80

            mov RDI,RBP
            mov QWORD PTR [R12],RAX
            call .L_40f430

            jmp .L_418270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4183f8:

            movzx EDX,WORD PTR [RBP+2]
            mov RDI,R14
            call .L_40dae0

            mov RDI,R14
            mov QWORD PTR [R12],RAX
            call _ZdaPv@PLT

            mov RDI,RBP
            call .L_40f430

            jmp .L_418270
.L_41841d:

            call __stack_chk_fail@PLT
.L_418422:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418430:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_41843e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_41845c

            test RDX,RDX
            jne .L_4184e7
.L_41845c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_4184b0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_4184e0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_418484:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4184f3

            add RSP,16
.L_4184a4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4184b0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_4184c9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_418484
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4184e0:

            test RBX,RBX
            je .L_418484

            jmp .L_4184c9
.L_4184e7:

            lea RDI,QWORD PTR [RIP+.L_41b508]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_4184f3:

            call __stack_chk_fail@PLT
.L_4184f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418500:

            mov EAX,EDI
            ret 
.L_418503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418510:

            mov EAX,ESI
            shr EAX,1
            and ESI,1
            lea RAX,QWORD PTR [RDI+RAX*8]
            jne .L_418528

            mov EAX,DWORD PTR [RAX]
            shr EAX,3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418528:

            mov EAX,DWORD PTR [RAX+4]
            ret 
.L_41852c:

            nop
            nop
            nop
            nop
.L_418530:

            test ESI,ESI
            je .L_41856a

            lea R8D,DWORD PTR [RDX*8]
            jmp .L_41854a
          .byte 0x66
          .byte 0x90
.L_418540:

            mov ESI,DWORD PTR [RCX+4]
            mov DWORD PTR [RCX+4],EDX
            test ESI,ESI
            je .L_41856a
.L_41854a:

            mov EAX,ESI
            shr EAX,1
            and ESI,1
            lea RCX,QWORD PTR [RDI+RAX*8]
            jne .L_418540

            mov EAX,DWORD PTR [RCX]
            mov ESI,EAX
            and EAX,7
            shr ESI,3
            or EAX,R8D
            test ESI,ESI
            mov DWORD PTR [RCX],EAX
            jne .L_41854a
.L_41856a:

            ret 
.L_41856c:

            nop
            nop
            nop
            nop
.L_418570:

            test ESI,ESI
            mov ECX,ESI
            je .L_4185b0

            test EDX,EDX
            jne .L_418588

            mov EAX,ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418580:

            mov ECX,DWORD PTR [R8+4]
            test ECX,ECX
            je .L_4185a3
.L_418588:

            mov R8D,ECX
            mov EAX,ECX
            shr R8D,1
            and EAX,1
            lea R8,QWORD PTR [RDI+R8*8]
            jne .L_418580

            mov ECX,DWORD PTR [R8]
            shr ECX,3
            test ECX,ECX
            jne .L_418588
.L_4185a3:

            test EAX,EAX
            je .L_4185b8

            mov DWORD PTR [R8+4],EDX
            mov EAX,ESI
            ret 
          .byte 0x66
          .byte 0x90
.L_4185b0:

            mov EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4185b8:

            mov ECX,DWORD PTR [R8]
            lea EAX,DWORD PTR [RDX*8]
            and ECX,7
            or EAX,ECX
            mov DWORD PTR [R8],EAX
            mov EAX,ESI
            ret 
.L_4185cd:

            nop
            nop
            nop
.L_4185d0:

            cmp BYTE PTR [RDI+32],0
            jne .L_418700

            mov EAX,DWORD PTR [RDI+56]
            lea ECX,DWORD PTR [RAX+RSI*1]
            cmp ECX,DWORD PTR [RDI+44]
            jg .L_418700

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
.L_4185fc:

            mov EDX,DWORD PTR [RDI+60]
            cmp ECX,EDX
            jle .L_4186c7

            test EDX,EDX
            jne .L_418620

            cmp ECX,8
            mov DWORD PTR [RDI+60],8
            mov EDX,8
            jle .L_4186e0
.L_418620:

            add EDX,EDX
            cmp ECX,EDX
            jg .L_418620

            mov DWORD PTR [RBX+60],EDX
            movabs RAX,1152921504606846975
            movsxd RDX,EDX
            cmp RDX,RAX
            ja .L_41870a

            lea R12,QWORD PTR [RDX-1]
            lea RDI,QWORD PTR [RDX*8]
            call _Znam@PLT

            cmp R12,-1
            mov R13,RAX
            je .L_41867e
.L_418659:

            lea RDX,QWORD PTR [R13+R12*8+8]
            mov RAX,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418668:

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            add RAX,8
            cmp RAX,RDX
            jne .L_418668
.L_41867e:

            movsxd R12,DWORD PTR [RBX+56]
            mov R14,QWORD PTR [RBX+48]
            mov RDI,R13
            mov RSI,R14
            mov R15,R12
            shl R12,3
            mov RDX,R12
            call memmove@PLT

            mov EDX,DWORD PTR [RBX+60]
            lea RDI,QWORD PTR [R13+R12*1]
            xor ESI,ESI
            sub EDX,R15D
            movsxd RDX,EDX
            shl RDX,3
            call memset@PLT

            mov RDI,R14
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RBX+56]
            mov QWORD PTR [RBX+48],R13
            lea ECX,DWORD PTR [RBP+RAX*1]
.L_4186c7:

            mov DWORD PTR [RBX+56],ECX
            add RSP,8
.L_4186ce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4186e0:

            mov EDI,64
            mov R12D,7
            call _Znam@PLT

            mov R13,RAX
            jmp .L_418659
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418700:

            mov BYTE PTR [RDI+32],1
            mov EAX,4294967295
            ret 
.L_41870a:

            call __cxa_throw_bad_array_new_length@PLT
.L_41870f:

            nop
.L_418710:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov ESI,1
            mov RBX,RDI
            call .L_4185d0

            test EAX,EAX
            js .L_418750

            mov EBP,EAX
            movsxd RDX,EAX
            mov RAX,QWORD PTR [RBX+48]
            mov ESI,DWORD PTR [RBX+120]
            lea RDI,QWORD PTR [RAX+RDX*8]
            mov EDX,R12D
            call .L_430460

            mov DWORD PTR [RBX+120],EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418750:

            mov DWORD PTR [RBX+120],0
            pop RBX
            pop RBP
            pop R12
            ret 
.L_41875c:

            nop
            nop
            nop
            nop
.L_418760:

            push R12
            push RBP
            push RBX
.L_418764:

            movsxd RBX,DWORD PTR [RDI+56]
            cmp EBX,DWORD PTR [RDI+60]
            jge .L_4187e3

            movabs RAX,1152921504606846975
            mov RBP,RDI
            cmp RBX,RAX
            ja .L_4187e8

            lea RDI,QWORD PTR [RBX*8]
            call _Znam@PLT

            xor EDX,EDX
            test RBX,RBX
            mov R12,RAX
            je .L_4187ba

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4187a0:

            add RDX,1
            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            add RAX,8
            cmp RDX,RBX
            jne .L_4187a0
.L_4187ba:

            movsxd RDX,DWORD PTR [RBP+56]
            mov RBX,QWORD PTR [RBP+48]
            mov RDI,R12
            mov RSI,RBX
            shl RDX,3
            call memmove@PLT

            mov RDI,RBX
            call _ZdaPv@PLT

            mov EAX,DWORD PTR [RBP+56]
            mov QWORD PTR [RBP+48],R12
            mov DWORD PTR [RBP+60],EAX
.L_4187e3:

            pop RBX
.L_4187e4:

            pop RBP
            pop R12
            ret 
.L_4187e8:

            call __cxa_throw_bad_array_new_length@PLT
.L_4187ed:

            nop
            nop
            nop
.L_4187f0:

            xor EAX,EAX
            ret 
.L_4187f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418800:

            test ESI,ESI
            je .L_418808

            test EDX,EDX
            jne .L_418810
.L_418808:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418810:

            push R13
            push R12
            mov EAX,ESI
            push RBP
            push RBX
.L_418818:

            mov RBP,RSI
            mov R9,QWORD PTR [RDI+48]
            mov RBX,RDX
            shr RBP,32
            shr RBX,32
            mov R10D,EDX
            mov R11D,ESI
            mov ECX,EBP
            mov R8D,EBX
            mov R12D,DWORD PTR [R9+RAX*8]
            mov R13D,R12D
            and R13D,7
            cmp R13D,6
            je .L_4188f0
.L_41884a:

            cmp BYTE PTR [RDI+40],0
            je .L_4188a8

            test EBX,EBX
            je .L_418891

            shl ESI,3
            jmp .L_41886d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418860:

            mov R8D,DWORD PTR [RAX+4]
            mov DWORD PTR [RAX+4],R11D
            test R8D,R8D
            je .L_418891
.L_41886d:

            mov ECX,R8D
            shr ECX,1
            and R8D,1
            lea RAX,QWORD PTR [R9+RCX*8]
            jne .L_418860

            mov ECX,DWORD PTR [RAX]
            mov R8D,ECX
            and ECX,7
            shr R8D,3
            or ECX,ESI
            test R8D,R8D
            mov DWORD PTR [RAX],ECX
            jne .L_41886d
.L_418891:

            shl RBP,32
            mov EAX,EDX
            or RAX,RBP
.L_41889a:

            pop RBX
.L_41889b:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4188a8:

            test EBP,EBP
            je .L_4188e2

            shl EDX,3
            jmp .L_4188c3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4188b8:

            mov ECX,DWORD PTR [RDI+4]
            mov DWORD PTR [RDI+4],R10D
            test ECX,ECX
            je .L_4188e2
.L_4188c3:

            mov ESI,ECX
            shr ESI,1
            and ECX,1
            lea RDI,QWORD PTR [R9+RSI*8]
            jne .L_4188b8

            mov ESI,DWORD PTR [RDI]
            mov ECX,ESI
            and ESI,7
            shr ECX,3
            or ESI,EDX
            test ECX,ECX
            mov DWORD PTR [RDI],ESI
            jne .L_4188c3
.L_4188e2:

            shl RBX,32
            or RAX,RBX
            pop RBX
.L_4188ea:

            pop RBP
            pop R12
            pop R13
            ret 
.L_4188f0:

            lea R13D,DWORD PTR [RSI+RSI*1]
            cmp R13D,EBP
            jne .L_41884a

            shr R12D,3
            test R12D,R12D
            jne .L_41884a

            test EBP,EBP
            je .L_418950

            lea EDI,DWORD PTR [RDX*8]
            jmp .L_41892b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418920:

            mov ECX,DWORD PTR [RSI+4]
            mov DWORD PTR [RSI+4],R10D
.L_418927:

            test ECX,ECX
            je .L_418950
.L_41892b:

            mov EAX,ECX
            shr EAX,1
            and ECX,1
            lea RSI,QWORD PTR [R9+RAX*8]
            jne .L_418920

            mov EAX,DWORD PTR [RSI]
            mov ECX,EAX
            and EAX,7
            or EAX,EDI
            shr ECX,3
            mov DWORD PTR [RSI],EAX
            jmp .L_418927
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418950:

            shl RBX,32
            mov EAX,EDX
            or RAX,RBX
            jmp .L_41889a
.L_41895e:

            nop
            nop
.L_418960:

            test ESI,ESI
            je .L_418970

            test EDX,EDX
            jne .L_418978

            mov RAX,RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418970:

            mov RAX,RDX
            ret 

            nop
            nop
            nop
            nop
.L_418978:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,1
            mov R12,RDI
            sub RSP,8
.L_418990:

            call .L_4185d0

            mov EBX,EAX
            xor EAX,EAX
            test EBX,EBX
            js .L_4189d4

            mov RAX,QWORD PTR [R12+48]
            movsxd RDX,EBX
            mov ESI,EBP
            lea RDI,QWORD PTR [RAX+RDX*8]
            mov EDX,R13D
            call .L_430460

            mov RDI,QWORD PTR [R12+48]
            mov RDX,R13
            mov RSI,RBP
            sar RDX,32
            sar RSI,32
            call .L_418570

            mov EDX,EBX
            shl RAX,32
            or RAX,RDX
.L_4189d4:

            add RSP,8
.L_4189d8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4189df:

            nop
.L_4189e0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,EDX
            push RBX
.L_4189ed:

            mov RBX,RSI
            mov ESI,1
            call .L_4185d0

            test EAX,EAX
            js .L_418ac0

            movsxd RDX,EAX
            mov RDI,QWORD PTR [R14+48]
            xor ESI,ESI
            lea R13,QWORD PTR [RDX*8]
            xor EDX,EDX
            mov R12D,EAX
            add RDI,R13
            call .L_430460

            mov RCX,RBX
            mov RAX,QWORD PTR [R14+48]
            shr RCX,32
            test ECX,ECX
            mov EDX,ECX
            je .L_418a6a

            lea EDI,DWORD PTR [R12*8]
            jmp .L_418a4b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418a40:

            mov EDX,DWORD PTR [RSI+4]
            mov DWORD PTR [RSI+4],R12D
            test EDX,EDX
            je .L_418a6a
.L_418a4b:

            mov ECX,EDX
            shr ECX,1
            and EDX,1
            lea RSI,QWORD PTR [RAX+RCX*8]
            jne .L_418a40

            mov ECX,DWORD PTR [RSI]
            mov EDX,ECX
            and ECX,7
            shr EDX,3
            or ECX,EDI
            test EDX,EDX
            mov DWORD PTR [RSI],ECX
            jne .L_418a4b
.L_418a6a:

            test BPL,BPL
            lea RDX,QWORD PTR [RAX+R13*1]
            lea EAX,DWORD PTR [R12+R12*1]
            jne .L_418aa0

            mov ECX,DWORD PTR [RDX]
            shl EBX,3
            or EAX,1
            shl RAX,32
            and ECX,7
            or EBX,ECX
            mov DWORD PTR [RDX],EBX
            mov RDX,RAX
            mov EAX,R12D
            pop RBX
.L_418a91:

            or RAX,RDX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418aa0:

            mov DWORD PTR [RDX+4],EBX
            mov RDX,RAX
            mov EAX,R12D
            shl RDX,32
            pop RBX
            or RAX,RDX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418ac0:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418acb:

            nop
            nop
            nop
            nop
            nop
.L_418ad0:

            push RBX
            movzx EDX,DL
            mov RBX,RSI
            call .L_4189e0

            shr RAX,32
            shl RAX,32
            mov RDX,RAX
            mov EAX,EBX
            or RAX,RDX
            pop RBX
            ret 
.L_418aee:

            nop
            nop
.L_418af0:

            push R14
            push R13
            mov R14D,ECX
            push R12
            push RBP
            mov R12D,ESI
            push RBX
.L_418afe:

            mov ESI,1
            mov RBP,RDI
            mov R13D,EDX
            call .L_4185d0

            test EAX,EAX
            js .L_418b78

            mov RDX,QWORD PTR [RBP+48]
            mov EBX,EAX
            cdqe 
            xor R8D,R8D
            movzx ECX,R14B
            mov ESI,R12D
            lea RDI,QWORD PTR [RDX+RAX*8]
            mov EDX,R13D
            call .L_430470

            mov RAX,QWORD PTR [RBP+24]
            mov EDX,R13D
            mov ESI,R12D
            add DWORD PTR [RAX+16],1
            mov RDI,QWORD PTR [RBP+24]
            call .L_4312f0

            cmp R12D,122
            setle AL
            test AL,R14B
            je .L_418b59

            cmp R13D,96
            jg .L_418b88
.L_418b59:

            lea EAX,DWORD PTR [RBX+RBX*1]
            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            pop RBX
.L_418b66:

            or RAX,RDX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418b78:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418b88:

            cmp R12D,97
            mov ESI,97
            cmovl R12D,ESI
            cmp R13D,122
            jg .L_418bb0

            cmp R13D,R12D
            jl .L_418b59

            lea EDX,DWORD PTR [R13-32]
            jmp .L_418bb5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418bb0:

            mov EDX,90
.L_418bb5:

            mov RDI,QWORD PTR [RBP+24]
            lea ESI,DWORD PTR [R12-32]
            call .L_4312f0

            jmp .L_418b59
.L_418bc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418bd0:

            push RBP
            push RBX
            mov ESI,1
            mov RBP,RDI
            sub RSP,8
            call .L_4185d0

            test EAX,EAX
            js .L_418c18

            mov EBX,EAX
            movsxd RDX,EAX
            mov RAX,QWORD PTR [RBP+48]
            xor ESI,ESI
            lea RDI,QWORD PTR [RAX+RDX*8]
            call .L_4304c0

            lea EAX,DWORD PTR [RBX+RBX*1]
            add RSP,8
            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            or RAX,RDX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418c18:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_418c21:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418c30:

            test ESI,ESI
            je .L_418ca0

            push R14
            push R13
            mov R13D,EDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
.L_418c42:

            mov ESI,1
            mov RBP,RDI
            call .L_4185d0

            mov EBX,EAX
            xor EAX,EAX
            test EBX,EBX
            js .L_418c97

            mov RDX,QWORD PTR [RBP+48]
            movsxd RAX,EBX
            test R13B,R13B
            lea R14D,DWORD PTR [RBX+RBX*1]
            lea RDI,QWORD PTR [RDX+RAX*8]
            jne .L_418ca8

            mov ESI,R12D
            xor EDX,EDX
            call .L_430460

            mov ESI,R14D
            or ESI,1
.L_418c7b:

            mov RDI,QWORD PTR [RBP+48]
            mov RDX,R12
            sar RDX,32
            call .L_418570

            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            or RAX,RDX
.L_418c97:

            pop RBX
.L_418c98:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418ca0:

            jmp .L_418bd0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418ca8:

            xor ESI,ESI
            mov EDX,R12D
            call .L_430460

            mov ESI,R14D
            jmp .L_418c7b
.L_418cb7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418cc0:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov ESI,1
            mov RBP,RDI
            call .L_4185d0

            test EAX,EAX
            js .L_418cf8

            mov EBX,EAX
            movsxd RDX,EAX
            mov RAX,QWORD PTR [RBP+48]
            mov ESI,R12D
            lea RDI,QWORD PTR [RAX+RDX*8]
            call .L_4304b0

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418cf8:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_418cff:

            nop
.L_418d00:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_418d07:

            mov EBX,ESI
            mov ESI,1
            call .L_4185d0

            test EAX,EAX
            js .L_418e10

            mov RDX,QWORD PTR [R12+48]
            mov EBP,EAX
            cdqe 
            mov ESI,EBX
            lea RDI,QWORD PTR [RDX+RAX*8]
            xor EDX,EDX
            call .L_4304a0

            test BL,3
            jne .L_418e20

            and EBX,48
            je .L_418dc4
.L_418d43:

            mov EBX,1
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
.L_418d50:

            mov EAX,EBX
            mov ECX,EBX
            and EAX,4294967263
            lea EDX,DWORD PTR [RAX-65]
            mov EAX,ESI
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_418d7b

            lea EAX,DWORD PTR [RSI-48]
            cmp AL,9
            setbe AL
            cmp SIL,95
            sete DIL
            or AL,DIL
            je .L_418de0
.L_418d7b:

            cmp DL,25
            mov EAX,1
            jbe .L_418d9a
.L_418d85:

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            setbe DL
            cmp CL,95
            sete CL
            or EDX,ECX
            cmp DL,AL
            jne .L_418de5
.L_418d9a:

            lea EAX,DWORD PTR [RBX+1]
            cmp EAX,255
            jg .L_418db8

            mov EBX,EAX
            jmp .L_418d50
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418db0:

            mov ESI,255
            nop
            nop
            nop
.L_418db8:

            mov RDI,QWORD PTR [R12+24]
            mov EDX,EBX
            call .L_4312f0
.L_418dc4:

            lea EAX,DWORD PTR [RBP+RBP*1]
            pop RBX
.L_418dc9:

            mov RDX,RAX
            mov EAX,EBP
            shl RDX,32
            or RAX,RDX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418de0:

            cmp DL,25
            ja .L_418d85
.L_418de5:

            mov RDI,QWORD PTR [R12+24]
            lea EDX,DWORD PTR [RBX-1]
            call .L_4312f0

            cmp EBX,255
            jg .L_418dc4

            je .L_418db0

            lea EAX,DWORD PTR [RBX+1]
            mov ESI,EBX
            mov EBX,EAX
            jmp .L_418d50
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418e10:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418e20:

            mov RDI,QWORD PTR [R12+24]
            mov EDX,10
            mov ESI,10
            call .L_4312f0

            and EBX,48
            jne .L_418d43

            jmp .L_418dc4
.L_418e3f:

            nop
.L_418e40:

            test ESI,ESI
            jne .L_418e50

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418e50:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_418e5e:

            mov ESI,2
            mov R12D,EDX
            call .L_4185d0

            mov EBX,EAX
            xor EAX,EAX
            test EBX,EBX
            js .L_418f00

            mov RDI,QWORD PTR [R13+48]
            movsxd R14,EBX
            add R12D,R12D
            shl R14,3
            mov EDX,EBP
            mov ESI,R12D
            add RDI,R14
            call .L_430490

            mov RAX,QWORD PTR [R13+48]
            lea ESI,DWORD PTR [R12+1]
            xor EDX,EDX
            lea RDI,QWORD PTR [RAX+R14*1+8]
            call .L_430490

            mov RSI,RBP
            lea EAX,DWORD PTR [RBX+1]
            mov RDI,QWORD PTR [R13+48]
            shr RSI,32
            test ESI,ESI
            mov EDX,ESI
            je .L_418ef2

            lea R8D,DWORD PTR [RAX*8]
            jmp .L_418ed2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418ec8:

            mov EDX,DWORD PTR [RSI+4]
            mov DWORD PTR [RSI+4],EAX
            test EDX,EDX
            je .L_418ef2
.L_418ed2:

            mov ECX,EDX
            shr ECX,1
            and EDX,1
            lea RSI,QWORD PTR [RDI+RCX*8]
            jne .L_418ec8

            mov ECX,DWORD PTR [RSI]
            mov EDX,ECX
            and ECX,7
            shr EDX,3
            or ECX,R8D
            test EDX,EDX
            mov DWORD PTR [RSI],ECX
            jne .L_418ed2
.L_418ef2:

            add EAX,EAX
            mov RDX,RAX
            mov EAX,EBX
            shl RDX,32
            or RAX,RDX
.L_418f00:

            pop RBX
.L_418f01:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418f09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418f10:

            push RBP
            push RBX
            movzx ECX,CL
            mov EBX,R8D
            movzx EDX,DL
            movzx ESI,SIL
            sub RSP,8
.L_418f23:

            mov RBP,RDI
            call .L_418af0

            test EBX,EBX
            mov R9,RAX
            je .L_418f88

            mov RDX,RAX
            mov RSI,QWORD PTR [RBP+48]
            lea EDI,DWORD PTR [RBX*8]
            shr RDX,32
            test EDX,EDX
            mov EAX,EDX
            jne .L_418f5a

            jmp .L_418f78
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418f50:

            mov EAX,DWORD PTR [RCX+4]
            mov DWORD PTR [RCX+4],EBX
            test EAX,EAX
            je .L_418f78
.L_418f5a:

            mov EDX,EAX
            shr EDX,1
            test AL,1
            lea RCX,QWORD PTR [RSI+RDX*8]
            jne .L_418f50

            mov EDX,DWORD PTR [RCX]
            mov EAX,EDX
            and EDX,7
            shr EAX,3
            or EDX,EDI
            test EAX,EAX
            mov DWORD PTR [RCX],EDX
            jne .L_418f5a
.L_418f78:

            add RSP,8
.L_418f7c:

            mov EAX,R9D
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f88:

            mov ESI,DWORD PTR [RBP+124]
            mov RDI,QWORD PTR [RBP+48]
            mov RDX,RAX
            sar RDX,32
            call .L_418570

            mov DWORD PTR [RBP+124],EAX
            add RSP,8
            mov EAX,R9D
            pop RBX
            pop RBP
            ret 
.L_418fa8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418fb0:

            mov EAX,DWORD PTR [RDI+120]
            test EAX,EAX
            jne .L_418fc0

            mov DWORD PTR [RDI+120],ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418fc0:

            jmp .L_418710
.L_418fc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418fd0:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_418fd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418fe0:

            push R14
            pxor XMM0,XMM0
            push R13
            push R12
            mov EDX,191
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_41bfac]
            mov R12,RDI
            mov EBP,128
            xor R8D,R8D
            sub RSP,64
.L_419007:

            lea R13,QWORD PTR [RBX+132]
            movaps XMMWORD PTR [RSP],XMM0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov R14,RSP
            movaps XMMWORD PTR [RSP+32],XMM0
            nop
.L_419030:

            movzx ESI,BPL
            xor ECX,ECX
            movzx EDX,DL
            mov RDI,R12
            and EBP,192
            call .L_418f10

            add EBP,-128
            mov DWORD PTR [R14],EAX
            je .L_41905d

            mov EDX,DWORD PTR [R12+120]
            test EDX,EDX
            jne .L_419080

            mov DWORD PTR [R12+120],EAX
.L_41905d:

            add R14,4
            cmp R13,RBX
            je .L_419093
.L_419066:

            movsxd RAX,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+8]
            xor R8D,R8D
            mov EBP,DWORD PTR [RBX+4]
            add RBX,12
            test EAX,EAX
            js .L_419030

            mov R8D,DWORD PTR [RSP+RAX*4]
            jmp .L_419030
.L_419080:

            mov ESI,EAX
            mov RDI,R12
            add R14,4
            call .L_418710

            cmp R13,RBX
            jne .L_419066
.L_419093:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4190b0

            add RSP,64
.L_4190a7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4190b0:

            call __stack_chk_fail@PLT
.L_4190b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4190c0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+36]
            mov DWORD PTR [RSP+12],ESI
            cmp EAX,1
            je .L_419130

            cmp EAX,2
            je .L_419118

            xor EAX,EAX
.L_4190f2:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4191b7

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419118:

            mov ESI,DWORD PTR [RSP+12]
            movzx ECX,DL
            mov EDX,ESI
            call .L_418af0

            jmp .L_4190f2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419130:

            mov ESI,DWORD PTR [RSP+12]
            cmp ESI,127
            jle .L_4191a8

            lea R14,QWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RSP+12]
            mov RDI,R14
            call .L_4148e0

            movzx ESI,BYTE PTR [RSP+20]
            mov R13D,EAX
            xor ECX,ECX
            mov RDI,RBX
            mov EDX,ESI
            call .L_418af0

            cmp R13D,1
            mov RBP,RAX
            jle .L_419199

            mov R12D,1
.L_41916e:

            movzx ESI,BYTE PTR [R14+R12*1]
            xor ECX,ECX
            mov RDI,RBX
            add R12,1
            mov EDX,ESI
            call .L_418af0

            mov RSI,RBP
            mov RDX,RAX
            mov RDI,RBX
            call .L_418800

            cmp R13D,R12D
            mov RBP,RAX
            jg .L_41916e
.L_419199:

            mov RAX,RBP
            jmp .L_4190f2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4191a8:

            movzx ECX,DL
            mov EDX,ESI
            call .L_418af0

            jmp .L_4190f2
.L_4191b7:

            call __stack_chk_fail@PLT
.L_4191bc:

            nop
            nop
            nop
            nop
.L_4191c0:

            mov RAX,QWORD PTR [RDI+24]
            mov DWORD PTR [RAX+24],ESI
            and ESI,32
            je .L_4191d3

            mov DWORD PTR [RDI+36],2
.L_4191d3:

            test RDX,RDX
            mov QWORD PTR [RDI+64],RDX
            jle .L_419220

            cmp RDX,440
            jle .L_419210

            sub RDX,440
            mov EAX,16777216
            mov DWORD PTR [RDI+128],ECX
            shr RDX,3
            cmp RDX,16777216
            cmova RDX,RAX
            mov DWORD PTR [RDI+44],EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419210:

            mov DWORD PTR [RDI+44],0
            mov DWORD PTR [RDI+128],ECX
            ret 
          .byte 0x66
          .byte 0x90
.L_419220:

            mov DWORD PTR [RDI+44],100000
            mov DWORD PTR [RDI+128],ECX
            ret 
.L_41922e:

            nop
            nop
.L_419230:

            cmp BYTE PTR [RDI+32],0
            jne .L_419300

            push RBX
.L_41923b:

            mov RAX,QWORD PTR [RDI+24]
            mov EDX,DWORD PTR [RAX+4]
            test EDX,EDX
            je .L_4192c0
.L_419246:

            mov RBX,RDI
            call .L_418760

            mov RDX,QWORD PTR [RBX+48]
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX+32],RDX
            mov RAX,QWORD PTR [RBX+24]
            mov EDX,DWORD PTR [RBX+56]
            mov DWORD PTR [RAX+12],EDX
            mov RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+48],0
            call .L_431340

            mov RDI,QWORD PTR [RBX+24]
            call .L_430d00

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            jle .L_4192e0

            movsxd RDX,DWORD PTR [RBX+56]
            mov RCX,QWORD PTR [RBX+24]
            sub RAX,440
            shl RDX,3
            sub RAX,RDX
            mov EDX,0
            cmovs RAX,RDX
            mov QWORD PTR [RCX+112],RAX
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+24],0
            pop RBX
.L_4192b6:

            ret 
          .byte 0x66

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4192c0:

            mov EAX,DWORD PTR [RAX+8]
            test EAX,EAX
            jne .L_419246

            mov DWORD PTR [RDI+56],1
            jmp .L_419246
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4192e0:

            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX+112],1048576
            mov RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+24],0
            pop RBX
            ret 
            nop
            nop
            nop
            nop
            nop
            nop
.L_419300:

            xor EAX,EAX
            ret 
.L_419303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419310:

            push RBX
            mov EDX,255
            mov RBX,RDI
            xor ESI,ESI
            xor ECX,ECX
            call .L_418af0

            mov RDI,RBX
            mov EDX,1
            mov RSI,RAX
            pop RBX
            jmp .L_4189e0
.L_419333:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419340:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_419358:

            lea RBX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+8],RDI
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_419401:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_419406:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_4194c3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4194c8:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b534]
            mov EDX,14
.L_4194d8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b543]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,670
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41b545]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_419514:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43e1a0-142424]
            mov EDX,22
.L_419524:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_419529:

            cmp BYTE PTR [RSP+128],0
            je .L_4195e0
.L_419537:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_419565

            call _ZdlPv@PLT
.L_419565:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov BYTE PTR [RAX+32],1
            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4198de

            add RSP,536
.L_4195d2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4195e0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b532]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_4197d0

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_419720

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_419658:

            call .L_418430
.L_41965d:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4197e8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_419860

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_41986f

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_4196bc:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_4196e0
.L_4196db:

            call _ZdlPv@PLT
.L_4196e0:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_4196ef:

            call write@PLT
.L_4196f4:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_419537

            call _ZdlPv@PLT

            jmp .L_419537
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419720:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_41973a:

            call .L_418430

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_419828

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_419888

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_419897

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41979e:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_4196db

            jmp .L_4196e0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4197d0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4197de:

            jmp .L_4196e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4197e8:

            test RDX,RDX
            je .L_419810

            cmp RDX,1
            je .L_4198c8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419810:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4196bc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419828:

            test RDX,RDX
            je .L_419848

            cmp RDX,1
            je .L_4198b0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_419848:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41979e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419860:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_41986f:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_4196bc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419888:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_419897:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41979e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4198b0:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_419848
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4198c8:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_419810
.L_4198de:

            call __stack_chk_fail@PLT
.L_4198e3:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_4198fb

            call _ZdlPv@PLT
.L_4198fb:

            call _ZSt9terminatev@PLT
.L_419900:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RDX
.L_419927:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_41993b:

            call _Unwind_Resume@PLT
.L_419940:

            jmp .L_4198e3
.L_419942:

            mov R13,RAX
            jmp .L_419927
.L_419947:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41995b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41996e:

            nop
            nop
.L_419970:

            push RBX
            mov RSI,QWORD PTR [RDI+88]
            mov RBX,RDI
            lea RDI,QWORD PTR [RDI+72]
            call .L_41bd70

            lea RAX,QWORD PTR [RBX+80]
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+112],0
            mov DWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov EAX,DWORD PTR [RIP+.L_41c030]
            mov DWORD PTR [RBX+124],EAX
            pop RBX
            ret 
.L_4199af:

            nop
.L_4199b0:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_646fc0]
            mov RBX,RDI
            sub RSP,8
.L_4199c0:

            mov RBP,QWORD PTR [RDI+24]
            mov QWORD PTR [RDI],RAX
            test RBP,RBP
            je .L_4199e1

            mov RDI,RBP
            call .L_430900

            mov ESI,440
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_4199e1:

            mov RDI,QWORD PTR [RBX+48]
            test RDI,RDI
            je .L_4199ef

            call _ZdaPv@PLT
.L_4199ef:

            mov RSI,QWORD PTR [RBX+88]
            lea RDI,QWORD PTR [RBX+72]
            call .L_41bd70

            add RSP,8
.L_419a00:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41bcd0
.L_419a0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419a10:

            push RBX
            mov RBX,RDI
            call .L_4199b0

            mov RDI,RBX
            mov ESI,136
            pop RBX
            jmp _ZdlPvm@PLT
.L_419a27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419a30:

            lea RAX,QWORD PTR [RIP+.L_649d38]
            push R12
            push RBP
            push RBX
.L_419a3b:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            mov EDI,80
.L_419a46:

            call _Znwm@PLT
.L_419a4b:

            mov EDI,64
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBP,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_419aa2:

            call _Znwm@PLT
.L_419aa7:

            mov RCX,QWORD PTR [RBP+8]
            mov QWORD PTR [RBP],RAX
            mov EDI,480
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R12,QWORD PTR [RAX+RDX*8]
.L_419abf:

            call _Znwm@PLT
.L_419ac4:

            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [RBP+24],RAX
            mov QWORD PTR [RBP+56],RAX
            mov QWORD PTR [RBP+16],RAX
            mov EDI,440
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_646fc0]
            mov QWORD PTR [RBP+40],R12
            mov QWORD PTR [RBP+32],RDX
            mov QWORD PTR [RBP+72],R12
            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RBX+80]
            mov QWORD PTR [RBP+64],RDX
            mov QWORD PTR [RBX+8],RBP
            mov BYTE PTR [RBX+16],0
            mov DWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
.L_419b31:

            call _Znwm@PLT
.L_419b36:

            mov RDI,RAX
            mov RBP,RAX
.L_419b3c:

            call .L_430840
.L_419b41:

            mov QWORD PTR [RBX+24],RBP
            mov BYTE PTR [RBX+32],0
            mov ESI,1
            mov DWORD PTR [RBX+36],1
            mov BYTE PTR [RBX+40],0
            mov RDI,RBX
            mov QWORD PTR [RBX+44],1
            mov QWORD PTR [RBX+52],0
            mov QWORD PTR [RBX+60],0
            mov DWORD PTR [RBX+68],0
.L_419b7b:

            call .L_4185d0

            mov RDX,QWORD PTR [RBX+48]
            cdqe 
            lea RDI,QWORD PTR [RDX+RAX*8]
            call .L_4304d0
.L_419b8f:

            mov DWORD PTR [RBX+44],0
            pop RBX
.L_419b97:

            pop RBP
            pop R12
            ret 
.L_419b9b:

            mov RBX,RAX
.L_419b9e:

            mov RDI,RBP
            mov ESI,80
            call _ZdlPvm@PLT

            mov RDI,RBX
.L_419bae:

            call _Unwind_Resume@PLT
.L_419bb3:

            mov ESI,440
            mov RDI,RBP
            mov R12,RAX
            call _ZdlPvm@PLT
.L_419bc3:

            mov RSI,QWORD PTR [RBX+88]
            lea RDI,QWORD PTR [RBX+72]
            call .L_41bd70

            mov RDI,RBX
            call .L_41bcd0

            mov RDI,R12
            call _Unwind_Resume@PLT
.L_419be0:

            mov R12,RAX
            jmp .L_419bc3
.L_419be5:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_419bed:

            call __cxa_rethrow@PLT
.L_419bf2:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBP]
            call _ZdlPv@PLT

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
.L_419c1b:

            call __cxa_rethrow@PLT
.L_419c20:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            jmp .L_419b9e
.L_419c2d:

            nop
            nop
            nop
.L_419c30:

            mov R9D,DWORD PTR [RDI+36]
            cmp R9D,2
            je .L_419d98

            cmp R9D,1
            movzx EAX,CL
            je .L_419d80
.L_419c4b:

            push R15
            push R14
            movzx EDX,DL
            push R13
            push R12
            movzx ESI,SIL
            push RBP
            push RBX
            movsxd RBX,R8D
            shl RBX,17
            lea RBP,QWORD PTR [RDI+80]
            or RBX,RAX
            lea EAX,DWORD PTR [RDX+RDX*1]
            sub RSP,24
.L_419c71:

            cdqe 
            or RBX,RAX
            mov EAX,ESI
            shl EAX,9
            cdqe 
            or RBX,RAX
            mov RAX,QWORD PTR [RDI+88]
            test RAX,RAX
            je .L_419cba

            mov R9,RBP
            jmp .L_419c9c
          .byte 0x66
          .byte 0x90
.L_419c90:

            mov R9,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_419cab
.L_419c9c:

            cmp RBX,QWORD PTR [RAX+32]
            jbe .L_419c90

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_419c9c
.L_419cab:

            cmp RBP,R9
            je .L_419cba

            cmp RBX,QWORD PTR [R9+32]
            jae .L_419d60
.L_419cba:

            mov R12,RDI
            movzx ECX,CL
            mov R14,RBP
            call .L_418f10

            mov R13D,EAX
            mov RAX,QWORD PTR [R12+88]
            test RAX,RAX
            jne .L_419cec

            jmp .L_419d06
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ce0:

            mov R14,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_419cfb
.L_419cec:

            cmp RBX,QWORD PTR [RAX+32]
            jbe .L_419ce0

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_419cec
.L_419cfb:

            cmp RBP,R14
            je .L_419d06

            cmp RBX,QWORD PTR [R14+32]
            jae .L_419d57
.L_419d06:

            mov EDI,48
            mov R15,R14
            call _Znwm@PLT

            lea RDI,QWORD PTR [R12+72]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],RBX
            mov DWORD PTR [RAX+40],0
            mov RSI,R15
            mov R14,RAX
            call .L_41be40

            test RDX,RDX
            je .L_419da7

            test RAX,RAX
            jne .L_419d41

            cmp RBP,RDX
            jne .L_419dbe
.L_419d41:

            mov EDI,1
.L_419d46:

            mov RCX,RBP
            mov RSI,R14
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [R12+112],1
.L_419d57:

            mov DWORD PTR [R14+40],R13D
            jmp .L_419d64
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419d60:

            mov R13D,DWORD PTR [R9+40]
.L_419d64:

            add RSP,24
.L_419d68:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419d80:

            cmp BYTE PTR [RDI+40],0
            jne .L_419c4b

            test SIL,SIL
            jns .L_419d98

            cmp DL,191
            jbe .L_419c4b
.L_419d98:

            movzx ECX,CL
            movzx EDX,DL
            movzx ESI,SIL
            jmp .L_418f10
.L_419da7:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov R14,RAX
            jmp .L_419d57
.L_419dbe:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [R14+32],RAX
            setb DIL
            jmp .L_419d46
.L_419dd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419de0:

            cmp EDX,255
            mov EAX,255
            push RBX
            cmovg EDX,EAX
            mov RBX,RDI
            xor R8D,R8D
            movzx EDX,DL
            movzx ECX,CL
            movzx ESI,SIL
            call .L_419c30

            mov EDX,DWORD PTR [RBX+120]
            test EDX,EDX
            jne .L_419e10

            mov DWORD PTR [RBX+120],EAX
            pop RBX
            ret 
.L_419e10:

            mov RDI,RBX
            mov ESI,EAX
            pop RBX
            jmp .L_418710
.L_419e1b:

            nop
            nop
            nop
            nop
            nop
.L_419e20:

            cmp ESI,EDX
            jg .L_419e38

            cmp ESI,255
            jg .L_419e38

            movzx ECX,CL
            jmp .L_419de0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419e38:

            ret 
.L_419e3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419e40:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,32
.L_419e4f:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RBX
            xor EBX,EBX
            cmp ESI,EDX
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+8],EDX
            jg .L_419eb0

            cmp ESI,128
            mov R8D,ECX
            je .L_419ed8

            cmp ESI,127
            jg .L_419fe0

            cmp EDX,127
            jg .L_41a0c0
.L_419e88:

            movzx ECX,R8B
            movzx EDX,DL
            xor R8D,R8D
            movzx ESI,SIL
            mov RDI,RBP
            call .L_419c30

            mov EDX,DWORD PTR [RBP+120]
            test EDX,EDX
            jne .L_41a080

            mov DWORD PTR [RBP+120],EAX
            nop
            nop
            nop
            nop
.L_419eb0:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41a0fc

            add RSP,32
.L_419ec8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ed8:

            cmp EDX,1114111
            je .L_41a050
.L_419ee4:

            cmp EDX,2047
            jg .L_41a101
.L_419ef0:

            cmp EDX,127
            jle .L_419e88

            mov R9D,ESI
            mov ECX,6
            mov EDI,1
            xor R9D,EDX
.L_419f05:

            mov EAX,EDI
            shl EAX,CL
            mov R12D,EAX
            neg R12D
            test R12D,R9D
            je .L_419f2b

            lea EBX,DWORD PTR [RAX-1]
            test ESI,EBX
            jne .L_41a090

            mov EAX,EBX
            and EAX,EDX
            cmp EAX,EBX
            jne .L_41a0d0
.L_419f2b:

            add ECX,6
            cmp ECX,24
            jne .L_419f05

            lea R12,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RSP+12]
            lea R13,QWORD PTR [RSP+20]
            mov RDI,R12
            call .L_4148e0

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            mov EBX,EAX
            call .L_4148e0

            cmp BYTE PTR [RBP+40],0
            je .L_419fa8

            test EBX,EBX
            jle .L_41a070

            xor R14D,R14D
            xor R8D,R8D
.L_419f6d:

            movzx EDX,BYTE PTR [R13+R14*1]
            movzx ESI,BYTE PTR [R12+R14*1]
            xor ECX,ECX
            mov RDI,RBP
            add R14,1
            call .L_419c30

            cmp EBX,R14D
            mov R8D,EAX
            jg .L_419f6d
.L_419f8e:

            mov EAX,DWORD PTR [RBP+120]
            test EAX,EAX
            jne .L_41a038

            mov DWORD PTR [RBP+120],R8D
            jmp .L_419eb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419fa8:

            sub EBX,1
            js .L_41a070

            movsxd RBX,EBX
            xor R8D,R8D
.L_419fb7:

            movzx EDX,BYTE PTR [R13+RBX*1]
            movzx ESI,BYTE PTR [R12+RBX*1]
            xor ECX,ECX
            mov RDI,RBP
            sub RBX,1
            call .L_419c30

            test EBX,EBX
            mov R8D,EAX
            jns .L_419fb7

            jmp .L_419f8e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419fe0:

            cmp ESI,2047
            jle .L_419ee4

            cmp ESI,65535
            jg .L_419ef0

            cmp EDX,65535
            jle .L_419ef0

            mov EDX,65535
            mov R12D,65536
.L_41a00f:

            movzx EBX,R8B
            mov RDI,RBP
            mov ECX,EBX
            call .L_419e40

            mov EDX,DWORD PTR [RSP+8]
            mov ECX,EBX
            mov ESI,R12D
            mov RDI,RBP
            call .L_419e40

            jmp .L_419eb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a038:

            mov ESI,R8D
            mov RDI,RBP
            call .L_418710

            jmp .L_419eb0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a050:

            cmp BYTE PTR [RDI+40],0
            mov EDX,2047
            mov R12D,2048
            jne .L_41a00f

            call .L_418fe0

            jmp .L_419eb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a070:

            xor R8D,R8D
            jmp .L_419f8e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a080:

            mov ESI,EAX
            mov RDI,RBP
            call .L_418710

            jmp .L_419eb0
          .byte 0x90
.L_41a090:

            movzx R12D,R8B
            mov EDX,ESI
            mov RDI,RBP
            or EDX,EBX
            mov ECX,R12D
            call .L_419e40

            mov EAX,DWORD PTR [RSP+12]
            mov EDX,DWORD PTR [RSP+8]
            mov ECX,R12D
            mov RDI,RBP
            or EAX,EBX
            lea ESI,DWORD PTR [RAX+1]
            call .L_419e40

            jmp .L_419eb0
.L_41a0c0:

            mov EDX,127
            mov R12D,128
            jmp .L_41a00f
.L_41a0d0:

            movzx EBX,R8B
            and EDX,R12D
            mov RDI,RBP
            sub EDX,1
            mov ECX,EBX
            call .L_419e40

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,R12D
            mov ECX,EBX
            mov RDI,RBP
            and ESI,EDX
            call .L_419e40

            jmp .L_419eb0
.L_41a0fc:

            call __stack_chk_fail@PLT
.L_41a101:

            mov EDX,2047
            mov R12D,2048
            jmp .L_41a00f
.L_41a111:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a120:

            cmp DWORD PTR [RDI+36],2
            movzx ECX,CL
            jne .L_41a148

            cmp ESI,EDX
            jg .L_41a140

            cmp ESI,255
            jg .L_41a140

            jmp .L_419de0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a140:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a148:

            jmp .L_419e40
.L_41a14d:

            nop
            nop
            nop
.L_41a150:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,552
.L_41a161:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+32],0
            jne .L_41a270

            cmp BYTE PTR [RSI],21
            mov RBX,RDI
            mov RBP,RSI
            ja .L_41a830

            movzx EAX,BYTE PTR [RSI]
            lea RDX,QWORD PTR [RIP+.L_41bf40]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_41a1a0:

            mov RSI,QWORD PTR [RDI+88]
            lea RDI,QWORD PTR [RDI+72]
            movzx R13D,BYTE PTR [R12]
            call .L_41bd70

            lea RAX,QWORD PTR [RBX+80]
            mov DWORD PTR [RBX+120],0
            mov RCX,QWORD PTR [R12+8]
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov EAX,DWORD PTR [RIP+.L_41c030]
            mov RBP,RCX
            mov DWORD PTR [RBX+124],EAX
            movsxd RDX,DWORD PTR [R12+16]
            mov RAX,RDX
            shl RDX,3
            test RDX,RDX
            je .L_41adfb

            nop
            nop
            nop
            nop
            nop
.L_41a200:

            test R13B,R13B
            mov ESI,DWORD PTR [RBP]
            mov EDX,DWORD PTR [RBP+4]
            je .L_41a219

            cmp ESI,64
            jle .L_41ab80

            cmp EDX,90
            jle .L_41a244
.L_41a219:

            cmp ESI,65
            jle .L_41ab80
.L_41a222:

            cmp EDX,64
            jle .L_41a230

            cmp ESI,122
            movzx ECX,R13B
            jle .L_41a232
.L_41a230:

            xor ECX,ECX
.L_41a232:

            mov RDI,RBX
.L_41a235:

            call .L_41a120
.L_41a23a:

            mov RCX,QWORD PTR [R12+8]
            mov EAX,DWORD PTR [R12+16]
.L_41a244:

            movsxd RDX,EAX
            add RBP,8
            lea RDX,QWORD PTR [RCX+RDX*8]
            cmp RBP,RDX
            jne .L_41a200

            mov ECX,DWORD PTR [RBX+120]
.L_41a257:

            mov EAX,DWORD PTR [RBX+124]
            shl RAX,32
            mov RSI,RAX
            mov EAX,ECX
            or RAX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a270:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41af68

            add RSP,552
.L_41a28e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a2a0:

            mov R12,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [R12+4]
            test EAX,EAX
            jne .L_41a1a0

            lea R12,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_41a34a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41a34f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_41a424:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41a429:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b534]
            mov EDX,14
.L_41a43a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b543]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,794
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41b545]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41a478:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b55f]
            mov EDX,23
.L_41a489:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41a48e:

            cmp BYTE PTR [RSP+144],0
            je .L_41ab9d
.L_41a49c:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_41a4da

            call _ZdlPv@PLT
.L_41a4da:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBX+32],1
.L_41a51b:

            xor EAX,EAX
            jmp .L_41a270
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a528:

            mov RDI,RBX
.L_41a52b:

            call .L_418bd0

            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a538:

            movzx EDX,WORD PTR [RSI+2]
            mov RSI,QWORD PTR [R8]
            mov EBP,DWORD PTR [R8]
            shr DX,6
            and EDX,1
            call .L_4189e0

            shr RAX,32
            shl RAX,32
            mov RSI,RAX
            mov EAX,EBP
            or RAX,RSI
            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a568:

            movzx EDX,WORD PTR [RSI+2]
            mov RSI,QWORD PTR [R8]
            shr DX,6
            and EDX,1
            call .L_4189e0

            jmp .L_41a270
.L_41a580:

            cmp R9D,1
            mov RAX,QWORD PTR [R8]
            jle .L_41a270

            lea EDX,DWORD PTR [R9-2]
            lea RBP,QWORD PTR [R8+8]
            lea R12,QWORD PTR [R8+RDX*8+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a5a0:

            mov RDX,QWORD PTR [RBP]
            mov RSI,RAX
            mov RDI,RBX
            add RBP,8
            call .L_418960

            cmp R12,RBP
            jne .L_41a5a0

            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a5c0:

            mov ESI,32
            call .L_418d00

            jmp .L_41a270
          .byte 0x90
.L_41a5d0:

            mov ESI,16
            call .L_418d00

            jmp .L_41a270
          .byte 0x90
.L_41a5e0:

            xor ESI,ESI
            cmp BYTE PTR [RDI+40],0
            sete SIL
            add ESI,1
            call .L_418d00

            jmp .L_41a270
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a600:

            xor ESI,ESI
            cmp BYTE PTR [RDI+40],0
            setne SIL
            add ESI,1
            call .L_418d00

            jmp .L_41a270
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a620:

            xor ECX,ECX
            mov EDX,255
            xor ESI,ESI
            call .L_418af0

            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a638:

            movzx EDX,WORD PTR [RSI+2]
            mov ESI,DWORD PTR [RSI+24]
            and EDX,1
            call .L_4190c0

            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a650:

            cmp R9D,1
            mov RAX,QWORD PTR [R8]
            jle .L_41a270

            lea EDX,DWORD PTR [R9-2]
            lea RBP,QWORD PTR [R8+8]
            lea R12,QWORD PTR [R8+RDX*8+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a670:

            mov RDX,QWORD PTR [RBP]
            mov RSI,RAX
            mov RDI,RBX
            add RBP,8
            call .L_418800

            cmp R12,RBP
            jne .L_41a670

            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a690:

            cmp DWORD PTR [RSI+24],0
            je .L_41a528

            jle .L_41ab62

            xor R15D,R15D
            xor R12D,R12D
            xor R14D,R14D
            xor R13D,R13D
            jmp .L_41a6cc
          .byte 0x66
          .byte 0x90
.L_41a6b0:

            mov R12D,EAX
            add R13D,1
            shr RAX,32
            add R15,4
            cmp R13D,DWORD PTR [RBP+24]
            mov R14,RAX
            jge .L_41ab70
.L_41a6cc:

            mov RAX,QWORD PTR [RBP+32]
            movzx EDX,WORD PTR [RBP+2]
            mov RDI,RBX
            mov ESI,DWORD PTR [RAX+R15*1]
            and EDX,1
            call .L_4190c0

            test R13D,R13D
            je .L_41a6b0

            shl R14,32
            mov ESI,R12D
            mov RDX,RAX
            or RSI,R14
            mov RDI,RBX
            call .L_418800

            jmp .L_41a6b0
          .byte 0x90
.L_41a700:

            movzx EDX,WORD PTR [RSI+2]
            mov RSI,QWORD PTR [R8]
            shr DX,6
            and EDX,1
            call .L_418c30

            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a720:

            cmp BYTE PTR [RDI+40],1
            sbb ESI,ESI
            and ESI,4
            add ESI,4
            call .L_418d00

            jmp .L_41a270
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a740:

            cmp BYTE PTR [RDI+40],1
            sbb ESI,ESI
            and ESI,4294967292
            add ESI,8
            call .L_418d00

            jmp .L_41a270
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a760:

            mov RSI,QWORD PTR [RDI+88]
            lea RDI,QWORD PTR [RDI+72]
            call .L_41bd70

            lea RAX,QWORD PTR [RBX+80]
            xor ESI,ESI
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+112],0
            mov DWORD PTR [RBX+120],0
            xor ECX,ECX
            mov QWORD PTR [RBX+96],RAX
            mov QWORD PTR [RBX+104],RAX
            mov EDX,1114111
            mov EAX,DWORD PTR [RIP+.L_41c030]
            mov RDI,RBX
            mov DWORD PTR [RBX+124],EAX
            call .L_41a120

            mov EAX,DWORD PTR [RBX+124]
            shl RAX,32
            mov RSI,RAX
            mov EAX,DWORD PTR [RBX+120]
            or RAX,RSI
            jmp .L_41a270
          .byte 0x90
.L_41a7c0:

            mov EDX,DWORD PTR [RSI+24]
            test EDX,EDX
            jns .L_41ab90

            mov RAX,QWORD PTR [R8]
            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a7d8:

            mov ESI,DWORD PTR [RSI+24]
            call .L_418cc0

            cmp DWORD PTR [RBX+128],2
            mov RBP,RAX
            je .L_41a823

            mov ESI,8
            mov RDI,RBX
            call .L_418d00

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,RBX
            call .L_418800

            mov RDI,RBX
            mov RBP,RAX
            call .L_419310
.L_41a812:

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,RBX
            call .L_418800

            mov RBP,RAX
.L_41a823:

            mov RAX,RBP
            jmp .L_41a270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a830:

            lea R12,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_41a8c9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41a8ce:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_41a9a3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41a9a8:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b534]
            mov EDX,14
.L_41a9b9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b543]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,851
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41b545]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41a9f7:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b577]
            mov EDX,26
.L_41aa08:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [RBP]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_41aa1b:

            cmp BYTE PTR [RSP+144],0
            jne .L_41a49c

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b532]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_41ae02

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_41acb9

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41aa9e:

            call .L_418430
.L_41aaa3:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_41ae45

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+128]
            cmp RAX,RDI
            je .L_41ae98

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
            je .L_41aea7

            mov QWORD PTR [RSP+112],RAX
            mov QWORD PTR [RSP+128],RDI
.L_41ab06:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_41ab2a
.L_41ab25:

            call _ZdlPv@PLT
.L_41ab2a:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41ab39:

            call write@PLT
.L_41ab3e:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            mov BYTE PTR [RSP+144],1
            cmp RDI,RBP
            je .L_41a49c

            call _ZdlPv@PLT

            jmp .L_41a49c
.L_41ab62:

            xor R12D,R12D
            xor R14D,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab70:

            shl R14,32
            mov EAX,R12D
            or RAX,R14
            jmp .L_41a270
          .byte 0x90
.L_41ab80:

            xor ECX,ECX
            cmp EDX,121
            jg .L_41a232

            jmp .L_41a222
.L_41ab90:

            mov RSI,QWORD PTR [R8]
.L_41ab93:

            call .L_418e40
.L_41ab98:

            jmp .L_41a270
.L_41ab9d:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_41b532]
            lea RBP,QWORD PTR [RSP+48]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_41aeba

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_41ad59

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_41ac12:

            call .L_418430
.L_41ac17:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41aecc

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_41af46

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41af55

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_41ac77:

            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_41aca0
.L_41ac9b:

            call _ZdlPv@PLT
.L_41aca0:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_41acaf:

            call write@PLT
.L_41acb4:

            jmp .L_41ab3e
.L_41acb9:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_41accf:

            call .L_418430
.L_41acd4:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_41ae14

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+96]
            cmp RAX,RDI
            je .L_41ae76

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
            je .L_41ae85

            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDI
.L_41ad31:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41ab25

            jmp .L_41ab2a
.L_41ad59:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_41ad6f:

            call .L_418430
.L_41ad74:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41aef8

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_41af24

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_41af33

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41adce:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41ac9b

            jmp .L_41aca0
.L_41adfb:

            xor ECX,ECX
            jmp .L_41a257
.L_41ae02:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41ae0a:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41ae0f:

            jmp .L_41ab2a
.L_41ae14:

            test RDX,RDX
            je .L_41ae32

            cmp RDX,1
            je .L_41af6d

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_41ae32:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_41ad31
.L_41ae45:

            test RDX,RDX
            je .L_41ae63

            cmp RDX,1
            je .L_41af83

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_41ae63:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+112]
            jmp .L_41ab06
.L_41ae76:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
.L_41ae85:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_41ad31
.L_41ae98:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RCX
.L_41aea7:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+112],RAX
            jmp .L_41ab06
.L_41aeba:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41aec2:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41aec7:

            jmp .L_41aca0
.L_41aecc:

            test RDX,RDX
            je .L_41aeea

            cmp RDX,1
            je .L_41afb2

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_41aeea:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_41ac77
.L_41aef8:

            test RDX,RDX
            je .L_41af16

            cmp RDX,1
            je .L_41af9c

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_41af16:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_41adce
.L_41af24:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41af33:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_41adce
.L_41af46:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_41af55:

            mov RAX,QWORD PTR [RSP+40]
            add RAX,16
            mov QWORD PTR [RSP+112],RAX
            jmp .L_41ac77
.L_41af68:

            call __stack_chk_fail@PLT
.L_41af6d:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_41ae32
.L_41af83:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_41ae63
.L_41af9c:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_41af16
.L_41afb2:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_41aeea
.L_41afcb:

            mov RDI,QWORD PTR [RSP+48]
            add RBP,16
            cmp RDI,RBP
            je .L_41afde

            call _ZdlPv@PLT
.L_41afde:

            call _ZSt9terminatev@PLT
.L_41afe3:

            jmp .L_41afcb
.L_41afe5:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+RAX*1+152],R15
.L_41b006:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_41b01b:

            call _Unwind_Resume@PLT
.L_41b020:

            mov RBX,RAX
            jmp .L_41b006
.L_41b025:

            mov RBX,RAX
            mov RDI,R12
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41b038:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41b04d:

            jmp .L_41afcb
.L_41b052:

            jmp .L_41afcb
.L_41b057:

            jmp .L_41b025
.L_41b059:

            jmp .L_41b038
.L_41b05b:

            jmp .L_41afe5
.L_41b05d:

            jmp .L_41b020
.L_41b05f:

            nop
.L_41b060:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBP,RDX
            sub RSP,160
.L_41b078:

            lea RBX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RDI,RBX
.L_41b093:

            call .L_419a30
.L_41b098:

            movzx ECX,WORD PTR [R13+2]
            mov RDX,QWORD PTR [RSP+40]
            mov EAX,ECX
            mov DWORD PTR [RDX+24],ECX
            test AL,32
            je .L_41b0b3

            mov DWORD PTR [RSP+52],2
.L_41b0b3:

            test RBP,RBP
            mov QWORD PTR [RSP+80],RBP
            jle .L_41b248

            cmp RBP,440
            jle .L_41b1f8

            sub RBP,440
            mov EAX,16777216
            shr RBP,3
            cmp RBP,16777216
            cmova RBP,RAX
            mov DWORD PTR [RSP+60],EBP
.L_41b0ed:

            mov RDI,R13
            mov DWORD PTR [RSP+144],2
            mov BYTE PTR [RSP+56],R12B
.L_41b100:

            call .L_433890

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_41b258

            lea RBP,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov RDI,RBP
            call .L_418010

            xor ESI,ESI
            mov RDI,RBP
            mov R13D,EAX
            call .L_418220

            mov EBP,EAX
            mov EAX,DWORD PTR [RSP+60]
            mov RSI,QWORD PTR [RSP+8]
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBX
            add EAX,EAX
            mov DWORD PTR [RSP+36],EAX
            call .L_41c250

            mov RDI,QWORD PTR [RSP+8]
            mov R14,RAX
            call .L_40f430

            cmp BYTE PTR [RSP+48],0
            jne .L_41b258

            xor ESI,ESI
            mov RDI,RBX
            mov BYTE PTR [RSP+56],0
            call .L_418cc0

            mov RSI,R14
            mov RDX,RAX
            mov RDI,RBX
            call .L_418800

            mov R14,RAX
            mov RAX,QWORD PTR [RSP+40]
            test R12B,R12B
            mov DWORD PTR [RAX+4],R14D
            mov RAX,QWORD PTR [RSP+40]
            je .L_41b208

            mov BYTE PTR [RAX],BPL
            mov RAX,QWORD PTR [RSP+40]
            mov BYTE PTR [RAX+1],R13B
            mov RAX,QWORD PTR [RSP+40]
            cmp BYTE PTR [RAX],0
            je .L_41b21e
.L_41b1ad:

            mov EDX,DWORD PTR [RAX+4]
            mov DWORD PTR [RAX+8],EDX
.L_41b1b3:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,RBX
            mov BYTE PTR [RAX+2],R12B
            call .L_419230

            mov RBP,RAX
.L_41b1c7:

            mov RDI,RBX
            call .L_4199b0

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41b25f

            add RSP,160
.L_41b1ec:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b1f8:

            mov DWORD PTR [RSP+60],0
            jmp .L_41b0ed
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b208:

            mov BYTE PTR [RAX],R13B
            mov RAX,QWORD PTR [RSP+40]
            mov BYTE PTR [RAX+1],BPL
            mov RAX,QWORD PTR [RSP+40]
            cmp BYTE PTR [RAX],0
            jne .L_41b1ad
.L_41b21e:

            mov RDI,RBX
            call .L_419310
.L_41b226:

            mov RDX,R14
            mov RSI,RAX
            mov RDI,RBX
            call .L_418800

            mov RDX,QWORD PTR [RSP+40]
            mov DWORD PTR [RDX+8],EAX
            jmp .L_41b1b3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b248:

            mov DWORD PTR [RSP+60],100000
            jmp .L_41b0ed
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b258:

            xor EBP,EBP
            jmp .L_41b1c7
.L_41b25f:

            call __stack_chk_fail@PLT
.L_41b264:

            mov RBP,RAX
            mov RDI,RBX
            call .L_4199b0

            mov RDI,RBP
.L_41b272:

            call _Unwind_Resume@PLT
.L_41b277:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b280:

            mov RDX,RSI
            xor ESI,ESI
            jmp .L_41b060
.L_41b28a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b290:

            mov RDX,RSI
            mov ESI,1
            jmp .L_41b060
.L_41b29d:

            nop
            nop
            nop
.L_41b2a0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBX
.L_41b2b0:

            lea RBX,QWORD PTR [RBP-192]
            mov R12D,ESI
            sub RSP,200
            mov RDI,RBX
            mov QWORD PTR [RBP-232],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
.L_41b2da:

            call .L_419a30
.L_41b2df:

            mov RDI,R13
.L_41b2e2:

            call .L_404460

            mov RCX,QWORD PTR [RBP-168]
            test AL,32
            mov RDX,QWORD PTR [R13+8]
            mov DWORD PTR [RCX+24],EAX
            je .L_41b303

            mov DWORD PTR [RBP-156],2
.L_41b303:

            test RDX,RDX
            mov QWORD PTR [RBP-128],RDX
            jle .L_41b478

            cmp RDX,440
            jle .L_41b460

            sub RDX,440
            mov EAX,16777216
            shr RDX,3
            cmp RDX,16777216
            cmova RDX,RAX
            mov DWORD PTR [RBP-148],EDX
            add EDX,EDX
.L_41b340:

            mov RSI,QWORD PTR [RBP-232]
            mov DWORD PTR [RBP-172],EDX
            xor ECX,ECX
            xor EDX,EDX
            mov RDI,RBX
            mov DWORD PTR [RBP-64],R12D
            call .L_41c250

            mov RDI,QWORD PTR [RBP-232]
            mov R13,RAX
            mov R14,RAX
            shr R13,32
            mov R15D,EAX
            shl R13,32
            call .L_40f430

            cmp BYTE PTR [RBP-160],0
            jne .L_41b4a5

            test R12D,R12D
            jne .L_41b3a8

            mov RDI,RBX
            call .L_419310

            mov EDX,R14D
            mov RSI,RAX
            mov RDI,RBX
            or RDX,R13
            call .L_418800

            mov R15D,EAX
.L_41b3a8:

            mov RAX,QWORD PTR [RBP-168]
            mov RDI,RBX
            mov DWORD PTR [RAX+4],R15D
            mov RAX,QWORD PTR [RBP-168]
            mov DWORD PTR [RAX+8],R15D
            mov RAX,QWORD PTR [RBP-168]
            mov BYTE PTR [RAX],1
            mov RAX,QWORD PTR [RBP-168]
            mov BYTE PTR [RAX+1],1
            call .L_419230

            test RAX,RAX
            mov RDI,RAX
            mov R14,RAX
            je .L_41b4a5

            lea RAX,QWORD PTR [RIP+.L_43e1a0-142350]
            lea RSI,QWORD PTR [RBP-208]
            push 0
            xor R9D,R9D
            mov R8D,3
            mov ECX,1
            mov QWORD PTR [RBP-208],RAX
            lea RAX,QWORD PTR [RBP-209]
            mov RDX,RSI
            mov DWORD PTR [RBP-200],12
            push RAX
.L_41b424:

            call .L_422330
.L_41b429:

            cmp BYTE PTR [RBP-209],0
            pop RAX
            pop RDX
            jne .L_41b490
.L_41b434:

            mov RDI,RBX
            call .L_4199b0

            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_41b4aa

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b460:

            mov DWORD PTR [RBP-148],0
            xor EDX,EDX
            jmp .L_41b340
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b478:

            mov DWORD PTR [RBP-148],100000
            mov EDX,200000
            jmp .L_41b340
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b490:

            mov RDI,R14
            call .L_430900

            mov ESI,440
            mov RDI,R14
            call _ZdlPvm@PLT
.L_41b4a5:

            xor R14D,R14D
            jmp .L_41b434
.L_41b4aa:

            call __stack_chk_fail@PLT
.L_41b4af:

            mov R14,RAX
            mov RDI,RBX
            call .L_4199b0

            mov RDI,R14
.L_41b4bd:

            call _Unwind_Resume@PLT
.L_41b4c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b4d0:

            jmp .L_41b2a0
.L_41b4d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b4e0:

            mov RAX,RDX
            ret 
.L_41b4e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b4f0:

            mov RAX,RSI
            ret 
.L_41b4f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b500:

            mov RAX,RCX
            ret 
.L_41b504:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b508:
          .string "basic_string::_M_construct null not valid"
.L_41b532:

            or AL,BYTE PTR [RAX]
.L_41b534:
          .string "re2/compile.cc"
.L_41b543:

            cmp AL,BYTE PTR [RAX]
.L_41b545:

            cmp AH,BYTE PTR [RAX]
            add BYTE PTR [RBX+111],AL
          .byte 0x6d
          .byte 0x70
          .byte 0x69

            insb BYTE PTR [RDI],DX
            jb .L_41b58b
          .byte 0x3a
          .byte 0x43
          .byte 0x6f
          .byte 0x70
          .byte 0x79

            and BYTE PTR [RBX+97],AH
            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            and DWORD PTR FS:[RAX],EAX
.L_41b55f:
          .string "No ranges in char class"
.L_41b577:
          .byte 0x4d
          .byte 0x69
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x63
          .byte 0x61
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x43
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
.L_41b58b:

            imul EBP,DWORD PTR [RBP+RIZ*2+114],1744838714
            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            sub AL,32
            ja .L_41b60a
          .byte 0x72
          .byte 0x6c
          .byte 0x64
          .byte 0x0
.L_41b59f:
          .string "./re2/walker-inl.h"
.L_41b5b2:
          .string "Stack not empty."
# WARNING: found overlapping blocks at address 1b38c
# WARNING: found overlapping blocks at address 1b390
# WARNING: found overlapping blocks at address 1b392

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_41b5e1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_41b644
          .byte 0x48
          .byte 0x8b
          .byte 0x50
          .byte 0x48
          .byte 0x48
          .byte 0x2b
          .byte 0x50
          .byte 0x28
          .byte 0x48
          .byte 0xb9
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
.L_41b60a:

            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            sar RDX,3
            lea RSI,QWORD PTR [RDX+RDX*4-5]
            mov RDX,QWORD PTR [RAX+48]
            sub RDX,QWORD PTR [RAX+56]
            sar RDX,4
            imul RDX,RCX
            lea RSI,QWORD PTR [RDX+RSI*2]
            mov RDX,QWORD PTR [RAX+32]
            sub RDX,QWORD PTR [RAX+16]
.L_41b634:

            mov RAX,RDX
            sar RAX,4
            imul RAX,RCX
            add RSI,RAX
            jne .L_41b670
.L_41b644:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41bc42

            add RSP,520
.L_41b662:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b670:

            lea RBX,QWORD PTR [RSP+112]
            mov RBP,RDI
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41b703:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41b708:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_41b7c2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41b7c7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b59f]
            mov EDX,18
.L_41b7d7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b543]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,147
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41b545]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41b813:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b5b2]
            mov EDX,16
.L_41b823:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41b828:

            cmp BYTE PTR [RSP+112],0
            je .L_41b980
.L_41b833:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_41b865

            call _ZdlPv@PLT
.L_41b865:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            movabs R12,-6148914691236517205
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b8c0:

            mov RCX,QWORD PTR [RBX+72]
            mov RAX,RCX
            sub RAX,QWORD PTR [RBX+40]
            sar RAX,3
            lea RSI,QWORD PTR [RAX+RAX*4-5]
            mov RAX,RDX
            sub RAX,RDI
            sar RAX,4
            imul RAX,R12
            lea RSI,QWORD PTR [RAX+RSI*2]
            mov RAX,QWORD PTR [RBX+32]
            sub RAX,QWORD PTR [RBX+16]
            sar RAX,4
            imul RAX,R12
            add RSI,RAX
            je .L_41b644

            cmp RDX,RDI
            je .L_41b930
.L_41b904:

            mov RDI,QWORD PTR [RDX-8]
            mov ESI,8
            call _ZdlPvm@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RDX,RDI
            je .L_41b940

            sub RDX,48
            mov QWORD PTR [RBX+48],RDX
            jmp .L_41b8c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b930:

            mov RDX,QWORD PTR [RCX-8]
            add RDX,480
            jmp .L_41b904
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b940:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            add RAX,432
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_41b8c0
          .byte 0x90
.L_41b980:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b532]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_41bb65

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_41bac0

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
.L_41b9f7:

            call .L_418430
.L_41b9fc:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41bb77

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_41bbd5

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41bbe4

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_41ba5a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_41ba7e
.L_41ba79:

            call _ZdlPv@PLT
.L_41ba7e:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_41ba8d:

            call write@PLT
.L_41ba92:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_41b833

            call _ZdlPv@PLT

            jmp .L_41b833
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bac0:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_41bada:

            call .L_418430

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41bba8

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_41bbf7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41bc06

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41bb3d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41ba79

            jmp .L_41ba7e
.L_41bb65:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41bb72:

            jmp .L_41ba7e
.L_41bb77:

            test RDX,RDX
            je .L_41bb95

            cmp RDX,1
            je .L_41bc2c

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_41bb95:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41ba5a
.L_41bba8:

            test RDX,RDX
            je .L_41bbc2

            cmp RDX,1
            je .L_41bc19

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_41bbc2:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41bb3d
.L_41bbd5:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41bbe4:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_41ba5a
.L_41bbf7:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41bc06:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41bb3d
.L_41bc19:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41bbc2
.L_41bc2c:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41bb95
.L_41bc42:

            call __stack_chk_fail@PLT
.L_41bc47:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_41bc5e

            call _ZdlPv@PLT
.L_41bc5e:

            call _ZSt9terminatev@PLT
.L_41bc63:

            jmp .L_41bc47
.L_41bc65:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_41bc87:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_41bc9b:

            call _Unwind_Resume@PLT
.L_41bca0:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41bcb3:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41bcc7:

            mov RBP,RAX
            jmp .L_41bc87
.L_41bccc:

            nop
            nop
            nop
            nop
.L_41bcd0:

            lea RAX,QWORD PTR [RIP+.L_649d38]
            push R12
            push RBP
            push RBX
.L_41bcdb:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_41b5d0

            mov RBP,QWORD PTR [RBX+8]
            test RBP,RBP
            je .L_41bd40

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41bd2a

            mov RAX,QWORD PTR [RBP+72]
            mov RBX,QWORD PTR [RBP+40]
            lea R12,QWORD PTR [RAX+8]
            cmp R12,RBX
            jbe .L_41bd25

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bd10:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call _ZdlPv@PLT

            cmp R12,RBX
            ja .L_41bd10

            mov RDI,QWORD PTR [RBP]
.L_41bd25:

            call _ZdlPv@PLT
.L_41bd2a:

            pop RBX
.L_41bd2b:

            mov RDI,RBP
            mov ESI,80
            pop RBP
            pop R12
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bd40:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41bd45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bd50:

            push RBX
            mov RBX,RDI
            call .L_41bcd0

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_41bd67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bd70:

            test RSI,RSI
            je .L_41bda8

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_41bd7f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_41bd70

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_41bd7f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bda8:

            ret 
.L_41bdaa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41bdb0:

            push RBP
            push RBX
            sub RSP,8
.L_41bdb6:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_41be10

            mov R8,QWORD PTR [RSI]
            jmp .L_41bdda
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bdc8:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_41bdef
.L_41bdd7:

            mov RBX,RAX
.L_41bdda:

            mov RCX,QWORD PTR [RBX+32]
            cmp R8,RCX
            jb .L_41bdc8

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_41bdd7
.L_41bdef:

            test R9B,R9B
            mov R10,RBX
            jne .L_41be14
.L_41bdf7:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8,RCX
            cmova RAX,RDX
            cmova RDX,R10
.L_41be07:

            add RSP,8
.L_41be0b:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41be10:

            lea RBX,QWORD PTR [RDI+8]
.L_41be14:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_41be07

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_41bdf7
.L_41be3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41be40:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_41be54:

            cmp RSI,RAX
            je .L_41bed8

            mov R13,QWORD PTR [RDX]
            cmp R13,QWORD PTR [RSI+32]
            mov RBX,RSI
            jae .L_41bea0

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_41be94

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jbe .L_41beec

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_41be94:

            add RSP,8
.L_41be98:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41bea0:

            jbe .L_41bf08

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_41be94

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jae .L_41beec

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_41be94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41bed8:

            cmp QWORD PTR [RDI+40],0
            je .L_41beec

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [RBX+32],RAX
            jb .L_41bf20
.L_41beec:

            add RSP,8
.L_41bef0:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_41bdb0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bf08:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_41bf20:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41bf30:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf40:
          .long .L_41a830-.L_41bf40
          .long .L_41a51b-.L_41bf40
          .long .L_41a528-.L_41bf40
          .long .L_41a638-.L_41bf40
          .long .L_41a690-.L_41bf40
          .long .L_41a650-.L_41bf40
          .long .L_41a580-.L_41bf40
          .long .L_41a568-.L_41bf40
          .long .L_41a538-.L_41bf40
          .long .L_41a700-.L_41bf40
          .long .L_41a830-.L_41bf40
          .long .L_41a7c0-.L_41bf40
          .long .L_41a760-.L_41bf40
          .long .L_41a620-.L_41bf40
          .long .L_41a600-.L_41bf40
          .long .L_41a5e0-.L_41bf40
          .long .L_41a5d0-.L_41bf40
          .long .L_41a5c0-.L_41bf40
          .long .L_41a740-.L_41bf40
          .long .L_41a720-.L_41bf40
          .long .L_41a2a0-.L_41bf40
          .long .L_41a7d8-.L_41bf40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x0

            add BYTE PTR [RAX],AL
          .byte 0xbf
          .byte 0x0

            add BYTE PTR [RAX],AL
.L_41bfac:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c030:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI-112],AH
.L_41c040:

            mov RCX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RDI+48]
            lea RDX,QWORD PTR [RCX-48]
            cmp RAX,RDX
            je .L_41c080

            test RAX,RAX
            je .L_41c06f

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_41c06f:

            add RAX,48
            mov QWORD PTR [RDI+48],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c080:

            push R15
.L_41c082:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_41c094:

            mov R12,QWORD PTR [RDI+72]
            mov RCX,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RDI+8]
            mov RAX,R12
            sub RAX,RCX
            mov RSI,RDX
            sar RAX,3
            sub RSI,RAX
            cmp RSI,1
            jbe .L_41c120
.L_41c0b5:

            mov EDI,480
            call _Znwm@PLT

            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_41c0e7

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_41c0e7:

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            add RSP,8
.L_41c10e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c120:

            mov RSI,QWORD PTR [RDI+40]
            mov RAX,R12
            sub RAX,RSI
            sar RAX,3
            lea R14,QWORD PTR [RAX+2]
            lea R13,QWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R14+R14*1]
            cmp RDX,RAX
            ja .L_41c1e8

            test RDX,RDX
            je .L_41c218

            lea R12,QWORD PTR [RDX+RDX*1+2]
            movabs RAX,2305843009213693951
            cmp R12,RAX
            ja .L_41c240
.L_41c164:

            lea RDI,QWORD PTR [R12*8]
            call _Znwm@PLT

            mov R15,RAX
            mov RAX,R12
            mov RSI,QWORD PTR [RBX+40]
            sub RAX,R14
            shr RAX,1
            lea R14,QWORD PTR [R15+RAX*8]
            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            cmp RDX,RSI
            je .L_41c19d

            sub RDX,RSI
            mov RDI,R14
            call memmove@PLT
.L_41c19d:

            mov RDI,QWORD PTR [RBX]
            shl R13,3
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],R15
            mov QWORD PTR [RBX+8],R12
.L_41c1b0:

            mov RAX,QWORD PTR [R14]
            lea R12,QWORD PTR [R14+R13*1-8]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            add RAX,480
            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+56],RAX
            add RAX,480
            mov QWORD PTR [RBX+64],RAX
            jmp .L_41c0b5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c1e8:

            sub RDX,R14
            add R12,8
            shl R13,3
            shr RDX,1
            lea R14,QWORD PTR [RCX+RDX*8]
            mov RDX,R12
            sub RDX,RSI
            cmp RSI,R14
            jbe .L_41c228

            cmp RSI,R12
            je .L_41c1b0

            mov RDI,R14
            call memmove@PLT

            jmp .L_41c1b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c218:

            mov R12D,3
            jmp .L_41c164
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c228:

            cmp RSI,R12
            je .L_41c1b0

            mov RDI,R13
            sub RDI,RDX
            add RDI,R14
            call memmove@PLT

            jmp .L_41c1b0
.L_41c240:

            call _ZSt17__throw_bad_allocv@PLT
.L_41c245:
          .string "Walk NULL"
          .byte 0x90
.L_41c250:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov R13,RDI
            mov RBX,RDX
            shr R12,32
            sub RSP,568
.L_41c271:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            mov BYTE PTR [RSP+8],CL
.L_41c288:

            call .L_41b5d0

            test RBP,RBP
            je .L_41c640

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+16],RBP
            mov DWORD PTR [RSP+24],4294967295
            mov DWORD PTR [RSP+28],EBX
            mov DWORD PTR [RSP+32],R12D
            mov QWORD PTR [RSP+36],0
            mov QWORD PTR [RSP+44],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP],RSI
.L_41c2d4:

            call .L_41c040

            mov RBP,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [RBP+56]
            mov RDI,QWORD PTR [RBP+48]
            mov R8,QWORD PTR [RBP+72]
.L_41c2e9:

            cmp RCX,RDI
            mov RBX,RDI
            je .L_41c3f8

            nop
            nop
            nop
.L_41c2f8:

            mov R9D,DWORD PTR [RBX-40]
            lea R12,QWORD PTR [RBX-48]
            mov R14,QWORD PTR [RBX-48]
            cmp R9D,-1
            jne .L_41c410

            mov EAX,DWORD PTR [R13+20]
            mov R8,QWORD PTR [R13]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [R13+20],EAX
            js .L_41c4e0

            mov BYTE PTR [RSP+16],0
            mov RDX,QWORD PTR [R12+12]
            mov RSI,R14
            mov RCX,QWORD PTR [RSP]
            mov RDI,R13
            call QWORD PTR [R8+16]

            cmp BYTE PTR [RSP+16],0
            mov QWORD PTR [R12+20],RAX
            je .L_41c510

            mov RBP,QWORD PTR [R13+8]
            mov R12D,DWORD PTR [RBX-28]
            mov R15D,DWORD PTR [RBX-24]
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
.L_41c361:

            cmp RDI,RCX
            je .L_41c481
.L_41c36a:

            sub RDI,48
            mov QWORD PTR [RBP+48],RDI
.L_41c372:

            mov R8,QWORD PTR [RBP+72]
            mov RDX,RDI
            movabs RSI,-6148914691236517205
            sub RDX,RCX
            sar RDX,4
            mov RAX,R8
            sub RAX,QWORD PTR [RBP+40]
            imul RDX,RSI
            sar RAX,3
            lea RAX,QWORD PTR [RAX+RAX*4-5]
            lea RAX,QWORD PTR [RDX+RAX*2]
            mov RDX,QWORD PTR [RBP+32]
            sub RDX,QWORD PTR [RBP+16]
            sar RDX,4
            imul RDX,RSI
            add RAX,RDX
            je .L_41c608

            cmp RDI,RCX
            mov RDX,RDI
            je .L_41c4d0
.L_41c3c7:

            mov RSI,QWORD PTR [RDX-8]
            movsxd RAX,DWORD PTR [RDX-40]
            test RSI,RSI
            je .L_41c4c0

            lea RAX,QWORD PTR [RSI+RAX*8]
            mov DWORD PTR [RAX],R12D
            mov DWORD PTR [RAX+4],R15D
            mov EAX,DWORD PTR [RDX-40]
.L_41c3e6:

            add EAX,1
            cmp RCX,RDI
            mov RBX,RDI
            mov DWORD PTR [RDX-40],EAX
            jne .L_41c2f8
.L_41c3f8:

            mov RBX,QWORD PTR [R8-8]
            add RBX,480
            jmp .L_41c2f8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c410:

            movzx EAX,WORD PTR [R14+6]
.L_41c415:

            test AX,AX
            je .L_41c431

            cmp AX,1
            jbe .L_41c58c

            cmp EAX,R9D
            mov RDX,QWORD PTR [R14+8]
            jg .L_41c599
.L_41c431:

            mov RAX,QWORD PTR [R13]
            mov RCX,QWORD PTR [R12+20]
            mov RSI,R14
            mov RDX,QWORD PTR [R12+12]
            mov R8,QWORD PTR [RBX-8]
            mov RDI,R13
            call QWORD PTR [RAX+24]

            mov R12D,EAX
            shr RAX,32
            cmp WORD PTR [R14+6],1
            mov R15,RAX
            jbe .L_41c46c

            mov RDI,QWORD PTR [RBX-8]
            test RDI,RDI
            je .L_41c46c

            call _ZdaPv@PLT
.L_41c46c:

            mov RBP,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
            cmp RDI,RCX
            jne .L_41c36a
.L_41c481:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBP+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBP+56],RAX
            add RAX,432
            mov QWORD PTR [RBP+48],RAX
            mov QWORD PTR [RBP+64],RDX
            mov RBP,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
            jmp .L_41c372
.L_41c4c0:

            mov DWORD PTR [RDX-20],R12D
            mov DWORD PTR [RDX-16],R15D
            jmp .L_41c3e6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c4d0:

            mov RAX,QWORD PTR [R8-8]
            lea RDX,QWORD PTR [RAX+480]
            jmp .L_41c3c7
.L_41c4e0:

            mov RAX,QWORD PTR [R8+40]
            lea RBX,QWORD PTR [RIP+.L_417ff0]
            mov BYTE PTR [R13+16],1
            cmp RAX,RBX
            jne .L_41ca10

            mov BYTE PTR [R13+32],1
            xor R15D,R15D
            xor R12D,R12D
            jmp .L_41c361
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c510:

            movzx EAX,WORD PTR [R14+6]
            mov DWORD PTR [RBX-40],0
            mov QWORD PTR [RBX-8],0
            cmp AX,1
            je .L_41c580

            mov R9D,0
            jbe .L_41c431

            movzx EBP,AX
            lea RDI,QWORD PTR [RBP*8]
            call _Znam@PLT
.L_41c546:

            lea RDX,QWORD PTR [RBP-1]
            mov RCX,RAX
            nop
            nop
            nop
.L_41c550:

            sub RDX,1
            mov DWORD PTR [RCX],0
            mov DWORD PTR [RCX+4],0
            add RCX,8
            cmp RDX,-1
            jne .L_41c550

            mov QWORD PTR [RBX-8],RAX
            mov R9D,DWORD PTR [RBX-40]
            movzx EAX,WORD PTR [R14+6]
            jmp .L_41c415
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c580:

            lea RDX,QWORD PTR [R12+28]
            xor R9D,R9D
            mov QWORD PTR [RBX-8],RDX
.L_41c58c:

            cmp EAX,R9D
            lea RDX,QWORD PTR [R14+8]
            jle .L_41c431
.L_41c599:

            movsxd RBP,R9D
            test R9D,R9D
            lea RCX,QWORD PTR [RBP*8]
            mov RAX,QWORD PTR [RDX+RBP*8]
            jle .L_41c5bf

            cmp BYTE PTR [RSP+8],0
            je .L_41c5bf

            cmp QWORD PTR [RDX+RCX*1-8],RAX
            je .L_41c9e0
.L_41c5bf:

            mov ECX,DWORD PTR [RBX-28]
            mov EDX,DWORD PTR [RBX-24]
            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+16],RAX
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+32],EDX
            mov QWORD PTR [RSP+44],0
            mov QWORD PTR [RSP+56],0
            mov RSI,QWORD PTR [RSP]
            jmp .L_41c2d4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c608:

            mov RAX,R15
            mov ESI,R12D
            shl RAX,32
            or RAX,RSI
.L_41c615:

            mov RBX,QWORD PTR [RSP+552]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41cbe3

            add RSP,568
.L_41c633:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_41c640:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+504],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],R14
            mov QWORD PTR [RSP+496],0
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            mov QWORD PTR [RSP+168],R13
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41c6d8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41c6dd:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41c79a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41c79f:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_41b59f]
            mov EDX,18
.L_41c7af:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_41b543]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,160
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_41b545]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41c7eb:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_41c245]
            mov EDX,9
.L_41c7fb:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41c800:

            cmp BYTE PTR [RSP+160],0
            je .L_41c8a0
.L_41c80e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_41c84a

            call _ZdlPv@PLT
.L_41c84a:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            shl R12,32
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RSP+RAX*1+168],RCX
            mov QWORD PTR [RSP+280],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov EAX,EBX
            or RAX,R12
            jmp .L_41c615
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c8a0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_41b532]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_41caf7

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_41ca38

            lea RCX,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+96],RAX
.L_41c916:

            call .L_418430
.L_41c91b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41cb09

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_41cb6d

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41cb7c

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41c979:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_41c99d
.L_41c998:

            call _ZdlPv@PLT
.L_41c99d:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41c9ac:

            call write@PLT
.L_41c9b1:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov BYTE PTR [RSP+160],1
            add RAX,16
            cmp RDI,RAX
            je .L_41c80e

            call _ZdlPv@PLT

            jmp .L_41c80e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c9e0:

            mov R12,QWORD PTR [RBX-8]
            mov RAX,QWORD PTR [R13]
            mov RDI,R13
            mov RSI,QWORD PTR [R12+RCX*1-8]
.L_41c9f0:

            call QWORD PTR [RAX+32]

            mov QWORD PTR [R12+RBP*8],RAX
            mov RBP,QWORD PTR [R13+8]
            add DWORD PTR [RBX-40],1
            mov RCX,QWORD PTR [RBP+56]
            mov RDI,QWORD PTR [RBP+48]
            mov R8,QWORD PTR [RBP+72]
            jmp .L_41c2e9
.L_41ca10:

            mov RDX,QWORD PTR [R12+12]
            mov RDI,R13
            mov RSI,R14
            call RAX
.L_41ca1d:

            mov RBP,QWORD PTR [R13+8]
            mov R12D,EAX
            shr RAX,32
            mov R15,RAX
            mov RDI,QWORD PTR [RBP+48]
            mov RCX,QWORD PTR [RBP+56]
            jmp .L_41c361
.L_41ca38:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41ca57:

            call .L_418430

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41cb3a

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+144]
            add RCX,16
            cmp RDI,RCX
            je .L_41cb8f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41cb9e

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_41cac9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+128]
            add RAX,16
            cmp RDI,RAX
            jne .L_41c998

            jmp .L_41c99d
.L_41caf7:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41cb04:

            jmp .L_41c99d
.L_41cb09:

            test RDX,RDX
            je .L_41cb27

            cmp RDX,1
            je .L_41cbcd

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_41cb27:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41c979
.L_41cb3a:

            test RDX,RDX
            je .L_41cb57

            cmp RDX,1
            je .L_41cbb4

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_41cb57:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_41cac9
.L_41cb6d:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41cb7c:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41c979
.L_41cb8f:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41cb9e:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_41cac9
.L_41cbb4:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41cb57
.L_41cbcd:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41cb27
.L_41cbe3:

            call __stack_chk_fail@PLT
.L_41cbe8:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_41cbff

            call _ZdlPv@PLT
.L_41cbff:

            call _ZSt9terminatev@PLT
.L_41cc04:

            jmp .L_41cbe8
.L_41cc06:

            mov RBX,RAX
.L_41cc09:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+280],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_41cc1d:

            call _Unwind_Resume@PLT
.L_41cc22:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41cc35:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RSP+RAX*1+168],RCX
            jmp .L_41cc09
.L_41cc5e:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41cc72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cc80:

            xor R14,QWORD PTR [RDX+101]
            xor DH,BYTE PTR [RSI]
            push RDX
            js .L_41ccfc
          .byte 0x36
          .byte 0x57
          .byte 0x61
          .byte 0x6c
          .byte 0x6b
          .byte 0x65
          .byte 0x72
          .byte 0x49
          .byte 0x4e
          .byte 0x53
          .byte 0x5f
          .byte 0x34
          .byte 0x46
          .byte 0x72
          .byte 0x61
          .byte 0x67
          .byte 0x45
          .byte 0x45
          .byte 0x45
          .byte 0x0
.L_41cca0:

            xor R14,QWORD PTR [RDX+101]
            xor BH,BYTE PTR [RAX]
            outsd DX,DWORD PTR [RSI]
            insd DWORD PTR [RDI],DX
            jo .L_41cd14

            insb BYTE PTR [RDI],DX
            jb .L_41ccf4
          .zero 1
.L_41ccb0:

            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_41ccc0

            jmp _ZdaPv@PLT
          .byte 0x66
          .byte 0x90
.L_41ccc0:

            ret 
.L_41ccc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ccd0:

            test RSI,RSI
            je .L_41cd17

            push R12
            lea R12,QWORD PTR [RDI+RSI*8]
            push RBP
            push RBX
            mov RBP,RDI
.L_41cce0:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41cd01

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ccf0:

            mov RBX,QWORD PTR [RDI+8]
.L_41ccf4:

            call _ZdlPv@PLT

            test RBX,RBX
.L_41ccfc:

            mov RDI,RBX
            jne .L_41ccf0
.L_41cd01:

            mov QWORD PTR [RBP],0
            add RBP,8
            cmp R12,RBP
            jne .L_41cce0

            pop RBX
            pop RBP
.L_41cd14:

            pop R12
            ret 
.L_41cd17:

            ret 
.L_41cd19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd20:

            push RBX
.L_41cd21:

            lea RBX,QWORD PTR [RDI+1]
            movabs RAX,2305843009213693951
            cmp RBX,RAX
            ja .L_41cd69

            shl RBX,3
            mov RDI,RBX
            call _Znwm@PLT

            lea RCX,QWORD PTR [RAX+RBX*1-8]
            cmp RAX,RCX
            je .L_41cd60

            mov RDX,RAX
            nop
            nop
            nop
.L_41cd50:

            mov QWORD PTR [RDX],0
            add RDX,8
            cmp RCX,RDX
            jne .L_41cd50
.L_41cd60:

            mov QWORD PTR [RCX],4096
            pop RBX
.L_41cd68:

            ret 
.L_41cd69:

            call _ZSt17__throw_bad_allocv@PLT
.L_41cd6e:

            nop
            nop
.L_41cd70:

            cmp RDI,RSI
            je .L_41ce08

            push R14
            push R13
            lea R13,QWORD PTR [RDI+4]
            push R12
            push RBP
            cmp RSI,R13
            push RBX
.L_41cd88:

            mov RBX,R13
            je .L_41cdfc

            lea RAX,QWORD PTR [RDI+8]
            mov R12,RDI
            sub RSI,RAX
            shr RSI,2
            lea R14,QWORD PTR [RDI+RSI*4+8]
            jmp .L_41cdcb

            nop
            nop
            nop
            nop
            nop
            nop
.L_41cda8:

            cmp R12,RBX
            je .L_41cdbe

            mov RDX,RBX
            mov RDI,R13
            mov RSI,R12
            sub RDX,R12
            call memmove@PLT
.L_41cdbe:

            add RBX,4
            mov DWORD PTR [R12],EBP
            cmp R14,RBX
            je .L_41cdfc
.L_41cdcb:

            mov EBP,DWORD PTR [RBX]
            cmp EBP,DWORD PTR [R12]
            jl .L_41cda8

            mov EDX,DWORD PTR [RBX-4]
            lea RAX,QWORD PTR [RBX-4]
            cmp EBP,EDX
            jl .L_41cde3

            jmp .L_41ce10
.L_41cde0:

            mov RAX,RCX
.L_41cde3:

            mov DWORD PTR [RAX+4],EDX
            mov EDX,DWORD PTR [RAX-4]
            lea RCX,QWORD PTR [RAX-4]
            cmp EBP,EDX
            jl .L_41cde0

            mov DWORD PTR [RAX],EBP
.L_41cdf3:

            add RBX,4
            cmp R14,RBX
            jne .L_41cdcb
.L_41cdfc:

            pop RBX
.L_41cdfd:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ce08:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ce10:

            mov RAX,RBX
            mov DWORD PTR [RAX],EBP
            jmp .L_41cdf3
.L_41ce17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ce20:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_41ce2e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_41ce4c

            test RDX,RDX
            jne .L_41ced7
.L_41ce4c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_41cea0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_41ced0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_41ce74:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41cee3

            add RSP,16
.L_41ce94:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cea0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_41ceb9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_41ce74
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ced0:

            test RBX,RBX
            je .L_41ce74

            jmp .L_41ceb9
.L_41ced7:

            lea RDI,QWORD PTR [RIP+.L_423558]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_41cee3:

            call __stack_chk_fail@PLT
.L_41cee8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cef0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDX
            mov RBP,RDI
            sub RSP,16
.L_41cf01:

            mov RDX,QWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41cf59

            mov EAX,DWORD PTR [RDX+8]
            mov RDI,QWORD PTR [RDX]
            lea RCX,QWORD PTR [RSP+4]
            mov EDX,DWORD PTR [RDX+12]
            mov DWORD PTR [RSP+4],0
            shl EAX,2
            lea ESI,DWORD PTR [RAX+3]
            test EAX,EAX
            mov DWORD PTR [RSP],EDX
            mov RDX,RSP
            cmovns ESI,EAX
            sar ESI,2
            movsxd RSI,ESI
            call .L_43df70

            mov EAX,DWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+4]
            shl RAX,32
            or RAX,RDX
.L_41cf59:

            mov R9,QWORD PTR [R12]
            xor EDX,EDX
            mov R10,QWORD PTR [RBP]
            div R9
            lea RDX,QWORD PTR [R10+RDX*8]
            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            je .L_41d018

            mov RSI,QWORD PTR [RBX]
            mov RCX,QWORD PTR [RAX]
            cmp RSI,RCX
            je .L_41cfb3

            test RSI,RSI
            sete R8B
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cf90:

            test RCX,RCX
            je .L_41cfa2

            test R8B,R8B
            jne .L_41cfa2

            mov EDI,DWORD PTR [RSI+8]
            cmp EDI,DWORD PTR [RCX+8]
            je .L_41cfd0
.L_41cfa2:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41d018

            mov RCX,QWORD PTR [RAX]
            cmp RCX,RSI
            jne .L_41cf90
.L_41cfb3:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41d021

            add RSP,16
.L_41cfc7:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cfd0:

            mov EBX,DWORD PTR [RCX+12]
            cmp DWORD PTR [RSI+12],EBX
            jne .L_41cfa2

            test EDI,EDI
            jle .L_41cfb3

            mov RBX,QWORD PTR [RSI]
            mov R11,QWORD PTR [RCX]
            mov ECX,DWORD PTR [R11]
            cmp DWORD PTR [RBX],ECX
            jne .L_41cfa2

            lea ECX,DWORD PTR [RDI-1]
            lea RBP,QWORD PTR [RCX*4+4]
            mov ECX,4
            jmp .L_41d00e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d000:

            mov EDI,DWORD PTR [RBX+RCX*1]
            add RCX,4
            cmp EDI,DWORD PTR [R11+RCX*1-4]
            jne .L_41cfa2
.L_41d00e:

            cmp RBP,RCX
            jne .L_41d000

            jmp .L_41cfb3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d018:

            lea RDX,QWORD PTR [R10+R9*8]
            mov RAX,QWORD PTR [RDX]
            jmp .L_41cfb3
.L_41d021:

            call __stack_chk_fail@PLT
.L_41d026:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d030:

            push R15
            push R14
            lea RAX,QWORD PTR [RDI+16]
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_41d045:

            mov BYTE PTR [RDI+16],0
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+8],RAX
            movsxd RAX,DWORD PTR [RSI]
            mov QWORD PTR [RDI+8],0
            mov RBX,QWORD PTR [RSI+16]
            shl RAX,2
            test RAX,RAX
            je .L_41d0d8

            lea RDX,QWORD PTR [RIP+.L_423659]
            mov RBP,RSI
            lea R13,QWORD PTR [RIP+.L_42365a]
            lea R14,QWORD PTR [RIP+.L_42365c]
            mov R15,RDX
            jmp .L_41d0b5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d090:

            mov RSI,R14
            mov RDI,R12
            xor EAX,EAX
.L_41d098:

            call .L_415670

            mov RDX,R15
.L_41d0a0:

            movsxd RCX,DWORD PTR [RBP]
            mov RAX,QWORD PTR [RBP+16]
            add RBX,4
            lea RAX,QWORD PTR [RAX+RCX*4]
            cmp RBX,RAX
            je .L_41d0d8
.L_41d0b5:

            mov ECX,DWORD PTR [RBX]
            cmp ECX,DWORD PTR [RBP+28]
            jge .L_41d090

            lea RSI,QWORD PTR [RIP+.L_42365e]
            mov RDI,R12
            xor EAX,EAX
            call .L_415670
.L_41d0cd:

            mov RDX,R13
            jmp .L_41d0a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d0d8:

            add RSP,24
.L_41d0dc:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41d0ea:

            mov RDI,QWORD PTR [R12]
            cmp QWORD PTR [RSP+8],RDI
            mov RBX,RAX
            je .L_41d0fd

            call _ZdlPv@PLT
.L_41d0fd:

            mov RDI,RBX
.L_41d100:

            call _Unwind_Resume@PLT
.L_41d105:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d110:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_41d121:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_41d280

            cmp RSI,1
            mov RBP,RSI
            je .L_41d2a0

            cmp RSI,2
            je .L_41d260

            mov R12,RSP
            mov RDX,RSI
            lea RSI,QWORD PTR [RIP+.L_423669]
            lea RAX,QWORD PTR [R12+16]
            mov RDI,R12
            mov QWORD PTR [RSP+8],0
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            xor EAX,EAX
.L_41d17a:

            call .L_415670

            mov EAX,DWORD PTR [RBP+8]
            test EAX,EAX
            jle .L_41d1ec

            xor EBX,EBX
            lea RDX,QWORD PTR [RIP+.L_423659]
            lea R14,QWORD PTR [RIP+.L_42365e]
            lea R15,QWORD PTR [RIP+.L_42365a]
            jmp .L_41d1bc
          .byte 0x90
.L_41d1a0:

            mov RSI,R14
            mov RDI,R12
            xor EAX,EAX
            call .L_415670

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP+8],EAX
            mov RDX,R15
            jle .L_41d1ec
.L_41d1bc:

            mov RAX,QWORD PTR [RBP]
            mov ECX,DWORD PTR [RAX+RBX*4]
            cmp ECX,-1
            jne .L_41d1a0

            lea RSI,QWORD PTR [RIP+.L_42365c]
            mov RDI,R12
            xor EAX,EAX
            call .L_415670

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP+8],EAX
            lea RDX,QWORD PTR [RIP+.L_423659]
            jg .L_41d1bc
.L_41d1ec:

            mov EDX,DWORD PTR [RBP+12]
            lea RSI,QWORD PTR [RIP+.L_42366e]
            mov RDI,R12
            xor EAX,EAX
            call .L_415670
.L_41d200:

            lea RAX,QWORD PTR [R13+16]
            add R12,16
            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP]
            cmp RAX,R12
            je .L_41d250

            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [R13+16],RAX
.L_41d222:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13+8],RAX
.L_41d22b:

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_41d2bc

            add RSP,56
.L_41d242:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d250:

            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [R13+16],XMM0
            jmp .L_41d222
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d260:

            lea RDX,QWORD PTR [RIP+.L_423668]
            lea RAX,QWORD PTR [RDI+16]
            lea RSI,QWORD PTR [RDX-1]
            mov QWORD PTR [RDI],RAX
.L_41d272:

            call .L_41ce20

            jmp .L_41d22b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d280:

            lea RDX,QWORD PTR [RIP+.L_423664]
            lea RAX,QWORD PTR [RDI+16]
            lea RSI,QWORD PTR [RDX-1]
            mov QWORD PTR [RDI],RAX
            call .L_41ce20

            jmp .L_41d22b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d2a0:

            lea RDX,QWORD PTR [RIP+.L_423666]
            lea RAX,QWORD PTR [RDI+16]
            lea RSI,QWORD PTR [RDX-1]
            mov QWORD PTR [RDI],RAX
            call .L_41ce20

            jmp .L_41d22b
.L_41d2bc:

            call __stack_chk_fail@PLT
.L_41d2c1:

            mov RDI,QWORD PTR [RSP]
            add R12,16
            mov RBX,RAX
            cmp RDI,R12
            je .L_41d2d6

            call _ZdlPv@PLT
.L_41d2d6:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41d2de:

            nop
            nop
.L_41d2e0:

            mov EAX,DWORD PTR [RSI+28]
            mov DWORD PTR [RSI],0
            mov DWORD PTR [RSI+36],EAX
            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jle .L_41d35f

            mov RCX,QWORD PTR [RDI]
            mov EAX,1
            jmp .L_41d314
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d300:

            cmp DWORD PTR [RSI+4],EDX
            mov BYTE PTR [RSI+40],0
            ja .L_41d338
.L_41d309:

            mov EDX,EAX
            add RAX,1
            cmp DWORD PTR [RDI+8],EDX
            jle .L_41d35f
.L_41d314:

            mov EDX,DWORD PTR [RCX+RAX*4-4]
            cmp EDX,-1
            jne .L_41d300

            cmp BYTE PTR [RSI+40],0
            jne .L_41d309

            mov EDX,DWORD PTR [RSI+36]
            cmp DWORD PTR [RSI+4],EDX
            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RSI+36],R8D
            jbe .L_41d309

            nop
            nop
            nop
            nop
            nop
.L_41d338:

            mov R10D,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+8]
            movsxd R9,EDX
            mov DWORD PTR [R8+R9*4],R10D
            movsxd R9,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+16]
            mov DWORD PTR [R8+R9*4],EDX
            mov EDX,EAX
            add DWORD PTR [RSI],1
            add RAX,1
            cmp DWORD PTR [RDI+8],EDX
            jg .L_41d314
.L_41d35f:

            ret 
.L_41d361:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d370:

            mov R11,QWORD PTR [RDI+96]
            mov R8D,1
            cmp EDX,-1
            push R13
            lea EAX,DWORD PTR [R8-1]
            push R12
            push RBP
            lea RBP,QWORD PTR [RIP+.L_423708]
            push RBX
.L_41d38e:

            mov DWORD PTR [R11],EDX
            je .L_41d45a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d3a0:

            test EDX,EDX
            je .L_41d460

            cmp DWORD PTR [RSI+4],EDX
            movsxd R9,EDX
            jbe .L_41d4a0

            mov R10,QWORD PTR [RSI+8]
            mov R12D,DWORD PTR [RSI]
            mov R13,QWORD PTR [RSI+16]
            lea RBX,QWORD PTR [R10+R9*4]
            movsxd R10,DWORD PTR [RBX]
            cmp R10D,R12D
            jae .L_41d3d6

            cmp DWORD PTR [R13+R10*4],EDX
            je .L_41d460
.L_41d3d6:

            mov BYTE PTR [RSI+40],0
            mov DWORD PTR [RBX],R12D
            movsxd R10,DWORD PTR [RSI]
            mov DWORD PTR [R13+R10*4],EDX
            add DWORD PTR [RSI],1
.L_41d3e8:

            mov RBX,QWORD PTR [RDI]
            movsxd R10,EAX
            shl R10,2
            lea R13,QWORD PTR [R11+R10*1]
            mov RBX,QWORD PTR [RBX+32]
            lea R12,QWORD PTR [RBX+R9*8]
            mov EBX,DWORD PTR [R12]
            mov R9D,EBX
            and R9D,7
            cmp R9D,6
            ja .L_41d460

            movsxd R9,DWORD PTR [RBP+R9*4]
            add R9,RBP
            jmp R9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d420:

            mov EDX,DWORD PTR [R12+4]
            mov R9D,ECX
            and R9D,EDX
            cmp R9D,EDX
            jne .L_41d460
.L_41d430:

            shr EBX,3
            mov EAX,R8D
            mov DWORD PTR [R13],EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d440:

            lea EDX,DWORD PTR [RAX-1]
            mov R8D,EAX
            lea EAX,DWORD PTR [R8-1]
            movsxd RDX,EDX
            mov EDX,DWORD PTR [R11+RDX*4]
            cmp EDX,-1
            jne .L_41d3a0
.L_41d45a:

            cmp BYTE PTR [RSI+40],0
            je .L_41d4b0
.L_41d460:

            test EAX,EAX
            jne .L_41d440
.L_41d464:

            pop RBX
.L_41d465:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d470:

            mov EAX,DWORD PTR [R12+4]
            lea R9,QWORD PTR [R11+R10*1+4]
            mov DWORD PTR [R13],EAX
            mov EBX,DWORD PTR [RSI+32]
            lea EAX,DWORD PTR [R8+1]
            test EBX,EBX
            jle .L_41d491

            mov RBX,QWORD PTR [RDI]
            cmp DWORD PTR [RBX+8],EDX
            je .L_41d4f0
.L_41d491:

            mov EDX,DWORD PTR [R12]
            shr EDX,3
            mov DWORD PTR [R9],EDX
            jmp .L_41d440
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d4a0:

            mov BYTE PTR [RSI+40],0
            jmp .L_41d3e8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d4b0:

            mov EDX,DWORD PTR [RSI+36]
            cmp DWORD PTR [RSI+4],EDX
            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RSI+36],R8D
            jbe .L_41d460

            mov R10D,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+8]
            movsxd R9,EDX
            mov DWORD PTR [R8+R9*4],R10D
            movsxd R9,DWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+16]
            mov DWORD PTR [R8+R9*4],EDX
            add DWORD PTR [RSI],1
            test EAX,EAX
            jne .L_41d440

            jmp .L_41d464
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d4f0:

            cmp DWORD PTR [RBX+4],EDX
            je .L_41d491

            mov DWORD PTR [R9],4294967295
            lea EAX,DWORD PTR [R8+2]
            lea R9,QWORD PTR [R11+R10*1+8]
            jmp .L_41d491
.L_41d507:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d510:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41d51a:

            mov EAX,DWORD PTR [RDX+28]
            mov DWORD PTR [RDX],0
            mov RBX,QWORD PTR [RSI+16]
            mov DWORD PTR [RDX+36],EAX
            movsxd RAX,DWORD PTR [RSI]
            shl RAX,2
            test RAX,RAX
            je .L_41d590

            mov R14D,ECX
            mov R12,RDX
            mov RBP,RSI
            mov R13,RDI
            mov R15D,4294967295
            jmp .L_41d573
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d550:

            mov EDX,R15D
            mov RSI,R12
            mov RDI,R13
            call .L_41d370
.L_41d55e:

            movsxd RDX,DWORD PTR [RBP]
            mov RAX,QWORD PTR [RBP+16]
            add RBX,4
            lea RAX,QWORD PTR [RAX+RDX*4]
            cmp RBX,RAX
            je .L_41d590
.L_41d573:

            mov EDX,DWORD PTR [RBX]
            cmp EDX,DWORD PTR [RBP+28]
            mov ECX,R14D
            jge .L_41d550

            mov RSI,R12
            mov RDI,R13
            call .L_41d370

            jmp .L_41d55e

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d590:

            pop RBX
.L_41d591:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41d59b:

            nop
            nop
            nop
            nop
            nop
.L_41d5a0:

            mov EAX,DWORD PTR [RDX+28]
            mov DWORD PTR [RDX],0
            mov R11,QWORD PTR [RSI+16]
            mov DWORD PTR [RDX+36],EAX
            movsxd RAX,DWORD PTR [RSI]
            mov R10,RAX
            shl RAX,2
            test RAX,RAX
            je .L_41d720

            push R15
            push R14
            lea R15D,DWORD PTR [RCX-65]
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDX
            mov RBX,R11
            mov RBP,RSI
            mov R14,RDI
            sub RSP,16
.L_41d5e4:

            movsxd RAX,DWORD PTR [RBX]
            cmp EAX,DWORD PTR [RBP+28]
            jl .L_41d608

            cmp BYTE PTR [R9],0
            je .L_41d660
.L_41d5f2:

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d608:

            mov RSI,QWORD PTR [R14]
            mov RDX,QWORD PTR [RSI+32]
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov EDX,DWORD PTR [RAX]
            mov ECX,EDX
            and ECX,7
            cmp ECX,2
            je .L_41d6c0

            cmp ECX,5
            jne .L_41d648

            cmp BYTE PTR [RSI+1],0
            je .L_41d637

            cmp R13D,256
            jne .L_41d648
.L_41d637:

            mov EAX,DWORD PTR [RSP+72]
            mov BYTE PTR [R9],1
            test EAX,EAX
            je .L_41d5f2

            nop
            nop
            nop
            nop
            nop
.L_41d648:

            movsxd RAX,R10D
            add RBX,4
            lea RAX,QWORD PTR [R11+RAX*4]
            cmp RBX,RAX
            jne .L_41d5e4

            jmp .L_41d5f2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d660:

            cmp BYTE PTR [R12+40],0
            jne .L_41d648

            mov EAX,DWORD PTR [R12+36]
            cmp DWORD PTR [R12+4],EAX
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [R12+36],EDX
            jbe .L_41d69c

            mov ESI,DWORD PTR [R12]
            mov RDX,QWORD PTR [R12+8]
            movsxd RCX,EAX
            mov DWORD PTR [RDX+RCX*4],ESI
            movsxd RCX,DWORD PTR [R12]
            mov RDX,QWORD PTR [R12+16]
            mov DWORD PTR [RDX+RCX*4],EAX
            add DWORD PTR [R12],1
.L_41d69c:

            mov R10D,DWORD PTR [RBP]
            add RBX,4
            movsxd RAX,R10D
            lea RAX,QWORD PTR [R11+RAX*4]
            cmp RBX,RAX
            jne .L_41d5e4

            jmp .L_41d5f2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d6c0:

            cmp BYTE PTR [RAX+6],0
            movzx ESI,BYTE PTR [RAX+4]
            mov ECX,R13D
            je .L_41d6d9

            lea ECX,DWORD PTR [R13+32]
            cmp R15D,26
            cmovae ECX,R13D
.L_41d6d9:

            cmp ESI,ECX
            jg .L_41d648

            movzx EAX,BYTE PTR [RAX+5]
            cmp ECX,EAX
            jg .L_41d648

            mov ECX,R8D
            shr EDX,3
            mov RSI,R12
            mov RDI,R14
            mov QWORD PTR [RSP+8],R9
            mov DWORD PTR [RSP+4],R8D
            call .L_41d370

            mov R11,QWORD PTR [RBP+16]
            mov R10D,DWORD PTR [RBP]
            mov R8D,DWORD PTR [RSP+4]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_41d648
          .byte 0x90
.L_41d720:

            ret 
.L_41d722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d730:

            sub RSP,8
            mov QWORD PTR [RDI],RSI
            mov BYTE PTR [RDI+8],0
            mov RDI,RSI
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            jne .L_41d74c

            add RSP,8
            ret 
.L_41d74c:

            call abort@PLT
.L_41d751:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d760:

            cmp BYTE PTR [RDI+8],0
            je .L_41d770

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d770:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_41d792

            mov RDI,QWORD PTR [RBX]
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_41d792

            mov BYTE PTR [RBX+8],1
            pop RBX
            ret 
.L_41d792:

            call abort@PLT
.L_41d797:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d7a0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_41d7b5

            add RSP,8
            ret 
.L_41d7b5:

            call abort@PLT
.L_41d7ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d7c0:

            cmp RDX,2
            mov QWORD PTR [RDI],RSI
            jbe .L_41d828

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RDX
            sub RSP,8
.L_41d7d5:

            mov EAX,DWORD PTR [RDX+12]
            mov BYTE PTR [RDI+24],0
            mov QWORD PTR [RDI+32],0
            mov DWORD PTR [RDI+20],EAX
            movsxd RDI,DWORD PTR [RDX+8]
            movabs RAX,2305843009213693950
            cmp RDI,RAX
            mov DWORD PTR [RBX+16],EDI
            ja .L_41d841

            shl RDI,2
            call _Znam@PLT

            movsxd RDX,DWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            mov RDI,RAX
            mov RSI,QWORD PTR [RBP]
            add RSP,8
.L_41d819:

            pop RBX
            pop RBP
            shl RDX,2
            jmp memmove@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d828:

            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov BYTE PTR [RDI+24],1
            mov QWORD PTR [RDI+32],RDX
            ret 
.L_41d841:

            call __cxa_throw_bad_array_new_length@PLT
.L_41d846:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d850:

            cmp BYTE PTR [RDI+24],0
            jne .L_41d860

            jmp .L_41ccb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d860:

            ret 
.L_41d862:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d870:

            mov EAX,DWORD PTR [RSI+48]
            movzx EDX,BYTE PTR [RSI+33]
            not EAX
            shr EAX,31
            lea EDX,DWORD PTR [RDX+RAX*2]
            movzx EAX,BYTE PTR [RSI+34]
            lea EAX,DWORD PTR [RAX+RDX*2]
            lea RDX,QWORD PTR [RIP+.L_647000]
            cdqe 
            shl RAX,4
            add RAX,RDX
            add RDI,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
            test AL,1
            je .L_41d8a9

            mov RDX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDX+RAX*1-1]
.L_41d8a9:

            jmp RAX
.L_41d8ab:

            nop
            nop
            nop
            nop
            nop
.L_41d8b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RCX
            sub RSP,568
.L_41d8ca:

            mov QWORD PTR [RDI],RSI
            mov DWORD PTR [RDI+8],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+24]
            mov BYTE PTR [RDI+16],0
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            call pthread_rwlock_init@PLT

            test EAX,EAX
            jne .L_41e80c

            lea RAX,QWORD PTR [RBX+112]
            xor ESI,ESI
            mov QWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+96],0
            mov RDI,RAX
            mov QWORD PTR [RSP+56],RAX
            call pthread_rwlock_init@PLT

            test EAX,EAX
            mov R12D,EAX
            jne .L_41e80c

            movabs RAX,4611686019492741120
            lea RDI,QWORD PTR [RIP+_ZNSt3tr18__detail12__prime_listE]
            mov QWORD PTR [RBX+168],RBP
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+208],0
            mov EDX,303
            mov QWORD PTR [RBX+216],RAX
            mov QWORD PTR [RBX+224],0
.L_41d97d:

            mov RAX,RDX
            sar RAX,1
            lea RSI,QWORD PTR [RDI+RAX*8]
            cmp QWORD PTR [RSI],9
            ja .L_41d9af

            jmp .L_41ddb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d998:

            mov RCX,RAX
            sar RCX,1
            lea RSI,QWORD PTR [RDI+RCX*8]
            cmp QWORD PTR [RSI],9
            jbe .L_41ddc0

            mov RAX,RCX
.L_41d9af:

            test RAX,RAX
            jne .L_41d998

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            js .L_41dde0
.L_41d9c0:

            pxor XMM0,XMM0
            cvtsi2ss XMM0,RAX
            ucomiss XMM0,DWORD PTR [RIP+.L_4255d4]
            jae .L_41de06
.L_41d9d6:

            cvttss2si RAX,XMM0
            mov QWORD PTR [RBX+224],RAX
.L_41d9e2:

            mov RDI,QWORD PTR [RDI]
            mov QWORD PTR [RBX+200],RDI
.L_41d9ec:

            call .L_41cd20
.L_41d9f1:

            mov QWORD PTR [RBX+192],RAX
            lea RDX,QWORD PTR [RBX+360]
            lea RAX,QWORD PTR [RBX+232]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41da10:

            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],4294967295
            add RAX,16
            cmp RDX,RAX
            jne .L_41da10

            xor EDI,EDI
            xor EAX,EAX
            cmp DWORD PTR [RBX+8],1
            mov BYTE PTR [RBX+360],0
            mov DWORD PTR [RBX+12],0
            jne .L_41da4f

            movsxd RDI,DWORD PTR [R13+12]
            mov EAX,DWORD PTR [R13+8]
            mov DWORD PTR [RBX+12],EAX
            mov R12,RDI
            mov EAX,EDI
.L_41da4f:

            mov EDX,DWORD PTR [R13+12]
            mov RSI,QWORD PTR [RBX]
            lea EDX,DWORD PTR [RAX+RDX*2]
            mov RAX,QWORD PTR [RBX+168]
            mov DWORD PTR [RBX+104],EDX
            movsxd RDX,EDX
            sub RAX,368
            shl RDX,2
            mov QWORD PTR [RBX+168],RAX
            movsxd RCX,DWORD PTR [RSI+12]
            add RCX,RDI
            shl RCX,4
            sub RAX,RCX
            sub RAX,RDX
            test RAX,RAX
            mov QWORD PTR [RBX+168],RAX
            js .L_41dfb8

            mov QWORD PTR [RBX+176],RAX
            movsxd RCX,DWORD PTR [RSI+12]
            mov EDX,DWORD PTR [RSI+20]
            add EDX,1
            add RDI,RCX
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RDI+RDX*2+6]
            mov RCX,RDX
            shl RCX,4
            lea RDX,QWORD PTR [RCX+RDX*4]
            shl RDX,2
            cmp RAX,RDX
            jge .L_41de30

            lea R12,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RDI],R15
.L_41db6a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41db6f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41dc44:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41dc49:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_41dc5a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,474
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41dc98:

            mov RAX,QWORD PTR [RBX]
            lea R14,QWORD PTR [RSP+128]
            lea RSI,QWORD PTR [RIP+.L_423588]
            mov RCX,RBP
            mov RDI,R14
            movsxd RDX,DWORD PTR [RAX+12]
            xor EAX,EAX
.L_41dcb6:

            call .L_4154c0
.L_41dcbb:

            mov RDX,QWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R12+8]
.L_41dcd0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41dcd5:

            mov RDI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_41dceb

            call _ZdlPv@PLT
.L_41dceb:

            cmp BYTE PTR [RSP+160],0
            je .L_41e2e8
.L_41dcf9:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+280],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_41dd37

            call _ZdlPv@PLT
.L_41dd37:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+168],R13
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+RAX*1+168],R15
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBX+16],1
.L_41dd7d:

            mov RAX,QWORD PTR [RSP+552]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e7cf

            add RSP,568
.L_41dd9b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ddb0:

            mov RCX,RAX
            mov RAX,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ddc0:

            sub RAX,RCX
            lea RDI,QWORD PTR [RSI+8]
            lea RDX,QWORD PTR [RAX-1]
            test RDX,RDX
            jg .L_41d97d

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            jns .L_41d9c0
.L_41dde0:

            mov RDX,RAX
            pxor XMM0,XMM0
            shr RDX,1
            and EAX,1
            or RDX,RAX
            cvtsi2ss XMM0,RDX
            addss XMM0,XMM0
            ucomiss XMM0,DWORD PTR [RIP+.L_4255d4]
            jb .L_41d9d6
.L_41de06:

            subss XMM0,DWORD PTR [RIP+.L_4255d4]
            cvttss2si RAX,XMM0
            mov QWORD PTR [RBX+224],RAX
            movabs RAX,-9223372036854775808
            xor QWORD PTR [RBX+224],RAX
            jmp .L_41d9e2
.L_41de30:

            mov EDI,48
            mov R14D,DWORD PTR [R13+12]
.L_41de39:

            call _Znwm@PLT
.L_41de3e:

            lea R15D,DWORD PTR [R12+R14*1]
            mov RBP,RAX
            movabs RDX,2305843009213693950
            mov DWORD PTR [RAX+4],R15D
            movsxd RAX,R15D
            cmp RAX,RDX
            ja .L_41e819

            shl RAX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_41de6b:

            call _Znam@PLT

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RBP+16],RAX
            call .L_43e090
.L_41de87:

            test EAX,EAX
            setne BYTE PTR [RBP+24]
            je .L_41dec7

            test R15D,R15D
            jle .L_41dec7

            lea EAX,DWORD PTR [R15-1]
            mov RSI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41deb0:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_41deb0
.L_41dec7:

            mov DWORD PTR [RBP+28],R14D
            mov DWORD PTR [RBP+36],R14D
            mov EDI,48
            mov QWORD PTR [RBX+80],RBP
            mov DWORD PTR [RBP],0
            mov DWORD PTR [RBP+32],R12D
            mov BYTE PTR [RBP+40],1
            mov R14D,DWORD PTR [R13+12]
.L_41deeb:

            call _Znwm@PLT
.L_41def0:

            lea R15D,DWORD PTR [R12+R14*1]
            mov RBP,RAX
            mov DWORD PTR [RAX+4],R15D
            movsxd R13,R15D
            movabs RAX,2305843009213693950
            cmp R13,RAX
            ja .L_41e7d4

            shl R13,2
            mov RDI,R13
.L_41df18:

            call _Znam@PLT

            mov QWORD PTR [RBP+8],RAX
            mov RDI,R13
            call _Znam@PLT

            mov QWORD PTR [RBP+16],RAX
            call .L_43e090
.L_41df32:

            test EAX,EAX
            setne BYTE PTR [RBP+24]
            je .L_41df6f

            test R15D,R15D
            jle .L_41df6f

            lea EAX,DWORD PTR [R15-1]
            mov RSI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
.L_41df58:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_41df58
.L_41df6f:

            movsxd RDI,DWORD PTR [RBX+104]
            movabs RAX,2305843009213693950
            mov DWORD PTR [RBP],0
            mov DWORD PTR [RBP+28],R14D
            mov DWORD PTR [RBP+32],R12D
            mov DWORD PTR [RBP+36],R14D
            mov BYTE PTR [RBP+40],1
            mov QWORD PTR [RBX+88],RBP
            cmp RDI,RAX
            ja .L_41e82b

            shl RDI,2
.L_41dfa5:

            call _Znam@PLT
.L_41dfaa:

            mov QWORD PTR [RBX+96],RAX
            jmp .L_41dd7d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dfb8:

            lea R12,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+504],0
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+496],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13-24]
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RDI],R15
.L_41e056:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41e05b:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+168],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+280],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_41e130:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41e135:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_41e146:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,459
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41e184:

            mov RAX,QWORD PTR [RBX]
            lea R14,QWORD PTR [RSP+128]
            lea RSI,QWORD PTR [RIP+.L_423588]
            mov RCX,RBP
            mov RDI,R14
            movsxd RDX,DWORD PTR [RAX+12]
            xor EAX,EAX
.L_41e1a2:

            call .L_4154c0
.L_41e1a7:

            mov RDX,QWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R12+8]
.L_41e1bc:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41e1c1:

            mov RDI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_41e1d7

            call _ZdlPv@PLT
.L_41e1d7:

            cmp BYTE PTR [RSP+160],0
            jne .L_41dcf9

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            lea RBP,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_41e5e8

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_41e4aa

            lea R14,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+96],RAX
.L_41e252:

            call .L_41ce20
.L_41e257:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_41e64e

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41e67f

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41e68e

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41e2ac:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R14
            je .L_41e2cb
.L_41e2c6:

            call _ZdlPv@PLT
.L_41e2cb:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41e2da:

            call write@PLT
.L_41e2df:

            jmp .L_41e486

            nop
            nop
            nop
            nop
.L_41e2e8:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            lea RBP,QWORD PTR [RSP+64]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_41e5b6

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            jbe .L_41e3e8

            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41e356:

            call .L_41ce20

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_41e57f

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_41e5c8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41e5d7

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_41e3bf:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R14
            jne .L_41e46d

            jmp .L_41e472
.L_41e3e8:

            lea R14,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+96],RAX
            call .L_41ce20
.L_41e3fe:

            mov RSI,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            cmp RSI,RAX
            je .L_41e54e

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+112]
            cmp RDI,RCX
            je .L_41e5fa

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41e609

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41e453:

            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+96]
            cmp RDI,R14
            je .L_41e472
.L_41e46d:

            call _ZdlPv@PLT
.L_41e472:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_41e481:

            call write@PLT
.L_41e486:

            mov RDI,QWORD PTR [RSP+64]
            add RBP,16
            mov BYTE PTR [RSP+160],1
            cmp RDI,RBP
            je .L_41dcf9

            call _ZdlPv@PLT

            jmp .L_41dcf9
.L_41e4aa:

            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_41e4bc:

            call .L_41ce20
.L_41e4c1:

            mov RSI,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            cmp RSI,RAX
            je .L_41e617

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+144]
            cmp RDI,RCX
            je .L_41e69c

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_41e6ab

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_41e525:

            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+128]
            cmp RDI,R14
            jne .L_41e2c6

            jmp .L_41e2cb
.L_41e54e:

            test RDX,RDX
            je .L_41e56c

            cmp RDX,1
            je .L_41e6bc

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_41e56c:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41e453
.L_41e57f:

            test RDX,RDX
            je .L_41e5a0

            cmp RDX,1
            je .L_41e6d2

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_41e5a0:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_41e3bf
.L_41e5b6:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41e5be:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41e5c3:

            jmp .L_41e472
.L_41e5c8:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41e5d7:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_41e3bf
.L_41e5e8:

            lea RSI,QWORD PTR [R12+88]
            mov RDI,RBP
.L_41e5f0:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41e5f5:

            jmp .L_41e2cb
.L_41e5fa:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41e609:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41e453
.L_41e617:

            test RDX,RDX
            je .L_41e638

            cmp RDX,1
            je .L_41e6ee

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_41e638:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_41e525
.L_41e64e:

            test RDX,RDX
            je .L_41e66c

            cmp RDX,1
            je .L_41e70a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_41e66c:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41e2ac
.L_41e67f:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41e68e:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41e2ac
.L_41e69c:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_41e6ab:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_41e525
.L_41e6bc:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41e56c
.L_41e6d2:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41e5a0
.L_41e6ee:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41e638
.L_41e70a:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41e66c
.L_41e720:

            mov RDI,QWORD PTR [RSP+64]
            add RBP,16
            cmp RDI,RBP
            je .L_41e733

            call _ZdlPv@PLT
.L_41e733:

            call _ZSt9terminatev@PLT
.L_41e738:

            mov RBP,RAX
.L_41e73b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+280],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_41e752:

            lea RDI,QWORD PTR [RBX+184]
            call .L_423730
.L_41e75e:

            mov RDI,QWORD PTR [RSP+56]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41e80c

            mov RDI,QWORD PTR [RSP+48]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41e80c

            mov RDI,RBP
.L_41e785:

            call _Unwind_Resume@PLT
.L_41e78a:

            jmp .L_41e720
.L_41e78c:

            jmp .L_41e720
.L_41e78e:

            jmp .L_41e720
.L_41e790:

            lea RDI,QWORD PTR [R12+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+168],R13
            mov QWORD PTR [RSP+RAX*1+168],R15
            jmp .L_41e73b
.L_41e7b3:

            lea RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_41e752
.L_41e7c2:

            mov RBP,RAX
.L_41e7c5:

            mov RDI,R12
            call .L_40c160

            jmp .L_41e752
.L_41e7cf:

            call __stack_chk_fail@PLT
.L_41e7d4:

            call __cxa_throw_bad_array_new_length@PLT
.L_41e7d9:

            mov RDI,QWORD PTR [RSP+128]
            add R14,16
            mov RBP,RAX
            cmp RDI,R14
            je .L_41e7c5

            call _ZdlPv@PLT

            jmp .L_41e7c5
.L_41e7f4:

            mov R12,RAX
            mov RDI,RBP
            mov ESI,48
            call _ZdlPvm@PLT

            mov RBP,R12
            jmp .L_41e752
.L_41e80c:

            call abort@PLT
.L_41e811:

            mov RBP,RAX
            jmp .L_41e752
.L_41e819:

            call __cxa_throw_bad_array_new_length@PLT
.L_41e81e:

            jmp .L_41e7f4
.L_41e820:

            jmp .L_41e790
.L_41e825:

            jmp .L_41e7b3
.L_41e827:

            jmp .L_41e7c2
.L_41e829:

            jmp .L_41e7d9
.L_41e82b:

            call __cxa_throw_bad_array_new_length@PLT
.L_41e830:

            jmp .L_41e738
.L_41e835:

            mov RBP,RAX
            jmp .L_41e75e
.L_41e83d:

            nop
            nop
            nop
.L_41e840:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ESI
            sub RSP,16
.L_41e851:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test ESI,ESI
            je .L_41e8a0

            cmp ESI,3
            je .L_41e8a0

            lea R13,QWORD PTR [RDI+104]
            mov RBX,QWORD PTR [R13]
            mov EBP,1
            test RBX,RBX
            je .L_41e8ae
.L_41e87c:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41e94e

            add RSP,16
.L_41e897:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41e8a0:

            lea R13,QWORD PTR [R12+96]
            mov RBX,QWORD PTR [R13]
            test RBX,RBX
            jne .L_41e87c
.L_41e8ae:

            lea RDI,QWORD PTR [R12+40]
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_41e8d6

            mov RBX,QWORD PTR [R13]
            test RBX,RBX
            je .L_41e8e0

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_41e87c
.L_41e8d6:

            call abort@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e8e0:

            cmp BYTE PTR [R12+2],0
            mov R14,QWORD PTR [R12+112]
            jne .L_41e940

            mov RAX,R14
            shr RAX,63
            add R14,RAX
            sar R14,1
.L_41e8fa:

            mov EDI,368
.L_41e8ff:

            call _Znwm@PLT
.L_41e904:

            mov RCX,R14
            mov EDX,EBP
            mov RSI,R12
            mov RDI,RAX
            mov RBX,RAX
.L_41e912:

            call .L_41d8b0
.L_41e917:

            lea RAX,QWORD PTR [RIP+.L_41ec60]
            mov QWORD PTR [R12+120],RAX
            mov QWORD PTR [R13],RBX
            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_41e87c

            jmp .L_41e8d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e940:

            mov EAX,EBP
            and EAX,4294967293
            cmp EAX,1
            cmovne R14,RBX
            jmp .L_41e8fa
.L_41e94e:

            call __stack_chk_fail@PLT
.L_41e953:

            mov ESI,368
            mov RDI,RBX
            mov RBP,RAX
            call _ZdlPvm@PLT
.L_41e963:

            mov RDI,RSP
            call .L_40c4d0

            mov RDI,RBP
.L_41e96e:

            call _Unwind_Resume@PLT
.L_41e973:

            mov RBP,RAX
            jmp .L_41e963
.L_41e978:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e980:

            push R13
            push R12
            movabs RDX,2305843009213693951
            push RBP
            push RBX
            sub RSP,40
.L_41e994:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+208]
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            cmp RAX,RDX
            ja .L_41eb8b

            test RAX,RAX
            mov RBP,RDI
            jne .L_41eb00
.L_41e9da:

            mov RDI,QWORD PTR [RBP+192]
            mov RBX,QWORD PTR [RDI]
            mov R12,RDI
            test RBX,RBX
            je .L_41eb40
.L_41e9f0:

            mov RCX,QWORD PTR [RBP+200]
            mov R13,RSP
            mov RDX,QWORD PTR [RDI+RCX*8]
            jmp .L_41ea1d
.L_41ea00:

            test RSI,RSI
            je .L_41ea0b

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RSI],RAX
.L_41ea0b:

            mov RBX,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSP+8],RAX
            test RBX,RBX
            je .L_41ea58
.L_41ea1d:

            cmp RBX,RDX
            je .L_41ea88
.L_41ea22:

            mov RSI,QWORD PTR [RSP+8]
            cmp RSI,QWORD PTR [RSP+16]
            jne .L_41ea00

            mov RDX,RBX
            mov RDI,R13
.L_41ea34:

            call .L_423760

            mov RBX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBP+192]
            mov RCX,QWORD PTR [RBP+200]
            test RBX,RBX
            mov RDX,QWORD PTR [RDI+RCX*8]
            jne .L_41ea1d

            nop
            nop
            nop
            nop
.L_41ea58:

            mov RBX,QWORD PTR [R12+8]
            lea RAX,QWORD PTR [R12+8]
            test RBX,RBX
            jne .L_41ea7c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ea70:

            add RAX,8
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_41ea70
.L_41ea7c:

            cmp RBX,RDX
            mov R12,RAX
            jne .L_41ea22

            nop
            nop
            nop
            nop
.L_41ea88:

            mov RSI,RCX
            call .L_41ccd0

            mov RDX,QWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RBP+208],0
            je .L_41ead7

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41eab0:

            mov RDI,QWORD PTR [RDX+RBX*8]
            test RDI,RDI
            je .L_41eac2

            call _ZdaPv@PLT

            mov RDX,QWORD PTR [RSP]
.L_41eac2:

            mov RAX,QWORD PTR [RSP+8]
            add RBX,1
            sub RAX,RDX
            sar RAX,3
            cmp RBX,RAX
            jb .L_41eab0
.L_41ead7:

            test RDX,RDX
            je .L_41eae4

            mov RDI,RDX
            call _ZdlPv@PLT
.L_41eae4:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41eb6d

            add RSP,40
.L_41eaf8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41eb00:

            lea RBX,QWORD PTR [RAX*8]
            mov RDI,RBX
            call _Znwm@PLT
.L_41eb10:

            mov RDI,QWORD PTR [RSP]
            mov R12,RAX
            test RDI,RDI
            je .L_41eb21

            call _ZdlPv@PLT
.L_41eb21:

            lea RAX,QWORD PTR [R12+RBX*1]
            mov QWORD PTR [RSP],R12
            mov QWORD PTR [RSP+8],R12
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41e9da
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eb40:

            mov RBX,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [RDI+8]
            test RBX,RBX
            jne .L_41e9f0

            lea RAX,QWORD PTR [RDI+16]
            nop
            nop
            nop
.L_41eb58:

            mov R12,RAX
            add RAX,8
            mov RBX,QWORD PTR [RAX-8]
            test RBX,RBX
            je .L_41eb58

            jmp .L_41e9f0
.L_41eb6d:

            call __stack_chk_fail@PLT
.L_41eb72:

            mov RDI,QWORD PTR [RSP]
            mov RBX,RAX
            test RDI,RDI
            je .L_41eb83

            call _ZdlPv@PLT
.L_41eb83:

            mov RDI,RBX
.L_41eb86:

            call _Unwind_Resume@PLT
.L_41eb8b:

            lea RDI,QWORD PTR [RIP+.L_423688]
.L_41eb92:

            call _ZSt20__throw_length_errorPKc@PLT
.L_41eb97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41eba0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_41eba9:

            mov RBP,QWORD PTR [RDI+80]
            test RBP,RBP
            je .L_41ebdb

            mov RDI,QWORD PTR [RBP+8]
            test RDI,RDI
            je .L_41ebc0

            call _ZdaPv@PLT
.L_41ebc0:

            mov RDI,QWORD PTR [RBP+16]
            test RDI,RDI
            je .L_41ebce

            call _ZdaPv@PLT
.L_41ebce:

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_41ebdb:

            mov RBP,QWORD PTR [RBX+88]
            test RBP,RBP
            je .L_41ec0d

            mov RDI,QWORD PTR [RBP+8]
            test RDI,RDI
            je .L_41ebf2

            call _ZdaPv@PLT
.L_41ebf2:

            mov RDI,QWORD PTR [RBP+16]
            test RDI,RDI
            je .L_41ec00

            call _ZdaPv@PLT
.L_41ec00:

            mov ESI,48
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_41ec0d:

            mov RDI,QWORD PTR [RBX+96]
            test RDI,RDI
            je .L_41ec1b

            call _ZdaPv@PLT
.L_41ec1b:

            mov RDI,RBX
            call .L_41e980

            lea RDI,QWORD PTR [RBX+184]
            call .L_423730

            lea RDI,QWORD PTR [RBX+112]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41ec50

            lea RDI,QWORD PTR [RBX+24]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_41ec50

            add RSP,8
.L_41ec4d:

            pop RBX
            pop RBP
            ret 
.L_41ec50:

            call abort@PLT
.L_41ec55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ec60:

            test RDI,RDI
            je .L_41ec80

            push RBX
            mov RBX,RDI
            call .L_41eba0

            mov RDI,RBX
            mov ESI,368
            pop RBX
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ec80:

            ret 
.L_41ec82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ec90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,520
.L_41eca7:

            movzx EBP,BYTE PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            call .L_41d760

            test BPL,BPL
            je .L_41ecd1

            cmp BYTE PTR [RBX+360],0
            je .L_41ed50
.L_41ecd1:

            lea RCX,QWORD PTR [RBX+232]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ece0:

            movsxd RAX,EDX
            add EDX,1
            mov QWORD PTR [RCX],0
            add RAX,14
            add RCX,16
            shl RAX,4
            add RAX,RBX
            cmp EDX,8
            mov DWORD PTR [RAX+16],4294967295
            jne .L_41ece0

            mov RDI,RBX
.L_41ed0b:

            call .L_41e980
.L_41ed10:

            mov RAX,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+168],RAX
            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41f2f8

            add RSP,520
.L_41ed3c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ed50:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41ede0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41ede5:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_41ee9f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41eea4:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_41eeb4:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,1154
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41eef0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4235b8]
            mov EDX,37
.L_41ef00:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423698]
            mov EDX,14
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RSI,QWORD PTR [RBX+208]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSo9_M_insertImEERSoT_@PLT

            lea RSI,QWORD PTR [RIP+.L_4236a7]
            mov EDX,8
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41ef3e:

            cmp BYTE PTR [RSP+112],0
            je .L_41efc2
.L_41ef45:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_41ef77

            call _ZdlPv@PLT
.L_41ef77:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBX+360],1
            jmp .L_41ecd1
.L_41efc2:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_41f196

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_41f0f5

            lea RDI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+48],RAX
.L_41f035:

            call .L_41ce20
.L_41f03a:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RAX,16
            cmp RSI,RAX
            je .L_41f1a8

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_41f206

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41f215

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_41f098:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_41f0bc
.L_41f0b7:

            call _ZdlPv@PLT
.L_41f0bc:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_41f0cb:

            call write@PLT
.L_41f0d0:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_41ef45

            call _ZdlPv@PLT

            jmp .L_41ef45
.L_41f0f5:

            lea RDI,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_41f10b:

            call .L_41ce20

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RAX,16
            cmp RSI,RAX
            je .L_41f1d9

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_41f228

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_41f237

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_41f16e:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_41f0b7

            jmp .L_41f0bc
.L_41f196:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41f1a3:

            jmp .L_41f0bc
.L_41f1a8:

            test RDX,RDX
            je .L_41f1c6

            cmp RDX,1
            je .L_41f25d

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_41f1c6:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_41f098
.L_41f1d9:

            test RDX,RDX
            je .L_41f1f3

            cmp RDX,1
            je .L_41f24a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_41f1f3:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_41f16e
.L_41f206:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41f215:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_41f098
.L_41f228:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_41f237:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_41f16e
.L_41f24a:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41f1f3
.L_41f25d:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41f1c6
.L_41f273:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
.L_41f281:

            call _Unwind_Resume@PLT
.L_41f286:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_41f29d

            call _ZdlPv@PLT
.L_41f29d:

            call _ZSt9terminatev@PLT
.L_41f2a2:

            jmp .L_41f286
.L_41f2a4:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41f2b8:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
.L_41f2da:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41f2f3:

            mov RBX,RAX
            jmp .L_41f2da
.L_41f2f8:

            call __stack_chk_fail@PLT
.L_41f2fd:

            nop
            nop
            nop
.L_41f300:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov RBX,RDI
            mov R15D,ECX
            sub RSP,104
.L_41f31a:

            lea R13,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+32],RSI
            lea RSI,QWORD PTR [RDI+200]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+40],EDX
            add RDI,192
            mov RDX,R13
            mov DWORD PTR [RSP+44],ECX
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+64],RAX
            call .L_41cef0

            mov RCX,QWORD PTR [RBX+200]
            mov RDX,QWORD PTR [RBX+192]
            cmp QWORD PTR [RDX+RCX*8],RAX
            je .L_41f3a0

            mov RAX,QWORD PTR [RAX]
.L_41f37c:

            mov RSI,QWORD PTR [RSP+88]
            xor RSI,QWORD PTR FS:[40]
            jne .L_41f46a

            add RSP,104
.L_41f394:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41f3a0:

            mov RAX,QWORD PTR [RBX]
            movsxd R8,R12D
            mov RDX,QWORD PTR [RBX+168]
            mov EBP,DWORD PTR [RAX+20]
            add EBP,1
            movsxd RBP,EBP
            lea RDI,QWORD PTR [R8+RBP*2+6]
            shl EDI,2
            lea EAX,DWORD PTR [RDI+32]
            cdqe 
            cmp RDX,RAX
            jl .L_41f458

            sub RDX,RAX
            movsxd RDI,EDI
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RBX+168],RDX
            call _Znam@PLT

            lea RDX,QWORD PTR [RBP*8]
            lea RDI,QWORD PTR [RAX+24]
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP],RAX
            lea RBP,QWORD PTR [RDI+RDX*1]
            mov QWORD PTR [RAX+16],RDI
            mov QWORD PTR [RAX],RBP
            call memset@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,RBP
            lea RDX,QWORD PTR [R8*4]
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RSP+24]
            sub RSP,8
.L_41f42f:

            lea RSI,QWORD PTR [RBX+184]
            mov RDI,R13
            mov DWORD PTR [RCX+8],R12D
            mov DWORD PTR [RCX+12],R15D
            push 0
            call .L_423f20

            mov RAX,QWORD PTR [RSP+40]
            pop RDX
            pop RCX
            jmp .L_41f37c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f458:

            mov QWORD PTR [RBX+168],-1
            xor EAX,EAX
            jmp .L_41f37c
.L_41f46a:

            call __stack_chk_fail@PLT
.L_41f46f:

            nop
.L_41f470:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,536
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+24],0
            je .L_41f4d0

            mov RBX,QWORD PTR [RDI+32]
.L_41f4a1:

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41fa2f

            add RSP,536
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f4d0:

            mov RAX,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RAX+24]
            mov QWORD PTR [RSP+24],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_41f50d

            mov ECX,DWORD PTR [RBX+20]
            mov EDX,DWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX]
.L_41f4f2:

            call .L_41f300
.L_41f4f7:

            test RAX,RAX
            mov RBX,RAX
            je .L_41f518
.L_41f4ff:

            mov RDI,QWORD PTR [RSP+24]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_41f4a1
.L_41f50d:

            call abort@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f518:

            lea RBP,QWORD PTR [RSP+128]
            mov BYTE PTR [RSP+128],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_41f5b1:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41f5b6:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_41f673:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_41f678:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_41f688:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,1237
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41f6c4:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4235e0]
            mov EDX,35
.L_41f6d4:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_41f6d9:

            cmp BYTE PTR [RSP+128],0
            je .L_41f770
.L_41f6e7:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_41f71c

            call _ZdlPv@PLT
.L_41f71c:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RDX
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_41f4ff
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f770:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_41f952

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            jbe .L_41f8b0

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_41f7ea:

            call .L_41ce20
.L_41f7ef:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41f964

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_41f9c2

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_41f9d1

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_41f84d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_41f871
.L_41f86c:

            call _ZdlPv@PLT
.L_41f871:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_41f880:

            call write@PLT
.L_41f885:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_41f6e7

            call _ZdlPv@PLT

            jmp .L_41f6e7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f8b0:

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+8],RCX
.L_41f8c7:

            call .L_41ce20

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_41f995

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_41f9e4

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_41f9f3

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_41f92a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            jne .L_41f86c

            jmp .L_41f871
.L_41f952:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_41f95f:

            jmp .L_41f871
.L_41f964:

            test RDX,RDX
            je .L_41f982

            cmp RDX,1
            je .L_41fa19

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_41f982:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_41f84d
.L_41f995:

            test RDX,RDX
            je .L_41f9af

            cmp RDX,1
            je .L_41fa06

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_41f9af:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41f92a
.L_41f9c2:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_41f9d1:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_41f84d
.L_41f9e4:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_41f9f3:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_41f92a
.L_41fa06:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_41f9af
.L_41fa19:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_41f982
.L_41fa2f:

            call __stack_chk_fail@PLT
.L_41fa34:

            mov RBX,RAX
.L_41fa37:

            lea RDI,QWORD PTR [RSP+24]
            call .L_40c4d0

            mov RDI,RBX
.L_41fa44:

            call _Unwind_Resume@PLT
.L_41fa49:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_41fa60

            call _ZdlPv@PLT
.L_41fa60:

            call _ZSt9terminatev@PLT
.L_41fa65:

            jmp .L_41fa49
.L_41fa67:

            mov RDI,RBP
            mov RBX,RAX
            call .L_40c160

            jmp .L_41fa37
.L_41fa74:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_41fa37
.L_41fa82:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RDX
.L_41faaa:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_41fa37
.L_41fac0:

            mov RBX,RAX
            jmp .L_41faaa
.L_41fac5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fad0:

            push R14
            mov R14,RDX
            mov RDX,RSI
            sub RDX,RDI
            push R13
            push R12
            cmp RDX,64
            push RBP
            push RBX
.L_41fae5:

            jle .L_41fc35

            test R14,R14
            mov R13,RDI
            lea RBP,QWORD PTR [RDI+4]
            je .L_41fc55
.L_41fafb:

            sar RDX,3
            mov ECX,DWORD PTR [R13+4]
            sub R14,1
            lea R8,QWORD PTR [R13+RDX*4]
            mov EDI,DWORD PTR [R13]
            mov EDX,DWORD PTR [RSI-4]
            mov EAX,DWORD PTR [R8]
            cmp ECX,EAX
            jge .L_41fb78

            cmp EDX,EAX
            jg .L_41fc3e

            cmp EDX,ECX
            jg .L_41fb84
.L_41fb26:

            mov DWORD PTR [R13],ECX
            mov DWORD PTR [R13+4],EDI
            mov EDX,DWORD PTR [RSI-4]
.L_41fb31:

            mov RBX,RBP
            mov RAX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb40:

            cmp EDI,ECX
            mov R12,RBX
            jl .L_41fb6a

            sub RAX,4
            cmp ECX,EDX
            jge .L_41fb5a

            nop
.L_41fb50:

            sub RAX,4
            mov EDX,DWORD PTR [RAX]
            cmp EDX,ECX
            jg .L_41fb50
.L_41fb5a:

            cmp RBX,RAX
            jae .L_41fba0

            mov DWORD PTR [RBX],EDX
            mov DWORD PTR [RAX],EDI
            mov EDX,DWORD PTR [RAX-4]
            mov ECX,DWORD PTR [R13]
.L_41fb6a:

            mov EDI,DWORD PTR [RBX+4]
            add RBX,4
            jmp .L_41fb40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fb78:

            cmp EDX,ECX
            jg .L_41fb26

            cmp EDX,EAX
            jle .L_41fc3e
.L_41fb84:

            mov DWORD PTR [R13],EDX
            mov DWORD PTR [RSI-4],EDI
            mov EDX,EDI
            mov ECX,DWORD PTR [R13]
            mov EDI,DWORD PTR [R13+4]
            jmp .L_41fb31
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fba0:

            mov RDX,R14
            mov RDI,RBX
            call .L_41fad0

            mov RDX,RBX
            sub RDX,R13
            cmp RDX,64
            jle .L_41fc35

            test R14,R14
            mov RSI,RBX
            jne .L_41fafb
.L_41fbc3:

            mov RBX,RDX
            sar RBX,2
            lea RBP,QWORD PTR [RBX-2]
            sar RBP,1
            jmp .L_41fbdc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fbd8:

            sub RBP,1
.L_41fbdc:

            sub RSP,8
.L_41fbe0:

            mov ECX,DWORD PTR [R13+RBP*4]
            mov RSI,RBP
            push 0
            mov RDX,RBX
            mov RDI,R13
            call .L_424230

            test RBP,RBP
            pop RCX
            pop RSI
            jne .L_41fbd8

            nop
            nop
            nop
            nop
.L_41fc00:

            sub R12,4
            mov EAX,DWORD PTR [R13]
            sub RSP,8
            mov RBX,R12
            mov ECX,DWORD PTR [R12]
            xor ESI,ESI
            sub RBX,R13
            mov RDI,R13
            mov DWORD PTR [R12],EAX
            mov RDX,RBX
            push 0
            sar RDX,2
            call .L_424230

            cmp RBX,4
            pop RAX
            pop RDX
            jg .L_41fc00
.L_41fc35:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41fc3e:

            mov DWORD PTR [R13],EAX
            mov DWORD PTR [R8],EDI
            mov EDI,DWORD PTR [R13+4]
            mov ECX,DWORD PTR [R13]
            mov EDX,DWORD PTR [RSI-4]
            jmp .L_41fb31
.L_41fc55:

            mov R12,RSI
            jmp .L_41fbc3
.L_41fc5d:

            nop
            nop
            nop
.L_41fc60:

            push R15
            push R14
            movabs RAX,2305843009213693950
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_41fc7b:

            mov EDI,DWORD PTR [RSI+32]
            add EDI,DWORD PTR [RSI+28]
            mov DWORD PTR [RSP+4],EDX
            movsxd RDI,EDI
            cmp RDI,RAX
            ja .L_420032

            mov R12,RSI
            shl RDI,2
            xor EBX,EBX
            call _Znam@PLT

            mov R13,RAX
            movsxd RAX,DWORD PTR [R12]
            mov RDI,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+16],RDI
            lea R11,QWORD PTR [RDI+RAX*4]
            cmp RDI,R11
            je .L_41fe88

            mov ESI,DWORD PTR [RSP+4]
            mov RAX,QWORD PTR [RSP+16]
            xor R14D,R14D
            mov BYTE PTR [RSP+8],0
            xor R10D,R10D
            xor EBX,EBX
            mov R15D,1
            mov DWORD PTR [RSP+24],R14D
            and ESI,4096
            mov DWORD PTR [RSP+28],ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fcf0:

            test R10B,R10B
            mov EDX,DWORD PTR [RAX]
            je .L_41fe20

            mov ESI,DWORD PTR [RBP+8]
            test ESI,ESI
            je .L_41fdad

            cmp EDX,DWORD PTR [R12+28]
            jge .L_41fdad
.L_41fd11:

            mov RDI,QWORD PTR [RBP]
            movsxd RCX,EDX
            mov R9,QWORD PTR [RDI+32]
            lea RSI,QWORD PTR [R9+RCX*8]
            mov R8D,DWORD PTR [RSI]
            mov ECX,R8D
            and ECX,7
            cmp ECX,5
            ja .L_41fda0

            mov R14,R15
            shl R14,CL
            test R14B,53
            mov RCX,R14
            jne .L_41fd70

            and ECX,2
            je .L_41fda0

            mov ECX,DWORD PTR [RBP+8]
            cmp ECX,3
            je .L_41fd70

            test ECX,ECX
            je .L_41feb8

            cmp ECX,1
            jne .L_41fd5e

            cmp BYTE PTR [RSP+8],0
            jne .L_41fd70
.L_41fd5e:

            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            jne .L_420020

            nop
            nop
            nop
            nop
            nop
            nop
.L_41fd70:

            lea ECX,DWORD PTR [RBX+1]
            movsxd RBX,EBX
            mov DWORD PTR [R13+RBX*4],EDX
            mov EDX,DWORD PTR [RSI]
            and EDX,7
            cmp EDX,4
            je .L_41fe68

            cmp EDX,5
            mov EBX,ECX
            jne .L_41fda0

            cmp BYTE PTR [RDI+1],0
            mov EDI,1
            cmove R10D,EDI
            nop
            nop
            nop
.L_41fda0:

            add RAX,4
            cmp RAX,R11
            jne .L_41fcf0
.L_41fdad:

            test EBX,EBX
            mov R14D,DWORD PTR [RSP+24]
            je .L_41fdc5

            movsxd RAX,EBX
            cmp DWORD PTR [R13+RAX*4-4],-1
            je .L_41ff38
.L_41fdc5:

            test R14D,R14D
            je .L_41fe88
.L_41fdce:

            mov EAX,DWORD PTR [RSP+4]
            or EAX,EBX
            je .L_41fe9f
.L_41fdda:

            cmp DWORD PTR [RBP+8],1
            je .L_41fee0
.L_41fde4:

            mov ECX,R14D
            mov EDX,EBX
            mov RDI,RBP
            shl ECX,16
            or ECX,DWORD PTR [RSP+4]
            mov RSI,R13
            call .L_41f300

            mov RDI,R13
            mov RBX,RAX
            call _ZdaPv@PLT
.L_41fe06:

            add RSP,40
.L_41fe0a:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fe20:

            cmp EDX,DWORD PTR [R12+28]
            jl .L_41fd11

            test EBX,EBX
            je .L_41fda0

            movsxd RDX,EBX
            cmp DWORD PTR [R13+RDX*4-4],-1
            je .L_41fda0

            add RAX,4
            add EBX,1
            mov DWORD PTR [R13+RDX*4],4294967295
            cmp RAX,R11
            mov BYTE PTR [RSP+8],1
            jne .L_41fcf0

            jmp .L_41fdad
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fe68:

            add RAX,4
            mov EDI,DWORD PTR [RSI+4]
            or DWORD PTR [RSP+24],EDI
            cmp RAX,R11
            mov EBX,ECX
            jne .L_41fcf0

            jmp .L_41fdad
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fe88:

            and DWORD PTR [RSP+4],4096
            xor R14D,R14D
            mov EAX,DWORD PTR [RSP+4]
            or EAX,EBX
            jne .L_41fdda
.L_41fe9f:

            mov RDI,R13
            mov EBX,1
            call _ZdaPv@PLT

            jmp .L_41fe06
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41feb8:

            cmp QWORD PTR [RSP+16],RAX
            jne .L_41fd70

            shr R8D,3
            mov ECX,R8D
            mov ECX,DWORD PTR [R9+RCX*8]
            and ECX,7
            cmp ECX,2
            jne .L_41fd70

            jmp .L_41fd5e
          .byte 0x90
.L_41fee0:

            movsxd RAX,EBX
            lea R8,QWORD PTR [R13+RAX*4]
            cmp R13,R8
            jae .L_41fde4

            mov DWORD PTR [RSP+24],EBX
            mov QWORD PTR [RSP+8],RBP
            mov RBX,R13
            mov RBP,R8
.L_41ff00:

            cmp DWORD PTR [RBX],-1
            mov R15,RBX
            jne .L_41ff16

            jmp .L_41ffe5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ff10:

            cmp DWORD PTR [R15],-1
            je .L_41ff50
.L_41ff16:

            add R15,4
            cmp RBP,R15
            ja .L_41ff10

            cmp RBX,R15
            jne .L_41ff59
.L_41ff24:

            mov EBX,DWORD PTR [RSP+24]
            mov RBP,QWORD PTR [RSP+8]
            jmp .L_41fde4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ff38:

            sub EBX,1
            test R14D,R14D
            jne .L_41fdce

            jmp .L_41fe88
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ff50:

            cmp RBX,R15
            je .L_41ffe5
.L_41ff59:

            mov R12,R15
            mov EAX,63
            mov RSI,R15
            sub R12,RBX
            mov RDI,RBX
            mov RDX,R12
            sar RDX,2
            bsr RDX,RDX
            xor RDX,63
            movsxd RDX,EDX
            sub RAX,RDX
            mov RDX,RAX
            add RDX,RDX
            call .L_41fad0

            cmp R12,64
            jle .L_420000

            lea R12,QWORD PTR [RBX+64]
            mov RDI,RBX
            mov RSI,R12
            call .L_41cd70

            cmp R15,R12
            je .L_41ffdc

            nop
            nop
            nop
            nop
.L_41ffa8:

            mov ESI,DWORD PTR [R12]
            mov EDX,DWORD PTR [R12-4]
            lea RAX,QWORD PTR [R12-4]
            cmp ESI,EDX
            jl .L_41ffc3

            jmp .L_420010
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ffc0:

            mov RAX,RCX
.L_41ffc3:

            mov DWORD PTR [RAX+4],EDX
            mov EDX,DWORD PTR [RAX-4]
            lea RCX,QWORD PTR [RAX-4]
            cmp ESI,EDX
            jl .L_41ffc0

            add R12,4
            mov DWORD PTR [RAX],ESI
            cmp R15,R12
            jne .L_41ffa8
.L_41ffdc:

            cmp RBP,R15
            jbe .L_41ff24
.L_41ffe5:

            lea RBX,QWORD PTR [R15+4]
            cmp RBP,RBX
            ja .L_41ff00

            jmp .L_41ff24
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
.L_420000:

            mov RSI,R15
            mov RDI,RBX
            call .L_41cd70

            jmp .L_41ffdc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420010:

            mov RAX,R12
            add R12,4
            cmp R15,R12
            mov DWORD PTR [RAX],ESI
            jne .L_41ffa8

            jmp .L_41ffdc
.L_420020:

            mov RDI,R13
            mov EBX,2
            call _ZdaPv@PLT

            jmp .L_41fe06
.L_420032:

            call __cxa_throw_bad_array_new_length@PLT
.L_420037:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420040:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            sub RSP,552
.L_420054:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            cmp RSI,2
            ja .L_4202d8

            je .L_420418

            lea RBX,QWORD PTR [RSP+144]
            cmp RSI,1
            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+144],0
            lea RDI,QWORD PTR [RBX+120]
            je .L_420b35

            test RSI,RSI
            je .L_4205a0

            call _ZNSt8ios_baseC2Ev@PLT

            mov BYTE PTR [RSP+488],0
            mov RAX,QWORD PTR [RBP-24]
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R12
            mov QWORD PTR [RSP+496],0
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RDI],RAX
.L_420122:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420127:

            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+160],R15
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+248],0
.L_4201e9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4201ee:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_4201fe:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,986
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42023a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423608]
            mov EDX,42
.L_42024a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42024f:

            cmp BYTE PTR [RSP+144],0
            je .L_420428
.L_42025d:

            mov RDI,QWORD PTR [RSP+232]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+160],R15
            cmp RDI,RAX
            je .L_42028b

            call _ZdlPv@PLT
.L_42028b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R12
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_420305
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4202d8:

            movsxd RBP,EDX
            mov RBX,RDI
            mov RAX,QWORD PTR [RSI+16]
            cmp EBP,256
            mov RDX,QWORD PTR [RDI]
            je .L_420330

            movsxd RCX,EBP
            movzx EDX,BYTE PTR [RDX+RCX*1+160]
            mov RAX,QWORD PTR [RAX+RDX*8]
            test RAX,RAX
            je .L_420540
.L_420305:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            jne .L_420fe4

            add RSP,552
.L_420323:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_420330:

            movsxd RDX,DWORD PTR [RDX+20]
            mov RAX,QWORD PTR [RAX+RDX*8]
            test RAX,RAX
            jne .L_420305

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,R12
            xor R13D,R13D
            xor R14D,R14D
            call .L_41d2e0

            mov EDX,DWORD PTR [R12+12]
            mov EAX,EDX
            mov EDI,EDX
            shr EDX,13
            and EAX,4095
            shr EDI,16
            and EDX,1
            mov ECX,EAX
            or ECX,10
.L_42036b:

            mov ESI,ECX
            not EAX
            or ECX,16
            or ESI,32
            cmp R14B,DL
            mov RDX,QWORD PTR [RBX+88]
            cmove ECX,ESI
            and EAX,EDI
            mov RSI,QWORD PTR [RBX+80]
            test EAX,ECX
            jne .L_4208c8
.L_42038d:

            mov EAX,DWORD PTR [RBX+12]
            mov BYTE PTR [RSP+47],0
            mov R8D,R13D
            mov ECX,EBP
            mov RDI,RBX
            push RAX
.L_42039e:

            mov EAX,DWORD PTR [RBX+8]
            push RAX
            lea R9,QWORD PTR [RSP+63]
            call .L_41d5a0

            cmp EBP,256
            pop RAX
            mov RAX,QWORD PTR [RBX+80]
            pop RDX
            je .L_4208a0
.L_4203be:

            mov RSI,QWORD PTR [RBX+88]
            mov QWORD PTR [RBX+88],RAX
            mov QWORD PTR [RBX+80],RSI
.L_4203ca:

            cmp BYTE PTR [RSP+47],0
            je .L_4203d8

            or R13D,4096
.L_4203d8:

            mov EAX,R13D
            mov RDI,RBX
            or AH,32
            test R14B,R14B
            cmovne R13D,EAX
            mov EDX,R13D
.L_4203eb:

            call .L_41fc60
.L_4203f0:

            cmp EBP,256
            mov RCX,QWORD PTR [R12+16]
            mov RDX,QWORD PTR [RBX]
            je .L_4208b8

            movzx EDX,BYTE PTR [RDX+RBP*1+160]
.L_42040c:

            mov QWORD PTR [RCX+RDX*8],RAX
            jmp .L_420305
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420418:

            mov EAX,2
            jmp .L_420305
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420428:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_420a70

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_420918

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+80],RAX
.L_42049f:

            call .L_41ce20
.L_4204a4:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420a88

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_420af1

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_420b00

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_420503:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_420527
.L_420522:

            call _ZdlPv@PLT
.L_420527:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_420536:

            call write@PLT
.L_42053b:

            jmp .L_420874
.L_420540:

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,R12
            call .L_41d2e0

            mov EDX,DWORD PTR [R12+12]
            mov EDI,EDX
            mov EAX,EDX
            shr EDI,16
            and EAX,4095
            cmp EBP,10
            jne .L_4208e8

            mov ECX,EAX
            shr EDX,13
            mov R13D,1
            or ECX,2
            and EDX,1
            mov ESI,10
.L_42057c:

            lea R8D,DWORD PTR [RSI-48]
            cmp R8B,9
            setbe R14B
            cmp SIL,95
            sete SIL
            or R14D,ESI
            jmp .L_42036b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4205a0:

            call _ZNSt8ios_baseC2Ev@PLT

            mov BYTE PTR [RSP+488],0
            mov RAX,QWORD PTR [RBP-24]
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R12
            mov QWORD PTR [RSP+496],0
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RDI],RAX
.L_42061d:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420622:

            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+160],R15
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+248],0
.L_4206e4:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4206e9:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_4206f9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,983
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_420735:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4236cc]
            mov EDX,28
.L_420745:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42074a:

            cmp BYTE PTR [RSP+144],0
            jne .L_42025d

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_420e13

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_4209c8

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_4207d2:

            call .L_41ce20
.L_4207d7:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420e57

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_420eaa

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_420eb9

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42083c:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_420860
.L_42085b:

            call _ZdlPv@PLT
.L_420860:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_42086f:

            call write@PLT
.L_420874:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_42025d

            call _ZdlPv@PLT

            jmp .L_42025d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4208a0:

            cmp DWORD PTR [RBX+8],3
            mov RSI,RAX
            jne .L_4203be

            jmp .L_4203ca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4208b8:

            movsxd RDX,DWORD PTR [RDX+20]
            jmp .L_42040c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4208c8:

            mov RDI,RBX
            call .L_41d510

            mov RDX,QWORD PTR [RBX+80]
            mov RSI,QWORD PTR [RBX+88]
            mov QWORD PTR [RBX+88],RDX
            mov QWORD PTR [RBX+80],RSI
            jmp .L_42038d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4208e8:

            mov ECX,EBP
            shr EDX,13
            mov ESI,EBP
            and ECX,4294967263
            and EDX,1
            mov R13D,0
            sub ECX,65
            cmp CL,25
            mov ECX,EAX
            ja .L_42057c

            mov R14D,1
            jmp .L_42036b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420918:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_420931:

            call .L_41ce20
.L_420936:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420ac0

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_420b13

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_420b22

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42099b:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_420522

            jmp .L_420527
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4209c8:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+80],RAX
.L_4209de:

            call .L_41ce20
.L_4209e3:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420e26

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_420e88

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_420e97

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_420a42:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_42085b

            jmp .L_420860
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420a70:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
.L_420a79:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_420a7e:

            jmp .L_420527
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420a88:

            test RDX,RDX
            je .L_420aa6

            cmp RDX,1
            je .L_420ecc

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_420aa6:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_420503
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420ac0:

            test RDX,RDX
            je .L_420ade

            cmp RDX,1
            je .L_420ee2

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_420ade:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42099b
.L_420af1:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_420b00:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_420503
.L_420b13:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_420b22:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42099b
.L_420b35:

            call _ZNSt8ios_baseC2Ev@PLT

            mov BYTE PTR [RSP+488],0
            mov RAX,QWORD PTR [RBP-24]
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R12
            mov QWORD PTR [RSP+496],0
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RDI],RAX
.L_420bb2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420bb7:

            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+160],R15
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+248],0
.L_420c79:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_420c7e:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_420c8e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,979
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_420cca:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4236b0]
            mov EDX,27
.L_420cda:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_420cdf:

            cmp BYTE PTR [RSP+144],0
            jne .L_42025d

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_420fd1

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_420f2a

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_420d67:

            call .L_41ce20
.L_420d6c:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421034

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_421012

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_421021

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_420dd1:

            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_420dfa
.L_420df5:

            call _ZdlPv@PLT
.L_420dfa:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_420e09:

            call write@PLT
.L_420e0e:

            jmp .L_420874
.L_420e13:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
.L_420e1c:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_420e21:

            jmp .L_420860
.L_420e26:

            test RDX,RDX
            je .L_420e44

            cmp RDX,1
            je .L_420efb

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_420e44:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_420a42
.L_420e57:

            test RDX,RDX
            je .L_420e75

            cmp RDX,1
            je .L_420f11

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_420e75:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42083c
.L_420e88:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_420e97:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_420a42
.L_420eaa:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_420eb9:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42083c
.L_420ecc:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_420aa6
.L_420ee2:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_420ade
.L_420efb:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_420e44
.L_420f11:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_420e75
.L_420f2a:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+80],RAX
.L_420f40:

            call .L_41ce20

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_420fe9

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_42105c

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42106b

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_420fa4:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_420df5

            jmp .L_420dfa
.L_420fd1:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_420fdf:

            jmp .L_420dfa
.L_420fe4:

            call __stack_chk_fail@PLT
.L_420fe9:

            test RDX,RDX
            je .L_421007

            cmp RDX,1
            je .L_42107e

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
.L_421007:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_420fa4
.L_421012:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_421021:

            mov RAX,QWORD PTR [RSP+24]
            add RAX,16
            mov QWORD PTR [RSP+112],RAX
            jmp .L_420dd1
.L_421034:

            test RDX,RDX
            je .L_42104e

            cmp RDX,1
            je .L_421094

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
.L_42104e:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_420dd1
.L_42105c:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42106b:

            mov RAX,QWORD PTR [RSP+24]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_420fa4
.L_42107e:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_421007
.L_421094:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            jmp .L_42104e
.L_4210aa:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
.L_4210b8:

            call _Unwind_Resume@PLT
.L_4210bd:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4210d1:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_4210e9

            call _ZdlPv@PLT
.L_4210e9:

            call _ZSt9terminatev@PLT
.L_4210ee:

            jmp .L_4210d1
.L_4210f0:

            jmp .L_4210aa
.L_4210f2:

            jmp .L_4210d1
.L_4210f4:

            jmp .L_4210aa
.L_4210f6:

            mov R13,RAX
.L_4210f9:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
            call _Unwind_Resume@PLT
.L_421112:

            jmp .L_4210d1
.L_421114:

            jmp .L_4210d1
.L_421116:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
            jmp .L_4210f9
.L_42113f:

            jmp .L_4210f6
.L_421141:

            jmp .L_421116
.L_421143:

            jmp .L_4210bd
.L_421148:

            jmp .L_4210bd
.L_42114d:

            jmp .L_421116
.L_42114f:

            jmp .L_4210f6
.L_421151:

            jmp .L_4210d1
.L_421156:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421160:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RDI
            add RDI,24
            mov RBP,RSI
            sub RSP,16
.L_421175:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_4211cc

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
.L_42119b:

            call .L_420040
.L_4211a0:

            mov RDI,QWORD PTR [RSP]
            mov RBX,RAX
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_4211cc

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4211d1

            add RSP,16
.L_4211c7:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4211cc:

            call abort@PLT
.L_4211d1:

            call __stack_chk_fail@PLT
.L_4211d6:

            mov RBX,RAX
            mov RDI,RSP
            call .L_40c4d0

            mov RDI,RBX
.L_4211e4:

            call _Unwind_Resume@PLT
.L_4211e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4211f0:

            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            jmp .L_4243a0
.L_4211fc:

            nop
            nop
            nop
            nop
.L_421200:

            mov R8D,1
            xor ECX,ECX
            xor EDX,EDX
            jmp .L_4243a0
.L_42120f:

            nop
.L_421210:

            xor R8D,R8D
            mov ECX,1
            xor EDX,EDX
            jmp .L_4243a0
.L_42121f:

            nop
.L_421220:

            mov R8D,1
            mov ECX,1
            xor EDX,EDX
            jmp .L_4243a0
.L_421232:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421240:

            xor R8D,R8D
            xor ECX,ECX
            mov EDX,1
            jmp .L_4243a0
.L_42124f:

            nop
.L_421250:

            mov R8D,1
            xor ECX,ECX
            mov EDX,1
            jmp .L_4243a0
.L_421262:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421270:

            xor R8D,R8D
            mov ECX,1
            mov EDX,1
            jmp .L_4243a0
.L_421282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421290:

            mov R8D,1
            mov ECX,1
            mov EDX,1
            jmp .L_4243a0
.L_4212a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4212b0:

            mov EDX,DWORD PTR [RSI+48]
            movzx ECX,BYTE PTR [RSI+33]
            movzx R8D,BYTE PTR [RSI+34]
            not EDX
            shr EDX,31
            jmp .L_4243a0
.L_4212c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4212d0:

            push R14
            push R13
            mov R13D,1
            push R12
            push RBP
            push RBX
            sub RSP,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+8]
            cmp EAX,-1
            je .L_421320
.L_4212fa:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_42144f

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_421320:

            mov R12,RDI
            lea RDI,QWORD PTR [RDI+24]
            mov QWORD PTR [RSP+8],RSI
            mov RBP,RDX
            mov R14D,ECX
            mov QWORD PTR [RSP+16],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            mov EBX,EAX
            mov RSI,QWORD PTR [RSP+8]
            jne .L_42140a

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,-1
            jne .L_4213f8

            mov RAX,QWORD PTR [R12+80]
            cmp BYTE PTR [RSI+32],0
            mov EDX,DWORD PTR [RAX+28]
            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+36],EDX
            mov RAX,QWORD PTR [R12]
            je .L_421410

            mov EDX,DWORD PTR [RAX+4]
.L_421379:

            mov RSI,QWORD PTR [R12+80]
            mov ECX,R14D
            mov RDI,R12
            call .L_41d370

            mov RSI,QWORD PTR [R12+80]
            mov EDX,R14D
.L_421391:

            call .L_41fc60

            test RAX,RAX
            mov RSI,RAX
            mov QWORD PTR [RBP],RAX
            je .L_421438

            cmp RAX,1
            je .L_421440

            cmp RAX,2
            mov R13D,4294967293
            jne .L_4213dd

            jmp .L_421426
          .byte 0x66
          .byte 0x90
.L_4213c0:

            mov RSI,QWORD PTR [RBP]
            cmp RSI,RAX
            je .L_4213d2

            cmp R13D,-3
            jne .L_421420

            mov R13D,EBX
.L_4213d2:

            add EBX,1
            cmp EBX,256
            je .L_421426
.L_4213dd:

            mov EDX,EBX
            mov RDI,R12
            call .L_420040
.L_4213e7:

            test RAX,RAX
            jne .L_4213c0

            mov DWORD PTR [RBP+8],R13D
            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_4213f8:

            mov RDI,QWORD PTR [RSP+16]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            je .L_4212fa
.L_42140a:

            call abort@PLT
          .byte 0x90
.L_421410:

            mov EDX,DWORD PTR [RAX+8]
            jmp .L_421379
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421420:

            mov R13D,4294967294
.L_421426:

            mov DWORD PTR [RBP+8],R13D
            mov R13D,1
            jmp .L_4213f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421438:

            xor R13D,R13D
            jmp .L_4213f8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421440:

            mov DWORD PTR [RBP+8],4294967293
            mov R13D,1
            jmp .L_4213f8
.L_42144f:

            call __stack_chk_fail@PLT
.L_421454:

            lea RDI,QWORD PTR [RSP+16]
            mov RBX,RAX
            call .L_40c4d0

            mov RDI,RBX
.L_421464:

            call _Unwind_Resume@PLT
.L_421469:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421470:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,552
.L_421484:

            mov RDX,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            cmp RDX,RSI
            jb .L_4214ba

            movsxd RAX,DWORD PTR [RBP+8]
            movsxd RCX,DWORD PTR [RBP+24]
            add RAX,RDX
            add RCX,RSI
            cmp RCX,RAX
            jae .L_421750
.L_4214ba:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_421553:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_421558:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            lea R13,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            mov QWORD PTR [RSP+160],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_421624:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_421629:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_421639:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1607
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_421675:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4236e9]
            mov EDX,27
.L_421685:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42168a:

            cmp BYTE PTR [RSP+144],0
            je .L_421828
.L_421698:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_4216d5

            call _ZdlPv@PLT
.L_4216d5:

            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],R13
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov QWORD PTR [RBP+40],1
            mov BYTE PTR [RSP+7],1
.L_421719:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+7]
            jne .L_4220a8

            add RSP,552
.L_42173c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421750:

            cmp BYTE PTR [RBP+34],0
            mov RBX,RDI
            jne .L_421970

            cmp RCX,RAX
            je .L_421a48

            movzx EDX,BYTE PTR [RAX]
            cmp DL,10
            je .L_421986
.L_421772:

            mov EAX,EDX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_421a58

            lea EAX,DWORD PTR [RDX-48]
            cmp AL,9
            jbe .L_421a58

            xor R13D,R13D
            cmp DL,95
            mov EAX,6
            je .L_421a58

            nop
            nop
.L_4217a0:

            cmp BYTE PTR [RBP+32],0
            jne .L_4217ae

            mov RDX,QWORD PTR [RBX]
            cmp BYTE PTR [RDX],0
            je .L_4217b1
.L_4217ae:

            or EAX,1
.L_4217b1:

            movsxd R14,EAX
            mov ECX,R13D
            mov RSI,RBP
            lea R12,QWORD PTR [R14+14]
            mov RDI,RBX
            shl R12,4
            lea R15,QWORD PTR [RBX+R12*1+8]
            mov RDX,R15
.L_4217cd:

            call .L_4212d0

            test AL,AL
            jne .L_4217ff

            mov RSI,QWORD PTR [RBP+56]
            mov RDI,RBX
            call .L_41ec90

            mov ECX,R13D
            mov RDX,R15
            mov RSI,RBP
            mov RDI,RBX
            call .L_4212d0
.L_4217f3:

            test AL,AL
            mov BYTE PTR [RSP+7],AL
            je .L_421a70
.L_4217ff:

            lea RAX,QWORD PTR [R14+14]
            shl RAX,4
            mov RAX,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RBP+40],RAX
            mov EAX,DWORD PTR [RBX+R12*1+16]
            mov BYTE PTR [RSP+7],1
            mov DWORD PTR [RBP+48],EAX
            jmp .L_421719
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421828:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_421e68

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_4219a0

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_4218a2:

            call .L_41ce20
.L_4218a7:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421eb8

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_421cf8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_421d07

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42190c:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_421930
.L_42192b:

            call _ZdlPv@PLT
.L_421930:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_42193f:

            call write@PLT
.L_421944:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_421698

            call _ZdlPv@PLT

            jmp .L_421698
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421970:

            cmp RDX,RSI
            je .L_421a48

            movzx EDX,BYTE PTR [RDX-1]
            cmp DL,10
            jne .L_421772
.L_421986:

            mov R13D,1
            mov EAX,2
            jmp .L_4217a0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219a0:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_4219b6:

            call .L_41ce20
.L_4219bb:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421e80

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_421cd0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_421cdf

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_421a1a:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_42192b

            jmp .L_421930
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421a48:

            mov R13D,5
            xor EAX,EAX
            jmp .L_4217a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421a58:

            mov R13D,8192
            mov EAX,4
            jmp .L_4217a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421a70:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R15
.L_421b09:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_421b0e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            lea R13,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+152],RAX
            add RAX,40
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+264],RAX
            mov QWORD PTR [RSP+160],R13
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_421bda:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_421bdf:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_421bef:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1654
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_421c2b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423638]
            mov EDX,30
.L_421c3b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_421c40:

            cmp BYTE PTR [RSP+144],0
            je .L_421d20
.L_421c4e:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+264],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_421c8b

            call _ZdlPv@PLT
.L_421c8b:

            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],R13
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RBP+64],1
            jmp .L_421719
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421cd0:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_421cdf:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_421a1a

            nop
            nop
            nop
            nop
            nop
            nop
.L_421cf8:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_421d07:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42190c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421d20:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_421fc4

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            jbe .L_421ef3

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
.L_421d9a:

            call .L_41ce20
.L_421d9f:

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_421fd7

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_422057

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_422066

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_421e04:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_421e28
.L_421e23:

            call _ZdlPv@PLT
.L_421e28:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_421e37:

            call write@PLT
.L_421e3c:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_421c4e

            call _ZdlPv@PLT

            jmp .L_421c4e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421e68:

            mov RDI,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RBX+88]
.L_421e71:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_421e76:

            jmp .L_421930
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421e80:

            test RDX,RDX
            je .L_421ea0

            cmp RDX,1
            je .L_421f95

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
.L_421ea0:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_421a1a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421eb8:

            test RDX,RDX
            je .L_421ee0

            cmp RDX,1
            je .L_421fab

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421ee0:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42190c
.L_421ef3:

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            mov QWORD PTR [RSP+80],RAX
.L_421f09:

            call .L_41ce20

            mov RCX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_422008

            mov RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_422035

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_422044

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_421f6d:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_421e23

            jmp .L_421e28
.L_421f95:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_421ea0
.L_421fab:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_421ee0
.L_421fc4:

            mov RDI,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_421fd2:

            jmp .L_421e28
.L_421fd7:

            test RDX,RDX
            je .L_421ff5

            cmp RDX,1
            je .L_422079

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_421ff5:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_421e04
.L_422008:

            test RDX,RDX
            je .L_422022

            cmp RDX,1
            je .L_422092

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_422022:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_421f6d
.L_422035:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_422044:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_421f6d
.L_422057:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_422066:

            mov RAX,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_421e04
.L_422079:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_421ff5
.L_422092:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_422022
.L_4220a8:

            call __stack_chk_fail@PLT
.L_4220ad:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
.L_4220bb:

            call _Unwind_Resume@PLT
.L_4220c0:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_4220d8

            call _ZdlPv@PLT
.L_4220d8:

            call _ZSt9terminatev@PLT
.L_4220dd:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_4220f1:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+152],R12
            mov QWORD PTR [RSP+RAX*1+152],R15
.L_422112:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42212b:

            jmp .L_4220c0
.L_42212d:

            mov RBP,RAX
            jmp .L_422112
.L_422132:

            jmp .L_4220dd
.L_422134:

            jmp .L_4220f1
.L_422136:

            jmp .L_4220c0
.L_422138:

            jmp .L_42212d
.L_42213a:

            jmp .L_4220c0
.L_42213c:

            jmp .L_4220ad
.L_422141:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422150:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_422164:

            mov R13,QWORD PTR [RSP+216]
            mov DWORD PTR [RSP+4],R9D
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov R12,QWORD PTR [RSP+208]
            mov RSI,QWORD PTR [RSP+224]
            mov QWORD PTR [R13],0
            movzx EBX,BYTE PTR [RDI+16]
            test BL,BL
            je .L_4221e0

            mov BYTE PTR [R12],1
            xor EBX,EBX
.L_4221ab:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_422305

            add RSP,152
.L_4221cb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4221e0:

            mov RBP,RDI
            lea RDI,QWORD PTR [RDI+112]
            mov BYTE PTR [R12],0
            mov QWORD PTR [RSP+24],RSI
            mov DWORD PTR [RSP+16],ECX
            mov R15D,R8D
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+32],RDI
            mov BYTE PTR [RSP+40],0
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            jne .L_42230a

            lea RAX,QWORD PTR [RSP+32]
            movdqu XMM0,XMMWORD PTR [R14]
            mov QWORD PTR [RSP+128],RSI
            mov RDI,RBP
            mov QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+104],RAX
            movzx EAX,BYTE PTR [RSP+4]
            mov DWORD PTR [RSP+96],4294967295
            movaps XMMWORD PTR [RSP+48],XMM0
            mov BYTE PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RSP+82],AL
            lea RAX,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+80],CL
            movdqu XMM0,XMMWORD PTR [RDX]
            mov RSI,RAX
            mov BYTE PTR [RSP+81],R15B
            mov QWORD PTR [RSP+16],RAX
            movaps XMMWORD PTR [RSP+64],XMM0
.L_42228d:

            call .L_421470

            test AL,AL
            je .L_4222c0

            mov RDX,QWORD PTR [RSP+88]
            cmp RDX,1
            je .L_4222c5

            cmp RDX,2
            je .L_4222d8

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_41d870
.L_4222b4:

            cmp BYTE PTR [RSP+112],0
            je .L_4222f8

            nop
            nop
            nop
            nop
            nop
.L_4222c0:

            mov BYTE PTR [R12],1
.L_4222c5:

            mov RDI,QWORD PTR [RSP+8]
            call .L_41d7a0

            jmp .L_4221ab
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4222d8:

            cmp R15B,BYTE PTR [RSP+4]
            mov RDX,QWORD PTR [R14]
            je .L_4222fd

            movsxd RCX,DWORD PTR [R14+8]
            mov EBX,EAX
            add RDX,RCX
            mov QWORD PTR [R13],RDX
            jmp .L_4222c5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4222f8:

            mov RDX,QWORD PTR [RSP+120]
.L_4222fd:

            mov QWORD PTR [R13],RDX
            mov EBX,EAX
            jmp .L_4222c5
.L_422305:

            call __stack_chk_fail@PLT
.L_42230a:

            call abort@PLT
.L_42230f:

            mov RDI,QWORD PTR [RSP+8]
            mov RBX,RAX
            call .L_41d7a0

            mov RDI,RBX
.L_42231f:

            call _Unwind_Resume@PLT
.L_422324:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422330:

            push R15
            push R14
            push R13
            push R12
            mov R13,R9
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,56
.L_422347:

            movdqu XMM0,XMMWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov R12,QWORD PTR [RSP+112]
            movq RAX,XMM0
            mov R15,QWORD PTR [RSP+120]
            movaps XMMWORD PTR [RSP+16],XMM0
            test RAX,RAX
            mov BYTE PTR [R12],0
            je .L_422540
.L_42237d:

            cmp BYTE PTR [RBX+2],0
            movzx EAX,BYTE PTR [RBX]
            movzx EDX,BYTE PTR [RBX+1]
            jne .L_422470

            mov EDI,EDX
            mov ESI,EAX
.L_422392:

            test SIL,SIL
            je .L_4223d0

            mov RSI,QWORD PTR [RBP]
            cmp QWORD PTR [RSP+16],RSI
            je .L_4223d0
.L_4223a2:

            xor EAX,EAX
.L_4223a4:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_422597

            add RSP,56
.L_4223bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4223d0:

            test DIL,DIL
            jne .L_422480
.L_4223d9:

            cmp ECX,1
            je .L_4223e6

            test AL,AL
            je .L_422558
.L_4223e6:

            cmp R8D,3
            mov R14D,1
            je .L_4224a6

            cmp R8D,2
            je .L_4224a0
.L_422400:

            test DL,DL
            jne .L_4224a0

            test R13,R13
            jne .L_4225d6

            mov ESI,1
            mov RDI,RBX
            call .L_41e840

            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
.L_422427:

            movzx R9D,BYTE PTR [RBX+2]
            push R15
            mov R8D,1
            mov RSI,RBP
            mov RDI,RAX
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            push R12
            movzx R9D,R9B
            mov ECX,R14D
            call .L_422150

            movzx EDX,BYTE PTR [R12]
            add RSP,32
.L_42245b:

            xor EDX,1
            and AL,DL
            je .L_4223a2

            jmp .L_4223a4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422470:

            mov EDI,EAX
            mov ESI,EDX
            jmp .L_422392
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422480:

            movsxd RDI,DWORD PTR [RSP+24]
            movsxd RSI,DWORD PTR [RBP+8]
            add RDI,QWORD PTR [RSP+16]
            add RSI,QWORD PTR [RBP]
            cmp RDI,RSI
            jne .L_4223a2

            jmp .L_4223d9
.L_4224a0:

            mov R8D,1
.L_4224a6:

            mov ESI,R8D
            mov RDI,RBX
            call .L_41e840

            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
.L_4224ba:

            movzx R9D,BYTE PTR [RBX+2]
            push R15
            xor R8D,R8D
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            push R12
            movzx R9D,R9B
            mov ECX,R14D
.L_4224d7:

            mov RSI,RBP
            mov RDI,RAX
            call .L_422150

            add RSP,32
.L_4224e6:

            cmp BYTE PTR [R12],1
            je .L_4223a2

            test AL,AL
            je .L_4223a2

            cmp BYTE PTR [RBX+2],0
            mov RDX,QWORD PTR [RBP]
            mov RAX,RDX
            je .L_422570
.L_422506:

            cmp QWORD PTR [RSP+8],RAX
            jne .L_4223a2

            test R13,R13
            je .L_422632
.L_42251a:

            movzx EAX,BYTE PTR [RBX+2]
            mov RCX,QWORD PTR [RSP+8]
            test AL,AL
            jne .L_422580

            sub RCX,RDX
            mov QWORD PTR [R13],RDX
            mov EAX,1
            mov DWORD PTR [R13+8],ECX
            jmp .L_4223a4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422540:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+16],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+24],EAX
            jmp .L_42237d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422558:

            cmp R8D,2
            je .L_42259c

            xor R14D,R14D
            cmp R8D,3
            jne .L_422400

            jmp .L_4224a6
.L_422570:

            movsxd RAX,DWORD PTR [RBP+8]
            add RAX,RDX
            jmp .L_422506
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422580:

            movsxd RSI,DWORD PTR [RBP+8]
            mov QWORD PTR [R13],RCX
            add RDX,RSI
            sub RDX,RCX
            mov DWORD PTR [R13+8],EDX
            jmp .L_4223a4
.L_422597:

            call __stack_chk_fail@PLT
.L_42259c:

            mov ESI,1
            mov RDI,RBX
            call .L_41e840

            movzx R9D,BYTE PTR [RBX+2]
            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
.L_4225b7:

            push R15
            xor R8D,R8D
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            movzx R9D,R9B
            push R12
            mov ECX,1
            jmp .L_4224d7
.L_4225d6:

            mov ESI,R8D
            mov RDI,RBX
            call .L_41e840

            lea RDX,QWORD PTR [RSP+16]
            sub RSP,8
            movzx R9D,BYTE PTR [RBX+2]
            push R15
            xor R8D,R8D
            mov RSI,RBP
            mov RDI,RAX
            lea RCX,QWORD PTR [RSP+24]
            xor R9D,1
            push RCX
            push R12
            movzx R9D,R9B
            mov ECX,R14D
            call .L_422150

            add RSP,32
            cmp BYTE PTR [R12],1
            je .L_4223a2

            test AL,AL
            je .L_4223a2

            mov RDX,QWORD PTR [RBP]
            jmp .L_42251a
.L_422632:

            mov EAX,1
            jmp .L_4223a4
.L_42263c:

            nop
            nop
            nop
            nop
.L_422640:

            push R15
            push R14
            xor R14D,R14D
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,312
.L_422654:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+16],0
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            je .L_4226a8
.L_422676:

            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_422f6d

            add RSP,312
.L_422697:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4226a8:

            lea RAX,QWORD PTR [RSP+112]
            mov R13,RDI
            lea RDI,QWORD PTR [RDI+112]
            mov R15,RSI
            mov DWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+80],RDI
            mov BYTE PTR [RSP+88],0
            mov QWORD PTR [RSP+136],RAX
            mov QWORD PTR [RSP+144],RAX
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            jne .L_422f72

            lea RAX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+160]
            mov RDI,R13
            mov QWORD PTR [RSP+160],0
            mov DWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov DWORD PTR [RSP+184],0
            mov BYTE PTR [RSP+193],0
            mov BYTE PTR [RSP+194],0
            mov QWORD PTR [RSP+200],0
            mov DWORD PTR [RSP+208],4294967295
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+216],RAX
            mov BYTE PTR [RSP+224],0
            mov QWORD PTR [RSP+232],0
            mov QWORD PTR [RSP+240],0
            mov BYTE PTR [RSP+192],1
.L_4227a2:

            call .L_421470
.L_4227a7:

            test AL,AL
            mov R14D,EAX
            je .L_4229fa

            mov R12,QWORD PTR [RSP+200]
            cmp R12,1
            je .L_422c98

            cmp R12,2
            je .L_422a20

            mov RAX,QWORD PTR [R15]
            lea RDI,QWORD PTR [R13+24]
            mov QWORD PTR [R15+8],0
            mov BYTE PTR [RAX],0
            mov QWORD PTR [RSP+72],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+52],EAX
            jne .L_422f72

            mov R10D,DWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RSP+128]
            test R10D,R10D
            jle .L_422ea2

            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+48],0
            add RAX,8
            mov QWORD PTR [RSP+24],RAX
.L_422822:

            test RSI,RSI
            je .L_422e10

            mov RAX,RSI
            mov RBX,QWORD PTR [RSP+24]
            jmp .L_422844
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422838:

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_422853
.L_422844:

            cmp R12,QWORD PTR [RAX+32]
            jbe .L_422838

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            jne .L_422844
.L_422853:

            cmp RBX,QWORD PTR [RSP+24]
            je .L_422864

            cmp R12,QWORD PTR [RBX+32]
            jae .L_422a60
.L_422864:

            mov EDI,48
.L_422869:

            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_424140

            test RDX,RDX
            je .L_422cd0

            cmp QWORD PTR [RSP+24],RDX
            je .L_4228a6

            test RAX,RAX
            je .L_422a70
.L_4228a6:

            mov EDI,1
.L_4228ab:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_4228c1:

            mov R9D,DWORD PTR [RBP+40]
            mov RSI,QWORD PTR [RSP+128]
            test R9D,R9D
            jg .L_422aa8

            test RSI,RSI
            je .L_422e20
.L_4228df:

            mov RBP,QWORD PTR [RSP+24]
            jmp .L_4228fc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4228f0:

            mov RBP,RSI
            mov RSI,QWORD PTR [RSI+16]
            test RSI,RSI
            je .L_42290b
.L_4228fc:

            cmp R12,QWORD PTR [RSI+32]
            jbe .L_4228f0

            mov RSI,QWORD PTR [RSI+24]
            test RSI,RSI
            jne .L_4228fc
.L_42290b:

            cmp RBP,QWORD PTR [RSP+24]
            je .L_422918

            cmp R12,QWORD PTR [RBP+32]
            jae .L_422978
.L_422918:

            mov EDI,48
            mov RBX,RBP
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_424140

            test RDX,RDX
            je .L_422cf0

            cmp QWORD PTR [RSP+24],RDX
            je .L_42295d

            test RAX,RAX
            je .L_422a88
.L_42295d:

            mov EDI,1
.L_422962:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_422978:

            add DWORD PTR [RBP+40],1
            mov EDX,256
            mov RSI,R12
            mov RDI,R13
            call .L_420040

            test RAX,RAX
            je .L_4229e5

            cmp RAX,1
            je .L_4229ab

            cmp RAX,2
            je .L_422aa0

            test BYTE PTR [RAX+13],16
            jne .L_422aa0
.L_4229ab:

            xor EBX,EBX
            jmp .L_4229d0
          .byte 0x90
.L_4229b0:

            cmp RAX,2
            je .L_422a28

            jbe .L_4229c1

            mov R8D,DWORD PTR [RAX+8]
            test R8D,R8D
            jg .L_422a28
.L_4229c1:

            add EBX,1
            cmp EBX,256
            je .L_422aa0
.L_4229d0:

            mov EDX,EBX
            mov RSI,R12
            mov RDI,R13
            call .L_420040

            test RAX,RAX
            mov RBP,RAX
            jne .L_4229b0
.L_4229e5:

            xor R14D,R14D
.L_4229e8:

            mov RDI,QWORD PTR [RSP+72]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_422f72
.L_4229fa:

            mov RDI,QWORD PTR [RSP+40]
            call .L_41d7a0

            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+16]
            call .L_423890

            jmp .L_422676
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422a20:

            xor R14D,R14D
            jmp .L_4229fa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422a28:

            mov RSI,QWORD PTR [R15+8]
            movsx R8D,BL
            mov ECX,1
            xor EDX,EDX
            mov RDI,R15
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            add DWORD PTR [RSP+48],1
            mov RSI,QWORD PTR [RSP+128]
            mov R12,RBP
            mov EAX,DWORD PTR [RSP+48]
            cmp DWORD PTR [RSP+12],EAX
            jne .L_422822

            jmp .L_422aa8
          .byte 0x90
.L_422a60:

            mov ECX,DWORD PTR [RBX+40]
            test ECX,ECX
            jle .L_4228df

            jmp .L_422aa8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422a70:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_4228ab
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422a88:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_422962
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422aa0:

            mov RSI,QWORD PTR [RSP+128]
.L_422aa8:

            mov RBX,QWORD PTR [RSP+16]
            mov RDI,RBX
            lea R15,QWORD PTR [RBX+8]
            call .L_423890

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+144],R15
            mov QWORD PTR [RSP+152],0
            mov R12,QWORD PTR [RSP+200]
            mov QWORD PTR [RAX+8],0
            mov RAX,QWORD PTR [RAX]
            mov BYTE PTR [RAX],0
.L_422afc:

            mov RAX,QWORD PTR [RSP+128]
            mov RBX,R15
            test RAX,RAX
            mov RDX,RAX
            jne .L_422b24

            jmp .L_422b3f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422b18:

            mov RBX,RDX
            mov RDX,QWORD PTR [RDX+16]
.L_422b1f:

            test RDX,RDX
            je .L_422b30
.L_422b24:

            cmp R12,QWORD PTR [RDX+32]
            jbe .L_422b18

            mov RDX,QWORD PTR [RDX+24]
            jmp .L_422b1f
.L_422b30:

            cmp RBX,R15
            je .L_422b3f

            cmp R12,QWORD PTR [RBX+32]
            jae .L_422e30
.L_422b3f:

            mov EDI,48
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_424140

            test RDX,RDX
            je .L_422e40

            cmp R15,RDX
            je .L_422b7f

            test RAX,RAX
            je .L_422e7c
.L_422b7f:

            mov EDI,1
.L_422b84:

            mov RCX,R15
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_422b98:

            mov EDI,DWORD PTR [RBP+40]
            test EDI,EDI
            jg .L_422d3f

            mov RAX,QWORD PTR [RSP+128]
            test RAX,RAX
            je .L_422e74
.L_422bb4:

            mov RBP,R15
            jmp .L_422bcc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422bc0:

            mov RBP,RAX
            mov RAX,QWORD PTR [RAX+16]
.L_422bc7:

            test RAX,RAX
            je .L_422be0
.L_422bcc:

            cmp R12,QWORD PTR [RAX+32]
            jbe .L_422bc0

            mov RAX,QWORD PTR [RAX+24]
            jmp .L_422bc7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422be0:

            cmp RBP,R15
            je .L_422beb

            cmp R12,QWORD PTR [RBP+32]
            jae .L_422c47
.L_422beb:

            mov EDI,48
            mov RBX,RBP
            call _Znwm@PLT

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+32]
            mov QWORD PTR [RAX+32],R12
            mov DWORD PTR [RAX+40],0
            mov RSI,RBX
            mov RBP,RAX
            call .L_424140

            test RDX,RDX
            je .L_422e5a

            cmp R15,RDX
            je .L_422c2e

            test RAX,RAX
            je .L_422e8f
.L_422c2e:

            mov EDI,1
.L_422c33:

            mov RCX,R15
            mov RSI,RBP
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RSP+152],1
.L_422c47:

            add DWORD PTR [RBP+40],1
            mov EBX,255
            jmp .L_422c7b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422c58:

            cmp RAX,2
            je .L_422d10

            jbe .L_422c6f

            mov ESI,DWORD PTR [RAX+8]
            test ESI,ESI
            jg .L_422d10
.L_422c6f:

            sub EBX,1
            cmp EBX,-1
            je .L_4229e8
.L_422c7b:

            mov EDX,EBX
            mov RSI,R12
            mov RDI,R13
            call .L_420040
.L_422c88:

            test RAX,RAX
            mov RBP,RAX
            jne .L_422c58

            jmp .L_4229e5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422c98:

            mov RDX,QWORD PTR [R15+8]
            lea RCX,QWORD PTR [RIP+.L_423659]
            xor R8D,R8D
            xor ESI,ESI
            mov RDI,R15
.L_422cab:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT

            mov RDI,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RIP+.L_423659]
            xor R8D,R8D
            xor ESI,ESI
            mov RDX,QWORD PTR [RDI+8]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_422cca:

            jmp .L_4229fa
          .byte 0x90
.L_422cd0:

            mov RDI,RBP
            mov QWORD PTR [RSP+56],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+56]
            mov RBP,RAX
            jmp .L_4228c1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422cf0:

            mov RDI,RBP
            mov QWORD PTR [RSP+56],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+56]
            mov RBP,RAX
            jmp .L_422978
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422d10:

            mov RDI,QWORD PTR [RSP+32]
            movsx R8D,BL
            mov ECX,1
            xor EDX,EDX
            mov RSI,QWORD PTR [RDI+8]
.L_422d24:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            add DWORD PTR [RSP+52],1
            mov R12,RBP
            mov EAX,DWORD PTR [RSP+52]
            cmp DWORD PTR [RSP+12],EAX
            jne .L_422afc
.L_422d3f:

            mov R15,QWORD PTR [RSP+32]
            lea RBX,QWORD PTR [RSP+256]
            lea RSI,QWORD PTR [RSP+96]
            mov RDI,RBX
            mov RAX,QWORD PTR [R15]
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [R15+8]
            mov DWORD PTR [RSP+104],EAX
            call .L_415a60
.L_422d69:

            mov RSI,QWORD PTR [RSP+256]
            mov RDI,QWORD PTR [R15]
            lea RCX,QWORD PTR [RBX+16]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_422ef6

            mov RDI,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+272]
            add RDI,16
            cmp RAX,RDI
            je .L_422f30

            mov R9,QWORD PTR [RSP+32]
            test RAX,RAX
            mov RDI,QWORD PTR [R9+16]
            mov QWORD PTR [R9],RSI
            mov QWORD PTR [R9+8],RDX
            mov QWORD PTR [R9+16],RCX
            je .L_422f40

            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDI
.L_422dd3:

            mov QWORD PTR [RSP+264],0
            mov BYTE PTR [RAX],0
            add RBX,16
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,RBX
            je .L_422df8

            call _ZdlPv@PLT
.L_422df8:

            mov RAX,QWORD PTR [RSP+32]
            cmp QWORD PTR [RAX+8],0
            setne R14B
            jmp .L_4229e8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422e10:

            mov RBX,QWORD PTR [RSP+24]
            jmp .L_422864
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422e20:

            mov RBP,QWORD PTR [RSP+24]
            jmp .L_422918
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422e30:

            mov EDX,DWORD PTR [RBX+40]
            test EDX,EDX
            jle .L_422bb4

            jmp .L_422d3f
.L_422e40:

            mov RDI,RBP
            mov QWORD PTR [RSP+24],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov RBP,RAX
            jmp .L_422b98
.L_422e5a:

            mov RDI,RBP
            mov QWORD PTR [RSP+24],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov RBP,RAX
            jmp .L_422c47
.L_422e74:

            mov RBP,R15
            jmp .L_422beb
.L_422e7c:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_422b84
.L_422e8f:

            xor EDI,EDI
            mov RAX,QWORD PTR [RDX+32]
            cmp QWORD PTR [RBP+32],RAX
            setb DIL
            jmp .L_422c33
.L_422ea2:

            mov RBX,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_423890

            mov RAX,RBX
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+152],0
            add RAX,8
            mov QWORD PTR [RSP+136],RAX
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+8],0
            mov RAX,QWORD PTR [RAX]
            mov BYTE PTR [RAX],0
            jmp .L_422d3f
.L_422ef6:

            test RDX,RDX
            je .L_422f16

            cmp RDX,1
            je .L_422f51

            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RAX]
.L_422f16:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_422dd3
.L_422f30:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX],RSI
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
.L_422f40:

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+256],RAX
            jmp .L_422dd3
.L_422f51:

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RAX]
            jmp .L_422f16
.L_422f6d:

            call __stack_chk_fail@PLT
.L_422f72:

            call abort@PLT
.L_422f77:

            mov RBX,RAX
.L_422f7a:

            mov RDI,QWORD PTR [RSP+40]
            call .L_41d7a0

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+128]
            call .L_423890

            mov RDI,RBX
.L_422f99:

            call _Unwind_Resume@PLT
.L_422f9e:

            lea RDI,QWORD PTR [RSP+72]
            mov RBX,RAX
            call .L_40c4d0

            jmp .L_422f7a
.L_422fad:

            nop
            nop
            nop
.L_422fb0:

            push R14
            push R13
            mov R14D,ECX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            add RDI,40
            mov R13,RDX
            sub RSP,16
.L_422fcc:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RDI
            call pthread_rwlock_wrlock@PLT

            test EAX,EAX
            jne .L_42307a

            mov RBP,QWORD PTR [RBX+104]
            test RBP,RBP
            je .L_423038
.L_422ff6:

            mov RDI,QWORD PTR [RSP]
            call pthread_rwlock_unlock@PLT

            test EAX,EAX
            jne .L_42307a

            mov RDX,R13
            mov ECX,R14D
            mov RSI,R12
            mov RDI,RBP
.L_42300f:

            call .L_422640
.L_423014:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_42307f

            add RSP,16
.L_423028:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423038:

            mov EDI,368
.L_42303d:

            call _Znwm@PLT
.L_423042:

            mov RBP,RAX
            mov RAX,QWORD PTR [RBX+112]
            mov EDX,1
            mov RSI,RBX
            mov RDI,RBP
            mov RCX,RAX
            shr RCX,63
            add RCX,RAX
            sar RCX,1
.L_423061:

            call .L_41d8b0
.L_423066:

            lea RAX,QWORD PTR [RIP+.L_41ec60]
            mov QWORD PTR [RBX+104],RBP
            mov QWORD PTR [RBX+120],RAX
            jmp .L_422ff6
.L_42307a:

            call abort@PLT
.L_42307f:

            call __stack_chk_fail@PLT
.L_423084:

            mov RBX,RAX
.L_423087:

            mov RDI,RSP
            call .L_40c4d0

            mov RDI,RBX
.L_423092:

            call _Unwind_Resume@PLT
.L_423097:

            mov ESI,368
            mov RDI,RBP
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_423087
.L_4230a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4230b0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            push RBX
.L_4230bd:

            xor EBX,EBX
            sub RSP,328
            mov QWORD PTR [RBP-312],RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+16],0
            je .L_423106
.L_4230e2:

            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_423526

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_423105:

            ret 
.L_423106:

            lea RDI,QWORD PTR [RDI+112]
            mov BYTE PTR [RBP-296],0
            mov QWORD PTR [RBP-304],RDI
            call pthread_rwlock_rdlock@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_42352b

            lea R12,QWORD PTR [RBP-144]
            mov RDI,QWORD PTR [RBP-312]
            lea RAX,QWORD PTR [RBP-304]
            mov QWORD PTR [RBP-144],0
            mov DWORD PTR [RBP-136],0
            mov RSI,R12
            mov QWORD PTR [RBP-128],0
            mov DWORD PTR [RBP-120],0
            mov BYTE PTR [RBP-112],0
            mov BYTE PTR [RBP-111],0
            mov BYTE PTR [RBP-110],0
            mov QWORD PTR [RBP-104],0
            mov DWORD PTR [RBP-96],4294967295
            mov QWORD PTR [RBP-352],RAX
            mov QWORD PTR [RBP-88],RAX
            mov BYTE PTR [RBP-80],0
            mov QWORD PTR [RBP-72],0
            mov QWORD PTR [RBP-64],0
.L_42319d:

            call .L_421470

            test AL,AL
            je .L_4231ad

            cmp QWORD PTR [RBP-104],2
            ja .L_4231be
.L_4231ad:

            mov RDI,QWORD PTR [RBP-352]
            call .L_41d7a0

            jmp .L_4230e2
.L_4231be:

            movabs RAX,4611686019492741120
            lea RSI,QWORD PTR [RIP+_ZNSt3tr18__detail12__prime_listE]
            mov QWORD PTR [RBP-168],0
            mov QWORD PTR [RBP-160],RAX
            mov EDI,303
.L_4231e6:

            mov RAX,RDI
            sar RAX,1
            lea RCX,QWORD PTR [RSI+RAX*8]
            cmp QWORD PTR [RCX],9
            ja .L_423217

            jmp .L_423450
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423200:

            mov RDX,RAX
            sar RDX,1
            lea RCX,QWORD PTR [RSI+RDX*8]
            cmp QWORD PTR [RCX],9
            jbe .L_423456

            mov RAX,RDX
.L_423217:

            test RAX,RAX
            jne .L_423200
.L_42321c:

            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            js .L_4234b4

            pxor XMM0,XMM0
            cvtsi2ss XMM0,RDI
.L_423231:

            ucomiss XMM0,DWORD PTR [RIP+.L_4255d4]
            jae .L_42346f

            cvttss2si RAX,XMM0
            mov QWORD PTR [RBP-152],RAX
.L_42324a:

            mov QWORD PTR [RBP-176],RDI
            call .L_41cd20
.L_423256:

            mov QWORD PTR [RBP-184],RAX
            lea R14,QWORD PTR [RBP-256]
            lea RAX,QWORD PTR [RBP-192]
            sub RSP,8
            lea RDX,QWORD PTR [R12+40]
            mov QWORD PTR [RBP-288],0
            push 0
            mov RSI,RAX
            mov RDI,R14
            mov QWORD PTR [RBP-280],0
            mov QWORD PTR [RBP-272],0
            mov QWORD PTR [RBP-328],RAX
.L_4232a4:

            call .L_423f20

            pop RCX
            pop RSI
            mov RSI,QWORD PTR [RBP-280]
            cmp RSI,QWORD PTR [RBP-272]
            je .L_4234d5

            test RSI,RSI
            je .L_4232cb

            mov RAX,QWORD PTR [RBP-104]
            mov QWORD PTR [RSI],RAX
.L_4232cb:

            add RSI,8
            mov QWORD PTR [RBP-280],RSI
.L_4232d6:

            mov RDI,QWORD PTR [RBP-288]
            mov RBX,RSI
            mov QWORD PTR [RBP-344],0
            sub RBX,RDI
            sar RBX,3
            cmp RDI,RSI
            je .L_423435

            mov RAX,QWORD PTR [RBP-328]
            add RAX,16
            mov QWORD PTR [RBP-320],RAX
            lea RAX,QWORD PTR [RBP-224]
            mov QWORD PTR [RBP-336],RAX
            lea RAX,QWORD PTR [RBP-288]
            mov QWORD PTR [RBP-360],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423330:

            mov RAX,QWORD PTR [RBP-344]
            xor EBX,EBX
            mov R12,QWORD PTR [RDI+RAX*8]
            mov RAX,QWORD PTR [RBP-328]
            lea R15,QWORD PTR [RAX+8]
            jmp .L_42335f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423350:

            add EBX,1
            cmp EBX,257
            je .L_423408
.L_42335f:

            mov RDI,QWORD PTR [RBP-312]
            mov EDX,EBX
            mov RSI,R12
.L_42336b:

            call .L_421160

            cmp RAX,2
            mov QWORD PTR [RBP-256],RAX
            jbe .L_423350

            mov RDX,QWORD PTR [RBP-176]
            mov RAX,QWORD PTR [RBP-184]
            mov RDI,R15
            mov RSI,QWORD PTR [RBP-320]
            mov R13,QWORD PTR [RAX+RDX*8]
            mov RDX,R14
            call .L_41cef0

            cmp R13,RAX
            jne .L_423350

            sub RSP,8
            mov RSI,QWORD PTR [RBP-328]
            mov RDI,QWORD PTR [RBP-336]
            push 0
            mov RDX,R14
.L_4233bd:

            call .L_423f20

            mov RSI,QWORD PTR [RBP-280]
            cmp RSI,QWORD PTR [RBP-272]
            pop RAX
            pop RDX
            je .L_4234a0

            test RSI,RSI
            je .L_4233e7

            mov RAX,QWORD PTR [RBP-256]
            mov QWORD PTR [RSI],RAX
.L_4233e7:

            add EBX,1
            add RSI,8
            cmp EBX,257
            mov QWORD PTR [RBP-280],RSI
            jne .L_42335f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423408:

            mov RDI,QWORD PTR [RBP-288]
            mov RBX,QWORD PTR [RBP-280]
            add QWORD PTR [RBP-344],1
            mov RAX,QWORD PTR [RBP-344]
            sub RBX,RDI
            sar RBX,3
            cmp RAX,RBX
            jb .L_423330
.L_423435:

            test RDI,RDI
            je .L_42343f

            call _ZdlPv@PLT
.L_42343f:

            mov RDI,QWORD PTR [RBP-328]
            call .L_423730

            jmp .L_4231ad
.L_423450:

            mov RDX,RAX
            mov RAX,RDI
.L_423456:

            sub RAX,RDX
            lea RSI,QWORD PTR [RCX+8]
            lea RDI,QWORD PTR [RAX-1]
            test RDI,RDI
            jg .L_4231e6

            jmp .L_42321c
.L_42346f:

            subss XMM0,DWORD PTR [RIP+.L_4255d4]
            cvttss2si RAX,XMM0
            mov QWORD PTR [RBP-152],RAX
            movabs RAX,-9223372036854775808
            xor QWORD PTR [RBP-152],RAX
            jmp .L_42324a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4234a0:

            mov RDI,QWORD PTR [RBP-360]
            mov RDX,R14

            call .L_423760

            jmp .L_423350
.L_4234b4:

            mov RAX,RDI
            mov RDX,RDI
            pxor XMM0,XMM0
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2ss XMM0,RAX
            addss XMM0,XMM0
            jmp .L_423231
.L_4234d5:

            lea RDX,QWORD PTR [R12+40]
            lea RDI,QWORD PTR [RBP-288]
            call .L_423760
.L_4234e6:

            mov RSI,QWORD PTR [RBP-280]
            jmp .L_4232d6
.L_4234f2:

            mov RDI,QWORD PTR [RBP-288]
            mov RBX,RAX
            test RDI,RDI
            je .L_423506

            call _ZdlPv@PLT
.L_423506:

            mov RDI,QWORD PTR [RBP-328]
            call .L_423730
.L_423512:

            mov RDI,QWORD PTR [RBP-352]
            call .L_41d7a0

            mov RDI,RBX
.L_423521:

            call _Unwind_Resume@PLT
.L_423526:

            call __stack_chk_fail@PLT
.L_42352b:

            call abort@PLT
.L_423530:

            mov RBX,RAX
            jmp .L_423512
.L_423535:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423540:

            sub RSP,8
            call .L_41e840

            add RSP,8
            mov RDI,RAX
            jmp .L_4230b0
.L_423555:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423558:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_423588:
          .string "DFA out of memory: prog size %lld mem %lld"
          .zero 5
.L_4235b8:
          .string "DFA memory cache could be too small: "
          .zero 2
.L_4235e0:
          .string "StateSaver failed to restore state."
          .zero 4
.L_423608:
          .string "Unexpected special state in RunStateOnByte"
          .zero 5
.L_423638:
          .string "Failed to analyze start state."
.L_423657:
          .string "\n"
.L_423659:
          .zero 1
.L_42365a:
          .string ","
.L_42365c:
          .string "|"
.L_42365e:
          .string "%s%d"
          .byte 0x5f
.L_423664:
          .byte 0x0
          .byte 0x58
.L_423666:
          .byte 0x0
          .byte 0x2a
.L_423668:
          .zero 1
.L_423669:
          .string "(%p)"
.L_42366e:
          .string " flag=%#x"
.L_423678:
          .string "re2/dfa.cc"
.L_423683:
          .string ":"
.L_423685:
          .string ": "
.L_423688:
          .string "vector::reserve"
.L_423698:

            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            insb BYTE PTR [RDI],DX
            jns .L_4236bd
          .byte 0x72
          .byte 0x6f
          .byte 0x6f
          .byte 0x6d
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x0
.L_4236a7:
          .string " states."
.L_4236b0:
          .byte 0x44
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
.L_4236bd:

            push RDX
            jne .L_42372e

            push RBX
            je .L_423724
          .byte 0x74
          .byte 0x65
          .byte 0x4f
          .byte 0x6e
          .byte 0x42
          .byte 0x79
          .byte 0x74
          .byte 0x65
          .byte 0x0
.L_4236cc:
          .string "NULL state in RunStateOnByte"
.L_4236e9:
          .string "Text is not inside context."
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423708:
          .long .L_41d470-.L_423708
          .long .L_41d470-.L_423708
          .long .L_41d460-.L_423708
          .long .L_41d430-.L_423708
          .long .L_41d420-.L_423708
          .long .L_41d460-.L_423708
          .long .L_41d430-.L_423708
.L_423724:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42372e:

            nop
            nop
.L_423730:

            push RBX
            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI+8]
            call .L_41ccd0

            mov QWORD PTR [RBX+24],0
            mov RDI,QWORD PTR [RBX+8]
            pop RBX
            jmp _ZdlPv@PLT
.L_423753:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423760:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_423777:

            mov RCX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov RAX,RCX
            sub R14,RBX
            sub RAX,RBX
            sar RAX,3
            test RAX,RAX
            je .L_423850

            lea RSI,QWORD PTR [RAX+RAX*1]
            mov R15,-8
            cmp RAX,RSI
            jbe .L_423868
.L_4237a8:

            mov RDI,R15
            mov QWORD PTR [RSP],RDX
            call _Znwm@PLT

            mov RBX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,R12
            mov RDX,QWORD PTR [RSP]
            mov R13,RAX
            add R15,RAX
            sub R8,RBX
.L_4237cc:

            add R14,R13
            je .L_4237d7

            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [R14],RAX
.L_4237d7:

            cmp R12,RBX
            je .L_4237fc

            mov RDX,R8
            mov RSI,RBX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_4237fc:

            mov R14,RCX
            lea R8,QWORD PTR [R13+R8*1+8]
            sub R14,R12
            cmp RCX,R12
            je .L_42381d

            mov RDI,R8
            mov RDX,R14
            mov RSI,R12
            call memcpy@PLT

            mov R8,RAX
.L_42381d:

            add R14,R8
            test RBX,RBX
            je .L_42382d

            mov RDI,RBX
            call _ZdlPv@PLT
.L_42382d:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],R14
            mov QWORD PTR [RBP+16],R15
            add RSP,24
.L_42383d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423850:

            mov ESI,1
.L_423855:

            lea R15,QWORD PTR [RSI*8]
            jmp .L_4237a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423868:

            movabs RAX,2305843009213693951
            cmp RSI,RAX
            ja .L_4237a8

            test RSI,RSI
            jne .L_423855

            mov R8,R14
            xor R15D,R15D
            xor R13D,R13D
            jmp .L_4237cc
.L_42388e:

            nop
            nop
.L_423890:

            test RSI,RSI
            je .L_4238c8

            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
.L_42389f:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_423890

            mov RBP,QWORD PTR [RBX+16]
            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            mov RBX,RBP
            jne .L_42389f

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4238c8:

            ret 
.L_4238ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4238d0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_4238e7:

            mov RCX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            mov RAX,RCX
            sub R14,RBX
            sub RAX,RBX
            sar RAX,2
            test RAX,RAX
            je .L_4239c0

            lea RSI,QWORD PTR [RAX+RAX*1]
            mov R15,-4
            cmp RAX,RSI
            jbe .L_4239d8
.L_423918:

            mov RDI,R15
            mov QWORD PTR [RSP],RDX
            call _Znwm@PLT

            mov RBX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,R12
            mov RDX,QWORD PTR [RSP]
            mov R13,RAX
            add R15,RAX
            sub R8,RBX
.L_42393c:

            add R14,R13
            je .L_423946

            mov EAX,DWORD PTR [RDX]
            mov DWORD PTR [R14],EAX
.L_423946:

            cmp R12,RBX
            je .L_42396b

            mov RDX,R8
            mov RSI,RBX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
.L_42396b:

            mov R14,RCX
            lea R8,QWORD PTR [R13+R8*1+4]
            sub R14,R12
            cmp RCX,R12
            je .L_42398c

            mov RDI,R8
            mov RDX,R14
            mov RSI,R12
            call memcpy@PLT

            mov R8,RAX
.L_42398c:

            add R14,R8
            test RBX,RBX
            je .L_42399c

            mov RDI,RBX
            call _ZdlPv@PLT
.L_42399c:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],R14
            mov QWORD PTR [RBP+16],R15
            add RSP,24
.L_4239ac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4239c0:

            mov ESI,1
.L_4239c5:

            lea R15,QWORD PTR [RSI*4]
            jmp .L_423918
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4239d8:

            movabs RAX,4611686018427387903
            cmp RSI,RAX
            ja .L_423918

            test RSI,RSI
            jne .L_4239c5

            mov R8,R14
            xor R15D,R15D
            xor R13D,R13D
            jmp .L_42393c
.L_4239fe:

            nop
            nop
.L_423a00:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov RDI,RSI
            push RBP
            push RBX
            mov R12,RSI
            sub RSP,40
.L_423a17:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
.L_423a27:

            call .L_41cd20
.L_423a2c:

            cmp QWORD PTR [R15+16],0
            mov R13,RAX
            je .L_423b42

            lea RAX,QWORD PTR [RSP+20]
            mov RCX,QWORD PTR [R15+8]
            xor R14D,R14D
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423a60:

            mov RBX,QWORD PTR [RCX+R14*8]
            lea RBP,QWORD PTR [R14*8]
            test RBX,RBX
            jne .L_423af5

            jmp .L_423b08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423a80:

            mov ECX,DWORD PTR [RAX+8]
            mov RDI,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RAX+12]
            mov DWORD PTR [RSP+20],0
            lea EDX,DWORD PTR [RCX*4]
            mov RCX,QWORD PTR [RSP]
            mov DWORD PTR [RSP+16],EAX
            lea ESI,DWORD PTR [RDX+3]
            test EDX,EDX
            cmovns ESI,EDX
            mov RDX,QWORD PTR [RSP+8]
            sar ESI,2
            movsxd RSI,ESI
.L_423ab3:

            call .L_43df70
.L_423ab8:

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+20]
            mov RCX,QWORD PTR [R15+8]
            shl RAX,32
            or RAX,RDX
            xor EDX,EDX
            div R12
            lea RDX,QWORD PTR [R13+RDX*8]
.L_423ad5:

            mov RSI,QWORD PTR [RBX+8]
            lea RAX,QWORD PTR [RCX+RBP*1]
            mov RDI,RCX
            mov QWORD PTR [RAX],RSI
            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RDX],RBX
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_423b08
.L_423af5:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_423a80

            mov RDX,R13
            jmp .L_423ad5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423b08:

            add R14,1
            cmp QWORD PTR [R15+16],R14
            ja .L_423a60
.L_423b16:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            mov QWORD PTR [R15+16],R12
            mov QWORD PTR [R15+8],R13
            jne .L_423b7d

            add RSP,40
.L_423b37:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_423b42:

            mov RDI,QWORD PTR [R15+8]
            jmp .L_423b16
.L_423b48:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RSI,R12
            mov RDI,R13
            call .L_41ccd0

            mov RDI,R13
            call _ZdlPv@PLT

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15+8]
            call .L_41ccd0

            mov QWORD PTR [R15+24],0
.L_423b78:

            call __cxa_rethrow@PLT
.L_423b7d:

            call __stack_chk_fail@PLT
.L_423b82:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_423b8d:

            call _Unwind_Resume@PLT
.L_423b92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423ba0:

            push R14
            push R13
            mov R13,RDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            sub RSP,16
.L_423bb5:

            mov RDX,QWORD PTR [RDI+24]
            lea RAX,QWORD PTR [RDX+1]
            cmp RAX,QWORD PTR [RDI+40]
            ja .L_423c10
.L_423bc3:

            mov EDI,16
.L_423bc8:

            call _Znwm@PLT

            mov RBP,RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP],RAX
.L_423be0:

            mov RAX,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RAX+R13*8]
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RBP+8],RAX
            mov QWORD PTR [RDX],RBP
            mov RAX,RBP
            add QWORD PTR [RBX+24],1
            add RSP,16
.L_423bfe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423c10:

            test RDX,RDX
            movss XMM5,DWORD PTR [RDI+32]
            js .L_423e90

            pxor XMM1,XMM1
            cvtsi2ss XMM1,RDX
.L_423c27:

            mov RAX,QWORD PTR [RBX+16]
            movss XMM4,DWORD PTR [RIP+.L_4255d8]
            addss XMM1,XMM4
            test RAX,RAX
            divss XMM1,XMM5
            js .L_423e70

            pxor XMM2,XMM2
            cvtsi2ss XMM2,RAX
.L_423c4d:

            ucomiss XMM1,XMM2
            jbe .L_423da0

            mulss XMM2,DWORD PTR [RBX+36]
            movss XMM3,DWORD PTR [RIP+.L_4255e0]
            movss XMM6,DWORD PTR [RIP+.L_4255dc]
            movaps XMM7,XMM3
            maxss XMM2,XMM1
            movaps XMM0,XMM2
            movaps XMM1,XMM2
            andps XMM0,XMM3
            ucomiss XMM6,XMM0
            jbe .L_423c9e

            cvttss2si EAX,XMM2
            pxor XMM0,XMM0
            andnps XMM7,XMM1
            cvtsi2ss XMM0,EAX
            cmpnless XMM2,XMM0
            andps XMM2,XMM4
            addss XMM2,XMM0
            orps XMM2,XMM7
.L_423c9e:

            ucomiss XMM2,DWORD PTR [RIP+.L_4255d4]
            jae .L_423ed8

            cvttss2si RDI,XMM2
.L_423cb0:

            lea R8,QWORD PTR [RIP+_ZNSt3tr18__detail12__prime_listE]
            mov R9D,303
.L_423cbd:

            mov RDX,R9
            sar RDX,1
            lea RSI,QWORD PTR [R8+RDX*8]
            cmp RDI,QWORD PTR [RSI]
            jbe .L_423cee

            jmp .L_423e28
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423cd8:

            mov RAX,RDX
            sar RAX,1
            lea RSI,QWORD PTR [R8+RAX*8]
            cmp RDI,QWORD PTR [RSI]
            ja .L_423e30

            mov RDX,RAX
.L_423cee:

            test RDX,RDX
            jne .L_423cd8
.L_423cf3:

            mov RDX,QWORD PTR [R8]
            test RDX,RDX
            js .L_423e50

            pxor XMM0,XMM0
            cvtsi2ss XMM0,RDX
.L_423d08:

            mulss XMM0,XMM5
            movaps XMM1,XMM3
            movaps XMM2,XMM0
            movaps XMM5,XMM0
            andps XMM2,XMM3
            ucomiss XMM6,XMM2
            jbe .L_423d3b

            cvttss2si EAX,XMM0
            pxor XMM2,XMM2
            andnps XMM1,XMM5
            cvtsi2ss XMM2,EAX
            cmpnless XMM0,XMM2
            andps XMM0,XMM4
            addss XMM0,XMM2
            orps XMM0,XMM1
.L_423d3b:

            ucomiss XMM0,DWORD PTR [RIP+.L_4255d4]
            jae .L_423e00

            cvttss2si RDX,XMM0
            mov QWORD PTR [RBX+40],RDX
.L_423d51:

            mov EDI,16
            mov R14,QWORD PTR [R8]
            mov QWORD PTR [RSP+8],RCX
            call _Znwm@PLT
.L_423d63:

            mov RCX,QWORD PTR [RSP+8]
            mov RBP,RAX
            mov RAX,QWORD PTR [R12]
            xor EDX,EDX
            mov QWORD PTR [RBP+8],0
            mov RSI,R14
            mov RDI,RBX
            mov QWORD PTR [RBP],RAX
            mov RAX,RCX
            div R14
            mov R13,RDX
.L_423d8c:

            call .L_423a00
.L_423d91:

            jmp .L_423be0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423da0:

            mulss XMM5,XMM2
            movss XMM3,DWORD PTR [RIP+.L_4255e0]
            movaps XMM2,XMM5
            movaps XMM0,XMM5
            movaps XMM1,XMM5
            andps XMM2,XMM3
            movss XMM5,DWORD PTR [RIP+.L_4255dc]
            ucomiss XMM5,XMM2
            jbe .L_423de3

            cvttss2si EAX,XMM0
            pxor XMM2,XMM2
            andnps XMM3,XMM0
            cvtsi2ss XMM2,EAX
            cmpnless XMM1,XMM2
            andps XMM1,XMM4
            addss XMM1,XMM2
            orps XMM1,XMM3
.L_423de3:

            ucomiss XMM1,DWORD PTR [RIP+.L_4255d4]
            jae .L_423eb0

            cvttss2si RAX,XMM1
            mov QWORD PTR [RBX+40],RAX
            jmp .L_423bc3
          .byte 0x66
          .byte 0x90
.L_423e00:

            subss XMM0,DWORD PTR [RIP+.L_4255d4]
            movabs RAX,-9223372036854775808
            cvttss2si RDX,XMM0
            mov QWORD PTR [RBX+40],RDX
            xor QWORD PTR [RBX+40],RAX
            jmp .L_423d51
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423e28:

            mov RAX,RDX
            mov RDX,R9
            nop
            nop
.L_423e30:

            sub RDX,RAX
            lea R8,QWORD PTR [RSI+8]
            lea R9,QWORD PTR [RDX-1]
            test R9,R9
            jg .L_423cbd

            jmp .L_423cf3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423e50:

            mov RAX,RDX
            pxor XMM0,XMM0
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2ss XMM0,RAX
            addss XMM0,XMM0
            jmp .L_423d08
          .byte 0x66
          .byte 0x90
.L_423e70:

            mov RDX,RAX
            pxor XMM2,XMM2
            shr RDX,1
            and EAX,1
            or RDX,RAX
            cvtsi2ss XMM2,RDX
            addss XMM2,XMM2
            jmp .L_423c4d
          .byte 0x66
          .byte 0x90
.L_423e90:

            mov RAX,RDX
            pxor XMM1,XMM1
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2ss XMM1,RAX
            addss XMM1,XMM1
            jmp .L_423c27
          .byte 0x66
          .byte 0x90
.L_423eb0:

            subss XMM1,DWORD PTR [RIP+.L_4255d4]
            cvttss2si RAX,XMM1
            mov QWORD PTR [RBX+40],RAX
            movabs RAX,-9223372036854775808
            xor QWORD PTR [RBX+40],RAX
            jmp .L_423bc3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423ed8:

            subss XMM2,DWORD PTR [RIP+.L_4255d4]
            movabs RAX,-9223372036854775808
            cvttss2si RDI,XMM2
            xor RDI,RAX
            jmp .L_423cb0
.L_423ef7:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RDI,RBP
            call _ZdlPv@PLT
.L_423f07:

            call __cxa_rethrow@PLT
.L_423f0c:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_423f17:

            call _Unwind_Resume@PLT
.L_423f1c:

            nop
            nop
            nop
            nop
.L_423f20:

            push R14
            push R13
            xor ECX,ECX
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,16
.L_423f37:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            je .L_423f97

            mov EDX,DWORD PTR [RAX+8]
            mov RDI,QWORD PTR [RAX]
            lea RCX,QWORD PTR [RSP+4]
            mov EAX,DWORD PTR [RAX+12]
            mov DWORD PTR [RSP+4],0
            lea R8D,DWORD PTR [RDX*4]
            mov RDX,RSP
            mov DWORD PTR [RSP],EAX
            lea ESI,DWORD PTR [R8+3]
            test R8D,R8D
            cmovns ESI,R8D
            sar ESI,2
            movsxd RSI,ESI
            call .L_43df70

            mov ECX,DWORD PTR [RSP]
            mov EAX,DWORD PTR [RSP+4]
            shl RCX,32
            or RCX,RAX
.L_423f97:

            xor EDX,EDX
            mov RAX,RCX
            div QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RBP+8]
            lea R10,QWORD PTR [RAX+RDX*8]
            mov RAX,QWORD PTR [R10]
            test RAX,RAX
            je .L_424090

            mov RDI,QWORD PTR [R12]
            mov RSI,QWORD PTR [RAX]
            cmp RDI,RSI
            je .L_423ff9

            test RDI,RDI
            sete R9B
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423fd0:

            test RSI,RSI
            je .L_423fe4

            test R9B,R9B
            jne .L_423fe4

            mov R8D,DWORD PTR [RDI+8]
            cmp R8D,DWORD PTR [RSI+8]
            je .L_424030
.L_423fe4:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_424090

            mov RSI,QWORD PTR [RAX]
            cmp RSI,RDI
            jne .L_423fd0
.L_423ff9:

            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],R10
            mov BYTE PTR [RBX+16],0
.L_424004:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4240ab

            add RSP,16
.L_42401f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424030:

            mov R14D,DWORD PTR [RSI+12]
            cmp DWORD PTR [RDI+12],R14D
            jne .L_423fe4

            test R8D,R8D
            jle .L_423ff9

            mov R11,QWORD PTR [RSI]
            mov R13,QWORD PTR [RDI]
            mov ESI,DWORD PTR [R13]
            cmp DWORD PTR [R11],ESI
            jne .L_423fe4

            lea ESI,DWORD PTR [R8-1]
            lea R14,QWORD PTR [RSI*4+4]
            mov ESI,4
            jmp .L_42407c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424068:

            mov R8D,DWORD PTR [R13+RSI*1]
            add RSI,4
            cmp R8D,DWORD PTR [R11+RSI*1-4]
            jne .L_423fe4
.L_42407c:

            cmp R14,RSI
            jne .L_424068

            jmp .L_423ff9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424090:

            mov RSI,R12
            mov RDI,RBP
            call .L_423ba0

            mov BYTE PTR [RBX+16],1
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RDX
            jmp .L_424004
.L_4240ab:

            call __stack_chk_fail@PLT
.L_4240b0:

            push RBP
            push RBX
            sub RSP,8
.L_4240b6:

            mov RBX,QWORD PTR [RDI+16]
            test RBX,RBX
            je .L_424110

            mov R8,QWORD PTR [RSI]
            jmp .L_4240da
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4240c8:

            mov RAX,QWORD PTR [RBX+16]
            mov R9D,1
            test RAX,RAX
            je .L_4240ef
.L_4240d7:

            mov RBX,RAX
.L_4240da:

            mov RCX,QWORD PTR [RBX+32]
            cmp R8,RCX
            jb .L_4240c8

            mov RAX,QWORD PTR [RBX+24]
            xor R9D,R9D
            test RAX,RAX
            jne .L_4240d7
.L_4240ef:

            test R9B,R9B
            mov R10,RBX
            jne .L_424114
.L_4240f7:

            xor EDX,EDX
            mov RAX,RBX
            cmp R8,RCX
            cmova RAX,RDX
            cmova RDX,R10
.L_424107:

            add RSP,8
.L_42410b:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_424110:

            lea RBX,QWORD PTR [RDI+8]
.L_424114:

            xor EAX,EAX
            cmp QWORD PTR [RDI+24],RBX
            mov RDX,RBX
            je .L_424107

            mov RBP,RSI
            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R10,RBX
            mov R8,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RAX+32]
            mov RBX,RAX
            jmp .L_4240f7
.L_42413a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_424140:

            push R13
            lea RAX,QWORD PTR [RDI+8]
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
.L_424154:

            cmp RSI,RAX
            je .L_4241d8

            mov R13,QWORD PTR [RDX]
            cmp R13,QWORD PTR [RSI+32]
            mov RBX,RSI
            jae .L_4241a0

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            mov RDX,RAX
            je .L_424194

            mov RDI,RSI
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jbe .L_4241ec

            cmp QWORD PTR [RAX+24],0
            mov EAX,0
            cmovne RAX,RBX
            cmovne RDX,RBX
.L_424194:

            add RSP,8
.L_424198:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_4241a0:

            jbe .L_424208

            mov RCX,QWORD PTR [RDI+32]
            xor EAX,EAX
            cmp RCX,RSI
            mov RDX,RCX
            je .L_424194

            mov RDI,RSI
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            cmp R13,QWORD PTR [RAX+32]
            mov RDX,RAX
            jae .L_4241ec

            cmp QWORD PTR [RBX+24],0
            mov EAX,0
            cmovne RAX,RDX
            cmove RDX,RBX
            jmp .L_424194
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4241d8:

            cmp QWORD PTR [RDI+40],0
            je .L_4241ec

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [RBX+32],RAX
            jb .L_424220
.L_4241ec:

            add RSP,8
.L_4241f0:

            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_4240b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424208:

            add RSP,8
            mov RAX,RSI
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424220:

            add RSP,8
            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_424230:

            lea RAX,QWORD PTR [RDX-1]
            push RBP
            push RBX
.L_424236:

            mov RBP,RDX
            mov RBX,RAX
            and EBP,1
            shr RBX,63
            add RBX,RAX
            sar RBX,1
            cmp RSI,RBX
            jge .L_424330

            mov R11,RSI
            nop
            nop
            nop
.L_424258:

            lea RAX,QWORD PTR [R11+1]
            lea R8,QWORD PTR [RAX+RAX*1]
            shl RAX,3
            lea R9,QWORD PTR [RDI+RAX*1]
            mov R10D,DWORD PTR [R9]
            cmp R10D,DWORD PTR [RDI+RAX*1-4]
            jge .L_42427d

            sub R8,1
            lea R9,QWORD PTR [RDI+R8*4]
            mov R10D,DWORD PTR [R9]
.L_42427d:

            cmp R8,RBX
            mov DWORD PTR [RDI+R11*4],R10D
            mov R11,R8
            jl .L_424258

            test RBP,RBP
            je .L_4242f0
.L_42428e:

            lea RAX,QWORD PTR [R8-1]
            mov RDX,RAX
            shr RDX,63
            add RDX,RAX
            sar RDX,1
            cmp R8,RSI
            jle .L_4242dd

            mov R10D,DWORD PTR [RDI+RDX*4]
            cmp ECX,R10D
            jg .L_4242bf

            jmp .L_4242dd
          .byte 0x90
.L_4242b0:

            mov R10D,DWORD PTR [RDI+RAX*4]
            mov R8,RDX
            mov RDX,RAX
            cmp ECX,R10D
            jle .L_4242dd
.L_4242bf:

            mov DWORD PTR [RDI+R8*4],R10D
            lea R8,QWORD PTR [RDX-1]
            lea R9,QWORD PTR [RDI+RDX*4]
            mov RAX,R8
            shr RAX,63
            add RAX,R8
            sar RAX,1
            cmp RSI,RDX
            jl .L_4242b0
.L_4242dd:

            mov DWORD PTR [R9],ECX
            pop RBX
.L_4242e1:

            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4242e8:

            mov R8,RSI
            nop
            nop
            nop
            nop
            nop
.L_4242f0:

            lea RAX,QWORD PTR [RDX-2]
            mov RDX,RAX
            shr RDX,63
            add RDX,RAX
            sar RDX,1
            cmp RDX,R8
            je .L_424310

            lea R9,QWORD PTR [RDI+R8*4]
            jmp .L_42428e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424310:

            lea RAX,QWORD PTR [R8+R8*1+2]
            mov EDX,DWORD PTR [RDI+RAX*4-4]
            mov DWORD PTR [RDI+R8*4],EDX
            lea R8,QWORD PTR [RAX-1]
            lea R9,QWORD PTR [RDI+R8*4]
            jmp .L_42428e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424330:

            test RBP,RBP
            je .L_4242e8

            lea R9,QWORD PTR [RDI+RSI*4]
            jmp .L_4242dd
.L_42433b:

            nop
            nop
            nop
            nop
            nop
.L_424340:
          .string "RunStateOnByteUnlocked failed after ResetCache"
# WARNING: found overlapping blocks at address 24113
# WARNING: found overlapping blocks at address 24116
          .zero 1
.L_424370:
          .string "RunStateOnByteUnlocked failed after Reset"
# WARNING: found overlapping blocks at address 24148
# WARNING: found overlapping blocks at address 2414d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4243a0:

            push R15
            push R14
            mov R15,RSI
.L_4243a7:

            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            sub RSP,696
.L_4243b7:

            movsxd RBX,DWORD PTR [R15+8]
            mov R14,QWORD PTR [RSI+40]
            mov RSI,QWORD PTR [RSI]
            mov QWORD PTR [RSP+32],RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+680],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+88],ECX
            mov DWORD PTR [RSP+92],R8D
            add RBX,RSI
            test R8B,R8B
            mov BYTE PTR [RSP+24],DL
            mov BYTE PTR [RSP+63],CL
.L_4243f1:

            mov R12,RSI
            je .L_4243fc

            mov R12,RBX
            mov RBX,RSI
.L_4243fc:

            mov RAX,QWORD PTR [RSP+32]
            test BYTE PTR [R14+13],16
            mov RAX,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RAX+160]
            mov QWORD PTR [RSP+16],RDI
            jne .L_424640

            mov BYTE PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
.L_424429:

            cmp RBX,R12
            je .L_4246cb

            lea RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+8],R14
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_4244a1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424460:

            mov R14,RAX
            cmp R14,2
            jbe .L_4245f0
.L_42446d:

            test BYTE PTR [R14+13],16
            je .L_424498

            lea RAX,QWORD PTR [RBX-1]
            lea RDX,QWORD PTR [RBX+1]
            test R13B,R13B
            cmove RAX,RDX
            cmp BYTE PTR [RSP+63],0
            mov QWORD PTR [RSP+48],RAX
            jne .L_4248b0

            mov BYTE PTR [RSP+40],1
.L_424498:

            cmp RBX,R12
            je .L_4246c0
.L_4244a1:

            cmp QWORD PTR [RSP+8],R14
            jne .L_424608

            cmp BYTE PTR [RSP+24],0
            je .L_424608

            test R13B,R13B
            mov ESI,DWORD PTR [R15+48]
            je .L_424620

            mov RDX,R12
            mov RDI,RBX
            sub RDX,RBX
            call memchr@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4247e6
.L_4244de:

            movzx EBP,BYTE PTR [RBX]
            add RBX,1
.L_4244e5:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RAX,EBP
            movzx EDX,BYTE PTR [RCX+RAX*1]
            mov RAX,QWORD PTR [R14+16]
            mov RAX,QWORD PTR [RAX+RDX*8]
            test RAX,RAX
            jne .L_424460

            mov RDI,QWORD PTR [RSP+32]
            mov EDX,EBP
            mov RSI,R14
.L_42450c:

            call .L_421160

            test RAX,RAX
            jne .L_424460

            cmp BYTE PTR [RIP+.L_64a2b8],0
            je .L_42454f

            mov RAX,QWORD PTR [RSP+80]
            test RAX,RAX
            je .L_42454f

            mov RDX,RBX
            sub RDX,RAX
            mov RAX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX+208]
            lea RAX,QWORD PTR [RAX+RAX*4]
            add RAX,RAX
            cmp RDX,RAX
            jb .L_424e09
.L_42454f:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+64]
            call .L_41d7c0
.L_424563:

            mov RDX,R14
            mov R14,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+72]
            mov RSI,R14
.L_424573:

            call .L_41d7c0
.L_424578:

            mov RSI,QWORD PTR [R15+56]
            mov RDI,R14
.L_42457f:

            call .L_41ec90

            mov RDI,QWORD PTR [RSP+64]
            call .L_41f470

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_424b36

            mov RDI,QWORD PTR [RSP+72]
            call .L_41f470

            test RAX,RAX
            je .L_424b36

            mov EDX,EBP
            mov RSI,RAX
            mov RDI,R14
            call .L_421160
.L_4245bc:

            test RAX,RAX
            mov R14,RAX
            je .L_4248d0

            cmp BYTE PTR [RSP+168],0
            je .L_4246b0
.L_4245d6:

            cmp BYTE PTR [RSP+120],0
            je .L_4246a0
.L_4245e1:

            cmp R14,2
            mov QWORD PTR [RSP+80],RBX
            ja .L_42446d
.L_4245f0:

            cmp R14,1
            je .L_4247d8
.L_4245fa:

            mov QWORD PTR [R15+72],R12
            mov BYTE PTR [RSP+40],1
            jmp .L_424669
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424608:

            test R13B,R13B
            jne .L_4244de
.L_424611:

            movzx EBP,BYTE PTR [RBX-1]
            sub RBX,1
            jmp .L_4244e5
          .byte 0x66
          .byte 0x90
.L_424620:

            sub RBX,R12
            mov RDI,R12
            mov RDX,RBX
            call memrchr@PLT

            test RAX,RAX
            je .L_424b56

            lea RBX,QWORD PTR [RAX+1]
            jmp .L_424611
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424640:

            mov EDI,DWORD PTR [RSP+88]
            test DIL,DIL
            jne .L_424660

            mov QWORD PTR [RSP+48],RBX
            mov BYTE PTR [RSP+40],1
            jmp .L_424429
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424660:

            mov QWORD PTR [R15+72],RBX
            mov BYTE PTR [RSP+40],DIL
.L_424669:

            mov RDI,QWORD PTR [RSP+680]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+40]
            jne .L_42534a

            add RSP,696
.L_42468c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4246a0:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41ccb0

            jmp .L_4245e1
          .byte 0x90
.L_4246b0:

            mov RDI,QWORD PTR [RSP+72]
            call .L_41ccb0

            jmp .L_4245d6
          .byte 0x90
.L_4246c0:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [R15]
            mov RAX,QWORD PTR [RAX]
.L_4246cb:

            cmp BYTE PTR [RSP+92],0
            jne .L_4247f4
.L_4246d6:

            cmp QWORD PTR [R15+16],RSI
            mov RDX,QWORD PTR [R14+16]
            je .L_4248c2

            movzx EBP,BYTE PTR [RSI-1]
.L_4246e8:

            movsxd RSI,EBP
            movzx EAX,BYTE PTR [RAX+RSI*1+160]
.L_4246f3:

            mov RAX,QWORD PTR [RDX+RAX*8]
            test RAX,RAX
            je .L_424818
.L_424700:

            cmp RAX,2
            je .L_4245fa

            jbe .L_4247d8

            test BYTE PTR [RAX+13],16
            je .L_4247d8

            mov R14,QWORD PTR [R15+80]
            mov QWORD PTR [RSP+48],RBX
            mov BYTE PTR [RSP+40],1
            test R14,R14
            je .L_4247d8

            mov RDI,QWORD PTR [RSP+32]
            cmp DWORD PTR [RDI+8],3
            jne .L_4247d8

            mov RDX,QWORD PTR [R14]
            mov QWORD PTR [R14+8],RDX
            mov EDX,DWORD PTR [RAX+8]
            test EDX,EDX
            jle .L_4247d8

            mov QWORD PTR [RSP+8],R15
            xor R13D,R13D
            mov R15,RBX
            xor R12D,R12D
            lea RBP,QWORD PTR [RSP+144]
            mov RBX,RDI
            jmp .L_42477b
.L_42476d:

            add R12D,1
            add R13,4
            cmp DWORD PTR [RAX+8],R12D
            jle .L_4247c0
.L_42477b:

            mov RCX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RBX]
            movsxd RCX,DWORD PTR [RCX+R13*1]
            mov RDX,QWORD PTR [RDX+32]
            lea RCX,QWORD PTR [RDX+RCX*8]
            mov EDX,DWORD PTR [RCX]
            and EDX,7
            cmp EDX,5
            jne .L_42476d

            mov RSI,QWORD PTR [R14+8]
            cmp RSI,QWORD PTR [R14+16]
            mov EDX,DWORD PTR [RCX+4]
            mov DWORD PTR [RSP+144],EDX
            je .L_425030

            test RSI,RSI
            je .L_4247b6

            mov DWORD PTR [RSI],EDX
.L_4247b6:

            add RSI,4
            mov QWORD PTR [R14+8],RSI
            jmp .L_42476d
.L_4247c0:

            mov RBX,R15
            mov R15,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+40],1
            mov QWORD PTR [RSP+48],RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4247d8:

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [R15+72],RAX
            jmp .L_424669
.L_4247e6:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [R15]
            mov RBX,R12
            mov RAX,QWORD PTR [RAX]
.L_4247f4:

            movsxd RDX,DWORD PTR [R15+8]
            movsxd RDI,DWORD PTR [R15+24]
            add RDI,QWORD PTR [R15+16]
            add RSI,RDX
            mov RDX,QWORD PTR [R14+16]
            cmp RSI,RDI
            je .L_4248c2

            movzx EBP,BYTE PTR [RSI]
            jmp .L_4246e8
.L_424818:

            mov RDI,QWORD PTR [RSP+32]
            mov EDX,EBP
            mov RSI,R14
.L_424822:

            call .L_421160

            test RAX,RAX
            jne .L_424700

            mov R13,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [RSP+144]
            mov RDX,R14
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            mov R14,RAX
            mov RSI,R13
            call .L_41d7c0
.L_424853:

            mov RSI,QWORD PTR [R15+56]
            mov RDI,R13
.L_42485a:

            call .L_41ec90

            mov RDI,R14
            call .L_41f470

            test RAX,RAX
            je .L_424de7

            mov RDI,QWORD PTR [RSP+32]
            mov EDX,EBP
            mov RSI,RAX
            call .L_421160
.L_42487f:

            test RAX,RAX
            je .L_424b81

            cmp BYTE PTR [RSP+168],0
            jne .L_424700

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            call .L_41ccb0

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_424700
          .byte 0x90
.L_4248b0:

            mov QWORD PTR [R15+72],RAX
            movzx EAX,BYTE PTR [RSP+88]
            mov BYTE PTR [RSP+40],AL
            jmp .L_424669
.L_4248c2:

            movsxd RAX,DWORD PTR [RAX+20]
            mov EBP,256
            jmp .L_4246f3
.L_4248d0:

            lea RBX,QWORD PTR [RSP+288]
            mov BYTE PTR [RSP+288],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+632],0
            xor ESI,ESI
            mov QWORD PTR [RSP+408],R14
            mov QWORD PTR [RSP+624],0
            mov BYTE PTR [RSP+633],0
            mov QWORD PTR [RSP+640],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+648],0
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+296],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+8],RAX
.L_42496e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_424973:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+304],RAX
            mov QWORD PTR [RSP+352],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+368],16
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+392],0
            mov QWORD PTR [RSP+376],RAX
.L_424a44:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_424a49:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_424a59:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1419
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_424a95:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_424340]
            mov EDX,46
.L_424aa5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_424aaa:

            cmp BYTE PTR [RSP+288],0
            je .L_424e13
.L_424ab8:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+408],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_424af5

            call _ZdlPv@PLT
.L_424af5:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_424b36:

            cmp BYTE PTR [RSP+168],0
            mov BYTE PTR [R15+64],1
            je .L_424b75
.L_424b45:

            cmp BYTE PTR [RSP+120],0
            je .L_424b69
.L_424b4c:

            mov BYTE PTR [RSP+40],0
            jmp .L_424669
.L_424b56:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [R15]
            mov RBX,R12
            mov RAX,QWORD PTR [RAX]
            jmp .L_4246d6
.L_424b69:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41ccb0

            jmp .L_424b4c
.L_424b75:

            mov RDI,QWORD PTR [RSP+72]
            call .L_41ccb0

            jmp .L_424b45
.L_424b81:

            lea RBX,QWORD PTR [RSP+288]
            mov BYTE PTR [RSP+288],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+632],0
            xor ESI,ESI
            mov QWORD PTR [RSP+408],R14
            mov QWORD PTR [RSP+624],0
            mov BYTE PTR [RSP+633],0
            mov QWORD PTR [RSP+640],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+648],0
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+296],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+8],RAX
.L_424c1f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_424c24:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+304],RAX
            mov QWORD PTR [RSP+352],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+368],16
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+392],0
            mov QWORD PTR [RSP+376],RAX
.L_424cf5:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_424cfa:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423678]
            mov EDX,10
.L_424d0a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423683]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1484
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_423685]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_424d46:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_424370]
            mov EDX,41
.L_424d56:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_424d5b:

            cmp BYTE PTR [RSP+288],0
            je .L_42504a
.L_424d69:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+408],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_424da6

            call _ZdlPv@PLT
.L_424da6:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_424de7:

            cmp BYTE PTR [RSP+168],0
            mov BYTE PTR [R15+64],1
            jne .L_424b4c

            mov RDI,QWORD PTR [RSP+16]
            call .L_41ccb0

            jmp .L_424b4c
.L_424e09:

            mov BYTE PTR [R15+64],1
            jmp .L_424b4c
.L_424e13:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            lea RBP,QWORD PTR [RSP+192]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RSP+344]
            test RAX,RAX
            je .L_42524c

            mov RDX,QWORD PTR [RSP+328]
            mov RSI,QWORD PTR [RSP+336]
            cmp RAX,RDX
            jbe .L_424f75

            lea R13,QWORD PTR [RSP+256]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+256],RDX
            mov RDX,RAX
.L_424e94:

            call .L_41ce20
.L_424e99:

            mov RSI,QWORD PTR [RSP+256]
            mov RDI,QWORD PTR [RSP+192]
            lea RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_42520a

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+272]
            cmp RAX,RDI
            je .L_4251e1

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_4251f9

            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDI
.L_424f0f:

            mov QWORD PTR [RSP+264],0
            mov BYTE PTR [RAX],0
            add R13,16
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,R13
            je .L_424f34
.L_424f2f:

            call _ZdlPv@PLT
.L_424f34:

            movsxd RDX,DWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov EDI,2
.L_424f49:

            call write@PLT
.L_424f4e:

            mov RDI,QWORD PTR [RSP+192]
            add RBP,16
            mov BYTE PTR [RSP+288],1
            cmp RDI,RBP
            je .L_424ab8

            call _ZdlPv@PLT

            jmp .L_424ab8
.L_424f75:

            lea R13,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+224],RAX
.L_424f8c:

            call .L_41ce20
.L_424f91:

            mov RSI,QWORD PTR [RSP+224]
            mov RDI,QWORD PTR [RSP+192]
            lea RCX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_42525d

            lea RDI,QWORD PTR [RBP+16]
            mov RCX,QWORD PTR [RSP+240]
            cmp RAX,RDI
            je .L_4251b8

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_4251d0

            mov QWORD PTR [RSP+224],RAX
            mov QWORD PTR [RSP+240],RDI
.L_425007:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RAX],0
            add R13,16
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,R13
            jne .L_424f2f

            jmp .L_424f34
.L_425030:

            mov RDX,RBP
            mov RDI,R14
            mov QWORD PTR [RSP+16],RAX
.L_42503b:

            call .L_4238d0
.L_425040:

            mov RAX,QWORD PTR [RSP+16]
            jmp .L_42476d
.L_42504a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_423657]
            lea RBP,QWORD PTR [RSP+192]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RSP+344]
            test RAX,RAX
            je .L_425421

            mov RDX,QWORD PTR [RSP+328]
            mov RSI,QWORD PTR [RSP+336]
            cmp RAX,RDX
            jbe .L_425361

            lea R13,QWORD PTR [RSP+256]
            lea RDX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+256],RDX
            mov RDX,RAX
.L_4250cb:

            call .L_41ce20
.L_4250d0:

            mov RSI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RAX
            je .L_425586

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+272]
            cmp RDI,RCX
            je .L_425558

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
            je .L_425570

            mov QWORD PTR [RSP+256],RDI
            mov QWORD PTR [RSP+272],RCX
.L_425143:

            mov RAX,QWORD PTR [RSP+256]
            mov QWORD PTR [RSP+264],0
            add R13,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,R13
            je .L_425170
.L_42516b:

            call _ZdlPv@PLT
.L_425170:

            movsxd RDX,DWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov EDI,2
.L_425185:

            call write@PLT
.L_42518a:

            mov RDI,QWORD PTR [RSP+192]
            add RBP,16
            mov BYTE PTR [RSP+288],1
            cmp RDI,RBP
            je .L_424d69

            call _ZdlPv@PLT

            jmp .L_424d69
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251b8:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_4251d0:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+224],RAX
            jmp .L_425007
.L_4251e1:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_4251f9:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+256],RAX
            jmp .L_424f0f
.L_42520a:

            test RDX,RDX
            je .L_425233

            cmp RDX,1
            jne .L_425529

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
.L_425233:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_424f0f
.L_42524c:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
.L_425253:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_425258:

            jmp .L_424f34
.L_42525d:

            test RDX,RDX
            je .L_425282

            cmp RDX,1
            jne .L_42529b

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
.L_425282:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+224]
            jmp .L_425007
.L_42529b:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            jmp .L_425282
.L_4252b2:

            mov RBP,RAX
.L_4252b5:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_4252c6:

            cmp BYTE PTR [RSP+168],0
            jne .L_4252da

            mov RDI,QWORD PTR [RSP+72]
            call .L_41ccb0
.L_4252da:

            mov RBX,RBP
.L_4252dd:

            cmp BYTE PTR [RSP+120],0
            jne .L_4252ee

            mov RDI,QWORD PTR [RSP+64]
            call .L_41ccb0
.L_4252ee:

            mov RDI,RBX
.L_4252f1:

            call _Unwind_Resume@PLT
.L_4252f6:

            mov RDI,QWORD PTR [RSP+192]
            add RBP,16
            cmp RDI,RBP
            je .L_42530c

            call _ZdlPv@PLT
.L_42530c:

            call _ZSt9terminatev@PLT
.L_425311:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_4252c6
.L_42531f:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
            jmp .L_4252b5
.L_42534a:

            call __stack_chk_fail@PLT
.L_42534f:

            mov RDI,RBX
            mov RBP,RAX
            call .L_40c160

            jmp .L_4252c6
.L_42535f:

            jmp .L_4252f6
.L_425361:

            lea R13,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,R13
            mov QWORD PTR [RSP+224],RAX
.L_425378:

            call .L_41ce20

            mov RSI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RAX
            je .L_425482

            lea RCX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RSP+240]
            cmp RDI,RCX
            je .L_425459

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
            je .L_425471

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RCX
.L_4253f0:

            mov RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+232],0
            add R13,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,R13
            jne .L_42516b

            jmp .L_425170
.L_425421:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42542d:

            jmp .L_425170
.L_425432:

            mov RDI,RBX
            mov RBP,RAX
            call .L_40c160
.L_42543d:

            cmp BYTE PTR [RSP+168],0
            jne .L_425451

            mov RDI,QWORD PTR [RSP+16]
            call .L_41ccb0
.L_425451:

            mov RDI,RBP
.L_425454:

            call _Unwind_Resume@PLT
.L_425459:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
.L_425471:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+224],RAX
            jmp .L_4253f0
.L_425482:

            test RDX,RDX
            je .L_4254a7

            cmp RDX,1
            jne .L_4254b8

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
.L_4254a7:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_4253f0
.L_4254b8:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            jmp .L_4254a7
.L_4254cf:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_42543d
.L_4254e0:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+296],R12
            mov QWORD PTR [RSP+RAX*1+296],RDI
.L_425506:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],R14
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_42543d
.L_42551c:

            mov RBP,RAX
            jmp .L_425506
.L_425521:

            mov RBP,RAX
            jmp .L_42543d
.L_425529:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            jmp .L_425233
.L_425543:

            jmp .L_4252f6
.L_425548:

            mov RBP,RAX
            jmp .L_4252c6
.L_425550:

            mov RBX,RAX
            jmp .L_4252dd
.L_425558:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RAX
.L_425570:

            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+256],RAX
            jmp .L_425143
.L_425581:

            jmp .L_4252f6
.L_425586:

            test RDX,RDX
            je .L_4255ab

            cmp RDX,1
            jne .L_4255bc

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
.L_4255ab:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_425143
.L_4255bc:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            jmp .L_4255ab
.L_4255d3:
          .byte 0x90
.L_4255d4:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5f
.L_4255d8:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_4255dc:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
.L_4255e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4255f0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_4255fe:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_42561c

            test RDX,RDX
            jne .L_4256a7
.L_42561c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_425670

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_4256a0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_425644:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4256b3

            add RSP,16
.L_425664:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425670:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_425689:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_425644
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4256a0:

            test RBX,RBX
            je .L_425644

            jmp .L_425689
.L_4256a7:

            lea RDI,QWORD PTR [RIP+.L_4284d0]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_4256b3:

            call __stack_chk_fail@PLT
.L_4256b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4256c0:

            push R15
            push R14
            lea R15,QWORD PTR [RDI+16]
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_4256d5:

            mov BYTE PTR [RDI+16],0
            mov EAX,DWORD PTR [RSI+12]
            mov QWORD PTR [RDI],R15
            mov QWORD PTR [RDI+8],0
            test EAX,EAX
            jle .L_425752

            mov RBP,RSI
            mov R13,RDX
            mov EBX,2
            lea R14,QWORD PTR [RIP+.L_428591]
            jmp .L_42571b
          .byte 0x90
.L_425700:

            sub RCX,RAX
            mov RSI,R14
            mov RDI,R12
            xor EAX,EAX
.L_42570b:

            call .L_415670
.L_425710:

            mov EAX,EBX
            add RBX,2
            cmp DWORD PTR [RBP+12],EAX
            jle .L_425752
.L_42571b:

            mov RDX,QWORD PTR [R13+RBX*8-16]
            test RDX,RDX
            je .L_425768

            mov RCX,QWORD PTR [R13+RBX*8-8]
            mov RAX,QWORD PTR [RBP+24]
            sub RDX,RAX
            test RCX,RCX
            jne .L_425700

            lea RSI,QWORD PTR [RIP+.L_42858a]
            mov RDI,R12
            xor EAX,EAX
            call .L_415670

            mov EAX,EBX
            add RBX,2
            cmp DWORD PTR [RBP+12],EAX
            jg .L_42571b
.L_425752:

            add RSP,8
.L_425756:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425768:

            lea RSI,QWORD PTR [RIP+.L_428584]
            mov RDI,R12
            xor EAX,EAX
            call .L_415670
.L_425779:

            jmp .L_425710
.L_42577b:

            mov RDI,QWORD PTR [R12]
            mov RBX,RAX
            cmp R15,RDI
            je .L_42578c

            call _ZdlPv@PLT
.L_42578c:

            mov RDI,RBX
.L_42578f:

            call _Unwind_Resume@PLT
.L_425794:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4257a0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4257aa:

            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            je .L_4259b8

            mov RAX,QWORD PTR [RDI]
            mov R13,RDI
            movsxd RBX,DWORD PTR [RAX+12]
            movabs RAX,2305843009213693950
            cmp RBX,RAX
            mov R12,RBX
            ja .L_4259c3

            shl RBX,2
            mov RDI,RBX
            call _Znam@PLT

            mov RDI,RBX
            mov RBP,RAX
            call _Znam@PLT

            mov RBX,RAX
            call .L_43e090

            test EAX,EAX
            je .L_425828

            test R12D,R12D
            jle .L_425828

            lea EAX,DWORD PTR [R12-1]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_425810:

            mov DWORD PTR [RBX+RAX*1],2880154539
            mov DWORD PTR [RBP+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_425810
.L_425828:

            mov EAX,DWORD PTR [R13+8]
            cmp R12D,EAX
            ja .L_425858
.L_425831:

            mov R13D,4294967295
.L_425837:

            mov RDI,RBP
            call _ZdaPv@PLT

            mov RDI,RBX
            call _ZdaPv@PLT
.L_425847:

            add RSP,8
.L_42584b:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425858:

            movsxd RDX,EAX
            lea R9,QWORD PTR [RBX+4]
            lea R8,QWORD PTR [RIP+.L_4285d8]
            mov DWORD PTR [RBX],EAX
            mov DWORD PTR [RBP+RDX*4],0
            mov RCX,RBX
            mov RAX,QWORD PTR [R13]
            mov R10D,1
            mov R13D,4294967295
            nop
            nop
            nop
            nop
            nop
.L_425888:

            mov RSI,QWORD PTR [RAX+32]
            lea RDI,QWORD PTR [RSI+RDX*8]
            mov ESI,DWORD PTR [RDI]
            mov EDX,ESI
            and EDX,7
            movsxd RDX,DWORD PTR [R8+RDX*4]
            add RDX,R8
            jmp RDX
.L_4258a0:

            shr ESI,3
            test ESI,ESI
            jne .L_425950

            nop
            nop
            nop
            nop
            nop
.L_4258b0:

            movsxd RDX,R10D
            add RCX,4
            lea R9,QWORD PTR [RBX+RDX*4]
            cmp R9,RCX
            je .L_425837

            movsxd RDX,DWORD PTR [RCX]
            jmp .L_425888
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4258d0:

            movzx ESI,BYTE PTR [RDI+4]
            cmp SIL,BYTE PTR [RDI+5]
            mov EDX,ESI
            jne .L_425831

            cmp BYTE PTR [RDI+6],0
            je .L_4258f2

            sub EDX,97
            cmp DL,25
            jbe .L_425831
.L_4258f2:

            cmp R13D,-1
            je .L_4259b0

            cmp ESI,R13D
            je .L_4258b0

            jmp .L_425831
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425910:

            shr ESI,3
            test ESI,ESI
            jne .L_425980
.L_425917:

            mov EDX,DWORD PTR [RDI+4]
            test EDX,EDX
            je .L_4258b0

            cmp EDX,R12D
            jae .L_4258b0

            movsxd RSI,EDX
            lea RDI,QWORD PTR [RBP+RSI*4]
            movsxd RSI,DWORD PTR [RDI]
            cmp ESI,R10D
            jae .L_42593c

            cmp EDX,DWORD PTR [RBX+RSI*4]
            je .L_4258b0
.L_42593c:

            movsxd RSI,R10D
            mov DWORD PTR [RDI],R10D
            add R10D,1
            mov DWORD PTR [RBX+RSI*4],EDX
            jmp .L_4258b0
          .byte 0x66
          .byte 0x90
.L_425950:

            cmp ESI,R12D
            jae .L_4258b0

            mov EDX,ESI
            lea RDI,QWORD PTR [RBP+RDX*4]
            movsxd RDX,DWORD PTR [RDI]
            cmp EDX,R10D
            jae .L_425971

            cmp ESI,DWORD PTR [RBX+RDX*4]
            je .L_4258b0
.L_425971:

            mov DWORD PTR [RDI],R10D
            mov DWORD PTR [R9],ESI
            add R10D,1
            jmp .L_4258b0
.L_425980:

            cmp ESI,R12D
            jae .L_425917

            mov EDX,ESI
            lea R11,QWORD PTR [RBP+RDX*4]
            movsxd RDX,DWORD PTR [R11]
            cmp EDX,R10D
            jae .L_42599d

            cmp ESI,DWORD PTR [RBX+RDX*4]
            je .L_425917
.L_42599d:

            mov DWORD PTR [R11],R10D
            mov DWORD PTR [R9],ESI
            add R10D,1
            jmp .L_425917
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4259b0:

            mov R13D,ESI
            jmp .L_4258b0
.L_4259b8:

            mov R13D,4294967295
            jmp .L_425847
.L_4259c3:

            call __cxa_throw_bad_array_new_length@PLT
.L_4259c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4259d0:

            test EDX,EDX
            jne .L_4259e0

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4259e0:

            push R15
            push R14
            lea RAX,QWORD PTR [R9+24]
            push R13
            push R12
            not ECX
            push RBP
            push RBX
            mov R14,RDI
            mov R10D,1
            mov R12,RSI
            mov R13,R9
            sub RSP,72
.L_425a03:

            mov R15,QWORD PTR [RDI+152]
            mov RDI,-1
            mov DWORD PTR [RSP+20],ECX
            mov QWORD PTR [RSP+8],RAX
            mov DWORD PTR [R15],EDX
            mov DWORD PTR [R15+4],4294967295
            mov QWORD PTR [R15+8],0
            nop
            nop
            nop
.L_425a30:

            lea EBX,DWORD PTR [R10-1]
            movsxd RBP,EBX
            shl RBP,4
            test EDI,EDI
            lea RCX,QWORD PTR [R15+RBP*1]
            js .L_425a4c

            mov RAX,QWORD PTR [RCX+8]
            mov QWORD PTR [R13+RDI*8],RAX
.L_425a4c:

            test EDX,EDX
            je .L_425c90

            cmp DWORD PTR [R12+4],EDX
            movsxd R9,EDX
            mov EAX,DWORD PTR [R12]
            mov RDI,QWORD PTR [R12+16]
            jbe .L_425ac8

            mov RSI,QWORD PTR [R12+8]
            lea R11,QWORD PTR [RSI+R9*4]
            movsxd RSI,DWORD PTR [R11]
            cmp ESI,EAX
            jae .L_425a85

            shl RSI,4
            cmp DWORD PTR [RDI+RSI*1+8],EDX
            je .L_425c90
.L_425a85:

            mov DWORD PTR [R11],EAX
            movsxd RSI,DWORD PTR [R12]
            mov RAX,RSI
            shl RSI,4
            add EAX,1
            mov DWORD PTR [RDI+RSI*1+8],EDX
            mov DWORD PTR [R12],EAX
            movsxd RSI,DWORD PTR [R11]
            mov R11,RSI
            shl RSI,4
            add RSI,RDI
            cmp EDX,DWORD PTR [R12+4]
            mov QWORD PTR [RSI],0
            jae .L_425ac8

            cmp R11D,EAX
            jae .L_425ac8

            cmp DWORD PTR [RSI+8],EDX
            je .L_425ad2

            nop
            nop
            nop
            nop
            nop
.L_425ac8:

            cdqe 
            shl RAX,4
            lea RSI,QWORD PTR [RDI+RAX*1]
.L_425ad2:

            mov RAX,QWORD PTR [R14]
            lea R11,QWORD PTR [RIP+.L_4285f8]
            mov RAX,QWORD PTR [RAX+32]
            lea R9,QWORD PTR [RAX+R9*8]
            mov EDI,DWORD PTR [R9]
            mov EAX,EDI
            and EAX,7
            movsxd RAX,DWORD PTR [R11+RAX*4]
            add RAX,R11
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425af8:

            mov RBX,QWORD PTR [R14+168]
            test RBX,RBX
            je .L_425cb0

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R14+168],RAX
            mov RAX,QWORD PTR [RBX+8]
.L_425b16:

            mov DWORD PTR [RBX],EDX
            mov EDI,DWORD PTR [R14+12]
            test EDI,EDI
            jle .L_425b5d

            sub EDI,1
            lea RDX,QWORD PTR [R13+8]
            add RAX,8
            shr EDI,1
            shl RDI,4
            add RDI,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b40:

            mov R11,QWORD PTR [RDX-8]
            add RDX,16
            add RAX,16
            mov QWORD PTR [RAX-24],R11
            mov R11,QWORD PTR [RDX-16]
            mov QWORD PTR [RAX-16],R11
            cmp RDI,RDX
            jne .L_425b40
.L_425b5d:

            mov QWORD PTR [RSI],RBX
.L_425b60:

            mov EAX,DWORD PTR [R9+4]
            mov DWORD PTR [RCX+4],4294967295
            lea EBX,DWORD PTR [R10+1]
            mov QWORD PTR [RCX+8],0
            mov DWORD PTR [RCX],EAX
            mov EDX,DWORD PTR [R9]
            lea RAX,QWORD PTR [R15+RBP*1+16]
            mov DWORD PTR [RAX+4],4294967295
            mov QWORD PTR [RAX+8],0
            shr EDX,3
            mov DWORD PTR [RAX],EDX
            nop
            nop
            nop
.L_425b98:

            lea EAX,DWORD PTR [RBX-1]
            mov R10D,EBX
            cdqe 
            shl RAX,4
            add RAX,R15
            movsxd RDI,DWORD PTR [RAX+4]
            mov EDX,DWORD PTR [RAX]
            jmp .L_425a30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425bb8:

            mov EAX,DWORD PTR [RSP+20]
            test DWORD PTR [R9+4],EAX
            jne .L_425c90
.L_425bc6:

            shr EDI,3
            mov DWORD PTR [RCX+4],4294967295
            mov QWORD PTR [RCX+8],0
            mov DWORD PTR [RCX],EDI
            mov EBX,R10D
            jmp .L_425b98
          .byte 0x90
.L_425be0:

            mov EAX,DWORD PTR [R9+4]
            cmp DWORD PTR [R14+12],EAX
            jle .L_425c10

            movsxd RDX,EAX
            mov EBX,R10D
            lea RDX,QWORD PTR [R13+RDX*8]
            mov RSI,QWORD PTR [RDX]
            mov DWORD PTR [RCX],0
            mov DWORD PTR [RCX+4],EAX
            mov QWORD PTR [RCX+8],RSI
            mov EDI,DWORD PTR [R9]
            lea RCX,QWORD PTR [R15+RBP*1+16]
            mov QWORD PTR [RDX],R8
.L_425c10:

            shr EDI,3
            add EBX,1
            mov DWORD PTR [RCX+4],4294967295
            mov DWORD PTR [RCX],EDI
            mov QWORD PTR [RCX+8],0
            jmp .L_425b98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425c30:

            mov RBP,QWORD PTR [R14+168]
            test RBP,RBP
            je .L_425d28

            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [R14+168],RAX
            mov RAX,QWORD PTR [RBP+8]
.L_425c4f:

            mov DWORD PTR [RBP],EDX
            mov ECX,DWORD PTR [R14+12]
            test ECX,ECX
            jle .L_425c8d

            sub ECX,1
            lea RDX,QWORD PTR [R13+8]
            add RAX,8
            shr ECX,1
            shl RCX,4
            add RCX,QWORD PTR [RSP+8]
.L_425c70:

            mov RDI,QWORD PTR [RDX-8]
            add RDX,16
            add RAX,16
            mov QWORD PTR [RAX-24],RDI
            mov RDI,QWORD PTR [RDX-16]
            mov QWORD PTR [RAX-16],RDI
            cmp RDX,RCX
            jne .L_425c70
.L_425c8d:

            mov QWORD PTR [RSI],RBP
.L_425c90:

            test EBX,EBX
            jne .L_425b98

            add RSP,72
.L_425c9c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425cb0:

            mov EDI,16
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+56],R8
            mov DWORD PTR [RSP+52],EDX
            mov DWORD PTR [RSP+48],R10D
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+32],R9
            call _Znwm@PLT

            mov RBX,RAX
            movsxd RAX,DWORD PTR [R14+12]
            movabs RCX,1152921504606846975
            cmp RAX,RCX
            ja .L_425d7a

            lea RDI,QWORD PTR [RAX*8]
            call _Znam@PLT

            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX+8],RAX
            mov R9,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+48]
            mov EDX,DWORD PTR [RSP+52]
            mov R8,QWORD PTR [RSP+56]
            jmp .L_425b16
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425d28:

            mov EDI,16
            mov QWORD PTR [RSP+40],R8
            mov DWORD PTR [RSP+32],EDX
            mov QWORD PTR [RSP+24],RSI
            call _Znwm@PLT

            mov RBP,RAX
            movsxd RAX,DWORD PTR [R14+12]
            movabs RCX,1152921504606846975
            cmp RAX,RCX
            ja .L_425d7a

            lea RDI,QWORD PTR [RAX*8]
            call _Znam@PLT

            mov RSI,QWORD PTR [RSP+24]
            mov QWORD PTR [RBP+8],RAX
            mov EDX,DWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_425c4f
.L_425d7a:

            call __cxa_throw_bad_array_new_length@PLT
.L_425d7f:

            nop
.L_425d80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,648
.L_425d91:

            mov QWORD PTR [RSP+112],R9
            mov R9D,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+632],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+96],RSI
            test R9D,R9D
            je .L_426360

            movdqu XMM0,XMMWORD PTR [RDX]
            mov RBX,RDI
            movq RAX,XMM0
            movaps XMMWORD PTR [RSP+128],XMM0
            test RAX,RAX
            je .L_4263aa
.L_425dd8:

            mov RDX,QWORD PTR [RSP+96]
            movsxd RSI,DWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RDX]
            movsxd RDX,DWORD PTR [RDX+8]
            cmp RDI,RAX
            jb .L_427f2f

            add RSI,RAX
            add RDX,RDI
            cmp RSI,RDX
            jb .L_427f2f

            mov R10,QWORD PTR [RBX]
            cmp RDI,RAX
            setne BPL
            movzx R9D,BYTE PTR [R10]
            and BPL,R9B
            jne .L_426360

            movzx EAX,BYTE PTR [R10+1]
            test AL,AL
            jne .L_42638d

            or R9D,ECX
            mov BYTE PTR [RSP+127],R9B
.L_425e30:

            mov EDI,DWORD PTR [RSP+704]
            test EDI,EDI
            js .L_426c37

            mov EAX,DWORD PTR [RSP+704]
            mov ESI,DWORD PTR [RSP+704]
            mov BYTE PTR [RBX+16],R8B
            add EAX,EAX
            test ESI,ESI
            mov DWORD PTR [RBX+12],EAX
            jne .L_426ad4

            mov DWORD PTR [RBX+12],2
            mov EDI,16
.L_425e6a:

            call _Znam@PLT
.L_425e6f:

            movsxd R12,DWORD PTR [RBX+12]
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBX+136],RAX
            mov BYTE PTR [RBX+144],0
            shl R12,3
            mov RDX,R12
            call memset@PLT

            mov RBP,QWORD PTR [RSP+128]
            mov RCX,RAX
            lea RAX,QWORD PTR [RBX+40]
            xor ESI,ESI
            mov RDI,RCX
            mov DWORD PTR [RBX+40],0
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+24],RBP
            mov RDX,R12
            mov QWORD PTR [RSP+80],RAX
            call memset@PLT

            mov RAX,QWORD PTR [RSP+96]
            mov RCX,QWORD PTR [RAX]
            cmp RBP,RCX
            mov QWORD PTR [RSP+64],RCX
            jb .L_426a9d

            xor ESI,ESI
            mov DWORD PTR [RSP+104],4294967295
.L_425eee:

            lea R13,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R13+120]
            mov QWORD PTR [RSP+8],RAX
            nop
.L_425f00:

            movsxd RDX,DWORD PTR [RSP+136]
            mov RAX,QWORD PTR [RSP+64]
            add RDX,RBP
            cmp RAX,RBP
            je .L_4268d0

            cmp RAX,RDX
            ja .L_4268c0

            cmp BYTE PTR [RAX-1],10
            sete AL
            cmp QWORD PTR [RSP+64],RDX
            movzx EAX,AL
            je .L_4268e0
.L_425f37:

            mov RDI,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+108],0
            cmp RDI,RDX
            jae .L_425f6f

            movzx EDX,BYTE PTR [RDI]
            cmp DL,10
            je .L_426903

            mov EDI,EDX
            mov DWORD PTR [RSP+108],1
            and EDI,4294967263
            sub EDI,65
            cmp DIL,25
            ja .L_426906
.L_425f6f:

            mov EDX,EAX
            or EAX,32
            or EDX,16
            cmp ESI,DWORD PTR [RSP+108]
            cmove EDX,EAX
            mov RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+120],EDX
            sub RAX,1
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+80]
            mov DWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+16]
            movsxd RAX,DWORD PTR [RAX]
            mov RDI,RAX
            shl RAX,4
            add RAX,RSI
            cmp RSI,RAX
            je .L_426760

            mov R12,RSI
            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            jmp .L_426298
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425fd0:

            cmp ECX,5
            je .L_426538

            cmp ECX,1
            je .L_4263c8

            mov RDI,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+240],0
            call _ZNSt8ios_baseC2Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+584],0
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [R15-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R15
            lea RDI,QWORD PTR [R13+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_426071:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_426076:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R13+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R13+16]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R13+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_426148:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42614d:

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_428599]
            mov EDX,10
.L_42615d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_4285a4]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R13+8]
            mov ESI,314
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a6]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_426199:

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_4285c2]
            mov EDX,10
.L_4261a9:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [R14]
            lea RDI,QWORD PTR [R13+8]
            and ESI,7
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285cd]
            mov EDX,8
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4261d1:

            cmp BYTE PTR [RSP+240],0
            je .L_4265e0
.L_4261df:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R13+104]
            cmp RDI,RAX
            je .L_42621c

            call _ZdlPv@PLT
.L_42621c:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R13+72]
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R15-24]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+248],R15
            mov QWORD PTR [RSP+RAX*1+248],RSI
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+360],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+16]
            mov EDI,DWORD PTR [RAX]
.L_42626f:

            mov RAX,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBX+168],RBP
.L_426281:

            movsxd RAX,EDI
            add R12,16
            shl RAX,4
            add RAX,RSI
            cmp RAX,R12
            je .L_426758
.L_426298:

            mov RBP,QWORD PTR [R12]
            test RBP,RBP
            je .L_426281

            movzx R8D,BYTE PTR [RBX+16]
            test R8B,R8B
            je .L_4262d0

            cmp BYTE PTR [RBX+144],0
            je .L_4262d0

            mov RCX,QWORD PTR [RBX+136]
            mov RDX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RDX]
            cmp QWORD PTR [RCX],RDX
            jb .L_42626f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4262d0:

            mov R10,QWORD PTR [RBX]
            movsxd RDX,DWORD PTR [RBP]
            mov R9,QWORD PTR [R10+32]
            lea R14,QWORD PTR [R9+RDX*8]
            mov EDX,DWORD PTR [R14]
            mov ECX,EDX
            and ECX,7
            cmp ECX,2
            jne .L_425fd0

            cmp BYTE PTR [R14+6],0
            mov R11D,DWORD PTR [RSP+104]
            movzx ECX,BYTE PTR [R14+4]
            mov EAX,R11D
            je .L_426314

            lea R8D,DWORD PTR [R11-65]
            lea EAX,DWORD PTR [R11+32]
            cmp R8D,26
            cmovae EAX,R11D
.L_426314:

            cmp ECX,EAX
            jg .L_42626f

            movzx ECX,BYTE PTR [R14+5]
            cmp EAX,ECX
            jg .L_42626f

            mov RSI,QWORD PTR [RSP+80]
            mov R9,QWORD PTR [RBP+8]
            mov RDI,RBX
            mov R8,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+120]
            shr EDX,3
.L_426341:

            call .L_4259d0
.L_426346:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+16]
            mov EDI,DWORD PTR [RAX]
            jmp .L_42626f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426360:

            xor EBP,EBP
.L_426362:

            mov RBX,QWORD PTR [RSP+632]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_428187

            add RSP,648
.L_426382:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42638d:

            cmp RSI,RDX
            jne .L_426360

            or R9D,ECX
            mov BYTE PTR [RBX+17],1
            mov QWORD PTR [RBX+32],RSI
            mov BYTE PTR [RSP+127],R9B
            mov R8D,EAX
            jmp .L_425e30
.L_4263aa:

            mov RAX,QWORD PTR [RSI]
            mov EDX,DWORD PTR [RSI+8]
            mov QWORD PTR [RSP+128],RAX
            mov DWORD PTR [RSP+136],EDX
            jmp .L_425dd8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4263c8:

            cmp R12,RSI
            jne .L_42626f

            shr EDX,3
            mov EDX,DWORD PTR [R9+RDX*8]
            and EDX,7
            cmp EDX,2
            sete DL
            or R8B,DL
            je .L_42626f

            mov EDI,DWORD PTR [RBX+12]
            mov R9,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBX+136]
            test EDI,EDI
            jle .L_426435

            sub EDI,1
            lea RDX,QWORD PTR [R9+8]
            lea RCX,QWORD PTR [RSI+8]
            shr EDI,1
            shl RDI,4
            lea R9,QWORD PTR [R9+RDI*1+24]
            nop
            nop
            nop
            nop
            nop
            nop
.L_426418:

            mov RDI,QWORD PTR [RDX-8]
            add RDX,16
            add RCX,16
            mov QWORD PTR [RCX-24],RDI
            mov RDI,QWORD PTR [RDX-16]
            mov QWORD PTR [RCX-16],RDI
            cmp R9,RDX
            jne .L_426418
.L_426435:

            mov RDX,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP],RDX
            mov QWORD PTR [RBX+168],RBP
.L_426447:

            add R12,16
            cmp RAX,R12
            je .L_426473
.L_426450:

            mov RDX,QWORD PTR [R12]
            test RDX,RDX
            je .L_426447

            mov RCX,QWORD PTR [RBX+168]
            add R12,16
            cmp RAX,R12
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RBX+168],RDX
            jne .L_426450
.L_426473:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX],0
            mov EAX,DWORD PTR [R14]
            mov BYTE PTR [RBX+144],1
            mov RDX,QWORD PTR [R10+32]
            shr EAX,3
            mov ECX,EAX
            mov EDX,DWORD PTR [RDX+RCX*8]
            and EDX,7
            cmp EDX,2
            jne .L_4264a0

            mov EAX,DWORD PTR [R14+4]
.L_4264a0:

            mov RCX,QWORD PTR [RSP+24]
            test EAX,EAX
            mov DWORD PTR [RCX],0
            jne .L_426b34
.L_4264b3:

            mov RSI,QWORD PTR [RSP+96]
            movsxd RAX,DWORD PTR [RSI+8]
            add RAX,QWORD PTR [RSI]
            cmp QWORD PTR [RSP+64],RAX
            ja .L_427700

            nop
            nop
            nop
            nop
            nop
            nop
.L_4264d0:

            mov RAX,QWORD PTR [RSP+80]
            mov EAX,DWORD PTR [RAX]
            test EAX,EAX
            je .L_426b78

            mov RSI,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+104],0
            movsxd RAX,DWORD PTR [RSI+8]
            mov RCX,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSP+64]
            add RAX,RCX
            cmp RSI,RAX
            je .L_426507

            movzx EAX,BYTE PTR [RSI]
            mov DWORD PTR [RSP+104],EAX
.L_426507:

            mov RSI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+80]
            add QWORD PTR [RSP+64],1
            mov RBP,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+80],RSI
            mov QWORD PTR [RSP+24],RAX
            mov ESI,DWORD PTR [RSP+108]
            jmp .L_425f00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426538:

            cmp BYTE PTR [RBX+17],0
            je .L_42654d

            mov RDX,QWORD PTR [RSP+72]
            cmp RDX,QWORD PTR [RBX+32]
            jne .L_42626f
.L_42654d:

            mov R9,QWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RSP+72]
            test R8B,R8B
            mov RDX,QWORD PTR [RBX+136]
            mov R10,QWORD PTR [R9+8]
            mov QWORD PTR [R9+8],RCX
            je .L_426a04

            cmp BYTE PTR [RBX+144],0
            je .L_4265a0

            mov RAX,QWORD PTR [RDX]
            cmp QWORD PTR [R9],RAX
            jb .L_4265a0

            je .L_426590
.L_426581:

            mov QWORD PTR [R9],R10
            mov BYTE PTR [RBX+144],1
            jmp .L_42626f
.L_426590:

            cmp RCX,QWORD PTR [RDX+8]
            jbe .L_426581

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4265a0:

            mov ECX,DWORD PTR [RBX+12]
            test ECX,ECX
            jle .L_426581

            sub ECX,1
            lea RAX,QWORD PTR [R9+8]
            add RDX,8
            shr ECX,1
            shl RCX,4
            lea R8,QWORD PTR [R9+RCX*1+24]
            nop
            nop
            nop
.L_4265c0:

            mov RCX,QWORD PTR [RAX-8]
            add RAX,16
            add RDX,16
            mov QWORD PTR [RDX-24],RCX
            mov RCX,QWORD PTR [RAX-16]
            mov QWORD PTR [RDX-16],RCX
            cmp R8,RAX
            jne .L_4265c0

            jmp .L_426581
          .byte 0x90
.L_4265e0:

            lea RDI,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [RIP+.L_428582]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_4268f0

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_426800

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_42666a:

            call .L_4255f0
.L_42666f:

            mov RSI,QWORD PTR [RSP+208]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RAX
            je .L_426975

            mov RAX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+224]
            add RAX,16
            cmp RDI,RAX
            je .L_4269b2

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_4269ca

            mov QWORD PTR [RSP+208],RDI
            mov QWORD PTR [RSP+224],RAX
.L_4266e7:

            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_42670c
.L_426707:

            call _ZdlPv@PLT
.L_42670c:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_426721:

            call write@PLT
.L_426726:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+240],1
            add RAX,16
            cmp RDI,RAX
            je .L_4261df

            call _ZdlPv@PLT

            jmp .L_4261df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426758:

            mov RAX,QWORD PTR [RSP+96]
            mov RCX,QWORD PTR [RAX]
.L_426760:

            mov RAX,QWORD PTR [RSP+24]
            movzx R8D,BYTE PTR [RBX+144]
            mov DWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+96]
            movsxd RBP,DWORD PTR [RAX+8]
            add RBP,RCX
            cmp QWORD PTR [RSP+64],RBP
            ja .L_426be8

            test R8B,R8B
            jne .L_4264d0

            cmp BYTE PTR [RSP+127],0
            jne .L_426928

            mov ESI,DWORD PTR [RBX+164]
            test ESI,ESI
            js .L_4267c8

            mov RAX,QWORD PTR [RSP+80]
            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jne .L_4267c8

            mov RCX,QWORD PTR [RSP+64]
            cmp RCX,RBP
            jb .L_426ebd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4267c8:

            mov R9,QWORD PTR [RBX+136]
            mov R8,QWORD PTR [RSP+64]
            mov RDI,RBX
            mov EDX,DWORD PTR [RBX+8]
            mov ECX,DWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+80]
            mov QWORD PTR [R9],R8
.L_4267e6:

            call .L_4259d0
.L_4267eb:

            mov RAX,QWORD PTR [RBX+136]
            mov QWORD PTR [RAX],0
            jmp .L_4264d0
          .byte 0x66
          .byte 0x90
.L_426800:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_426817:

            call .L_4255f0

            mov RSI,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RAX
            je .L_426938

            mov RAX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+192]
            add RAX,16
            cmp RDI,RAX
            je .L_4269db

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_4269f3

            mov QWORD PTR [RSP+176],RDI
            mov QWORD PTR [RSP+192],RAX
.L_426894:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RDI],0
            add R14,16
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_426707

            jmp .L_42670c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4268c0:

            xor EAX,EAX
            jmp .L_425f37
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4268d0:

            cmp QWORD PTR [RSP+64],RDX
            mov EAX,5
            jne .L_425f37
.L_4268e0:

            or EAX,10
            mov DWORD PTR [RSP+108],0
            jmp .L_425f6f
.L_4268f0:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R13+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4268fe:

            jmp .L_42670c
.L_426903:

            or EAX,2
.L_426906:

            lea EDI,DWORD PTR [RDX-48]
            cmp DIL,9
            setbe DIL
            cmp DL,95
            sete DL
            or EDX,EDI
            movzx EDX,DL
            mov DWORD PTR [RSP+108],EDX
            jmp .L_425f6f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426928:

            cmp QWORD PTR [RSP+64],RCX
            jne .L_4264d0

            jmp .L_4267c8
.L_426938:

            test RDX,RDX
            je .L_42695c

            cmp RDX,1
            je .L_426b15

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+144]
.L_42695c:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+176]
            jmp .L_426894
.L_426975:

            test RDX,RDX
            je .L_426999

            cmp RDX,1
            je .L_426af6

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+216]
            mov RDI,QWORD PTR [RSP+144]
.L_426999:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+208]
            jmp .L_4266e7
.L_4269b2:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_4269ca:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RDI
            jmp .L_4266e7
.L_4269db:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_4269f3:

            lea RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RDI
            jmp .L_426894
.L_426a04:

            mov ESI,DWORD PTR [RBX+12]
            test ESI,ESI
            jle .L_426a45

            sub ESI,1
            lea RCX,QWORD PTR [R9+8]
            add RDX,8
            shr ESI,1
            shl RSI,4
            lea RDI,QWORD PTR [R9+RSI*1+24]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426a28:

            mov RSI,QWORD PTR [RCX-8]
            add RCX,16
            add RDX,16
            mov QWORD PTR [RDX-24],RSI
            mov RSI,QWORD PTR [RCX-16]
            mov QWORD PTR [RDX-16],RSI
            cmp RDI,RCX
            jne .L_426a28
.L_426a45:

            mov RDX,QWORD PTR [RBX+168]
            mov QWORD PTR [R9],R10
            mov QWORD PTR [RBP],RDX
            mov QWORD PTR [RBX+168],RBP
.L_426a5a:

            add R12,16
            cmp RAX,R12
            je .L_426a86
.L_426a63:

            mov RDX,QWORD PTR [R12]
            test RDX,RDX
            je .L_426a5a

            mov RCX,QWORD PTR [RBX+168]
            add R12,16
            cmp RAX,R12
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RBX+168],RDX
            jne .L_426a63
.L_426a86:

            mov RAX,QWORD PTR [RSP+24]
            mov BYTE PTR [RBX+144],1
            mov DWORD PTR [RAX],0
            jmp .L_4264b3
.L_426a9d:

            movzx EAX,BYTE PTR [RCX-1]
            mov ESI,1
            mov EDX,EAX
            mov DWORD PTR [RSP+104],EAX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_425eee

            lea EAX,DWORD PTR [RDX-48]
            cmp AL,9
            setbe SIL
            cmp DL,95
            sete AL
            or ESI,EAX
            movzx ESI,SIL
            jmp .L_425eee
.L_426ad4:

            cdqe 
            movabs RDX,1152921504606846975
            cmp RAX,RDX
            ja .L_427e8f

            lea RDI,QWORD PTR [RAX*8]
            jmp .L_425e6a
.L_426af6:

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+216]
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_426999
.L_426b15:

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_42695c
.L_426b34:

            mov RDX,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [R10+32]
            movsxd RCX,DWORD PTR [RDX+8]
            add RCX,QWORD PTR [RDX]
.L_426b44:

            cdqe 
            lea RBP,QWORD PTR [RDI+RAX*8]
            mov EAX,DWORD PTR [RBP]
            mov EDX,EAX
            and EDX,7
            cmp EDX,4
            je .L_4270ec

            jbe .L_4270cf

            cmp EDX,5
            je .L_426f2d

            cmp EDX,6
            jne .L_42738a
.L_426b73:

            shr EAX,3
            jmp .L_426b44
.L_426b78:

            movzx R8D,BYTE PTR [RBX+144]
.L_426b80:

            test R8B,R8B
            je .L_426360
.L_426b89:

            mov ECX,DWORD PTR [RSP+704]
            test ECX,ECX
            je .L_426bde

            mov RSI,QWORD PTR [RBX+136]
            mov EBX,DWORD PTR [RSP+704]
            mov RDX,QWORD PTR [RSP+112]
            lea ECX,DWORD PTR [RBX-1]
            lea RAX,QWORD PTR [RSI+8]
            add RDX,8
            shl RCX,4
            lea RDI,QWORD PTR [RSI+RCX*1+24]
            nop
            nop
            nop
            nop
            nop
.L_426bc0:

            mov RSI,QWORD PTR [RAX-8]
            mov RCX,QWORD PTR [RAX]
            add RAX,16
            add RDX,16
            sub RCX,RSI
            mov QWORD PTR [RDX-24],RSI
            mov DWORD PTR [RDX-16],ECX
            cmp RDI,RAX
            jne .L_426bc0
.L_426bde:

            mov EBP,1
            jmp .L_426362
.L_426be8:

            mov RAX,QWORD PTR [RSP+80]
            mov EDX,DWORD PTR [RAX]
.L_426bef:

            mov RAX,QWORD PTR [RSP+80]
            movsxd RCX,EDX
            shl RCX,4
            mov RAX,QWORD PTR [RAX+16]
            add RCX,RAX
            cmp RAX,RCX
            je .L_426b80

            nop
            nop
            nop
            nop
            nop
.L_426c10:

            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_426c29

            mov RSI,QWORD PTR [RBX+168]
            mov QWORD PTR [RDX],RSI
            mov QWORD PTR [RBX+168],RDX
.L_426c29:

            add RAX,16
            cmp RCX,RAX
            jne .L_426c10

            jmp .L_426b80
.L_426c37:

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_426cd5:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_426cda:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_426daf:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_426db4:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428599]
            mov EDX,10
.L_426dc5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4285a4]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,431
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a6]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_426e03:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4285ad]
            mov EDX,20
.L_426e14:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RSP+704]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_426e2a:

            cmp BYTE PTR [RSP+240],0
            je .L_426f59
.L_426e38:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_426e76

            call _ZdlPv@PLT
.L_426e76:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RBX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+RAX*1+248],RBX
            mov QWORD PTR [RSP+360],R15
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_426362
.L_426ebd:

            movzx EAX,BYTE PTR [RCX]
            cmp ESI,EAX
            je .L_4267c8

            mov RDX,RBP
            mov RDI,RCX
            sub RDX,RCX
            call memchr@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_427928

            movzx EDX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+108],1
            mov EAX,EDX
            and EAX,4294967263
            sub EAX,65
            cmp AL,25
            jbe .L_426f12

            lea EAX,DWORD PTR [RDX-48]
            cmp AL,9
            setbe AL
            cmp DL,95
            sete DL
            or EAX,EDX
            movzx EAX,AL
            mov DWORD PTR [RSP+108],EAX
.L_426f12:

            mov RSI,QWORD PTR [RSP+64]
            lea RDI,QWORD PTR [RSP+128]
.L_426f1f:

            call .L_4311b0
.L_426f24:

            mov DWORD PTR [RSP+120],EAX
            jmp .L_4267c8
.L_426f2d:

            mov QWORD PTR [RSI+8],RCX
            mov RSI,QWORD PTR [RSP+80]
            mov BYTE PTR [RBX+144],1
            movsxd RCX,DWORD PTR [RSI]
            mov RAX,QWORD PTR [RSI+16]
            shl RCX,4
            add RCX,RAX
            cmp RCX,RAX
            jne .L_426c10

            jmp .L_426b89
.L_426f59:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428582]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_427ac0

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_427714

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_426fe4:

            call .L_4255f0
.L_426fe9:

            mov RSI,QWORD PTR [RSP+208]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_427b7c

            mov RBX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+224]
            lea RDI,QWORD PTR [RBX+16]
            cmp RAX,RDI
            je .L_427b53

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_427b6b

            mov QWORD PTR [RSP+208],RAX
            mov QWORD PTR [RSP+224],RDI
.L_427064:

            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_427089
.L_427084:

            call _ZdlPv@PLT
.L_427089:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_42709e:

            call write@PLT
.L_4270a3:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+240],1
            add RAX,16
            cmp RDI,RAX
            je .L_426e38

            call _ZdlPv@PLT

            jmp .L_426e38
.L_4270cf:

            cmp EDX,3
            jne .L_42738a

            movsxd RDX,DWORD PTR [RBP+4]
            shr EAX,3
            mov QWORD PTR [RSI+RDX*8],RCX
            mov RDI,QWORD PTR [R10+32]
            jmp .L_426b44
.L_4270ec:

            test DWORD PTR [RBP+4],4294967285
            je .L_426b73

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_427197:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42719c:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_427271:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_427276:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428599]
            mov EDX,10
.L_427287:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4285a4]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,547
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a6]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4272c5:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428558]
            mov EDX,41
.L_4272d6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBP+4]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_4272e8:

            cmp BYTE PTR [RSP+240],0
            je .L_4277d4
.L_4272f6:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+360],RAX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_427334

            call _ZdlPv@PLT
.L_427334:

            mov RAX,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RSI,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+RAX*1+248],RSI
            mov QWORD PTR [RSP+360],R15
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [RSP+80]
            movzx R8D,BYTE PTR [RBX+144]
            mov EDX,DWORD PTR [RAX]
            jmp .L_426bef
.L_42738a:

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov QWORD PTR [RSP+592],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RSP+16],RAX
.L_427428:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42742d:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+304],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+56],RAX
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_427502:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_427507:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428599]
            mov EDX,10
.L_427518:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4285a4]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,528
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a6]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_427556:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428530]
            mov EDX,36
.L_427567:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBP]
            lea RDI,QWORD PTR [R12+8]
            and ESI,7
            call _ZNSolsEi@PLT
.L_42757c:

            cmp BYTE PTR [RSP+240],0
            jne .L_4272f6

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428582]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_427b3f

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_427a00

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_427615:

            call .L_4255f0
.L_42761a:

            mov RSI,QWORD PTR [RSP+208]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_427d65

            mov RDI,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+224]
            add RDI,16
            cmp RAX,RDI
            je .L_427d3c

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_427d54

            mov QWORD PTR [RSP+208],RAX
            mov QWORD PTR [RSP+224],RDI
.L_427695:

            mov QWORD PTR [RSP+216],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_4276ba
.L_4276b5:

            call _ZdlPv@PLT
.L_4276ba:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_4276cf:

            call write@PLT
.L_4276d4:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+240],1
            add RAX,16
            cmp RDI,RAX
            je .L_4272f6

            call _ZdlPv@PLT

            jmp .L_4272f6
.L_427700:

            mov RAX,QWORD PTR [RSP+80]
            movzx R8D,BYTE PTR [RBX+144]
            mov EDX,DWORD PTR [RAX]
            jmp .L_426bef
.L_427714:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_42772b:

            call .L_4255f0
.L_427730:

            mov RSI,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_427afd

            mov RBX,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+192]
            lea RDI,QWORD PTR [RBX+16]
            cmp RAX,RDI
            je .L_427ad4

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_427aec

            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+192],RDI
.L_4277ab:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_427084

            jmp .L_427089
.L_4277d4:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428582]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RSP+160],0
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            je .L_427e94

            mov RDX,QWORD PTR [RSP+280]
            mov RSI,QWORD PTR [RSP+288]
            cmp RAX,RDX
            jbe .L_42793a

            lea R14,QWORD PTR [RSP+208]
            lea RDX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+208],RDX
            mov RDX,RAX
.L_42785f:

            call .L_4255f0
.L_427864:

            mov RSI,QWORD PTR [RSP+208]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            cmp RSI,RAX
            je .L_427c1a

            mov RCX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+224]
            add RCX,16
            cmp RDI,RCX
            je .L_427bf1

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
            je .L_427c09

            mov QWORD PTR [RSP+208],RDI
            mov QWORD PTR [RSP+224],RCX
.L_4278dc:

            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+216],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+208]
            cmp RDI,R14
            je .L_427909
.L_427904:

            call _ZdlPv@PLT
.L_427909:

            movsxd RDX,DWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+144]
            mov EDI,2
.L_42791e:

            call write@PLT
.L_427923:

            jmp .L_4276d4
.L_427928:

            mov QWORD PTR [RSP+64],RBP
            mov DWORD PTR [RSP+108],0
            jmp .L_426f12
.L_42793a:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_427951:

            call .L_4255f0
.L_427956:

            mov RSI,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RAX
            je .L_427c9a

            mov RCX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+192]
            add RCX,16
            cmp RDI,RCX
            je .L_427c71

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
            je .L_427c89

            mov QWORD PTR [RSP+176],RDI
            mov QWORD PTR [RSP+192],RCX
.L_4279ce:

            mov RAX,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+184],0
            add R14,16
            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_427904

            jmp .L_427909
          .byte 0x90
.L_427a00:

            lea R14,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [RSP+176],RAX
.L_427a17:

            call .L_4255f0
.L_427a1c:

            mov RSI,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RSP+144]
            lea RCX,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RCX
            mov RAX,RDI
            je .L_427dd0

            mov RDI,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+192]
            add RDI,16
            cmp RAX,RDI
            je .L_427da7

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
            je .L_427dbf

            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+192],RDI
.L_427a97:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RAX],0
            add R14,16
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,R14
            jne .L_4276b5

            jmp .L_4276ba
.L_427ac0:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R12+88]
.L_427aca:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_427acf:

            jmp .L_427089
.L_427ad4:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_427aec:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RAX
            jmp .L_4277ab
.L_427afd:

            test RDX,RDX
            je .L_427b26

            cmp RDX,1
            jne .L_427e3f

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
.L_427b26:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+176]
            jmp .L_4277ab
.L_427b3f:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R12+88]
.L_427b49:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_427b4e:

            jmp .L_4276ba
.L_427b53:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_427b6b:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RAX
            jmp .L_427064
.L_427b7c:

            test RDX,RDX
            je .L_427ba1

            cmp RDX,1
            jne .L_427bda

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
.L_427ba1:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+208]
            jmp .L_427064
.L_427bba:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+144]
            add RAX,16
            cmp RDI,RAX
            je .L_427bd5

            call _ZdlPv@PLT
.L_427bd5:

            call _ZSt9terminatev@PLT
.L_427bda:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            jmp .L_427ba1
.L_427bf1:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
.L_427c09:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RAX
            jmp .L_4278dc
.L_427c1a:

            test RDX,RDX
            je .L_427c3f

            cmp RDX,1
            jne .L_427c55

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
.L_427c3f:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_4278dc
.L_427c50:

            jmp .L_427bba
.L_427c55:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            jmp .L_427c3f
.L_427c6c:

            jmp .L_427bba
.L_427c71:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RAX
.L_427c89:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RAX
            jmp .L_4279ce
.L_427c9a:

            test RDX,RDX
            je .L_427cbf

            cmp RDX,1
            jne .L_427cd0

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
.L_427cbf:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            jmp .L_4279ce
.L_427cd0:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            jmp .L_427cbf
.L_427ce7:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
.L_427cf7:

            call _Unwind_Resume@PLT
.L_427cfc:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+RAX*1+248],RSI
.L_427d22:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+360],R15
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_427d3c:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_427d54:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+208],RAX
            jmp .L_427695
.L_427d65:

            test RDX,RDX
            je .L_427d8e

            cmp RDX,1
            jne .L_427e0e

            movzx EAX,BYTE PTR [RSP+224]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
.L_427d8e:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+208]
            jmp .L_427695
.L_427da7:

            mov QWORD PTR [RSP+144],RSI
            mov QWORD PTR [RSP+152],RDX
            mov QWORD PTR [RSP+160],RCX
.L_427dbf:

            lea RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+176],RAX
            jmp .L_427a97
.L_427dd0:

            test RDX,RDX
            je .L_427df5

            cmp RDX,1
            jne .L_427e28

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
.L_427df5:

            mov QWORD PTR [RSP+152],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+176]
            jmp .L_427a97
.L_427e0e:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+216]
            jmp .L_427d8e
.L_427e28:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            jmp .L_427df5
.L_427e3f:

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+184]
            jmp .L_427b26
.L_427e59:

            mov RBX,RAX
            mov RDI,R12
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_427e6c:

            jmp .L_427ce7
.L_427e71:

            jmp .L_427cfc
.L_427e76:

            mov RBX,RAX
            jmp .L_427d22
.L_427e7e:

            jmp .L_427bba
.L_427e83:

            jmp .L_427bba
.L_427e88:

            jmp .L_427bba
.L_427e8d:

            jmp .L_427e76
.L_427e8f:

            call __cxa_throw_bad_array_new_length@PLT
.L_427e94:

            mov RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [R12+88]
.L_427e9e:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_427ea3:

            jmp .L_427909
.L_427ea8:

            jmp .L_427e59
.L_427eaa:

            mov RBX,RAX
            mov RDI,R13
            call .L_40c160

            mov RDI,RBX
.L_427eb8:

            call _Unwind_Resume@PLT
.L_427ebd:

            lea RDI,QWORD PTR [R13+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_427ed1:

            lea RDI,QWORD PTR [R13+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R15-24]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+248],R15
            mov QWORD PTR [RSP+RAX*1+248],RSI
.L_427ef6:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R13+120]
            mov QWORD PTR [RSP+360],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_427f16:

            mov RBX,RAX
            jmp .L_427ef6
.L_427f1b:

            jmp .L_427e59
.L_427f20:

            jmp .L_427ce7
.L_427f25:

            jmp .L_427cfc
.L_427f2a:

            jmp .L_427e76
.L_427f2f:

            lea R12,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+240],0
            lea R15,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+584],0
            xor ESI,ESI
            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+360],R15
            mov QWORD PTR [RSP+576],0
            mov BYTE PTR [RSP+585],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+592],0
            mov QWORD PTR [RSP+600],0
            mov QWORD PTR [RSP+608],0
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+248],RBP
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov QWORD PTR [RDI],R13
.L_427fc8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_427fcd:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+248],RAX
            add RAX,40
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+360],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+256],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+320],16
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+256],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+344],0
            mov QWORD PTR [RSP+328],RAX
.L_42808e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_428093:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428599]
            mov EDX,10
.L_4280a4:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_4285a4]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,411
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a6]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4280e2:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_428500]
            mov EDX,40
.L_4280f3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RSI,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSo9_M_insertIPKvEERSoT_@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a9]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RSP+136]
            mov RDI,RBX
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_4285ab]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov R15,QWORD PTR [RSP+96]
            mov RDI,RBX
            mov RSI,QWORD PTR [R15]
            call _ZNSo9_M_insertIPKvEERSoT_@PLT

            lea RSI,QWORD PTR [RIP+.L_4285a9]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [R15+8]
            mov RDI,RBX
            call _ZNSolsEi@PLT
.L_42817a:

            mov RDI,R12
            call .L_410610

            call abort@PLT
.L_428187:

            call __stack_chk_fail@PLT
.L_42818c:

            mov RDI,R12
            call .L_410610

            call abort@PLT
.L_428199:

            jmp .L_427ce7
.L_42819e:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+248],RBP
            mov QWORD PTR [RSP+RAX*1+248],R13
            jmp .L_427d22
.L_4281c4:

            jmp .L_427e76
.L_4281c9:

            jmp .L_427bba
.L_4281ce:

            jmp .L_427bba
.L_4281d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4281e0:

            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_4281e7:

            mov RDI,QWORD PTR [RDI+136]
            test RDI,RDI
            je .L_4281f8

            call _ZdaPv@PLT
.L_4281f8:

            mov RDI,QWORD PTR [R12+152]
            test RDI,RDI
            je .L_42820a

            call _ZdaPv@PLT
.L_42820a:

            mov RBX,QWORD PTR [R12+168]
            test RBX,RBX
            je .L_428246

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428220:

            mov RDI,QWORD PTR [RBX+8]
            mov RBP,QWORD PTR [RBX]
            test RDI,RDI
            je .L_428231

            call _ZdaPv@PLT
.L_428231:

            mov RDI,RBX
            mov ESI,16
            mov RBX,RBP
            call _ZdlPvm@PLT

            test RBP,RBP
            jne .L_428220
.L_428246:

            lea RDI,QWORD PTR [R12+88]
            call .L_428680

            pop RBX
.L_428251:

            lea RDI,QWORD PTR [R12+40]
            pop RBP
            pop R12
            jmp .L_428680
.L_42825e:

            nop
            nop
.L_428260:

            push R13
            push R12
            lea R12,QWORD PTR [RDI+40]
            push RBP
            push RBX
            mov RBX,RDI
            lea R13,QWORD PTR [RBX+88]
            mov RDI,R12
            mov RBP,RSI
            sub RSP,8
.L_42827b:

            call .L_428620
.L_428280:

            mov RDI,R13
.L_428283:

            call .L_428620
.L_428288:

            mov QWORD PTR [RBX],RBP
            mov EAX,DWORD PTR [RBP+4]
            mov RDI,R12
            mov DWORD PTR [RBX+12],0
            mov BYTE PTR [RBX+16],0
            mov BYTE PTR [RBX+17],0
            mov QWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+8],EAX
            mov QWORD PTR [RBX+32],0
            mov ESI,DWORD PTR [RBP+12]
.L_4282b6:

            call .L_4286d0

            mov RAX,QWORD PTR [RBX]
            mov RDI,R13
            mov ESI,DWORD PTR [RAX+12]
            call .L_4286d0

            mov RAX,QWORD PTR [RBX]
            mov EBP,DWORD PTR [RAX+12]
            movabs RAX,576460752303423487
            add EBP,EBP
            mov DWORD PTR [RBX+160],EBP
            movsxd RBP,EBP
            cmp RBP,RAX
            ja .L_42835f

            mov RDI,RBP
            shl RDI,4
            call _Znam@PLT

            xor ECX,ECX
            test RBP,RBP
            mov RDX,RAX
            je .L_428322

            nop
.L_428300:

            add RCX,1
            mov DWORD PTR [RDX],0
            mov DWORD PTR [RDX+4],4294967295
            mov QWORD PTR [RDX+8],0
            add RDX,16
            cmp RCX,RBP
            jne .L_428300
.L_428322:

            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+136],0
            mov RDI,RBX
            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+168],0
            call .L_4257a0

            mov DWORD PTR [RBX+164],EAX
            add RSP,8
.L_428358:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42835f:

            call __cxa_throw_bad_array_new_length@PLT
.L_428364:

            mov RDI,R13
            mov RBX,RAX
            call .L_428680
.L_42836f:

            mov RDI,R12
            call .L_428680

            mov RDI,RBX
.L_42837a:

            call _Unwind_Resume@PLT
.L_42837f:

            mov RBX,RAX
            jmp .L_42836f
.L_428384:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428390:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R14,RSI
            push RBX
.L_4283a0:

            lea RBX,QWORD PTR [RBP-240]
            mov R15,RDX
            mov R12D,ECX
            mov R13,R9
            sub RSP,232
            mov DWORD PTR [RBP-260],R8D
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RSI
            xor ESI,ESI
            mov RSI,RDI
            mov RDI,RBX
.L_4283d3:

            call .L_428260
.L_4283d8:

            cmp DWORD PTR [RBP-260],2
            mov QWORD PTR [RBP-256],0
            mov DWORD PTR [RBP-248],0
            je .L_428490

            xor ECX,ECX
            cmp R12D,1
            sete CL
.L_428403:

            mov ESI,DWORD PTR [RBP-260]
            mov EDX,DWORD PTR [RBP+16]
            xor R8D,R8D
            mov R9,R13
            mov RDI,RBX
            test ESI,ESI
            mov RSI,R14
            setne R8B
            sub RSP,8
            push RDX
            mov RDX,R15
.L_428426:

            call .L_425d80
.L_42842b:

            mov R12D,EAX
            test R12B,R12B
            pop RAX
            pop RDX
            je .L_42843e

            cmp DWORD PTR [RBP-260],2
            je .L_428470
.L_42843e:

            mov RDI,RBX
            call .L_4281e0

            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_4284b3

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_428466:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428470:

            movsxd RDX,DWORD PTR [R14+8]
            movsxd RAX,DWORD PTR [R13+8]
            add RDX,QWORD PTR [R14]
            add RAX,QWORD PTR [R13]
            cmp RDX,RAX
            sete R12B
            jmp .L_42843e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428490:

            mov EDI,DWORD PTR [RBP+16]
            mov ECX,1
            test EDI,EDI
            jne .L_428403

            mov DWORD PTR [RBP+16],1
            lea R13,QWORD PTR [RBP-256]
            jmp .L_428403
.L_4284b3:

            call __stack_chk_fail@PLT
.L_4284b8:

            mov R15,RAX
            mov RDI,RBX
            call .L_4281e0

            mov RDI,R15
.L_4284c6:

            call _Unwind_Resume@PLT
.L_4284cb:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4284d0:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_428500:
          .string "Bad args: context does not contain text "
          .zero 7
.L_428530:
          .string "Unexpected opcode in short circuit: "
          .zero 3
.L_428558:
          .string "Unexpected empty-width in short circuit: "
.L_428582:
          .string "\n"
.L_428584:
          .string "(?,?)"
.L_42858a:
          .string "(%d,?)"
.L_428591:
          .string "(%d,%d)"
.L_428599:
          .string "re2/nfa.cc"
.L_4285a4:
          .string ":"
.L_4285a6:
          .string ": "
.L_4285a9:
          .string "+"
.L_4285ab:
          .string " "
.L_4285ad:
          .string "Bad args: nsubmatch="
.L_4285c2:
          .string "Unhandled "
.L_4285cd:
          .string " in step"
          .byte 0x66
          .byte 0x90
.L_4285d8:
          .long .L_425910-.L_4285d8
          .long .L_425910-.L_4285d8
          .long .L_4258d0-.L_4285d8
          .long .L_4258a0-.L_4285d8
          .long .L_4258a0-.L_4285d8
          .long .L_425831-.L_4285d8
          .long .L_4258a0-.L_4285d8
          .long .L_4258b0-.L_4285d8
.L_4285f8:
          .long .L_425b60-.L_4285f8
          .long .L_425af8-.L_4285f8
          .long .L_425c30-.L_4285f8
          .long .L_425be0-.L_4285f8
          .long .L_425bb8-.L_4285f8
          .long .L_425c30-.L_4285f8
          .long .L_425bc6-.L_4285f8
          .long .L_425c90-.L_4285f8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428620:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            mov QWORD PTR [RDI+32],0
.L_428650:

            call .L_43e090
.L_428655:

            test EAX,EAX
            setne BYTE PTR [RBX+40]
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_428662:

            mov RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            test RDI,RDI
            je .L_428673

            call _ZdlPv@PLT
.L_428673:

            mov RDI,RBP
.L_428676:

            call _Unwind_Resume@PLT
.L_42867b:

            nop
            nop
            nop
            nop
            nop
.L_428680:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_428692

            call _ZdaPv@PLT
.L_428692:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_4286a8

            pop RBX
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4286a8:

            pop RBX
            ret 
.L_4286aa:

            jbe .L_428711
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x5f
          .byte 0x4d
          .byte 0x5f
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x61
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_4286d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,24
.L_4286e3:

            cmp DWORD PTR [RDI+4],ESI
            jge .L_4287b0

            movsxd R13,ESI
            movabs RAX,2305843009213693950
            cmp R13,RAX
            ja .L_4287f5

            lea RDI,QWORD PTR [R13*4]
            call _Znam@PLT

            mov R14,QWORD PTR [RBX+.L_42871b]
            mov R15,RAX
            test R14,R14
            je .L_42877f
# WARNING: found overlapping blocks at address 284e1
.set .L_428711, . - 10
.L_42871b:

            movsxd R8,DWORD PTR [RBX+4]
            mov RSI,R14
            mov RDI,RAX
            lea R12,QWORD PTR [R8*4]
            mov DWORD PTR [RSP+4],R8D
            mov QWORD PTR [RSP+8],R8
            mov RDX,R12
            call memmove@PLT

            cmp BYTE PTR [RBX+40],0
            je .L_428777

            mov ECX,DWORD PTR [RSP+4]
            cmp ECX,EBP
            jge .L_428777

            lea EAX,DWORD PTR [RBP-1]
            mov R8,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [R15+R12*1]
            sub EAX,ECX
            add RAX,R8
            lea RAX,QWORD PTR [R15+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
.L_428768:

            mov DWORD PTR [RDX],2880154539
            add RDX,4
            cmp RAX,RDX
            jne .L_428768
.L_428777:

            mov RDI,R14
            call _ZdaPv@PLT
.L_42877f:

            mov RDX,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R15
            mov RAX,RDX
            sub RAX,RDI
            sar RAX,4
            cmp R13,RAX
            ja .L_4287d0

            jae .L_4287b0

            shl R13,4
            add R13,RDI
            mov QWORD PTR [RBX+24],R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4287b0:

            cmp DWORD PTR [RBX],EBP
            mov DWORD PTR [RBX+4],EBP
            jle .L_4287b9

            mov DWORD PTR [RBX],EBP
.L_4287b9:

            add RSP,24
.L_4287bd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4287d0:

            mov RCX,R13
            sub RCX,RAX
            je .L_4287b0

            mov RSI,QWORD PTR [RBX+32]
            sub RSI,RDX
            sar RSI,4
            cmp RCX,RSI
            ja .L_428800

            shl RCX,4
            add RDX,RCX
            mov QWORD PTR [RBX+24],RDX
            jmp .L_4287b0
.L_4287f5:

            call __cxa_throw_bad_array_new_length@PLT

            nop
            nop
            nop
            nop
            nop
            nop
.L_428800:

            movabs RSI,1152921504606846975
            mov R8,RSI
            sub R8,RAX
            cmp RCX,R8
            ja .L_4288ac

            cmp RAX,RCX
            cmovae RCX,RAX
            add RAX,RCX
            jb .L_42889b

            cmp RAX,RSI
            ja .L_42889b

            test RAX,RAX
            je .L_4288a4

            shl RAX,4
            mov R12,RAX
.L_428836:

            mov RDI,R12
            call _Znwm@PLT

            mov RDX,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBX+16]
            mov R14,RAX
            add R12,RAX
.L_42884c:

            cmp RDI,RDX
            je .L_428879

            mov RSI,R14
            mov RCX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428860:

            test RSI,RSI
            je .L_42886c

            movdqu XMM0,XMMWORD PTR [RCX]
            movups XMMWORD PTR [RSI],XMM0
.L_42886c:

            add RCX,16
            add RSI,16
            cmp RCX,RDX
            jne .L_428860
.L_428879:

            test RDI,RDI
            je .L_428883

            call _ZdlPv@PLT
.L_428883:

            shl R13,4
            mov QWORD PTR [RBX+16],R14
            mov QWORD PTR [RBX+32],R12
            add R14,R13
            mov QWORD PTR [RBX+24],R14
            jmp .L_4287b0
.L_42889b:

            mov R12,-16
            jmp .L_428836
.L_4288a4:

            xor R12D,R12D
            xor R14D,R14D
            jmp .L_42884c
.L_4288ac:

            lea RDI,QWORD PTR [RIP+.L_4286aa]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4288b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4288c0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_4288ce:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_4288ec

            test RDX,RDX
            jne .L_428977
.L_4288ec:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_428940

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_428970

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_428914:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428983

            add RSP,16
.L_428934:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428940:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_428959:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_428914
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428970:

            test RBX,RBX
            je .L_428914

            jmp .L_428959
.L_428977:

            lea RDI,QWORD PTR [RIP+.L_429bf8]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_428983:

            call __stack_chk_fail@PLT
.L_428988:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428990:

            cmp DWORD PTR [RDI+4],ESI
            mov EAX,1
            jbe .L_4289d7

            mov RDX,QWORD PTR [RDI+8]
            movsxd RAX,ESI
            mov R8D,DWORD PTR [RDI]
            mov R9,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDX+RAX*4]
            mov EAX,DWORD PTR [RCX]
            cmp EAX,R8D
            jae .L_4289c5

            movsxd RDX,EAX
            xor EAX,EAX
            cmp ESI,DWORD PTR [R9+RDX*4]
            je .L_4289d7

            mov EAX,1
            je .L_4289d7
.L_4289c5:

            mov DWORD PTR [RCX],R8D
            movsxd RAX,DWORD PTR [RDI]
            mov DWORD PTR [R9+RAX*4],ESI
            add DWORD PTR [RDI],1
            mov EAX,1
.L_4289d7:

            ret 
.L_4289d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4289e0:

            ret 
.L_4289e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4289f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,664
.L_428a01:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+648],RAX
            xor EAX,EAX
            cmp ECX,1
            setne CL
            cmp R8D,2
            setne AL
            and CL,AL
            mov BYTE PTR [RSP+54],CL
            jne .L_428d20

            mov EAX,DWORD PTR [RSP+720]
            mov R13D,2
            lea R15,QWORD PTR [RSP+176]
            add EAX,EAX
            cmp EAX,2
            mov DWORD PTR [RSP+60],EAX
            cmovge R13D,EAX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428a58:

            mov QWORD PTR [R15+RAX*8],0
            add RAX,1
            cmp R13D,EAX
            jg .L_428a58

            lea R14,QWORD PTR [RSP+256]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_428a78:

            mov QWORD PTR [R14+RAX*8],0
            add RAX,1
            cmp R13D,EAX
            jg .L_428a78

            movdqu XMM0,XMMWORD PTR [RDX]
            movq RAX,XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            test RAX,RAX
            je .L_428d00

            cmp BYTE PTR [RDI],0
            mov R12,QWORD PTR [RSI]
            je .L_428ae0
.L_428aa8:

            cmp QWORD PTR [RSP+96],R12
            je .L_428ae0
.L_428aaf:

            mov RDI,QWORD PTR [RSP+648]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+54]
            jne .L_429441

            add RSP,664
.L_428ad2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428ae0:

            movsxd RAX,DWORD PTR [RSI+8]
            cmp BYTE PTR [RDI+1],0
            lea RSI,QWORD PTR [R12+RAX*1]
            mov QWORD PTR [RSP],RSI
            je .L_428b07

            movsxd RAX,DWORD PTR [RSP+104]
            add RAX,QWORD PTR [RSP+96]
            cmp RSI,RAX
            jne .L_428aaf

            mov R8D,2
.L_428b07:

            mov RAX,QWORD PTR [RDI+424]
            cmp QWORD PTR [RSP],R12
            mov RBX,QWORD PTR [RDI+432]
            mov QWORD PTR [RSP+256],R12
            mov QWORD PTR [RSP+176],R12
            mov QWORD PTR [RSP+16],RAX
            mov EAX,DWORD PTR [RDI+28]
            mov DWORD PTR [RSP+92],EAX
            lea RAX,QWORD PTR [RDI+160]
            mov R11D,DWORD PTR [RBX]
            mov QWORD PTR [RSP+8],RAX
            jbe .L_4293ae

            lea RAX,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+56],R13D
            mov QWORD PTR [RSP+40],R14
            mov BYTE PTR [RSP+55],0
            mov EDX,DWORD PTR [RSP+60]
            mov R13D,R11D
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+72],R9
            mov R14,R15
            jmp .L_428bdf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428b78:

            mov EAX,DWORD PTR [RSP+92]
            mov EBX,EBP
            shr EBX,16
            imul EBX,EAX
            movsxd RBX,EBX
            add RBX,QWORD PTR [RSP+16]
            cmp R8D,2
            mov R15D,DWORD PTR [RBX]
            je .L_428bb8

            cmp R13D,48
            je .L_428bb8

            mov R11D,EBP
            and R11D,64
            jne .L_428c40

            test R15B,63
            jne .L_428c40

            nop
            nop
            nop
            nop
            nop
            nop
.L_428bb8:

            test EBP,32640
            mov R13D,R15D
            je .L_428bd1

            cmp DWORD PTR [RSP+720],1
            jg .L_428f70
.L_428bd1:

            add R12,1
            cmp R12,QWORD PTR [RSP]
            je .L_428fb3
.L_428bdf:

            movzx EAX,BYTE PTR [R12]
            mov RSI,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RSI+RAX*1]
            mov EBP,DWORD PTR [RBX+RAX*4+4]
            mov EBX,EBP
            and EBX,63
            je .L_428b78

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R12
            mov DWORD PTR [RSP+48],R8D
            mov DWORD PTR [RSP+28],EDX
.L_428c09:

            call .L_4311b0

            not EAX
            mov EDX,DWORD PTR [RSP+28]
            mov R8D,DWORD PTR [RSP+48]
            test EAX,EBX
            je .L_428b78

            cmp R8D,2
            je .L_428c90

            cmp R13D,48
            je .L_428c90

            mov R11D,EBP
            mov R15D,48
            xor EBX,EBX
            and R11D,64
            nop
            nop
            nop
            nop
.L_428c40:

            mov ECX,R13D
            and ECX,63
            je .L_429050

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R12
            mov DWORD PTR [RSP+68],R8D
            mov DWORD PTR [RSP+64],EDX
            mov DWORD PTR [RSP+48],ECX
            mov DWORD PTR [RSP+28],R11D
            call .L_4311b0
.L_428c6b:

            mov ECX,DWORD PTR [RSP+48]
            not EAX
            mov R11D,DWORD PTR [RSP+28]
            mov EDX,DWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+68]
            test EAX,ECX
            je .L_429050
.L_428c87:

            test RBX,RBX
            jne .L_428bb8
.L_428c90:

            mov R9,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+40]
.L_428c9a:

            cmp BYTE PTR [RSP+55],0
            je .L_428aaf
.L_428ca5:

            mov EAX,DWORD PTR [RSP+720]
            test EAX,EAX
            jle .L_428ced

            mov EAX,DWORD PTR [RSP+720]
            lea RDI,QWORD PTR [R14+8]
            lea ESI,DWORD PTR [RAX-1]
            xor EAX,EAX
            add RSI,1
            shl RSI,4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428cd0:

            mov RCX,QWORD PTR [R14+RAX*1]
            mov RDX,QWORD PTR [RDI+RAX*1]
            sub RDX,RCX
            mov QWORD PTR [R9+RAX*1],RCX
            mov DWORD PTR [R9+RAX*1+8],EDX
            add RAX,16
            cmp RAX,RSI
            jne .L_428cd0
.L_428ced:

            mov BYTE PTR [RSP+54],1
            jmp .L_428aaf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428d00:

            mov RAX,QWORD PTR [RSI]
            cmp BYTE PTR [RDI],0
            mov R12,QWORD PTR [RSI]
            mov QWORD PTR [RSP+96],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RSP+104],EAX
            je .L_428ae0

            jmp .L_428aa8
.L_428d20:

            lea R14,QWORD PTR [RSP+256]
            mov BYTE PTR [RSP+256],0
            lea RBP,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R14+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+600],0
            xor ESI,ESI
            mov QWORD PTR [RSP+376],RBP
            mov QWORD PTR [RSP+592],0
            mov BYTE PTR [RSP+601],0
            mov QWORD PTR [RSP+608],0
            mov RAX,QWORD PTR [RBX-24]
            mov QWORD PTR [RSP+616],0
            mov QWORD PTR [RSP+624],0
            mov QWORD PTR [RSP+632],0
            mov QWORD PTR [RSP+264],RBX
            lea RDI,QWORD PTR [R14+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_428db8:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_428dbd:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R14+72]
            lea R12,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+288],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],RAX
            add RAX,40
            mov QWORD PTR [RSP+272],R12
            mov QWORD PTR [RSP+376],RAX
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [R14+104]
            lea RSI,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+272],R13
            mov DWORD PTR [RSP+336],16
            mov QWORD PTR [RSP+344],RAX
            mov QWORD PTR [RSP+352],0
            mov BYTE PTR [RSP+360],0
.L_428e7a:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_428e7f:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_429c8a]
            mov EDX,14
.L_428e8f:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_429c99]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            mov ESI,212
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_429c9b]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_428ecb:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_429c28]
            mov EDX,48
.L_428edb:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_428ee0:

            cmp BYTE PTR [RSP+256],0
            je .L_4290f0
.L_428eee:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+344]
            mov QWORD PTR [RSP+272],R13
            mov QWORD PTR [RSP+264],RAX
            add RAX,40
            mov QWORD PTR [RSP+376],RAX
            lea RAX,QWORD PTR [R14+104]
            cmp RDI,RAX
            je .L_428f27

            call _ZdlPv@PLT
.L_428f27:

            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+272],R12
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBX-24]
            mov RDI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],RBX
            mov QWORD PTR [RSP+RAX*1+264],RDI
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+376],RBP
            call _ZNSt8ios_baseD2Ev@PLT

            mov BYTE PTR [RSP+54],0
            jmp .L_428aaf
          .byte 0x66
          .byte 0x90
.L_428f70:

            cmp EDX,2
            jle .L_428bd1

            mov R9D,DWORD PTR [RSP+56]
            mov ECX,2
            mov ESI,32
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428f90:

            mov EAX,ESI
            shl EAX,CL
            test EAX,EBP
            je .L_428f9c

            mov QWORD PTR [R14+RCX*8],R12
.L_428f9c:

            add RCX,1
            cmp R9D,ECX
            jg .L_428f90

            add R12,1
            cmp R12,QWORD PTR [RSP]
            jne .L_428bdf
.L_428fb3:

            mov EBX,DWORD PTR [RBX]
            mov R15,R14
            mov R13D,DWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+40]
            cmp EBX,48
            je .L_428c9a
.L_428fd0:

            mov EBP,EBX
            and EBP,63
            jne .L_429369
.L_428fdb:

            cmp DWORD PTR [RSP+720],1
            jle .L_4290e0

            test EBX,32640
            je .L_4290e0

            cmp DWORD PTR [RSP+60],2
            jle .L_429041

            mov ECX,2
            mov EDX,32
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429010:

            mov EAX,EDX
            shl EAX,CL
            test EAX,EBX
            je .L_42901c

            mov QWORD PTR [R15+RCX*8],R12
.L_42901c:

            add RCX,1
            cmp R13D,ECX
            jg .L_429010
.L_429025:

            mov EAX,2
            nop
            nop
            nop
            nop
            nop
            nop
.L_429030:

            mov RDX,QWORD PTR [R15+RAX*8]
            mov QWORD PTR [R14+RAX*8],RDX
            add RAX,1
            cmp R13D,EAX
            jg .L_429030
.L_429041:

            mov QWORD PTR [RSP+264],R12
            jmp .L_428ca5
          .byte 0x66
          .byte 0x90
.L_429050:

            cmp EDX,2
            jle .L_429070

            mov R10,QWORD PTR [RSP+40]
            mov EAX,2
            nop
.L_429060:

            mov RCX,QWORD PTR [R14+RAX*8]
            mov QWORD PTR [R10+RAX*8],RCX
            add RAX,1
            cmp EDX,EAX
            jg .L_429060
.L_429070:

            cmp DWORD PTR [RSP+720],1
            jle .L_429083

            test R13D,32640
            jne .L_4290a8
.L_429083:

            test R8D,R8D
            mov QWORD PTR [RSP+264],R12
            jne .L_429099

            test R11D,R11D
            jne .L_42939f
.L_429099:

            mov BYTE PTR [RSP+55],1
            jmp .L_428c87
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4290a8:

            cmp EDX,2
            jle .L_429083

            mov R9D,DWORD PTR [RSP+56]
            mov R10,QWORD PTR [RSP+40]
            mov ECX,2
            mov ESI,32
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4290c8:

            mov EAX,ESI
            shl EAX,CL
            test EAX,R13D
            je .L_4290d5

            mov QWORD PTR [R10+RCX*8],R12
.L_4290d5:

            add RCX,1
            cmp R9D,ECX
            jg .L_4290c8

            jmp .L_429083
.L_4290e0:

            cmp DWORD PTR [RSP+60],2
            jg .L_429025

            jmp .L_429041
.L_4290f0:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_429c59]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RSP+128],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+112],RAX
            mov RAX,QWORD PTR [RSP+312]
            test RAX,RAX
            je .L_42938d

            mov RDX,QWORD PTR [RSP+296]
            mov RSI,QWORD PTR [RSP+304]
            cmp RAX,RDX
            jbe .L_429210

            lea R15,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+176],RDX
            mov RDX,RAX
.L_429170:

            call .L_4288c0

            mov RSI,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+112]
            mov RDX,QWORD PTR [RSP+184]
            cmp RSI,RAX
            je .L_429332

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+192]
            add RCX,16
            cmp RDI,RCX
            je .L_4293c3

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
            je .L_4293d5

            mov QWORD PTR [RSP+176],RDI
            mov QWORD PTR [RSP+192],RCX
.L_4291e3:

            mov QWORD PTR [RSP+184],0
            mov BYTE PTR [RDI],0
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+176]
            cmp RDI,RAX
            jne .L_4292ba

            jmp .L_4292bf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429210:

            lea R15,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+144],RAX
            call .L_4288c0
.L_42922c:

            mov RSI,QWORD PTR [RSP+144]
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+112]
            mov RDX,QWORD PTR [RSP+152]
            cmp RSI,RAX
            je .L_4292fb

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+160]
            add RCX,16
            cmp RDI,RCX
            je .L_4293e6

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
            je .L_4293f8

            mov QWORD PTR [RSP+144],RDI
            mov QWORD PTR [RSP+160],RCX
.L_42929a:

            mov QWORD PTR [RSP+152],0
            mov BYTE PTR [RDI],0
            lea RAX,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [RSP+144]
            cmp RDI,RAX
            je .L_4292bf
.L_4292ba:

            call _ZdlPv@PLT
.L_4292bf:

            movsxd RDX,DWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov EDI,2
.L_4292ce:

            call write@PLT
.L_4292d3:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+256],1
            add RAX,16
            cmp RDI,RAX
            je .L_428eee

            call _ZdlPv@PLT

            jmp .L_428eee
.L_4292fb:

            test RDX,RDX
            je .L_42931c

            cmp RDX,1
            je .L_429409

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+112]
.L_42931c:

            mov QWORD PTR [RSP+120],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+144]
            jmp .L_42929a
.L_429332:

            test RDX,RDX
            je .L_429353

            cmp RDX,1
            je .L_429425

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+112]
.L_429353:

            mov QWORD PTR [RSP+120],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+176]
            jmp .L_4291e3
.L_429369:

            lea RDI,QWORD PTR [RSP+96]
            mov RSI,R12
            mov QWORD PTR [RSP],R9
.L_429375:

            call .L_4311b0
.L_42937a:

            not EAX
            mov R9,QWORD PTR [RSP]
            test EAX,EBP
            jne .L_428c9a

            jmp .L_428fdb
.L_42938d:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R14+88]
.L_429395:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42939a:

            jmp .L_4292bf
.L_42939f:

            mov R9,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+40]
            jmp .L_428ca5
.L_4293ae:

            mov EBX,DWORD PTR [RBX]
            mov BYTE PTR [RSP+55],0
            cmp EBX,48
            jne .L_428fd0

            jmp .L_428aaf
.L_4293c3:

            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
.L_4293d5:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+176],RDI
            jmp .L_4291e3
.L_4293e6:

            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+120],RDX
            mov QWORD PTR [RSP+128],RAX
.L_4293f8:

            lea RDI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+144],RDI
            jmp .L_42929a
.L_429409:

            movzx EAX,BYTE PTR [RSP+160]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42931c
.L_429425:

            movzx EAX,BYTE PTR [RSP+192]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+184]
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_429353
.L_429441:

            call __stack_chk_fail@PLT
.L_429446:

            mov RDI,QWORD PTR [RSP+344]
            mov R15,RAX
            lea RAX,QWORD PTR [R14+104]
            mov QWORD PTR [RSP+272],R13
            cmp RDI,RAX
            je .L_429467

            call _ZdlPv@PLT
.L_429467:

            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+272],R12
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBX-24]
            mov RDI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+264],RBX
            mov RBX,R15
            mov QWORD PTR [RSP+RAX*1+264],RDI
.L_429496:

            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+376],RBP
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_4294aa:

            call _Unwind_Resume@PLT
.L_4294af:

            lea RDI,QWORD PTR [R14+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4294c3:

            mov RBX,RAX
            jmp .L_429496
.L_4294c8:

            mov RBX,RAX
            mov RDI,R14
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4294db:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            je .L_4294f2

            call _ZdlPv@PLT
.L_4294f2:

            call _ZSt9terminatev@PLT
.L_4294f7:

            jmp .L_4294db
.L_4294f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429500:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_429514:

            movzx R12D,BYTE PTR [RDI+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test R12B,R12B
            jne .L_4297d0

            mov EDX,DWORD PTR [RDI+4]
            mov BYTE PTR [RDI+3],1
            test EDX,EDX
            je .L_4297dc

            mov EAX,DWORD PTR [RDI+16]
            lea EBX,DWORD PTR [RAX+2]
            cmp EBX,64999
            mov DWORD PTR [RSP+12],EBX
            mov R14D,EBX
            jg .L_4297dc

            mov RDX,QWORD PTR [R15+112]
            mov EAX,DWORD PTR [RDI+20]
            lea EDI,DWORD PTR [RAX*4+4]
            lea RAX,QWORD PTR [RDX+3]
            test RDX,RDX
            cmovns RAX,RDX
            movsxd RCX,EDI
            mov DWORD PTR [RSP+8],EDI
            sar RAX,2
            cqo 
            idiv RCX
            movsxd RDX,EBX
            cmp RAX,RDX
            jl .L_4297dc

            movsxd RBX,DWORD PTR [R15+12]
            movabs RAX,1152921504606846975
            cmp RBX,RAX
            mov RBP,RBX
            ja .L_429bc9

            lea RDI,QWORD PTR [RBX*8]
            shl RBX,2
.L_4295b8:

            call _Znam@PLT

            mov RDI,RBX
            mov R13,RAX
            call _Znam@PLT

            mov RDX,RBX
            mov ESI,255
            mov RDI,RAX
            mov QWORD PTR [RSP],RAX
            call memset@PLT

            mov EDI,DWORD PTR [RSP+8]
            imul EDI,R14D
            movsxd RDI,EDI
            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+24],RAX
            mov DWORD PTR [RSP+68],EBP
            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+72],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+80],RAX
            call .L_43e090
.L_429614:

            test EAX,EAX
            setne BYTE PTR [RSP+88]
            je .L_429657

            test EBP,EBP
            jle .L_429657

            lea EAX,DWORD PTR [RBP-1]
            mov RSI,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429640:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_429640
.L_429657:

            mov RDI,RBX
            mov DWORD PTR [RSP+64],0
            mov DWORD PTR [RSP+100],EBP
.L_429666:

            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+104],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+112],RAX
            call .L_43e090
.L_429682:

            test EAX,EAX
            setne BYTE PTR [RSP+120]
            je .L_4296c7

            test EBP,EBP
            jle .L_4296c7

            lea EAX,DWORD PTR [RBP-1]
            mov RSI,QWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+104]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4296b0:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RAX,RDX
            jne .L_4296b0
.L_4296c7:

            movsxd RSI,DWORD PTR [R15+4]
            mov DWORD PTR [RSP+96],0
            test ESI,ESI
            jne .L_429b08
.L_4296db:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RAX+RSI*4],0
            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+32],RAX
            movsxd RAX,DWORD PTR [RSP+64]
            shl RAX,2
            test RAX,RAX
            je .L_429bbe

            lea RAX,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+40],1
            mov BYTE PTR [RSP+47],R12B
            mov QWORD PTR [RSP+16],RAX
.L_429719:

            mov RAX,QWORD PTR [RSP+32]
            mov EBP,DWORD PTR [RSP+8]
            movsxd RCX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP]
            imul EBP,DWORD PTR [RAX+RCX*4]
            mov EAX,DWORD PTR [R15+20]
            mov RSI,RCX
            movsxd RBP,EBP
            add RBP,QWORD PTR [RSP+24]
            test EAX,EAX
            jle .L_42975c

            mov EAX,1
            nop
            nop
            nop
.L_429748:

            mov DWORD PTR [RBP+RAX*4],48
            mov EDX,EAX
            add RAX,1
            cmp DWORD PTR [R15+20],EDX
            jg .L_429748
.L_42975c:

            mov DWORD PTR [RBP],48
            lea RBX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [R15+32]
            mov DWORD PTR [RSP+96],0
            mov DWORD PTR [R13],ESI
            xor R10D,R10D
            mov DWORD PTR [R13+4],0
            mov BYTE PTR [RSP+46],0
            mov R14D,1
            xor R11D,R11D
            mov QWORD PTR [RSP+48],RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4297a0:

            lea RBX,QWORD PTR [RAX+RCX*8]
            movsxd RDX,R11D
            shl RDX,3
            mov ESI,DWORD PTR [RBX]
            lea R12,QWORD PTR [R13+RDX*1]
            mov ECX,ESI
            and ECX,7
            cmp ECX,6
            ja .L_429864

            lea RDI,QWORD PTR [RIP+.L_429ca0]
            movsxd RCX,DWORD PTR [RDI+RCX*4]
            add RCX,RDI
            jmp RCX
.L_4297d0:

            cmp QWORD PTR [RDI+432],0
            setne R12B
.L_4297dc:

            mov RBX,QWORD PTR [RSP+136]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_429bc4

            add RSP,152
.L_4297fd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429810:

            mov ECX,DWORD PTR [RBX+4]
            cmp ECX,9
            jg .L_429822

            mov EDX,32
            shl EDX,CL
            or R10D,EDX
.L_429822:

            shr ESI,3
            xor EDX,EDX
            test ESI,ESI
            jne .L_42988d
.L_42982b:

            mov DWORD PTR [R12],EDX
            mov DWORD PTR [R12+4],R10D
.L_429834:

            movsxd RDX,R11D
            lea RDX,QWORD PTR [R13+RDX*8]
            mov R10D,DWORD PTR [RDX+4]
            movsxd RCX,DWORD PTR [RDX]
            jmp .L_4297a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429850:

            cmp BYTE PTR [RSP+46],0
            jne .L_429a28

            mov DWORD PTR [RBP],R10D
            mov BYTE PTR [RSP+46],1
.L_429864:

            test R11D,R11D
            je .L_429b20

            mov R14D,R11D
            mov RAX,QWORD PTR [R15+32]
            sub R11D,1
            jmp .L_429834
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429880:

            shr ESI,3
            or R10D,DWORD PTR [RBX+4]
            xor EDX,EDX
            test ESI,ESI
            je .L_42982b
.L_42988d:

            mov RDI,QWORD PTR [RSP+16]
            call .L_428990

            test AL,AL
            je .L_429a28

            mov EDX,DWORD PTR [RBX]
            mov RAX,QWORD PTR [R15+32]
            shr EDX,3
            jmp .L_42982b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4298b0:

            mov RAX,QWORD PTR [RSP]
            shr ESI,3
            lea RAX,QWORD PTR [RAX+RSI*4]
            mov R14D,DWORD PTR [RAX]
            cmp R14D,-1
            je .L_429a90
.L_4298c8:

            mov EAX,R10D
            movzx EDI,BYTE PTR [RBX+4]
            movzx R8D,BYTE PTR [RBX+5]
            or EAX,64
            cmp BYTE PTR [RSP+46],0
            cmovne R10D,EAX
            cmp R8D,EDI
            jl .L_429980

            mov R9D,R14D
            mov EAX,EDI
            mov R12,QWORD PTR [R15+416]
            shl R9D,16
            or R9D,R10D
            jmp .L_429911

            nop
            nop
.L_429900:

            cmp EDX,R9D
            jne .L_429a28
.L_429909:

            add EAX,1
            cmp R8D,EAX
            jl .L_429980
.L_429911:

            cdqe 
            movzx EDX,BYTE PTR [R15+RAX*1+160]
            lea RCX,QWORD PTR [RBP+RDX*4]
            movzx EAX,BYTE PTR [R12+RDX*1]
            mov EDX,DWORD PTR [RCX+4]
            mov ESI,EDX
            and ESI,48
            cmp ESI,48
            jne .L_429900

            mov DWORD PTR [RCX+4],R9D
            jmp .L_429909
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429940:

            shr ESI,3
            test ESI,ESI
            jne .L_429a08
.L_42994b:

            mov ESI,DWORD PTR [RBX+4]
            test ESI,ESI
            jne .L_429ac0
.L_429956:

            mov DWORD PTR [R12],ESI
            mov DWORD PTR [R12+4],R10D
            lea RDX,QWORD PTR [R13+RDX*1+8]
            mov EAX,DWORD PTR [RBX]
            add R14D,1
            mov DWORD PTR [RDX+4],R10D
            lea R11D,DWORD PTR [R14-1]
            shr EAX,3
            mov DWORD PTR [RDX],EAX
            mov RAX,QWORD PTR [R15+32]
            jmp .L_429834
.L_429980:

            cmp BYTE PTR [RBX+6],0
            je .L_429864

            cmp EDI,97
            mov EAX,97
            cmovl EDI,EAX
            mov EAX,122
            sub EDI,32
            cmp R8D,122
            cmovg R8D,EAX
            sub R8D,32
            cmp EDI,R8D
            jg .L_429864

            shl R14D,16
            mov R12,QWORD PTR [R15+416]
            or R10D,R14D
            jmp .L_4299d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4299c8:

            cmp EAX,R10D
            jne .L_429a28
.L_4299cd:

            add EDI,1
            cmp R8D,EDI
            jl .L_429864
.L_4299d9:

            movsxd RDI,EDI
            movzx EAX,BYTE PTR [R15+RDI*1+160]
            lea RDX,QWORD PTR [RBP+RAX*4]
            movzx EDI,BYTE PTR [R12+RAX*1]
            mov EAX,DWORD PTR [RDX+4]
            mov ECX,EAX
            and ECX,48
            cmp ECX,48
            jne .L_4299c8

            mov DWORD PTR [RDX+4],R10D
            jmp .L_4299cd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429a08:

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RDX
            call .L_428990

            test AL,AL
            mov RDX,QWORD PTR [RSP+56]
            jne .L_42994b

            nop
            nop
            nop
            nop
.L_429a28:

            mov RDI,R13
            movzx R12D,BYTE PTR [RSP+47]
            call _ZdaPv@PLT

            mov RDI,QWORD PTR [RSP]
            call _ZdaPv@PLT

            mov RDI,QWORD PTR [RSP+24]
            call _ZdaPv@PLT
.L_429a49:

            mov RDI,QWORD PTR [RSP+104]
            test RDI,RDI
            je .L_429a58

            call _ZdaPv@PLT
.L_429a58:

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_429a67

            call _ZdaPv@PLT
.L_429a67:

            mov RDI,QWORD PTR [RSP+72]
            test RDI,RDI
            je .L_429a76

            call _ZdaPv@PLT
.L_429a76:

            mov RDI,QWORD PTR [RSP+80]
            test RDI,RDI
            je .L_4297dc

            call _ZdaPv@PLT

            jmp .L_4297dc
          .byte 0x66
          .byte 0x90
.L_429a90:

            mov ESI,DWORD PTR [RSP+40]
            cmp DWORD PTR [RSP+12],ESI
            jle .L_429a28

            mov DWORD PTR [RAX],ESI
            lea R12D,DWORD PTR [RSI+1]
            mov ESI,DWORD PTR [RBX]
            shr ESI,3
            test ESI,ESI
            jne .L_429ae8

            mov R14D,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+40],R12D
            jmp .L_4298c8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429ac0:

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RDX
            call .L_428990

            test AL,AL
            je .L_429a28

            mov ESI,DWORD PTR [RBX+4]
            mov RDX,QWORD PTR [RSP+56]
            jmp .L_429956
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429ae8:

            mov RDI,QWORD PTR [RSP+48]
            call .L_428990

            mov R14D,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+40],R12D
            jmp .L_4298c8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429b08:

            lea RDI,QWORD PTR [RSP+64]
            call .L_428990

            movsxd RSI,DWORD PTR [R15+4]
            jmp .L_4296db
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429b20:

            movsxd RDX,DWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            add QWORD PTR [RSP+32],4
            mov RBX,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [RAX+RDX*4]
            cmp RBX,RAX
            jne .L_429719

            mov EBX,DWORD PTR [RSP+40]
            imul EBX,DWORD PTR [RSP+8]
.L_429b4b:

            movsxd RBX,EBX
            mov RDI,RBX
.L_429b51:

            call _Znam@PLT
.L_429b56:

            mov R14,QWORD PTR [RSP+24]
            mov RDX,RBX
            mov RDI,RAX
            mov RBP,RAX
            mov R12D,1
            mov RSI,R14
            call memcpy@PLT

            mov RDI,R14
            call _ZdaPv@PLT

            movsxd RAX,DWORD PTR [R15+4]
            mov R14,QWORD PTR [RSP]
            mov RDI,R13
            mov ESI,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [R14+RAX*4]
            sub QWORD PTR [R15+112],RBX
            mov DWORD PTR [R15+28],ESI
            mov QWORD PTR [R15+424],RBP
            imul ECX,ESI
            movsxd RAX,ECX
            add RAX,RBP
            mov QWORD PTR [R15+432],RAX
            call _ZdaPv@PLT

            mov RDI,R14
            call _ZdaPv@PLT

            jmp .L_429a49
.L_429bbe:

            mov EBX,DWORD PTR [RSP+8]
            jmp .L_429b4b
.L_429bc4:

            call __stack_chk_fail@PLT
.L_429bc9:

            call __cxa_throw_bad_array_new_length@PLT
.L_429bce:

            mov RBX,RAX
.L_429bd1:

            lea RDI,QWORD PTR [RSP+64]
            call .L_429c60

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_429be3:

            lea RDI,QWORD PTR [RSP+96]
            mov RBX,RAX
            call .L_429c60

            jmp .L_429bd1
.L_429bf2:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429bf8:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_429c28:
          .string "Cannot use SearchOnePass for unanchored matches."
.L_429c59:

            or AL,BYTE PTR [RAX]
            nop
            nop
            nop
            nop
            nop
.L_429c60:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_429c72

            call _ZdaPv@PLT
.L_429c72:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_429c88

            pop RBX
            jmp _ZdaPv@PLT

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c88:

            pop RBX
            ret 
.L_429c8a:
          .string "re2/onepass.cc"
# WARNING: found overlapping blocks at address 29a5c
# WARNING: found overlapping blocks at address 29a63
.L_429c99:
          .string ":"
.L_429c9b:
          .string ": "
          .byte 0x66
          .byte 0x90
.L_429ca0:
          .long .L_429940-.L_429ca0
          .long .L_429940-.L_429ca0
          .long .L_4298b0-.L_429ca0
          .long .L_429810-.L_429ca0
          .long .L_429880-.L_429ca0
          .long .L_429850-.L_429ca0
          .long .L_429822-.L_429ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429cc0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,32
.L_429ccc:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test EDX,EDX
            jle .L_429d58

            lea EAX,DWORD PTR [RDX-1]
            mov R12,RDI
            mov RBX,RSI
            mov R13,RSP
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,4
.L_429cf4:

            lea R14,QWORD PTR [RSI+RAX*1+48]
            jmp .L_429d09
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429d00:

            add RBX,48
            cmp RBX,R14
            je .L_429d58
.L_429d09:

            mov RDI,QWORD PTR [RBX]
            xor EAX,EAX
            mov RBP,RBX
            test RDI,RDI
            mov QWORD PTR [RSP],RDI
            je .L_429d1f

            call strlen@PLT
.L_429d1f:

            mov RSI,R12
            mov RDI,R13
            mov DWORD PTR [RSP+8],EAX
            call .L_414b80

            test AL,AL
            je .L_429d00
.L_429d32:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_429d5c

            add RSP,32
.L_429d49:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429d58:

            xor EBP,EBP
            jmp .L_429d32
.L_429d5c:

            call __stack_chk_fail@PLT
.L_429d61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429d70:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,RSI
            mov ESI,DWORD PTR [RSI+8]
            mov RDI,QWORD PTR [RBX]
            mov R12,RDX
            call .L_4149f0

            test EAX,EAX
            je .L_429dc0

            mov RSI,QWORD PTR [RBX]
            mov RDI,RBP
            call .L_4147f0

            cmp EAX,1
            je .L_429db0
.L_429d9c:

            movsxd RDX,EAX
            sub DWORD PTR [RBX+8],EAX
            add QWORD PTR [RBX],RDX
.L_429da5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429db0:

            cmp DWORD PTR [RBP],65533
            jne .L_429d9c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429dc0:

            mov DWORD PTR [R12],12
            mov QWORD PTR [R12+8],0
            mov EAX,4294967295
            mov DWORD PTR [R12+16],0
            jmp .L_429da5
.L_429de1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429df0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            sub RSP,48
.L_429dfb:

            movdqu XMM0,XMMWORD PTR [RDI]
            lea RBP,QWORD PTR [RSP+16]
            lea RBX,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            jmp .L_429e32
.L_429e20:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_429d70

            test EAX,EAX
            js .L_429e60
.L_429e32:

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            jg .L_429e20

            mov EAX,1
.L_429e3f:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_429e64

            add RSP,48
.L_429e53:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429e60:

            xor EAX,EAX
            jmp .L_429e3f
.L_429e64:

            call __stack_chk_fail@PLT
.L_429e69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429e70:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov EDX,ESI
            mov EBX,ESI
            mov RBP,RDI
            call .L_40eba0

            lea EAX,DWORD PTR [RBX-97]
            cmp EAX,25
            ja .L_429e90

            test R12B,R12B
            jne .L_429e98
.L_429e90:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429e98:

            lea ESI,DWORD PTR [RBX-32]
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            mov EDX,ESI
            jmp .L_40eba0
.L_429ea9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429eb0:

            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            je .L_429f30

            mov RDX,QWORD PTR [RDI]
            movzx R8D,BYTE PTR [RDX]
            lea R9D,DWORD PTR [R8-48]
            cmp R9D,9
            ja .L_429f30

            cmp EAX,1
            jle .L_429ee0

            cmp R8B,48
            jne .L_429ee0

            movzx ECX,BYTE PTR [RDX+1]
            sub ECX,48
            cmp ECX,9
            jbe .L_429f30

            nop
.L_429ee0:

            test EAX,EAX
            jle .L_429f38

            lea ECX,DWORD PTR [R8-48]
            cmp ECX,9
            ja .L_429f38

            add RDX,1
            xor ECX,ECX
            jmp .L_429f12
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429ef8:

            movzx R8D,BYTE PTR [RDX]
            lea R9D,DWORD PTR [R8-48]
            cmp R9D,9
            ja .L_429f27

            add RDX,1
            cmp ECX,99999999
            jg .L_429f30
.L_429f12:

            sub EAX,1
            lea ECX,DWORD PTR [RCX+RCX*4]
            mov QWORD PTR [RDI],RDX
            test EAX,EAX
            mov DWORD PTR [RDI+8],EAX
            lea ECX,DWORD PTR [R8+RCX*2-48]
            jne .L_429ef8
.L_429f27:

            mov DWORD PTR [RSI],ECX
            mov EAX,1
            ret 
          .byte 0x90
.L_429f30:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429f38:

            xor ECX,ECX
            jmp .L_429f27
.L_429f3c:

            nop
            nop
            nop
            nop
.L_429f40:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_429f4e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_429f6c

            test RDX,RDX
            jne .L_429ff7
.L_429f6c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_429fc0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_429ff0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_429f94:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42a003

            add RSP,16
.L_429fb4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429fc0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_429fd9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_429f94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429ff0:

            test RBX,RBX
            je .L_429f94

            jmp .L_429fd9
.L_429ff7:

            lea RDI,QWORD PTR [RIP+.L_42f7f0]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_42a003:

            call __stack_chk_fail@PLT
.L_42a008:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a010:

            mov DWORD PTR [RDI],ESI
            and ESI,32
            cmp ESI,1
            movdqu XMM0,XMMWORD PTR [RDX]
            sbb EAX,EAX
            mov QWORD PTR [RDI+24],RCX
            mov QWORD PTR [RDI+32],0
            and EAX,1113856
            mov DWORD PTR [RDI+40],0
            add EAX,255
            movups XMMWORD PTR [RDI+8],XMM0
            mov DWORD PTR [RDI+44],EAX
            ret 
.L_42a043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a050:

            push R12
            push RBP
            push RBX
.L_42a054:

            mov RBX,QWORD PTR [RDI+32]
            test RBX,RBX
            jne .L_42a070

            jmp .L_42a0ba
          .byte 0x90
.L_42a060:

            mov RDI,RBX
            mov RBX,RBP
            call .L_40f430

            test RBP,RBP
            je .L_42a0ba
.L_42a070:

            cmp BYTE PTR [RBX],22
            mov RBP,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+16],0
            jne .L_42a060

            mov R12,QWORD PTR [RBX+32]
            test R12,R12
            je .L_42a060

            mov RDI,QWORD PTR [R12]
            lea RAX,QWORD PTR [R12+16]
            cmp RDI,RAX
            je .L_42a09d

            call _ZdlPv@PLT
.L_42a09d:

            mov ESI,32
            mov RDI,R12
            call _ZdlPvm@PLT

            mov RDI,RBX
            mov RBX,RBP
            call .L_40f430

            test RBP,RBP
            jne .L_42a070
.L_42a0ba:

            pop RBX
.L_42a0bb:

            pop RBP
            pop R12
            ret 
.L_42a0bf:

            nop
.L_42a0c0:

            mov R11D,ESI
            mov RAX,RDI
            test R11D,R11D
            jle .L_42a10e
.L_42a0cb:

            mov R8D,R11D
            sar R8D,1
            movsxd RCX,R8D
            lea R9,QWORD PTR [RCX+RCX*2]
            lea R9,QWORD PTR [RAX+R9*4]
            cmp EDX,DWORD PTR [R9]
            jl .L_42a130

            mov R10D,R8D
            mov R8D,R11D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a0f0:

            cmp DWORD PTR [R9+4],EDX
            jge .L_42a158

            add R10D,1
            mov R11D,R8D
            lea RCX,QWORD PTR [RCX+RCX*2+3]
            sub R11D,R10D
            test R11D,R11D
            lea RAX,QWORD PTR [RAX+RCX*4]
            jg .L_42a0cb
.L_42a10e:

            movsxd RSI,ESI
            lea RDX,QWORD PTR [RSI+RSI*2]
            lea RDX,QWORD PTR [RDI+RDX*4]
            cmp RAX,RDX
            mov EDX,0
            cmovae RAX,RDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a130:

            test R8D,R8D
            je .L_42a10e
.L_42a135:

            mov R10D,R8D
            sar R10D,1
            movsxd RCX,R10D
            lea R9,QWORD PTR [RCX+RCX*2]
            lea R9,QWORD PTR [RAX+R9*4]
            cmp DWORD PTR [R9],EDX
            jle .L_42a0f0

            mov R8D,R10D
            test R8D,R8D
            jne .L_42a135

            jmp .L_42a10e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a158:

            mov RAX,R9
            ret 
.L_42a15c:

            nop
            nop
            nop
            nop
.L_42a160:

            mov EAX,DWORD PTR [RDI+8]
            cmp EAX,1
            je .L_42a1ab

            jle .L_42a1c0

            cmp EAX,1073741824
            je .L_42a1a0

            cmp EAX,1073741825
            jne .L_42a1c5

            mov EDX,ESI
            sub EDX,DWORD PTR [RDI]
            mov EAX,ESI
            and EDX,1
            jne .L_42a1b8
.L_42a183:

            mov EDX,ESI
            shr EDX,31
            lea EAX,DWORD PTR [RSI+RDX*1]
            and EAX,1
            sub EAX,EDX
            cmp EAX,1
            je .L_42a1b1
.L_42a195:

            lea EAX,DWORD PTR [RSI-1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a1a0:

            mov EDX,ESI
            sub EDX,DWORD PTR [RDI]
            mov EAX,ESI
            and EDX,1
            jne .L_42a1b8
.L_42a1ab:

            test SIL,1
            jne .L_42a195
.L_42a1b1:

            lea EAX,DWORD PTR [RSI+1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a1b8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a1c0:

            cmp EAX,-1
            je .L_42a183
.L_42a1c5:

            add EAX,ESI
            ret 
.L_42a1c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a1d0:

            mov ESI,DWORD PTR [RIP+.L_4375b4]
            push RBX
            mov EDX,EDI
            mov EBX,EDI
            lea RDI,QWORD PTR [RIP+.L_4375c0]
            call .L_42a0c0

            test RAX,RAX
            je .L_42a200

            cmp DWORD PTR [RAX],EBX
            jg .L_42a200

            mov ESI,EBX
            mov RDI,RAX
            pop RBX
            jmp .L_42a160
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a200:

            mov EAX,EBX
            pop RBX
            ret 
.L_42a204:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a210:

            cmp ESI,21
            setg AL
            ret 
.L_42a217:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a220:

            movzx EDX,BYTE PTR [RDI]
            mov RAX,RDI
            cmp EDX,2
            je .L_42a258

            cmp EDX,5
            je .L_42a238
.L_42a230:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a238:

            cmp WORD PTR [RDI+6],1
            jbe .L_42a230

            mov RAX,QWORD PTR [RDI+8]
            mov EDX,0
            mov RAX,QWORD PTR [RAX]
            cmp BYTE PTR [RAX],2
            cmove RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a258:

            xor EAX,EAX
            ret 
.L_42a25b:

            nop
            nop
            nop
            nop
            nop
.L_42a260:

            push R12
            push RBP
            push RBX
.L_42a264:

            movzx EAX,BYTE PTR [RDI]
            cmp EAX,2
            je .L_42a308

            cmp EAX,5
            mov RBX,RDI
            jne .L_42a2d0

            cmp WORD PTR [RDI+6],1
            jbe .L_42a2d0

            mov R12,QWORD PTR [RDI+8]
            mov RBP,RBX
            mov RDI,QWORD PTR [R12]
            cmp BYTE PTR [RDI],2
            je .L_42a2fa
.L_42a28f:

            call .L_40f430

            movzx EAX,WORD PTR [RBX+6]
            mov QWORD PTR [R12],0
            cmp AX,2
            je .L_42a318

            sub EAX,1
            lea RSI,QWORD PTR [R12+8]
            mov RDI,R12
            mov WORD PTR [RBX+6],AX
            movzx EAX,AX
            lea RDX,QWORD PTR [RAX*8]
            call memmove@PLT

            jmp .L_42a2fa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a2d0:

            movzx R12D,WORD PTR [RBX+2]
            mov RDI,RBX
            call .L_40f430

            mov EDI,40
            call _Znwm@PLT
.L_42a2e7:

            mov EDX,R12D
            mov ESI,2
            mov RDI,RAX
            mov RBP,RAX
.L_42a2f5:

            call .L_40c9d0
.L_42a2fa:

            mov RAX,RBP
            pop RBX
.L_42a2fe:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a308:

            mov RBP,RDI
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a318:

            mov RBP,QWORD PTR [R12+8]
            mov RDI,RBX
            mov QWORD PTR [R12+8],0
.L_42a329:

            call .L_40f430

            jmp .L_42a2fa
.L_42a330:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a348:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a350:

            cmp BYTE PTR [RDI],5
            jne .L_42a370
.L_42a355:

            movzx EAX,WORD PTR [RDI+6]
            test AX,AX
            je .L_42a370

            cmp AX,1
            mov RDI,QWORD PTR [RDI+8]
            jbe .L_42a350

            mov RDI,QWORD PTR [RDI]
            cmp BYTE PTR [RDI],5
            je .L_42a355
.L_42a370:

            movzx EAX,WORD PTR [RDI+2]
            and EAX,1
            mov DWORD PTR [RDX],EAX
            movzx EAX,BYTE PTR [RDI]
            cmp EAX,3
            je .L_42a390

            cmp EAX,4
            jne .L_42a3a0

            mov EAX,DWORD PTR [RDI+24]
            mov DWORD PTR [RSI],EAX
            mov RAX,QWORD PTR [RDI+32]
            ret 
.L_42a390:

            mov DWORD PTR [RSI],1
            lea RAX,QWORD PTR [RDI+24]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a3a0:

            mov DWORD PTR [RSI],0
            xor EAX,EAX
            ret 
.L_42a3a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a3b0:

            push R15
            push R14
            xor EAX,EAX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
            mov RBX,QWORD PTR [RDI+32]
            test RBX,RBX
            je .L_42a3df

            mov R12,QWORD PTR [RBX+16]
            test R12,R12
            je .L_42a3df

            movzx ECX,BYTE PTR [RBX]
            lea R8D,DWORD PTR [RCX-3]
            cmp R8B,1
            jbe .L_42a3f0
.L_42a3df:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42a3f0:

            movzx R8D,BYTE PTR [R12]
            lea R9D,DWORD PTR [R8-3]
            cmp R9B,1
            ja .L_42a3df

            movzx R9D,WORD PTR [RBX+2]
            xor R9W,WORD PTR [R12+2]
            and R9D,1
            jne .L_42a3df

            cmp R8B,3
            mov R14D,EDX
            mov R13D,ESI
            mov RBP,RDI
            je .L_42a4ad
.L_42a423:

            cmp CL,3
            mov ESI,DWORD PTR [RBX+24]
            je .L_42a4a3

            test ESI,ESI
            jle .L_42a455

            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a438:

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+R15*4]
            call .L_40ca00

            lea EAX,DWORD PTR [R15+1]
            add R15,1
            cmp DWORD PTR [RBX+24],EAX
            jg .L_42a438
.L_42a455:

            mov RDI,QWORD PTR [RBX+32]
            mov DWORD PTR [RBX+24],0
            test RDI,RDI
            je .L_42a46a

            call _ZdaPv@PLT
.L_42a46a:

            mov QWORD PTR [RBX+32],0
.L_42a472:

            test R13D,R13D
            js .L_42a490

            mov BYTE PTR [RBX],3
            mov DWORD PTR [RBX+24],R13D
            mov EAX,1
            mov WORD PTR [RBX+2],R14W
            jmp .L_42a3df
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a490:

            mov QWORD PTR [RBP+32],R12
            mov RDI,RBX
            call .L_40f430

            xor EAX,EAX
            jmp .L_42a3df
.L_42a4a3:

            mov RDI,R12
            call .L_40ca00

            jmp .L_42a472
.L_42a4ad:

            mov ESI,DWORD PTR [R12+24]
            mov BYTE PTR [R12],4
            mov RDI,R12
            mov DWORD PTR [R12+24],0
            mov QWORD PTR [R12+32],0
            call .L_40ca00

            movzx ECX,BYTE PTR [RBX]
            jmp .L_42a423
.L_42a4d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a4e0:

            push R13
            push R12
            xor EDX,EDX
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,4294967295
            mov RBP,RDI
            sub RSP,8
.L_42a4f7:

            call .L_42a3b0

            movzx EAX,BYTE PTR [RBX]
            cmp AL,20
            je .L_42a528
.L_42a503:

            cmp AL,21
            jbe .L_42a550
.L_42a507:

            mov RAX,QWORD PTR [RBP+32]
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBP+32],RBX
            add RSP,8
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a528:

            mov RDI,QWORD PTR [RBX+32]
            mov EAX,DWORD PTR [RDI+8]
            cmp EAX,1
            je .L_42a560

            cmp EAX,2
            jne .L_42a550

            mov RAX,QWORD PTR [RDI+40]
            mov EAX,DWORD PTR [RAX+32]
            lea EDX,DWORD PTR [RAX-65]
            cmp EDX,25
            jbe .L_42a5a0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a550:

            mov RDI,RBX
            call .L_431f50

            mov BYTE PTR [RBX+1],AL
            jmp .L_42a507
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a560:

            mov RAX,QWORD PTR [RDI+40]
            mov RDI,RBX
            mov R12D,DWORD PTR [RAX+32]
            call .L_40f430

            mov EDI,40
            call _Znwm@PLT
.L_42a57a:

            mov EDX,DWORD PTR [RBP]
            mov ESI,3
            mov RDI,RAX
            mov RBX,RAX
.L_42a588:

            call .L_40c9d0
.L_42a58d:

            mov DWORD PTR [RBX+24],R12D
.L_42a591:

            movzx EAX,BYTE PTR [RBX]
            jmp .L_42a503
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a5a0:

            lea R12D,DWORD PTR [RAX+32]
            mov ESI,R12D
.L_42a5a7:

            call .L_40d270

            test AL,AL
            je .L_42a591

            mov RDI,RBX
            call .L_40f430

            mov R13D,DWORD PTR [RBP]
            mov EDI,40
            call _Znwm@PLT
.L_42a5c6:

            mov ESI,3
            mov RDI,RAX
            mov RBX,RAX
            or R13D,1
            mov EDX,R13D
.L_42a5d8:

            call .L_40c9d0
.L_42a5dd:

            jmp .L_42a58d
.L_42a5df:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_42a5f2:

            call _Unwind_Resume@PLT
.L_42a5f7:

            jmp .L_42a5df
.L_42a5f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a600:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov EDI,40
            mov R12D,ESI
.L_42a60f:

            call _Znwm@PLT
.L_42a614:

            mov EDX,DWORD PTR [RBP]
            mov ESI,R12D
            mov RDI,RAX
            mov RBX,RAX
.L_42a620:

            call .L_40c9d0
.L_42a625:

            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
.L_42a62f:

            jmp .L_42a4e0
.L_42a634:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42a64c:

            nop
            nop
            nop
            nop
.L_42a650:

            test BYTE PTR [RDI],16
            jne .L_42a660

            mov ESI,14
            jmp .L_42a600
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a660:

            mov ESI,18
            jmp .L_42a600
.L_42a667:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a670:

            test SIL,SIL
            jne .L_42a680

            mov ESI,17
            jmp .L_42a600
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a680:

            mov ESI,16
            jmp .L_42a600
.L_42a68a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42a690:

            push RBP
            push RBX
            sub RSP,8
            mov EBP,DWORD PTR [RDI]
            test BPL,16
            jne .L_42a6b0

            add RSP,8
            mov ESI,15
            pop RBX
            pop RBP
            jmp .L_42a600
          .byte 0x66
          .byte 0x90
.L_42a6b0:

            mov EAX,EBP
            mov RBX,RDI
            mov ESI,19
            or AH,128
            mov DWORD PTR [RDI],EAX
            call .L_42a600

            mov DWORD PTR [RBX],EBP
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_42a6cd:

            nop
            nop
            nop
.L_42a6d0:

            push R12
            push RBP
            push RBX
.L_42a6d4:

            mov EBP,DWORD PTR [RDI]
            test BPL,8
            je .L_42a6e4

            test EBP,2048
            je .L_42a750
.L_42a6e4:

            mov RBX,RDI
            mov EDI,40
.L_42a6ec:

            call _Znwm@PLT
.L_42a6f1:

            mov EDX,EBP
            mov ESI,20
            mov RDI,RAX
            and EDX,4294967294
            mov R12,RAX
.L_42a701:

            call .L_40c9d0
.L_42a706:

            mov EDI,64
.L_42a70b:

            call _Znwm@PLT
.L_42a710:

            mov RDI,RAX
            mov RBP,RAX
.L_42a716:

            call .L_40d230
.L_42a71b:

            mov RDI,RBP
            mov EDX,9
            xor ESI,ESI
            mov QWORD PTR [R12+32],RBP
.L_42a72a:

            call .L_40eba0

            mov RDI,QWORD PTR [R12+32]
            mov EDX,DWORD PTR [RBX+44]
            mov ESI,11
            call .L_40eba0

            mov RSI,R12
            mov RDI,RBX
            pop RBX
.L_42a748:

            pop RBP
            pop R12
            jmp .L_42a4e0
.L_42a750:

            pop RBX
            pop RBP
            pop R12
            mov ESI,12
            jmp .L_42a600
.L_42a75e:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a776:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a78e:

            nop
            nop
.L_42a790:

            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,40
            sub RSP,8
.L_42a79e:

            call _Znwm@PLT
.L_42a7a3:

            mov EDX,DWORD PTR [RBP]
            mov ESI,22
            mov RDI,RAX
            mov RBX,RAX
.L_42a7b1:

            call .L_40c9d0
.L_42a7b6:

            mov DWORD PTR [RBX+24],4294967295
            add RSP,8
            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
.L_42a7c9:

            jmp .L_42a4e0
.L_42a7ce:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42a7e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a7f0:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,40
            sub RSP,8
.L_42a805:

            call _Znwm@PLT
.L_42a80a:

            mov EDX,DWORD PTR [RBX]
            mov ESI,22
            mov RDI,RAX
            mov RBP,RAX
.L_42a817:

            call .L_40c9d0
.L_42a81c:

            mov EAX,DWORD PTR [RBX+40]
            add EAX,1
            cmp QWORD PTR [R13],0
            mov DWORD PTR [RBX+40],EAX
            mov DWORD PTR [RBP+24],EAX
            je .L_42a85b

            mov EDI,32
.L_42a834:

            call _Znwm@PLT
.L_42a839:

            movsxd RDX,DWORD PTR [R13+8]
            mov RSI,QWORD PTR [R13]
            mov R12,RAX
            lea RAX,QWORD PTR [RAX+16]
            mov RDI,R12
            mov QWORD PTR [R12],RAX
            add RDX,RSI
.L_42a852:

            call .L_429f40
.L_42a857:

            mov QWORD PTR [RBP+32],R12
.L_42a85b:

            add RSP,8
.L_42a85f:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
.L_42a86b:

            jmp .L_42a4e0
.L_42a870:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a888:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,32
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a8a0:

            push R14
            push R13
            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov EBX,DWORD PTR [RDI]
            mov RBP,RDI
            test BL,1
            jne .L_42a918
.L_42a8b5:

            test BH,8
            je .L_42a8c4

            cmp R12D,10
            je .L_42a9b0
.L_42a8c4:

            mov EDX,EBX
            mov ESI,R12D
            mov RDI,RBP
.L_42a8cc:

            call .L_42a3b0

            test AL,AL
            je .L_42a8e0

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_42a8e0:

            mov EDI,40
            call _Znwm@PLT
.L_42a8ea:

            mov EDX,DWORD PTR [RBP]
            mov ESI,3
            mov RDI,RAX
            mov RBX,RAX
.L_42a8f8:

            call .L_40c9d0
.L_42a8fd:

            mov DWORD PTR [RBX+24],R12D
.L_42a901:

            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
.L_42a90f:

            jmp .L_42a4e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a918:

            mov EDI,ESI
            call .L_42a1d0

            cmp EAX,R12D
            je .L_42a8b5

            mov EDI,40
            call _Znwm@PLT
.L_42a92e:

            mov EDX,EBX
            mov ESI,20
            mov RDI,RAX
            and EDX,4294967294
            mov R13,RAX
.L_42a93e:

            call .L_40c9d0
.L_42a943:

            mov EDI,64
.L_42a948:

            call _Znwm@PLT
.L_42a94d:

            mov RDI,RAX
            mov R14,RAX
.L_42a953:

            call .L_40d230
.L_42a958:

            mov QWORD PTR [R13+32],R14
            mov EBX,R12D
            nop
.L_42a960:

            test DWORD PTR [RBP],2048
            je .L_42a96e

            cmp EBX,10
            je .L_42a97e
.L_42a96e:

            mov RDI,R14
            mov EDX,EBX
            mov ESI,EBX
.L_42a975:

            call .L_40eba0

            mov R14,QWORD PTR [R13+32]
.L_42a97e:

            mov EDI,EBX
            call .L_42a1d0

            cmp R12D,EAX
            mov EBX,EAX
            jne .L_42a960

            mov ESI,DWORD PTR [RBP+44]
            mov RDI,R14
            call .L_40efa0

            pop RBX
.L_42a998:

            mov RSI,R13
            mov RDI,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_42a4e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a9b0:

            mov EDI,40
            call _Znwm@PLT
.L_42a9ba:

            mov EDX,DWORD PTR [RBP]
            mov ESI,1
            mov RDI,RAX
            mov RBX,RAX
.L_42a9c8:

            call .L_40c9d0
.L_42a9cd:

            jmp .L_42a901
.L_42a9d2:

            mov RBX,RAX
            mov RDI,R13
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
.L_42a9e5:

            call _Unwind_Resume@PLT
.L_42a9ea:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42aa02:

            jmp .L_42a9ea
.L_42aa04:

            mov RBX,RAX
            mov RDI,R14
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42aa1c:

            nop
            nop
            nop
            nop
.L_42aa20:

            push RBX
            sub RSP,32
.L_42aa25:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            and ESI,128
            je .L_42aa98

            cmp DWORD PTR [RDI+8],1
            mov RBX,RDI
            jle .L_42aa98

            mov RDX,QWORD PTR [RDI]
            cmp BYTE PTR [RDX],92
            jne .L_42aa7f

            mov QWORD PTR [RSP],RDX
            mov EDX,DWORD PTR [RIP+.L_42fbdc]
            lea RSI,QWORD PTR [RIP+.L_6475c0]
            mov RDI,RSP
            mov DWORD PTR [RSP+8],2
            call .L_429cc0

            test RAX,RAX
            je .L_42aa7f

            movsxd RCX,DWORD PTR [RSP+8]
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
.L_42aa7f:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42aa9c

            add RSP,32
.L_42aa93:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42aa98:

            xor EAX,EAX
            jmp .L_42aa7f
.L_42aa9c:

            call __stack_chk_fail@PLT
.L_42aaa1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aab0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42aabe:

            mov QWORD PTR [RSI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            mov BYTE PTR [RAX],0
            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jle .L_42ab3e

            lea R13,QWORD PTR [RSP+4]
            mov R12,RDI
            mov RBP,RSI
            xor EBX,EBX
            mov R15,RSP
            movabs R14,9223372036854775807
            nop
            nop
            nop
.L_42ab00:

            mov RAX,QWORD PTR [R12]
            mov RSI,R15
            mov RDI,R13
            movzx EAX,BYTE PTR [RAX+RBX*1]
            mov DWORD PTR [RSP],EAX
            call .L_4148e0

            movsxd RDX,EAX
            mov RAX,R14
            sub RAX,QWORD PTR [RBP+8]
            cmp RDX,RAX
            ja .L_42ab5d

            mov RSI,R13
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [R12+8],EAX
            jg .L_42ab00
.L_42ab3e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ab69

            add RSP,24
.L_42ab52:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42ab5d:

            lea RDI,QWORD PTR [RIP+.L_42f86c]
            call _ZSt20__throw_length_errorPKc@PLT
.L_42ab69:

            call __stack_chk_fail@PLT
.L_42ab6e:

            nop
            nop
.L_42ab70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_42ab81:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            lea EAX,DWORD PTR [RDI-48]
            cmp EAX,9
            jbe .L_42abb8

            lea EAX,DWORD PTR [RDI-65]
            mov EBX,EDI
            cmp EAX,5
            jbe .L_42abe8

            lea EAX,DWORD PTR [RDI-97]
            cmp EAX,5
            ja .L_42abf0

            lea EAX,DWORD PTR [RDI-87]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42abb8:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42b0d9

            add RSP,520
.L_42abd6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42abe8:

            lea EAX,DWORD PTR [RDI-55]
            jmp .L_42abb8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42abf0:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42ac80:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ac85:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_42ad3f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ad44:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_42f881]
            mov EDX,12
.L_42ad54:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_42f88e]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,1229
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_42f890]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42ad90:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_42f893]
            mov EDX,14
.L_42ada0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,EBX
            call _ZNSolsEi@PLT
.L_42adb0:

            cmp BYTE PTR [RSP+112],0
            je .L_42ae30
.L_42adb7:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_42ade9

            call _ZdlPv@PLT
.L_42ade9:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_42abb8
          .byte 0x90
.L_42ae30:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_42f86a]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_42affd

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_42af60

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_42aea4:

            call .L_429f40
.L_42aea9:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42b00e

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+96]
            cmp RDI,RAX
            je .L_42b06c

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42b07b

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_42af03:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_42af27
.L_42af22:

            call _ZdlPv@PLT
.L_42af27:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_42af36:

            call write@PLT
.L_42af3b:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_42adb7

            call _ZdlPv@PLT

            jmp .L_42adb7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42af60:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_42af76:

            call .L_429f40

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42b03f

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+64]
            cmp RDI,RAX
            je .L_42b08e

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42b09d

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_42afd5:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_42af22

            jmp .L_42af27
.L_42affd:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42b009:

            jmp .L_42af27
.L_42b00e:

            test RDX,RDX
            je .L_42b02c

            cmp RDX,1
            je .L_42b0c3

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_42b02c:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42af03
.L_42b03f:

            test RDX,RDX
            je .L_42b059

            cmp RDX,1
            je .L_42b0b0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_42b059:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42afd5
.L_42b06c:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42b07b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42af03
.L_42b08e:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42b09d:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_42afd5
.L_42b0b0:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42b059
.L_42b0c3:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42b02c
.L_42b0d9:

            call __stack_chk_fail@PLT
.L_42b0de:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_42b0f1

            call _ZdlPv@PLT
.L_42b0f1:

            call _ZSt9terminatev@PLT
.L_42b0f6:

            jmp .L_42b0de
.L_42b0f8:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
.L_42b106:

            call _Unwind_Resume@PLT
.L_42b10b:

            mov RBX,RAX
.L_42b10e:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42b127:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42b13b:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RDX
            jmp .L_42b10e
.L_42b15f:

            nop
.L_42b160:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_42b171:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jle .L_42b194

            mov R15,QWORD PTR [RDI]
            mov RBP,RDI
            cmp BYTE PTR [R15],92
            je .L_42b1d8
.L_42b194:

            mov DWORD PTR [RBX],1
            mov QWORD PTR [RBX+8],0
            xor R12D,R12D
            mov DWORD PTR [RBX+16],0
.L_42b1ac:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_42b533

            add RSP,40
.L_42b1c7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b1d8:

            cmp EAX,1
            je .L_42b238

            lea RDX,QWORD PTR [R15+1]
            lea R12,QWORD PTR [RSP+16]
            sub EAX,1
            mov DWORD PTR [RDI+8],EAX
            mov R13,RSI
            mov RSI,RDI
            mov QWORD PTR [RDI],RDX
            mov RDX,RBX
            mov RDI,R12
            mov DWORD PTR [RSP+8],ECX
            call .L_429d70

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+8]
            js .L_42b274

            mov EDI,DWORD PTR [RSP+16]
            lea R14D,DWORD PTR [RDI-48]
            cmp R14D,72
            ja .L_42b345

            lea RSI,QWORD PTR [RIP+.L_42f8c8]
            mov EDX,R14D
            movsxd RAX,DWORD PTR [RSI+RDX*4]
            add RAX,RSI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b238:

            mov DWORD PTR [RDX],7
            mov QWORD PTR [RDX+8],0
            xor R12D,R12D
            mov DWORD PTR [RDX+16],0
            jmp .L_42b1ac
.L_42b255:

            mov ESI,DWORD PTR [RBP+8]
            test ESI,ESI
            jne .L_42b383
.L_42b260:

            mov RAX,QWORD PTR [RBP]
.L_42b264:

            sub RAX,R15
            mov DWORD PTR [RBX],2
            mov QWORD PTR [RBX+8],R15
            mov DWORD PTR [RBX+16],EAX
.L_42b274:

            xor R12D,R12D
            jmp .L_42b1ac
.L_42b27c:

            mov DWORD PTR [R13],11
            mov R12D,1
            jmp .L_42b1ac
.L_42b28f:

            mov DWORD PTR [R13],9
            mov R12D,1
            jmp .L_42b1ac
.L_42b2a2:

            mov DWORD PTR [R13],13
            mov R12D,1
            jmp .L_42b1ac
.L_42b2b5:

            mov DWORD PTR [R13],10
            mov R12D,1
            jmp .L_42b1ac
.L_42b2c8:

            mov DWORD PTR [R13],12
            mov R12D,1
            jmp .L_42b1ac
.L_42b2db:

            mov DWORD PTR [R13],7
            mov R12D,1
            jmp .L_42b1ac
.L_42b2ee:

            mov EDX,DWORD PTR [RBP+8]
            mov RAX,QWORD PTR [RBP]
            test EDX,EDX
            je .L_42b264

            movzx ESI,BYTE PTR [RAX]
            sub ESI,48
            cmp SIL,7
            ja .L_42b264
.L_42b30d:

            test EDX,EDX
            jle .L_42b328

            mov RSI,QWORD PTR [RBP]
            movsx EAX,BYTE PTR [RSI]
            lea EDI,DWORD PTR [RAX-48]
            mov DWORD PTR [RSP+16],EAX
            cmp EDI,7
            jbe .L_42b42b
.L_42b328:

            cmp R14D,ECX
            jg .L_42b260

            mov DWORD PTR [R13],R14D
            mov R12D,1
            jmp .L_42b1ac
.L_42b340:

            mov EDX,DWORD PTR [RBP+8]
            jmp .L_42b30d
.L_42b345:

            cmp EDI,127
            mov DWORD PTR [RSP+8],EDI
            jg .L_42b260

            call __ctype_b_loc@PLT

            movsxd RDX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RAX]
            test BYTE PTR [RCX+RDX*2+1],4
            jne .L_42b260

            cmp R14D,9
            jbe .L_42b260

            mov DWORD PTR [R13],EDX
            mov R12D,1
            jmp .L_42b1ac
.L_42b383:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            mov DWORD PTR [RSP+8],ECX
            call .L_429d70

            test EAX,EAX
            js .L_42b274

            cmp DWORD PTR [RSP+16],123
            je .L_42b472

            mov EAX,DWORD PTR [RBP+8]
            test EAX,EAX
            je .L_42b260

            lea RDI,QWORD PTR [RSP+20]
            mov RDX,RBX
            mov RSI,RBP
            call .L_429d70

            test EAX,EAX
            js .L_42b274

            mov EDI,DWORD PTR [RSP+16]
            mov EAX,EDI
            and EAX,4294967263
            sub EAX,65
            cmp EAX,5
            jbe .L_42b3e8

            lea EAX,DWORD PTR [RDI-48]
            cmp EAX,9
            ja .L_42b260
.L_42b3e8:

            mov EAX,DWORD PTR [RSP+20]
            mov EDX,EAX
            and EDX,4294967263
            sub EDX,65
            cmp EDX,5
            setbe R12B
            sub EAX,48
            cmp EAX,9
            setbe AL
            or R12B,AL
            je .L_42b260

            call .L_42ab70

            mov EDI,DWORD PTR [RSP+20]
            mov EBX,EAX
            shl EBX,4
            call .L_42ab70

            add EAX,EBX
            mov DWORD PTR [R13],EAX
            jmp .L_42b1ac
.L_42b42b:

            lea R14D,DWORD PTR [RAX+R14*8-48]
            lea RAX,QWORD PTR [RSI+1]
            mov QWORD PTR [RBP],RAX
            lea EAX,DWORD PTR [RDX-1]
            test EAX,EAX
            mov DWORD PTR [RBP+8],EAX
            je .L_42b328

            movsx EAX,BYTE PTR [RSI+1]
            lea EDI,DWORD PTR [RAX-48]
            mov DWORD PTR [RSP+16],EAX
            cmp EDI,7
            ja .L_42b328

            add RSI,2
            sub EDX,2
            lea R14D,DWORD PTR [RAX+R14*8-48]
            mov QWORD PTR [RBP],RSI
            mov DWORD PTR [RBP+8],EDX
            jmp .L_42b328
.L_42b472:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_429d70

            test EAX,EAX
            js .L_42b274

            mov ECX,DWORD PTR [RSP+8]
            xor R14D,R14D
            xor R8D,R8D
.L_42b492:

            mov EDI,DWORD PTR [RSP+16]
            mov EAX,EDI
            and EAX,4294967263
            sub EAX,65
            cmp EAX,5
            jbe .L_42b4d0

            lea EAX,DWORD PTR [RDI-48]
            cmp EAX,9
            jbe .L_42b4d0

            cmp EDI,125
            jne .L_42b260

            test R14D,R14D
            je .L_42b260

            mov DWORD PTR [R13],R8D
            mov R12D,1
            jmp .L_42b1ac
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b4d0:

            shl R8D,4
            mov DWORD PTR [RSP+12],ECX
            add R14D,1
            mov DWORD PTR [RSP+8],R8D
            call .L_42ab70

            mov R8D,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+12]
            add R8D,EAX
            cmp R8D,ECX
            jg .L_42b260

            mov EDX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+8],R8D
            test EDX,EDX
            je .L_42b260

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_429d70

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+12]
            jns .L_42b492

            jmp .L_42b274
.L_42b533:

            call __stack_chk_fail@PLT
.L_42b538:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b540:

            cmp DWORD PTR [RSI+8],0
            mov RAX,RSI
            je .L_42b578

            mov RSI,RDX
            jle .L_42b556

            mov RDX,QWORD PTR [RAX]
            cmp BYTE PTR [RDX],92
            je .L_42b590
.L_42b556:

            sub RSP,8
            mov RDI,RSI
            mov RDX,R8
            mov RSI,RAX
            call .L_429d70

            not EAX
            add RSP,8
            shr EAX,31
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b578:

            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [R8],5
            mov QWORD PTR [R8+8],RAX
            mov EAX,DWORD PTR [RCX+8]
            mov DWORD PTR [R8+16],EAX
            xor EAX,EAX
            ret 
.L_42b590:

            mov ECX,DWORD PTR [RDI+44]
            mov RDX,R8
            mov RDI,RAX
            jmp .L_42b160
.L_42b59e:

            nop
            nop
.L_42b5a0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov R12,RDI
            mov RBX,RSI
            mov RBP,R8
            sub RSP,8
            mov R14,QWORD PTR [RSI]
            call .L_42b540

            test AL,AL
            je .L_42b640

            mov EDX,DWORD PTR [RBX+8]
            cmp EDX,1
            jle .L_42b5d9

            mov RCX,QWORD PTR [RBX]
            cmp BYTE PTR [RCX],45
            je .L_42b5f0
.L_42b5d9:

            mov EDX,DWORD PTR [R15]
            mov DWORD PTR [R15+4],EDX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_42b5f0:

            cmp BYTE PTR [RCX+1],93
            je .L_42b5d9

            sub EDX,1
            add RCX,1
            mov R8,RBP
            mov DWORD PTR [RBX+8],EDX
            lea RDX,QWORD PTR [R15+4]
            mov QWORD PTR [RBX],RCX
            mov RSI,RBX
            mov RCX,R13
            mov RDI,R12
            call .L_42b540

            test AL,AL
            je .L_42b640

            mov ESI,DWORD PTR [R15]
            cmp DWORD PTR [R15+4],ESI
            jge .L_42b642

            mov RAX,QWORD PTR [RBX]
            mov DWORD PTR [RBP],4
            mov QWORD PTR [RBP+8],R14
            sub RAX,R14
            mov DWORD PTR [RBP+16],EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b640:

            xor EAX,EAX
.L_42b642:

            add RSP,8
.L_42b646:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42b651:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b660:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,552
.L_42b674:

            mov EBX,DWORD PTR [RDI]
            movdqu XMM0,XMMWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            test BH,2
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_42b6ae

            mov EAX,DWORD PTR [RSP+24]
            cmp EAX,1
            jle .L_42b6ae

            mov RDX,QWORD PTR [RSP+16]
            cmp BYTE PTR [RDX],40
            je .L_42ba70
.L_42b6ae:

            lea RBX,QWORD PTR [RSP+144]
            mov BYTE PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R13
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+152],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42b746:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42b74b:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_42b808:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42b80d:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f881]
            mov EDX,12
.L_42b81d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f88e]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,1801
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_42f890]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42b859:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f820]
            mov EDX,38
.L_42b869:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42b86e:

            cmp BYTE PTR [RSP+144],0
            je .L_42b930
.L_42b87c:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_42b8b1

            call _ZdlPv@PLT
.L_42b8b1:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,QWORD PTR [R12+24]
            mov DWORD PTR [RAX],1
            xor EAX,EAX
.L_42b902:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42bf07

            add RSP,552
.L_42b920:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b930:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f86a]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_42bbd0

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_42bb20

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+8],RCX
.L_42b9a7:

            call .L_429f40
.L_42b9ac:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42bc68

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_42bcd0

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42bcdf

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_42ba0a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_42ba2e
.L_42ba29:

            call _ZdlPv@PLT
.L_42ba2e:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_42ba3d:

            call write@PLT
.L_42ba42:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_42b87c

            call _ZdlPv@PLT

            jmp .L_42b87c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ba70:

            cmp BYTE PTR [RDX+1],63
            jne .L_42b6ae

            sub EAX,2
            mov R15,RSI
            lea RSI,QWORD PTR [RDX+2]
            xor R14D,R14D
            cmp EAX,2
            mov DWORD PTR [RSP+24],EAX
            mov QWORD PTR [RSP+16],RSI
            mov BYTE PTR [RSP],0
            jle .L_42baa3

            cmp BYTE PTR [RDX+2],80
            je .L_42be19
.L_42baa3:

            lea R13,QWORD PTR [RSP+16]
            lea RBP,QWORD PTR [RSP+32]
.L_42baad:

            test EAX,EAX
            mov RDX,QWORD PTR [R12+24]
            je .L_42baf8

            mov RSI,R13
            mov RDI,RBP
.L_42babc:

            call .L_429d70
.L_42bac1:

            test EAX,EAX
            js .L_42bb10

            mov EAX,DWORD PTR [RSP+32]
            cmp EAX,85
            je .L_42bcf8

            jg .L_42bbe8

            cmp EAX,45
            je .L_42bd10

            cmp EAX,58
            je .L_42bd30

            cmp EAX,41
            je .L_42bd40
.L_42baf3:

            mov RDX,QWORD PTR [R12+24]
.L_42baf8:

            mov RCX,QWORD PTR [R15]
            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [RDX],11
            sub RAX,RCX
            mov QWORD PTR [RDX+8],RCX
            mov DWORD PTR [RDX+16],EAX
.L_42bb10:

            xor EAX,EAX
            jmp .L_42b902
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bb20:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RSP+128]
            mov RDI,RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_42bb3d:

            call .L_429f40

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42bc28

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_42bca8

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42bcb7

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42bba6:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_42ba29

            jmp .L_42ba2e
          .byte 0x66
          .byte 0x90
.L_42bbd0:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42bbdd:

            jmp .L_42ba2e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bbe8:

            cmp EAX,109
            je .L_42bd88

            cmp EAX,115
            je .L_42bd70

            cmp EAX,105
            jne .L_42baf3

            test R14B,R14B
            je .L_42bdc0

            and EBX,4294967294
            mov BYTE PTR [RSP],R14B
            nop
            nop
            nop
            nop
            nop
.L_42bc18:

            mov EAX,DWORD PTR [RSP+24]
            jmp .L_42baad
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bc28:

            test RDX,RDX
            je .L_42bc50

            cmp RDX,1
            je .L_42be00

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bc50:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42bba6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bc68:

            test RDX,RDX
            je .L_42bc90

            cmp RDX,1
            je .L_42bde0

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bc90:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42ba0a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bca8:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42bcb7:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42bba6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bcd0:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42bcdf:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42ba0a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bcf8:

            test R14B,R14B
            je .L_42bda0

            and EBX,4294967231
            mov BYTE PTR [RSP],R14B
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bd10:

            test R14B,R14B
            jne .L_42baf3

            mov BYTE PTR [RSP],0
            mov R14D,1
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bd30:

            mov RDI,R12
.L_42bd33:

            call .L_42a790

            test AL,AL
            je .L_42bb10
.L_42bd40:

            cmp BYTE PTR [RSP],1
            je .L_42bd4f

            test R14B,R14B
            jne .L_42baf3
.L_42bd4f:

            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [R12],EBX
            mov QWORD PTR [R15],RAX
            mov EAX,DWORD PTR [RSP+24]
            mov DWORD PTR [R15+8],EAX
            mov EAX,1
            jmp .L_42b902
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bd70:

            test R14B,R14B
            je .L_42bdb0

            and EBX,4294967287
            mov BYTE PTR [RSP],R14B
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bd88:

            test R14B,R14B
            je .L_42bdd0

            or EBX,16
            mov BYTE PTR [RSP],R14B
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bda0:

            or EBX,64
            mov BYTE PTR [RSP],1
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42bdb0:

            or EBX,8
            mov BYTE PTR [RSP],1
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42bdc0:

            or EBX,1
            mov BYTE PTR [RSP],1
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42bdd0:

            and EBX,4294967279
            mov BYTE PTR [RSP],1
            jmp .L_42bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42bde0:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42bc90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42be00:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42bc50
.L_42be19:

            cmp BYTE PTR [RDX+3],60
            jne .L_42baa3

            lea RDI,QWORD PTR [RSP+16]
            mov EDX,2
            mov ESI,62
            call .L_414c30

            cdqe 
            cmp QWORD PTR [RIP+.L_415340],RAX
            mov RBX,RAX
            je .L_42becc

            mov RBP,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R12+24]
            lea R13,QWORD PTR [RSP+32]
            mov RDI,R13
            lea RAX,QWORD PTR [RBP+2]
            mov QWORD PTR [RSP+32],RAX
            lea EAX,DWORD PTR [RBX-2]
            mov DWORD PTR [RSP+40],EAX
            call .L_429df0

            test AL,AL
            je .L_42bb10

            mov EDI,DWORD PTR [RSP+40]
            add EBX,3
            sub RBP,2
            test EDI,EDI
            je .L_42beb3

            mov R8,QWORD PTR [RSP+32]
            xor EAX,EAX
.L_42be8e:

            cmp EDI,EAX
            jle .L_42bf0c

            movsx ECX,BYTE PTR [R8+RAX*1]
            mov EDX,ECX
            sub ECX,48
            cmp ECX,9
            jbe .L_42bf01

            mov ECX,EDX
            and ECX,4294967263
            sub ECX,65
            cmp CL,25
            jbe .L_42bf01

            cmp DL,95
            je .L_42bf01
.L_42beb3:

            mov RAX,QWORD PTR [R12+24]
            mov DWORD PTR [RAX],13
            mov QWORD PTR [RAX+8],RBP
            mov DWORD PTR [RAX+16],EBX
            xor EAX,EAX
            jmp .L_42b902
.L_42becc:

            mov RSI,QWORD PTR [R12+24]
            mov RDI,R15
            call .L_429df0

            test AL,AL
            je .L_42bb10

            mov RAX,QWORD PTR [R12+24]
            mov RDX,QWORD PTR [R15]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [R15+8]
            mov DWORD PTR [RAX],13
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            jmp .L_42b902
.L_42bf01:

            add RAX,1
            jmp .L_42be8e
.L_42bf07:

            call __stack_chk_fail@PLT
.L_42bf0c:

            mov RSI,R13
            mov RDI,R12
            call .L_42a7f0

            test AL,AL
            je .L_42bb10

            mov RSI,QWORD PTR [R15]
            movsxd RDX,EBX
            add RDX,RBP
            sub RDX,RSI
            sub DWORD PTR [R15+8],EDX
            movsxd RDI,EDX
            add RSI,RDI
            mov QWORD PTR [R15],RSI
            jmp .L_42b902
.L_42bf3d:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42bf51:

            lea RDI,QWORD PTR [RBX+16]
            mov R12,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],RBP
            mov QWORD PTR [RSP+RAX*1+152],RCX
.L_42bf78:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+264],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R12
            call _Unwind_Resume@PLT
.L_42bf91:

            mov R12,RAX
            jmp .L_42bf78
.L_42bf96:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42bfa9:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42bfc0

            call _ZdlPv@PLT
.L_42bfc0:

            call _ZSt9terminatev@PLT
.L_42bfc5:

            jmp .L_42bfa9
.L_42bfc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bfd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_42bfe1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp ECX,11
            jne .L_42c250

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R12
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42c08c:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42c091:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+128],R13
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],0
            mov BYTE PTR [RSP+216],0
.L_42c14b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42c150:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f881]
            mov EDX,12
.L_42c160:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f88e]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,322
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_42f890]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42c19c:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f848]
            mov EDX,33
.L_42c1ac:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42c1b1:

            cmp BYTE PTR [RSP+112],0
            je .L_42c2e0
.L_42c1bc:

            mov RDI,QWORD PTR [RSP+200]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],R13
            cmp RDI,RAX
            je .L_42c1e7

            call _ZdlPv@PLT
.L_42c1e7:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT
.L_42c225:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42c619

            add RSP,520
.L_42c243:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42c250:

            mov R13,RDI
            mov EBX,ESI
            mov EBP,EDX
            mov R12D,ECX
.L_42c25a:

            call .L_40eba0

            test AL,AL
            je .L_42c225

            mov R15D,DWORD PTR [RIP+.L_4375b4]
            lea R14,QWORD PTR [RIP+.L_4375c0]
            add R12D,1
.L_42c275:

            cmp EBX,EBP
            jg .L_42c225
.L_42c279:

            mov EDX,EBX
            mov ESI,R15D
            mov RDI,R14
            call .L_42a0c0

            test RAX,RAX
            je .L_42c225

            mov EDX,DWORD PTR [RAX]
            cmp EDX,EBX
            jle .L_42c2a0

            mov EBX,EDX
            cmp EBX,EBP
            jle .L_42c279

            jmp .L_42c225
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c2a0:

            mov ECX,DWORD PTR [RAX+8]
            cmp DWORD PTR [RAX+4],EBP
            mov EDX,EBP
            cmovle EDX,DWORD PTR [RAX+4]
            cmp ECX,-1
            je .L_42c410

            cmp ECX,1
            je .L_42c3e8

            add EBX,ECX
            add EDX,ECX
.L_42c2c2:

            mov ESI,EBX
            mov ECX,R12D
            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            call .L_42bfd0
.L_42c2d3:

            mov RAX,QWORD PTR [RSP]
            mov EBX,DWORD PTR [RAX+4]
            add EBX,1
            jmp .L_42c275
          .byte 0x90
.L_42c2e0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f86a]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_42c570

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_42c440

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_42c359:

            call .L_429f40

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42c588

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_42c520

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42c52f

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_42c3bc:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_42c4d8

            jmp .L_42c4dd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c3e8:

            mov ESI,EBX
            shr ESI,31
            lea ECX,DWORD PTR [RBX+RSI*1]
            and ECX,1
            sub ECX,ESI
            cmp ECX,1
            sete CL
            movzx ECX,CL
            sub EBX,ECX
            mov ECX,EDX
            and ECX,1
            cmp ECX,1
            adc EDX,0
            jmp .L_42c2c2
.L_42c410:

            mov ECX,EBX
            mov ESI,EDX
            and ECX,1
            cmp ECX,1
            sbb EBX,0
            shr ESI,31
            lea ECX,DWORD PTR [RDX+RSI*1]
            and ECX,1
            sub ECX,ESI
            cmp ECX,1
            sete CL
            movzx ECX,CL
            add EDX,ECX
            jmp .L_42c2c2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c440:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
            call .L_429f40
.L_42c45b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42c5c0

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_42c548

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_42c557

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_42c4b9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42c4dd
.L_42c4d8:

            call _ZdlPv@PLT
.L_42c4dd:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_42c4ec:

            call write@PLT
.L_42c4f1:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_42c1bc

            call _ZdlPv@PLT

            jmp .L_42c1bc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c520:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42c52f:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42c3bc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c548:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_42c557:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_42c4b9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c570:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
.L_42c578:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42c57d:

            jmp .L_42c4dd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c588:

            test RDX,RDX
            je .L_42c5a8

            cmp RDX,1
            je .L_42c606

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c5a8:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42c3bc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c5c0:

            test RDX,RDX
            je .L_42c5e0

            cmp RDX,1
            je .L_42c5f3

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c5e0:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42c4b9
.L_42c5f3:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42c5e0
.L_42c606:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_42c5a8
.L_42c619:

            call __stack_chk_fail@PLT
.L_42c61e:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],RBP
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_42c63f:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_42c653:

            call _Unwind_Resume@PLT
.L_42c658:

            mov R13,RAX
            jmp .L_42c63f
.L_42c65d:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_42c674

            call _ZdlPv@PLT
.L_42c674:

            call _ZSt9terminatev@PLT
.L_42c679:

            jmp .L_42c65d
.L_42c67b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42c68e:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42c6a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c6b0:

            push R14
            push R13
            mov R13D,ECX
            push R12
            push RBP
            mov EBP,ECX
            push RBX
            mov R14,RDI
            mov EBX,EDX
            mov R12D,ECX
            and EBP,4
            and R13D,2048
.L_42c6cf:

            test EBP,EBP
            je .L_42c6f0

            test R13D,R13D
            jne .L_42c6f0
.L_42c6d8:

            and R12D,1
            jne .L_42c718

            mov EDX,EBX
            mov RDI,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_40eba0
.L_42c6f0:

            cmp ESI,10
            jg .L_42c6d8

            cmp EBX,9
            jle .L_42c6d8

            cmp ESI,10
            jne .L_42c730
.L_42c6ff:

            cmp EBX,10
            mov ESI,11
            jne .L_42c6cf

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c718:

            mov EDX,EBX
            mov RDI,R14
            xor ECX,ECX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_42bfd0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c730:

            mov ECX,R12D
            mov EDX,9
            mov RDI,R14
            call .L_42c6b0

            jmp .L_42c6ff
.L_42c742:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c750:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            xor EBX,EBX
            mov RBP,RDI
            sub RSP,552
.L_42c766:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI]
            cmp EAX,5
            jne .L_42c7b3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c788:

            cmp EBX,3
            jg .L_42c798

            movsxd RAX,EBX
            add EBX,1
            mov QWORD PTR [RSP+RAX*8+16],RBP
.L_42c798:

            movzx EAX,WORD PTR [RBP+6]
            mov RBP,QWORD PTR [RBP+8]
            cmp AX,1
            jbe .L_42c7aa

            mov RBP,QWORD PTR [RBP]
.L_42c7aa:

            movzx EAX,BYTE PTR [RBP]
            cmp EAX,5
            je .L_42c788
.L_42c7b3:

            cmp EAX,3
            je .L_42c8f0

            cmp EAX,4
            je .L_42c8b8
.L_42c7c5:

            lea R12,QWORD PTR [RSP+144]
            sub EBX,1
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            movsxd RBX,EBX
            lea R13,QWORD PTR [R12+120]
            jmp .L_42c7f4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c7e8:

            mov RDI,QWORD PTR [R15]
            cmp BYTE PTR [RDI],2
            je .L_42c816
.L_42c7f0:

            sub RBX,1
.L_42c7f4:

            cmp RBX,-1
            je .L_42c860

            mov RBP,QWORD PTR [RSP+RBX*8+16]
            cmp WORD PTR [RBP+6],1
            mov R15,QWORD PTR [RBP+8]
            ja .L_42c7e8

            mov RDI,R15
            lea R15,QWORD PTR [RBP+8]
            cmp BYTE PTR [RDI],2
            jne .L_42c7f0
.L_42c816:

            call .L_40f430

            movzx EAX,WORD PTR [RBP+6]
            mov QWORD PTR [R15],0
            cmp AX,1
            jbe .L_42c900

            cmp AX,2
            jne .L_42c890

            mov RAX,QWORD PTR [R15+8]
            mov RDI,RBP
            mov QWORD PTR [R15+8],0
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call .L_40cec0

            mov RAX,QWORD PTR [RSP]
            mov RDI,RAX
            call .L_40f430
.L_42c85d:

            jmp .L_42c7f0
          .byte 0x90
.L_42c860:

            mov RAX,QWORD PTR [RSP+536]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ce8a

            add RSP,552
.L_42c87e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c890:

            sub EAX,1
            lea RSI,QWORD PTR [R15+8]
            mov RDI,R15
            mov WORD PTR [RBP+6],AX
            movzx EAX,AX
            lea RDX,QWORD PTR [RAX*8]
            call memmove@PLT

            jmp .L_42c7f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c8b8:

            movsxd RAX,DWORD PTR [RBP+24]
            mov RDI,QWORD PTR [RBP+32]
            cmp EAX,ESI
            jg .L_42cb70

            test RDI,RDI
            je .L_42c8d2

            call _ZdaPv@PLT
.L_42c8d2:

            mov QWORD PTR [RBP+32],0
            mov DWORD PTR [RBP+24],0
            mov BYTE PTR [RBP],2
            jmp .L_42c7c5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c8f0:

            mov DWORD PTR [RBP+24],0
            mov BYTE PTR [RBP],2
            jmp .L_42c7c5
.L_42c900:

            mov RDI,R13
            mov BYTE PTR [RSP+144],0
            call _ZNSt8ios_baseC2Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+488],0
            xor ESI,ESI
            mov QWORD PTR [RSP+264],R14
            mov QWORD PTR [RSP+480],0
            mov BYTE PTR [RSP+489],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42c988:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42c98d:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            mov RDI,R13
            mov DWORD PTR [RSP+224],16
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+248],0
            mov QWORD PTR [RSP+232],RAX
.L_42ca4c:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ca51:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_42f881]
            mov EDX,12
.L_42ca62:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_42f88e]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,759
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_42f890]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42caa0:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_42f8a2]
            mov EDX,10
.L_42cab1:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,WORD PTR [RBP+6]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSolsEi@PLT
.L_42cac4:

            cmp BYTE PTR [RSP+144],0
            je .L_42cba0
.L_42cad2:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+152],R15
            mov QWORD PTR [RSP+264],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_42cb0f

            call _ZdlPv@PLT
.L_42cb0f:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+160],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,R13
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+152],RCX
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov QWORD PTR [RBP+8],0
            mov BYTE PTR [RBP],2
            jmp .L_42c7f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cb70:

            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,ESI
            jne .L_42ccdb

            test RDI,RDI
            mov R12D,DWORD PTR [RDI+RAX*4-4]
            je .L_42cb8a

            call _ZdaPv@PLT
.L_42cb8a:

            mov QWORD PTR [RBP+32],0
            mov DWORD PTR [RBP+24],R12D
            mov BYTE PTR [RBP],3
            jmp .L_42c7c5
          .byte 0x90
.L_42cba0:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_42f86a]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RSP+200]
            test RAX,RAX
            je .L_42cda9

            mov RDX,QWORD PTR [RSP+184]
            mov RSI,QWORD PTR [RSP+192]
            cmp RAX,RDX
            ja .L_42ccfb

            lea RCX,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+8],RCX
.L_42cc18:

            call .L_429f40
.L_42cc1d:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42cdbc

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_42ce1a

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42ce29

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_42cc7b:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_42cc9f
.L_42cc9a:

            call _ZdlPv@PLT
.L_42cc9f:

            movsxd RDX,DWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov EDI,2
.L_42ccae:

            call write@PLT
.L_42ccb3:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+144],1
            add RAX,16
            cmp RDI,RAX
            je .L_42cad2

            call _ZdlPv@PLT

            jmp .L_42cad2
.L_42ccdb:

            sub EAX,ESI
            movsxd RSI,ESI
            mov DWORD PTR [RBP+24],EAX
            cdqe 
            lea RSI,QWORD PTR [RDI+RSI*4]
            lea RDX,QWORD PTR [RAX*4]
            call memmove@PLT

            jmp .L_42c7c5
.L_42ccfb:

            lea RCX,QWORD PTR [RSP+112]
            lea RDX,QWORD PTR [RSP+128]
            mov RDI,RCX
            mov QWORD PTR [RSP+112],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_42cd18:

            call .L_429f40

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+120]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_42cded

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+128]
            add RCX,16
            cmp RDI,RCX
            je .L_42ce3c

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
            je .L_42ce4b

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_42cd81:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+112]
            add RAX,16
            cmp RDI,RAX
            jne .L_42cc9a

            jmp .L_42cc9f
.L_42cda9:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R12+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42cdb7:

            jmp .L_42cc9f
.L_42cdbc:

            test RDX,RDX
            je .L_42cdda

            cmp RDX,1
            je .L_42ce74

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
.L_42cdda:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42cc7b
.L_42cded:

            test RDX,RDX
            je .L_42ce07

            cmp RDX,1
            je .L_42ce5e

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
.L_42ce07:

            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_42cd81
.L_42ce1a:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42ce29:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42cc7b
.L_42ce3c:

            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+64],RAX
.L_42ce4b:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_42cd81
.L_42ce5e:

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42ce07
.L_42ce74:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_42cdda
.L_42ce8a:

            call __stack_chk_fail@PLT
.L_42ce8f:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_42cea6

            call _ZdlPv@PLT
.L_42cea6:

            call _ZSt9terminatev@PLT
.L_42ceab:

            jmp .L_42ce8f
.L_42cead:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+152],RCX
.L_42cedc:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+264],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_42cef1:

            call _Unwind_Resume@PLT
.L_42cef6:

            mov RBX,RAX
            mov RDI,R12
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42cf09:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42cf1e:

            mov RBX,RAX
            jmp .L_42cedc
.L_42cf23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cf30:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RBX,QWORD PTR [RDI+32]
            test RBX,RBX
            je .L_42cf70

            mov QWORD PTR [RDI+32],0
            mov RDI,RBX
            call .L_40d440

            mov QWORD PTR [RBP+24],RAX
            mov RSI,QWORD PTR [RBX+32]
            lea RDI,QWORD PTR [RBX+16]
            call .L_411ee0

            mov ESI,64
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_42cf70:

            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_42cf7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42cf80:

            test RSI,RSI
            je .L_42cf92

            cmp BYTE PTR [RSI],20
            mov QWORD PTR [RSI+16],0
            je .L_42cfa0
.L_42cf92:

            mov RAX,RSI
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cfa0:

            mov RDI,RSI
            jmp .L_42cf30
.L_42cfa5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cfb0:

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42d048

            cmp BYTE PTR [RAX],21
            ja .L_42d048

            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_42cfd6:

            mov R13D,DWORD PTR [RDI]
            mov EDI,40
            mov EAX,R13D
            xor EAX,64
            test CL,CL
            cmovne R13D,EAX
.L_42cfea:

            call _Znwm@PLT
.L_42cfef:

            mov EDX,R13D
            mov ESI,R12D
            mov RDI,RAX
            mov RBX,RAX
.L_42cffb:

            call .L_40c9d0
.L_42d000:

            mov EAX,1
            mov WORD PTR [RBX+6],AX
            mov RAX,QWORD PTR [RBP+32]
            mov RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RDX
            cmp BYTE PTR [RAX],20
            mov QWORD PTR [RAX+16],0
            je .L_42d068
.L_42d022:

            mov RDI,RBX
            mov QWORD PTR [RBX+8],RAX
.L_42d029:

            call .L_431f50

            mov QWORD PTR [RBP+32],RBX
            mov BYTE PTR [RBX+1],AL
            add RSP,8
.L_42d039:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d048:

            mov RAX,QWORD PTR [RDI+24]
            mov RCX,QWORD PTR [RDX]
            mov QWORD PTR [RAX+8],RCX
            mov EDX,DWORD PTR [RDX+8]
            mov DWORD PTR [RAX],8
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d068:

            mov RDI,RAX
            call .L_42cf30

            jmp .L_42d022
.L_42d072:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42d08a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42d090:

            cmp EDX,-1
            je .L_42d0b8

            cmp EDX,ESI
            jge .L_42d0b8
.L_42d099:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,QWORD PTR [RCX]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [RCX+8]
            mov DWORD PTR [RAX],9
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d0b8:

            cmp ESI,1000
            setg AL
            cmp EDX,1000
            setg R9B
            or AL,R9B
            jne .L_42d099

            mov R9,QWORD PTR [RDI+32]
            test R9,R9
            je .L_42d180

            cmp BYTE PTR [R9],21
            ja .L_42d180

            push R14
.L_42d0e9:

            push R13
            mov R13,RDI
            push R12
            push RBP
            mov EBP,ESI
            push RBX
.L_42d0f4:

            mov R14D,DWORD PTR [RDI]
            mov EDI,40
            mov EBX,EDX
            mov EAX,R14D
            xor EAX,64
            test R8B,R8B
            cmovne R14D,EAX
.L_42d10b:

            call _Znwm@PLT
.L_42d110:

            mov EDX,R14D
            mov ESI,10
            mov RDI,RAX
            mov R12,RAX
.L_42d11e:

            call .L_40c9d0
.L_42d123:

            mov EAX,1
            mov DWORD PTR [R12+28],EBP
            mov DWORD PTR [R12+24],EBX
            mov WORD PTR [R12+6],AX
            mov RAX,QWORD PTR [R13+32]
            mov RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [R12+16],RDX
            cmp BYTE PTR [RAX],20
            mov QWORD PTR [RAX+16],0
            je .L_42d1a0
.L_42d152:

            mov RDI,R12
            mov QWORD PTR [R12+8],RAX
.L_42d15a:

            call .L_431f50

            mov QWORD PTR [R13+32],R12
            mov BYTE PTR [R12+1],AL
            mov EAX,1
            pop RBX
.L_42d16e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d180:

            mov RDX,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RCX]
            mov QWORD PTR [RDX+8],RSI
            mov ECX,DWORD PTR [RCX+8]
            mov DWORD PTR [RDX],8
            mov DWORD PTR [RDX+16],ECX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d1a0:

            mov RDI,RAX
            call .L_42cf30

            jmp .L_42d152
.L_42d1aa:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42d1c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d1d0:

            push R15
            push R14
            mov R9,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42d1e1:

            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_42d3b8

            movzx R8D,BYTE PTR [RDI]
            cmp R8B,21
            ja .L_42d3c8

            mov RCX,RDI
            xor EBX,EBX
            jmp .L_42d21d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d208:

            add EBX,1
            test RAX,RAX
            je .L_42d238
.L_42d210:

            movzx R8D,BYTE PTR [RAX]
            mov RCX,RAX
            cmp R8B,21
            ja .L_42d238
.L_42d21d:

            cmp ESI,R8D
            mov RAX,QWORD PTR [RCX+16]
            jne .L_42d208

            movzx EDX,WORD PTR [RCX+6]
            add EBX,EDX
            test RAX,RAX
            jne .L_42d210

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d238:

            cmp QWORD PTR [RDI+16],RAX
            je .L_42d38f

            movsxd RDI,EBX
            shl RDI,3
.L_42d249:

            mov R14,R9
            mov DWORD PTR [RSP+32],ESI
            mov QWORD PTR [RSP+40],R9
            call _Znam@PLT

            mov R15,QWORD PTR [R14+32]
            mov QWORD PTR [RSP+24],RAX
            test R15,R15
            je .L_42d3b0

            movzx EDX,BYTE PTR [R15]
            mov EBP,EBX
            cmp DL,21
            mov EAX,EDX
            jbe .L_42d2bf

            jmp .L_42d3b0

            nop
            nop
.L_42d280:

            mov RSI,QWORD PTR [RSP+24]
            sub EBP,1
            cmp AL,20
            movsxd RDX,EBP
            mov QWORD PTR [R15+16],0
            lea R13,QWORD PTR [RSI+RDX*8]
            je .L_42d3a0
.L_42d29f:

            test R12,R12
            mov QWORD PTR [R13],R15
            je .L_42d350
.L_42d2ac:

            movzx EDX,BYTE PTR [R12]
            mov R15,R12
            cmp DL,21
            mov EAX,EDX
            ja .L_42d350
.L_42d2bf:

            cmp DWORD PTR [RSP+32],EDX
            mov R12,QWORD PTR [R15+16]
            jne .L_42d280

            movzx EAX,WORD PTR [R15+6]
            lea RDX,QWORD PTR [R15+8]
            cmp AX,1
            jbe .L_42d2dc

            mov RDX,QWORD PTR [R15+8]
.L_42d2dc:

            mov DWORD PTR [RSP+36],EAX
            sub EAX,1
            cmp EAX,-1
            je .L_42d33a

            mov R13D,EAX
            cdqe 
            not R13
            lea R14,QWORD PTR [RDX+RAX*8]
            movsxd RAX,EBP
            lea RCX,QWORD PTR [R13*8]
            xor R13D,R13D
            mov QWORD PTR [RSP+16],RCX
            mov RCX,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_42d318:

            mov RDI,QWORD PTR [R14+R13*1]
            call .L_40feb0

            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSI+R13*1-8],RAX
            sub R13,8
            cmp R13,QWORD PTR [RSP+16]
            jne .L_42d318

            sub EBP,DWORD PTR [RSP+36]
.L_42d33a:

            mov RDI,R15
            call .L_40f430

            test R12,R12
            jne .L_42d2ac

            nop
            nop
            nop
            nop
            nop
.L_42d350:

            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+24]
            mov EDX,EBX
            mov EDI,DWORD PTR [RSP+32]
            mov R8D,1
            mov ECX,DWORD PTR [R14]
            mov RSI,R15
            call .L_40da60

            mov RDI,R15
            mov RBX,RAX
            call _ZdaPv@PLT

            mov RDI,RBX
            call .L_431f50

            mov QWORD PTR [RBX+16],R12
            mov BYTE PTR [RBX+1],AL
            mov QWORD PTR [R14+32],RBX
.L_42d38f:

            add RSP,56
.L_42d393:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42d3a0:

            mov RDI,R15
            call .L_42cf30

            mov R15,RAX
            jmp .L_42d29f
.L_42d3b0:

            xor R12D,R12D
            jmp .L_42d350
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d3b8:

            xor EDI,EDI
            xor EBX,EBX
            jmp .L_42d249
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d3c8:

            xor EAX,EAX
            xor EBX,EBX
            jmp .L_42d238
.L_42d3d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d3e0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42d3f7

            cmp BYTE PTR [RAX],21
            jbe .L_42d41e
.L_42d3f7:

            mov EDI,40
.L_42d3fc:

            call _Znwm@PLT
.L_42d401:

            mov EDX,DWORD PTR [RBX]
            mov ESI,2
            mov RDI,RAX
            mov RBP,RAX
.L_42d40e:

            call .L_40c9d0
.L_42d413:

            mov RSI,RBP
            mov RDI,RBX
.L_42d419:

            call .L_42a4e0
.L_42d41e:

            add RSP,8
            mov RDI,RBX
            mov ESI,5
            pop RBX
            pop RBP
            jmp .L_42d1d0
.L_42d431:

            mov RBX,RAX
            mov RDI,RBP
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42d449:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d450:

            push R15
            push R14
            xor EDX,EDX
            push R13
            push R12
            mov ESI,4294967295
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_42d468:

            call .L_42a3b0

            mov RDI,RBX
            call .L_42d3e0

            mov RBP,QWORD PTR [RBX+32]
            test RBP,RBP
            je .L_42d48e

            mov R12,QWORD PTR [RBP+16]
            test R12,R12
            je .L_42d48e

            cmp BYTE PTR [R12],23
            je .L_42d4b0
.L_42d48e:

            add RSP,24
            mov RDI,RBX
            mov ESI,23
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_42a600
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d4b0:

            movzx EAX,BYTE PTR [RBP]
            mov R14,QWORD PTR [R12+16]
            lea EDX,DWORD PTR [RAX-12]
            and EDX,247
            sete R13B
            cmp AL,3
            sete DL
            or R13B,DL
            je .L_42d4f0

            test R14,R14
            je .L_42d4f0

            movzx EDX,BYTE PTR [R14]
            cmp DL,12
            je .L_42d5a1

            cmp DL,20
            je .L_42d5b8

            cmp DL,3
            je .L_42d518
.L_42d4f0:

            mov QWORD PTR [RBP+16],R14
            mov R13D,1
            mov QWORD PTR [R12+16],RBP
            mov QWORD PTR [RBX+32],R12
.L_42d503:

            add RSP,24
.L_42d507:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d518:

            mov EAX,DWORD PTR [R14+24]
            mov EDI,64
            mov BYTE PTR [R14],20
            mov QWORD PTR [R14+24],0
            mov DWORD PTR [RSP+12],EAX
            call _Znwm@PLT
.L_42d536:

            mov RDI,RAX
            mov R15,RAX
.L_42d53c:

            call .L_40d230
.L_42d541:

            movzx EDX,WORD PTR [R14+2]
            mov ESI,DWORD PTR [RSP+12]
            mov RDI,R15
            mov QWORD PTR [R14+32],R15
            and EDX,1
.L_42d554:

            call .L_429e70

            movzx EDX,BYTE PTR [RBP]
            mov EAX,EDX
.L_42d55f:

            cmp EDX,3
            mov R15,QWORD PTR [R14+32]
            je .L_42d5d0

            cmp EDX,20
            je .L_42d5ec
.L_42d56d:

            cmp AL,12
            je .L_42d5c0

            cmp DWORD PTR [R15+8],1114112
            jne .L_42d5a1
.L_42d57b:

            mov RSI,QWORD PTR [R15+32]
            lea RDI,QWORD PTR [R15+16]
            call .L_411ee0

            mov ESI,64
            mov RDI,R15
            call _ZdlPvm@PLT
.L_42d595:

            mov QWORD PTR [R14+32],0
            mov BYTE PTR [R14],12
.L_42d5a1:

            mov QWORD PTR [RBX+32],R12
            mov RDI,RBP
            call .L_40f430

            jmp .L_42d503
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d5b8:

            movzx EDX,AL
            jmp .L_42d55f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d5c0:

            test R15,R15
            je .L_42d595

            jmp .L_42d57b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d5d0:

            movzx EDX,WORD PTR [RBP+2]
            mov ESI,DWORD PTR [RBP+24]
            mov RDI,R15
            and EDX,1
            call .L_429e70

            movzx EAX,BYTE PTR [RBP]
            mov R15,QWORD PTR [R14+32]
            jmp .L_42d56d
.L_42d5ec:

            mov RSI,QWORD PTR [RBP+32]
            mov RDI,R15
            call .L_40ee80

            movzx EAX,BYTE PTR [RBP]
            mov R15,QWORD PTR [R14+32]
            jmp .L_42d56d
.L_42d605:

            mov RBX,RAX
            mov RDI,R15
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42d61d:

            nop
            nop
            nop
.L_42d620:

            push RBX
            mov RBX,RDI
            call .L_42d450

            mov RDI,QWORD PTR [RBX+32]
            mov RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RBX+32],RAX
            call .L_40f430

            mov RDI,RBX
            mov ESI,6
            pop RBX
            jmp .L_42d1d0
.L_42d648:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d650:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            call .L_42d620

            mov R12,QWORD PTR [RBX+32]
            test R12,R12
            je .L_42d675

            mov RBP,QWORD PTR [R12+16]
            test RBP,RBP
            je .L_42d675

            cmp BYTE PTR [RBP],22
            je .L_42d698
.L_42d675:

            mov RAX,QWORD PTR [RBX+24]
            mov RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [RBX+16]
            mov DWORD PTR [RAX],6
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d698:

            mov RAX,QWORD PTR [RBP+16]
            mov EDX,DWORD PTR [RBP+24]
            mov QWORD PTR [RBX+32],RAX
            movzx EAX,WORD PTR [RBP+2]
            test EDX,EDX
            mov DWORD PTR [RBX],EAX
            jle .L_42d6f0

            mov EAX,1
            mov BYTE PTR [RBP],11
            mov WORD PTR [RBP+6],AX
            cmp BYTE PTR [R12],20
            mov QWORD PTR [R12+16],0
            je .L_42d700
.L_42d6ca:

            mov QWORD PTR [RBP+8],R12
            mov RDI,RBP
            call .L_431f50

            mov BYTE PTR [RBP+1],AL
.L_42d6d9:

            mov RSI,RBP
            mov RDI,RBX
            pop RBX
.L_42d6e0:

            pop RBP
            pop R12
            jmp .L_42a4e0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d6f0:

            mov RDI,RBP
            mov RBP,R12
            call .L_40f430

            jmp .L_42d6d9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d700:

            mov RDI,R12
            call .L_42cf30

            mov R12,RAX
            jmp .L_42d6ca
.L_42d70d:

            nop
            nop
            nop
.L_42d710:

            push RBX
            mov RBX,RDI
            call .L_42d620

            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_42d73e

            cmp QWORD PTR [RAX+16],0
            jne .L_42d750

            mov QWORD PTR [RBX+32],0
            cmp BYTE PTR [RAX],20
            mov QWORD PTR [RAX+16],0
            je .L_42d740
.L_42d73e:

            pop RBX
            ret 
.L_42d740:

            pop RBX
            mov RDI,RAX
            jmp .L_42cf30
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d750:

            mov RAX,QWORD PTR [RBX+24]
            mov RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RAX+8],RDX
            mov EDX,DWORD PTR [RBX+16]
            mov DWORD PTR [RAX],6
            mov DWORD PTR [RAX+16],EDX
            xor EAX,EAX
            pop RBX
            ret 
.L_42d76c:

            nop
            nop
            nop
            nop
.L_42d770:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            sub RSP,696
.L_42d784:

            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+680],RSI
            xor ESI,ESI
            test ECX,ECX
            mov QWORD PTR [RSP+16],RDI
            mov DWORD PTR [RSP+88],EDX
            mov DWORD PTR [RSP+32],ECX
            jle .L_42dd1b

            xor EBX,EBX
            test R12D,R12D
            js .L_42d864

            mov EAX,ECX
            xor R14D,R14D
            xor R15D,R15D
            sub EAX,1
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+8],0
            mov DWORD PTR [RSP+56],EAX
            lea RAX,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+96],RAX
            lea RAX,QWORD PTR [RSP+124]
            mov QWORD PTR [RSP+104],RAX
.L_42d803:

            cmp R12D,R14D
            mov EBP,R14D
            mov DWORD PTR [RSP+124],0
            mov DWORD PTR [RSP+128],0
            jg .L_42e3f7

            cmp R15D,R14D
            je .L_42d85b

            mov QWORD PTR [RSP+24],0
.L_42d830:

            lea EAX,DWORD PTR [R15+1]
            cmp EAX,EBP
            jne .L_42e010

            mov RCX,QWORD PTR [RSP+16]
            movsxd RAX,R15D
            mov RDX,QWORD PTR [RCX+RAX*8]
            movsxd RAX,EBX
            add EBX,1
            mov QWORD PTR [RCX+RAX*8],RDX
.L_42d852:

            cmp R12D,EBP
            jg .L_42e363
.L_42d85b:

            add R14,1
            cmp R12D,R14D
            jge .L_42d803
.L_42d864:

            movsxd RAX,EBX
            xor R12D,R12D
            xor EBP,EBP
            add RAX,1
            mov DWORD PTR [RSP+24],0
            xor R15D,R15D
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+32]
            mov R13,R12
            sub EAX,1
            mov DWORD PTR [RSP+48],EAX
            lea RAX,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RAX,8
            mov QWORD PTR [RSP+64],RAX
.L_42d8a9:

            cmp EBX,EBP
            mov R14D,EBP
            jg .L_42e388

            cmp R15D,EBP
            je .L_42d906

            mov QWORD PTR [RSP+32],0
.L_42d8c2:

            movsxd RAX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            movsxd R12,R15D
            lea R10,QWORD PTR [RSI+R12*8]
            mov RCX,RAX
            lea RDX,QWORD PTR [RSI+RAX*8]
            lea EAX,DWORD PTR [R15+1]
            add ECX,1
            cmp EAX,R14D
            mov QWORD PTR [RSP+40],RDX
            mov DWORD PTR [RSP+24],ECX
            jne .L_42e150

            mov RAX,QWORD PTR [R10]
            mov QWORD PTR [RDX],RAX
.L_42d8f9:

            cmp EBX,R14D
            cmovg R13,QWORD PTR [RSP+32]
            cmovg R15D,R14D
.L_42d906:

            add RBP,1
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_42d8a9

            lea RBX,QWORD PTR [RSP+288]
            xor R13D,R13D
            xor R12D,R12D
            xor EBP,EBP
            lea RAX,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+48],RAX
            jmp .L_42d969
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d930:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RBP,EBP
            movsxd RAX,R12D
            add R12D,1
            mov RDX,QWORD PTR [RCX+RBP*8]
            mov QWORD PTR [RCX+RAX*8],RDX
.L_42d947:

            mov ECX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+24],ECX
            jg .L_42e308
.L_42d955:

            lea EBP,DWORD PTR [R13+1]
            mov EAX,EBP
.L_42d95b:

            add R13,1
            cmp DWORD PTR [RSP+24],EAX
            jl .L_42dce8
.L_42d969:

            cmp DWORD PTR [RSP+24],R13D
            mov DWORD PTR [RSP+32],R13D
            jg .L_42e2e0

            cmp EBP,R13D
            je .L_42d955
.L_42d97e:

            lea EAX,DWORD PTR [RBP+1]
            cmp EAX,DWORD PTR [RSP+32]
            je .L_42d930

            lea RAX,QWORD PTR [RSP+128]
            mov RDI,RAX
            mov QWORD PTR [RSP+40],RAX
.L_42d997:

            call .L_40d230
.L_42d99c:

            cmp EBP,DWORD PTR [RSP+32]
            jge .L_42df00

            mov RCX,QWORD PTR [RSP+16]
            movsxd RDX,EBP
            lea RAX,QWORD PTR [RCX+RDX*8]
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [R13-1]
            sub EAX,EBP
            add RAX,RDX
            lea RAX,QWORD PTR [RCX+RAX*8+8]
            mov QWORD PTR [RSP+56],RAX
            jmp .L_42dcaf

            nop
.L_42d9d0:

            mov R15,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+288],0
            mov RDI,R15
            call _ZNSt8ios_baseC2Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+632],0
            mov QWORD PTR [RSP+624],0
            mov BYTE PTR [RSP+633],0
            mov QWORD PTR [RSP+640],0
            xor ESI,ESI
            mov QWORD PTR [RSP+408],RAX
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov QWORD PTR [RSP+648],0
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+664],0
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RAX-24]
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42da64:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42da69:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            mov RDI,R15
            mov DWORD PTR [RSP+368],16
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+392],0
            mov QWORD PTR [RSP+376],RAX
.L_42db25:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42db2a:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f881]
            mov EDX,12
.L_42db3a:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f88e]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,962
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_42f890]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42db76:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f8ad]
            mov EDX,20
.L_42db86:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [R14]
            lea RDI,QWORD PTR [RBX+8]
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_42f8c2]
            mov EDX,1
            mov RDI,RAX
            mov R15,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RBP,QWORD PTR [RSP+256]
            mov RSI,R14
            mov RDI,RBP
            call .L_436930
.L_42dbc2:

            mov RDX,QWORD PTR [RSP+264]
            mov RSI,QWORD PTR [RSP+256]
            mov RDI,R15
.L_42dbd5:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_42dbda:

            mov RDI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_42dbf0

            call _ZdlPv@PLT
.L_42dbf0:

            cmp BYTE PTR [RSP+288],0
            je .L_42dda0
.L_42dbfe:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+296],RAX
            add RAX,40
            mov QWORD PTR [RSP+408],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+304],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_42dc3e

            call _ZdlPv@PLT
.L_42dc3e:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+304],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+296],RCX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+408],RAX
            call _ZNSt8ios_baseD2Ev@PLT
.L_42dc91:

            mov RDI,R14
.L_42dc94:

            call .L_40f430

            add QWORD PTR [RSP+8],8
            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+56],RAX
            je .L_42df00
.L_42dcaf:

            mov RAX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RAX]
            movzx EAX,BYTE PTR [R14]
            cmp EAX,20
            je .L_42dd50

            cmp EAX,3
            jne .L_42d9d0

            mov ESI,DWORD PTR [R14+24]
            movzx ECX,WORD PTR [R14+2]
            mov RDI,QWORD PTR [RSP+40]
            mov EDX,ESI
            call .L_42c6b0

            jmp .L_42dc91
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42dce8:

            test R12D,R12D
            je .L_42dd1b

            mov EBP,1
            xor EBX,EBX
            nop
            nop
            nop
            nop
.L_42dcf8:

            mov RAX,QWORD PTR [RSP+16]
            cmp R12D,EBP
            mov RDI,QWORD PTR [RAX+RBP*8-8]
            jg .L_42e2b8

            mov RAX,QWORD PTR [RSP+16]
            lea R12D,DWORD PTR [RBX+1]
            movsxd RBX,EBX
            mov QWORD PTR [RAX+RBX*8],RDI
.L_42dd1b:

            mov RCX,QWORD PTR [RSP+680]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_42e4c5

            add RSP,696
.L_42dd3c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dd50:

            mov R15,QWORD PTR [R14+24]
            movsxd RAX,DWORD PTR [R15+16]
            mov RBP,QWORD PTR [R15+8]
            shl RAX,3
            test RAX,RAX
            je .L_42dc91

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dd70:

            mov EDX,DWORD PTR [RBP+4]
            mov ESI,DWORD PTR [RBP]
            mov RDI,QWORD PTR [RSP+40]
            call .L_40eba0
.L_42dd80:

            movsxd RDX,DWORD PTR [R15+16]
            mov RAX,QWORD PTR [R15+8]
            add RBP,8
            lea RAX,QWORD PTR [RAX+RDX*8]
            cmp RBP,RAX
            jne .L_42dd70

            jmp .L_42dc91
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dda0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42f86a]
            lea R15,QWORD PTR [RSP+192]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RSP+344]
            test RAX,RAX
            je .L_42e210

            mov RDX,QWORD PTR [RSP+328]
            mov RSI,QWORD PTR [RSP+336]
            cmp RAX,RDX
            jbe .L_42df50

            lea RDX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+256],RDX
            mov RDX,RAX
.L_42de19:

            call .L_429f40
.L_42de1e:

            mov RSI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+264]
            cmp RSI,RAX
            je .L_42e228

            lea RAX,QWORD PTR [R15+16]
            mov RCX,QWORD PTR [RSP+272]
            cmp RDI,RAX
            je .L_42e120

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_42e138

            mov QWORD PTR [RSP+256],RDI
            mov QWORD PTR [RSP+272],RAX
.L_42de91:

            mov QWORD PTR [RSP+264],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,RBP
            je .L_42deb6
.L_42deb1:

            call _ZdlPv@PLT
.L_42deb6:

            movsxd RDX,DWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+192]
            mov EDI,2
.L_42decb:

            call write@PLT
.L_42ded0:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            mov BYTE PTR [RSP+288],1
            cmp RDI,R15
            je .L_42dbfe

            call _ZdlPv@PLT

            jmp .L_42dbfe
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42df00:

            mov R14,QWORD PTR [RSP+40]
            mov RDI,R14
.L_42df08:

            call .L_40d440

            mov RCX,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RSP+88]
            lea EBP,DWORD PTR [R12+1]
            mov RDI,RAX
            movsxd R12,R12D
            lea R12,QWORD PTR [RCX+R12*8]
            call .L_40ce70
.L_42df2a:

            mov RSI,QWORD PTR [RSP+160]
            mov RDI,R14
            mov QWORD PTR [R12],RAX
            add RDI,16
            mov R12D,EBP
            call .L_411ee0

            jmp .L_42d947
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42df50:

            lea RBP,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+224],RAX
.L_42df67:

            call .L_429f40
.L_42df6c:

            mov RSI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RSP+232]
            cmp RSI,RAX
            je .L_42e270

            lea RAX,QWORD PTR [R15+16]
            mov RCX,QWORD PTR [RSP+240]
            cmp RDI,RAX
            je .L_42e0f0

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
            je .L_42e108

            mov QWORD PTR [RSP+224],RDI
            mov QWORD PTR [RSP+240],RAX
.L_42dfdf:

            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+224]
            cmp RDI,RBP
            jne .L_42deb1

            jmp .L_42deb6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e010:

            mov EDX,DWORD PTR [RSP+40]
            mov ESI,DWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
.L_42e01d:

            call .L_40cd80

            cmp R15D,EBP
            mov QWORD PTR [RSP+288],RAX
            movsxd RAX,R15D
            mov QWORD PTR [RSP+72],RAX
            jge .L_42e083

            lea EDX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+92],EBP
            mov EBP,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+80],EBX
            sub EDX,R15D
            add RDX,RAX
            lea R13,QWORD PTR [RSI+RAX*8]
            lea RAX,QWORD PTR [RSI+RDX*8+8]
            mov RBX,R13
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e068:

            mov RDI,QWORD PTR [RBX]
            mov ESI,EBP
            add RBX,8
            call .L_42c750

            cmp RBX,R13
            jne .L_42e068

            mov EBX,DWORD PTR [RSP+80]
            mov EBP,DWORD PTR [RSP+92]
.L_42e083:

            mov RCX,QWORD PTR [RSP+72]
            mov RAX,QWORD PTR [RSP+16]
            mov ESI,EBP
            mov EDX,DWORD PTR [RSP+88]
            sub ESI,R15D
            lea R13,QWORD PTR [RAX+RCX*8]
            mov ECX,DWORD PTR [RSP+56]
            mov RDI,R13
            call .L_42d770

            mov EDX,DWORD PTR [RSP+88]
            mov RDI,R13
            mov ESI,EAX
            lea R13D,DWORD PTR [RBX+1]
            movsxd RBX,EBX
            call .L_40dab0

            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RSP+16]
            mov ESI,2
            mov EDX,DWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+64]
            lea RBX,QWORD PTR [RAX+RBX*8]
            call .L_40dae0

            mov QWORD PTR [RBX],RAX
            mov EBX,R13D
            jmp .L_42d852
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e0f0:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_42e108:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+224],RDI
            jmp .L_42dfdf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e120:

            mov QWORD PTR [RSP+192],RSI
            mov QWORD PTR [RSP+200],RDX
            mov QWORD PTR [RSP+208],RCX
.L_42e138:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+256],RDI
            jmp .L_42de91
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e150:

            mov RDI,R13
            mov QWORD PTR [RSP+72],R10
            call .L_40feb0

            cmp R15D,R14D
            mov QWORD PTR [RSP+288],RAX
            mov R10,QWORD PTR [RSP+72]
            jge .L_42e1ae

            lea EAX,DWORD PTR [RBP-1]
            mov DWORD PTR [RSP+72],EBX
            mov QWORD PTR [RSP+80],R10
            mov RBX,R10
            sub EAX,R15D
            add R12,RAX
            mov RAX,QWORD PTR [RSP+64]
            lea R12,QWORD PTR [RAX+R12*8]
            nop
            nop
            nop
.L_42e190:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call .L_42a260

            mov QWORD PTR [RBX-8],RAX
            cmp RBX,R12
            jne .L_42e190

            mov EBX,DWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+80]
.L_42e1ae:

            mov R12D,DWORD PTR [RSP+88]
            mov ECX,DWORD PTR [RSP+48]
            mov ESI,R14D
            mov RDI,R10
            sub ESI,R15D
            mov QWORD PTR [RSP+72],R10
            mov EDX,R12D
            call .L_42d770

            mov R10,QWORD PTR [RSP+72]
            mov EDX,R12D
            mov ESI,EAX
            mov RDI,R10
            call .L_40dab0

            mov RDI,QWORD PTR [RSP+56]
            mov EDX,R12D
            mov ESI,2
            mov QWORD PTR [RSP+296],RAX
            call .L_40dae0
.L_42e1f9:

            mov RDX,QWORD PTR [RSP+40]
            mov QWORD PTR [RDX],RAX
            jmp .L_42d8f9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e210:

            lea RSI,QWORD PTR [RBX+88]
            mov RDI,R15
.L_42e217:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_42e21c:

            jmp .L_42deb6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e228:

            test RDX,RDX
            je .L_42e251

            cmp RDX,1
            jne .L_42e340

            movzx EAX,BYTE PTR [RSP+272]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RSP+192]
.L_42e251:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+256]
            jmp .L_42de91
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e270:

            test RDX,RDX
            je .L_42e299

            cmp RDX,1
            jne .L_42e326

            movzx EAX,BYTE PTR [RSP+240]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RSP+192]
.L_42e299:

            mov QWORD PTR [RSP+200],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+224]
            jmp .L_42dfdf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e2b8:

            cmp BYTE PTR [RDI],2
            je .L_42e3e0
.L_42e2c1:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RAX,EBX
            add EBX,1
            mov QWORD PTR [RCX+RAX*8],RDI
.L_42e2d0:

            add RBP,1
            jmp .L_42dcf8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e2e0:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+R13*8]
            movzx EDX,BYTE PTR [RAX]
            cmp EDX,3
            je .L_42e35a

            cmp EDX,20
            je .L_42e35a

            cmp EBP,DWORD PTR [RSP+32]
            jne .L_42d97e

            jmp .L_42e311
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e308:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+R13*8]
.L_42e311:

            mov RCX,QWORD PTR [RSP+16]
            movsxd RDX,R12D
            add R12D,1
            mov QWORD PTR [RCX+RDX*8],RAX
            jmp .L_42d955
.L_42e326:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_42e299
.L_42e340:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+264]
            mov RDI,QWORD PTR [RSP+192]
            jmp .L_42e251
.L_42e35a:

            lea EAX,DWORD PTR [R13+1]
            jmp .L_42d95b
.L_42e363:

            mov EAX,DWORD PTR [RSP+124]
            mov R15D,EBP
            mov DWORD PTR [RSP+8],EAX
            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [RSP+40],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+48],RAX
            jmp .L_42d85b
.L_42e388:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+RBP*8]
            mov QWORD PTR [RSP+32],RAX
            movzx EAX,BYTE PTR [RAX]
            cmp EAX,2
            je .L_42e42f

            cmp EAX,5
            je .L_42e43d
.L_42e3ab:

            test R13,R13
            je .L_42e3c5

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R13
.L_42e3b8:

            call .L_40e910

            test AL,AL
            jne .L_42d906
.L_42e3c5:

            cmp R15D,R14D
            jne .L_42d8c2

            mov R13,QWORD PTR [RSP+32]
            jmp .L_42d906

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3e0:

            mov RAX,QWORD PTR [RAX+RBP*8]
            cmp BYTE PTR [RAX],2
            jne .L_42e2c1

            call .L_40f430

            jmp .L_42e2d0
.L_42e3f7:

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+96]
            mov RSI,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RAX+R14*8]
            call .L_42a350

            mov QWORD PTR [RSP+24],RAX
            mov EAX,DWORD PTR [RSP+40]
            cmp DWORD PTR [RSP+128],EAX
            je .L_42e46a
.L_42e421:

            cmp R15D,EBP
            jne .L_42d830

            jmp .L_42d852
.L_42e42f:

            mov QWORD PTR [RSP+32],0
            jmp .L_42e3ab
.L_42e43d:

            mov RAX,QWORD PTR [RSP+32]
            cmp WORD PTR [RAX+6],1
            jbe .L_42e3ab

            mov RAX,QWORD PTR [RAX+8]
            mov ECX,0
            mov RAX,QWORD PTR [RAX]
            cmp BYTE PTR [RAX],2
            cmovne RCX,RAX
            mov QWORD PTR [RSP+32],RCX
            jmp .L_42e3ab
.L_42e46a:

            mov ECX,DWORD PTR [RSP+8]
            test ECX,ECX
            jle .L_42e421

            mov EAX,DWORD PTR [RSP+124]
            test EAX,EAX
            jle .L_42e421

            mov RDI,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+48]
            mov EDX,DWORD PTR [R8]
            cmp DWORD PTR [RDI],EDX
            jne .L_42e421

            lea EDX,DWORD PTR [RAX-1]
            sub ECX,1
            mov EAX,1
            add RCX,1
            add RDX,1
            jmp .L_42e4b3
.L_42e4a0:

            cmp RAX,RDX
            je .L_42e4bb

            mov ESI,DWORD PTR [R8+RAX*4]
            add RAX,1
            cmp ESI,DWORD PTR [RDI+RAX*4-4]
            jne .L_42e4bb
.L_42e4b3:

            cmp RAX,RCX
            mov R9D,EAX
            jne .L_42e4a0
.L_42e4bb:

            mov DWORD PTR [RSP+8],R9D
            jmp .L_42d85b
.L_42e4c5:

            call __stack_chk_fail@PLT
.L_42e4ca:

            mov RDI,QWORD PTR [RSP+192]
            add R15,16
            cmp RDI,R15
            je .L_42e4e0

            call _ZdlPv@PLT
.L_42e4e0:

            call _ZSt9terminatev@PLT
.L_42e4e5:

            mov RBP,RAX
.L_42e4e8:

            mov RDI,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+160]
            add RDI,16
            call .L_411ee0

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_42e506:

            mov RDI,QWORD PTR [RSP+256]
            add RBP,16
            mov R12,RAX
            cmp RDI,RBP
            je .L_42e51f

            call _ZdlPv@PLT
.L_42e51f:

            mov RBP,R12
.L_42e522:

            mov RDI,RBX
            call .L_40c160

            jmp .L_42e4e8
.L_42e52c:

            mov RBP,RAX
            jmp .L_42e522
.L_42e531:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            jmp .L_42e4e8
.L_42e53f:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+296],RAX
            mov RAX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+RAX*1+296],RCX
.L_42e56d:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+408],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            jmp .L_42e4e8
.L_42e58a:

            mov RBP,RAX
            jmp .L_42e56d
.L_42e58f:

            jmp .L_42e4ca
.L_42e594:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e5a0:

            mov ECX,8
            jmp .L_42d770
.L_42e5aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e5b0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov RBX,RSI
            sub RSP,80
.L_42e5c5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp EDX,1
            je .L_42e6d0

            mov ESI,ECX
            and ESI,1
            jne .L_42e740

            mov EDX,DWORD PTR [RBX+24]
            test EDX,EDX
            jle .L_42e640

            mov RCX,QWORD PTR [RBX+16]
            xor EBP,EBP
            jmp .L_42e613
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e600:

            movzx ESI,WORD PTR [RAX+2]
            lea EAX,DWORD PTR [RBP+1]
            add RBP,1
            add ESI,1
            cmp DWORD PTR [RBX+24],EAX
            jle .L_42e640
.L_42e613:

            lea R14,QWORD PTR [RBP*4]
            lea RAX,QWORD PTR [RCX+R14*1]
            movzx EDX,WORD PTR [RAX]
            cmp EDX,ESI
            jle .L_42e600

            mov ECX,R12D
            sub EDX,1
            mov RDI,R13
.L_42e62f:

            call .L_42c6b0

            mov RCX,QWORD PTR [RBX+16]
            lea RAX,QWORD PTR [RCX+R14*1]
            jmp .L_42e600
          .byte 0x66
          .byte 0x90
.L_42e640:

            mov EAX,DWORD PTR [RBX+40]
            test EAX,EAX
            jle .L_42e698

            mov RCX,QWORD PTR [RBX+32]
            xor EBP,EBP
            jmp .L_42e662
          .byte 0x90
.L_42e650:

            mov ESI,DWORD PTR [RAX+4]
            lea EAX,DWORD PTR [RBP+1]
            add RBP,1
            add ESI,1
            cmp DWORD PTR [RBX+40],EAX
            jle .L_42e690
.L_42e662:

            lea R14,QWORD PTR [RBP*8]
            lea RAX,QWORD PTR [RCX+R14*1]
            mov EDX,DWORD PTR [RAX]
            cmp EDX,ESI
            jle .L_42e650

            mov ECX,R12D
            sub EDX,1
            mov RDI,R13
            call .L_42c6b0

            mov RCX,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RCX+R14*1]
            jmp .L_42e650
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e690:

            cmp ESI,1114111
            jg .L_42e6a8
.L_42e698:

            mov ECX,R12D
            mov EDX,1114111
            mov RDI,R13
            call .L_42c6b0
.L_42e6a8:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42e7ac

            add RSP,80
.L_42e6c0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e6d0:

            mov ESI,DWORD PTR [RSI+24]
            xor R14D,R14D
            xor EBP,EBP
            test ESI,ESI
            jle .L_42e705

            nop
            nop
            nop
            nop
.L_42e6e0:

            mov RAX,QWORD PTR [RBX+16]
            mov ECX,R12D
            mov RDI,R13
            add EBP,1
            add RAX,R14
            add R14,4
            movzx EDX,WORD PTR [RAX+2]
            movzx ESI,WORD PTR [RAX]
            call .L_42c6b0

            cmp DWORD PTR [RBX+24],EBP
            jg .L_42e6e0
.L_42e705:

            mov ECX,DWORD PTR [RBX+40]
            xor R14D,R14D
            xor EBP,EBP
            test ECX,ECX
            jle .L_42e6a8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e718:

            mov RAX,QWORD PTR [RBX+32]
            mov ECX,R12D
            mov RDI,R13
            add EBP,1
            add RAX,R14
            add R14,8
            mov EDX,DWORD PTR [RAX+4]
            mov ESI,DWORD PTR [RAX]
            call .L_42c6b0

            cmp DWORD PTR [RBX+40],EBP
            jg .L_42e718

            jmp .L_42e6a8
.L_42e740:

            mov RBP,RSP
            mov RDI,RBP
            call .L_40d230
.L_42e74b:

            mov ECX,R12D
            mov EDX,1
            mov RSI,RBX
            mov RDI,RBP
.L_42e759:

            call .L_42e5b0

            test R12B,4
            je .L_42e798

            and R12D,2048
            jne .L_42e798
.L_42e76d:

            mov RDI,RBP
            call .L_40f100

            mov RSI,RBP
            mov RDI,R13
            call .L_40ee80

            mov RSI,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+16]
            call .L_411ee0

            jmp .L_42e6a8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e798:

            mov EDX,10
            mov ESI,10
            mov RDI,RBP
            call .L_40eba0
.L_42e7aa:

            jmp .L_42e76d
.L_42e7ac:

            call __stack_chk_fail@PLT
.L_42e7b1:

            mov RSI,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call .L_411ee0

            mov RDI,RBX
.L_42e7c5:

            call _Unwind_Resume@PLT
.L_42e7ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e7d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,88
.L_42e7e1:

            mov EDX,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp EDX,1
            jle .L_42e910

            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            cmp BYTE PTR [RAX],92
            jne .L_42e910

            mov R14,RCX
            movsx ECX,BYTE PTR [RAX+1]
            mov R12D,ESI
            mov ESI,ECX
            mov DWORD PTR [RSP+12],ECX
            and ESI,4294967263
            cmp SIL,80
            jne .L_42e910

            xor R13D,R13D
            cmp ECX,80
            mov RSI,RBX
            setne R13B
            add RAX,2
            sub EDX,2
            movdqu XMM0,XMMWORD PTR [RDI]
            lea R13D,DWORD PTR [R13+R13*1-1]
            mov DWORD PTR [RDI+8],EDX
            mov QWORD PTR [RDI],RAX
            lea RDI,QWORD PTR [RSP+12]
            mov RDX,R14
            mov QWORD PTR [RSP+32],0
            mov DWORD PTR [RSP+40],0
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_429d70

            test EAX,EAX
            je .L_42e975

            cmp DWORD PTR [RSP+12],123
            je .L_42e980

            mov RDX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RBX]
            lea R15,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RDX+2]
            mov RCX,RAX
            sub RCX,RSI
            mov QWORD PTR [RSP+32],RSI
            mov EDI,ECX
            mov DWORD PTR [RSP+40],ECX
.L_42e8a4:

            sub RAX,RDX
            test EDI,EDI
            mov DWORD PTR [RSP+24],EAX
            jle .L_42e8cc

            mov RAX,QWORD PTR [RSP+32]
            cmp BYTE PTR [RAX],94
            jne .L_42e8cc

            add RAX,1
            sub EDI,1
            neg R13D
            mov QWORD PTR [RSP+32],RAX
            mov DWORD PTR [RSP+40],EDI
.L_42e8cc:

            lea RAX,QWORD PTR [RIP+.L_42f8c4]
            lea RSI,QWORD PTR [RSP+48]
            mov RDI,R15
            mov DWORD PTR [RSP+56],3
            mov QWORD PTR [RSP+48],RAX
            call .L_414b80

            test AL,AL
            lea RSI,QWORD PTR [RIP+.L_64a2e0]
            je .L_42e940
.L_42e8f8:

            mov ECX,R12D
            mov EDX,R13D
            mov RDI,RBP
            call .L_42e5b0

            xor EAX,EAX
            jmp .L_42e915
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e910:

            mov EAX,2
.L_42e915:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42e9f6

            add RSP,88
.L_42e92d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e940:

            mov EDX,DWORD PTR [RIP+.L_438360]
            lea RSI,QWORD PTR [RIP+.L_647760]
            mov RDI,R15
            call .L_429cc0

            test RAX,RAX
            mov RSI,RAX
            jne .L_42e8f8
.L_42e95d:

            mov RAX,QWORD PTR [RSP+16]
            mov DWORD PTR [R14],4
            mov QWORD PTR [R14+8],RAX
            mov EAX,DWORD PTR [RSP+24]
            mov DWORD PTR [R14+16],EAX
.L_42e975:

            mov EAX,1
            jmp .L_42e915
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e980:

            xor EDX,EDX
            mov ESI,125
            mov RDI,RBX
            call .L_414c30

            movsxd RDX,EAX
            cmp RDX,QWORD PTR [RIP+.L_415340]
            je .L_42e9e0

            mov RDX,QWORD PTR [RBX]
            mov DWORD PTR [RSP+40],EAX
            add EAX,1
            sub DWORD PTR [RBX+8],EAX
            movsxd RCX,EAX
            lea R15,QWORD PTR [RSP+32]
            mov RSI,R14
            mov QWORD PTR [RSP+32],RDX
            add RDX,RCX
            mov RDI,R15
            mov QWORD PTR [RBX],RDX
            call .L_429df0

            test AL,AL
            je .L_42e975

            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+40]
            jmp .L_42e8a4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e9e0:

            lea RDI,QWORD PTR [RSP+16]
            mov RSI,R14
            call .L_429df0

            test AL,AL
            je .L_42e975

            jmp .L_42e95d
.L_42e9f6:

            call __stack_chk_fail@PLT
.L_42e9fb:

            nop
            nop
            nop
            nop
            nop
.L_42ea00:

            test ESI,1024
            je .L_42ea10

            jmp .L_42e7d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ea10:

            mov EAX,2
            ret 
.L_42ea16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ea20:

            push R15
            push R14
            push R13
            push R12
            mov R12,RCX
            push RBP
            push RBX
            sub RSP,104
.L_42ea31:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+8]
            movdqu XMM0,XMMWORD PTR [RSI]
            test EAX,EAX
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_42ea5c

            mov RBX,RSI
            mov RAX,QWORD PTR [RSI]
            cmp BYTE PTR [RAX],91
            je .L_42eaa0
.L_42ea5c:

            mov DWORD PTR [R12],1
            mov QWORD PTR [R12+8],0
            xor EAX,EAX
            mov DWORD PTR [R12+16],0
.L_42ea78:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42ee35

            add RSP,104
.L_42ea90:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42eaa0:

            mov R15D,DWORD PTR [RDI]
            mov RBP,RDI
            mov EDI,40
            mov R14,RDX
.L_42eaae:

            call _Znwm@PLT
.L_42eab3:

            and R15D,4294967294
            mov ESI,20
            mov RDI,RAX
            mov EDX,R15D
            mov R13,RAX
.L_42eac5:

            call .L_40c9d0
.L_42eaca:

            mov EDI,64
.L_42eacf:

            call _Znwm@PLT
.L_42ead4:

            mov RDI,RAX
            mov R15,RAX
.L_42eada:

            call .L_40d230
.L_42eadf:

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13+32],R15
            mov BYTE PTR [RSP+19],0
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov EDX,DWORD PTR [RBX+8]
            lea ECX,DWORD PTR [RDX-1]
            test ECX,ECX
            mov DWORD PTR [RBX+8],ECX
            jle .L_42ec65

            cmp BYTE PTR [RAX+1],94
            je .L_42edc0
.L_42eb0d:

            mov RAX,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RSP+48]
            mov ESI,1
            lea R15,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RBP]
            mov QWORD PTR [RSP+8],RDI
            movzx EDX,BYTE PTR [RAX]
            cmp DL,45
            jne .L_42eb35

            test SIL,SIL
            je .L_42eba5
.L_42eb35:

            cmp ECX,2
            jle .L_42eb43

            cmp DL,91
            je .L_42ece0
.L_42eb43:

            cmp DWORD PTR [RBX+8],2
            jle .L_42eb52

            cmp BYTE PTR [RAX],92
            je .L_42ec90
.L_42eb52:

            mov ESI,R8D
            mov RDI,RBX
.L_42eb58:

            call .L_42aa20

            test RAX,RAX
            je .L_42ec20

            mov EDX,DWORD PTR [RAX+8]
            mov RDI,QWORD PTR [R13+32]
            mov RSI,RAX
            mov ECX,DWORD PTR [RBP]
            call .L_42e5b0
.L_42eb78:

            mov ECX,DWORD PTR [RBX+8]
            test ECX,ECX
            jle .L_42ec65
.L_42eb83:

            mov RAX,QWORD PTR [RBX]
            movzx EDX,BYTE PTR [RAX]
            mov RSI,RAX
            cmp DL,93
            je .L_42ed90

            xor ESI,ESI
            cmp DL,45
            mov R8D,DWORD PTR [RBP]
            jne .L_42eb35

            test SIL,SIL
            jne .L_42eb35
.L_42eba5:

            mov EDX,R8D
            and EDX,512
            jne .L_42eb43

            cmp ECX,1
            je .L_42ebbe

            cmp BYTE PTR [RAX+1],93
            je .L_42eb43

            lea EDX,DWORD PTR [RCX-1]
.L_42ebbe:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RSI,QWORD PTR [RSP+64]
            lea RDI,QWORD PTR [RSP+44]
            add RAX,1
            movaps XMMWORD PTR [RSP+64],XMM0
            mov DWORD PTR [RSP+72],EDX
            mov RDX,R12
            mov QWORD PTR [RSP+64],RAX
            call .L_429d70

            test EAX,EAX
            js .L_42ec08

            mov RDX,QWORD PTR [RBX]
            add EAX,1
            mov DWORD PTR [R12],4
            mov DWORD PTR [R12+16],EAX
            mov QWORD PTR [R12+8],RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ec08:

            mov RDI,R13
            call .L_40f430

            xor EAX,EAX
            jmp .L_42ea78
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec20:

            mov RCX,QWORD PTR [RSP+8]
            mov R8,R12
            mov RDX,R15
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP+64],0
            call .L_42b5a0

            test AL,AL
            je .L_42ec08

            mov ECX,DWORD PTR [RBP]
            mov RDI,QWORD PTR [R13+32]
            mov EDX,DWORD PTR [RSP+68]
            mov ESI,DWORD PTR [RSP+64]
            or ECX,4
            call .L_42c6b0

            mov ECX,DWORD PTR [RBX+8]
            test ECX,ECX
            jg .L_42eb83
.L_42ec65:

            test ECX,ECX
            jne .L_42ed8d

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [R12],5
            mov QWORD PTR [R12+8],RAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [R12+16],EAX
            jmp .L_42ec08
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ec90:

            movzx EAX,BYTE PTR [RAX+1]
            and EAX,4294967263
            cmp AL,80
            jne .L_42eb52

            test R8D,1024
            je .L_42eb52

            mov RDX,QWORD PTR [R13+32]
            mov RCX,R12
            mov ESI,R8D
            mov RDI,RBX
            call .L_42e7d0

            test EAX,EAX
            je .L_42eb78

            cmp EAX,1
            je .L_42ec08

            mov R8D,DWORD PTR [RBP]
            jmp .L_42eb52
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ece0:

            cmp BYTE PTR [RAX+1],58
            jne .L_42eb43

            movsxd RCX,ECX
            lea RDX,QWORD PTR [RAX+2]
            lea RSI,QWORD PTR [RAX+RCX*1-2]
            cmp RDX,RSI
            ja .L_42eb43

            lea RCX,QWORD PTR [RSI+1]
            jmp .L_42ed15
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ed08:

            add RDX,1
            cmp RCX,RDX
            je .L_42eb43
.L_42ed15:

            cmp BYTE PTR [RDX],58
            jne .L_42ed08

            cmp BYTE PTR [RDX+1],93
            jne .L_42ed08

            cmp RDX,RSI
            ja .L_42eb43

            mov RSI,QWORD PTR [R13+32]
            add RDX,2
            mov RDI,R15
            sub RDX,RAX
            mov DWORD PTR [RSP+20],R8D
            mov QWORD PTR [RSP+64],RAX
            mov DWORD PTR [RSP+72],EDX
            mov EDX,DWORD PTR [RIP+.L_42fb50]
            mov QWORD PTR [RSP+24],RSI
            lea RSI,QWORD PTR [RIP+.L_647080]
            call .L_429cc0

            test RAX,RAX
            mov R8D,DWORD PTR [RSP+20]
            je .L_42ee0b

            movsxd RCX,DWORD PTR [RSP+72]
            mov EDX,DWORD PTR [RAX+8]
            mov RSI,RAX
            add QWORD PTR [RBX],RCX
            sub DWORD PTR [RBX+8],ECX
            mov ECX,R8D
            mov RDI,QWORD PTR [RSP+24]
            call .L_42e5b0

            jmp .L_42eb78
.L_42ed8d:

            mov RSI,QWORD PTR [RBX]
.L_42ed90:

            add RSI,1
            sub ECX,1
            cmp BYTE PTR [RSP+19],0
            mov QWORD PTR [RBX],RSI
            mov DWORD PTR [RBX+8],ECX
            mov RDI,QWORD PTR [R13+32]
            jne .L_42ee00
.L_42eda8:

            mov ESI,DWORD PTR [RBP+44]
            call .L_40efa0

            mov QWORD PTR [R14],R13
            mov EAX,1
            jmp .L_42ea78
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42edc0:

            add RAX,2
            lea ECX,DWORD PTR [RDX-2]
            mov QWORD PTR [RBX],RAX
            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX+8],ECX
            test AL,4
            je .L_42edd9

            test AH,8
            je .L_42edee
.L_42edd9:

            mov EDX,10
            mov ESI,10
            mov RDI,R15
            call .L_40eba0

            mov ECX,DWORD PTR [RBX+8]
.L_42edee:

            test ECX,ECX
            mov BYTE PTR [RSP+19],1
            jg .L_42eb0d

            jmp .L_42ec65
.L_42ee00:

            call .L_40f100

            mov RDI,QWORD PTR [R13+32]
            jmp .L_42eda8
.L_42ee0b:

            mov RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [R12],4
            mov RDI,R13
            mov QWORD PTR [R12+8],RAX
            mov EAX,DWORD PTR [RSP+72]
            mov DWORD PTR [R12+16],EAX
            call .L_40f430

            xor EAX,EAX
            jmp .L_42ea78
.L_42ee35:

            call __stack_chk_fail@PLT
.L_42ee3a:

            mov RBX,RAX
            mov RDI,R15
            mov ESI,64
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42ee52:

            mov RBX,RAX
            mov RDI,R13
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42ee6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee70:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov R13D,ESI
            sub RSP,200
.L_42ee87:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+96]
            test RDX,RDX
            mov DWORD PTR [RSP+128],ESI
            movdqu XMM0,XMMWORD PTR [RDI]
            cmove R12,RAX
            and ESI,32
            mov DWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],0
            mov DWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+152],R12
            movups XMMWORD PTR [RSP+136],XMM0
            mov QWORD PTR [RSP+160],0
            mov DWORD PTR [RSP+168],0
            je .L_42eff0

            mov EDI,32
            lea RBP,QWORD PTR [RSP+128]
            movaps XMMWORD PTR [RSP+48],XMM0
            mov DWORD PTR [RSP+172],255
.L_42ef20:

            call _Znwm@PLT

            mov R14,RAX
            lea RBX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [R14+8],0
            mov BYTE PTR [R14+16],0
            mov RSI,R14
            mov QWORD PTR [R14],RAX
            mov RDI,RBX
            lea RBP,QWORD PTR [RSP+128]
            call .L_42aab0

            mov RBX,QWORD PTR [R12+24]
            test RBX,RBX
            je .L_42ef7c

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_42ef6f

            call _ZdlPv@PLT
.L_42ef6f:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_42ef7c:

            mov RAX,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [R14]
            and R13D,2
            mov QWORD PTR [R12+24],R14
            mov EDX,EAX
            mov QWORD PTR [RSP+48],RCX
            mov DWORD PTR [RSP+56],EAX
            jne .L_42f00a
.L_42ef99:

            lea RAX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+128]
            lea R14,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+80]
            lea RBX,QWORD PTR [RIP+.L_42f9ec]
            xor R10D,R10D
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42efc8:

            test EDX,EDX
            jle .L_42f150
.L_42efd0:

            mov RDI,QWORD PTR [RSP+48]
            movzx EAX,BYTE PTR [RDI]
            sub EAX,36
            cmp AL,88
            ja .L_42f380

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RBX+RAX*4]
            add RAX,RBX
            jmp RAX
          .byte 0x90
.L_42eff0:

            and R13D,2
            mov DWORD PTR [RSP+172],1114111
            movaps XMMWORD PTR [RSP+48],XMM0
            mov EDX,DWORD PTR [RSP+56]
            je .L_42ef99
.L_42f00a:

            test EDX,EDX
            lea RBP,QWORD PTR [RSP+128]
            jle .L_42f150

            lea RBX,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+80]
            lea RBP,QWORD PTR [RSP+128]
            jmp .L_42f04c
          .byte 0x66
          .byte 0x90
.L_42f030:

            mov ESI,DWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_42a8a0

            test AL,AL
            je .L_42f05e

            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            jle .L_42f150
.L_42f04c:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,R13
            call .L_429d70

            test EAX,EAX
            jns .L_42f030
.L_42f05e:

            xor R12D,R12D
.L_42f061:

            mov RDI,RBP
            call .L_42a050

            mov RBX,QWORD PTR [RSP+120]
            test RBX,RBX
            je .L_42f091

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_42f084

            call _ZdlPv@PLT
.L_42f084:

            mov ESI,32
            mov RDI,RBX
            call _ZdlPvm@PLT
.L_42f091:

            mov RCX,QWORD PTR [RSP+184]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_42f7df

            add RSP,200
.L_42f0b2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f0c0:

            mov ESI,8
.L_42f0c5:

            mov ECX,DWORD PTR [RSP+128]
            lea RAX,QWORD PTR [RDI+1]
            lea R8D,DWORD PTR [RDX-1]
            movdqa XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],RAX
            mov DWORD PTR [RSP+56],R8D
            and ECX,512
            movaps XMMWORD PTR [RSP+80],XMM0
            je .L_42f11c

            xor ECX,ECX
            test R8D,R8D
            je .L_42f113

            cmp BYTE PTR [RDI+1],63
            jne .L_42f113

            lea RAX,QWORD PTR [RDI+2]
            sub EDX,2
            mov ECX,1
            mov DWORD PTR [RSP+56],EDX
            mov QWORD PTR [RSP+48],RAX
.L_42f113:

            test R10D,R10D
            jg .L_42f6a4
.L_42f11c:

            sub RAX,RDI
            mov RDX,R13
            mov RDI,RBP
            mov DWORD PTR [RSP+88],EAX
            call .L_42cfb0

            test AL,AL
            je .L_42f05e

            mov EDX,DWORD PTR [RSP+56]
            mov R11,QWORD PTR [RSP+80]
            mov R10D,DWORD PTR [RSP+88]
            test EDX,EDX
            jg .L_42efd0

            nop
            nop
            nop
            nop
.L_42f150:

            mov RDI,RBP
            call .L_42d710

            mov R12,RAX
            jmp .L_42f061
.L_42f160:

            mov ESI,7
            jmp .L_42f0c5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f170:

            mov RDI,RBP
            call .L_42d650

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f180:

            test AL,AL
            je .L_42f05e

            mov EAX,DWORD PTR [RSP+56]
            add QWORD PTR [RSP+48],1
            xor R10D,R10D
            xor R11D,R11D
            lea EDX,DWORD PTR [RAX-1]
            mov DWORD PTR [RSP+56],EDX
            jmp .L_42efc8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f1a8:

            mov EAX,DWORD PTR [RSP+128]
            test AH,2
            je .L_42f1c3

            cmp EDX,1
            je .L_42f1c3

            cmp BYTE PTR [RDI+1],63
            je .L_42f642
.L_42f1c3:

            test AH,16
            je .L_42f3a8

            mov RDI,RBP
            call .L_42a790

            jmp .L_42f180
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f1e0:

            mov RDI,RBP
            call .L_42a690

            jmp .L_42f180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f1f0:

            mov RDI,RBP
            call .L_42d450

            jmp .L_42f180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f200:

            movdqa XMM0,XMMWORD PTR [RSP+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            cmp BYTE PTR [RDI],123
            je .L_42f568
.L_42f219:

            mov ESI,123
            mov RDI,RBP
            call .L_42a8a0

            jmp .L_42f180
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f230:

            mov RDI,RBP
            call .L_42a650

            jmp .L_42f180
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f240:

            mov ESI,DWORD PTR [RSP+128]
            test ESI,256
            je .L_42f270

            cmp EDX,1
            je .L_42f270

            movzx EAX,BYTE PTR [RDI+1]
            mov ECX,EAX
            and ECX,4294967263
            cmp CL,66
            je .L_42f480

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f270:

            test ESI,512
            jne .L_42f3d0

            cmp EDX,1
            je .L_42f290

            movzx EAX,BYTE PTR [RDI+1]
.L_42f285:

            and EAX,4294967263
            cmp AL,80
            je .L_42f4b0
.L_42f290:

            mov RDI,R14
            call .L_42aa20

            test RAX,RAX
            mov R15,RAX
            je .L_42f540

            mov EAX,DWORD PTR [RSP+128]
            mov EDI,40
            and EAX,4294967294
            mov DWORD PTR [RSP+8],EAX
            call _Znwm@PLT
.L_42f2bc:

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,20
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_42f2cd:

            call .L_40c9d0
.L_42f2d2:

            mov EDI,64
.L_42f2d7:

            call _Znwm@PLT
.L_42f2dc:

            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
.L_42f2e4:

            call .L_40d230
.L_42f2e9:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R15
            mov EDX,DWORD PTR [R15+8]
            mov ECX,DWORD PTR [RSP+128]
            mov QWORD PTR [RAX+32],RDI
.L_42f305:

            call .L_42e5b0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_42a4e0

            jmp .L_42f346
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f320:

            mov RCX,R12
            mov RDX,R13
            mov RSI,R14
            mov RDI,RBP
            call .L_42ea20

            test AL,AL
            je .L_42f05e

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_42a4e0
.L_42f346:

            test AL,AL
            je .L_42f05e

            mov EDX,DWORD PTR [RSP+56]
.L_42f352:

            xor R10D,R10D
            xor R11D,R11D
            jmp .L_42efc8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f360:

            mov ESI,9
            jmp .L_42f0c5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f370:

            mov RDI,RBP
            call .L_42a6d0

            jmp .L_42f180
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f380:

            mov RDX,R12
            mov RSI,R14
            mov RDI,R13
            call .L_429d70

            test EAX,EAX
            js .L_42f05e
.L_42f396:

            mov ESI,DWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_42a8a0

            jmp .L_42f346
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f3a8:

            mov RSI,R13
            mov RDI,RBP
            mov QWORD PTR [RSP+80],0
            mov DWORD PTR [RSP+88],0
            call .L_42a7f0

            jmp .L_42f180
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f3d0:

            cmp EDX,1
            je .L_42f290

            movzx EAX,BYTE PTR [RDI+1]
            cmp AL,65
            je .L_42f652

            cmp AL,122
            je .L_42f692

            cmp AL,67
            je .L_42f6be

            cmp AL,81
            jne .L_42f285

            sub EDX,2
            add RDI,2
            test EDX,EDX
            mov QWORD PTR [RSP+48],RDI
            mov DWORD PTR [RSP+56],EDX
            jne .L_42f456

            jmp .L_42f352
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f420:

            mov RDX,R12
            mov RSI,R14
            mov RDI,R13
            call .L_429d70

            test EAX,EAX
            js .L_42f05e

            mov ESI,DWORD PTR [RSP+80]
            mov RDI,RBP
            call .L_42a8a0

            test AL,AL
            je .L_42f05e

            mov EDX,DWORD PTR [RSP+56]
            test EDX,EDX
            jle .L_42f352
.L_42f456:

            cmp EDX,1
            je .L_42f420

            mov RAX,QWORD PTR [RSP+48]
            cmp BYTE PTR [RAX],92
            jne .L_42f420

            cmp BYTE PTR [RAX+1],69
            jne .L_42f420

            add RAX,2
            sub EDX,2
            mov QWORD PTR [RSP+48],RAX
            mov DWORD PTR [RSP+56],EDX
            jmp .L_42f352
.L_42f480:

            xor ESI,ESI
            cmp AL,98
            mov RDI,RBP
            sete SIL
            call .L_42a670
.L_42f490:

            test AL,AL
            je .L_42f05e

            mov EAX,DWORD PTR [RSP+56]
            add QWORD PTR [RSP+48],2
            lea EDX,DWORD PTR [RAX-2]
            mov DWORD PTR [RSP+56],EDX
            jmp .L_42f352
          .byte 0x66
          .byte 0x90
.L_42f4b0:

            and ESI,4294967294
            mov EDI,40
            mov DWORD PTR [RSP+8],ESI
            call _Znwm@PLT
.L_42f4c1:

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,20
            mov RDI,RAX
            mov R15,RAX
.L_42f4d0:

            call .L_40c9d0
.L_42f4d5:

            mov EDI,64
.L_42f4da:

            call _Znwm@PLT
.L_42f4df:

            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_42f4e7:

            call .L_40d230
.L_42f4ec:

            mov ESI,DWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RSP+8]
            test ESI,1024
            mov QWORD PTR [R15+32],RDX
            je .L_42f523

            mov RCX,R12
            mov RDI,R14
.L_42f50a:

            call .L_42e7d0

            cmp EAX,1
            je .L_42f6d0

            jb .L_42f664

            cmp EAX,2
            jne .L_42f52b
.L_42f523:

            mov RDI,R15
            call .L_40f430
.L_42f52b:

            mov ESI,DWORD PTR [RSP+128]
            jmp .L_42f290
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f540:

            mov ECX,DWORD PTR [RSP+172]
            mov RDX,R12
            mov RSI,R13
            mov RDI,R14
            call .L_42b160

            test AL,AL
            jne .L_42f396

            jmp .L_42f05e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f568:

            mov RSI,QWORD PTR [RSP+24]
            add RDI,1
            sub EDX,1
            mov QWORD PTR [RSP+80],RDI
            mov RDI,R13
            mov DWORD PTR [RSP+88],EDX
            call .L_429eb0

            test AL,AL
            mov R15D,EAX
            je .L_42f219

            mov ESI,DWORD PTR [RSP+88]
            test ESI,ESI
            je .L_42f219

            mov RDI,QWORD PTR [RSP+80]
            cmp BYTE PTR [RDI],44
            je .L_42f6dd

            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+44],EAX
.L_42f5b2:

            cmp BYTE PTR [RDI],125
            jne .L_42f219

            mov R8D,DWORD PTR [RSP+128]
            lea RAX,QWORD PTR [RDI+1]
            lea ECX,DWORD PTR [RSI-1]
            mov QWORD PTR [RSP+80],RAX
            mov DWORD PTR [RSP+88],ECX
            and R8D,512
            mov QWORD PTR [RSP+48],RAX
            mov DWORD PTR [RSP+56],ECX
            je .L_42f678

            test ECX,ECX
            mov RDX,RAX
            jle .L_42f5f9

            cmp BYTE PTR [RAX],63
            je .L_42f67d
.L_42f5f9:

            xor R15D,R15D
.L_42f5fc:

            test R10D,R10D
            jg .L_42f730

            movzx R8D,R15B
.L_42f609:

            sub RDX,QWORD PTR [RSP+64]
            mov ESI,DWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RSP+64]
            mov RDI,RBP
            mov DWORD PTR [RSP+72],EDX
            mov EDX,DWORD PTR [RSP+44]
            call .L_42d090

            test AL,AL
            je .L_42f05e

            mov R11,QWORD PTR [RSP+64]
            mov R10D,DWORD PTR [RSP+72]
            mov EDX,DWORD PTR [RSP+56]
            jmp .L_42efc8
.L_42f642:

            mov RSI,R14
            mov RDI,RBP
            call .L_42b660

            jmp .L_42f346
.L_42f652:

            mov ESI,18
            mov RDI,RBP
            call .L_42a600

            jmp .L_42f490
.L_42f664:

            mov RSI,R15
            mov RDI,RBP
            call .L_42a4e0

            jmp .L_42f346
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f678:

            mov RDX,RAX
            jmp .L_42f609
.L_42f67d:

            lea RDX,QWORD PTR [RDI+2]
            sub ESI,2
            mov DWORD PTR [RSP+56],ESI
            mov QWORD PTR [RSP+48],RDX
            jmp .L_42f5fc
.L_42f692:

            mov ESI,19
            mov RDI,RBP
            call .L_42a600

            jmp .L_42f490
.L_42f6a4:

            sub RAX,R11
            mov DWORD PTR [R12],10
            mov QWORD PTR [R12+8],R11
            mov DWORD PTR [R12+16],EAX
            jmp .L_42f05e
.L_42f6be:

            mov ESI,13
            mov RDI,RBP
            call .L_42a600

            jmp .L_42f490
.L_42f6d0:

            mov RDI,R15
            call .L_40f430
.L_42f6d8:

            jmp .L_42f05e
.L_42f6dd:

            sub ESI,1
            lea RAX,QWORD PTR [RDI+1]
            test ESI,ESI
            mov DWORD PTR [RSP+88],ESI
            mov QWORD PTR [RSP+80],RAX
            je .L_42f219

            cmp BYTE PTR [RDI+1],125
            je .L_42f74a

            lea RSI,QWORD PTR [RSP+44]
            mov RDI,R13
            call .L_429eb0

            test AL,AL
            je .L_42f219

            mov ESI,DWORD PTR [RSP+88]
            test ESI,ESI
            je .L_42f219

            mov RDI,QWORD PTR [RSP+80]
            jmp .L_42f5b2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f730:

            sub RDX,R11
            mov DWORD PTR [R12],10
            mov QWORD PTR [R12+8],R11
            mov DWORD PTR [R12+16],EDX
            jmp .L_42f05e
.L_42f74a:

            mov DWORD PTR [RSP+44],4294967295
            mov RDI,RAX
            jmp .L_42f5b2
.L_42f75a:

            mov ESI,40
            mov RDI,R15
            mov RBX,RAX
            call _ZdlPvm@PLT
.L_42f76a:

            mov RDI,RBP
            call .L_42a050

            mov RBP,QWORD PTR [RSP+120]
            test RBP,RBP
            je .L_42f79b

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_42f78e

            call _ZdlPv@PLT
.L_42f78e:

            mov ESI,32
            mov RDI,RBP
            call _ZdlPvm@PLT
.L_42f79b:

            mov RDI,RBX
.L_42f79e:

            call _Unwind_Resume@PLT
.L_42f7a3:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,64
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_42f76a
.L_42f7b7:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,40
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_42f76a
.L_42f7cb:

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,64
            mov RBX,RAX
            call _ZdlPvm@PLT

            jmp .L_42f76a
.L_42f7df:

            call __stack_chk_fail@PLT
.L_42f7e4:

            mov RBX,RAX
            jmp .L_42f76a
.L_42f7e9:
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f7f0:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_42f820:
          .string "Bad call to ParseState::ParsePerlFlags"
          .zero 1
.L_42f848:
          .string "AddFoldedRange recurses too much."
.L_42f86a:
          .string "\n"
.L_42f86c:
          .string "basic_string::append"
.L_42f881:
          .string "re2/parse.cc"
.L_42f88e:
          .string ":"
.L_42f890:
          .string ": "
.L_42f893:
          .string "Bad hex digit "
.L_42f8a2:
          .string "Concat of "
.L_42f8ad:
          .string "RE2: unexpected op: "
.L_42f8c2:
          .string " "
.L_42f8c4:
          .string "Any"
.L_42f8c8:
          .long .L_42b340-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b2ee-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b2db-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b2c8-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b2b5-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b2a2-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b28f-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b27c-.L_42f8c8
          .long .L_42b345-.L_42f8c8
          .long .L_42b255-.L_42f8c8
.L_42f9ec:
          .long .L_42f1e0-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f1a8-.L_42f9ec
          .long .L_42f170-.L_42f9ec
          .long .L_42f160-.L_42f9ec
          .long .L_42f0c0-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f370-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f360-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f320-.L_42f9ec
          .long .L_42f240-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f230-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f380-.L_42f9ec
          .long .L_42f200-.L_42f9ec
          .long .L_42f1f0-.L_42f9ec
.L_42fb50:
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fb58:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fb70:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_42fb80:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fb88:
          .string "\t"
          .byte 0xd
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
.L_42fb90:
          .string "!"
          .byte 0x2f
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7e
          .byte 0x0
.L_42fba0:
          .string " "
          .byte 0x7e
          .byte 0x0
.L_42fba4:
          .string "a"
          .byte 0x7a
          .byte 0x0
.L_42fba8:
          .string "!"
          .byte 0x7e
          .byte 0x0
.L_42fbac:
          .string "0"
          .byte 0x39
          .byte 0x0
.L_42fbb0:
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
.L_42fbb8:
          .string "\t"
          .byte 0x9
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
.L_42fbc0:
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fbc8:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_42fbd0:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_42fbdc:
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fbe0:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
.L_42fbf0:
          .string "\t"
          .byte 0xa
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
.L_42fbfc:
          .string "0"
          .byte 0x39
          .byte 0x0
.L_42fc00:
          .string "[:alnum:]"
.L_42fc0a:
          .string "[:^alnum:]"
.L_42fc15:
          .string "[:alpha:]"
.L_42fc1f:

            pop RBX
            cmp BL,BYTE PTR [RSI+97]
            insb BYTE PTR [RDI],DX
            jo .L_42fc8e
          .byte 0x61
          .byte 0x3a
          .byte 0x5d
          .byte 0x0
.L_42fc2a:
          .string "[:ascii:]"
.L_42fc34:

            pop RBX
            cmp BL,BYTE PTR [RSI+97]
            jae .L_42fc9d
          .byte 0x69
          .byte 0x69
          .byte 0x3a
          .byte 0x5d
          .byte 0x0
.L_42fc3f:
          .string "[:blank:]"
.L_42fc49:
          .string "[:^blank:]"
.L_42fc54:
          .string "[:cntrl:]"
.L_42fc5e:
          .string "[:^cntrl:]"
.L_42fc69:
          .string "[:digit:]"
.L_42fc73:
          .string "[:^digit:]"
.L_42fc7e:
          .string "[:graph:]"
.L_42fc88:

            pop RBX
            cmp BL,BYTE PTR [RSI+103]
            jb .L_42fcef
.L_42fc8e:

            jo .L_42fcf8

            cmp BL,BYTE PTR [RBP]
.L_42fc93:

            pop RBX
            cmp CH,BYTE PTR [RDI+RBP*2+119]
            jb .L_42fcd5

            pop RBP
            add BYTE PTR [RBX+58],BL
            pop RSI
            insb BYTE PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            ja .L_42fd09
# WARNING: found overlapping blocks at address 2fa6d
.set .L_42fc9d, . - 7


            jb .L_42fce0
          .byte 0x5d
          .byte 0x0
.L_42fca8:
          .string "[:print:]"
.L_42fcb2:
          .string "[:^print:]"
.L_42fcbd:
          .string "[:punct:]"
.L_42fcc7:
          .string "[:^punct:]"
.L_42fcd2:
          .byte 0x5b
          .byte 0x3a
          .byte 0x73
.L_42fcd5:

            jo .L_42fd38
          .byte 0x63
          .byte 0x65
          .byte 0x3a
          .byte 0x5d
          .byte 0x0
.L_42fcdc:

            pop RBX
            cmp BL,BYTE PTR [RSI+115]
.L_42fce0:

            jo .L_42fd43
          .byte 0x63
          .byte 0x65
          .byte 0x3a
          .byte 0x5d
          .byte 0x0
.L_42fce7:
          .byte 0x5b
          .byte 0x3a
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x65
          .byte 0x72
          .byte 0x3a
.L_42fcef:

            pop RBP
            add BYTE PTR [RBX+58],BL
            pop RSI
            jne .L_42fd66
          .byte 0x70
          .byte 0x65
.L_42fcf8:

            jb .L_42fd34

            pop RBP
            add BYTE PTR [RBX+58],BL
            ja .L_42fd6f

            jb .L_42fd66

            cmp BL,BYTE PTR [RBP]
.L_42fd05:

            pop RBX
            cmp BL,BYTE PTR [RSI+119]
.L_42fd09:

            outsd DX,DWORD PTR [RSI]
          .byte 0x72
          .byte 0x64
          .byte 0x3a
          .byte 0x5d
          .byte 0x0
.L_42fd0f:
          .string "[:xdigit:]"
.L_42fd1a:
          .string "[:^xdigit:]"
.L_42fd26:
          .string "\\d"
.L_42fd29:
          .string "\\D"
.L_42fd2c:
          .string "\\s"
.L_42fd2f:
          .string "\\S"
.L_42fd32:
          .byte 0x5c
          .byte 0x77
.L_42fd34:

            add BYTE PTR [RDI+RDX*2],BL
.L_42fd38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fd40:

            push R12
            push RBP
.L_42fd43:

            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_42fd4e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_42fd6c

            test RDX,RDX
.L_42fd66:

            jne .L_42fdf7
.L_42fd6c:

            mov RBX,RDX
.L_42fd6f:

            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_42fdc0

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_42fdf0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_42fd94:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42fe03

            add RSP,16
.L_42fdb4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fdc0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_42fdd9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_42fd94
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fdf0:

            test RBX,RBX
            je .L_42fd94

            jmp .L_42fdd9
.L_42fdf7:

            lea RDI,QWORD PTR [RIP+.L_4313c8]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_42fe03:

            call __stack_chk_fail@PLT
.L_42fe08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe10:

            push R15
            push R14
            mov EDX,1
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_42fe26:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI]
            mov ECX,EAX
            and ECX,7
            shl RDX,CL
            test DL,151
            jne .L_42fe7e

            test DL,72
            mov RBX,RSI
            je .L_42feb0

            mov RDI,QWORD PTR [RDI+32]
            mov ESI,1
            jmp .L_42fe65
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fe60:

            test DL,72
            je .L_42feb0
.L_42fe65:

            shr EAX,3
            mov RDX,RSI
            lea RBX,QWORD PTR [RDI+RAX*8]
            mov EAX,DWORD PTR [RBX]
            mov ECX,EAX
            and ECX,7
            shl RDX,CL
            test DL,151
            je .L_42fe60
.L_42fe7e:

            xor EAX,EAX
.L_42fe80:

            mov RSI,QWORD PTR [RSP+504]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4303b0

            add RSP,520
.L_42fe9e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42feb0:

            and EDX,32
            jne .L_430100

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_42ff49:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_42ff4e:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBP+72]
            lea R14,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+128],R14
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBP+104]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+128],R15
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],0
            mov BYTE PTR [RSP+216],0
.L_430008:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_43000d:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_431419]
            mov EDX,11
.L_43001d:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_431425]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,242
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_431427]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_430059:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_4313f8]
            mov EDX,30
.L_430069:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,DWORD PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            and ESI,7
            call _ZNSolsEi@PLT
.L_43007c:

            cmp BYTE PTR [RSP+112],0
            je .L_430110
.L_430087:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+128],R15
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_4300bd

            call _ZdlPv@PLT
.L_4300bd:

            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],R14
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RBX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RBX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_42fe80
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430100:

            mov EAX,1
            jmp .L_42fe80
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430110:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_431417]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_43031f

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_430210

            lea RDI,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_430181:

            call .L_42fd40

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RAX,16
            cmp RSI,RAX
            je .L_430330

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_4302db

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4302ea

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_4301e0:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_4302a1

            jmp .L_4302a6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430210:

            lea RDI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+48],RAX
            call .L_42fd40
.L_430228:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RAX,16
            cmp RSI,RAX
            je .L_43035d

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+64]
            cmp RDI,RCX
            je .L_4302fd

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_43030c

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_430282:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_4302a6
.L_4302a1:

            call _ZdlPv@PLT
.L_4302a6:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_4302b5:

            call write@PLT
.L_4302ba:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_430087

            call _ZdlPv@PLT

            jmp .L_430087
.L_4302db:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4302ea:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4301e0
.L_4302fd:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_43030c:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_430282
.L_43031f:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
.L_430326:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_43032b:

            jmp .L_4302a6
.L_430330:

            test RDX,RDX
            je .L_43034a

            cmp RDX,1
            je .L_43039d

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_43034a:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4301e0
.L_43035d:

            test RDX,RDX
            je .L_430377

            cmp RDX,1
            je .L_43038a

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_430377:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_430282
.L_43038a:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_430377
.L_43039d:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_43034a
.L_4303b0:

            call __stack_chk_fail@PLT
.L_4303b5:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
.L_4303c4:

            call _Unwind_Resume@PLT
.L_4303c9:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4303dc:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_4303ef

            call _ZdlPv@PLT
.L_4303ef:

            call _ZSt9terminatev@PLT
.L_4303f4:

            jmp .L_4303dc
.L_4303f6:

            mov RBX,RAX
.L_4303f9:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_430412:

            mov RDI,QWORD PTR [RSP+200]
            mov RBX,RAX
            lea RAX,QWORD PTR [RBP+104]
            mov QWORD PTR [RSP+128],R15
            cmp RDI,RAX
            je .L_430433

            call _ZdlPv@PLT
.L_430433:

            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],R14
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            jmp .L_4303f9
.L_43045c:

            nop
            nop
            nop
            nop
.L_430460:

            shl ESI,3
            mov DWORD PTR [RDI+4],EDX
            mov DWORD PTR [RDI],ESI
            ret 
.L_430469:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430470:

            lea R8D,DWORD PTR [R8*8+2]
            mov BYTE PTR [RDI+4],SIL
            mov BYTE PTR [RDI+5],DL
            mov BYTE PTR [RDI+6],CL
            mov DWORD PTR [RDI],R8D
            ret 
.L_430486:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430490:

            lea EDX,DWORD PTR [RDX*8+3]
            mov DWORD PTR [RDI+4],ESI
            mov DWORD PTR [RDI],EDX
            ret 
.L_43049d:

            nop
            nop
            nop
.L_4304a0:

            lea EDX,DWORD PTR [RDX*8+4]
            mov DWORD PTR [RDI+4],ESI
            mov DWORD PTR [RDI],EDX
            ret 
.L_4304ad:

            nop
            nop
            nop
.L_4304b0:

            mov EAX,DWORD PTR [RDI]
            mov DWORD PTR [RDI+4],ESI
            and EAX,4294967288
            or EAX,5
            mov DWORD PTR [RDI],EAX
            ret 
.L_4304be:

            nop
            nop
.L_4304c0:

            mov EAX,DWORD PTR [RDI]
            and EAX,4294967288
            or EAX,6
            mov DWORD PTR [RDI],EAX
            ret 
.L_4304cb:

            nop
            nop
            nop
            nop
            nop
.L_4304d0:

            or DWORD PTR [RDI],7
            ret 
.L_4304d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4304e0:

            push RBX
            lea RDX,QWORD PTR [RIP+.L_4314b4]
            mov RBX,RDI
            sub RSP,16
.L_4304ef:

            mov R9D,DWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,R9D
            and EAX,7
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430518:

            mov EDX,R9D
            lea RSI,QWORD PTR [RIP+.L_43149a]
            xor EAX,EAX
            shr EDX,3
            call .L_4154c0

            nop
            nop
            nop
            nop
.L_430530:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_430643

            add RSP,16
.L_43054b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430550:

            mov ECX,DWORD PTR [RSI+4]
            mov EDX,R9D
            lea RSI,QWORD PTR [RIP+.L_43142e]
            shr EDX,3
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430570:

            mov ECX,DWORD PTR [RSI+4]
            mov EDX,R9D
            lea RSI,QWORD PTR [RIP+.L_43143d]
            shr EDX,3
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430590:

            cmp BYTE PTR [RSI+6],0
            movzx ECX,BYTE PTR [RSI+4]
            lea RAX,QWORD PTR [RIP+.L_43142d]
            movzx R8D,BYTE PTR [RSI+5]
            lea RDX,QWORD PTR [RIP+.L_43142a]
            lea RSI,QWORD PTR [RIP+.L_431451]
            cmove RDX,RAX
            shr R9D,3
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4305d0:

            mov EDX,DWORD PTR [RSI+4]
            mov ECX,R9D
            lea RSI,QWORD PTR [RIP+.L_43146a]
            shr ECX,3
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4305f0:

            mov EDX,DWORD PTR [RSI+4]
            mov ECX,R9D
            lea RSI,QWORD PTR [RIP+.L_43e1a0-52517]
            shr ECX,3
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430610:

            mov EDX,DWORD PTR [RSI+4]
            lea RSI,QWORD PTR [RIP+.L_431490]
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430630:

            lea RSI,QWORD PTR [RIP+.L_4314a4]
            xor EAX,EAX
            call .L_4154c0

            jmp .L_430530
.L_430643:

            call __stack_chk_fail@PLT
.L_430648:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430650:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_430661:

            mov BYTE PTR [RDI+16],0
            mov QWORD PTR [RDI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+16]
            mov RBX,QWORD PTR [RDX+16]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RDI],RAX
            movsxd RAX,DWORD PTR [RDX]
            shl RAX,2
            test RAX,RAX
            je .L_4307d8

            lea RAX,QWORD PTR [RSP+32]
            mov R15,RSI
            mov RBP,RDX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_4306e9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4306c0:

            and EAX,7
            cmp EAX,1
            ja .L_4306d5

            mov EAX,DWORD PTR [R12+4]
            test EAX,EAX
            jne .L_430788
.L_4306d5:

            movsxd RDX,EDX
            add RBX,4
            lea RAX,QWORD PTR [RSI+RDX*4]
            cmp RBX,RAX
            je .L_4307d8
.L_4306e9:

            movsxd RDX,DWORD PTR [RBX]
            mov RAX,QWORD PTR [R15+32]
            mov RDI,QWORD PTR [RSP+8]
            lea R12,QWORD PTR [RAX+RDX*8]
            mov R13,RDX
            mov RSI,R12
.L_4306ff:

            call .L_4304e0
.L_430704:

            mov RCX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RIP+.L_4314a9]
            mov EDX,R13D
            mov RDI,R14
            xor EAX,EAX
.L_430718:

            call .L_415670
.L_43071d:

            mov RDI,QWORD PTR [RSP+32]
            cmp RDI,QWORD PTR [RSP+16]
            je .L_43072e

            call _ZdlPv@PLT
.L_43072e:

            mov EAX,DWORD PTR [R12]
            mov EDX,DWORD PTR [RBP]
            mov RSI,QWORD PTR [RBP+16]
            mov ECX,EAX
            shr ECX,3
            test ECX,ECX
            je .L_4306c0

            cmp ECX,DWORD PTR [RBP+4]
            jae .L_4306c0

            mov R8,QWORD PTR [RBP+8]
            mov EDI,ECX
            lea R8,QWORD PTR [R8+RDI*4]
            movsxd RDI,DWORD PTR [R8]
            cmp EDI,EDX
            jae .L_430769

            cmp ECX,DWORD PTR [RSI+RDI*4]
            je .L_4306c0
.L_430769:

            mov DWORD PTR [R8],EDX
            movsxd RAX,DWORD PTR [RBP]
            mov DWORD PTR [RSI+RAX*4],ECX
            mov EAX,DWORD PTR [RBP]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBP],EDX
            mov EAX,DWORD PTR [R12]
            jmp .L_4306c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430788:

            cmp EAX,DWORD PTR [RBP+4]
            jae .L_4306d5

            mov RDI,QWORD PTR [RBP+8]
            movsxd RCX,EAX
            lea RDI,QWORD PTR [RDI+RCX*4]
            movsxd RCX,DWORD PTR [RDI]
            cmp ECX,EDX
            jae .L_4307ac

            cmp EAX,DWORD PTR [RSI+RCX*4]
            je .L_4306d5
.L_4307ac:

            mov DWORD PTR [RDI],EDX
            movsxd RDX,DWORD PTR [RBP]
            add RBX,4
            mov DWORD PTR [RSI+RDX*4],EAX
            mov EAX,DWORD PTR [RBP]
            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBP],EDX
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RSI+RDX*4]
            cmp RBX,RAX
            jne .L_4306e9

            nop
            nop
            nop
            nop
            nop
            nop
.L_4307d8:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_4307fa

            add RSP,88
.L_4307ef:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4307fa:

            call __stack_chk_fail@PLT
.L_4307ff:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+32]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_43081a

            call _ZdlPv@PLT
.L_43081a:

            mov RDI,QWORD PTR [R14]
            cmp QWORD PTR [RSP+24],RDI
            je .L_430829

            call _ZdlPv@PLT
.L_430829:

            mov RDI,RBX
.L_43082c:

            call _Unwind_Resume@PLT
.L_430831:

            mov RBX,RAX
            jmp .L_43081a
.L_430836:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430840:

            push RBX
.L_430841:

            mov BYTE PTR [RDI],0
            xor ESI,ESI
            mov BYTE PTR [RDI+1],0
            mov BYTE PTR [RDI+2],0
            mov RBX,RDI
            mov BYTE PTR [RDI+3],0
            mov QWORD PTR [RDI+4],0
            add RDI,40
            mov QWORD PTR [RDI-28],0
            mov QWORD PTR [RDI-20],0
            mov QWORD PTR [RDI-12],0
            mov DWORD PTR [RDI-4],0
            call pthread_rwlock_init@PLT

            test EAX,EAX
            jne .L_4308f8

            mov QWORD PTR [RBX+96],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+104],0
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+416],0
            mov QWORD PTR [RBX+424],0
            mov QWORD PTR [RBX+432],0
            pop RBX
.L_4308f7:

            ret 
.L_4308f8:

            call abort@PLT
.L_4308fd:

            nop
            nop
            nop
.L_430900:

            push RBX
.L_430901:

            mov RAX,QWORD PTR [RDI+120]
            mov RBX,RDI
            test RAX,RAX
            je .L_43092c

            mov RDX,QWORD PTR [RDI+96]
            test RDX,RDX
            je .L_43091c

            mov RDI,QWORD PTR [RDI+96]
            call RAX
.L_43091c:

            mov RAX,QWORD PTR [RBX+104]
            test RAX,RAX
            je .L_43092c

            mov RDI,QWORD PTR [RBX+104]
            call QWORD PTR [RBX+120]
.L_43092c:

            mov RDI,QWORD PTR [RBX+424]
            test RDI,RDI
            je .L_43093d

            call _ZdaPv@PLT
.L_43093d:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_43094b

            call _ZdaPv@PLT
.L_43094b:

            mov RDI,QWORD PTR [RBX+416]
            test RDI,RDI
            je .L_43095c

            call _ZdaPv@PLT
.L_43095c:

            lea RDI,QWORD PTR [RBX+40]
            call pthread_rwlock_destroy@PLT

            test EAX,EAX
            jne .L_43096b

            pop RBX
.L_43096a:

            ret 
.L_43096b:

            call abort@PLT
.L_430970:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,112
.L_43097c:

            movsxd RBP,DWORD PTR [RSI+12]
            lea R12,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [R12+16]
            mov DWORD PTR [RSP+4],EBP
            mov QWORD PTR [RSP+32],RAX
            movabs RAX,2305843009213693950
            cmp RBP,RAX
            ja .L_430b63

            mov R14,RBP
            shl RBP,2
            mov RBX,RDI
            mov RDI,RBP
            mov R13,RSI
.L_4309d4:

            call _Znam@PLT

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+16],RAX
            call .L_43e090
.L_4309f0:

            test EAX,EAX
            setne BYTE PTR [RSP+24]
            je .L_430a37

            test R14D,R14D
            jle .L_430a37

            lea EAX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430a20:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_430a20
.L_430a37:

            mov EAX,DWORD PTR [R13+4]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            jne .L_430b18
.L_430a4a:

            lea RBP,QWORD PTR [RSP+64]
            mov R14,RSP
            mov RSI,R13
            mov RDX,R14
            mov RDI,RBP
.L_430a5b:

            call .L_430650
.L_430a60:

            mov R8,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+32]
            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
.L_430a71:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_430a76:

            lea RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RDX
            mov RCX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RAX+16]
            cmp RCX,RDX
            je .L_430b50

            mov QWORD PTR [RBX],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RCX
.L_430a98:

            mov RCX,QWORD PTR [RAX+8]
            add RBP,16
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RAX],RDX
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            cmp RDI,RBP
            je .L_430ac2

            call _ZdlPv@PLT
.L_430ac2:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_430ad1

            call _ZdaPv@PLT
.L_430ad1:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_430ae0

            call _ZdaPv@PLT
.L_430ae0:

            mov RDI,QWORD PTR [RSP+32]
            add R12,16
            cmp RDI,R12
            je .L_430af3

            call _ZdlPv@PLT
.L_430af3:

            mov RSI,QWORD PTR [RSP+104]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_430b5e

            add RSP,112
.L_430b0a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430b18:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_430a4a

            mov RDX,QWORD PTR [RSP+8]
            movsxd RCX,EAX
            mov DWORD PTR [RDX+RCX*4],0
            movsxd RCX,DWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RDX+RCX*4],EAX
            add DWORD PTR [RSP],1
            jmp .L_430a4a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430b50:

            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_430a98
.L_430b5e:

            call __stack_chk_fail@PLT
.L_430b63:

            call __cxa_throw_bad_array_new_length@PLT
.L_430b68:

            mov RBX,RAX
.L_430b6b:

            mov RDI,QWORD PTR [RSP+32]
            add R12,16
            cmp RDI,R12
            je .L_430b7e

            call _ZdlPv@PLT
.L_430b7e:

            mov RDI,RBX
.L_430b81:

            call _Unwind_Resume@PLT
.L_430b86:

            mov RDI,QWORD PTR [RSP+64]
            add RBP,16
            mov RBX,RAX
            cmp RDI,RBP
            je .L_430b9c

            call _ZdlPv@PLT
.L_430b9c:

            mov RDI,R14
            call .L_429c60

            jmp .L_430b6b
.L_430ba6:

            mov RBX,RAX
            jmp .L_430b9c
.L_430bab:

            nop
            nop
            nop
            nop
            nop
.L_430bb0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_430bba:

            movsxd RBX,DWORD PTR [RSI+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movabs RAX,2305843009213693950
            cmp RBX,RAX
            mov DWORD PTR [RSP+4],EBX
            ja .L_430ce4

            mov R12,RBX
            shl RBX,2
            mov R13,RDI
            mov RDI,RBX
            mov RBP,RSI
.L_430bf5:

            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+16],RAX
            call .L_43e090
.L_430c11:

            test EAX,EAX
            setne BYTE PTR [RSP+24]
            je .L_430c57

            test R12D,R12D
            jle .L_430c57

            lea EAX,DWORD PTR [R12-1]
            mov RSI,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430c40:

            mov DWORD PTR [RSI+RAX*1],2880154539
            mov DWORD PTR [RCX+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_430c40
.L_430c57:

            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            jne .L_430cb8
.L_430c65:

            mov RBX,RSP
            mov RSI,RBP
            mov RDI,R13
            mov RDX,RBX
.L_430c71:

            call .L_430650
.L_430c76:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_430c85

            call _ZdaPv@PLT
.L_430c85:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_430c94

            call _ZdaPv@PLT
.L_430c94:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_430cdf

            add RSP,56
.L_430cab:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430cb8:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_430c65

            mov RDX,QWORD PTR [RSP+8]
            movsxd RCX,EAX
            mov DWORD PTR [RDX+RCX*4],0
            movsxd RCX,DWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RDX+RCX*4],EAX
            add DWORD PTR [RSP],1
            jmp .L_430c65
.L_430cdf:

            call __stack_chk_fail@PLT
.L_430ce4:

            call __cxa_throw_bad_array_new_length@PLT
.L_430ce9:

            mov RBP,RAX
            mov RDI,RBX
            call .L_429c60

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_430cfc:

            nop
            nop
            nop
            nop
.L_430d00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_430d0e:

            movsxd RBX,DWORD PTR [RDI+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movabs RAX,2305843009213693950
            cmp RBX,RAX
            mov DWORD PTR [RSP+4],EBX
            ja .L_431197

            mov R12,RBX
            shl RBX,2
            mov RBP,RDI
            mov RDI,RBX
.L_430d46:

            call _Znam@PLT

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call _Znam@PLT

            mov QWORD PTR [RSP+16],RAX
            call .L_43e090
.L_430d62:

            test EAX,EAX
            setne BYTE PTR [RSP+24]
            je .L_430df8

            test R12D,R12D
            mov RBX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            jle .L_430da7

            lea EAX,DWORD PTR [R12-1]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
.L_430d90:

            mov DWORD PTR [RBX+RAX*1],2880154539
            mov DWORD PTR [RDI+RAX*1],2880154539
            add RAX,4
            cmp RDX,RAX
            jne .L_430d90
.L_430da7:

            mov EAX,DWORD PTR [RBP+4]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            jne .L_430e10
.L_430db5:

            test RDI,RDI
            je .L_430dbf

            call _ZdaPv@PLT
.L_430dbf:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_430dce

            call _ZdaPv@PLT
.L_430dce:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43119c

            add RSP,56
.L_430de6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430df8:

            mov EAX,DWORD PTR [RBP+4]
            mov RBX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            je .L_430db5
.L_430e10:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_430f16

            movsxd RDX,EAX
            mov DWORD PTR [RDI+RDX*4],0
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea R11D,DWORD PTR [RAX+1]
            movsxd RAX,R11D
            mov DWORD PTR [RSP],R11D
            shl RAX,2
            test RAX,RAX
            je .L_430f04

            mov R9,RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e50:

            movsxd RAX,DWORD PTR [R9]
            mov RSI,QWORD PTR [RBP+32]
            lea R10,QWORD PTR [RSI+RAX*8]
            mov R8D,DWORD PTR [R10]
            mov EDX,R8D
            and R8D,7
            shr EDX,3
            test EDX,EDX
            jne .L_430e85

            jmp .L_431030
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430e78:

            shr EAX,3
            test EAX,EAX
            mov EDX,EAX
            je .L_431030
.L_430e85:

            movsxd RAX,EDX
            mov EAX,DWORD PTR [RSI+RAX*8]
            mov ECX,EAX
            and ECX,7
            cmp ECX,6
            je .L_430e78

            shl EDX,3
            or R8D,EDX
            mov EAX,R8D
            mov DWORD PTR [R10],R8D
            shr EAX,3
            cmp EAX,DWORD PTR [RSP+4]
            jae .L_431033

            movsxd RDX,EAX
            lea RCX,QWORD PTR [RDI+RDX*4]
            movsxd RDX,DWORD PTR [RCX]
            cmp EDX,R11D
            jae .L_430ec6

            cmp EAX,DWORD PTR [RBX+RDX*4]
            je .L_431033
.L_430ec6:

            mov DWORD PTR [RCX],R11D
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea R11D,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP],R11D
            mov R8D,DWORD PTR [R10]
            and R8D,7
            je .L_431041

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430ef0:

            movsxd RAX,R11D
            add R9,4
            lea RAX,QWORD PTR [RBX+RAX*4]
            cmp R9,RAX
            jne .L_430e50
.L_430f04:

            mov EAX,DWORD PTR [RBP+4]
            mov DWORD PTR [RSP],0
            test EAX,EAX
            je .L_430db5
.L_430f16:

            cmp DWORD PTR [RSP+4],EAX
            jbe .L_430db5

            movsxd RDX,EAX
            mov DWORD PTR [RDI+RDX*4],0
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea ECX,DWORD PTR [RAX+1]
            movsxd RAX,ECX
            mov DWORD PTR [RSP],ECX
            shl RAX,2
            test RAX,RAX
            je .L_430db5

            mov RSI,RBX
            jmp .L_430fcd
          .byte 0x90
.L_430f50:

            test AL,7
            jne .L_430fb0

            movsxd RCX,DWORD PTR [R12+4]
            test ECX,ECX
            mov RDX,RCX
            jne .L_4310c0

            xor ECX,ECX
.L_430f66:

            mov RDX,QWORD PTR [RBP+32]
            shr EAX,3
            lea R14,QWORD PTR [RDX+RAX*8]
            lea R15,QWORD PTR [RDX+RCX*8]
            mov EAX,DWORD PTR [R14]
            mov EDX,EAX
            and EDX,7
            cmp EDX,2
            jne .L_430f8e

            shr EAX,3
            cmp R13D,EAX
            je .L_431120
.L_430f8e:

            mov RSI,R14
            mov RDI,RBP
.L_430f94:

            call .L_42fe10

            test AL,AL
            je .L_430fb0

            mov EAX,DWORD PTR [R15]
            mov EDX,EAX
            and EDX,7
            cmp EDX,2
            je .L_431160

            nop
            nop
.L_430fb0:

            movsxd RAX,DWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+16]
            add RBX,4
            mov RCX,RAX
            lea RAX,QWORD PTR [RSI+RAX*4]
            cmp RBX,RAX
            je .L_431110
.L_430fcd:

            movsxd RDX,DWORD PTR [RBX]
            mov RAX,QWORD PTR [RBP+32]
            lea R12,QWORD PTR [RAX+RDX*8]
            mov R13,RDX
            mov EAX,DWORD PTR [R12]
            mov EDX,EAX
            shr EDX,3
            test EDX,EDX
            je .L_430f50

            cmp EDX,DWORD PTR [RSP+4]
            jae .L_430f50

            mov R8,QWORD PTR [RSP+8]
            mov EDI,EDX
            lea R8,QWORD PTR [R8+RDI*4]
            movsxd RDI,DWORD PTR [R8]
            cmp EDI,ECX
            jae .L_431011

            cmp EDX,DWORD PTR [RSI+RDI*4]
            je .L_430f50
.L_431011:

            mov DWORD PTR [R8],ECX
            movsxd RAX,DWORD PTR [RSP]
            mov DWORD PTR [RSI+RAX*4],EDX
            add DWORD PTR [RSP],1
            mov EAX,DWORD PTR [R12]
            jmp .L_430f50
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431030:

            mov DWORD PTR [R10],R8D
.L_431033:

            and R8D,7
            mov R11D,DWORD PTR [RSP]
            jne .L_430ef0
.L_431041:

            mov EAX,DWORD PTR [R10+4]
            test EAX,EAX
            je .L_4310b0

            mov RSI,QWORD PTR [RBP+32]
            jmp .L_431059
          .byte 0x90
.L_431050:

            mov EAX,EDX
            shr EAX,3
            test EAX,EAX
            je .L_4310b0
.L_431059:

            movsxd RDX,EAX
            mov EDX,DWORD PTR [RSI+RDX*8]
            mov ECX,EDX
            and ECX,7
            cmp ECX,6
            je .L_431050

            cmp DWORD PTR [RSP+4],EAX
            mov DWORD PTR [R10+4],EAX
            jbe .L_430ef0

            movsxd RDX,EAX
            lea RCX,QWORD PTR [RDI+RDX*4]
            movsxd RDX,DWORD PTR [RCX]
            cmp EDX,R11D
            jae .L_43108f

            cmp DWORD PTR [RBX+RDX*4],EAX
            je .L_430ef0
.L_43108f:

            mov DWORD PTR [RCX],R11D
            movsxd RDX,DWORD PTR [RSP]
            mov DWORD PTR [RBX+RDX*4],EAX
            mov EAX,DWORD PTR [RSP]
            lea R11D,DWORD PTR [RAX+1]
            mov DWORD PTR [RSP],R11D
            jmp .L_430ef0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4310b0:

            mov DWORD PTR [R10+4],0
            jmp .L_430ef0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4310c0:

            cmp ECX,DWORD PTR [RSP+4]
            jae .L_430f66

            mov RDI,QWORD PTR [RSP+8]
            mov R9D,DWORD PTR [RSP]
            lea R8,QWORD PTR [RDI+RCX*4]
            movsxd RDI,DWORD PTR [R8]
            cmp EDI,R9D
            jae .L_4310e8

            cmp ECX,DWORD PTR [RSI+RDI*4]
            je .L_430f66
.L_4310e8:

            mov DWORD PTR [R8],R9D
            movsxd RAX,DWORD PTR [RSP]
            mov DWORD PTR [RSI+RAX*4],EDX
            add DWORD PTR [RSP],1
            mov EAX,DWORD PTR [R12]
            test AL,7
            jne .L_430fb0

            movsxd RCX,DWORD PTR [R12+4]
            jmp .L_430f66
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431110:

            mov RDI,QWORD PTR [RSP+8]
            jmp .L_430db5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431120:

            cmp BYTE PTR [R14+4],0
            jne .L_430f8e

            cmp BYTE PTR [R14+5],255
            jne .L_430f8e

            mov RSI,R15
            mov RDI,RBP
            call .L_42fe10
.L_431141:

            test AL,AL
            je .L_430f8e
.L_431149:

            mov EAX,DWORD PTR [R12]
            and EAX,4294967288
            or EAX,1
            mov DWORD PTR [R12],EAX
            jmp .L_430fb0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431160:

            shr EAX,3
            cmp R13D,EAX
            jne .L_430fb0

            cmp BYTE PTR [R15+4],0
            jne .L_430fb0

            cmp BYTE PTR [R15+5],255
            jne .L_430fb0

            jmp .L_431149
.L_431184:

            mov RBX,RAX
            mov RDI,RSP
            call .L_429c60

            mov RDI,RBX
.L_431192:

            call _Unwind_Resume@PLT
.L_431197:

            call __cxa_throw_bad_array_new_length@PLT
.L_43119c:

            call __stack_chk_fail@PLT
.L_4311a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4311b0:

            mov RDX,QWORD PTR [RDI]
            cmp RSI,RDX
            je .L_431250

            xor EAX,EAX
            movsxd RCX,DWORD PTR [RDI+8]
            cmp BYTE PTR [RSI-1],10
            sete AL
            add RCX,RDX
            cmp RSI,RCX
            je .L_4312a0

            movzx ECX,BYTE PTR [RSI]
            jae .L_4311ec
.L_4311da:

            cmp CL,10
            je .L_4312d0

            cmp RSI,RDX
            je .L_43126a
.L_4311ec:

            movzx EDI,BYTE PTR [RSI-1]
            mov EDX,ECX
            and EDX,4294967263
            sub EDX,65
            mov ESI,EDI
            and ESI,4294967263
            sub ESI,65
            cmp SIL,25
            jbe .L_431230

            lea ESI,DWORD PTR [RDI-48]
            cmp SIL,9
            setbe SIL
            cmp DIL,95
            sete DIL
            or EDI,ESI
            cmp DL,25
            mov ESI,1
            ja .L_43123a
.L_431225:

            cmp SIL,DIL
            je .L_431284
.L_43122a:

            or EAX,16
            ret 
          .byte 0x66
          .byte 0x90
.L_431230:

            cmp DL,25
            mov EDI,1
            jbe .L_431284
.L_43123a:

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            setbe SIL
            cmp CL,95
            sete DL
            or ESI,EDX
            jmp .L_431225

            nop
            nop
.L_431250:

            movsxd RAX,DWORD PTR [RDI+8]
            add RAX,RSI
            cmp RSI,RAX
            je .L_431290

            movzx ECX,BYTE PTR [RSI]
            mov EAX,5
            jb .L_4311da
.L_43126a:

            mov EDX,ECX
            and EDX,4294967263
            sub EDX,65
            cmp DL,25
            jbe .L_43122a

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            jbe .L_43122a

            cmp CL,95
            je .L_43122a
.L_431284:

            or EAX,32
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431290:

            mov EAX,15
            or EAX,32
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4312a0:

            movzx ECX,BYTE PTR [RSI-1]
            mov EDI,EAX
            or EDI,10
            mov EDX,ECX
            and EDX,4294967263
            sub EDX,65
            cmp DL,25
            jbe .L_4312c3

            lea EDX,DWORD PTR [RCX-48]
            cmp DL,9
            jbe .L_4312c3

            cmp CL,95
            jne .L_4312e0
.L_4312c3:

            or EAX,26
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4312d0:

            or EAX,2
            cmp RSI,RDX
            jne .L_4311ec

            jmp .L_431284
          .byte 0x66
          .byte 0x90
.L_4312e0:

            mov EAX,EDI
            jmp .L_431284
.L_4312e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4312f0:

            lea ECX,DWORD PTR [RSI-1]
            cmp ECX,254
            ja .L_431310

            mov EAX,ECX
            mov ESI,1
            sar EAX,5
            shl ESI,CL
            cdqe 
            or DWORD PTR [RDI+RAX*4+128],ESI
.L_431310:

            cmp EDX,255
            ja .L_43132f

            mov EAX,EDX
            mov ESI,1
            mov ECX,EDX
            sar EAX,5
            shl ESI,CL
            cdqe 
            or DWORD PTR [RDI+RAX*4+128],ESI
.L_43132f:

            ret 
.L_431331:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431340:

            push RBX
.L_431341:

            xor EAX,EAX
            mov RBX,RDI
            xor ECX,ECX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_431350:

            test AL,31
            jne .L_431363

            mov EDX,EAX
            sar EDX,5
            movsxd RDX,EDX
            mov EDX,DWORD PTR [RBX+RDX*4+128]
.L_431363:

            mov ESI,EDX
            mov BYTE PTR [RBX+RAX*1+160],CL
            add RAX,1
            and ESI,1
            shr EDX,1
            add ECX,ESI
            cmp RAX,256
            jne .L_431350

            movzx EAX,BYTE PTR [RBX+415]
            add EAX,1
            mov DWORD PTR [RBX+20],EAX
            movsxd RDI,EAX
            call _Znam@PLT

            xor EDX,EDX
            mov QWORD PTR [RBX+416],RAX
            jmp .L_4313a7
          .byte 0x90
.L_4313a0:

            mov RAX,QWORD PTR [RBX+416]
.L_4313a7:

            movzx ECX,BYTE PTR [RBX+RDX*1+160]
            mov BYTE PTR [RAX+RCX*1],DL
            add RDX,1
            cmp RDX,256
            jne .L_4313a0

            pop RBX
.L_4313c0:

            ret 
.L_4313c1:
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4313c8:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_4313f8:
          .string "Unexpected opcode in IsMatch: "
.L_431417:

            or AL,BYTE PTR [RAX]
.L_431419:
          .string "re2/prog.cc"
.L_431425:
          .string ":"
.L_431427:
          .string ": "
.L_43142a:
          .string "/i"
.L_43142d:
          .zero 1
.L_43142e:
          .string "alt -> %d | %d"
.L_43143d:
          .string "altmatch -> %d | %d"
.L_431451:
          .string "byte%s [%02x-%02x] -> %d"
# WARNING: found overlapping blocks at address 31224
# WARNING: found overlapping blocks at address 3122a
# WARNING: found overlapping blocks at address 3122e
# WARNING: found overlapping blocks at address 31239
.L_43146a:
          .string "capture %d -> %d"
# WARNING: found overlapping blocks at address 31240

            insd DWORD PTR [RDI],DX
          .byte 0x70
          .byte 0x74
          .byte 0x79
          .byte 0x77
          .byte 0x69
          .byte 0x64
          .byte 0x74
          .byte 0x68

            and BYTE PTR [RIP+.L_64a3d0+754903262],AH
          .byte 0x3e
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x0
.L_431490:
          .string "match! %d"
.L_43149a:
          .string "nop -> %d"
.L_4314a4:
          .string "fail"
.L_4314a9:
          .string "%d. %s\n"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4314b4:
          .long .L_430550-.L_4314b4
          .long .L_430570-.L_4314b4
          .long .L_430590-.L_4314b4
          .long .L_4305d0-.L_4314b4
          .long .L_4305f0-.L_4314b4
          .long .L_430610-.L_4314b4
          .long .L_430518-.L_4314b4
          .long .L_430630-.L_4314b4
          .byte 0x66
          .byte 0x2e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4314e0:

            mov RDI,RSI
            jmp .L_40feb0
.L_4314e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4314f0:

            cmp BYTE PTR [RSI+1],0
            je .L_431508

            mov BYTE PTR [RCX],1
            mov RDI,RSI
            jmp .L_40feb0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431508:

            xor EAX,EAX
            ret 
.L_43150b:

            nop
            nop
            nop
            nop
            nop
.L_431510:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_43151e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_43153c

            test RDX,RDX
            jne .L_4315c7
.L_43153c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_431590

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_4315c0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_431564:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4315d3

            add RSP,16
.L_431584:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431590:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_4315a9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_431564
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4315c0:

            test RBX,RBX
            je .L_431564

            jmp .L_4315a9
.L_4315c7:

            lea RDI,QWORD PTR [RIP+.L_4340b8]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_4315d3:

            call __stack_chk_fail@PLT
.L_4315d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4315e0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RDI
            mov EDI,40
            mov RBP,RSI
            sub RSP,8
.L_4315f8:

            call _Znwm@PLT
.L_4315fd:

            mov EDX,R13D
            mov ESI,5
            mov RDI,RAX
            mov RBX,RAX
.L_43160b:

            call .L_40c9d0
.L_431610:

            mov EDI,16
.L_431615:

            call _Znam@PLT

            mov EDX,2
            mov QWORD PTR [RAX],R12
            mov QWORD PTR [RAX+8],RBP
            mov QWORD PTR [RBX+8],RAX
            mov WORD PTR [RBX+6],DX
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43163c:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_431654:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431660:

            push RBP
            push RBX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+24]
            mov EAX,DWORD PTR [RAX+4]
            test EAX,EAX
            je .L_4316b8

            cmp EAX,1114112
            je .L_431688

            add RSP,8
            pop RBX
            pop RBP
.L_43167e:

            jmp .L_40feb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431688:

            movzx EBP,WORD PTR [RDI+2]
            mov EDI,40
            call _Znwm@PLT
.L_431696:

            mov ESI,12
            mov RDI,RAX
            mov RBX,RAX
            mov EDX,EBP
.L_4316a3:

            call .L_40c9d0
.L_4316a8:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4316b8:

            movzx EBP,WORD PTR [RDI+2]
            mov EDI,40
.L_4316c1:

            call _Znwm@PLT
.L_4316c6:

            mov ESI,1
            mov RDI,RAX
            mov RBX,RAX
            mov EDX,EBP
.L_4316d3:

            call .L_40c9d0
.L_4316d8:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_4316e2:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_4316f5:

            call _Unwind_Resume@PLT
.L_4316fa:

            jmp .L_4316e2
.L_4316fc:

            nop
            nop
            nop
            nop
.L_431700:

            push R14
            push R13
            mov R13D,EDI
            push R12
            push RBP
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBX
            sub RSP,400
            mov RBX,RSP
            mov BYTE PTR [RSP],0
            lea RDI,QWORD PTR [RBX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+344],0
            xor ESI,ESI
            mov R14,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+336],0
            mov BYTE PTR [RSP+345],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+368],0
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+8],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov QWORD PTR [RDI],R14
.L_4317ae:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4317b3:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+8],RAX
            add RAX,40
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+80],16
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+104],0
            mov QWORD PTR [RSP+88],RAX
.L_431846:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_43184b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434136]
            mov EDX,14
.L_43185b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,492
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_431897:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43414a]
            mov EDX,16
.L_4318a7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,R13D
            call _ZNSolsEi@PLT
.L_4318b8:

            mov RDI,RBX
            call .L_410610

            call abort@PLT
.L_4318c5:

            mov R13,RAX
.L_4318c8:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_4318d9:

            call _Unwind_Resume@PLT
.L_4318de:

            mov RDI,RBX
            call .L_410610

            call abort@PLT
.L_4318eb:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
.L_4318fa:

            call _Unwind_Resume@PLT
.L_4318ff:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+8],RBP
            mov QWORD PTR [RSP+RAX*1+8],R14
            jmp .L_4318c8
.L_43191b:

            nop
            nop
            nop
            nop
            nop
.L_431920:

            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            push RBP
            push RBX
            sub RSP,536
.L_431938:

            lea RBX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+8],RSI
            mov BYTE PTR [RSP+128],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov RBP,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [RBP-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],RBP
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4319e1:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4319e6:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RBX+104]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+144],R13
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+216],RAX
            mov QWORD PTR [RSP+224],0
            mov BYTE PTR [RSP+232],0
.L_431aa3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_431aa8:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43415b]
            mov EDX,15
.L_431ab8:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,161
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_431af4:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4340e8]
            mov EDX,33
.L_431b04:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_431b09:

            cmp BYTE PTR [RSP+128],0
            je .L_431bc0
.L_431b17:

            mov RDI,QWORD PTR [RSP+216]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],R13
            cmp RDI,RAX
            je .L_431b45

            call _ZdlPv@PLT
.L_431b45:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [RBP-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RCX
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,QWORD PTR [RSP+8]
.L_431b8e:

            call .L_40feb0
.L_431b93:

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            jne .L_431ebe

            add RSP,536
.L_431bb1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431bc0:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_431db0

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            ja .L_431d00

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RSP+80]
            mov RDI,RCX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+24],RCX
.L_431c38:

            call .L_431510
.L_431c3d:

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_431dc8

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+80]
            add RCX,16
            cmp RDI,RCX
            je .L_431e40

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_431e4f

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RCX
.L_431c9c:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_431cc0
.L_431cbb:

            call _ZdlPv@PLT
.L_431cc0:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_431ccf:

            call write@PLT
.L_431cd4:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            mov BYTE PTR [RSP+128],1
            add RAX,16
            cmp RDI,RAX
            je .L_431b17

            call _ZdlPv@PLT

            jmp .L_431b17
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431d00:

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RSP+112]
            mov RDI,RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RCX
.L_431d1a:

            call .L_431510

            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_431e08

            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_431e68

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
            je .L_431e77

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_431d7e:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            jne .L_431cbb

            jmp .L_431cc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431db0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_431dbe:

            jmp .L_431cc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431dc8:

            test RDX,RDX
            je .L_431df0

            cmp RDX,1
            je .L_431ea8

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431df0:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_431c9c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431e08:

            test RDX,RDX
            je .L_431e28

            cmp RDX,1
            je .L_431e90

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
            nop
            nop
.L_431e28:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_431d7e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431e40:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_431e4f:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_431c9c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431e68:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RAX
.L_431e77:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_431d7e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431e90:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_431e28
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431ea8:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_431df0
.L_431ebe:

            call __stack_chk_fail@PLT
.L_431ec3:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+32]
            add RAX,16
            cmp RDI,RAX
            je .L_431edb

            call _ZdlPv@PLT
.L_431edb:

            call _ZSt9terminatev@PLT
.L_431ee0:

            lea RDI,QWORD PTR [RBX+16]
            mov R13,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [RBP-24]
            mov RDX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],RBP
            mov QWORD PTR [RSP+RAX*1+136],RDX
.L_431f07:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+248],R12
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,R13
.L_431f1b:

            call _Unwind_Resume@PLT
.L_431f20:

            jmp .L_431ec3
.L_431f22:

            mov R13,RAX
            jmp .L_431f07
.L_431f27:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_431f3b:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_431f4e:

            nop
            nop
.L_431f50:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,536
.L_431f64:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI],21
            ja .L_4320a8

            movzx EAX,BYTE PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_4341b0]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431f98:

            xor EAX,EAX
.L_431f9a:

            mov RCX,QWORD PTR [RSP+520]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4325e8

            add RSP,536
.L_431fb8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431fc8:

            movzx EDX,WORD PTR [RDI+6]
            cmp DX,1
            jbe .L_432450

            mov RBX,QWORD PTR [RDI+8]
.L_431fda:

            test DX,DX
            je .L_432012

            mov RAX,QWORD PTR [RBX]
            cmp BYTE PTR [RAX+1],0
            je .L_431f98

            sub EDX,1
            lea RAX,QWORD PTR [RBX+8]
            lea RCX,QWORD PTR [RBX+RDX*8+8]
            jmp .L_43200d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432000:

            mov RDX,QWORD PTR [RAX]
            add RAX,8
            cmp BYTE PTR [RDX+1],0
            je .L_431f98
.L_43200d:

            cmp RAX,RCX
            jne .L_432000
.L_432012:

            mov EAX,1
            jmp .L_431f9a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432020:

            cmp WORD PTR [RDI+6],1
            mov RDX,QWORD PTR [RDI+8]
            jbe .L_43202e

            mov RDX,QWORD PTR [RDX]
.L_43202e:

            xor EAX,EAX
            cmp BYTE PTR [RDX+1],0
            je .L_431f9a

            movzx ECX,BYTE PTR [RDX]
            mov EAX,1
            cmp CL,9
            ja .L_431f9a

            mov EAX,1
            shl RAX,CL
            test EAX,902
            sete AL
            jmp .L_431f9a
.L_432060:

            cmp WORD PTR [RDI+6],1
            mov RAX,QWORD PTR [RDI+8]
            jbe .L_43206e

            mov RAX,QWORD PTR [RAX]
.L_43206e:

            cmp BYTE PTR [RAX+1],0
            setne AL
            jmp .L_431f9a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432080:

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_432470

            mov EDX,DWORD PTR [RAX+8]
.L_432090:

            test EDX,EDX
            setne AL
            cmp EDX,1114112
            setne DL
            and EAX,EDX
            jmp .L_431f9a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4320a8:

            lea RBP,QWORD PTR [RSP+128]
            mov BYTE PTR [RSP+128],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+472],0
            xor ESI,ESI
            mov QWORD PTR [RSP+248],R13
            mov QWORD PTR [RSP+464],0
            mov BYTE PTR [RSP+473],0
            mov QWORD PTR [RSP+480],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            mov QWORD PTR [RSP+136],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_432141:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_432146:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+208],16
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+232],0
            mov QWORD PTR [RSP+216],RAX
.L_432203:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_432208:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43415b]
            mov EDX,15
.L_432218:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,95
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_432254:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434110]
            mov EDX,35
.L_432264:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx EAX,BYTE PTR [RBX]
            lea RSI,QWORD PTR [RSP+31]
            lea RDI,QWORD PTR [RBP+8]
            mov EDX,1
            mov BYTE PTR [RSP+31],AL
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_432283:

            cmp BYTE PTR [RSP+128],0
            je .L_432318
.L_432291:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+216]
            mov QWORD PTR [RSP+136],R15
            mov QWORD PTR [RSP+248],R14
            mov QWORD PTR [RSP+144],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_4322c6

            call _ZdlPv@PLT
.L_4322c6:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+144],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            xor EAX,EAX
            jmp .L_431f9a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432318:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            lea RBX,QWORD PTR [RSP+32]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+40],0
            mov BYTE PTR [RSP+48],0
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            je .L_432459

            mov RDX,QWORD PTR [RSP+168]
            mov RSI,QWORD PTR [RSP+176]
            cmp RAX,RDX
            jbe .L_432480

            lea RCX,QWORD PTR [RSP+96]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+96],RDX
            mov RDX,RAX
.L_43238c:

            call .L_431510
.L_432391:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_43251d

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+112]
            cmp RDI,RAX
            je .L_43257b

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_43258a

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RAX
.L_4323eb:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_43240f
.L_43240a:

            call _ZdlPv@PLT
.L_43240f:

            movsxd RDX,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov EDI,2
.L_43241e:

            call write@PLT
.L_432423:

            mov RDI,QWORD PTR [RSP+32]
            add RBX,16
            mov BYTE PTR [RSP+128],1
            cmp RDI,RBX
            je .L_432291

            call _ZdlPv@PLT

            jmp .L_432291
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432450:

            add RBX,8
            jmp .L_431fda
.L_432459:

            lea RSI,QWORD PTR [RBP+88]
            mov RDI,RBX
.L_432460:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            jmp .L_43240f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432470:

            mov RAX,QWORD PTR [RDI+24]
            mov EDX,DWORD PTR [RAX+4]
            jmp .L_432090
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432480:

            lea RCX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+64],RAX
            call .L_431510
.L_43249b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_43254e

            lea RAX,QWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+80]
            cmp RDI,RAX
            je .L_43259d

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
            je .L_4325ac

            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+80],RAX
.L_4324f5:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            jne .L_43240a

            jmp .L_43240f
.L_43251d:

            test RDX,RDX
            je .L_43253b

            cmp RDX,1
            je .L_4325bf

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
.L_43253b:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_4323eb
.L_43254e:

            test RDX,RDX
            je .L_432568

            cmp RDX,1
            je .L_4325d5

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
.L_432568:

            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4324f5
.L_43257b:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_43258a:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_4323eb
.L_43259d:

            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+48],RCX
.L_4325ac:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+64],RDI
            jmp .L_4324f5
.L_4325bf:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_43253b
.L_4325d5:

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            jmp .L_432568
.L_4325e8:

            call __stack_chk_fail@PLT
.L_4325ed:

            mov RDI,QWORD PTR [RSP+32]
            add RBX,16
            cmp RDI,RBX
            je .L_432600

            call _ZdlPv@PLT
.L_432600:

            call _ZSt9terminatev@PLT
.L_432605:

            jmp .L_4325ed
.L_432607:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
.L_432615:

            call _Unwind_Resume@PLT
.L_43261a:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43262e:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+136],R12
            mov QWORD PTR [RSP+RAX*1+136],RSI
.L_432656:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+248],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43266f:

            mov RBX,RAX
            jmp .L_432656
.L_432674:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432680:

            push R15
            push R14
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDI
            mov EBX,ESI
            sub RSP,520
.L_432699:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp EDX,-1
            je .L_432a18

            mov EAX,EDX
            mov EBP,EDX
            or EAX,ESI
            je .L_4329c8

            cmp ESI,1
            jne .L_4326cf

            cmp EDX,1
            je .L_432bf0
.L_4326cf:

            test EBX,EBX
            jg .L_432ad8

            cmp EBP,EBX
            jg .L_432c58
.L_4326df:

            lea R14,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea RDI,QWORD PTR [R14+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R15,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov BYTE PTR [RSP+456],0
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],RAX
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R15-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R15
            lea RDI,QWORD PTR [R14+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_43276e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_432773:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [R14+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R14+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_43282d:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_432832:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_43415b]
            mov EDX,15
.L_432842:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R14+8]
            mov ESI,371
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_43287e:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_43416b]
            mov EDX,17
.L_43288e:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+80]
            mov RSI,R12
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_436930
.L_4328a8:

            mov RDX,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [R14+8]
.L_4328b6:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RSI,QWORD PTR [RIP+.L_43417d]
            mov EDX,1
            mov RDI,RAX
            mov R12,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,EBX
            mov RDI,R12
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_43417d]
            mov EDX,1
            mov RDI,RAX
            mov RBX,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov ESI,EBP
            mov RDI,RBX
            call _ZNSolsEi@PLT
.L_4328fd:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_432915

            call _ZdlPv@PLT
.L_432915:

            cmp BYTE PTR [RSP+112],0
            je .L_432c90
.L_432920:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],RAX
            add RAX,40
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R14+104]
            cmp RDI,RAX
            je .L_43295d

            call _ZdlPv@PLT
.L_43295d:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R14+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R15-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+RAX*1+120],RCX
            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+232],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov EDI,40
.L_4329a7:

            call _Znwm@PLT
.L_4329ac:

            mov EDX,R13D
            mov ESI,1
            mov RDI,RAX
            mov R14,RAX
.L_4329ba:

            call .L_40c9d0
.L_4329bf:

            jmp .L_4329e5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4329c8:

            mov EDI,40
.L_4329cd:

            call _Znwm@PLT
.L_4329d2:

            mov EDX,R13D
            mov ESI,2
            mov RDI,RAX
            mov R14,RAX
.L_4329e0:

            call .L_40c9d0
.L_4329e5:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_432f1e

            add RSP,520
.L_432a06:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432a18:

            test ESI,ESI
            je .L_432c20

            cmp ESI,1
            je .L_432c00

            mov EDI,40
.L_432a2e:

            call _Znwm@PLT
.L_432a33:

            mov EDX,R13D
            mov ESI,5
            mov RDI,RAX
            mov R14,RAX
.L_432a41:

            call .L_40c9d0
.L_432a46:

            test EBX,EBX
            js .L_432f23

            test EBX,4294901760
            jne .L_432f23

            movsxd R15,EBX
            lea RAX,QWORD PTR [R15*8]
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
.L_432a6d:

            call _Znam@PLT

            mov RBP,RAX
            mov QWORD PTR [R14+8],RAX
            lea RAX,QWORD PTR [R14+8]
            cmp BX,2
            mov WORD PTR [R14+6],BX
            cmovb RBP,RAX
            lea EAX,DWORD PTR [RBX-2]
            mov R15,RBP
            lea RBX,QWORD PTR [RBP+RAX*8+8]
            nop
            nop
            nop
.L_432a98:

            mov RDI,R12
            add R15,8
            call .L_40feb0

            mov QWORD PTR [R15-8],RAX
            cmp RBX,R15
            jne .L_432a98

            mov RDI,R12
            call .L_40feb0

            mov RCX,QWORD PTR [RSP+8]
            mov ESI,R13D
            mov RDI,RAX
            lea RBX,QWORD PTR [RBP+RCX*1-8]
            call .L_40cb10

            mov QWORD PTR [RBX],RAX
            jmp .L_4329e5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432ad8:

            mov EDI,40
            call _Znwm@PLT
.L_432ae2:

            mov EDX,R13D
            mov ESI,5
            mov RDI,RAX
            mov R14,RAX
.L_432af0:

            call .L_40c9d0
.L_432af5:

            test EBX,4294901760
            jne .L_432f23

            cmp EBX,1
            je .L_432c40

            movsxd RDI,EBX
            shl RDI,3
.L_432b11:

            call _Znam@PLT

            cmp BX,1
            mov R15,RAX
            mov QWORD PTR [R14+8],RAX
            mov WORD PTR [R14+6],BX
            jbe .L_432c4a
.L_432b2c:

            lea EAX,DWORD PTR [RBX-1]
            mov DWORD PTR [RSP+8],EBX
            mov RBX,R15
            lea RAX,QWORD PTR [R15+RAX*8+8]
            mov R15,RAX
            nop
            nop
.L_432b40:

            mov RDI,R12
            add RBX,8
            call .L_40feb0

            mov QWORD PTR [RBX-8],RAX
            cmp R15,RBX
            jne .L_432b40

            mov EBX,DWORD PTR [RSP+8]
            cmp EBP,EBX
            jle .L_4329e5

            mov RDI,R12
            lea R15D,DWORD PTR [RBX+1]
            call .L_40feb0

            mov ESI,R13D
            mov RDI,RAX
            call .L_40cbf0

            cmp EBP,R15D
            mov RSI,RAX
            jle .L_432bcd

            mov DWORD PTR [RSP+8],EBX
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b90:

            mov RDI,R12
            add R15D,1
            call .L_40feb0

            mov RSI,RBX
            mov EDX,R13D
            mov RDI,RAX
            call .L_4315e0

            mov ESI,R13D
            mov RDI,RAX
            call .L_40cbf0

            cmp EBP,R15D
            mov RBX,RAX
            jg .L_432b90

            test R14,R14
            mov RSI,RAX
            mov EBX,DWORD PTR [RSP+8]
            je .L_432db8
.L_432bcd:

            mov RDI,R14
            mov EDX,R13D
            call .L_4315e0

            mov R14,RAX
.L_432bdb:

            test R14,R14
            jne .L_4329e5

            jmp .L_4326df
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432bf0:

            call .L_40feb0

            mov R14,RAX
            jmp .L_4329e5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432c00:

            call .L_40feb0

            mov ESI,R13D
            mov RDI,RAX
            call .L_40cb10

            mov R14,RAX
            jmp .L_4329e5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c20:

            call .L_40feb0

            mov ESI,R13D
            mov RDI,RAX
            call .L_40cb80

            mov R14,RAX
            jmp .L_4329e5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c40:

            mov EAX,1
            mov WORD PTR [R14+6],AX
.L_432c4a:

            lea R15,QWORD PTR [R14+8]
            jmp .L_432b2c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432c58:

            mov RDI,R12
            lea R15D,DWORD PTR [RBX+1]
            call .L_40feb0

            mov ESI,R13D
            mov RDI,RAX
            call .L_40cbf0
.L_432c6f:

            cmp EBP,R15D
            mov RSI,RAX
            jle .L_432db8

            mov DWORD PTR [RSP+8],EBX
            xor R14D,R14D
            mov RBX,RAX
            jmp .L_432b90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432c90:

            lea RDI,QWORD PTR [R14+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            lea RBX,QWORD PTR [RSP+16]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_432e4a

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_432dc0

            mov RBP,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_432cff:

            call .L_431510
.L_432d04:

            mov RSI,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            cmp RSI,RAX
            je .L_432e89

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+96]
            cmp RDI,RCX
            je .L_432ed3

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_432ee2

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_432d59:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_432d7d
.L_432d78:

            call _ZdlPv@PLT
.L_432d7d:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_432d8c:

            call write@PLT
.L_432d91:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov BYTE PTR [RSP+112],1
            cmp RDI,RBX
            je .L_432920

            call _ZdlPv@PLT

            jmp .L_432920
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432db8:

            mov R14,RSI
            jmp .L_432bdb
.L_432dc0:

            lea RBP,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,RBP
            mov QWORD PTR [RSP+48],RAX
.L_432dd1:

            call .L_431510

            mov RSI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            cmp RSI,RAX
            je .L_432e5b

            lea RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RSP+64]
            cmp RDI,RCX
            je .L_432eb6

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_432ec5

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_432e27:

            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            add RBP,16
            mov RDI,QWORD PTR [RSP+48]
            cmp RDI,RBP
            jne .L_432d78

            jmp .L_432d7d
.L_432e4a:

            lea RSI,QWORD PTR [R14+88]
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_432e56:

            jmp .L_432d7d
.L_432e5b:

            test RDX,RDX
            je .L_432e79

            cmp RDX,1
            je .L_432f08

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_432e79:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_432e27
.L_432e89:

            test RDX,RDX
            je .L_432ea3

            cmp RDX,1
            je .L_432ef5

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_432ea3:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_432d59
.L_432eb6:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_432ec5:

            lea RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_432e27
.L_432ed3:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_432ee2:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_432d59
.L_432ef5:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_432ea3
.L_432f08:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_432e79
.L_432f1e:

            call __stack_chk_fail@PLT
.L_432f23:

            mov EDI,EBX
.L_432f25:

            call .L_431700
.L_432f2a:

            mov RBX,RAX
.L_432f2d:

            lea RAX,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R14+120]
            mov QWORD PTR [RSP+232],RAX
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_432f4d:

            lea RDI,QWORD PTR [R14+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_432f61:

            lea RDI,QWORD PTR [R14+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R15-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+RAX*1+120],RCX
            jmp .L_432f2d
.L_432f84:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            cmp RDI,RBX
            je .L_432f97

            call _ZdlPv@PLT
.L_432f97:

            call _ZSt9terminatev@PLT
.L_432f9c:

            mov RBX,RAX
            mov RDI,R14
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_432fb4:

            jmp .L_432f9c
.L_432fb6:

            jmp .L_432f84
.L_432fb8:

            jmp .L_432f9c
.L_432fba:

            jmp .L_432f9c
.L_432fbc:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_432fd7

            call _ZdlPv@PLT
.L_432fd7:

            mov RDI,R14
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_432fe7:

            mov RBX,RAX
            jmp .L_432fd7
.L_432fec:

            nop
            nop
            nop
            nop
.L_432ff0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,520
.L_433004:

            movzx R13D,BYTE PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp R13B,21
            ja .L_433230

            lea RDI,QWORD PTR [RIP+.L_434208]
            movzx ECX,R13B
            mov RBP,R8
            mov EAX,R13D
            movsxd RDX,DWORD PTR [RDI+RCX*4]
            add RDX,RDI
            jmp RDX
          .byte 0x90
.L_433040:

            mov RDI,RBP
.L_433043:

            call .L_40f430

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433050:

            mov BYTE PTR [RBX+1],1
            mov RDI,RBX
            call .L_40feb0

            mov R12,RAX
.L_43305f:

            mov RSI,QWORD PTR [RSP+504]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_4337d4

            add RSP,520
.L_433080:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433090:

            mov RDI,RSI
            call .L_431660

            mov R12,RAX
.L_43309b:

            mov BYTE PTR [R12+1],1
            jmp .L_43305f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4330a8:

            movzx EAX,WORD PTR [RSI+6]
            lea RCX,QWORD PTR [RSI+8]
            cmp AX,1
            jbe .L_4330ba

            mov RCX,QWORD PTR [RSI+8]
.L_4330ba:

            test AX,AX
            je .L_433050

            mov RDI,QWORD PTR [RCX]
            cmp RDI,QWORD PTR [RBP]
            jne .L_433480

            sub EAX,1
            lea RSI,QWORD PTR [RAX*8+8]
            mov EAX,8
            jmp .L_4330f3
          .byte 0x66
          .byte 0x90
.L_4330e0:

            mov RDX,QWORD PTR [RCX+RAX*1]
            add RAX,8
            cmp RDX,QWORD PTR [RBP+RAX*1-8]
            jne .L_433480
.L_4330f3:

            cmp RSI,RAX
            jne .L_4330e0

            mov R12D,1
            jmp .L_433109
.L_433100:

            mov RDI,QWORD PTR [RBP+R12*8]
            add R12,1
.L_433109:

            call .L_40f430

            movzx EAX,WORD PTR [RBX+6]
            cmp EAX,R12D
            jg .L_433100

            jmp .L_433050
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433120:

            mov R12,QWORD PTR [R8]
            movzx ECX,BYTE PTR [R12]
            cmp CL,2
            je .L_43305f

            cmp WORD PTR [RSI+6],1
            mov RDX,QWORD PTR [RSI+8]
            jbe .L_43313f

            mov RDX,QWORD PTR [RDX]
.L_43313f:

            cmp R12,RDX
            mov RDI,R12
            je .L_433043

            cmp AL,CL
            movzx EBP,WORD PTR [RBX+2]
            jne .L_43315f

            cmp WORD PTR [R12+2],BP
            je .L_43305f
.L_43315f:

            mov EDI,40
            call _Znwm@PLT
.L_433169:

            movzx EDX,BP
            mov ESI,R13D
            mov RDI,RAX
            mov RBX,RAX
.L_433175:

            call .L_40c9d0
.L_43317a:

            mov EAX,1
            mov QWORD PTR [RBX+8],R12
            mov BYTE PTR [RBX+1],1
            mov WORD PTR [RBX+6],AX
            mov R12,RBX
            jmp .L_43305f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433198:

            mov R12,QWORD PTR [R8]
            cmp BYTE PTR [R12],2
            je .L_43305f

            movzx ECX,WORD PTR [RSI+2]
            mov EDX,DWORD PTR [RSI+24]
            mov RDI,R12
            mov ESI,DWORD PTR [RSI+28]
.L_4331b3:

            call .L_432680

            mov RDI,R12
            mov RBX,RAX
            mov R12,RBX
            call .L_40f430

            mov BYTE PTR [RBX+1],1
            jmp .L_43305f

            nop
.L_4331d0:

            cmp WORD PTR [RSI+6],1
            mov RBP,QWORD PTR [R8]
            mov RAX,QWORD PTR [RSI+8]
            jbe .L_4331e1

            mov RAX,QWORD PTR [RAX]
.L_4331e1:

            cmp RBP,RAX
            je .L_433040

            movzx R13D,WORD PTR [RBX+2]
            mov EDI,40
            call _Znwm@PLT
.L_4331f9:

            mov ESI,11
            mov RDI,RAX
            mov R12,RAX
            mov EDX,R13D
.L_433207:

            call .L_40c9d0
.L_43320c:

            mov EAX,DWORD PTR [RBX+24]
            mov EDX,1
            mov QWORD PTR [R12+8],RBP
            mov WORD PTR [R12+6],DX
            mov BYTE PTR [R12+1],1
            mov DWORD PTR [R12+24],EAX
            jmp .L_43305f
          .byte 0x90
.L_433230:

            lea RBP,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4332c0:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4332c5:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_43337f:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_433384:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43415b]
            mov EDX,15
.L_433394:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,291
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4333d0:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_43417f]
            mov EDX,27
.L_4333e0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            movzx ESI,BYTE PTR [RBX]
            lea RDI,QWORD PTR [RBP+8]
            call _ZNSolsEi@PLT
.L_4333f1:

            cmp BYTE PTR [RSP+112],0
            je .L_433500
.L_4333fc:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_43342e

            call _ZdlPv@PLT
.L_43342e:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_433470:

            call .L_40feb0

            mov R12,RAX
            jmp .L_43305f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433480:

            movzx R14D,WORD PTR [RBX+2]
            mov EDI,40
            call _Znwm@PLT
.L_43348f:

            mov ESI,R13D
            mov RDI,RAX
            mov R12,RAX
            mov EDX,R14D
.L_43349b:

            call .L_40c9d0
.L_4334a0:

            movzx R13D,WORD PTR [RBX+6]
            cmp R13W,1
            jbe .L_433640

            movzx EDI,R13W
            shl RDI,3
.L_4334b8:

            call _Znam@PLT
.L_4334bd:

            movzx EDX,WORD PTR [RBX+6]
            mov QWORD PTR [R12+8],RAX
            mov WORD PTR [R12+6],R13W
.L_4334cc:

            test EDX,EDX
            je .L_43309b

            sub EDX,1
            lea RSI,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4334e8:

            mov RCX,QWORD PTR [RBP+RDX*1]
            mov QWORD PTR [RAX+RDX*1],RCX
            add RDX,8
            cmp RSI,RDX
            jne .L_4334e8

            jmp .L_43309b
          .byte 0x90
.L_433500:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_433654

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_433668

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_433579:

            call .L_431510
.L_43357e:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433709

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_433767

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_433776

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_4335dc:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_433600
.L_4335fb:

            call _ZdlPv@PLT
.L_433600:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_43360f:

            call write@PLT
.L_433614:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_4333fc

            call _ZdlPv@PLT

            jmp .L_4333fc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433640:

            movzx EDX,R13W
            mov WORD PTR [R12+6],R13W
            lea RAX,QWORD PTR [R12+8]
            jmp .L_4334cc
.L_433654:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
.L_43365c:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            jmp .L_433600
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433668:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
            call .L_431510
.L_433683:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_43373a

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_433789

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_433798

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_4336e1:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_4335fb

            jmp .L_433600
.L_433709:

            test RDX,RDX
            je .L_433727

            cmp RDX,1
            je .L_4337be

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_433727:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_4335dc
.L_43373a:

            test RDX,RDX
            je .L_433754

            cmp RDX,1
            je .L_4337ab

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_433754:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_4336e1
.L_433767:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_433776:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4335dc
.L_433789:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_433798:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_4336e1
.L_4337ab:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_433754
.L_4337be:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_433727
.L_4337d4:

            call __stack_chk_fail@PLT
.L_4337d9:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_4337f0

            call _ZdlPv@PLT
.L_4337f0:

            call _ZSt9terminatev@PLT
.L_4337f5:

            mov RBP,RAX
            mov RDI,RBX
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_433808:

            call _Unwind_Resume@PLT
.L_43380d:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_433820:

            jmp .L_4337d9
.L_433822:

            mov RBX,RAX
            mov RDI,R12
            mov ESI,40
            call _ZdlPvm@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43383a:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43384e:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RSI,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RSI
.L_433870:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_433889:

            mov RBX,RAX
            jmp .L_433870
.L_43388e:

            jmp .L_433822
.L_433890:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43389b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDI+1],0
            jne .L_433918

            lea RBP,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RIP+.L_6476f0]
            mov RDI,RBP
.L_4338c0:

            call .L_434260
.L_4338c5:

            mov ECX,1
            xor EDX,EDX
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP+16],R12
            mov DWORD PTR [RSP+36],1000000
.L_4338df:

            call .L_434da0
.L_4338e4:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+16],R12
            call .L_434ab0

            mov RAX,QWORD PTR [RSP+8]
.L_4338fb:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_43391f

            add RSP,48
.L_43390f:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433918:

            call .L_40feb0

            jmp .L_4338fb
.L_43391f:

            call __stack_chk_fail@PLT
.L_433924:

            mov RBX,RAX
            mov RDI,RBP
            mov QWORD PTR [RSP+16],R12
            call .L_434ab0

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43393c:

            nop
            nop
            nop
            nop
.L_433940:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RDX,RCX
            mov R12,RDI
            mov RBP,RCX
            sub RSP,520
.L_43395d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
.L_433970:

            call .L_42ee70

            test RAX,RAX
            je .L_433c96

            mov RBX,RAX
            mov RDI,RAX
            call .L_433890

            mov RDI,RBX
            mov R14,RAX
            call .L_40f430

            test R14,R14
            je .L_433a38

            lea RBX,QWORD PTR [RSP+112]
            mov RSI,R14
            mov RDI,RBX
            call .L_436930

            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [R13]
            mov RDX,QWORD PTR [RSP+120]
            cmp RSI,RAX
            je .L_433ce8

            lea RCX,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [RSP+128]
            cmp RDI,RCX
            je .L_433cc8

            test RDI,RDI
            mov RCX,QWORD PTR [R13+16]
            mov QWORD PTR [R13],RSI
            mov QWORD PTR [R13+8],RDX
            mov QWORD PTR [R13+16],RAX
            je .L_433cd4

            mov QWORD PTR [RSP+112],RDI
            mov QWORD PTR [RSP+128],RCX
.L_433a03:

            mov QWORD PTR [RSP+120],0
            mov BYTE PTR [RDI],0
            add RBX,16
            mov RDI,QWORD PTR [RSP+112]
            cmp RDI,RBX
            je .L_433a22

            call _ZdlPv@PLT
.L_433a22:

            mov RDI,R14
            call .L_40f430
.L_433a2a:

            mov EAX,1
            jmp .L_433c98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433a38:

            lea RBX,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R13
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_433ac7:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_433acc:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_433b86:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_433b8b:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43415b]
            mov EDX,15
.L_433b9b:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,28
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_433bd7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_43419b]
            mov EDX,19
.L_433be7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            call .L_414b60
.L_433bf8:

            cmp BYTE PTR [RSP+112],0
            je .L_433d20
.L_433c03:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_433c3c

            call _ZdlPv@PLT
.L_433c3c:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT

            test RBP,RBP
            je .L_433c96

            mov RAX,QWORD PTR [R12]
            mov DWORD PTR [RBP],1
            mov QWORD PTR [RBP+8],RAX
            mov EAX,DWORD PTR [R12+8]
            mov DWORD PTR [RBP+16],EAX
.L_433c96:

            xor EAX,EAX
.L_433c98:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_433ffd

            add RSP,520
.L_433cb6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433cc8:

            mov QWORD PTR [R13],RSI
            mov QWORD PTR [R13+8],RDX
            mov QWORD PTR [R13+16],RAX
.L_433cd4:

            lea RDI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+112],RDI
            jmp .L_433a03
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433ce8:

            test RDX,RDX
            je .L_433d0a

            cmp RDX,1
            jne .L_433e60

            movzx EAX,BYTE PTR [RSP+128]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [R13]
.L_433d0a:

            mov QWORD PTR [R13+8],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+112]
            jmp .L_433a03
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433d20:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_433f20

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_433e78

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_433d96:

            call .L_431510
.L_433d9b:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433f32

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_433f90

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_433f9f

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RAX
.L_433df9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_433e1d
.L_433e18:

            call _ZdlPv@PLT
.L_433e1d:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_433e2c:

            call write@PLT
.L_433e31:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_433c03

            call _ZdlPv@PLT

            jmp .L_433c03
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433e60:

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [R13]
            jmp .L_433d0a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433e78:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_433e91:

            call .L_431510

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_433f63

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_433fb2

            test RDI,RDI
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_433fc1

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RAX
.L_433ef4:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_433e18

            jmp .L_433e1d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433f20:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_433f2d:

            jmp .L_433e1d
.L_433f32:

            test RDX,RDX
            je .L_433f50

            cmp RDX,1
            je .L_433fe7

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_433f50:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_433df9
.L_433f63:

            test RDX,RDX
            je .L_433f7d

            cmp RDX,1
            je .L_433fd4

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_433f7d:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_433ef4
.L_433f90:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_433f9f:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_433df9
.L_433fb2:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_433fc1:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_433ef4
.L_433fd4:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_433f7d
.L_433fe7:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_433f50
.L_433ffd:

            call __stack_chk_fail@PLT
.L_434002:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_434019

            call _ZdlPv@PLT
.L_434019:

            call _ZSt9terminatev@PLT
.L_43401e:

            jmp .L_434002
.L_434020:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
.L_43402e:

            call _Unwind_Resume@PLT
.L_434033:

            mov RBP,RAX
.L_434036:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_43404f:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_434063:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
            jmp .L_434036
.L_434086:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434090:

            mov RAX,RDX
            ret 
.L_434094:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4340a0:

            mov RAX,RSI
            ret 
.L_4340a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4340b0:

            mov RAX,RCX
            ret 
.L_4340b4:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4340b8:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_4340e8:
          .string "SimplifyWalker::ShortVisit called"
          .zero 6
.L_434110:
          .string "Case not handled in ComputeSimple: "
.L_434134:
          .string "\n"
.L_434136:
          .string "./re2/regexp.h"
.L_434145:
          .string ":"
.L_434147:
          .string ": "
.L_43414a:
          .string "Cannot AllocSub "
.L_43415b:
          .string "re2/simplify.cc"
.L_43416b:
          .string "Malformed repeat "
.L_43417d:

            and BYTE PTR [RAX],AL
.L_43417f:
          .string "Simplify case not handled: "
.L_43419b:
          .string "Simplify failed on "
          .byte 0x90
.L_4341b0:
          .long .L_4320a8-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_431fc8-.L_4341b0
          .long .L_431fc8-.L_4341b0
          .long .L_432020-.L_4341b0
          .long .L_432020-.L_4341b0
          .long .L_432020-.L_4341b0
          .long .L_431f98-.L_4341b0
          .long .L_432060-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432012-.L_4341b0
          .long .L_432080-.L_4341b0
          .long .L_432012-.L_4341b0
.L_434208:
          .long .L_433230-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_4330a8-.L_434208
          .long .L_4330a8-.L_434208
          .long .L_433120-.L_434208
          .long .L_433120-.L_434208
          .long .L_433120-.L_434208
          .long .L_433198-.L_434208
          .long .L_4331d0-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433050-.L_434208
          .long .L_433090-.L_434208
          .long .L_433050-.L_434208
.L_434260:

            lea RAX,QWORD PTR [RIP+.L_649da0]
            push R12
            push RBP
            push RBX
.L_43426b:

            mov RBP,RDI
            mov QWORD PTR [RDI],RAX
            mov EDI,80
.L_434276:

            call _Znwm@PLT
.L_43427b:

            mov EDI,64
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBX,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_4342d2:

            call _Znwm@PLT
.L_4342d7:

            mov RCX,QWORD PTR [RBX+8]
            mov EDI,480
            mov QWORD PTR [RBX],RAX
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R12,QWORD PTR [RAX+RDX*8]
.L_4342ee:

            call _Znwm@PLT
.L_4342f3:

            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [RBP+8],RBX
            mov BYTE PTR [RBP+16],0
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+64],RDX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+48],RAX
            pop RBX
.L_434327:

            pop RBP
            pop R12
            ret 
.L_43432b:

            mov RBP,RAX
.L_43432e:

            mov RDI,RBX
            mov ESI,80
            call _ZdlPvm@PLT

            mov RDI,RBP
.L_43433e:

            call _Unwind_Resume@PLT
.L_434343:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_43434b:

            call __cxa_rethrow@PLT
.L_434350:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBP
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBX]
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
.L_434377:

            call __cxa_rethrow@PLT
.L_43437c:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            jmp .L_43432e
.L_434386:
          .string "./re2/walker-inl.h"
.L_434399:
          .string "Stack not empty."
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4343b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,520
.L_4343c1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_434424

            mov RDX,QWORD PTR [RAX+72]
            sub RDX,QWORD PTR [RAX+40]
            movabs RCX,-6148914691236517205
            sar RDX,3
            lea RSI,QWORD PTR [RDX+RDX*4-5]
            mov RDX,QWORD PTR [RAX+48]
            sub RDX,QWORD PTR [RAX+56]
            sar RDX,4
            imul RDX,RCX
            lea RSI,QWORD PTR [RDX+RSI*2]
            mov RDX,QWORD PTR [RAX+32]
            sub RDX,QWORD PTR [RAX+16]
            mov RAX,RDX
            sar RAX,4
            imul RAX,RCX
            add RSI,RAX
            jne .L_434450
.L_434424:

            mov RAX,QWORD PTR [RSP+504]
            xor RAX,QWORD PTR FS:[40]
            jne .L_434a22

            add RSP,520
.L_434442:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434450:

            lea RBX,QWORD PTR [RSP+112]
            mov RBP,RDI
            mov BYTE PTR [RSP+112],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R13
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R12
            lea RDI,QWORD PTR [RBX+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4344e3:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4344e8:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RBX+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_4345a2:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4345a7:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434386]
            mov EDX,18
.L_4345b7:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov ESI,147
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4345f3:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434399]
            mov EDX,16
.L_434603:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_434608:

            cmp BYTE PTR [RSP+112],0
            je .L_434760
.L_434613:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [RBX+104]
            cmp RDI,RAX
            je .L_434645

            call _ZdlPv@PLT
.L_434645:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+120],R12
            movabs R12,-6148914691236517205
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4346a0:

            mov RCX,QWORD PTR [RBX+72]
            mov RAX,RCX
            sub RAX,QWORD PTR [RBX+40]
            sar RAX,3
            lea RSI,QWORD PTR [RAX+RAX*4-5]
            mov RAX,RDX
            sub RAX,RDI
            sar RAX,4
            imul RAX,R12
            lea RSI,QWORD PTR [RAX+RSI*2]
            mov RAX,QWORD PTR [RBX+32]
            sub RAX,QWORD PTR [RBX+16]
            sar RAX,4
            imul RAX,R12
            add RSI,RAX
            je .L_434424

            cmp RDX,RDI
            je .L_434710
.L_4346e4:

            mov RDI,QWORD PTR [RDX-8]
            mov ESI,8
            call _ZdlPvm@PLT

            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RDX,RDI
            je .L_434720

            sub RDX,48
            mov QWORD PTR [RBX+48],RDX
            jmp .L_4346a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434710:

            mov RDX,QWORD PTR [RCX-8]
            add RDX,480
            jmp .L_4346e4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434720:

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX-8]
            mov RAX,QWORD PTR [RAX-8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            add RAX,432
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_4346a0
          .byte 0x90
.L_434760:

            lea RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_434945

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            ja .L_4348a0

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RSP+64]
            mov RDI,RCX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+8],RCX
.L_4347d7:

            call .L_431510
.L_4347dc:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_434957

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+64]
            add RCX,16
            cmp RDI,RCX
            je .L_4349b5

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4349c4

            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+64],RCX
.L_43483a:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            je .L_43485e
.L_434859:

            call _ZdlPv@PLT
.L_43485e:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_43486d:

            call write@PLT
.L_434872:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_434613

            call _ZdlPv@PLT

            jmp .L_434613
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4348a0:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+96]
            mov RDI,RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RCX
.L_4348ba:

            call .L_431510

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_434988

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            add RCX,16
            cmp RDI,RCX
            je .L_4349d7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
            je .L_4349e6

            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+96],RCX
.L_43491d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            jne .L_434859

            jmp .L_43485e
.L_434945:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_434952:

            jmp .L_43485e
.L_434957:

            test RDX,RDX
            je .L_434975

            cmp RDX,1
            je .L_434a0c

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
.L_434975:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+48]
            jmp .L_43483a
.L_434988:

            test RDX,RDX
            je .L_4349a2

            cmp RDX,1
            je .L_4349f9

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
.L_4349a2:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+80]
            jmp .L_43491d
.L_4349b5:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4349c4:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+48],RDI
            jmp .L_43483a
.L_4349d7:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RAX
.L_4349e6:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_43491d
.L_4349f9:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4349a2
.L_434a0c:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_434975
.L_434a22:

            call __stack_chk_fail@PLT
.L_434a27:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_434a3e

            call _ZdlPv@PLT
.L_434a3e:

            call _ZSt9terminatev@PLT
.L_434a43:

            jmp .L_434a27
.L_434a45:

            lea RDI,QWORD PTR [RBX+16]
            mov RBP,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R12
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_434a67:

            lea RDI,QWORD PTR [RBX+120]
            mov QWORD PTR [RSP+232],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBP
.L_434a7b:

            call _Unwind_Resume@PLT
.L_434a80:

            mov RBP,RAX
            mov RDI,RBX
            call .L_40c160

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_434a93:

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_434aa7:

            mov RBP,RAX
            jmp .L_434a67
.L_434aac:

            nop
            nop
            nop
            nop
.L_434ab0:

            lea RAX,QWORD PTR [RIP+.L_649da0]
            push R12
            push RBP
            push RBX
.L_434abb:

            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_4343b0

            mov RBP,QWORD PTR [RBX+8]
            test RBP,RBP
            je .L_434b20

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_434b0a

            mov RAX,QWORD PTR [RBP+72]
            mov RBX,QWORD PTR [RBP+40]
            lea R12,QWORD PTR [RAX+8]
            cmp R12,RBX
            jbe .L_434b05

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434af0:

            mov RDI,QWORD PTR [RBX]
            add RBX,8
            call _ZdlPv@PLT

            cmp R12,RBX
            ja .L_434af0

            mov RDI,QWORD PTR [RBP]
.L_434b05:

            call _ZdlPv@PLT
.L_434b0a:

            pop RBX
.L_434b0b:

            mov RDI,RBP
            mov ESI,80
            pop RBP
            pop R12
            jmp _ZdlPvm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434b20:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_434b25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434b30:

            push RBX
            mov RBX,RDI
            call .L_434ab0

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_434b47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434b50:

            lea RAX,QWORD PTR [RIP+.L_6476f0]
            mov QWORD PTR [RDI],RAX
            jmp .L_434ab0
.L_434b5f:

            nop
.L_434b60:

            lea RAX,QWORD PTR [RIP+.L_6476f0]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_434ab0

            mov RDI,RBX
            mov ESI,24
            pop RBX
            jmp _ZdlPvm@PLT
.L_434b81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434b90:

            mov RCX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RDI+48]
            lea RDX,QWORD PTR [RCX-48]
            cmp RAX,RDX
            je .L_434bd0

            test RAX,RAX
            je .L_434bbf

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_434bbf:

            add RAX,48
            mov QWORD PTR [RDI+48],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434bd0:

            push R15
.L_434bd2:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_434be4:

            mov R12,QWORD PTR [RDI+72]
            mov RCX,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RDI+8]
            mov RAX,R12
            sub RAX,RCX
            mov RSI,RDX
            sar RAX,3
            sub RSI,RAX
            cmp RSI,1
            jbe .L_434c70
.L_434c05:

            mov EDI,480
            call _Znwm@PLT

            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_434c37

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+32],XMM0
.L_434c37:

            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+72],RDX
            lea RDX,QWORD PTR [RAX+480]
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RBX+64],RDX
            add RSP,8
.L_434c5e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c70:

            mov RSI,QWORD PTR [RDI+40]
            mov RAX,R12
            sub RAX,RSI
            sar RAX,3
            lea R14,QWORD PTR [RAX+2]
            lea R13,QWORD PTR [RAX+1]
            lea RAX,QWORD PTR [R14+R14*1]
            cmp RDX,RAX
            ja .L_434d38

            test RDX,RDX
            je .L_434d68

            lea R12,QWORD PTR [RDX+RDX*1+2]
            movabs RAX,2305843009213693951
            cmp R12,RAX
            ja .L_434d90
.L_434cb4:

            lea RDI,QWORD PTR [R12*8]
            call _Znwm@PLT

            mov R15,RAX
            mov RAX,R12
            mov RSI,QWORD PTR [RBX+40]
            sub RAX,R14
            shr RAX,1
            lea R14,QWORD PTR [R15+RAX*8]
            mov RAX,QWORD PTR [RBX+72]
            lea RDX,QWORD PTR [RAX+8]
            cmp RDX,RSI
            je .L_434ced

            sub RDX,RSI
            mov RDI,R14
            call memmove@PLT
.L_434ced:

            mov RDI,QWORD PTR [RBX]
            shl R13,3
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],R15
            mov QWORD PTR [RBX+8],R12
.L_434d00:

            mov RAX,QWORD PTR [R14]
            lea R12,QWORD PTR [R14+R13*1-8]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R12
            mov QWORD PTR [RBX+24],RAX
            add RAX,480
            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+56],RAX
            add RAX,480
            mov QWORD PTR [RBX+64],RAX
            jmp .L_434c05
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434d38:

            sub RDX,R14
            add R12,8
            shl R13,3
            shr RDX,1
            lea R14,QWORD PTR [RCX+RDX*8]
            mov RDX,R12
            sub RDX,RSI
            cmp RSI,R14
            jbe .L_434d78

            cmp RSI,R12
            je .L_434d00

            mov RDI,R14
            call memmove@PLT

            jmp .L_434d00
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434d68:

            mov R12D,3
            jmp .L_434cb4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434d78:

            cmp RSI,R12
            je .L_434d00

            mov RDI,R13
            sub RDI,RDX
            add RDI,R14
            call memmove@PLT

            jmp .L_434d00
.L_434d90:

            call _ZSt17__throw_bad_allocv@PLT
.L_434d95:
          .string "Walk NULL"
          .byte 0x90
.L_434da0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,568
.L_434dbd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
.L_434dd0:

            call .L_4343b0

            test RBP,RBP
            je .L_435030

            mov RDI,QWORD PTR [R14+8]
            lea R15,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RBP
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+32],RBX
            movabs R13,-6148914691236517205
            mov RSI,R15
            mov QWORD PTR [RSP+56],0
            call .L_434b90

            mov RAX,QWORD PTR [R14+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
.L_434e24:

            cmp RDI,RBP
            je .L_434f63
.L_434e2d:

            mov R9D,DWORD PTR [RBP-40]
            mov RBX,QWORD PTR [RBP-48]
            cmp R9D,-1
            jne .L_434f80
.L_434e3f:

            mov EAX,DWORD PTR [R14+20]
            mov R8,QWORD PTR [R14]
            mov RDX,QWORD PTR [RBP-32]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [R14+20],EAX
            js .L_4353d8

            mov BYTE PTR [RSP+16],0
            mov RCX,R15
            mov RSI,RBX
            mov RDI,R14
            call QWORD PTR [R8+16]

            cmp BYTE PTR [RSP+16],0
            mov QWORD PTR [RBP-24],RAX
            jne .L_434ed5

            movzx EAX,WORD PTR [RBX+6]
            mov DWORD PTR [RBP-40],0
            mov QWORD PTR [RBP-8],0
            cmp AX,1
            je .L_435440

            mov R9D,0
            ja .L_435458

            nop
.L_434ea0:

            mov RAX,QWORD PTR [R14]
            mov RCX,QWORD PTR [RBP-24]
            mov RSI,RBX
            mov RDX,QWORD PTR [RBP-32]
            mov R8,QWORD PTR [RBP-8]
            mov RDI,R14
            call QWORD PTR [RAX+24]

            cmp WORD PTR [RBX+6],1
            jbe .L_434ed5

            mov RDI,QWORD PTR [RBP-8]
            test RDI,RDI
            je .L_434ed5

            mov QWORD PTR [RSP],RAX
            call _ZdaPv@PLT

            mov RAX,QWORD PTR [RSP]
.L_434ed5:

            mov RBX,QWORD PTR [R14+8]
            mov RBP,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            cmp RBP,RDI
            je .L_4353f0

            sub RBP,48
            mov QWORD PTR [RBX+48],RBP
.L_434ef2:

            mov RCX,QWORD PTR [RBX+72]
            mov RDX,RCX
            sub RDX,QWORD PTR [RBX+40]
            sar RDX,3
            lea RSI,QWORD PTR [RDX+RDX*4-5]
            mov RDX,RBP
            sub RDX,RDI
            sar RDX,4
            imul RDX,R13
            lea RSI,QWORD PTR [RDX+RSI*2]
            mov RDX,QWORD PTR [RBX+32]
            sub RDX,QWORD PTR [RBX+16]
            sar RDX,4
            imul RDX,R13
            add RSI,RDX
            je .L_4353ac

            cmp RBP,RDI
            mov RDX,RBP
            je .L_435020
.L_434f3d:

            mov R8,QWORD PTR [RDX-8]
            mov ESI,DWORD PTR [RDX-40]
            test R8,R8
            je .L_435010

            movsxd R9,ESI
            mov QWORD PTR [R8+R9*8],RAX
.L_434f54:

            add ESI,1
            cmp RDI,RBP
            mov DWORD PTR [RDX-40],ESI
            jne .L_434e2d
.L_434f63:

            mov RBP,QWORD PTR [RCX-8]
            add RBP,480
            mov R9D,DWORD PTR [RBP-40]
            mov RBX,QWORD PTR [RBP-48]
            cmp R9D,-1
            je .L_434e3f
.L_434f80:

            movzx EAX,WORD PTR [RBX+6]
.L_434f84:

            test AX,AX
            je .L_434ea0

            cmp AX,1
            jbe .L_43544b

            mov RDX,QWORD PTR [RBX+8]
.L_434f9b:

            cmp R9D,EAX
            jge .L_434ea0

            movsxd RAX,R9D
            test R9D,R9D
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,QWORD PTR [RDX+RAX*8]
            jle .L_434fc8

            test R12B,R12B
            je .L_434fc8

            cmp QWORD PTR [RDX+RCX*1-8],RAX
            je .L_435480
.L_434fc8:

            mov RDX,QWORD PTR [RBP-24]
            mov RDI,QWORD PTR [R14+8]
            mov RSI,R15
            mov QWORD PTR [RSP+16],RAX
            mov DWORD PTR [RSP+24],4294967295
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+32],RDX
            call .L_434b90
.L_434ff3:

            mov RAX,QWORD PTR [R14+8]
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_434e24
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435010:

            mov QWORD PTR [RDX-16],RAX
            jmp .L_434f54
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435020:

            mov RSI,QWORD PTR [RCX-8]
            lea RDX,QWORD PTR [RSI+480]
            jmp .L_434f3d
.L_435030:

            lea RBP,QWORD PTR [RSP+160]
            mov BYTE PTR [RSP+160],0
            lea R13,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R12,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+504],0
            xor ESI,ESI
            mov QWORD PTR [RSP+280],R13
            mov QWORD PTR [RSP+496],0
            mov BYTE PTR [RSP+505],0
            mov QWORD PTR [RSP+512],0
            mov RAX,QWORD PTR [R12-24]
            mov QWORD PTR [RSP+520],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            mov QWORD PTR [RSP+168],R12
            lea RDI,QWORD PTR [RBP+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_4350c9:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_4350ce:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            lea R14,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+280],R14
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+224],0
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBP+120]
            mov DWORD PTR [RSP+240],16
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            mov BYTE PTR [RSP+264],0
            mov QWORD PTR [RSP+248],RAX
.L_43518b:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_435190:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434386]
            mov EDX,18
.L_4351a0:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434145]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [RBP+8]
            mov ESI,160
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_434147]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4351dc:

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434d95]
            mov EDX,9
.L_4351ec:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_4351f1:

            cmp BYTE PTR [RSP+160],0
            jne .L_43532f

            lea RDI,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RIP+.L_434134]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+72],0
            mov BYTE PTR [RSP+80],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+216]
            test RAX,RAX
            je .L_435571

            mov RDX,QWORD PTR [RSP+200]
            mov RSI,QWORD PTR [RSP+208]
            cmp RAX,RDX
            ja .L_4354b2

            lea RCX,QWORD PTR [RSP+96]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+96],RAX
.L_435275:

            call .L_431510
.L_43527a:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_435583

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+112]
            add RCX,16
            cmp RDI,RCX
            je .L_4355e7

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_4355f6

            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+112],RCX
.L_4352d8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+104],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+96]
            add RAX,16
            cmp RDI,RAX
            je .L_4352fc
.L_4352f7:

            call _ZdlPv@PLT
.L_4352fc:

            movsxd RDX,DWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov EDI,2
.L_43530b:

            call write@PLT
.L_435310:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov BYTE PTR [RSP+160],1
            add RAX,16
            cmp RDI,RAX
            je .L_43532f

            call _ZdlPv@PLT
.L_43532f:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov RDI,QWORD PTR [RSP+248]
            mov QWORD PTR [RSP+168],R15
            mov QWORD PTR [RSP+280],R14
            mov QWORD PTR [RSP+176],RAX
            lea RAX,QWORD PTR [RBP+104]
            cmp RDI,RAX
            je .L_435364

            call _ZdlPv@PLT
.L_435364:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [RBP+72]
            mov QWORD PTR [RSP+176],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+168],R12
            mov QWORD PTR [RSP+RAX*1+168],RCX
            mov QWORD PTR [RSP+280],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RAX,RBX
.L_4353ac:

            mov RCX,QWORD PTR [RSP+552]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43565d

            add RSP,568
.L_4353ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4353d8:

            mov BYTE PTR [R14+16],1
            mov RSI,RBX
            mov RDI,R14
.L_4353e3:

            call QWORD PTR [R8+40]

            jmp .L_434ed5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4353f0:

            mov QWORD PTR [RSP],RAX
            call _ZdlPv@PLT

            mov RDX,QWORD PTR [RBX+72]
            mov RAX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RDX-8]
            mov RDX,QWORD PTR [RDX-8]
            mov QWORD PTR [RBX+72],RCX
            lea RCX,QWORD PTR [RDX+480]
            mov QWORD PTR [RBX+56],RDX
            add RDX,432
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+64],RCX
            mov RBX,QWORD PTR [R14+8]
            mov RBP,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX+56]
            jmp .L_434ef2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435440:

            lea RDX,QWORD PTR [RBP-16]
            xor R9D,R9D
            mov QWORD PTR [RBP-8],RDX
.L_43544b:

            lea RDX,QWORD PTR [RBX+8]
            jmp .L_434f9b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435458:

            lea RDI,QWORD PTR [RAX*8]
            call _Znam@PLT

            mov R9D,DWORD PTR [RBP-40]
            mov QWORD PTR [RBP-8],RAX
            movzx EAX,WORD PTR [RBX+6]
            jmp .L_434f84
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435480:

            mov RAX,QWORD PTR [RBP-8]
            mov RDI,R14
            lea RBX,QWORD PTR [RAX+RCX*1]
            mov RSI,QWORD PTR [RAX+RCX*1-8]
            mov RAX,QWORD PTR [R14]
            call QWORD PTR [RAX+32]
.L_435496:

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [R14+8]
            add DWORD PTR [RBP-40],1
            mov RDI,QWORD PTR [RAX+56]
            mov RBP,QWORD PTR [RAX+48]
            mov RCX,QWORD PTR [RAX+72]
            jmp .L_434e24
.L_4354b2:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+128],RDX
            mov RDX,RAX
.L_4354d1:

            call .L_431510

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+136]
            lea RAX,QWORD PTR [RCX+16]
            cmp RSI,RAX
            je .L_4355b4

            mov RCX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+144]
            add RCX,16
            cmp RDI,RCX
            je .L_435609

            test RDI,RDI
            mov RCX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
            je .L_435618

            mov QWORD PTR [RSP+128],RDI
            mov QWORD PTR [RSP+144],RCX
.L_435543:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+136],0
            mov BYTE PTR [RDI],0
            mov RDI,QWORD PTR [RSP+128]
            add RAX,16
            cmp RDI,RAX
            jne .L_4352f7

            jmp .L_4352fc
.L_435571:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBP+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_43557e:

            jmp .L_4352fc
.L_435583:

            test RDX,RDX
            je .L_4355a1

            cmp RDX,1
            je .L_435647

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
.L_4355a1:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+96]
            jmp .L_4352d8
.L_4355b4:

            test RDX,RDX
            je .L_4355d1

            cmp RDX,1
            je .L_43562e

            call memcpy@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
.L_4355d1:

            mov QWORD PTR [RSP+72],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RDI,QWORD PTR [RSP+128]
            jmp .L_435543
.L_4355e7:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_4355f6:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+96],RDI
            jmp .L_4352d8
.L_435609:

            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RDX
            mov QWORD PTR [RSP+80],RAX
.L_435618:

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+128],RDI
            jmp .L_435543
.L_43562e:

            movzx EAX,BYTE PTR [RSP+144]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4355d1
.L_435647:

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RDI],AL
            mov RDX,QWORD PTR [RSP+104]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_4355a1
.L_43565d:

            call __stack_chk_fail@PLT
.L_435662:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            add RAX,16
            cmp RDI,RAX
            je .L_435679

            call _ZdlPv@PLT
.L_435679:

            call _ZSt9terminatev@PLT
.L_43567e:

            jmp .L_435662
.L_435680:

            mov RBX,RAX
.L_435683:

            lea RDI,QWORD PTR [RBP+120]
            mov QWORD PTR [RSP+280],R13
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_435697:

            call _Unwind_Resume@PLT
.L_43569c:

            mov RBX,RAX
            mov RDI,RBP
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4356af:

            lea RDI,QWORD PTR [RBP+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R12-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+168],R12
            mov QWORD PTR [RSP+RAX*1+168],RCX
            jmp .L_435683
.L_4356d9:

            lea RDI,QWORD PTR [RBP+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4356ed:

            nop
            nop
            nop
.L_4356f0:

            xor R14,QWORD PTR [RDX+101]
            xor DH,BYTE PTR [RSI]
            push RDX
            js .L_43576c
          .byte 0x36
          .byte 0x57
          .byte 0x61
          .byte 0x6c
          .byte 0x6b
          .byte 0x65
          .byte 0x72
          .byte 0x49
          .byte 0x50
          .byte 0x53
          .byte 0x30
          .byte 0x5f
          .byte 0x45
          .byte 0x45
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435710:
          .string "N3re214SimplifyWalkerE"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435730:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_43573e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_43575c

            test RDX,RDX
            jne .L_4357e7
.L_43575c:

            mov RBX,RDX
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_4357b0
.L_43576c:

            mov RDX,QWORD PTR [RBP]
            cmp RBX,1
            mov RAX,RDX
            jne .L_4357e0

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBP]
.L_435784:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4357f3

            add RSP,16
.L_4357a4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4357b0:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
.L_4357c9:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBP]
            jmp .L_435784
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4357e0:

            test RBX,RBX
            je .L_435784

            jmp .L_4357c9
.L_4357e7:

            lea RDI,QWORD PTR [RIP+.L_436b48]
            call _ZSt19__throw_logic_errorPKc@PLT
.L_4357f3:

            call __stack_chk_fail@PLT
.L_4357f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435800:

            push RBP
            lea EAX,DWORD PTR [RSI-32]
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,8
.L_43580e:

            cmp EAX,94
            ja .L_435870

            lea RDI,QWORD PTR [RIP+.L_436baf]
            call strchr@PLT

            test RAX,RAX
            mov RSI,QWORD PTR [RBP+8]
            je .L_435853

            movabs RAX,9223372036854775807
            cmp RSI,RAX
            je .L_435990

            lea RSI,QWORD PTR [RIP+.L_436bca]
            mov EDX,1
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RSI,QWORD PTR [RBP+8]
.L_435853:

            add RSP,8
.L_435857:

            mov R8D,EBX
            mov RDI,RBP
            pop RBX
            pop RBP
            mov ECX,1
            xor EDX,EDX
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435870:

            cmp ESI,10
            je .L_4358f8

            jle .L_435930

            cmp ESI,12
            je .L_4358c0

            cmp ESI,13
            jne .L_435968

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_435990

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436bcc]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0x90
.L_4358c0:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_435990

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436bd5]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4358f8:

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_435990

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436bd2]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435930:

            cmp ESI,9
            jne .L_435968

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_435990

            add RSP,8
            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_436bcf]
            pop RBX
            pop RBP
            mov EDX,2
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435968:

            cmp EBX,255
            mov EDX,EBX
            lea RSI,QWORD PTR [RIP+.L_436bd8]
            jle .L_435980

            lea RSI,QWORD PTR [RIP+.L_436bdf]
.L_435980:

            add RSP,8
            mov RDI,RBP
            xor EAX,EAX
            pop RBX
            pop RBP
            jmp .L_415670
.L_435990:

            lea RDI,QWORD PTR [RIP+.L_436bb5]
            call _ZSt20__throw_length_errorPKc@PLT
.L_43599c:

            nop
            nop
            nop
            nop
.L_4359a0:

            cmp ESI,EDX
            jle .L_4359b0

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4359b0:

            push R12
            push RBP
            mov EBP,EDX
            push RBX
            mov EBX,ESI
            mov R12,RDI
            call .L_435800

            cmp EBX,EBP
            jl .L_4359d0

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4359d0:

            movabs RAX,9223372036854775807
            cmp QWORD PTR [R12+8],RAX
            je .L_435a03

            lea RSI,QWORD PTR [RIP+.L_436be6]
            mov RDI,R12
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            pop RBX
            mov ESI,EBP
            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_435800
.L_435a03:

            lea RDI,QWORD PTR [RIP+.L_436bb5]
            call _ZSt20__throw_length_errorPKc@PLT
.L_435a0f:

            nop
.L_435a10:

            test ESI,ESI
            push R12
            mov R12D,EDX
            push RBP
            mov RBP,RDI
            push RBX
.L_435a1c:

            mov EBX,ESI
            je .L_435a3a

            cmp ESI,127
            jg .L_435a3a

            lea RDI,QWORD PTR [RIP+.L_436be8]
            call strchr@PLT

            test RAX,RAX
            jne .L_435ac0
.L_435a3a:

            lea EAX,DWORD PTR [RBX-97]
            cmp EAX,25
            ja .L_435ab0

            test R12B,R12B
            je .L_435ab0

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,91
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            sub EBX,32
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,EBX
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            add EBX,32
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            movzx R8D,BL
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,93
.L_435a9d:

            pop RBX
.L_435a9e:

            mov RDI,RBP
            mov ECX,1
            xor EDX,EDX
            pop RBP
            pop R12
            jmp _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT
.L_435ab0:

            mov EDX,EBX
            mov ESI,EBX
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_4359a0
.L_435ac0:

            mov RSI,QWORD PTR [RBP+8]
            mov R8D,92
            mov ECX,1
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@PLT

            mov RSI,QWORD PTR [RBP+8]
            movsx R8D,BL
            jmp .L_435a9d
.L_435ae3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435af0:

            push R12
            push RBP
            push RBX
            movzx EAX,BYTE PTR [RSI]
            sub EAX,4
            cmp AL,7
            ja .L_435c36

            lea RCX,QWORD PTR [RIP+.L_436cb8]
            movzx EAX,AL
            mov RBX,RSI
            mov RBP,RDI
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435b20:

            cmp EDX,2
            mov EBX,3
            jle .L_435b42
.L_435b2a:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b38:

            cmp EDX,1
            mov EBX,2
            jg .L_435b2a
.L_435b42:

            mov RDI,QWORD PTR [RBP+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,2
            jbe .L_435c2a

            lea RSI,QWORD PTR [RIP+.L_436bf7]
            mov EDX,3
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b80:

            xor EBX,EBX
            test EDX,EDX
            jle .L_435b42

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435b90:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_435c2a

            lea RSI,QWORD PTR [RIP+.L_436bfb]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            cmp QWORD PTR [RBX+32],0
            je .L_435c20

            mov RDI,QWORD PTR [RBP+24]
            mov RAX,R12
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,2
            jbe .L_435c2a

            lea RSI,QWORD PTR [RIP+.L_436bfd]
            mov EDX,3
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBP+24]
            mov RDX,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov RDI,QWORD PTR [RBP+24]
            cmp QWORD PTR [RDI+8],R12
            je .L_435c2a

            lea RSI,QWORD PTR [RIP+.L_436c01]
            mov EBX,5
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov EAX,EBX
            pop RBX
.L_435c19:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435c20:

            mov EBX,5
            jmp .L_435b2a
.L_435c2a:

            lea RDI,QWORD PTR [RIP+.L_436bb5]
            call _ZSt20__throw_length_errorPKc@PLT
.L_435c36:

            xor EBX,EBX
            jmp .L_435b2a
.L_435c3d:

            nop
            nop
            nop
.L_435c40:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            sub RSP,520
.L_435c56:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            cmp BYTE PTR [RSI],21
            ja .L_435d40

            movzx EAX,BYTE PTR [RSI]
            lea RDX,QWORD PTR [RIP+.L_436cd8]
            mov R13,RSI
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435c90:

            movabs R12,9223372036854775807
            cmp RDX,R12
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c92]
            mov EDX,1
.L_435caf:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov R14,QWORD PTR [R13+24]
            mov ESI,65534
            mov RDI,R14
            call .L_40d3f0

            test AL,AL
            jne .L_4366bd
.L_435ccd:

            movsxd RAX,DWORD PTR [R14+16]
            mov R12,QWORD PTR [R14+8]
            shl RAX,3
            test RAX,RAX
            je .L_435d07

            nop
            nop
.L_435ce0:

            mov EDX,DWORD PTR [R12+4]
            mov ESI,DWORD PTR [R12]
            add R12,8
            mov RDI,QWORD PTR [RBX+24]
            call .L_4359a0

            movsxd RDX,DWORD PTR [R14+16]
            mov RAX,QWORD PTR [R14+8]
            lea RAX,QWORD PTR [RAX+RDX*8]
            cmp R12,RAX
            jne .L_435ce0
.L_435d07:

            cmp R14,QWORD PTR [R13+24]
            je .L_435d15

            mov RDI,R14
            call .L_40d310
.L_435d15:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c94]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            nop
            nop
.L_435d40:

            cmp EBP,3
            je .L_435d70
.L_435d45:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_436867

            add RSP,520
.L_435d65:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_435d70:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436ca6]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d45
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435da0:

            mov EDX,DWORD PTR [RSI+24]
            test EDX,EDX
            jle .L_435dd8

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
.L_435db0:

            mov RAX,QWORD PTR [R13+32]
            movzx EDX,WORD PTR [R13+2]
            mov RDI,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RAX+R12*4]
            and EDX,1
            call .L_435a10

            lea EAX,DWORD PTR [R12+1]
            add R12,1
            cmp DWORD PTR [R13+24],EAX
            jg .L_435db0
.L_435dd8:

            cmp EBP,1
            jg .L_435d40
.L_435de1:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c1b]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_435e0a:

            jmp .L_435d45
          .byte 0x90
.L_435e10:

            mov RAX,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RSI-1]
            add RCX,RDX
            cmp BYTE PTR [RCX],124
            je .L_4364f0

            lea R12,QWORD PTR [RSP+112]
            mov BYTE PTR [RSP+112],0
            lea R14,QWORD PTR [RIP+_ZTVSt9basic_iosIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+120]
            call _ZNSt8ios_baseC2Ev@PLT

            mov R13,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+8]
            mov BYTE PTR [RSP+456],0
            xor ESI,ESI
            mov QWORD PTR [RSP+232],R14
            mov QWORD PTR [RSP+448],0
            mov BYTE PTR [RSP+457],0
            mov QWORD PTR [RSP+464],0
            mov RAX,QWORD PTR [R13-24]
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+120],R13
            lea RDI,QWORD PTR [R12+RAX*1+8]
            mov RAX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RDI],RAX
.L_435ebb:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_435ec0:

            lea R15,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+24]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            lea RAX,QWORD PTR [R15+40]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeC1Ev@PLT

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            lea RSI,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [RSP+192],16
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R12+104]
            mov BYTE PTR [RSP+216],0
            mov QWORD PTR [RSP+200],RAX
.L_435f7e:

            call _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@PLT
.L_435f83:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436c31]
            mov EDX,15
.L_435f94:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436c41]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RDI,QWORD PTR [R12+8]
            mov ESI,178
            call _ZNSolsEi@PLT

            lea RSI,QWORD PTR [RIP+.L_436c43]
            mov EDX,2
            mov RDI,RAX
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
.L_435fd2:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436c46]
            mov EDX,16
.L_435fe3:

            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            mov RSI,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [R12+8]
            call _ZNSo9_M_insertIPKvEERSoT_@PLT
.L_435ff6:

            cmp BYTE PTR [RSP+112],0
            je .L_436558
.L_436001:

            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+64]
            mov RDI,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+120],R15
            mov QWORD PTR [RSP+232],RAX
            lea RAX,QWORD PTR [RIP+_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+128],RAX
            lea RAX,QWORD PTR [R12+104]
            cmp RDI,RAX
            je .L_43603b

            call _ZdlPv@PLT
.L_43603b:

            lea RAX,QWORD PTR [RIP+_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16]
            lea RDI,QWORD PTR [R12+72]
            mov QWORD PTR [RSP+128],RAX
            call _ZNSt6localeD1Ev@PLT

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT
.L_43607b:

            cmp EBP,2
            jg .L_435d40

            jmp .L_435de1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436090:

            movzx EDX,WORD PTR [RSI+2]
            mov RDI,QWORD PTR [RDI+24]
            mov ESI,DWORD PTR [RSI+24]
            and EDX,1
.L_43609e:

            call .L_435a10

            jmp .L_435d40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4360b0:

            cmp EBP,3
            jg .L_435d45

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,3
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c16]
            mov EDX,4
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4360f0:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,17
            jbe .L_43617a
.L_436108:

            lea RSI,QWORD PTR [RIP+.L_436c03]
            mov EDX,18
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0x90
.L_436120:

            mov RDI,QWORD PTR [RDI+24]
            movsxd RDX,DWORD PTR [RSI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            ja .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c96]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436150:

            mov RAX,QWORD PTR [RSI+24]
            mov RDI,QWORD PTR [RDI+24]
            mov EAX,DWORD PTR [RAX+4]
            mov RDX,QWORD PTR [RDI+8]
            test EAX,EAX
            jne .L_435c90

            movabs RAX,9223372036854775807
            sub RAX,RDX
            cmp RAX,17
            ja .L_436108
.L_43617a:

            lea RDI,QWORD PTR [RIP+.L_436bb5]
            call _ZSt20__throw_length_errorPKc@PLT

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436190:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp WORD PTR [RSI+2],0
            jns .L_4364d0

            cmp RAX,6
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c81]
            mov EDX,7
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4361d0:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,6
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c79]
            mov EDX,7
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0x90
.L_436200:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c8c]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436238:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c77]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436270:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c8f]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4362a8:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c75]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4362e0:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RAX,1
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c72]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436318:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c70]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
.L_436350:

            mov RDI,QWORD PTR [RDI+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c1b]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
          .byte 0x66
          .byte 0x90
.L_436380:

            mov ECX,DWORD PTR [RSI+24]
            mov R14,QWORD PTR [RDI+24]
            lea R12,QWORD PTR [RSP+112]
            mov EDX,DWORD PTR [RSI+28]
            cmp ECX,-1
            je .L_436695

            cmp ECX,EDX
            je .L_436528

            lea RSI,QWORD PTR [RIP+.L_436c68]
            mov RDI,R12
            xor EAX,EAX
            call .L_4154c0
.L_4363b1:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,R14
.L_4363be:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_4363c3:

            mov RDI,QWORD PTR [RSP+112]
            add R12,16
            cmp RDI,R12
            je .L_4363d6

            call _ZdlPv@PLT
.L_4363d6:

            test BYTE PTR [R13+2],64
            jne .L_436508

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4363e8:

            test EBP,EBP
            jg .L_435d40

            jmp .L_435de1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4363f8:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c57]
            mov EDX,1
.L_43641c:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            test BYTE PTR [R13+2],64
            je .L_4363e8
.L_436428:

            mov RDI,QWORD PTR [RBX+24]
            cmp QWORD PTR [RDI+8],R12
            je .L_43617a
.L_436436:

            lea RSI,QWORD PTR [RIP+.L_436c59]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_4363e8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436450:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c59]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            test BYTE PTR [R13+2],64
            je .L_4363e8

            jmp .L_436428
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436490:

            mov RDI,QWORD PTR [RDI+24]
            movabs R12,9223372036854775807
            cmp QWORD PTR [RDI+8],R12
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c5b]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            test BYTE PTR [R13+2],64
            je .L_4363e8

            jmp .L_436428
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4364d0:

            cmp RAX,1
            jbe .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c89]
            mov EDX,2
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            jmp .L_435d40
.L_4364f0:

            cmp RDX,RSI
            ja .L_43690f

            mov QWORD PTR [RAX+8],RDX
            mov BYTE PTR [RCX],0
            jmp .L_43607b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436508:

            mov RDI,QWORD PTR [RBX+24]
            movabs RAX,9223372036854775807
            cmp QWORD PTR [RDI+8],RAX
            jne .L_436436

            jmp .L_43617a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436528:

            lea RSI,QWORD PTR [RIP+.L_436c63]
            mov EDX,ECX
            mov RDI,R12
            xor EAX,EAX
            call .L_4154c0
.L_43653b:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,R14
.L_436548:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_43654d:

            jmp .L_4363c3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436558:

            lea RDI,QWORD PTR [R12+8]
            lea RSI,QWORD PTR [RIP+.L_436d30]
            mov EDX,1
            call _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_43678c

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+160]
            cmp RAX,RDX
            jbe .L_4366ec

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+80],RDX
            mov RDX,RAX
.L_4365d2:

            call .L_435730
.L_4365d7:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_4367cd

            mov RDI,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+96]
            add RDI,16
            cmp RAX,RDI
            je .L_4367fa

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_436809

            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDI
.L_436638:

            mov QWORD PTR [RSP+88],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+80]
            add RAX,16
            cmp RDI,RAX
            je .L_43665c
.L_436657:

            call _ZdlPv@PLT
.L_43665c:

            movsxd RDX,DWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,2
.L_43666b:

            call write@PLT
.L_436670:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+112],1
            add RAX,16
            cmp RDI,RAX
            je .L_436001

            call _ZdlPv@PLT

            jmp .L_436001
.L_436695:

            lea RSI,QWORD PTR [RIP+.L_436c5d]
            mov RDI,R12
            xor EAX,EAX
.L_4366a1:

            call .L_4154c0
.L_4366a6:

            mov RDX,QWORD PTR [RSP+120]
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,R14
.L_4366b3:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_4366b8:

            jmp .L_4363c3
.L_4366bd:

            mov RDI,R14
.L_4366c0:

            call .L_40d320

            mov RDI,QWORD PTR [RBX+24]
            mov R14,RAX
            cmp QWORD PTR [RDI+8],R12
            je .L_43617a

            lea RSI,QWORD PTR [RIP+.L_436c75]
            mov EDX,1
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_4366e7:

            jmp .L_435ccd
.L_4366ec:

            lea RCX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RCX+16]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+48],RAX
.L_436702:

            call .L_435730

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            add RCX,16
            cmp RSI,RCX
            mov RAX,RDI
            je .L_43679f

            mov RDI,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+64]
            add RDI,16
            cmp RAX,RDI
            je .L_43681c

            test RAX,RAX
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
            je .L_43682b

            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDI
.L_436764:

            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+48]
            add RAX,16
            cmp RDI,RAX
            jne .L_436657

            jmp .L_43665c
.L_43678c:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R12+88]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_43679a:

            jmp .L_43665c
.L_43679f:

            test RDX,RDX
            je .L_4367bd

            cmp RDX,1
            je .L_436851

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
.L_4367bd:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_436764
.L_4367cd:

            test RDX,RDX
            je .L_4367e7

            cmp RDX,1
            je .L_43683e

            call memcpy@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
.L_4367e7:

            mov QWORD PTR [RSP+24],RDX
            mov BYTE PTR [RDI+RDX*1],0
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_436638
.L_4367fa:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_436809:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+80],RAX
            jmp .L_436638
.L_43681c:

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+32],RCX
.L_43682b:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            mov QWORD PTR [RSP+48],RAX
            jmp .L_436764
.L_43683e:

            movzx EAX,BYTE PTR [RSP+96]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+88]
            jmp .L_4367e7
.L_436851:

            movzx EAX,BYTE PTR [RSP+64]
            mov BYTE PTR [RDI],AL
            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+56]
            jmp .L_4367bd
.L_436867:

            call __stack_chk_fail@PLT
.L_43686c:

            lea RDI,QWORD PTR [R12+16]
            mov RBX,RAX
            call _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev

            mov RAX,QWORD PTR [R13-24]
            mov RCX,QWORD PTR [RIP+_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE+16]
            mov QWORD PTR [RSP+120],R13
            mov QWORD PTR [RSP+RAX*1+120],RCX
.L_43688e:

            lea RDI,QWORD PTR [R12+120]
            mov QWORD PTR [RSP+232],R14
            call _ZNSt8ios_baseD2Ev@PLT

            mov RDI,RBX
.L_4368a3:

            call _Unwind_Resume@PLT
.L_4368a8:

            mov RBX,RAX
            jmp .L_43688e
.L_4368ad:

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+16]
            add RAX,16
            cmp RDI,RAX
            je .L_4368c4

            call _ZdlPv@PLT
.L_4368c4:

            call _ZSt9terminatev@PLT
.L_4368c9:

            mov RDI,QWORD PTR [RSP+112]
            add R12,16
            mov RBX,RAX
            cmp RDI,R12
            je .L_4368df

            call _ZdlPv@PLT
.L_4368df:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4368e7:

            mov RBX,RAX
            mov RDI,R12
            call .L_40c160

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_4368fa:

            lea RDI,QWORD PTR [R12+8]
            mov RBX,RAX
            call _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43690f:

            lea RSI,QWORD PTR [RIP+.L_436c1d]
            lea RDI,QWORD PTR [RIP+.L_436b78]
            xor ECX,ECX
            or RDX,-1
            xor EAX,EAX
            call _ZSt24__throw_out_of_range_fmtPKcz@PLT
.L_43692a:

            jmp .L_4368ad
.L_43692c:

            jmp .L_4368c9
.L_43692e:

            jmp .L_4368c9
.L_436930:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+16]
            push RBX
            mov RBP,RDI
            sub RSP,48
.L_436946:

            mov QWORD PTR [RDI],R12
            mov QWORD PTR [RDI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_649cd0]
            mov BYTE PTR [RDI+16],0
            mov EDI,80
            mov QWORD PTR [RSP],RAX
.L_436975:

            call _Znwm@PLT
.L_43697a:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],0
            mov EDI,64
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov RBX,RAX
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov QWORD PTR [RAX+56],0
            mov QWORD PTR [RAX+64],0
            mov QWORD PTR [RAX+72],0
            mov QWORD PTR [RAX+8],8
.L_4369d1:

            call _Znwm@PLT
.L_4369d6:

            mov RCX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX],RAX
            mov EDI,512
            lea RDX,QWORD PTR [RCX-1]
            shr RDX,1
            lea R14,QWORD PTR [RAX+RDX*8]
.L_4369ed:

            call _Znwm@PLT
.L_4369f2:

            lea RDX,QWORD PTR [RAX+512]
            mov QWORD PTR [RBX+40],R14
            mov QWORD PTR [RBX+72],R14
            mov QWORD PTR [R14],RAX
            mov QWORD PTR [RBX+24],RAX
            lea R14,QWORD PTR [RIP+.L_647730]
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+64],RDX
            xor ECX,ECX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+16],RAX
            mov EDX,6
            mov QWORD PTR [RBX+48],RAX
            mov QWORD PTR [RSP+8],RBX
            mov RBX,RSP
            mov RSI,R13
            mov RDI,RBX
            mov BYTE PTR [RSP+16],0
            mov QWORD PTR [RSP],R14
            mov QWORD PTR [RSP+24],RBP
            mov DWORD PTR [RSP+20],100000
.L_436a4e:

            call .L_413e00

            cmp BYTE PTR [RSP+16],0
            je .L_436a82

            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RBP+8]
            cmp RAX,11
            jbe .L_436ab3

            lea RSI,QWORD PTR [RIP+.L_436ca8]
            mov EDX,12
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_436a82:

            mov RDI,RBX
            mov QWORD PTR [RSP],R14
            call .L_412ab0

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_436aae

            add RSP,48
.L_436aa5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_436aae:

            call __stack_chk_fail@PLT
.L_436ab3:

            lea RDI,QWORD PTR [RIP+.L_436bb5]
            call _ZSt20__throw_length_errorPKc@PLT
.L_436abf:

            mov RDI,RBX
            mov R13,RAX
            mov QWORD PTR [RSP],R14
            call .L_412ab0
.L_436ace:

            mov RDI,QWORD PTR [RBP]
            cmp R12,RDI
            je .L_436adc

            call _ZdlPv@PLT
.L_436adc:

            mov RDI,R13
.L_436adf:

            call _Unwind_Resume@PLT
.L_436ae4:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_436aec:

            call __cxa_rethrow@PLT
.L_436af1:

            mov R13,RAX
.L_436af4:

            mov ESI,80
            mov RDI,RBX
            call _ZdlPvm@PLT

            jmp .L_436ace
.L_436b03:

            mov R13,RAX
            jmp .L_436ace
.L_436b08:

            mov R13,RAX
            call __cxa_end_catch@PLT

            mov RDI,R13
            call __cxa_begin_catch@PLT

            mov RDI,QWORD PTR [RBX]
            call _ZdlPv@PLT

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
.L_436b2f:

            call __cxa_rethrow@PLT
.L_436b34:

            mov R13,RAX
            call __cxa_end_catch@PLT

            jmp .L_436af4
.L_436b3e:

            nop
            nop
.L_436b40:

            xor EAX,EAX
            ret 
.L_436b43:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436b48:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_436b78:
          .string "%s: __pos (which is %zu) > this->size() (which is %zu)"
.L_436baf:
          .string "[]^-\\"
.L_436bb5:
          .string "basic_string::append"
.L_436bca:
          .string "\\"
.L_436bcc:
          .string "\\r"
.L_436bcf:
          .string "\\t"
.L_436bd2:
          .string "\\n"
.L_436bd5:
          .string "\\f"
.L_436bd8:
          .string "\\x%02x"
.L_436bdf:
          .string "\\x{%x}"
.L_436be6:
          .string "-"
.L_436be8:
          .string "(){}[]*+?|.^$\\"
.L_436bf7:
          .string "(?:"
.L_436bfb:
          .string "("
.L_436bfd:
          .string "?P<"
.L_436c01:
          .string ">"
.L_436c03:
          .string "[^\\x00-\\x{10ffff}]"
.L_436c16:
          .string "(?:)"
.L_436c1b:
          .string ")"
.L_436c1d:
          .string "basic_string::erase"
.L_436c31:
          .string "re2/tostring.cc"
.L_436c41:
          .string ":"
.L_436c43:
          .string ": "
.L_436c46:
          .string "Bad final char: "
.L_436c57:
          .string "*"
.L_436c59:
          .string "?"
.L_436c5b:
          .string "+"
.L_436c5d:
          .string "{%d,}"
.L_436c63:
          .string "{%d}"
.L_436c68:
          .string "{%d,%d}"
.L_436c70:
          .string "."
.L_436c72:
          .string "\\C"
.L_436c75:
          .string "^"
.L_436c77:
          .string "$"
.L_436c79:
          .string "(?-m:^)"
.L_436c81:
          .string "(?-m:$)"
.L_436c89:
          .string "\\z"
.L_436c8c:
          .string "\\b"
.L_436c8f:
          .string "\\B"
.L_436c92:
          .string "["
.L_436c94:
          .string "]"
.L_436c96:
          .string "(?HaveMatch:%d)"
.L_436ca6:
          .string "|"
.L_436ca8:
          .string " [truncated]"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436cb8:
          .long .L_435b38-.L_436cb8
          .long .L_435b38-.L_436cb8
          .long .L_435b20-.L_436cb8
          .long .L_435b80-.L_436cb8
          .long .L_435b80-.L_436cb8
          .long .L_435b80-.L_436cb8
          .long .L_435b80-.L_436cb8
          .long .L_435b90-.L_436cb8
.L_436cd8:
          .long .L_435d40-.L_436cd8
          .long .L_4360f0-.L_436cd8
          .long .L_4360b0-.L_436cd8
          .long .L_436090-.L_436cd8
          .long .L_435da0-.L_436cd8
          .long .L_435dd8-.L_436cd8
          .long .L_435e10-.L_436cd8
          .long .L_4363f8-.L_436cd8
          .long .L_436490-.L_436cd8
          .long .L_436450-.L_436cd8
          .long .L_436380-.L_436cd8
          .long .L_436350-.L_436cd8
          .long .L_436318-.L_436cd8
          .long .L_4362e0-.L_436cd8
          .long .L_4362a8-.L_436cd8
          .long .L_436238-.L_436cd8
          .long .L_436200-.L_436cd8
          .long .L_436270-.L_436cd8
          .long .L_4361d0-.L_436cd8
          .long .L_436190-.L_436cd8
          .long .L_436150-.L_436cd8
          .long .L_436120-.L_436cd8
.L_436d30:
          .string "\n"
          .byte 0x2e
          .byte 0x2f
          .byte 0x72
          .byte 0x65
          .byte 0x32
          .byte 0x2f
          .byte 0x77
          .byte 0x61
          .byte 0x6c
          .byte 0x6b
          .byte 0x65
          .byte 0x72
          .byte 0x2d
          .byte 0x69
          .byte 0x6e
          .byte 0x6c
          .byte 0x2e
          .byte 0x68
          .byte 0x0
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x65
          .byte 0x6d
          .byte 0x70
          .byte 0x74
          .byte 0x79
          .byte 0x2e
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436d60:

            lea RAX,QWORD PTR [RIP+.L_647730]
            mov QWORD PTR [RDI],RAX
            jmp .L_412ab0
.L_436d6f:

            nop
.L_436d70:

            lea RAX,QWORD PTR [RIP+.L_647730]
            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI],RAX
            call .L_412ab0

            mov RDI,RBX
            mov ESI,32
            pop RBX
            jmp _ZdlPvm@PLT
.L_436d91:
          .byte 0x57
          .byte 0x61
          .byte 0x6c
          .byte 0x6b
          .byte 0x20
          .byte 0x4e
          .byte 0x55
          .byte 0x4c
          .byte 0x4c
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436da0:
          .string "N3re214ToStringWalkerE"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x31
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb6
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x67
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x72
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x80
.L_4374e9:

            sub AL,0
            add DL,AH
            sub AL,0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            jmp .L_437522
          .byte 0x0
          .byte 0x0
          .byte 0xed

            sub AL,0
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            sub AL,0
            add DL,DH
            sub AL,0
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX-90],AL
            add BYTE PTR [RAX],AL
            insb BYTE PTR [RDI],DX
            cmpsb BYTE PTR [RSI],BYTE PTR [RDI]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX-128],AL
            cmpsb BYTE PTR [RSI],BYTE PTR [RDI]
            add BYTE PTR [RAX],AL
            xchg ESI,EAX
            cmpsb BYTE PTR [RSI],BYTE PTR [RDI]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_437522:

            add BYTE PTR [RAX+34],AL
            cmpsd [RSI],[RDI]
            add BYTE PTR [RAX],AL
            cmpsd CS:[RSI],[RDI]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+50],AL
            cmpsd [RSI], [RDI]
            add BYTE PTR [RAX],AL
            outsb DX,BYTE PTR [RSI]
            cmpsd [RSI], [RDI]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+121],AL
            cmpsd DWORD PTR [RSI],DWORD PTR [RDI]
            add BYTE PTR [RAX],AL
            jnp .L_4374e9
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x75
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x21
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4375b4:
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4375c0:
          .string "A"
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0

            ret 
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0

            mov AL,BYTE PTR [RCX]
            add BYTE PTR [RAX],AL
            int 0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0

            int1 
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff

            hlt 
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x56
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xfc
          .byte 0xff
          .byte 0xff
          .byte 0xbd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0xdf
          .byte 0xff
          .byte 0xff
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb6
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x65
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x66
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x67
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x72
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0x27
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0x2d
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0x40
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x75
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x5a
          .byte 0xff
          .byte 0xff
          .byte 0x21
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xd8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438360:
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438370:
          .byte 0x80
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0x16
          .byte 0x1
          .byte 0x0
.L_438380:
          .byte 0x91
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xd0
          .byte 0x5
          .byte 0xea
          .byte 0x5
          .byte 0xf0
          .byte 0x5
          .byte 0xf4
          .byte 0x5
          .byte 0x1d
          .byte 0xfb
          .byte 0x36
          .byte 0xfb
          .byte 0x38
          .byte 0xfb
          .byte 0x3c
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x40
          .byte 0xfb
          .byte 0x41
          .byte 0xfb
          .byte 0x43
          .byte 0xfb
          .byte 0x44
          .byte 0xfb
          .byte 0x46
          .byte 0xfb
          .byte 0x4f
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4383b0:
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xb
          .byte 0x1
          .byte 0x0
.L_4383c0:
          .byte 0x0
          .byte 0x10
          .byte 0x9f
          .byte 0x10
          .byte 0x60
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
.L_4383c8:
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x6a
          .byte 0x1
          .byte 0x0
.L_4383d0:
          .byte 0xa0
          .byte 0xa6
          .byte 0xf7
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4383e0:
          .byte 0x60
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x32
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x61
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x77
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438500:
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x1a
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x20
          .byte 0x6
          .byte 0x3f
          .byte 0x6
          .byte 0x41
          .byte 0x6
          .byte 0x4a
          .byte 0x6
          .byte 0x56
          .byte 0x6
          .byte 0x5f
          .byte 0x6
          .byte 0x6a
          .byte 0x6
          .byte 0x6f
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0xdc
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0x50
          .byte 0x7
          .byte 0x7f
          .byte 0x7
          .byte 0xa0
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xac
          .byte 0x8
          .byte 0xe4
          .byte 0x8
          .byte 0xfe
          .byte 0x8
          .byte 0x50
          .byte 0xfb
          .byte 0xc1
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x3d
          .byte 0xfd
          .byte 0x50
          .byte 0xfd
          .byte 0x8f
          .byte 0xfd
          .byte 0x92
          .byte 0xfd
          .byte 0xc7
          .byte 0xfd
          .byte 0xf0
          .byte 0xfd
          .byte 0xfc
          .byte 0xfd
          .byte 0x70
          .byte 0xfe
          .byte 0x74
          .byte 0xfe
          .byte 0x76
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438560:

            add BYTE PTR [RCX],DL
            add DWORD PTR [RAX],EAX
            xor AL,17
            add DWORD PTR [RAX],EAX
            adc DWORD PTR SS:[RCX],EAX
            add BYTE PTR [RBX+17],AL
            add DWORD PTR [RAX],EAX
.L_438570:

            loop 230213
            out DX,EAX
            add EAX,DWORD PTR [RAX-114494676]
            sub AL,255
            sub AL,0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RDX],AL
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RDI],AL
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RBX],DH
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RDI],DH
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RDI],BH
            add DWORD PTR [RCX],EAX
.L_438597:

            add BYTE PTR [RAX-1694498559],DL
            add DWORD PTR [RCX],EAX
            add AL,DL
            add DWORD PTR [RCX],EAX
            add AH,BH
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            rol BYTE PTR [RCX],1
            add CH,DH
            rol BYTE PTR [RCX],1
            add BYTE PTR [RAX],AL
            rol DWORD PTR [RCX],1
            add BYTE PTR [RSI],AH
            rol DWORD PTR [RCX],1
            add BYTE PTR [RCX],CH
            rol DWORD PTR [RCX],1
            add BYTE PTR [RSI-47],AH
            add DWORD PTR [RAX],EAX
            push -47
            add DWORD PTR [RAX],EAX
            jp .L_438597
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x84
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xdd
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x71
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xce
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xb1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xdf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xe6
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc6
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xe0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf7
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4387c0:
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xb9
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe5
          .byte 0x2
          .byte 0xe9
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xff
          .byte 0x2
          .byte 0x74
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x89
          .byte 0x5
          .byte 0x89
          .byte 0x5
          .byte 0xc
          .byte 0x6
          .byte 0xc
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0x40
          .byte 0x6
          .byte 0x60
          .byte 0x6
          .byte 0x69
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0x64
          .byte 0x9
          .byte 0x65
          .byte 0x9
          .byte 0x3f
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0xd5
          .byte 0xf
          .byte 0xd8
          .byte 0xf
          .byte 0xfb
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0xeb
          .byte 0x16
          .byte 0xed
          .byte 0x16
          .byte 0x35
          .byte 0x17
          .byte 0x36
          .byte 0x17
          .byte 0x2
          .byte 0x18
          .byte 0x3
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0xd3
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xe9
          .byte 0x1c
          .byte 0xec
          .byte 0x1c
          .byte 0xee
          .byte 0x1c
          .byte 0xf3
          .byte 0x1c
          .byte 0xf5
          .byte 0x1c
          .byte 0xf6
          .byte 0x1c
          .byte 0x0
          .byte 0x20
          .byte 0xb
          .byte 0x20
          .byte 0xe
          .byte 0x20
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x20
          .byte 0x70
          .byte 0x20
          .byte 0x74
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x80
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0xa0
          .byte 0x20
          .byte 0xba
          .byte 0x20
          .byte 0x0
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x2c
          .byte 0x21
          .byte 0x31
          .byte 0x21
          .byte 0x33
          .byte 0x21
          .byte 0x4d
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x5f
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x90
          .byte 0x21
          .byte 0xf3
          .byte 0x23
          .byte 0x0
          .byte 0x24
          .byte 0x26
          .byte 0x24
          .byte 0x40
          .byte 0x24
          .byte 0x4a
          .byte 0x24
          .byte 0x60
          .byte 0x24
          .byte 0xff
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0xff
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x4c
          .byte 0x2b
          .byte 0x50
          .byte 0x2b
          .byte 0x59
          .byte 0x2b
          .byte 0x0
          .byte 0x2e
          .byte 0x3b
          .byte 0x2e
          .byte 0xf0
          .byte 0x2f
          .byte 0xfb
          .byte 0x2f
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x8
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x3f
          .byte 0x30
          .byte 0x9b
          .byte 0x30
          .byte 0x9c
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfc
          .byte 0x30
          .byte 0x90
          .byte 0x31
          .byte 0x9f
          .byte 0x31
          .byte 0xc0
          .byte 0x31
          .byte 0xe3
          .byte 0x31
          .byte 0x20
          .byte 0x32
          .byte 0x5f
          .byte 0x32
          .byte 0x7f
          .byte 0x32
          .byte 0xcf
          .byte 0x32
          .byte 0x58
          .byte 0x33
          .byte 0xff
          .byte 0x33
          .byte 0xc0
          .byte 0x4d
          .byte 0xff
          .byte 0x4d
          .byte 0x0
          .byte 0xa7
          .byte 0x21
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0x8a
          .byte 0xa7
          .byte 0x30
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0xcf
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0x3e
          .byte 0xfd
          .byte 0x3f
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0x10
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x52
          .byte 0xfe
          .byte 0x54
          .byte 0xfe
          .byte 0x66
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x6b
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0x1
          .byte 0xff
          .byte 0x20
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x65
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0x9e
          .byte 0xff
          .byte 0x9f
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xe6
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xf9
          .byte 0xff
          .byte 0xfd
          .byte 0xff
.L_438920:
          .byte 0x40
          .byte 0x17
          .byte 0x53
          .byte 0x17
.L_438924:
          .byte 0xd0
          .byte 0xa4
          .byte 0xff
          .byte 0xa4
.L_438928:
          .byte 0x0
          .byte 0x8
          .byte 0x2d
          .byte 0x8
          .byte 0x30
          .byte 0x8
          .byte 0x3e
          .byte 0x8
.L_438930:
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438940:
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_438950:
          .byte 0x0
          .byte 0x1c
          .byte 0x37
          .byte 0x1c
          .byte 0x3b
          .byte 0x1c
          .byte 0x49
          .byte 0x1c
          .byte 0x4d
          .byte 0x1c
          .byte 0x4f
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438960:
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438980:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x1
          .byte 0x0
.L_4389b8:
          .byte 0x20
          .byte 0x17
          .byte 0x34
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4389c0:
          .byte 0x81
          .byte 0xe
          .byte 0x82
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x87
          .byte 0xe
          .byte 0x88
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x94
          .byte 0xe
          .byte 0x97
          .byte 0xe
          .byte 0x99
          .byte 0xe
          .byte 0x9f
          .byte 0xe
          .byte 0xa1
          .byte 0xe
          .byte 0xa3
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xaa
          .byte 0xe
          .byte 0xab
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xbb
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xc0
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc8
          .byte 0xe
          .byte 0xcd
          .byte 0xe
          .byte 0xd0
          .byte 0xe
          .byte 0xd9
          .byte 0xe
          .byte 0xdc
          .byte 0xe
          .byte 0xdf
          .byte 0xe
.L_438a08:
          .byte 0x0
          .byte 0x1b
          .byte 0x4b
          .byte 0x1b
          .byte 0x50
          .byte 0x1b
          .byte 0x7c
          .byte 0x1b
.L_438a10:
          .byte 0x0
          .byte 0xa0
          .byte 0x8c
          .byte 0xa4
          .byte 0x90
          .byte 0xa4
          .byte 0xc6
          .byte 0xa4
.L_438a18:
          .byte 0x30
          .byte 0xa9
          .byte 0x53
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
.L_438a20:
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438a30:
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
.L_438a40:
          .byte 0x82
          .byte 0xd
          .byte 0x83
          .byte 0xd
          .byte 0x85
          .byte 0xd
          .byte 0x96
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xb1
          .byte 0xd
          .byte 0xb3
          .byte 0xd
          .byte 0xbb
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xc0
          .byte 0xd
          .byte 0xc6
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xcf
          .byte 0xd
          .byte 0xd4
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd8
          .byte 0xd
          .byte 0xdf
          .byte 0xd
          .byte 0xf2
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438a70:
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x18
          .byte 0x4
          .byte 0x18
          .byte 0x4
          .byte 0x18
          .byte 0x6
          .byte 0x18
          .byte 0xe
          .byte 0x18
          .byte 0x10
          .byte 0x18
          .byte 0x19
          .byte 0x18
          .byte 0x20
          .byte 0x18
          .byte 0x77
          .byte 0x18
          .byte 0x80
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438aa0:
          .byte 0x82
          .byte 0xc
          .byte 0x83
          .byte 0xc
          .byte 0x85
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x8e
          .byte 0xc
          .byte 0x90
          .byte 0xc
          .byte 0x92
          .byte 0xc
          .byte 0xa8
          .byte 0xc
          .byte 0xaa
          .byte 0xc
          .byte 0xb3
          .byte 0xc
          .byte 0xb5
          .byte 0xc
          .byte 0xb9
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xc4
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xc8
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xcd
          .byte 0xc
          .byte 0xd5
          .byte 0xc
          .byte 0xd6
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xe0
          .byte 0xc
          .byte 0xe3
          .byte 0xc
          .byte 0xe6
          .byte 0xc
          .byte 0xef
          .byte 0xc
          .byte 0xf1
          .byte 0xc
          .byte 0xf2
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ae0:
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
.L_438b10:
          .byte 0x40
          .byte 0xa8
          .byte 0x77
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438b18:
          .byte 0x80
          .byte 0xa9
          .byte 0xcd
          .byte 0xa9
          .byte 0xd0
          .byte 0xa9
          .byte 0xd9
          .byte 0xa9
          .byte 0xde
          .byte 0xa9
          .byte 0xdf
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438b40:
          .byte 0x1
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0x10
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x28
          .byte 0xa
          .byte 0x2a
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x32
          .byte 0xa
          .byte 0x33
          .byte 0xa
          .byte 0x35
          .byte 0xa
          .byte 0x36
          .byte 0xa
          .byte 0x38
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3e
          .byte 0xa
          .byte 0x42
          .byte 0xa
          .byte 0x47
          .byte 0xa
          .byte 0x48
          .byte 0xa
          .byte 0x4b
          .byte 0xa
          .byte 0x4d
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x59
          .byte 0xa
          .byte 0x5c
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x66
          .byte 0xa
          .byte 0x75
          .byte 0xa
.L_438b80:
          .byte 0xd0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xe8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0x10
          .byte 0x1
          .byte 0x0
.L_438b90:
          .byte 0x40
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0x8
          .byte 0x1
          .byte 0x0
.L_438ba0:
          .byte 0x0
          .byte 0x2c
          .byte 0x2e
          .byte 0x2c
          .byte 0x30
          .byte 0x2c
          .byte 0x5e
          .byte 0x2c
.L_438ba8:
          .byte 0x80
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438bc0:
          .byte 0x81
          .byte 0x9
          .byte 0x83
          .byte 0x9
          .byte 0x85
          .byte 0x9
          .byte 0x8c
          .byte 0x9
          .byte 0x8f
          .byte 0x9
          .byte 0x90
          .byte 0x9
          .byte 0x93
          .byte 0x9
          .byte 0xa8
          .byte 0x9
          .byte 0xaa
          .byte 0x9
          .byte 0xb0
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb6
          .byte 0x9
          .byte 0xb9
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xc4
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xc8
          .byte 0x9
          .byte 0xcb
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xdc
          .byte 0x9
          .byte 0xdd
          .byte 0x9
          .byte 0xdf
          .byte 0x9
          .byte 0xe3
          .byte 0x9
          .byte 0xe6
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c00:
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_438c10:
          .byte 0x80
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_438c18:
          .byte 0x0
          .byte 0x14
          .byte 0x7f
          .byte 0x16
          .byte 0xb0
          .byte 0x18
          .byte 0xf5
          .byte 0x18
.L_438c20:
          .byte 0xc0
          .byte 0x7
          .byte 0xfa
          .byte 0x7
.L_438c24:
          .byte 0x0
          .byte 0xa8
          .byte 0x2b
          .byte 0xa8
.L_438c28:
          .byte 0x40
          .byte 0x8
          .byte 0x5b
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
.L_438c30:

            add BYTE PTR [RAX],AH
            add DWORD PTR [RAX],EAX
            outsb DX,BYTE PTR [RSI]
            and EAX,DWORD PTR [RCX]
            add BYTE PTR [RAX],AL
            and AL,1
            add BYTE PTR [RDX+36],AH
            add DWORD PTR [RAX],EAX
            jo .L_438c66

            add DWORD PTR [RAX],EAX
            jae .L_438c6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c50:
          .byte 0x80
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xe0
          .byte 0x17
          .byte 0xe9
          .byte 0x17
          .byte 0xf0
          .byte 0x17
          .byte 0xf9
          .byte 0x17
          .byte 0xe0
          .byte 0x19
          .byte 0xff
          .byte 0x19
.L_438c60:
          .byte 0x60
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xb
.L_438c66:

            add DWORD PTR [RAX],EAX
            js .L_438c75
.L_438c6a:

            add DWORD PTR [RAX],EAX
            jg .L_438c79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438c75:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_438c79:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX-2062908662],AL
            or CL,BYTE PTR [RBP-1861578998]
            or DL,BYTE PTR [RBX-1442142198]
            or DH,BYTE PTR [RAX-1291144694]
            or DH,BYTE PTR [RBP-1140147958]
            or AL,CH
            or AL,BH
            or CL,CL
            or CL,BL
            or CL,CH
            or DL,AL
            or DL,AL
            or AH,AL
            or AH,BL
            or AH,DH
            or DH,CL
            or AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX-939523823],AL
            adc DWORD PTR [RCX],EAX
            add AL,DL
            adc DWORD PTR [RCX],EAX
            add CL,BL
            adc DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            or EAX,DWORD PTR [RBX]
            or EAX,DWORD PTR [RIP+.L_64a3d0+250213668]
            or EDX,DWORD PTR [RAX]
            or EDX,DWORD PTR [RBX]
            or EBP,DWORD PTR [RAX]
            or EBP,DWORD PTR [RDX]
            or ESI,DWORD PTR [RAX]
            or ESI,DWORD PTR [RDX]
            or ESI,DWORD PTR [RBX]
            or ESI,DWORD PTR [RIP+.L_64a3d0+1005199928]
            or EAX,DWORD PTR [RBX+RCX*1+71]
            or ECX,DWORD PTR [RAX+11]
            or RCX,QWORD PTR [R13+11]
            push RSI
            or EDX,DWORD PTR [RDI+11]
            pop RSP
            or EBX,DWORD PTR [RBP+11]
            pop RDI
            or ESP,DWORD PTR [RBX+11]
            or SI,WORD PTR [RDI+11]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_438d20:

            add BYTE PTR [RDI+1],CH
            add BYTE PTR [RDI+RBP*2+1],AL
            add BYTE PTR [RAX+111],DL
            add DWORD PTR [RAX],EAX
            jle .L_438d9d
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
.L_438d38:

            movabs AL,BYTE PTR [1307667]
            sbb DWORD PTR [RCX+RBX*1],EBX
            and BYTE PTR [RCX],BL
            sub EBX,DWORD PTR [RCX]
            xor BYTE PTR [RCX],BL
            cmp EBX,DWORD PTR [RCX]
            sbb DWORD PTR [RAX+25],EAX
            sbb DWORD PTR [RDI+25],R9D
# WARNING: found overlapping blocks at address 38b10
.set .L_438d40, . - 20

.L_438d54:

            push RAX
            sbb AL,127
            sbb AL,0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX-1340495079],AL
            sbb ECX,ECX
            sbb EAX,EDX
            sbb EDX,EBX
            sbb ESI,EBX
            sbb EDI,EBX
            sbb DWORD PTR [RAX-1660944124],EAX
            add AL,1
            add BYTE PTR [RAX-1459617532],AH
            add AL,1
            add BYTE PTR [RAX],AL
            mov AL,1
            add BYTE PTR [RAX],AL
            mov AL,1
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX-47121872],AH
            xor BH,BH
            xor AL,DH
            xor EDI,EDI
            xor EAX,EDX
.L_438d9d:

            xor BH,DH
            xor AL,BYTE PTR [RAX]
            xor EDX,DWORD PTR [RDI+51]
            ljmp TBYTE PTR [RDI-1]
            jno .L_438da9
# WARNING: found overlapping blocks at address 38b79
.set .L_438da9, . - 1

            popfq 
            inc DWORD PTR [RAX]
            add BYTE PTR [RAX],AL
# WARNING: found overlapping blocks at address 38b7a
          .zero 1
# WARNING: found overlapping blocks at address 38b7f
.L_438db0:
          .byte 0x30
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
# WARNING: found overlapping blocks at address 38b80
.L_438db8:
          .byte 0xa0
          .byte 0x16
          .byte 0xea
          .byte 0x16
          .byte 0xee
          .byte 0x16
          .byte 0xf0
          .byte 0x16
# WARNING: found overlapping blocks at address 38b88
.L_438dc0:
          .byte 0x0
          .byte 0x7
          .byte 0xd
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0x4a
          .byte 0x7
          .byte 0x4d
          .byte 0x7
          .byte 0x4f
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
# WARNING: found overlapping blocks at address 38b90
.L_438dd0:
          .byte 0x0
          .byte 0xaa
          .byte 0x36
          .byte 0xaa
          .byte 0x40
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x50
          .byte 0xaa
          .byte 0x59
          .byte 0xaa
          .byte 0x5c
          .byte 0xaa
          .byte 0x5f
          .byte 0xaa
# WARNING: found overlapping blocks at address 38ba0
.L_438de0:
          .byte 0x40
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xb
          .byte 0x1
          .byte 0x0
# WARNING: found overlapping blocks at address 38bb0
.L_438df0:
          .byte 0x80
          .byte 0x16
          .byte 0x9c
          .byte 0x16
# WARNING: found overlapping blocks at address 38bc0
.L_438df4:

            add BYTE PTR [RBP-1434409429],AH
            ret 56234
          .byte 0xaa
          .byte 0xdf
          .byte 0xaa
.L_438e00:
          .byte 0x80
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438e10:
          .byte 0x40
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
.L_438e20:
          .byte 0x70
          .byte 0x3
          .byte 0x73
          .byte 0x3
          .byte 0x75
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x7a
          .byte 0x3
          .byte 0x7d
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x88
          .byte 0x3
          .byte 0x8a
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8e
          .byte 0x3
          .byte 0xa1
          .byte 0x3
          .byte 0xa3
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xf0
          .byte 0x3
          .byte 0xff
          .byte 0x3
          .byte 0x26
          .byte 0x1d
          .byte 0x2a
          .byte 0x1d
          .byte 0x5d
          .byte 0x1d
          .byte 0x61
          .byte 0x1d
          .byte 0x66
          .byte 0x1d
          .byte 0x6a
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0x0
          .byte 0x1f
          .byte 0x15
          .byte 0x1f
          .byte 0x18
          .byte 0x1f
          .byte 0x1d
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x45
          .byte 0x1f
          .byte 0x48
          .byte 0x1f
          .byte 0x4d
          .byte 0x1f
          .byte 0x50
          .byte 0x1f
          .byte 0x57
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x7d
          .byte 0x1f
          .byte 0x80
          .byte 0x1f
          .byte 0xb4
          .byte 0x1f
          .byte 0xb6
          .byte 0x1f
          .byte 0xc4
          .byte 0x1f
          .byte 0xc6
          .byte 0x1f
          .byte 0xd3
          .byte 0x1f
          .byte 0xd6
          .byte 0x1f
          .byte 0xdb
          .byte 0x1f
          .byte 0xdd
          .byte 0x1f
          .byte 0xef
          .byte 0x1f
          .byte 0xf2
          .byte 0x1f
          .byte 0xf4
          .byte 0x1f
          .byte 0xf6
          .byte 0x1f
          .byte 0xfe
          .byte 0x1f
          .byte 0x26
          .byte 0x21
          .byte 0x26
          .byte 0x21
.L_438e9c:

            add BYTE PTR [RAX],CH
            jmp QWORD PTR [RAX]
.L_438ea0:
          .byte 0x80
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_438eb0:
          .byte 0x30
          .byte 0x2d
          .byte 0x67
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x70
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ec0:
          .byte 0x0
          .byte 0xf
          .byte 0x47
          .byte 0xf
          .byte 0x49
          .byte 0xf
          .byte 0x6c
          .byte 0xf
          .byte 0x71
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0x99
          .byte 0xf
          .byte 0xbc
          .byte 0xf
          .byte 0xbe
          .byte 0xf
          .byte 0xcc
          .byte 0xf
          .byte 0xce
          .byte 0xf
          .byte 0xd4
          .byte 0xf
          .byte 0xd9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ee0:
          .byte 0x1
          .byte 0xe
          .byte 0x3a
          .byte 0xe
          .byte 0x40
          .byte 0xe
          .byte 0x5b
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438ef0:
          .byte 0x0
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x53
          .byte 0x9
          .byte 0x63
          .byte 0x9
          .byte 0x66
          .byte 0x9
          .byte 0x77
          .byte 0x9
          .byte 0x79
          .byte 0x9
          .byte 0x7f
          .byte 0x9
          .byte 0xe0
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f08:
          .byte 0xc0
          .byte 0x1b
          .byte 0xf3
          .byte 0x1b
          .byte 0xfc
          .byte 0x1b
          .byte 0xff
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f20:
          .byte 0xa0
          .byte 0x10
          .byte 0xc5
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xd0
          .byte 0x10
          .byte 0xfa
          .byte 0x10
          .byte 0xfc
          .byte 0x10
          .byte 0xff
          .byte 0x10
          .byte 0x0
          .byte 0x2d
          .byte 0x25
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
.L_438f40:
          .byte 0x50
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0x4
          .byte 0x1
          .byte 0x0
.L_438f48:
          .byte 0x80
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xce
          .byte 0xa8
          .byte 0xd9
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f60:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xb8
          .byte 0x2
          .byte 0xe0
          .byte 0x2
          .byte 0xe4
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0x25
          .byte 0x1d
          .byte 0x2c
          .byte 0x1d
          .byte 0x5c
          .byte 0x1d
          .byte 0x62
          .byte 0x1d
          .byte 0x65
          .byte 0x1d
          .byte 0x6b
          .byte 0x1d
          .byte 0x77
          .byte 0x1d
          .byte 0x79
          .byte 0x1d
          .byte 0xbe
          .byte 0x1d
          .byte 0x0
          .byte 0x1e
          .byte 0xff
          .byte 0x1e
          .byte 0x71
          .byte 0x20
          .byte 0x71
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x90
          .byte 0x20
          .byte 0x9c
          .byte 0x20
          .byte 0x2a
          .byte 0x21
          .byte 0x2b
          .byte 0x21
          .byte 0x32
          .byte 0x21
          .byte 0x32
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x60
          .byte 0x21
          .byte 0x88
          .byte 0x21
          .byte 0x60
          .byte 0x2c
          .byte 0x7f
          .byte 0x2c
          .byte 0x22
          .byte 0xa7
          .byte 0x87
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0xf8
          .byte 0xa7
          .byte 0xff
          .byte 0xa7
          .byte 0x0
          .byte 0xfb
          .byte 0x6
          .byte 0xfb
          .byte 0x21
          .byte 0xff
          .byte 0x3a
          .byte 0xff
          .byte 0x41
          .byte 0xff
          .byte 0x5a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438fe0:
          .byte 0xa0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_438ff0:
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x1
          .byte 0x0
.L_439000:
          .byte 0x20
          .byte 0x1a
          .byte 0x5e
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x7c
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x89
          .byte 0x1a
          .byte 0x90
          .byte 0x1a
          .byte 0x99
          .byte 0x1a
          .byte 0xa0
          .byte 0x1a
          .byte 0xad
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439020:
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x13
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x17
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xa
          .byte 0x1
          .byte 0x0
.L_439060:
          .byte 0x0
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x1e
          .byte 0x1a
          .byte 0x1f
          .byte 0x1a
.L_439068:
          .byte 0x0
          .byte 0xa9
          .byte 0x2f
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439070:
          .byte 0x50
          .byte 0x19
          .byte 0x6d
          .byte 0x19
          .byte 0x70
          .byte 0x19
          .byte 0x74
          .byte 0x19
.L_439078:
          .byte 0xe0
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xc0
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0xf0
          .byte 0xab
          .byte 0xf9
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439088:
          .byte 0x60
          .byte 0x17
          .byte 0x6c
          .byte 0x17
          .byte 0x6e
          .byte 0x17
          .byte 0x70
          .byte 0x17
          .byte 0x72
          .byte 0x17
          .byte 0x73
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4390a0:
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
.L_4390b0:
          .byte 0x41
          .byte 0x30
          .byte 0x96
          .byte 0x30
          .byte 0x9d
          .byte 0x30
          .byte 0x9f
          .byte 0x30
.L_4390b8:
          .byte 0xa0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x1
          .byte 0x0
.L_4390c0:
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0xd
          .byte 0x5
          .byte 0xd
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xd
          .byte 0x10
          .byte 0xd
          .byte 0x12
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x44
          .byte 0xd
          .byte 0x46
          .byte 0xd
          .byte 0x48
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x60
          .byte 0xd
          .byte 0x63
          .byte 0xd
          .byte 0x66
          .byte 0xd
          .byte 0x75
          .byte 0xd
          .byte 0x79
          .byte 0xd
          .byte 0x7f
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4390f0:
          .byte 0x0
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0xe
          .byte 0x17
          .byte 0x14
          .byte 0x17
.L_4390f8:
          .byte 0x80
          .byte 0x1b
          .byte 0xbf
          .byte 0x1b
          .byte 0xc0
          .byte 0x1c
          .byte 0xc7
          .byte 0x1c
.L_439100:
          .byte 0xea
          .byte 0x2
          .byte 0xeb
          .byte 0x2
          .byte 0x5
          .byte 0x31
          .byte 0x2d
          .byte 0x31
          .byte 0xa0
          .byte 0x31
          .byte 0xba
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439120:
          .byte 0x82
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x85
          .byte 0xb
          .byte 0x8a
          .byte 0xb
          .byte 0x8e
          .byte 0xb
          .byte 0x90
          .byte 0xb
          .byte 0x92
          .byte 0xb
          .byte 0x95
          .byte 0xb
          .byte 0x99
          .byte 0xb
          .byte 0x9a
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9e
          .byte 0xb
          .byte 0x9f
          .byte 0xb
          .byte 0xa3
          .byte 0xb
          .byte 0xa4
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xaa
          .byte 0xb
          .byte 0xae
          .byte 0xb
          .byte 0xb9
          .byte 0xb
          .byte 0xbe
          .byte 0xb
          .byte 0xc2
          .byte 0xb
          .byte 0xc6
          .byte 0xb
          .byte 0xc8
          .byte 0xb
          .byte 0xca
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xe6
          .byte 0xb
          .byte 0xfa
          .byte 0xb
.L_439160:
          .byte 0x31
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x5f
          .byte 0x5
          .byte 0x61
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x13
          .byte 0xfb
          .byte 0x17
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439180:
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd6
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x34
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xfa
          .byte 0x2
          .byte 0x0
.L_4391a0:
          .byte 0x80
          .byte 0x2e
          .byte 0x99
          .byte 0x2e
          .byte 0x9b
          .byte 0x2e
          .byte 0xf3
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0xd5
          .byte 0x2f
          .byte 0x5
          .byte 0x30
          .byte 0x5
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x21
          .byte 0x30
          .byte 0x29
          .byte 0x30
          .byte 0x38
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x0
          .byte 0x34
          .byte 0xb5
          .byte 0x4d
          .byte 0x0
          .byte 0x4e
          .byte 0xcc
          .byte 0x9f
          .byte 0x0
          .byte 0xf9
          .byte 0x6d
          .byte 0xfa
          .byte 0x70
          .byte 0xfa
          .byte 0xd9
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4391d0:
          .byte 0xa0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x9
          .byte 0x1
          .byte 0x0
.L_4391e0:
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x69
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439220:
          .byte 0x0
          .byte 0x3
          .byte 0x6f
          .byte 0x3
          .byte 0x85
          .byte 0x4
          .byte 0x86
          .byte 0x4
          .byte 0x4b
          .byte 0x6
          .byte 0x55
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x51
          .byte 0x9
          .byte 0x52
          .byte 0x9
          .byte 0xd0
          .byte 0x1c
          .byte 0xd2
          .byte 0x1c
          .byte 0xd4
          .byte 0x1c
          .byte 0xe0
          .byte 0x1c
          .byte 0xe2
          .byte 0x1c
          .byte 0xe8
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xc0
          .byte 0x1d
          .byte 0xe6
          .byte 0x1d
          .byte 0xfc
          .byte 0x1d
          .byte 0xff
          .byte 0x1d
          .byte 0xc
          .byte 0x20
          .byte 0xd
          .byte 0x20
          .byte 0xd0
          .byte 0x20
          .byte 0xf0
          .byte 0x20
          .byte 0x2a
          .byte 0x30
          .byte 0x2d
          .byte 0x30
          .byte 0x99
          .byte 0x30
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0xfe
          .byte 0xf
          .byte 0xfe
          .byte 0x20
          .byte 0xfe
          .byte 0x26
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439280:
          .byte 0x0
          .byte 0x12
          .byte 0x48
          .byte 0x12
          .byte 0x4a
          .byte 0x12
          .byte 0x4d
          .byte 0x12
          .byte 0x50
          .byte 0x12
          .byte 0x56
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x60
          .byte 0x12
          .byte 0x88
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x8d
          .byte 0x12
          .byte 0x90
          .byte 0x12
          .byte 0xb0
          .byte 0x12
          .byte 0xb2
          .byte 0x12
          .byte 0xb5
          .byte 0x12
          .byte 0xb8
          .byte 0x12
          .byte 0xbe
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc2
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xc8
          .byte 0x12
          .byte 0xd6
          .byte 0x12
          .byte 0xd8
          .byte 0x12
          .byte 0x10
          .byte 0x13
          .byte 0x12
          .byte 0x13
          .byte 0x15
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x5d
          .byte 0x13
          .byte 0x7c
          .byte 0x13
          .byte 0x80
          .byte 0x13
          .byte 0x99
          .byte 0x13
          .byte 0x80
          .byte 0x2d
          .byte 0x96
          .byte 0x2d
          .byte 0xa0
          .byte 0x2d
          .byte 0xa6
          .byte 0x2d
          .byte 0xa8
          .byte 0x2d
          .byte 0xae
          .byte 0x2d
          .byte 0xb0
          .byte 0x2d
          .byte 0xb6
          .byte 0x2d
          .byte 0xb8
          .byte 0x2d
          .byte 0xbe
          .byte 0x2d
          .byte 0xc0
          .byte 0x2d
          .byte 0xc6
          .byte 0x2d
          .byte 0xc8
          .byte 0x2d
          .byte 0xce
          .byte 0x2d
          .byte 0xd0
          .byte 0x2d
          .byte 0xd6
          .byte 0x2d
          .byte 0xd8
          .byte 0x2d
          .byte 0xde
          .byte 0x2d
          .byte 0x1
          .byte 0xab
          .byte 0x6
          .byte 0xab
          .byte 0x9
          .byte 0xab
          .byte 0xe
          .byte 0xab
          .byte 0x11
          .byte 0xab
          .byte 0x16
          .byte 0xab
          .byte 0x20
          .byte 0xab
          .byte 0x26
          .byte 0xab
          .byte 0x28
          .byte 0xab
          .byte 0x2e
          .byte 0xab
.L_439300:
          .byte 0x60
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439320:

            add BYTE PTR [RCX],DL
            call QWORD PTR [RCX]
          .byte 0x2e
          .byte 0x30
          .byte 0x2f
          .byte 0x30
          .byte 0x31
          .byte 0x31
          .byte 0x8e
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x60
          .byte 0x32
          .byte 0x7e
          .byte 0x32
          .byte 0x60
          .byte 0xa9
          .byte 0x7c
          .byte 0xa9
          .byte 0x0
          .byte 0xac
          .byte 0xa3
          .byte 0xd7
          .byte 0xb0
          .byte 0xd7
          .byte 0xc6
          .byte 0xd7
          .byte 0xcb
          .byte 0xd7
          .byte 0xfb
          .byte 0xd7
          .byte 0xa0
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xca
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439360:
          .byte 0x0
          .byte 0x4
          .byte 0x84
          .byte 0x4
          .byte 0x87
          .byte 0x4
          .byte 0x27
          .byte 0x5
          .byte 0x2b
          .byte 0x1d
          .byte 0x2b
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0xe0
          .byte 0x2d
          .byte 0xff
          .byte 0x2d
          .byte 0x40
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439380:
          .byte 0x1
          .byte 0xc
          .byte 0x3
          .byte 0xc
          .byte 0x5
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xe
          .byte 0xc
          .byte 0x10
          .byte 0xc
          .byte 0x12
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x2a
          .byte 0xc
          .byte 0x33
          .byte 0xc
          .byte 0x35
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x44
          .byte 0xc
          .byte 0x46
          .byte 0xc
          .byte 0x48
          .byte 0xc
          .byte 0x4a
          .byte 0xc
          .byte 0x4d
          .byte 0xc
          .byte 0x55
          .byte 0xc
          .byte 0x56
          .byte 0xc
          .byte 0x58
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x60
          .byte 0xc
          .byte 0x63
          .byte 0xc
          .byte 0x66
          .byte 0xc
          .byte 0x6f
          .byte 0xc
          .byte 0x78
          .byte 0xc
          .byte 0x7f
          .byte 0xc
.L_4393b8:
          .byte 0x80
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4393c0:

            and BYTE PTR [RAX],AL
            and BYTE PTR [RAX],AL
            movabs AL,BYTE PTR [6333283612794880]
            and BYTE PTR [RDX],CL
            and BYTE PTR [RDI],CH
            and BYTE PTR [RDI],CH
            and BYTE PTR [RDI+32],BL
            pop RDI
            and BYTE PTR [RAX],AL
            xor BYTE PTR [RAX],AL
            xor BYTE PTR [RCX],CH
            and BYTE PTR [RCX],CH
.L_4393df:

            and BYTE PTR [RAX],AL
            fdivr ST(7)
            fild WORD PTR [RAX]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBP-1124073200],BH
            adc BYTE PTR [RCX],AL
            add BYTE PTR [RBX-47],DH
            add DWORD PTR [RAX],EAX
            jp .L_4393df
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xe
          .byte 0x0
.L_439420:
          .byte 0xad
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xe
          .byte 0x18
          .byte 0xe
          .byte 0x18
          .byte 0xb
          .byte 0x20
          .byte 0xf
          .byte 0x20
          .byte 0x2a
          .byte 0x20
          .byte 0x2e
          .byte 0x20
          .byte 0x60
          .byte 0x20
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x20
          .byte 0x6f
          .byte 0x20
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0xf9
          .byte 0xff
          .byte 0xfb
          .byte 0xff
.L_439450:
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439460:
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0x10
          .byte 0x0
.L_439470:
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xf8
.L_439474:
          .string "( ( "
          .zero 7
.L_439480:
          .string " "
          .byte 0x20
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x80
          .byte 0x16
          .byte 0x0
          .byte 0x20
          .byte 0xa
          .byte 0x20
          .byte 0x28
          .byte 0x20
          .byte 0x29
          .byte 0x20
          .byte 0x2f
          .byte 0x20
          .byte 0x2f
          .byte 0x20
          .byte 0x5f
          .byte 0x20
          .byte 0x5f
          .byte 0x20
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x30
.L_4394a0:
          .string "$"
          .byte 0x24
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x8f
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0xb
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xf2
          .byte 0x9
          .byte 0xf3
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0xf1
          .byte 0xa
          .byte 0xf1
          .byte 0xa
          .byte 0xf9
          .byte 0xb
          .byte 0xf9
          .byte 0xb
          .byte 0x3f
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0xdb
          .byte 0x17
          .byte 0xdb
          .byte 0x17
          .byte 0xa0
          .byte 0x20
          .byte 0xba
          .byte 0x20
          .byte 0x38
          .byte 0xa8
          .byte 0x38
          .byte 0xa8
          .byte 0xfc
          .byte 0xfd
          .byte 0xfc
          .byte 0xfd
          .byte 0x69
          .byte 0xfe
          .byte 0x69
          .byte 0xfe
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xe1
          .byte 0xff
          .byte 0xe5
          .byte 0xff
          .byte 0xe6
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439500:
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439560:
          .string "+"
          .byte 0x2b
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf6
          .byte 0x3
          .byte 0xf6
          .byte 0x3
          .byte 0x6
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0x44
          .byte 0x20
          .byte 0x44
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x7a
          .byte 0x20
          .byte 0x7c
          .byte 0x20
          .byte 0x8a
          .byte 0x20
          .byte 0x8c
          .byte 0x20
          .byte 0x18
          .byte 0x21
          .byte 0x18
          .byte 0x21
          .byte 0x40
          .byte 0x21
          .byte 0x44
          .byte 0x21
          .byte 0x4b
          .byte 0x21
          .byte 0x4b
          .byte 0x21
          .byte 0x90
          .byte 0x21
          .byte 0x94
          .byte 0x21
          .byte 0x9a
          .byte 0x21
          .byte 0x9b
          .byte 0x21
          .byte 0xa0
          .byte 0x21
          .byte 0xa0
          .byte 0x21
          .byte 0xa3
          .byte 0x21
          .byte 0xa3
          .byte 0x21
          .byte 0xa6
          .byte 0x21
          .byte 0xa6
          .byte 0x21
          .byte 0xae
          .byte 0x21
          .byte 0xae
          .byte 0x21
          .byte 0xce
          .byte 0x21
          .byte 0xcf
          .byte 0x21
          .byte 0xd2
          .byte 0x21
          .byte 0xd2
          .byte 0x21
          .byte 0xd4
          .byte 0x21
          .byte 0xd4
          .byte 0x21
          .byte 0xf4
          .byte 0x21
          .byte 0xff
          .byte 0x22
          .byte 0x20
          .byte 0x23
          .byte 0x21
          .byte 0x23
          .byte 0x7c
          .byte 0x23
          .byte 0x7c
          .byte 0x23
          .byte 0x9b
          .byte 0x23
          .byte 0xb3
          .byte 0x23
          .byte 0xdc
          .byte 0x23
          .byte 0xe1
          .byte 0x23
          .byte 0xb7
          .byte 0x25
          .byte 0xb7
          .byte 0x25
          .byte 0xc1
          .byte 0x25
          .byte 0xc1
          .byte 0x25
          .byte 0xf8
          .byte 0x25
          .byte 0xff
          .byte 0x25
          .byte 0x6f
          .byte 0x26
          .byte 0x6f
          .byte 0x26
          .byte 0xc0
          .byte 0x27
          .byte 0xc4
          .byte 0x27
          .byte 0xc7
          .byte 0x27
          .byte 0xe5
          .byte 0x27
          .byte 0xf0
          .byte 0x27
          .byte 0xff
          .byte 0x27
          .byte 0x0
          .byte 0x29
          .byte 0x82
          .byte 0x29
          .byte 0x99
          .byte 0x29
          .byte 0xd7
          .byte 0x29
          .byte 0xdc
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfe
          .byte 0x29
          .byte 0xff
          .byte 0x2a
          .byte 0x30
          .byte 0x2b
          .byte 0x44
          .byte 0x2b
          .byte 0x47
          .byte 0x2b
          .byte 0x4c
          .byte 0x2b
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfb
          .byte 0x62
          .byte 0xfe
          .byte 0x62
          .byte 0xfe
          .byte 0x64
          .byte 0xfe
          .byte 0x66
          .byte 0xfe
          .byte 0xb
          .byte 0xff
          .byte 0xb
          .byte 0xff
          .byte 0x1c
          .byte 0xff
          .byte 0x1e
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0xe2
          .byte 0xff
          .byte 0xe2
          .byte 0xff
          .byte 0xe9
          .byte 0xff
          .byte 0xec
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439640:
          .byte 0x37
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0xf5
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x84
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xdd
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xb1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xdf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xe6
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc6
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xe0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf7
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4397c0:
          .byte 0xa6
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x82
          .byte 0x4
          .byte 0x82
          .byte 0x4
          .byte 0xe
          .byte 0x6
          .byte 0xf
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xfd
          .byte 0x6
          .byte 0xfe
          .byte 0x6
          .byte 0xf6
          .byte 0x7
          .byte 0xf6
          .byte 0x7
          .byte 0xfa
          .byte 0x9
          .byte 0xfa
          .byte 0x9
          .byte 0x70
          .byte 0xb
          .byte 0x70
          .byte 0xb
          .byte 0xf3
          .byte 0xb
          .byte 0xf8
          .byte 0xb
          .byte 0xfa
          .byte 0xb
          .byte 0xfa
          .byte 0xb
          .byte 0x7f
          .byte 0xc
          .byte 0x7f
          .byte 0xc
          .byte 0x79
          .byte 0xd
          .byte 0x79
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x15
          .byte 0xf
          .byte 0x17
          .byte 0xf
          .byte 0x1a
          .byte 0xf
          .byte 0x1f
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0xbe
          .byte 0xf
          .byte 0xc5
          .byte 0xf
          .byte 0xc7
          .byte 0xf
          .byte 0xcc
          .byte 0xf
          .byte 0xce
          .byte 0xf
          .byte 0xcf
          .byte 0xf
          .byte 0xd5
          .byte 0xf
          .byte 0xd8
          .byte 0xf
          .byte 0x9e
          .byte 0x10
          .byte 0x9f
          .byte 0x10
          .byte 0x90
          .byte 0x13
          .byte 0x99
          .byte 0x13
          .byte 0x40
          .byte 0x19
          .byte 0x40
          .byte 0x19
          .byte 0xde
          .byte 0x19
          .byte 0xff
          .byte 0x19
          .byte 0x61
          .byte 0x1b
          .byte 0x6a
          .byte 0x1b
          .byte 0x74
          .byte 0x1b
          .byte 0x7c
          .byte 0x1b
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x3
          .byte 0x21
          .byte 0x6
          .byte 0x21
          .byte 0x8
          .byte 0x21
          .byte 0x9
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x16
          .byte 0x21
          .byte 0x17
          .byte 0x21
          .byte 0x1e
          .byte 0x21
          .byte 0x23
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x3a
          .byte 0x21
          .byte 0x3b
          .byte 0x21
          .byte 0x4a
          .byte 0x21
          .byte 0x4a
          .byte 0x21
          .byte 0x4c
          .byte 0x21
          .byte 0x4d
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x95
          .byte 0x21
          .byte 0x99
          .byte 0x21
          .byte 0x9c
          .byte 0x21
          .byte 0x9f
          .byte 0x21
          .byte 0xa1
          .byte 0x21
          .byte 0xa2
          .byte 0x21
          .byte 0xa4
          .byte 0x21
          .byte 0xa5
          .byte 0x21
          .byte 0xa7
          .byte 0x21
          .byte 0xad
          .byte 0x21
          .byte 0xaf
          .byte 0x21
          .byte 0xcd
          .byte 0x21
          .byte 0xd0
          .byte 0x21
          .byte 0xd1
          .byte 0x21
          .byte 0xd3
          .byte 0x21
          .byte 0xd3
          .byte 0x21
          .byte 0xd5
          .byte 0x21
          .byte 0xf3
          .byte 0x21
          .byte 0x0
          .byte 0x23
          .byte 0x7
          .byte 0x23
          .byte 0xc
          .byte 0x23
          .byte 0x1f
          .byte 0x23
          .byte 0x22
          .byte 0x23
          .byte 0x28
          .byte 0x23
          .byte 0x2b
          .byte 0x23
          .byte 0x7b
          .byte 0x23
          .byte 0x7d
          .byte 0x23
          .byte 0x9a
          .byte 0x23
          .byte 0xb4
          .byte 0x23
          .byte 0xdb
          .byte 0x23
          .byte 0xe2
          .byte 0x23
          .byte 0xf3
          .byte 0x23
          .byte 0x0
          .byte 0x24
          .byte 0x26
          .byte 0x24
          .byte 0x40
          .byte 0x24
          .byte 0x4a
          .byte 0x24
          .byte 0x9c
          .byte 0x24
          .byte 0xe9
          .byte 0x24
          .byte 0x0
          .byte 0x25
          .byte 0xb6
          .byte 0x25
          .byte 0xb8
          .byte 0x25
          .byte 0xc0
          .byte 0x25
          .byte 0xc2
          .byte 0x25
          .byte 0xf7
          .byte 0x25
          .byte 0x0
          .byte 0x26
          .byte 0x6e
          .byte 0x26
          .byte 0x70
          .byte 0x26
          .byte 0xff
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0x67
          .byte 0x27
          .byte 0x94
          .byte 0x27
          .byte 0xbf
          .byte 0x27
          .byte 0x0
          .byte 0x28
          .byte 0xff
          .byte 0x28
          .byte 0x0
          .byte 0x2b
          .byte 0x2f
          .byte 0x2b
          .byte 0x45
          .byte 0x2b
          .byte 0x46
          .byte 0x2b
          .byte 0x50
          .byte 0x2b
          .byte 0x59
          .byte 0x2b
          .byte 0xe5
          .byte 0x2c
          .byte 0xea
          .byte 0x2c
          .byte 0x80
          .byte 0x2e
          .byte 0x99
          .byte 0x2e
          .byte 0x9b
          .byte 0x2e
          .byte 0xf3
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0xd5
          .byte 0x2f
          .byte 0xf0
          .byte 0x2f
          .byte 0xfb
          .byte 0x2f
          .byte 0x4
          .byte 0x30
          .byte 0x4
          .byte 0x30
          .byte 0x12
          .byte 0x30
          .byte 0x13
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x36
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x3e
          .byte 0x30
          .byte 0x3f
          .byte 0x30
          .byte 0x90
          .byte 0x31
          .byte 0x91
          .byte 0x31
          .byte 0x96
          .byte 0x31
          .byte 0x9f
          .byte 0x31
          .byte 0xc0
          .byte 0x31
          .byte 0xe3
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x2a
          .byte 0x32
          .byte 0x47
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x60
          .byte 0x32
          .byte 0x7f
          .byte 0x32
          .byte 0x8a
          .byte 0x32
          .byte 0xb0
          .byte 0x32
          .byte 0xc0
          .byte 0x32
          .byte 0xfe
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0x33
          .byte 0xc0
          .byte 0x4d
          .byte 0xff
          .byte 0x4d
          .byte 0x90
          .byte 0xa4
          .byte 0xc6
          .byte 0xa4
          .byte 0x28
          .byte 0xa8
          .byte 0x2b
          .byte 0xa8
          .byte 0x36
          .byte 0xa8
          .byte 0x37
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0x77
          .byte 0xaa
          .byte 0x79
          .byte 0xaa
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0xe4
          .byte 0xff
          .byte 0xe4
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xed
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xfc
          .byte 0xff
          .byte 0xfd
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439980:
          .byte 0x37
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0xf5
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x84
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8c
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xdd
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xf1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xb1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0xdf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xe6
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xc6
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xe0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf7
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0xfb
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x45
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xf7
          .byte 0x1
          .byte 0x0
.L_439b40:
          .string "$"
          .byte 0x24
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0xc5
          .byte 0x2
          .byte 0xd2
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe5
          .byte 0x2
          .byte 0xeb
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xef
          .byte 0x2
          .byte 0xff
          .byte 0x2
          .byte 0x75
          .byte 0x3
          .byte 0x75
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0xf6
          .byte 0x3
          .byte 0xf6
          .byte 0x3
          .byte 0x82
          .byte 0x4
          .byte 0x82
          .byte 0x4
          .byte 0x8f
          .byte 0x5
          .byte 0x8f
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x8
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xb
          .byte 0x6
          .byte 0xe
          .byte 0x6
          .byte 0xf
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xde
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xe9
          .byte 0x6
          .byte 0xfd
          .byte 0x6
          .byte 0xfe
          .byte 0x6
          .byte 0xf6
          .byte 0x7
          .byte 0xf6
          .byte 0x7
          .byte 0xf2
          .byte 0x9
          .byte 0xf3
          .byte 0x9
          .byte 0xfa
          .byte 0x9
          .byte 0xfb
          .byte 0x9
          .byte 0xf1
          .byte 0xa
          .byte 0xf1
          .byte 0xa
          .byte 0x70
          .byte 0xb
          .byte 0x70
          .byte 0xb
          .byte 0xf3
          .byte 0xb
          .byte 0xfa
          .byte 0xb
          .byte 0x7f
          .byte 0xc
          .byte 0x7f
          .byte 0xc
          .byte 0x79
          .byte 0xd
          .byte 0x79
          .byte 0xd
          .byte 0x3f
          .byte 0xe
          .byte 0x3f
          .byte 0xe
          .byte 0x1
          .byte 0xf
          .byte 0x3
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x13
          .byte 0xf
          .byte 0x15
          .byte 0xf
          .byte 0x17
          .byte 0xf
          .byte 0x1a
          .byte 0xf
          .byte 0x1f
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x34
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x36
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0x38
          .byte 0xf
          .byte 0xbe
          .byte 0xf
          .byte 0xc5
          .byte 0xf
          .byte 0xc7
          .byte 0xf
          .byte 0xcc
          .byte 0xf
          .byte 0xce
          .byte 0xf
          .byte 0xcf
          .byte 0xf
          .byte 0xd5
          .byte 0xf
          .byte 0xd8
          .byte 0xf
          .byte 0x9e
          .byte 0x10
          .byte 0x9f
          .byte 0x10
          .byte 0x90
          .byte 0x13
          .byte 0x99
          .byte 0x13
          .byte 0xdb
          .byte 0x17
          .byte 0xdb
          .byte 0x17
          .byte 0x40
          .byte 0x19
          .byte 0x40
          .byte 0x19
          .byte 0xde
          .byte 0x19
          .byte 0xff
          .byte 0x19
          .byte 0x61
          .byte 0x1b
          .byte 0x6a
          .byte 0x1b
          .byte 0x74
          .byte 0x1b
          .byte 0x7c
          .byte 0x1b
          .byte 0xbd
          .byte 0x1f
          .byte 0xbd
          .byte 0x1f
          .byte 0xbf
          .byte 0x1f
          .byte 0xc1
          .byte 0x1f
          .byte 0xcd
          .byte 0x1f
          .byte 0xcf
          .byte 0x1f
          .byte 0xdd
          .byte 0x1f
          .byte 0xdf
          .byte 0x1f
          .byte 0xed
          .byte 0x1f
          .byte 0xef
          .byte 0x1f
          .byte 0xfd
          .byte 0x1f
          .byte 0xfe
          .byte 0x1f
          .byte 0x44
          .byte 0x20
          .byte 0x44
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x52
          .byte 0x20
          .byte 0x7a
          .byte 0x20
          .byte 0x7c
          .byte 0x20
          .byte 0x8a
          .byte 0x20
          .byte 0x8c
          .byte 0x20
          .byte 0xa0
          .byte 0x20
          .byte 0xba
          .byte 0x20
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x3
          .byte 0x21
          .byte 0x6
          .byte 0x21
          .byte 0x8
          .byte 0x21
          .byte 0x9
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x14
          .byte 0x21
          .byte 0x16
          .byte 0x21
          .byte 0x18
          .byte 0x21
          .byte 0x1e
          .byte 0x21
          .byte 0x23
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x25
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x27
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x29
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x3a
          .byte 0x21
          .byte 0x3b
          .byte 0x21
          .byte 0x40
          .byte 0x21
          .byte 0x44
          .byte 0x21
          .byte 0x4a
          .byte 0x21
          .byte 0x4d
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x4f
          .byte 0x21
          .byte 0x90
          .byte 0x21
          .byte 0x7
          .byte 0x23
          .byte 0xc
          .byte 0x23
          .byte 0x28
          .byte 0x23
          .byte 0x2b
          .byte 0x23
          .byte 0xf3
          .byte 0x23
          .byte 0x0
          .byte 0x24
          .byte 0x26
          .byte 0x24
          .byte 0x40
          .byte 0x24
          .byte 0x4a
          .byte 0x24
          .byte 0x9c
          .byte 0x24
          .byte 0xe9
          .byte 0x24
          .byte 0x0
          .byte 0x25
          .byte 0xff
          .byte 0x26
          .byte 0x1
          .byte 0x27
          .byte 0x67
          .byte 0x27
          .byte 0x94
          .byte 0x27
          .byte 0xc4
          .byte 0x27
          .byte 0xc7
          .byte 0x27
          .byte 0xe5
          .byte 0x27
          .byte 0xf0
          .byte 0x27
          .byte 0x82
          .byte 0x29
          .byte 0x99
          .byte 0x29
          .byte 0xd7
          .byte 0x29
          .byte 0xdc
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfe
          .byte 0x29
          .byte 0x4c
          .byte 0x2b
          .byte 0x50
          .byte 0x2b
          .byte 0x59
          .byte 0x2b
          .byte 0xe5
          .byte 0x2c
          .byte 0xea
          .byte 0x2c
          .byte 0x80
          .byte 0x2e
          .byte 0x99
          .byte 0x2e
          .byte 0x9b
          .byte 0x2e
          .byte 0xf3
          .byte 0x2e
          .byte 0x0
          .byte 0x2f
          .byte 0xd5
          .byte 0x2f
          .byte 0xf0
          .byte 0x2f
          .byte 0xfb
          .byte 0x2f
          .byte 0x4
          .byte 0x30
          .byte 0x4
          .byte 0x30
          .byte 0x12
          .byte 0x30
          .byte 0x13
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x30
          .byte 0x36
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x3e
          .byte 0x30
          .byte 0x3f
          .byte 0x30
          .byte 0x9b
          .byte 0x30
          .byte 0x9c
          .byte 0x30
          .byte 0x90
          .byte 0x31
          .byte 0x91
          .byte 0x31
          .byte 0x96
          .byte 0x31
          .byte 0x9f
          .byte 0x31
          .byte 0xc0
          .byte 0x31
          .byte 0xe3
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x2a
          .byte 0x32
          .byte 0x47
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x50
          .byte 0x32
          .byte 0x60
          .byte 0x32
          .byte 0x7f
          .byte 0x32
          .byte 0x8a
          .byte 0x32
          .byte 0xb0
          .byte 0x32
          .byte 0xc0
          .byte 0x32
          .byte 0xfe
          .byte 0x32
          .byte 0x0
          .byte 0x33
          .byte 0xff
          .byte 0x33
          .byte 0xc0
          .byte 0x4d
          .byte 0xff
          .byte 0x4d
          .byte 0x90
          .byte 0xa4
          .byte 0xc6
          .byte 0xa4
          .byte 0x0
          .byte 0xa7
          .byte 0x16
          .byte 0xa7
          .byte 0x20
          .byte 0xa7
          .byte 0x21
          .byte 0xa7
          .byte 0x89
          .byte 0xa7
          .byte 0x8a
          .byte 0xa7
          .byte 0x28
          .byte 0xa8
          .byte 0x2b
          .byte 0xa8
          .byte 0x36
          .byte 0xa8
          .byte 0x39
          .byte 0xa8
          .byte 0x77
          .byte 0xaa
          .byte 0x79
          .byte 0xaa
          .byte 0x29
          .byte 0xfb
          .byte 0x29
          .byte 0xfb
          .byte 0xb2
          .byte 0xfb
          .byte 0xc1
          .byte 0xfb
          .byte 0xfc
          .byte 0xfd
          .byte 0xfd
          .byte 0xfd
          .byte 0x62
          .byte 0xfe
          .byte 0x62
          .byte 0xfe
          .byte 0x64
          .byte 0xfe
          .byte 0x66
          .byte 0xfe
          .byte 0x69
          .byte 0xfe
          .byte 0x69
          .byte 0xfe
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0xff
          .byte 0xb
          .byte 0xff
          .byte 0xb
          .byte 0xff
          .byte 0x1c
          .byte 0xff
          .byte 0x1e
          .byte 0xff
          .byte 0x3e
          .byte 0xff
          .byte 0x3e
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0x5e
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xe6
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xfc
          .byte 0xff
          .byte 0xfd
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439d80:
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbc
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439e00:
          .string "!"
          .byte 0x23
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x7e
          .byte 0x3
          .byte 0x7e
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x87
          .byte 0x3
          .byte 0x5a
          .byte 0x5
          .byte 0x5f
          .byte 0x5
          .byte 0x89
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0xc0
          .byte 0x5
          .byte 0xc0
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xf3
          .byte 0x5
          .byte 0xf4
          .byte 0x5
          .byte 0x9
          .byte 0x6
          .byte 0xa
          .byte 0x6
          .byte 0xc
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x6a
          .byte 0x6
          .byte 0x6d
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0xd
          .byte 0x7
          .byte 0xf7
          .byte 0x7
          .byte 0xf9
          .byte 0x7
          .byte 0x30
          .byte 0x8
          .byte 0x3e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x64
          .byte 0x9
          .byte 0x65
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0xf0
          .byte 0xa
          .byte 0xf0
          .byte 0xa
          .byte 0xf4
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0x4f
          .byte 0xe
          .byte 0x4f
          .byte 0xe
          .byte 0x5a
          .byte 0xe
          .byte 0x5b
          .byte 0xe
          .byte 0x4
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x3a
          .byte 0xf
          .byte 0x3d
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0xd0
          .byte 0xf
          .byte 0xd4
          .byte 0xf
          .byte 0xd9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0x4a
          .byte 0x10
          .byte 0x4f
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0x60
          .byte 0x13
          .byte 0x68
          .byte 0x13
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x14
          .byte 0x6d
          .byte 0x16
          .byte 0x6e
          .byte 0x16
          .byte 0x9b
          .byte 0x16
          .byte 0x9c
          .byte 0x16
          .byte 0xeb
          .byte 0x16
          .byte 0xed
          .byte 0x16
          .byte 0x35
          .byte 0x17
          .byte 0x36
          .byte 0x17
          .byte 0xd4
          .byte 0x17
          .byte 0xd6
          .byte 0x17
          .byte 0xd8
          .byte 0x17
          .byte 0xda
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0xa
          .byte 0x18
          .byte 0x44
          .byte 0x19
          .byte 0x45
          .byte 0x19
          .byte 0x1e
          .byte 0x1a
          .byte 0x1f
          .byte 0x1a
          .byte 0xa0
          .byte 0x1a
          .byte 0xa6
          .byte 0x1a
          .byte 0xa8
          .byte 0x1a
          .byte 0xad
          .byte 0x1a
          .byte 0x5a
          .byte 0x1b
          .byte 0x60
          .byte 0x1b
          .byte 0xfc
          .byte 0x1b
          .byte 0xff
          .byte 0x1b
          .byte 0x3b
          .byte 0x1c
          .byte 0x3f
          .byte 0x1c
          .byte 0x7e
          .byte 0x1c
          .byte 0x7f
          .byte 0x1c
          .byte 0xc0
          .byte 0x1c
          .byte 0xc7
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0x10
          .byte 0x20
          .byte 0x27
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x43
          .byte 0x20
          .byte 0x45
          .byte 0x20
          .byte 0x51
          .byte 0x20
          .byte 0x53
          .byte 0x20
          .byte 0x5e
          .byte 0x20
          .byte 0x7d
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x8d
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0x8
          .byte 0x23
          .byte 0xb
          .byte 0x23
          .byte 0x29
          .byte 0x23
          .byte 0x2a
          .byte 0x23
          .byte 0x68
          .byte 0x27
          .byte 0x75
          .byte 0x27
          .byte 0xc5
          .byte 0x27
          .byte 0xc6
          .byte 0x27
          .byte 0xe6
          .byte 0x27
          .byte 0xef
          .byte 0x27
          .byte 0x83
          .byte 0x29
          .byte 0x98
          .byte 0x29
          .byte 0xd8
          .byte 0x29
          .byte 0xdb
          .byte 0x29
          .byte 0xfc
          .byte 0x29
          .byte 0xfd
          .byte 0x29
          .byte 0xf9
          .byte 0x2c
          .byte 0xfc
          .byte 0x2c
          .byte 0xfe
          .byte 0x2c
          .byte 0xff
          .byte 0x2c
          .byte 0x70
          .byte 0x2d
          .byte 0x70
          .byte 0x2d
          .byte 0x0
          .byte 0x2e
          .byte 0x2e
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x3b
          .byte 0x2e
          .byte 0x1
          .byte 0x30
          .byte 0x3
          .byte 0x30
          .byte 0x8
          .byte 0x30
          .byte 0x11
          .byte 0x30
          .byte 0x14
          .byte 0x30
          .byte 0x1f
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfe
          .byte 0xa4
          .byte 0xff
          .byte 0xa4
          .byte 0xd
          .byte 0xa6
          .byte 0xf
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0xf2
          .byte 0xa6
          .byte 0xf7
          .byte 0xa6
          .byte 0x74
          .byte 0xa8
          .byte 0x77
          .byte 0xa8
          .byte 0xce
          .byte 0xa8
          .byte 0xcf
          .byte 0xa8
          .byte 0xf8
          .byte 0xa8
          .byte 0xfa
          .byte 0xa8
          .byte 0x2e
          .byte 0xa9
          .byte 0x2f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0xc1
          .byte 0xa9
          .byte 0xcd
          .byte 0xa9
          .byte 0xde
          .byte 0xa9
          .byte 0xdf
          .byte 0xa9
          .byte 0x5c
          .byte 0xaa
          .byte 0x5f
          .byte 0xaa
          .byte 0xde
          .byte 0xaa
          .byte 0xdf
          .byte 0xaa
          .byte 0xf0
          .byte 0xaa
          .byte 0xf1
          .byte 0xaa
          .byte 0xeb
          .byte 0xab
          .byte 0xeb
          .byte 0xab
          .byte 0x3e
          .byte 0xfd
          .byte 0x3f
          .byte 0xfd
          .byte 0x10
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x52
          .byte 0xfe
          .byte 0x54
          .byte 0xfe
          .byte 0x61
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x6a
          .byte 0xfe
          .byte 0x6b
          .byte 0xfe
          .byte 0x1
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0x5
          .byte 0xff
          .byte 0xa
          .byte 0xff
          .byte 0xc
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0x1a
          .byte 0xff
          .byte 0x1b
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0x20
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0x65
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a000:
          .string "^"
          .byte 0x5e
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0xc5
          .byte 0x2
          .byte 0xd2
          .byte 0x2
          .byte 0xdf
          .byte 0x2
          .byte 0xe5
          .byte 0x2
          .byte 0xeb
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xed
          .byte 0x2
          .byte 0xef
          .byte 0x2
          .byte 0xff
          .byte 0x2
          .byte 0x75
          .byte 0x3
          .byte 0x75
          .byte 0x3
          .byte 0x84
          .byte 0x3
          .byte 0x85
          .byte 0x3
          .byte 0xbd
          .byte 0x1f
          .byte 0xbd
          .byte 0x1f
          .byte 0xbf
          .byte 0x1f
          .byte 0xc1
          .byte 0x1f
          .byte 0xcd
          .byte 0x1f
          .byte 0xcf
          .byte 0x1f
          .byte 0xdd
          .byte 0x1f
          .byte 0xdf
          .byte 0x1f
          .byte 0xed
          .byte 0x1f
          .byte 0xef
          .byte 0x1f
          .byte 0xfd
          .byte 0x1f
          .byte 0xfe
          .byte 0x1f
          .byte 0x9b
          .byte 0x30
          .byte 0x9c
          .byte 0x30
          .byte 0x0
          .byte 0xa7
          .byte 0x16
          .byte 0xa7
          .byte 0x20
          .byte 0xa7
          .byte 0x21
          .byte 0xa7
          .byte 0x89
          .byte 0xa7
          .byte 0x8a
          .byte 0xa7
          .byte 0xb2
          .byte 0xfb
          .byte 0xc1
          .byte 0xfb
          .byte 0x3e
          .byte 0xff
          .byte 0x3e
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0x40
          .byte 0xff
          .byte 0xe3
          .byte 0xff
          .byte 0xe3
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a080:
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7d
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd9
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x71
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0xce
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xf1
          .byte 0x1
          .byte 0x0
.L_43a140:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x60
          .byte 0x6
          .byte 0x69
          .byte 0x6
          .byte 0xf0
          .byte 0x6
          .byte 0xf9
          .byte 0x6
          .byte 0xc0
          .byte 0x7
          .byte 0xc9
          .byte 0x7
          .byte 0x66
          .byte 0x9
          .byte 0x6f
          .byte 0x9
          .byte 0xe6
          .byte 0x9
          .byte 0xef
          .byte 0x9
          .byte 0xf4
          .byte 0x9
          .byte 0xf9
          .byte 0x9
          .byte 0x66
          .byte 0xa
          .byte 0x6f
          .byte 0xa
          .byte 0xe6
          .byte 0xa
          .byte 0xef
          .byte 0xa
          .byte 0x66
          .byte 0xb
          .byte 0x6f
          .byte 0xb
          .byte 0x72
          .byte 0xb
          .byte 0x77
          .byte 0xb
          .byte 0xe6
          .byte 0xb
          .byte 0xf2
          .byte 0xb
          .byte 0x66
          .byte 0xc
          .byte 0x6f
          .byte 0xc
          .byte 0x78
          .byte 0xc
          .byte 0x7e
          .byte 0xc
          .byte 0xe6
          .byte 0xc
          .byte 0xef
          .byte 0xc
          .byte 0x66
          .byte 0xd
          .byte 0x75
          .byte 0xd
          .byte 0x50
          .byte 0xe
          .byte 0x59
          .byte 0xe
          .byte 0xd0
          .byte 0xe
          .byte 0xd9
          .byte 0xe
          .byte 0x20
          .byte 0xf
          .byte 0x33
          .byte 0xf
          .byte 0x40
          .byte 0x10
          .byte 0x49
          .byte 0x10
          .byte 0x90
          .byte 0x10
          .byte 0x99
          .byte 0x10
          .byte 0x69
          .byte 0x13
          .byte 0x7c
          .byte 0x13
          .byte 0xee
          .byte 0x16
          .byte 0xf0
          .byte 0x16
          .byte 0xe0
          .byte 0x17
          .byte 0xe9
          .byte 0x17
          .byte 0xf0
          .byte 0x17
          .byte 0xf9
          .byte 0x17
          .byte 0x10
          .byte 0x18
          .byte 0x19
          .byte 0x18
          .byte 0x46
          .byte 0x19
          .byte 0x4f
          .byte 0x19
          .byte 0xd0
          .byte 0x19
          .byte 0xda
          .byte 0x19
          .byte 0x80
          .byte 0x1a
          .byte 0x89
          .byte 0x1a
          .byte 0x90
          .byte 0x1a
          .byte 0x99
          .byte 0x1a
          .byte 0x50
          .byte 0x1b
          .byte 0x59
          .byte 0x1b
          .byte 0xb0
          .byte 0x1b
          .byte 0xb9
          .byte 0x1b
          .byte 0x40
          .byte 0x1c
          .byte 0x49
          .byte 0x1c
          .byte 0x50
          .byte 0x1c
          .byte 0x59
          .byte 0x1c
          .byte 0x70
          .byte 0x20
          .byte 0x70
          .byte 0x20
          .byte 0x74
          .byte 0x20
          .byte 0x79
          .byte 0x20
          .byte 0x80
          .byte 0x20
          .byte 0x89
          .byte 0x20
          .byte 0x50
          .byte 0x21
          .byte 0x82
          .byte 0x21
          .byte 0x85
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x60
          .byte 0x24
          .byte 0x9b
          .byte 0x24
          .byte 0xea
          .byte 0x24
          .byte 0xff
          .byte 0x24
          .byte 0x76
          .byte 0x27
          .byte 0x93
          .byte 0x27
          .byte 0xfd
          .byte 0x2c
          .byte 0xfd
          .byte 0x2c
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x21
          .byte 0x30
          .byte 0x29
          .byte 0x30
          .byte 0x38
          .byte 0x30
          .byte 0x3a
          .byte 0x30
          .byte 0x92
          .byte 0x31
          .byte 0x95
          .byte 0x31
          .byte 0x20
          .byte 0x32
          .byte 0x29
          .byte 0x32
          .byte 0x48
          .byte 0x32
          .byte 0x4f
          .byte 0x32
          .byte 0x51
          .byte 0x32
          .byte 0x5f
          .byte 0x32
          .byte 0x80
          .byte 0x32
          .byte 0x89
          .byte 0x32
          .byte 0xb1
          .byte 0x32
          .byte 0xbf
          .byte 0x32
          .byte 0x20
          .byte 0xa6
          .byte 0x29
          .byte 0xa6
          .byte 0xe6
          .byte 0xa6
          .byte 0xef
          .byte 0xa6
          .byte 0x30
          .byte 0xa8
          .byte 0x35
          .byte 0xa8
          .byte 0xd0
          .byte 0xa8
          .byte 0xd9
          .byte 0xa8
          .byte 0x0
          .byte 0xa9
          .byte 0x9
          .byte 0xa9
          .byte 0xd0
          .byte 0xa9
          .byte 0xd9
          .byte 0xa9
          .byte 0x50
          .byte 0xaa
          .byte 0x59
          .byte 0xaa
          .byte 0xf0
          .byte 0xab
          .byte 0xf9
          .byte 0xab
          .byte 0x10
          .byte 0xff
          .byte 0x19
          .byte 0xff
.L_43a240:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x13
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x17
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xaf
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xe8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x93
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xda
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x88
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x32
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x61
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x77
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd6
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x34
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xfa
          .byte 0x2
          .byte 0x0
.L_43a5e0:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xc1
          .byte 0x2
          .byte 0xc6
          .byte 0x2
          .byte 0xd1
          .byte 0x2
          .byte 0xe0
          .byte 0x2
          .byte 0xe4
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xec
          .byte 0x2
          .byte 0xee
          .byte 0x2
          .byte 0xee
          .byte 0x2
          .byte 0x70
          .byte 0x3
          .byte 0x74
          .byte 0x3
          .byte 0x76
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x7a
          .byte 0x3
          .byte 0x7d
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x88
          .byte 0x3
          .byte 0x8a
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8e
          .byte 0x3
          .byte 0xa1
          .byte 0x3
          .byte 0xa3
          .byte 0x3
          .byte 0xf5
          .byte 0x3
          .byte 0xf7
          .byte 0x3
          .byte 0x81
          .byte 0x4
          .byte 0x8a
          .byte 0x4
          .byte 0x27
          .byte 0x5
          .byte 0x31
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x59
          .byte 0x5
          .byte 0x61
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0xd0
          .byte 0x5
          .byte 0xea
          .byte 0x5
          .byte 0xf0
          .byte 0x5
          .byte 0xf2
          .byte 0x5
          .byte 0x20
          .byte 0x6
          .byte 0x4a
          .byte 0x6
          .byte 0x6e
          .byte 0x6
          .byte 0x6f
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0xd3
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xe5
          .byte 0x6
          .byte 0xe6
          .byte 0x6
          .byte 0xee
          .byte 0x6
          .byte 0xef
          .byte 0x6
          .byte 0xfa
          .byte 0x6
          .byte 0xfc
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0x10
          .byte 0x7
          .byte 0x10
          .byte 0x7
          .byte 0x12
          .byte 0x7
          .byte 0x2f
          .byte 0x7
          .byte 0x4d
          .byte 0x7
          .byte 0xa5
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xca
          .byte 0x7
          .byte 0xea
          .byte 0x7
          .byte 0xf4
          .byte 0x7
          .byte 0xf5
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x15
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x40
          .byte 0x8
          .byte 0x58
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xac
          .byte 0x8
          .byte 0x4
          .byte 0x9
          .byte 0x39
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x58
          .byte 0x9
          .byte 0x61
          .byte 0x9
          .byte 0x71
          .byte 0x9
          .byte 0x77
          .byte 0x9
          .byte 0x79
          .byte 0x9
          .byte 0x7f
          .byte 0x9
          .byte 0x85
          .byte 0x9
          .byte 0x8c
          .byte 0x9
          .byte 0x8f
          .byte 0x9
          .byte 0x90
          .byte 0x9
          .byte 0x93
          .byte 0x9
          .byte 0xa8
          .byte 0x9
          .byte 0xaa
          .byte 0x9
          .byte 0xb0
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb6
          .byte 0x9
          .byte 0xb9
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xdc
          .byte 0x9
          .byte 0xdd
          .byte 0x9
          .byte 0xdf
          .byte 0x9
          .byte 0xe1
          .byte 0x9
          .byte 0xf0
          .byte 0x9
          .byte 0xf1
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0x10
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x28
          .byte 0xa
          .byte 0x2a
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x32
          .byte 0xa
          .byte 0x33
          .byte 0xa
          .byte 0x35
          .byte 0xa
          .byte 0x36
          .byte 0xa
          .byte 0x38
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x59
          .byte 0xa
          .byte 0x5c
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x72
          .byte 0xa
          .byte 0x74
          .byte 0xa
          .byte 0x85
          .byte 0xa
          .byte 0x8d
          .byte 0xa
          .byte 0x8f
          .byte 0xa
          .byte 0x91
          .byte 0xa
          .byte 0x93
          .byte 0xa
          .byte 0xa8
          .byte 0xa
          .byte 0xaa
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xb2
          .byte 0xa
          .byte 0xb3
          .byte 0xa
          .byte 0xb5
          .byte 0xa
          .byte 0xb9
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xe0
          .byte 0xa
          .byte 0xe1
          .byte 0xa
          .byte 0x5
          .byte 0xb
          .byte 0xc
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0x10
          .byte 0xb
          .byte 0x13
          .byte 0xb
          .byte 0x28
          .byte 0xb
          .byte 0x2a
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x32
          .byte 0xb
          .byte 0x33
          .byte 0xb
          .byte 0x35
          .byte 0xb
          .byte 0x39
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x5c
          .byte 0xb
          .byte 0x5d
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x61
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x85
          .byte 0xb
          .byte 0x8a
          .byte 0xb
          .byte 0x8e
          .byte 0xb
          .byte 0x90
          .byte 0xb
          .byte 0x92
          .byte 0xb
          .byte 0x95
          .byte 0xb
          .byte 0x99
          .byte 0xb
          .byte 0x9a
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9e
          .byte 0xb
          .byte 0x9f
          .byte 0xb
          .byte 0xa3
          .byte 0xb
          .byte 0xa4
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xaa
          .byte 0xb
          .byte 0xae
          .byte 0xb
          .byte 0xb9
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0x5
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xe
          .byte 0xc
          .byte 0x10
          .byte 0xc
          .byte 0x12
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x2a
          .byte 0xc
          .byte 0x33
          .byte 0xc
          .byte 0x35
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x58
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x60
          .byte 0xc
          .byte 0x61
          .byte 0xc
          .byte 0x85
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x8e
          .byte 0xc
          .byte 0x90
          .byte 0xc
          .byte 0x92
          .byte 0xc
          .byte 0xa8
          .byte 0xc
          .byte 0xaa
          .byte 0xc
          .byte 0xb3
          .byte 0xc
          .byte 0xb5
          .byte 0xc
          .byte 0xb9
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xe0
          .byte 0xc
          .byte 0xe1
          .byte 0xc
          .byte 0xf1
          .byte 0xc
          .byte 0xf2
          .byte 0xc
          .byte 0x5
          .byte 0xd
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xd
          .byte 0x10
          .byte 0xd
          .byte 0x12
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x60
          .byte 0xd
          .byte 0x61
          .byte 0xd
          .byte 0x7a
          .byte 0xd
          .byte 0x7f
          .byte 0xd
          .byte 0x85
          .byte 0xd
          .byte 0x96
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xb1
          .byte 0xd
          .byte 0xb3
          .byte 0xd
          .byte 0xbb
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xc0
          .byte 0xd
          .byte 0xc6
          .byte 0xd
          .byte 0x1
          .byte 0xe
          .byte 0x30
          .byte 0xe
          .byte 0x32
          .byte 0xe
          .byte 0x33
          .byte 0xe
          .byte 0x40
          .byte 0xe
          .byte 0x46
          .byte 0xe
          .byte 0x81
          .byte 0xe
          .byte 0x82
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x87
          .byte 0xe
          .byte 0x88
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x94
          .byte 0xe
          .byte 0x97
          .byte 0xe
          .byte 0x99
          .byte 0xe
          .byte 0x9f
          .byte 0xe
          .byte 0xa1
          .byte 0xe
          .byte 0xa3
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xaa
          .byte 0xe
          .byte 0xab
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb0
          .byte 0xe
          .byte 0xb2
          .byte 0xe
          .byte 0xb3
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xc0
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xdc
          .byte 0xe
          .byte 0xdf
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x40
          .byte 0xf
          .byte 0x47
          .byte 0xf
          .byte 0x49
          .byte 0xf
          .byte 0x6c
          .byte 0xf
          .byte 0x88
          .byte 0xf
          .byte 0x8c
          .byte 0xf
          .byte 0x0
          .byte 0x10
          .byte 0x2a
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x50
          .byte 0x10
          .byte 0x55
          .byte 0x10
          .byte 0x5a
          .byte 0x10
          .byte 0x5d
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x65
          .byte 0x10
          .byte 0x66
          .byte 0x10
          .byte 0x6e
          .byte 0x10
          .byte 0x70
          .byte 0x10
          .byte 0x75
          .byte 0x10
          .byte 0x81
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0xa0
          .byte 0x10
          .byte 0xc5
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xd0
          .byte 0x10
          .byte 0xfa
          .byte 0x10
          .byte 0xfc
          .byte 0x10
          .byte 0x48
          .byte 0x12
          .byte 0x4a
          .byte 0x12
          .byte 0x4d
          .byte 0x12
          .byte 0x50
          .byte 0x12
          .byte 0x56
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x60
          .byte 0x12
          .byte 0x88
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x8d
          .byte 0x12
          .byte 0x90
          .byte 0x12
          .byte 0xb0
          .byte 0x12
          .byte 0xb2
          .byte 0x12
          .byte 0xb5
          .byte 0x12
          .byte 0xb8
          .byte 0x12
          .byte 0xbe
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc2
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xc8
          .byte 0x12
          .byte 0xd6
          .byte 0x12
          .byte 0xd8
          .byte 0x12
          .byte 0x10
          .byte 0x13
          .byte 0x12
          .byte 0x13
          .byte 0x15
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x80
          .byte 0x13
          .byte 0x8f
          .byte 0x13
          .byte 0xa0
          .byte 0x13
          .byte 0xf4
          .byte 0x13
          .byte 0x1
          .byte 0x14
          .byte 0x6c
          .byte 0x16
          .byte 0x6f
          .byte 0x16
          .byte 0x7f
          .byte 0x16
          .byte 0x81
          .byte 0x16
          .byte 0x9a
          .byte 0x16
          .byte 0xa0
          .byte 0x16
          .byte 0xea
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0xe
          .byte 0x17
          .byte 0x11
          .byte 0x17
          .byte 0x20
          .byte 0x17
          .byte 0x31
          .byte 0x17
          .byte 0x40
          .byte 0x17
          .byte 0x51
          .byte 0x17
          .byte 0x60
          .byte 0x17
          .byte 0x6c
          .byte 0x17
          .byte 0x6e
          .byte 0x17
          .byte 0x70
          .byte 0x17
          .byte 0x80
          .byte 0x17
          .byte 0xb3
          .byte 0x17
          .byte 0xd7
          .byte 0x17
          .byte 0xd7
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0x20
          .byte 0x18
          .byte 0x77
          .byte 0x18
          .byte 0x80
          .byte 0x18
          .byte 0xa8
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xb0
          .byte 0x18
          .byte 0xf5
          .byte 0x18
          .byte 0x0
          .byte 0x19
          .byte 0x1c
          .byte 0x19
          .byte 0x50
          .byte 0x19
          .byte 0x6d
          .byte 0x19
          .byte 0x70
          .byte 0x19
          .byte 0x74
          .byte 0x19
          .byte 0x80
          .byte 0x19
          .byte 0xab
          .byte 0x19
          .byte 0xc1
          .byte 0x19
          .byte 0xc7
          .byte 0x19
          .byte 0x0
          .byte 0x1a
          .byte 0x16
          .byte 0x1a
          .byte 0x20
          .byte 0x1a
          .byte 0x54
          .byte 0x1a
          .byte 0xa7
          .byte 0x1a
          .byte 0xa7
          .byte 0x1a
          .byte 0x5
          .byte 0x1b
          .byte 0x33
          .byte 0x1b
          .byte 0x45
          .byte 0x1b
          .byte 0x4b
          .byte 0x1b
          .byte 0x83
          .byte 0x1b
          .byte 0xa0
          .byte 0x1b
          .byte 0xae
          .byte 0x1b
          .byte 0xaf
          .byte 0x1b
          .byte 0xba
          .byte 0x1b
          .byte 0xe5
          .byte 0x1b
          .byte 0x0
          .byte 0x1c
          .byte 0x23
          .byte 0x1c
          .byte 0x4d
          .byte 0x1c
          .byte 0x4f
          .byte 0x1c
          .byte 0x5a
          .byte 0x1c
          .byte 0x7d
          .byte 0x1c
          .byte 0xe9
          .byte 0x1c
          .byte 0xec
          .byte 0x1c
          .byte 0xee
          .byte 0x1c
          .byte 0xf1
          .byte 0x1c
          .byte 0xf5
          .byte 0x1c
          .byte 0xf6
          .byte 0x1c
          .byte 0x0
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0x0
          .byte 0x1e
          .byte 0x15
          .byte 0x1f
          .byte 0x18
          .byte 0x1f
          .byte 0x1d
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x45
          .byte 0x1f
          .byte 0x48
          .byte 0x1f
          .byte 0x4d
          .byte 0x1f
          .byte 0x50
          .byte 0x1f
          .byte 0x57
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x7d
          .byte 0x1f
          .byte 0x80
          .byte 0x1f
          .byte 0xb4
          .byte 0x1f
          .byte 0xb6
          .byte 0x1f
          .byte 0xbc
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xc2
          .byte 0x1f
          .byte 0xc4
          .byte 0x1f
          .byte 0xc6
          .byte 0x1f
          .byte 0xcc
          .byte 0x1f
          .byte 0xd0
          .byte 0x1f
          .byte 0xd3
          .byte 0x1f
          .byte 0xd6
          .byte 0x1f
          .byte 0xdb
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xec
          .byte 0x1f
          .byte 0xf2
          .byte 0x1f
          .byte 0xf4
          .byte 0x1f
          .byte 0xf6
          .byte 0x1f
          .byte 0xfc
          .byte 0x1f
          .byte 0x71
          .byte 0x20
          .byte 0x71
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x90
          .byte 0x20
          .byte 0x9c
          .byte 0x20
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0xa
          .byte 0x21
          .byte 0x13
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x19
          .byte 0x21
          .byte 0x1d
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x2a
          .byte 0x21
          .byte 0x2d
          .byte 0x21
          .byte 0x2f
          .byte 0x21
          .byte 0x39
          .byte 0x21
          .byte 0x3c
          .byte 0x21
          .byte 0x3f
          .byte 0x21
          .byte 0x45
          .byte 0x21
          .byte 0x49
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x83
          .byte 0x21
          .byte 0x84
          .byte 0x21
          .byte 0x0
          .byte 0x2c
          .byte 0x2e
          .byte 0x2c
          .byte 0x30
          .byte 0x2c
          .byte 0x5e
          .byte 0x2c
          .byte 0x60
          .byte 0x2c
          .byte 0xe4
          .byte 0x2c
          .byte 0xeb
          .byte 0x2c
          .byte 0xee
          .byte 0x2c
          .byte 0xf2
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x25
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x30
          .byte 0x2d
          .byte 0x67
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x80
          .byte 0x2d
          .byte 0x96
          .byte 0x2d
          .byte 0xa0
          .byte 0x2d
          .byte 0xa6
          .byte 0x2d
          .byte 0xa8
          .byte 0x2d
          .byte 0xae
          .byte 0x2d
          .byte 0xb0
          .byte 0x2d
          .byte 0xb6
          .byte 0x2d
          .byte 0xb8
          .byte 0x2d
          .byte 0xbe
          .byte 0x2d
          .byte 0xc0
          .byte 0x2d
          .byte 0xc6
          .byte 0x2d
          .byte 0xc8
          .byte 0x2d
          .byte 0xce
          .byte 0x2d
          .byte 0xd0
          .byte 0x2d
          .byte 0xd6
          .byte 0x2d
          .byte 0xd8
          .byte 0x2d
          .byte 0xde
          .byte 0x2d
          .byte 0x2f
          .byte 0x2e
          .byte 0x2f
          .byte 0x2e
          .byte 0x5
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x31
          .byte 0x30
          .byte 0x35
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x41
          .byte 0x30
          .byte 0x96
          .byte 0x30
          .byte 0x9d
          .byte 0x30
          .byte 0x9f
          .byte 0x30
          .byte 0xa1
          .byte 0x30
          .byte 0xfa
          .byte 0x30
          .byte 0xfc
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0x5
          .byte 0x31
          .byte 0x2d
          .byte 0x31
          .byte 0x31
          .byte 0x31
          .byte 0x8e
          .byte 0x31
          .byte 0xa0
          .byte 0x31
          .byte 0xba
          .byte 0x31
          .byte 0xf0
          .byte 0x31
          .byte 0xff
          .byte 0x31
          .byte 0x0
          .byte 0x34
          .byte 0xb5
          .byte 0x4d
          .byte 0x0
          .byte 0x4e
          .byte 0xcc
          .byte 0x9f
          .byte 0x0
          .byte 0xa0
          .byte 0x8c
          .byte 0xa4
          .byte 0xd0
          .byte 0xa4
          .byte 0xfd
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0xc
          .byte 0xa6
          .byte 0x10
          .byte 0xa6
          .byte 0x1f
          .byte 0xa6
          .byte 0x2a
          .byte 0xa6
          .byte 0x2b
          .byte 0xa6
          .byte 0x40
          .byte 0xa6
          .byte 0x6e
          .byte 0xa6
          .byte 0x7f
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0xa0
          .byte 0xa6
          .byte 0xe5
          .byte 0xa6
          .byte 0x17
          .byte 0xa7
          .byte 0x1f
          .byte 0xa7
          .byte 0x22
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0xf8
          .byte 0xa7
          .byte 0x1
          .byte 0xa8
          .byte 0x3
          .byte 0xa8
          .byte 0x5
          .byte 0xa8
          .byte 0x7
          .byte 0xa8
          .byte 0xa
          .byte 0xa8
          .byte 0xc
          .byte 0xa8
          .byte 0x22
          .byte 0xa8
          .byte 0x40
          .byte 0xa8
          .byte 0x73
          .byte 0xa8
          .byte 0x82
          .byte 0xa8
          .byte 0xb3
          .byte 0xa8
          .byte 0xf2
          .byte 0xa8
          .byte 0xf7
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xa
          .byte 0xa9
          .byte 0x25
          .byte 0xa9
          .byte 0x30
          .byte 0xa9
          .byte 0x46
          .byte 0xa9
          .byte 0x60
          .byte 0xa9
          .byte 0x7c
          .byte 0xa9
          .byte 0x84
          .byte 0xa9
          .byte 0xb2
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0x0
          .byte 0xaa
          .byte 0x28
          .byte 0xaa
          .byte 0x40
          .byte 0xaa
          .byte 0x42
          .byte 0xaa
          .byte 0x44
          .byte 0xaa
          .byte 0x4b
          .byte 0xaa
          .byte 0x60
          .byte 0xaa
          .byte 0x76
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x80
          .byte 0xaa
          .byte 0xaf
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb5
          .byte 0xaa
          .byte 0xb6
          .byte 0xaa
          .byte 0xb9
          .byte 0xaa
          .byte 0xbd
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xdb
          .byte 0xaa
          .byte 0xdd
          .byte 0xaa
          .byte 0xe0
          .byte 0xaa
          .byte 0xea
          .byte 0xaa
          .byte 0xf2
          .byte 0xaa
          .byte 0xf4
          .byte 0xaa
          .byte 0x1
          .byte 0xab
          .byte 0x6
          .byte 0xab
          .byte 0x9
          .byte 0xab
          .byte 0xe
          .byte 0xab
          .byte 0x11
          .byte 0xab
          .byte 0x16
          .byte 0xab
          .byte 0x20
          .byte 0xab
          .byte 0x26
          .byte 0xab
          .byte 0x28
          .byte 0xab
          .byte 0x2e
          .byte 0xab
          .byte 0xc0
          .byte 0xab
          .byte 0xe2
          .byte 0xab
          .byte 0x0
          .byte 0xac
          .byte 0xa3
          .byte 0xd7
          .byte 0xb0
          .byte 0xd7
          .byte 0xc6
          .byte 0xd7
          .byte 0xcb
          .byte 0xd7
          .byte 0xfb
          .byte 0xd7
          .byte 0x0
          .byte 0xf9
          .byte 0x6d
          .byte 0xfa
          .byte 0x70
          .byte 0xfa
          .byte 0xd9
          .byte 0xfa
          .byte 0x0
          .byte 0xfb
          .byte 0x6
          .byte 0xfb
          .byte 0x13
          .byte 0xfb
          .byte 0x17
          .byte 0xfb
          .byte 0x1d
          .byte 0xfb
          .byte 0x1d
          .byte 0xfb
          .byte 0x1f
          .byte 0xfb
          .byte 0x28
          .byte 0xfb
          .byte 0x2a
          .byte 0xfb
          .byte 0x36
          .byte 0xfb
          .byte 0x38
          .byte 0xfb
          .byte 0x3c
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x40
          .byte 0xfb
          .byte 0x41
          .byte 0xfb
          .byte 0x43
          .byte 0xfb
          .byte 0x44
          .byte 0xfb
          .byte 0x46
          .byte 0xfb
          .byte 0xb1
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x3d
          .byte 0xfd
          .byte 0x50
          .byte 0xfd
          .byte 0x8f
          .byte 0xfd
          .byte 0x92
          .byte 0xfd
          .byte 0xc7
          .byte 0xfd
          .byte 0xf0
          .byte 0xfd
          .byte 0xfb
          .byte 0xfd
          .byte 0x70
          .byte 0xfe
          .byte 0x74
          .byte 0xfe
          .byte 0x76
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x21
          .byte 0xff
          .byte 0x3a
          .byte 0xff
          .byte 0x41
          .byte 0xff
          .byte 0x5a
          .byte 0xff
          .byte 0x66
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xca
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43abc0:
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x92
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x65
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x69
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6d
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0xe
          .byte 0x0
.L_43ac80:
          .byte 0x0
          .byte 0x3
          .byte 0x6f
          .byte 0x3
          .byte 0x83
          .byte 0x4
          .byte 0x89
          .byte 0x4
          .byte 0x91
          .byte 0x5
          .byte 0xbd
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xc1
          .byte 0x5
          .byte 0xc2
          .byte 0x5
          .byte 0xc4
          .byte 0x5
          .byte 0xc5
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0x10
          .byte 0x6
          .byte 0x1a
          .byte 0x6
          .byte 0x4b
          .byte 0x6
          .byte 0x5f
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0xd6
          .byte 0x6
          .byte 0xdc
          .byte 0x6
          .byte 0xdf
          .byte 0x6
          .byte 0xe4
          .byte 0x6
          .byte 0xe7
          .byte 0x6
          .byte 0xe8
          .byte 0x6
          .byte 0xea
          .byte 0x6
          .byte 0xed
          .byte 0x6
          .byte 0x11
          .byte 0x7
          .byte 0x11
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x4a
          .byte 0x7
          .byte 0xa6
          .byte 0x7
          .byte 0xb0
          .byte 0x7
          .byte 0xeb
          .byte 0x7
          .byte 0xf3
          .byte 0x7
          .byte 0x16
          .byte 0x8
          .byte 0x19
          .byte 0x8
          .byte 0x1b
          .byte 0x8
          .byte 0x23
          .byte 0x8
          .byte 0x25
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x29
          .byte 0x8
          .byte 0x2d
          .byte 0x8
          .byte 0x59
          .byte 0x8
          .byte 0x5b
          .byte 0x8
          .byte 0xe4
          .byte 0x8
          .byte 0xfe
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x9
          .byte 0x3a
          .byte 0x9
          .byte 0x3c
          .byte 0x9
          .byte 0x3e
          .byte 0x9
          .byte 0x4f
          .byte 0x9
          .byte 0x51
          .byte 0x9
          .byte 0x57
          .byte 0x9
          .byte 0x62
          .byte 0x9
          .byte 0x63
          .byte 0x9
          .byte 0x81
          .byte 0x9
          .byte 0x83
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xbe
          .byte 0x9
          .byte 0xc4
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xc8
          .byte 0x9
          .byte 0xcb
          .byte 0x9
          .byte 0xcd
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xe2
          .byte 0x9
          .byte 0xe3
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3e
          .byte 0xa
          .byte 0x42
          .byte 0xa
          .byte 0x47
          .byte 0xa
          .byte 0x48
          .byte 0xa
          .byte 0x4b
          .byte 0xa
          .byte 0x4d
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x70
          .byte 0xa
          .byte 0x71
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x81
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xbe
          .byte 0xa
          .byte 0xc5
          .byte 0xa
          .byte 0xc7
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xcb
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xe2
          .byte 0xa
          .byte 0xe3
          .byte 0xa
          .byte 0x1
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x44
          .byte 0xb
          .byte 0x47
          .byte 0xb
          .byte 0x48
          .byte 0xb
          .byte 0x4b
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0x62
          .byte 0xb
          .byte 0x63
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0xbe
          .byte 0xb
          .byte 0xc2
          .byte 0xb
          .byte 0xc6
          .byte 0xb
          .byte 0xc8
          .byte 0xb
          .byte 0xca
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0x1
          .byte 0xc
          .byte 0x3
          .byte 0xc
          .byte 0x3e
          .byte 0xc
          .byte 0x44
          .byte 0xc
          .byte 0x46
          .byte 0xc
          .byte 0x48
          .byte 0xc
          .byte 0x4a
          .byte 0xc
          .byte 0x4d
          .byte 0xc
          .byte 0x55
          .byte 0xc
          .byte 0x56
          .byte 0xc
          .byte 0x62
          .byte 0xc
          .byte 0x63
          .byte 0xc
          .byte 0x82
          .byte 0xc
          .byte 0x83
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbe
          .byte 0xc
          .byte 0xc4
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xc8
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xcd
          .byte 0xc
          .byte 0xd5
          .byte 0xc
          .byte 0xd6
          .byte 0xc
          .byte 0xe2
          .byte 0xc
          .byte 0xe3
          .byte 0xc
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0xd
          .byte 0x3e
          .byte 0xd
          .byte 0x44
          .byte 0xd
          .byte 0x46
          .byte 0xd
          .byte 0x48
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x4d
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x62
          .byte 0xd
          .byte 0x63
          .byte 0xd
          .byte 0x82
          .byte 0xd
          .byte 0x83
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xcf
          .byte 0xd
          .byte 0xd4
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd8
          .byte 0xd
          .byte 0xdf
          .byte 0xd
          .byte 0xf2
          .byte 0xd
          .byte 0xf3
          .byte 0xd
          .byte 0x31
          .byte 0xe
          .byte 0x31
          .byte 0xe
          .byte 0x34
          .byte 0xe
          .byte 0x3a
          .byte 0xe
          .byte 0x47
          .byte 0xe
          .byte 0x4e
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb4
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xbb
          .byte 0xe
          .byte 0xbc
          .byte 0xe
          .byte 0xc8
          .byte 0xe
          .byte 0xcd
          .byte 0xe
          .byte 0x18
          .byte 0xf
          .byte 0x19
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x3e
          .byte 0xf
          .byte 0x3f
          .byte 0xf
          .byte 0x71
          .byte 0xf
          .byte 0x84
          .byte 0xf
          .byte 0x86
          .byte 0xf
          .byte 0x87
          .byte 0xf
          .byte 0x8d
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0x99
          .byte 0xf
          .byte 0xbc
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0x2b
          .byte 0x10
          .byte 0x3e
          .byte 0x10
          .byte 0x56
          .byte 0x10
          .byte 0x59
          .byte 0x10
          .byte 0x5e
          .byte 0x10
          .byte 0x60
          .byte 0x10
          .byte 0x62
          .byte 0x10
          .byte 0x64
          .byte 0x10
          .byte 0x67
          .byte 0x10
          .byte 0x6d
          .byte 0x10
          .byte 0x71
          .byte 0x10
          .byte 0x74
          .byte 0x10
          .byte 0x82
          .byte 0x10
          .byte 0x8d
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x9a
          .byte 0x10
          .byte 0x9d
          .byte 0x10
          .byte 0x5d
          .byte 0x13
          .byte 0x5f
          .byte 0x13
          .byte 0x12
          .byte 0x17
          .byte 0x14
          .byte 0x17
          .byte 0x32
          .byte 0x17
          .byte 0x34
          .byte 0x17
          .byte 0x52
          .byte 0x17
          .byte 0x53
          .byte 0x17
          .byte 0x72
          .byte 0x17
          .byte 0x73
          .byte 0x17
          .byte 0xb4
          .byte 0x17
          .byte 0xd3
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xb
          .byte 0x18
          .byte 0xd
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0x20
          .byte 0x19
          .byte 0x2b
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x3b
          .byte 0x19
          .byte 0xb0
          .byte 0x19
          .byte 0xc0
          .byte 0x19
          .byte 0xc8
          .byte 0x19
          .byte 0xc9
          .byte 0x19
          .byte 0x17
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x55
          .byte 0x1a
          .byte 0x5e
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x7c
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x0
          .byte 0x1b
          .byte 0x4
          .byte 0x1b
          .byte 0x34
          .byte 0x1b
          .byte 0x44
          .byte 0x1b
          .byte 0x6b
          .byte 0x1b
          .byte 0x73
          .byte 0x1b
          .byte 0x80
          .byte 0x1b
          .byte 0x82
          .byte 0x1b
          .byte 0xa1
          .byte 0x1b
          .byte 0xad
          .byte 0x1b
          .byte 0xe6
          .byte 0x1b
          .byte 0xf3
          .byte 0x1b
          .byte 0x24
          .byte 0x1c
          .byte 0x37
          .byte 0x1c
          .byte 0xd0
          .byte 0x1c
          .byte 0xd2
          .byte 0x1c
          .byte 0xd4
          .byte 0x1c
          .byte 0xe8
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xf2
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xc0
          .byte 0x1d
          .byte 0xe6
          .byte 0x1d
          .byte 0xfc
          .byte 0x1d
          .byte 0xff
          .byte 0x1d
          .byte 0xd0
          .byte 0x20
          .byte 0xf0
          .byte 0x20
          .byte 0xef
          .byte 0x2c
          .byte 0xf1
          .byte 0x2c
          .byte 0x7f
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0xe0
          .byte 0x2d
          .byte 0xff
          .byte 0x2d
          .byte 0x2a
          .byte 0x30
          .byte 0x2f
          .byte 0x30
          .byte 0x99
          .byte 0x30
          .byte 0x9a
          .byte 0x30
          .byte 0x6f
          .byte 0xa6
          .byte 0x72
          .byte 0xa6
          .byte 0x74
          .byte 0xa6
          .byte 0x7d
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0xf0
          .byte 0xa6
          .byte 0xf1
          .byte 0xa6
          .byte 0x2
          .byte 0xa8
          .byte 0x2
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0x23
          .byte 0xa8
          .byte 0x27
          .byte 0xa8
          .byte 0x80
          .byte 0xa8
          .byte 0x81
          .byte 0xa8
          .byte 0xb4
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xe0
          .byte 0xa8
          .byte 0xf1
          .byte 0xa8
          .byte 0x26
          .byte 0xa9
          .byte 0x2d
          .byte 0xa9
          .byte 0x47
          .byte 0xa9
          .byte 0x53
          .byte 0xa9
          .byte 0x80
          .byte 0xa9
          .byte 0x83
          .byte 0xa9
          .byte 0xb3
          .byte 0xa9
          .byte 0xc0
          .byte 0xa9
          .byte 0x29
          .byte 0xaa
          .byte 0x36
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x4c
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb2
          .byte 0xaa
          .byte 0xb4
          .byte 0xaa
          .byte 0xb7
          .byte 0xaa
          .byte 0xb8
          .byte 0xaa
          .byte 0xbe
          .byte 0xaa
          .byte 0xbf
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xeb
          .byte 0xaa
          .byte 0xef
          .byte 0xaa
          .byte 0xf5
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xe3
          .byte 0xab
          .byte 0xea
          .byte 0xab
          .byte 0xec
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfb
          .byte 0x0
          .byte 0xfe
          .byte 0xf
          .byte 0xfe
          .byte 0x20
          .byte 0xfe
          .byte 0x26
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43af60:
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x6
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0xf
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x81
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb3
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2b
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2d
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x81
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb5
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x92
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x69
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0xad
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b040:
          .byte 0x0
          .byte 0x3
          .byte 0x6f
          .byte 0x3
          .byte 0x83
          .byte 0x4
          .byte 0x87
          .byte 0x4
          .byte 0x91
          .byte 0x5
          .byte 0xbd
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xbf
          .byte 0x5
          .byte 0xc1
          .byte 0x5
          .byte 0xc2
          .byte 0x5
          .byte 0xc4
          .byte 0x5
          .byte 0xc5
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0xc7
          .byte 0x5
          .byte 0x10
          .byte 0x6
          .byte 0x1a
          .byte 0x6
          .byte 0x4b
          .byte 0x6
          .byte 0x5f
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0x70
          .byte 0x6
          .byte 0xd6
          .byte 0x6
          .byte 0xdc
          .byte 0x6
          .byte 0xdf
          .byte 0x6
          .byte 0xe4
          .byte 0x6
          .byte 0xe7
          .byte 0x6
          .byte 0xe8
          .byte 0x6
          .byte 0xea
          .byte 0x6
          .byte 0xed
          .byte 0x6
          .byte 0x11
          .byte 0x7
          .byte 0x11
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x4a
          .byte 0x7
          .byte 0xa6
          .byte 0x7
          .byte 0xb0
          .byte 0x7
          .byte 0xeb
          .byte 0x7
          .byte 0xf3
          .byte 0x7
          .byte 0x16
          .byte 0x8
          .byte 0x19
          .byte 0x8
          .byte 0x1b
          .byte 0x8
          .byte 0x23
          .byte 0x8
          .byte 0x25
          .byte 0x8
          .byte 0x27
          .byte 0x8
          .byte 0x29
          .byte 0x8
          .byte 0x2d
          .byte 0x8
          .byte 0x59
          .byte 0x8
          .byte 0x5b
          .byte 0x8
          .byte 0xe4
          .byte 0x8
          .byte 0xfe
          .byte 0x8
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x9
          .byte 0x3a
          .byte 0x9
          .byte 0x3a
          .byte 0x9
          .byte 0x3c
          .byte 0x9
          .byte 0x3c
          .byte 0x9
          .byte 0x41
          .byte 0x9
          .byte 0x48
          .byte 0x9
          .byte 0x4d
          .byte 0x9
          .byte 0x4d
          .byte 0x9
          .byte 0x51
          .byte 0x9
          .byte 0x57
          .byte 0x9
          .byte 0x62
          .byte 0x9
          .byte 0x63
          .byte 0x9
          .byte 0x81
          .byte 0x9
          .byte 0x81
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xbc
          .byte 0x9
          .byte 0xc1
          .byte 0x9
          .byte 0xc4
          .byte 0x9
          .byte 0xcd
          .byte 0x9
          .byte 0xcd
          .byte 0x9
          .byte 0xe2
          .byte 0x9
          .byte 0xe3
          .byte 0x9
          .byte 0x1
          .byte 0xa
          .byte 0x2
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x3c
          .byte 0xa
          .byte 0x41
          .byte 0xa
          .byte 0x42
          .byte 0xa
          .byte 0x47
          .byte 0xa
          .byte 0x48
          .byte 0xa
          .byte 0x4b
          .byte 0xa
          .byte 0x4d
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x51
          .byte 0xa
          .byte 0x70
          .byte 0xa
          .byte 0x71
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x75
          .byte 0xa
          .byte 0x81
          .byte 0xa
          .byte 0x82
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xbc
          .byte 0xa
          .byte 0xc1
          .byte 0xa
          .byte 0xc5
          .byte 0xa
          .byte 0xc7
          .byte 0xa
          .byte 0xc8
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xcd
          .byte 0xa
          .byte 0xe2
          .byte 0xa
          .byte 0xe3
          .byte 0xa
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3c
          .byte 0xb
          .byte 0x3f
          .byte 0xb
          .byte 0x3f
          .byte 0xb
          .byte 0x41
          .byte 0xb
          .byte 0x44
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x4d
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x56
          .byte 0xb
          .byte 0x62
          .byte 0xb
          .byte 0x63
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0x82
          .byte 0xb
          .byte 0xc0
          .byte 0xb
          .byte 0xc0
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0xcd
          .byte 0xb
          .byte 0x3e
          .byte 0xc
          .byte 0x40
          .byte 0xc
          .byte 0x46
          .byte 0xc
          .byte 0x48
          .byte 0xc
          .byte 0x4a
          .byte 0xc
          .byte 0x4d
          .byte 0xc
          .byte 0x55
          .byte 0xc
          .byte 0x56
          .byte 0xc
          .byte 0x62
          .byte 0xc
          .byte 0x63
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbc
          .byte 0xc
          .byte 0xbf
          .byte 0xc
          .byte 0xbf
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xc6
          .byte 0xc
          .byte 0xcc
          .byte 0xc
          .byte 0xcd
          .byte 0xc
          .byte 0xe2
          .byte 0xc
          .byte 0xe3
          .byte 0xc
          .byte 0x41
          .byte 0xd
          .byte 0x44
          .byte 0xd
          .byte 0x4d
          .byte 0xd
          .byte 0x4d
          .byte 0xd
          .byte 0x62
          .byte 0xd
          .byte 0x63
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xca
          .byte 0xd
          .byte 0xd2
          .byte 0xd
          .byte 0xd4
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0xd6
          .byte 0xd
          .byte 0x31
          .byte 0xe
          .byte 0x31
          .byte 0xe
          .byte 0x34
          .byte 0xe
          .byte 0x3a
          .byte 0xe
          .byte 0x47
          .byte 0xe
          .byte 0x4e
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb1
          .byte 0xe
          .byte 0xb4
          .byte 0xe
          .byte 0xb9
          .byte 0xe
          .byte 0xbb
          .byte 0xe
          .byte 0xbc
          .byte 0xe
          .byte 0xc8
          .byte 0xe
          .byte 0xcd
          .byte 0xe
          .byte 0x18
          .byte 0xf
          .byte 0x19
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x35
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x37
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x39
          .byte 0xf
          .byte 0x71
          .byte 0xf
          .byte 0x7e
          .byte 0xf
          .byte 0x80
          .byte 0xf
          .byte 0x84
          .byte 0xf
          .byte 0x86
          .byte 0xf
          .byte 0x87
          .byte 0xf
          .byte 0x8d
          .byte 0xf
          .byte 0x97
          .byte 0xf
          .byte 0x99
          .byte 0xf
          .byte 0xbc
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0xc6
          .byte 0xf
          .byte 0x2d
          .byte 0x10
          .byte 0x30
          .byte 0x10
          .byte 0x32
          .byte 0x10
          .byte 0x37
          .byte 0x10
          .byte 0x39
          .byte 0x10
          .byte 0x3a
          .byte 0x10
          .byte 0x3d
          .byte 0x10
          .byte 0x3e
          .byte 0x10
          .byte 0x58
          .byte 0x10
          .byte 0x59
          .byte 0x10
          .byte 0x5e
          .byte 0x10
          .byte 0x60
          .byte 0x10
          .byte 0x71
          .byte 0x10
          .byte 0x74
          .byte 0x10
          .byte 0x82
          .byte 0x10
          .byte 0x82
          .byte 0x10
          .byte 0x85
          .byte 0x10
          .byte 0x86
          .byte 0x10
          .byte 0x8d
          .byte 0x10
          .byte 0x8d
          .byte 0x10
          .byte 0x9d
          .byte 0x10
          .byte 0x9d
          .byte 0x10
          .byte 0x5d
          .byte 0x13
          .byte 0x5f
          .byte 0x13
          .byte 0x12
          .byte 0x17
          .byte 0x14
          .byte 0x17
          .byte 0x32
          .byte 0x17
          .byte 0x34
          .byte 0x17
          .byte 0x52
          .byte 0x17
          .byte 0x53
          .byte 0x17
          .byte 0x72
          .byte 0x17
          .byte 0x73
          .byte 0x17
          .byte 0xb4
          .byte 0x17
          .byte 0xb5
          .byte 0x17
          .byte 0xb7
          .byte 0x17
          .byte 0xbd
          .byte 0x17
          .byte 0xc6
          .byte 0x17
          .byte 0xc6
          .byte 0x17
          .byte 0xc9
          .byte 0x17
          .byte 0xd3
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xdd
          .byte 0x17
          .byte 0xb
          .byte 0x18
          .byte 0xd
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0xa9
          .byte 0x18
          .byte 0x20
          .byte 0x19
          .byte 0x22
          .byte 0x19
          .byte 0x27
          .byte 0x19
          .byte 0x28
          .byte 0x19
          .byte 0x32
          .byte 0x19
          .byte 0x32
          .byte 0x19
          .byte 0x39
          .byte 0x19
          .byte 0x3b
          .byte 0x19
          .byte 0x17
          .byte 0x1a
          .byte 0x18
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x1b
          .byte 0x1a
          .byte 0x56
          .byte 0x1a
          .byte 0x56
          .byte 0x1a
          .byte 0x58
          .byte 0x1a
          .byte 0x5e
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x60
          .byte 0x1a
          .byte 0x62
          .byte 0x1a
          .byte 0x62
          .byte 0x1a
          .byte 0x65
          .byte 0x1a
          .byte 0x6c
          .byte 0x1a
          .byte 0x73
          .byte 0x1a
          .byte 0x7c
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x7f
          .byte 0x1a
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x1b
          .byte 0x34
          .byte 0x1b
          .byte 0x34
          .byte 0x1b
          .byte 0x36
          .byte 0x1b
          .byte 0x3a
          .byte 0x1b
          .byte 0x3c
          .byte 0x1b
          .byte 0x3c
          .byte 0x1b
          .byte 0x42
          .byte 0x1b
          .byte 0x42
          .byte 0x1b
          .byte 0x6b
          .byte 0x1b
          .byte 0x73
          .byte 0x1b
          .byte 0x80
          .byte 0x1b
          .byte 0x81
          .byte 0x1b
          .byte 0xa2
          .byte 0x1b
          .byte 0xa5
          .byte 0x1b
          .byte 0xa8
          .byte 0x1b
          .byte 0xa9
          .byte 0x1b
          .byte 0xab
          .byte 0x1b
          .byte 0xab
          .byte 0x1b
          .byte 0xe6
          .byte 0x1b
          .byte 0xe6
          .byte 0x1b
          .byte 0xe8
          .byte 0x1b
          .byte 0xe9
          .byte 0x1b
          .byte 0xed
          .byte 0x1b
          .byte 0xed
          .byte 0x1b
          .byte 0xef
          .byte 0x1b
          .byte 0xf1
          .byte 0x1b
          .byte 0x2c
          .byte 0x1c
          .byte 0x33
          .byte 0x1c
          .byte 0x36
          .byte 0x1c
          .byte 0x37
          .byte 0x1c
          .byte 0xd0
          .byte 0x1c
          .byte 0xd2
          .byte 0x1c
          .byte 0xd4
          .byte 0x1c
          .byte 0xe0
          .byte 0x1c
          .byte 0xe2
          .byte 0x1c
          .byte 0xe8
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xed
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xf4
          .byte 0x1c
          .byte 0xc0
          .byte 0x1d
          .byte 0xe6
          .byte 0x1d
          .byte 0xfc
          .byte 0x1d
          .byte 0xff
          .byte 0x1d
          .byte 0xd0
          .byte 0x20
          .byte 0xdc
          .byte 0x20
          .byte 0xe1
          .byte 0x20
          .byte 0xe1
          .byte 0x20
          .byte 0xe5
          .byte 0x20
          .byte 0xf0
          .byte 0x20
          .byte 0xef
          .byte 0x2c
          .byte 0xf1
          .byte 0x2c
          .byte 0x7f
          .byte 0x2d
          .byte 0x7f
          .byte 0x2d
          .byte 0xe0
          .byte 0x2d
          .byte 0xff
          .byte 0x2d
          .byte 0x2a
          .byte 0x30
          .byte 0x2d
          .byte 0x30
          .byte 0x99
          .byte 0x30
          .byte 0x9a
          .byte 0x30
          .byte 0x6f
          .byte 0xa6
          .byte 0x6f
          .byte 0xa6
          .byte 0x74
          .byte 0xa6
          .byte 0x7d
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0x9f
          .byte 0xa6
          .byte 0xf0
          .byte 0xa6
          .byte 0xf1
          .byte 0xa6
          .byte 0x2
          .byte 0xa8
          .byte 0x2
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0x6
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xa8
          .byte 0x25
          .byte 0xa8
          .byte 0x26
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xc4
          .byte 0xa8
          .byte 0xe0
          .byte 0xa8
          .byte 0xf1
          .byte 0xa8
          .byte 0x26
          .byte 0xa9
          .byte 0x2d
          .byte 0xa9
          .byte 0x47
          .byte 0xa9
          .byte 0x51
          .byte 0xa9
          .byte 0x80
          .byte 0xa9
          .byte 0x82
          .byte 0xa9
          .byte 0xb3
          .byte 0xa9
          .byte 0xb3
          .byte 0xa9
          .byte 0xb6
          .byte 0xa9
          .byte 0xb9
          .byte 0xa9
          .byte 0xbc
          .byte 0xa9
          .byte 0xbc
          .byte 0xa9
          .byte 0x29
          .byte 0xaa
          .byte 0x2e
          .byte 0xaa
          .byte 0x31
          .byte 0xaa
          .byte 0x32
          .byte 0xaa
          .byte 0x35
          .byte 0xaa
          .byte 0x36
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x43
          .byte 0xaa
          .byte 0x4c
          .byte 0xaa
          .byte 0x4c
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb0
          .byte 0xaa
          .byte 0xb2
          .byte 0xaa
          .byte 0xb4
          .byte 0xaa
          .byte 0xb7
          .byte 0xaa
          .byte 0xb8
          .byte 0xaa
          .byte 0xbe
          .byte 0xaa
          .byte 0xbf
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xc1
          .byte 0xaa
          .byte 0xec
          .byte 0xaa
          .byte 0xed
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xf6
          .byte 0xaa
          .byte 0xe5
          .byte 0xab
          .byte 0xe5
          .byte 0xab
          .byte 0xe8
          .byte 0xab
          .byte 0xe8
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0xed
          .byte 0xab
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfb
          .byte 0x0
          .byte 0xfe
          .byte 0xf
          .byte 0xfe
          .byte 0x20
          .byte 0xfe
          .byte 0x26
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b360:
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb2
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xb8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x2c
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x2c
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb5
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xaf
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x65
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x66
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x6d
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b3e0:
          .byte 0x3
          .byte 0x9
          .byte 0x3
          .byte 0x9
          .byte 0x3b
          .byte 0x9
          .byte 0x3b
          .byte 0x9
          .byte 0x3e
          .byte 0x9
          .byte 0x40
          .byte 0x9
          .byte 0x49
          .byte 0x9
          .byte 0x4c
          .byte 0x9
          .byte 0x4e
          .byte 0x9
          .byte 0x4f
          .byte 0x9
          .byte 0x82
          .byte 0x9
          .byte 0x83
          .byte 0x9
          .byte 0xbe
          .byte 0x9
          .byte 0xc0
          .byte 0x9
          .byte 0xc7
          .byte 0x9
          .byte 0xc8
          .byte 0x9
          .byte 0xcb
          .byte 0x9
          .byte 0xcc
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0xd7
          .byte 0x9
          .byte 0x3
          .byte 0xa
          .byte 0x3
          .byte 0xa
          .byte 0x3e
          .byte 0xa
          .byte 0x40
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0x83
          .byte 0xa
          .byte 0xbe
          .byte 0xa
          .byte 0xc0
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xc9
          .byte 0xa
          .byte 0xcb
          .byte 0xa
          .byte 0xcc
          .byte 0xa
          .byte 0x2
          .byte 0xb
          .byte 0x3
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x3e
          .byte 0xb
          .byte 0x40
          .byte 0xb
          .byte 0x40
          .byte 0xb
          .byte 0x47
          .byte 0xb
          .byte 0x48
          .byte 0xb
          .byte 0x4b
          .byte 0xb
          .byte 0x4c
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0x57
          .byte 0xb
          .byte 0xbe
          .byte 0xb
          .byte 0xbf
          .byte 0xb
          .byte 0xc1
          .byte 0xb
          .byte 0xc2
          .byte 0xb
          .byte 0xc6
          .byte 0xb
          .byte 0xc8
          .byte 0xb
          .byte 0xca
          .byte 0xb
          .byte 0xcc
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0xd7
          .byte 0xb
          .byte 0x1
          .byte 0xc
          .byte 0x3
          .byte 0xc
          .byte 0x41
          .byte 0xc
          .byte 0x44
          .byte 0xc
          .byte 0x82
          .byte 0xc
          .byte 0x83
          .byte 0xc
          .byte 0xbe
          .byte 0xc
          .byte 0xbe
          .byte 0xc
          .byte 0xc0
          .byte 0xc
          .byte 0xc4
          .byte 0xc
          .byte 0xc7
          .byte 0xc
          .byte 0xc8
          .byte 0xc
          .byte 0xca
          .byte 0xc
          .byte 0xcb
          .byte 0xc
          .byte 0xd5
          .byte 0xc
          .byte 0xd6
          .byte 0xc
          .byte 0x2
          .byte 0xd
          .byte 0x3
          .byte 0xd
          .byte 0x3e
          .byte 0xd
          .byte 0x40
          .byte 0xd
          .byte 0x46
          .byte 0xd
          .byte 0x48
          .byte 0xd
          .byte 0x4a
          .byte 0xd
          .byte 0x4c
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x57
          .byte 0xd
          .byte 0x82
          .byte 0xd
          .byte 0x83
          .byte 0xd
          .byte 0xcf
          .byte 0xd
          .byte 0xd1
          .byte 0xd
          .byte 0xd8
          .byte 0xd
          .byte 0xdf
          .byte 0xd
          .byte 0xf2
          .byte 0xd
          .byte 0xf3
          .byte 0xd
          .byte 0x3e
          .byte 0xf
          .byte 0x3f
          .byte 0xf
          .byte 0x7f
          .byte 0xf
          .byte 0x7f
          .byte 0xf
          .byte 0x2b
          .byte 0x10
          .byte 0x2c
          .byte 0x10
          .byte 0x31
          .byte 0x10
          .byte 0x31
          .byte 0x10
          .byte 0x38
          .byte 0x10
          .byte 0x38
          .byte 0x10
          .byte 0x3b
          .byte 0x10
          .byte 0x3c
          .byte 0x10
          .byte 0x56
          .byte 0x10
          .byte 0x57
          .byte 0x10
          .byte 0x62
          .byte 0x10
          .byte 0x64
          .byte 0x10
          .byte 0x67
          .byte 0x10
          .byte 0x6d
          .byte 0x10
          .byte 0x83
          .byte 0x10
          .byte 0x84
          .byte 0x10
          .byte 0x87
          .byte 0x10
          .byte 0x8c
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x8f
          .byte 0x10
          .byte 0x9a
          .byte 0x10
          .byte 0x9c
          .byte 0x10
          .byte 0xb6
          .byte 0x17
          .byte 0xb6
          .byte 0x17
          .byte 0xbe
          .byte 0x17
          .byte 0xc5
          .byte 0x17
          .byte 0xc7
          .byte 0x17
          .byte 0xc8
          .byte 0x17
          .byte 0x23
          .byte 0x19
          .byte 0x26
          .byte 0x19
          .byte 0x29
          .byte 0x19
          .byte 0x2b
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x31
          .byte 0x19
          .byte 0x33
          .byte 0x19
          .byte 0x38
          .byte 0x19
          .byte 0xb0
          .byte 0x19
          .byte 0xc0
          .byte 0x19
          .byte 0xc8
          .byte 0x19
          .byte 0xc9
          .byte 0x19
          .byte 0x19
          .byte 0x1a
          .byte 0x1a
          .byte 0x1a
          .byte 0x55
          .byte 0x1a
          .byte 0x55
          .byte 0x1a
          .byte 0x57
          .byte 0x1a
          .byte 0x57
          .byte 0x1a
          .byte 0x61
          .byte 0x1a
          .byte 0x61
          .byte 0x1a
          .byte 0x63
          .byte 0x1a
          .byte 0x64
          .byte 0x1a
          .byte 0x6d
          .byte 0x1a
          .byte 0x72
          .byte 0x1a
          .byte 0x4
          .byte 0x1b
          .byte 0x4
          .byte 0x1b
          .byte 0x35
          .byte 0x1b
          .byte 0x35
          .byte 0x1b
          .byte 0x3b
          .byte 0x1b
          .byte 0x3b
          .byte 0x1b
          .byte 0x3d
          .byte 0x1b
          .byte 0x41
          .byte 0x1b
          .byte 0x43
          .byte 0x1b
          .byte 0x44
          .byte 0x1b
          .byte 0x82
          .byte 0x1b
          .byte 0x82
          .byte 0x1b
          .byte 0xa1
          .byte 0x1b
          .byte 0xa1
          .byte 0x1b
          .byte 0xa6
          .byte 0x1b
          .byte 0xa7
          .byte 0x1b
          .byte 0xaa
          .byte 0x1b
          .byte 0xaa
          .byte 0x1b
          .byte 0xac
          .byte 0x1b
          .byte 0xad
          .byte 0x1b
          .byte 0xe7
          .byte 0x1b
          .byte 0xe7
          .byte 0x1b
          .byte 0xea
          .byte 0x1b
          .byte 0xec
          .byte 0x1b
          .byte 0xee
          .byte 0x1b
          .byte 0xee
          .byte 0x1b
          .byte 0xf2
          .byte 0x1b
          .byte 0xf3
          .byte 0x1b
          .byte 0x24
          .byte 0x1c
          .byte 0x2b
          .byte 0x1c
          .byte 0x34
          .byte 0x1c
          .byte 0x35
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xe1
          .byte 0x1c
          .byte 0xf2
          .byte 0x1c
          .byte 0xf3
          .byte 0x1c
          .byte 0x2e
          .byte 0x30
          .byte 0x2f
          .byte 0x30
          .byte 0x23
          .byte 0xa8
          .byte 0x24
          .byte 0xa8
          .byte 0x27
          .byte 0xa8
          .byte 0x27
          .byte 0xa8
          .byte 0x80
          .byte 0xa8
          .byte 0x81
          .byte 0xa8
          .byte 0xb4
          .byte 0xa8
          .byte 0xc3
          .byte 0xa8
          .byte 0x52
          .byte 0xa9
          .byte 0x53
          .byte 0xa9
          .byte 0x83
          .byte 0xa9
          .byte 0x83
          .byte 0xa9
          .byte 0xb4
          .byte 0xa9
          .byte 0xb5
          .byte 0xa9
          .byte 0xba
          .byte 0xa9
          .byte 0xbb
          .byte 0xa9
          .byte 0xbd
          .byte 0xa9
          .byte 0xc0
          .byte 0xa9
          .byte 0x2f
          .byte 0xaa
          .byte 0x30
          .byte 0xaa
          .byte 0x33
          .byte 0xaa
          .byte 0x34
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x4d
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0x7b
          .byte 0xaa
          .byte 0xeb
          .byte 0xaa
          .byte 0xeb
          .byte 0xaa
          .byte 0xee
          .byte 0xaa
          .byte 0xef
          .byte 0xaa
          .byte 0xf5
          .byte 0xaa
          .byte 0xf5
          .byte 0xaa
          .byte 0xe3
          .byte 0xab
          .byte 0xe4
          .byte 0xab
          .byte 0xe6
          .byte 0xab
          .byte 0xe7
          .byte 0xab
          .byte 0xe9
          .byte 0xab
          .byte 0xea
          .byte 0xab
          .byte 0xec
          .byte 0xab
          .byte 0xec
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b5a0:
          .byte 0xbd
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x7a
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xfd
          .byte 0xff
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b5e0:
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0x1c
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xdd
          .byte 0x6
          .byte 0xf
          .byte 0x7
          .byte 0xf
          .byte 0x7
          .byte 0xe
          .byte 0x18
          .byte 0xe
          .byte 0x18
          .byte 0xb
          .byte 0x20
          .byte 0xf
          .byte 0x20
          .byte 0x2a
          .byte 0x20
          .byte 0x2e
          .byte 0x20
          .byte 0x60
          .byte 0x20
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x20
          .byte 0x6f
          .byte 0x20
          .byte 0x0
          .byte 0xd8
          .byte 0xff
          .byte 0xf8
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xfe
          .byte 0xf9
          .byte 0xff
          .byte 0xfb
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b620:
          .byte 0x88
          .byte 0x4
          .byte 0x89
          .byte 0x4
          .byte 0xdd
          .byte 0x20
          .byte 0xe0
          .byte 0x20
          .byte 0xe2
          .byte 0x20
          .byte 0xe4
          .byte 0x20
          .byte 0x70
          .byte 0xa6
          .byte 0x72
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b640:

            add BYTE PTR [RCX],AL
            add DWORD PTR [RAX],EAX
            add AL,BYTE PTR [RCX]
            add DWORD PTR [RAX],EAX
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbc
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x43
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x73
          .byte 0x24

            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43b6c0:

            and DWORD PTR [RAX],EAX
            and EAX,DWORD PTR [RAX]
            and EAX,704653056
            add BYTE PTR [RDX],CH
            add BYTE PTR [RAX+RAX*1],CH
            sub AL,0
            add BYTE PTR CS:[RDI],CH
            add BYTE PTR [RDX],BH
            add BYTE PTR [RBX],BH
            add BYTE PTR [RDI],BH
            add BYTE PTR [RAX],AL
            pop RSP
            add BYTE PTR [RAX+RAX*1-95],BL
            add BYTE PTR [RCX-1493129472],AH
            add BYTE PTR [RSI-1090472192],DH
            add BYTE PTR [RDI+2114158080],BH
            add EAX,DWORD PTR [RDI+1510180611]
            add EAX,92865887
            mov DWORD PTR [RIP+.L_64a3d0+94312692],EAX
            ret 
          .byte 0x5
          .byte 0xc3
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xc6
          .byte 0x5
          .byte 0xf3
          .byte 0x5
          .byte 0xf4
          .byte 0x5
          .byte 0x9
          .byte 0x6
          .byte 0xa
          .byte 0x6
          .byte 0xc
          .byte 0x6
          .byte 0xd
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1b
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1f
          .byte 0x6
          .byte 0x6a
          .byte 0x6
          .byte 0x6d
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0xd4
          .byte 0x6
          .byte 0x0
          .byte 0x7
          .byte 0xd
          .byte 0x7
          .byte 0xf7
          .byte 0x7
          .byte 0xf9
          .byte 0x7
          .byte 0x30
          .byte 0x8
          .byte 0x3e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x5e
          .byte 0x8
          .byte 0x64
          .byte 0x9
          .byte 0x65
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0x70
          .byte 0x9
          .byte 0xf0
          .byte 0xa
          .byte 0xf0
          .byte 0xa
          .byte 0xf4
          .byte 0xd
          .byte 0xf4
          .byte 0xd
          .byte 0x4f
          .byte 0xe
          .byte 0x4f
          .byte 0xe
          .byte 0x5a
          .byte 0xe
          .byte 0x5b
          .byte 0xe
          .byte 0x4
          .byte 0xf
          .byte 0x12
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x14
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0x85
          .byte 0xf
          .byte 0xd0
          .byte 0xf
          .byte 0xd4
          .byte 0xf
          .byte 0xd9
          .byte 0xf
          .byte 0xda
          .byte 0xf
          .byte 0x4a
          .byte 0x10
          .byte 0x4f
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0xfb
          .byte 0x10
          .byte 0x60
          .byte 0x13
          .byte 0x68
          .byte 0x13
          .byte 0x6d
          .byte 0x16
          .byte 0x6e
          .byte 0x16
          .byte 0xeb
          .byte 0x16
          .byte 0xed
          .byte 0x16
          .byte 0x35
          .byte 0x17
          .byte 0x36
          .byte 0x17
          .byte 0xd4
          .byte 0x17
          .byte 0xd6
          .byte 0x17
          .byte 0xd8
          .byte 0x17
          .byte 0xda
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0x7
          .byte 0x18
          .byte 0xa
          .byte 0x18
          .byte 0x44
          .byte 0x19
          .byte 0x45
          .byte 0x19
          .byte 0x1e
          .byte 0x1a
          .byte 0x1f
          .byte 0x1a
          .byte 0xa0
          .byte 0x1a
          .byte 0xa6
          .byte 0x1a
          .byte 0xa8
          .byte 0x1a
          .byte 0xad
          .byte 0x1a
          .byte 0x5a
          .byte 0x1b
          .byte 0x60
          .byte 0x1b
          .byte 0xfc
          .byte 0x1b
          .byte 0xff
          .byte 0x1b
          .byte 0x3b
          .byte 0x1c
          .byte 0x3f
          .byte 0x1c
          .byte 0x7e
          .byte 0x1c
          .byte 0x7f
          .byte 0x1c
          .byte 0xc0
          .byte 0x1c
          .byte 0xc7
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0xd3
          .byte 0x1c
          .byte 0x16
          .byte 0x20
          .byte 0x17
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x27
          .byte 0x20
          .byte 0x30
          .byte 0x20
          .byte 0x38
          .byte 0x20
          .byte 0x3b
          .byte 0x20
          .byte 0x3e
          .byte 0x20
          .byte 0x41
          .byte 0x20
          .byte 0x43
          .byte 0x20
          .byte 0x47
          .byte 0x20
          .byte 0x51
          .byte 0x20
          .byte 0x53
          .byte 0x20
          .byte 0x53
          .byte 0x20
          .byte 0x55
          .byte 0x20
          .byte 0x5e
          .byte 0x20
          .byte 0xf9
          .byte 0x2c
          .byte 0xfc
          .byte 0x2c
          .byte 0xfe
          .byte 0x2c
          .byte 0xff
          .byte 0x2c
          .byte 0x70
          .byte 0x2d
          .byte 0x70
          .byte 0x2d
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x2e
          .byte 0x6
          .byte 0x2e
          .byte 0x8
          .byte 0x2e
          .byte 0xb
          .byte 0x2e
          .byte 0xb
          .byte 0x2e
          .byte 0xe
          .byte 0x2e
          .byte 0x16
          .byte 0x2e
          .byte 0x18
          .byte 0x2e
          .byte 0x19
          .byte 0x2e
          .byte 0x1b
          .byte 0x2e
          .byte 0x1b
          .byte 0x2e
          .byte 0x1e
          .byte 0x2e
          .byte 0x1f
          .byte 0x2e
          .byte 0x2a
          .byte 0x2e
          .byte 0x2e
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x39
          .byte 0x2e
          .byte 0x1
          .byte 0x30
          .byte 0x3
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0x3d
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfb
          .byte 0x30
          .byte 0xfe
          .byte 0xa4
          .byte 0xff
          .byte 0xa4
          .byte 0xd
          .byte 0xa6
          .byte 0xf
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x73
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0x7e
          .byte 0xa6
          .byte 0xf2
          .byte 0xa6
          .byte 0xf7
          .byte 0xa6
          .byte 0x74
          .byte 0xa8
          .byte 0x77
          .byte 0xa8
          .byte 0xce
          .byte 0xa8
          .byte 0xcf
          .byte 0xa8
          .byte 0xf8
          .byte 0xa8
          .byte 0xfa
          .byte 0xa8
          .byte 0x2e
          .byte 0xa9
          .byte 0x2f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0x5f
          .byte 0xa9
          .byte 0xc1
          .byte 0xa9
          .byte 0xcd
          .byte 0xa9
          .byte 0xde
          .byte 0xa9
          .byte 0xdf
          .byte 0xa9
          .byte 0x5c
          .byte 0xaa
          .byte 0x5f
          .byte 0xaa
          .byte 0xde
          .byte 0xaa
          .byte 0xdf
          .byte 0xaa
          .byte 0xf0
          .byte 0xaa
          .byte 0xf1
          .byte 0xaa
          .byte 0xeb
          .byte 0xab
          .byte 0xeb
          .byte 0xab
          .byte 0x10
          .byte 0xfe
          .byte 0x16
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x19
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x30
          .byte 0xfe
          .byte 0x45
          .byte 0xfe
          .byte 0x46
          .byte 0xfe
          .byte 0x49
          .byte 0xfe
          .byte 0x4c
          .byte 0xfe
          .byte 0x50
          .byte 0xfe
          .byte 0x52
          .byte 0xfe
          .byte 0x54
          .byte 0xfe
          .byte 0x57
          .byte 0xfe
          .byte 0x5f
          .byte 0xfe
          .byte 0x61
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x68
          .byte 0xfe
          .byte 0x6a
          .byte 0xfe
          .byte 0x6b
          .byte 0xfe
          .byte 0x1
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0x5
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xa
          .byte 0xff
          .byte 0xa
          .byte 0xff
          .byte 0xc
          .byte 0xff
          .byte 0xc
          .byte 0xff
          .byte 0xe
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0x1a
          .byte 0xff
          .byte 0x1b
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0x20
          .byte 0xff
          .byte 0x3c
          .byte 0xff
          .byte 0x3c
          .byte 0xff
          .byte 0x61
          .byte 0xff
          .byte 0x61
          .byte 0xff
          .byte 0x64
          .byte 0xff
          .byte 0x65
          .byte 0xff
.L_43b8a0:
          .byte 0xab
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x18
          .byte 0x20
          .byte 0x18
          .byte 0x20
          .byte 0x1b
          .byte 0x20
          .byte 0x1c
          .byte 0x20
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x2e
          .byte 0x4
          .byte 0x2e
          .byte 0x4
          .byte 0x2e
          .byte 0x9
          .byte 0x2e
          .byte 0x9
          .byte 0x2e
          .byte 0xc
          .byte 0x2e
          .byte 0xc
          .byte 0x2e
          .byte 0x1c
          .byte 0x2e
          .byte 0x1c
          .byte 0x2e
          .byte 0x20
          .byte 0x2e
          .byte 0x20
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b8e0:
          .string ")"
          .byte 0x29
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x3b
          .byte 0xf
          .byte 0x3b
          .byte 0xf
          .byte 0x3d
          .byte 0xf
          .byte 0x3d
          .byte 0xf
          .byte 0x9c
          .byte 0x16
          .byte 0x9c
          .byte 0x16
          .byte 0x46
          .byte 0x20
          .byte 0x46
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x7e
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0x8e
          .byte 0x20
          .byte 0x9
          .byte 0x23
          .byte 0x9
          .byte 0x23
          .byte 0xb
          .byte 0x23
          .byte 0xb
          .byte 0x23
          .byte 0x2a
          .byte 0x23
          .byte 0x2a
          .byte 0x23
          .byte 0x69
          .byte 0x27
          .byte 0x69
          .byte 0x27
          .byte 0x6b
          .byte 0x27
          .byte 0x6b
          .byte 0x27
          .byte 0x6d
          .byte 0x27
          .byte 0x6d
          .byte 0x27
          .byte 0x6f
          .byte 0x27
          .byte 0x6f
          .byte 0x27
          .byte 0x71
          .byte 0x27
          .byte 0x71
          .byte 0x27
          .byte 0x73
          .byte 0x27
          .byte 0x73
          .byte 0x27
          .byte 0x75
          .byte 0x27
          .byte 0x75
          .byte 0x27
          .byte 0xc6
          .byte 0x27
          .byte 0xc6
          .byte 0x27
          .byte 0xe7
          .byte 0x27
          .byte 0xe7
          .byte 0x27
          .byte 0xe9
          .byte 0x27
          .byte 0xe9
          .byte 0x27
          .byte 0xeb
          .byte 0x27
          .byte 0xeb
          .byte 0x27
          .byte 0xed
          .byte 0x27
          .byte 0xed
          .byte 0x27
          .byte 0xef
          .byte 0x27
          .byte 0xef
          .byte 0x27
          .byte 0x84
          .byte 0x29
          .byte 0x84
          .byte 0x29
          .byte 0x86
          .byte 0x29
          .byte 0x86
          .byte 0x29
          .byte 0x88
          .byte 0x29
          .byte 0x88
          .byte 0x29
          .byte 0x8a
          .byte 0x29
          .byte 0x8a
          .byte 0x29
          .byte 0x8c
          .byte 0x29
          .byte 0x8c
          .byte 0x29
          .byte 0x8e
          .byte 0x29
          .byte 0x8e
          .byte 0x29
          .byte 0x90
          .byte 0x29
          .byte 0x90
          .byte 0x29
          .byte 0x92
          .byte 0x29
          .byte 0x92
          .byte 0x29
          .byte 0x94
          .byte 0x29
          .byte 0x94
          .byte 0x29
          .byte 0x96
          .byte 0x29
          .byte 0x96
          .byte 0x29
          .byte 0x98
          .byte 0x29
          .byte 0x98
          .byte 0x29
          .byte 0xd9
          .byte 0x29
          .byte 0xd9
          .byte 0x29
          .byte 0xdb
          .byte 0x29
          .byte 0xdb
          .byte 0x29
          .byte 0xfd
          .byte 0x29
          .byte 0xfd
          .byte 0x29
          .byte 0x23
          .byte 0x2e
          .byte 0x23
          .byte 0x2e
          .byte 0x25
          .byte 0x2e
          .byte 0x25
          .byte 0x2e
          .byte 0x27
          .byte 0x2e
          .byte 0x27
          .byte 0x2e
          .byte 0x29
          .byte 0x2e
          .byte 0x29
          .byte 0x2e
          .byte 0x9
          .byte 0x30
          .byte 0x9
          .byte 0x30
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x30
          .byte 0xd
          .byte 0x30
          .byte 0xd
          .byte 0x30
          .byte 0xf
          .byte 0x30
          .byte 0xf
          .byte 0x30
          .byte 0x11
          .byte 0x30
          .byte 0x11
          .byte 0x30
          .byte 0x15
          .byte 0x30
          .byte 0x15
          .byte 0x30
          .byte 0x17
          .byte 0x30
          .byte 0x17
          .byte 0x30
          .byte 0x19
          .byte 0x30
          .byte 0x19
          .byte 0x30
          .byte 0x1b
          .byte 0x30
          .byte 0x1b
          .byte 0x30
          .byte 0x1e
          .byte 0x30
          .byte 0x1f
          .byte 0x30
          .byte 0x3f
          .byte 0xfd
          .byte 0x3f
          .byte 0xfd
          .byte 0x18
          .byte 0xfe
          .byte 0x18
          .byte 0xfe
          .byte 0x36
          .byte 0xfe
          .byte 0x36
          .byte 0xfe
          .byte 0x38
          .byte 0xfe
          .byte 0x38
          .byte 0xfe
          .byte 0x3a
          .byte 0xfe
          .byte 0x3a
          .byte 0xfe
          .byte 0x3c
          .byte 0xfe
          .byte 0x3c
          .byte 0xfe
          .byte 0x3e
          .byte 0xfe
          .byte 0x3e
          .byte 0xfe
          .byte 0x40
          .byte 0xfe
          .byte 0x40
          .byte 0xfe
          .byte 0x42
          .byte 0xfe
          .byte 0x42
          .byte 0xfe
          .byte 0x44
          .byte 0xfe
          .byte 0x44
          .byte 0xfe
          .byte 0x48
          .byte 0xfe
          .byte 0x48
          .byte 0xfe
          .byte 0x5a
          .byte 0xfe
          .byte 0x5a
          .byte 0xfe
          .byte 0x5c
          .byte 0xfe
          .byte 0x5c
          .byte 0xfe
          .byte 0x5e
          .byte 0xfe
          .byte 0x5e
          .byte 0xfe
          .byte 0x9
          .byte 0xff
          .byte 0x9
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0x60
          .byte 0xff
          .byte 0x60
          .byte 0xff
          .byte 0x63
          .byte 0xff
          .byte 0x63
          .byte 0xff
.L_43ba00:
          .string "-"
          .byte 0x2d
          .byte 0x0
          .byte 0x8a
          .byte 0x5
          .byte 0x8a
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0xbe
          .byte 0x5
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x14
          .byte 0x6
          .byte 0x18
          .byte 0x6
          .byte 0x18
          .byte 0x10
          .byte 0x20
          .byte 0x15
          .byte 0x20
          .byte 0x17
          .byte 0x2e
          .byte 0x17
          .byte 0x2e
          .byte 0x1a
          .byte 0x2e
          .byte 0x1a
          .byte 0x2e
          .byte 0x3a
          .byte 0x2e
          .byte 0x3b
          .byte 0x2e
          .byte 0x1c
          .byte 0x30
          .byte 0x1c
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0xa0
          .byte 0x30
          .byte 0x31
          .byte 0xfe
          .byte 0x32
          .byte 0xfe
          .byte 0x58
          .byte 0xfe
          .byte 0x58
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0x63
          .byte 0xfe
          .byte 0xd
          .byte 0xff
          .byte 0xd
          .byte 0xff
.L_43ba40:
          .byte 0xbb
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0x19
          .byte 0x20
          .byte 0x19
          .byte 0x20
          .byte 0x1d
          .byte 0x20
          .byte 0x1d
          .byte 0x20
          .byte 0x3a
          .byte 0x20
          .byte 0x3a
          .byte 0x20
          .byte 0x3
          .byte 0x2e
          .byte 0x3
          .byte 0x2e
          .byte 0x5
          .byte 0x2e
          .byte 0x5
          .byte 0x2e
          .byte 0xa
          .byte 0x2e
          .byte 0xa
          .byte 0x2e
          .byte 0xd
          .byte 0x2e
          .byte 0xd
          .byte 0x2e
          .byte 0x1d
          .byte 0x2e
          .byte 0x1d
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x21
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ba80:
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x68
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x81
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa2
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xac
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xae
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xe9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x4
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x3e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x46
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x85
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd4
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xed
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xe2
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x1c
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x90
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xa8
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xca
          .byte 0xd7
          .byte 0x1
          .byte 0x0
.L_43bb80:
          .string "A"
          .byte 0x5a
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x6
          .byte 0x1
          .byte 0x6
          .byte 0x1
          .byte 0x8
          .byte 0x1
          .byte 0x8
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xa
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0xe
          .byte 0x1
          .byte 0xe
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x10
          .byte 0x1
          .byte 0x12
          .byte 0x1
          .byte 0x12
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x14
          .byte 0x1
          .byte 0x16
          .byte 0x1
          .byte 0x16
          .byte 0x1
          .byte 0x18
          .byte 0x1
          .byte 0x18
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1a
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1c
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x20
          .byte 0x1
          .byte 0x22
          .byte 0x1
          .byte 0x22
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x24
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x26
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x28
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2a
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x2c
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x2e
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x30
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x32
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x34
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x36
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x39
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3b
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x3d
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x3f
          .byte 0x1
          .byte 0x41
          .byte 0x1
          .byte 0x41
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x43
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x45
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x47
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4a
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x4c
          .byte 0x1
          .byte 0x4e
          .byte 0x1
          .byte 0x4e
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x50
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x52
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x54
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x56
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x58
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x5a
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x5c
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x5e
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x60
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x62
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x64
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x66
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x68
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x6a
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x6c
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x6e
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x70
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x72
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x74
          .byte 0x1
          .byte 0x76
          .byte 0x1
          .byte 0x76
          .byte 0x1
          .byte 0x78
          .byte 0x1
          .byte 0x79
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x7b
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x7d
          .byte 0x1
          .byte 0x81
          .byte 0x1
          .byte 0x82
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x84
          .byte 0x1
          .byte 0x86
          .byte 0x1
          .byte 0x87
          .byte 0x1
          .byte 0x89
          .byte 0x1
          .byte 0x8b
          .byte 0x1
          .byte 0x8e
          .byte 0x1
          .byte 0x91
          .byte 0x1
          .byte 0x93
          .byte 0x1
          .byte 0x94
          .byte 0x1
          .byte 0x96
          .byte 0x1
          .byte 0x98
          .byte 0x1
          .byte 0x9c
          .byte 0x1
          .byte 0x9d
          .byte 0x1
          .byte 0x9f
          .byte 0x1
          .byte 0xa0
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa2
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0xa4
          .byte 0x1
          .byte 0xa6
          .byte 0x1
          .byte 0xa7
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0xa9
          .byte 0x1
          .byte 0xac
          .byte 0x1
          .byte 0xac
          .byte 0x1
          .byte 0xae
          .byte 0x1
          .byte 0xaf
          .byte 0x1
          .byte 0xb1
          .byte 0x1
          .byte 0xb3
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb5
          .byte 0x1
          .byte 0xb7
          .byte 0x1
          .byte 0xb8
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xbc
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xc4
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xc7
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xca
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xcd
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xcf
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd1
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xd3
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd5
          .byte 0x1
          .byte 0xd7
          .byte 0x1
          .byte 0xd7
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xd9
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0xdb
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xde
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe0
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xe2
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xe4
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xe6
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0xe8
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0xea
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0xec
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xee
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf1
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xf4
          .byte 0x1
          .byte 0xf6
          .byte 0x1
          .byte 0xf8
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfa
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0xfc
          .byte 0x1
          .byte 0xfe
          .byte 0x1
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x4
          .byte 0x2
          .byte 0x4
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x6
          .byte 0x2
          .byte 0x8
          .byte 0x2
          .byte 0x8
          .byte 0x2
          .byte 0xa
          .byte 0x2
          .byte 0xa
          .byte 0x2
          .byte 0xc
          .byte 0x2
          .byte 0xc
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0xe
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x10
          .byte 0x2
          .byte 0x12
          .byte 0x2
          .byte 0x12
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0x14
          .byte 0x2
          .byte 0x16
          .byte 0x2
          .byte 0x16
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0x18
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0x1a
          .byte 0x2
          .byte 0x1c
          .byte 0x2
          .byte 0x1c
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0x20
          .byte 0x2
          .byte 0x20
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x22
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x24
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x26
          .byte 0x2
          .byte 0x28
          .byte 0x2
          .byte 0x28
          .byte 0x2
          .byte 0x2a
          .byte 0x2
          .byte 0x2a
          .byte 0x2
          .byte 0x2c
          .byte 0x2
          .byte 0x2c
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x2e
          .byte 0x2
          .byte 0x30
          .byte 0x2
          .byte 0x30
          .byte 0x2
          .byte 0x32
          .byte 0x2
          .byte 0x32
          .byte 0x2
          .byte 0x3a
          .byte 0x2
          .byte 0x3b
          .byte 0x2
          .byte 0x3d
          .byte 0x2
          .byte 0x3e
          .byte 0x2
          .byte 0x41
          .byte 0x2
          .byte 0x41
          .byte 0x2
          .byte 0x43
          .byte 0x2
          .byte 0x46
          .byte 0x2
          .byte 0x48
          .byte 0x2
          .byte 0x48
          .byte 0x2
          .byte 0x4a
          .byte 0x2
          .byte 0x4a
          .byte 0x2
          .byte 0x4c
          .byte 0x2
          .byte 0x4c
          .byte 0x2
          .byte 0x4e
          .byte 0x2
          .byte 0x4e
          .byte 0x2
          .byte 0x70
          .byte 0x3
          .byte 0x70
          .byte 0x3
          .byte 0x72
          .byte 0x3
          .byte 0x72
          .byte 0x3
          .byte 0x76
          .byte 0x3
          .byte 0x76
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x86
          .byte 0x3
          .byte 0x88
          .byte 0x3
          .byte 0x8a
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8c
          .byte 0x3
          .byte 0x8e
          .byte 0x3
          .byte 0x8f
          .byte 0x3
          .byte 0x91
          .byte 0x3
          .byte 0xa1
          .byte 0x3
          .byte 0xa3
          .byte 0x3
          .byte 0xab
          .byte 0x3
          .byte 0xcf
          .byte 0x3
          .byte 0xcf
          .byte 0x3
          .byte 0xd2
          .byte 0x3
          .byte 0xd4
          .byte 0x3
          .byte 0xd8
          .byte 0x3
          .byte 0xd8
          .byte 0x3
          .byte 0xda
          .byte 0x3
          .byte 0xda
          .byte 0x3
          .byte 0xdc
          .byte 0x3
          .byte 0xdc
          .byte 0x3
          .byte 0xde
          .byte 0x3
          .byte 0xde
          .byte 0x3
          .byte 0xe0
          .byte 0x3
          .byte 0xe0
          .byte 0x3
          .byte 0xe2
          .byte 0x3
          .byte 0xe2
          .byte 0x3
          .byte 0xe4
          .byte 0x3
          .byte 0xe4
          .byte 0x3
          .byte 0xe6
          .byte 0x3
          .byte 0xe6
          .byte 0x3
          .byte 0xe8
          .byte 0x3
          .byte 0xe8
          .byte 0x3
          .byte 0xea
          .byte 0x3
          .byte 0xea
          .byte 0x3
          .byte 0xec
          .byte 0x3
          .byte 0xec
          .byte 0x3
          .byte 0xee
          .byte 0x3
          .byte 0xee
          .byte 0x3
          .byte 0xf4
          .byte 0x3
          .byte 0xf4
          .byte 0x3
          .byte 0xf7
          .byte 0x3
          .byte 0xf7
          .byte 0x3
          .byte 0xf9
          .byte 0x3
          .byte 0xfa
          .byte 0x3
          .byte 0xfd
          .byte 0x3
          .byte 0x2f
          .byte 0x4
          .byte 0x60
          .byte 0x4
          .byte 0x60
          .byte 0x4
          .byte 0x62
          .byte 0x4
          .byte 0x62
          .byte 0x4
          .byte 0x64
          .byte 0x4
          .byte 0x64
          .byte 0x4
          .byte 0x66
          .byte 0x4
          .byte 0x66
          .byte 0x4
          .byte 0x68
          .byte 0x4
          .byte 0x68
          .byte 0x4
          .byte 0x6a
          .byte 0x4
          .byte 0x6a
          .byte 0x4
          .byte 0x6c
          .byte 0x4
          .byte 0x6c
          .byte 0x4
          .byte 0x6e
          .byte 0x4
          .byte 0x6e
          .byte 0x4
          .byte 0x70
          .byte 0x4
          .byte 0x70
          .byte 0x4
          .byte 0x72
          .byte 0x4
          .byte 0x72
          .byte 0x4
          .byte 0x74
          .byte 0x4
          .byte 0x74
          .byte 0x4
          .byte 0x76
          .byte 0x4
          .byte 0x76
          .byte 0x4
          .byte 0x78
          .byte 0x4
          .byte 0x78
          .byte 0x4
          .byte 0x7a
          .byte 0x4
          .byte 0x7a
          .byte 0x4
          .byte 0x7c
          .byte 0x4
          .byte 0x7c
          .byte 0x4
          .byte 0x7e
          .byte 0x4
          .byte 0x7e
          .byte 0x4
          .byte 0x80
          .byte 0x4
          .byte 0x80
          .byte 0x4
          .byte 0x8a
          .byte 0x4
          .byte 0x8a
          .byte 0x4
          .byte 0x8c
          .byte 0x4
          .byte 0x8c
          .byte 0x4
          .byte 0x8e
          .byte 0x4
          .byte 0x8e
          .byte 0x4
          .byte 0x90
          .byte 0x4
          .byte 0x90
          .byte 0x4
          .byte 0x92
          .byte 0x4
          .byte 0x92
          .byte 0x4
          .byte 0x94
          .byte 0x4
          .byte 0x94
          .byte 0x4
          .byte 0x96
          .byte 0x4
          .byte 0x96
          .byte 0x4
          .byte 0x98
          .byte 0x4
          .byte 0x98
          .byte 0x4
          .byte 0x9a
          .byte 0x4
          .byte 0x9a
          .byte 0x4
          .byte 0x9c
          .byte 0x4
          .byte 0x9c
          .byte 0x4
          .byte 0x9e
          .byte 0x4
          .byte 0x9e
          .byte 0x4
          .byte 0xa0
          .byte 0x4
          .byte 0xa0
          .byte 0x4
          .byte 0xa2
          .byte 0x4
          .byte 0xa2
          .byte 0x4
          .byte 0xa4
          .byte 0x4
          .byte 0xa4
          .byte 0x4
          .byte 0xa6
          .byte 0x4
          .byte 0xa6
          .byte 0x4
          .byte 0xa8
          .byte 0x4
          .byte 0xa8
          .byte 0x4
          .byte 0xaa
          .byte 0x4
          .byte 0xaa
          .byte 0x4
          .byte 0xac
          .byte 0x4
          .byte 0xac
          .byte 0x4
          .byte 0xae
          .byte 0x4
          .byte 0xae
          .byte 0x4
          .byte 0xb0
          .byte 0x4
          .byte 0xb0
          .byte 0x4
          .byte 0xb2
          .byte 0x4
          .byte 0xb2
          .byte 0x4
          .byte 0xb4
          .byte 0x4
          .byte 0xb4
          .byte 0x4
          .byte 0xb6
          .byte 0x4
          .byte 0xb6
          .byte 0x4
          .byte 0xb8
          .byte 0x4
          .byte 0xb8
          .byte 0x4
          .byte 0xba
          .byte 0x4
          .byte 0xba
          .byte 0x4
          .byte 0xbc
          .byte 0x4
          .byte 0xbc
          .byte 0x4
          .byte 0xbe
          .byte 0x4
          .byte 0xbe
          .byte 0x4
          .byte 0xc0
          .byte 0x4
          .byte 0xc1
          .byte 0x4
          .byte 0xc3
          .byte 0x4
          .byte 0xc3
          .byte 0x4
          .byte 0xc5
          .byte 0x4
          .byte 0xc5
          .byte 0x4
          .byte 0xc7
          .byte 0x4
          .byte 0xc7
          .byte 0x4
          .byte 0xc9
          .byte 0x4
          .byte 0xc9
          .byte 0x4
          .byte 0xcb
          .byte 0x4
          .byte 0xcb
          .byte 0x4
          .byte 0xcd
          .byte 0x4
          .byte 0xcd
          .byte 0x4
          .byte 0xd0
          .byte 0x4
          .byte 0xd0
          .byte 0x4
          .byte 0xd2
          .byte 0x4
          .byte 0xd2
          .byte 0x4
          .byte 0xd4
          .byte 0x4
          .byte 0xd4
          .byte 0x4
          .byte 0xd6
          .byte 0x4
          .byte 0xd6
          .byte 0x4
          .byte 0xd8
          .byte 0x4
          .byte 0xd8
          .byte 0x4
          .byte 0xda
          .byte 0x4
          .byte 0xda
          .byte 0x4
          .byte 0xdc
          .byte 0x4
          .byte 0xdc
          .byte 0x4
          .byte 0xde
          .byte 0x4
          .byte 0xde
          .byte 0x4
          .byte 0xe0
          .byte 0x4
          .byte 0xe0
          .byte 0x4
          .byte 0xe2
          .byte 0x4
          .byte 0xe2
          .byte 0x4
          .byte 0xe4
          .byte 0x4
          .byte 0xe4
          .byte 0x4
          .byte 0xe6
          .byte 0x4
          .byte 0xe6
          .byte 0x4
          .byte 0xe8
          .byte 0x4
          .byte 0xe8
          .byte 0x4
          .byte 0xea
          .byte 0x4
          .byte 0xea
          .byte 0x4
          .byte 0xec
          .byte 0x4
          .byte 0xec
          .byte 0x4
          .byte 0xee
          .byte 0x4
          .byte 0xee
          .byte 0x4
          .byte 0xf0
          .byte 0x4
          .byte 0xf0
          .byte 0x4
          .byte 0xf2
          .byte 0x4
          .byte 0xf2
          .byte 0x4
          .byte 0xf4
          .byte 0x4
          .byte 0xf4
          .byte 0x4
          .byte 0xf6
          .byte 0x4
          .byte 0xf6
          .byte 0x4
          .byte 0xf8
          .byte 0x4
          .byte 0xf8
          .byte 0x4
          .byte 0xfa
          .byte 0x4
          .byte 0xfa
          .byte 0x4
          .byte 0xfc
          .byte 0x4
          .byte 0xfc
          .byte 0x4
          .byte 0xfe
          .byte 0x4
          .byte 0xfe
          .byte 0x4
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x4
          .byte 0x5
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x5
          .byte 0x6
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0x8
          .byte 0x5
          .byte 0xa
          .byte 0x5
          .byte 0xa
          .byte 0x5
          .byte 0xc
          .byte 0x5
          .byte 0xc
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0xe
          .byte 0x5
          .byte 0x10
          .byte 0x5
          .byte 0x10
          .byte 0x5
          .byte 0x12
          .byte 0x5
          .byte 0x12
          .byte 0x5
          .byte 0x14
          .byte 0x5
          .byte 0x14
          .byte 0x5
          .byte 0x16
          .byte 0x5
          .byte 0x16
          .byte 0x5
          .byte 0x18
          .byte 0x5
          .byte 0x18
          .byte 0x5
          .byte 0x1a
          .byte 0x5
          .byte 0x1a
          .byte 0x5
          .byte 0x1c
          .byte 0x5
          .byte 0x1c
          .byte 0x5
          .byte 0x1e
          .byte 0x5
          .byte 0x1e
          .byte 0x5
          .byte 0x20
          .byte 0x5
          .byte 0x20
          .byte 0x5
          .byte 0x22
          .byte 0x5
          .byte 0x22
          .byte 0x5
          .byte 0x24
          .byte 0x5
          .byte 0x24
          .byte 0x5
          .byte 0x26
          .byte 0x5
          .byte 0x26
          .byte 0x5
          .byte 0x31
          .byte 0x5
          .byte 0x56
          .byte 0x5
          .byte 0xa0
          .byte 0x10
          .byte 0xc5
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xc7
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0xcd
          .byte 0x10
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x1e
          .byte 0x2
          .byte 0x1e
          .byte 0x4
          .byte 0x1e
          .byte 0x4
          .byte 0x1e
          .byte 0x6
          .byte 0x1e
          .byte 0x6
          .byte 0x1e
          .byte 0x8
          .byte 0x1e
          .byte 0x8
          .byte 0x1e
          .byte 0xa
          .byte 0x1e
          .byte 0xa
          .byte 0x1e
          .byte 0xc
          .byte 0x1e
          .byte 0xc
          .byte 0x1e
          .byte 0xe
          .byte 0x1e
          .byte 0xe
          .byte 0x1e
          .byte 0x10
          .byte 0x1e
          .byte 0x10
          .byte 0x1e
          .byte 0x12
          .byte 0x1e
          .byte 0x12
          .byte 0x1e
          .byte 0x14
          .byte 0x1e
          .byte 0x14
          .byte 0x1e
          .byte 0x16
          .byte 0x1e
          .byte 0x16
          .byte 0x1e
          .byte 0x18
          .byte 0x1e
          .byte 0x18
          .byte 0x1e
          .byte 0x1a
          .byte 0x1e
          .byte 0x1a
          .byte 0x1e
          .byte 0x1c
          .byte 0x1e
          .byte 0x1c
          .byte 0x1e
          .byte 0x1e
          .byte 0x1e
          .byte 0x1e
          .byte 0x1e
          .byte 0x20
          .byte 0x1e
          .byte 0x20
          .byte 0x1e
          .byte 0x22
          .byte 0x1e
          .byte 0x22
          .byte 0x1e
          .byte 0x24
          .byte 0x1e
          .byte 0x24
          .byte 0x1e
          .byte 0x26
          .byte 0x1e
          .byte 0x26
          .byte 0x1e
          .byte 0x28
          .byte 0x1e
          .byte 0x28
          .byte 0x1e
          .byte 0x2a
          .byte 0x1e
          .byte 0x2a
          .byte 0x1e
          .byte 0x2c
          .byte 0x1e
          .byte 0x2c
          .byte 0x1e
          .byte 0x2e
          .byte 0x1e
          .byte 0x2e
          .byte 0x1e
          .byte 0x30
          .byte 0x1e
          .byte 0x30
          .byte 0x1e
          .byte 0x32
          .byte 0x1e
          .byte 0x32
          .byte 0x1e
          .byte 0x34
          .byte 0x1e
          .byte 0x34
          .byte 0x1e
          .byte 0x36
          .byte 0x1e
          .byte 0x36
          .byte 0x1e
          .byte 0x38
          .byte 0x1e
          .byte 0x38
          .byte 0x1e
          .byte 0x3a
          .byte 0x1e
          .byte 0x3a
          .byte 0x1e
          .byte 0x3c
          .byte 0x1e
          .byte 0x3c
          .byte 0x1e
          .byte 0x3e
          .byte 0x1e
          .byte 0x3e
          .byte 0x1e
          .byte 0x40
          .byte 0x1e
          .byte 0x40
          .byte 0x1e
          .byte 0x42
          .byte 0x1e
          .byte 0x42
          .byte 0x1e
          .byte 0x44
          .byte 0x1e
          .byte 0x44
          .byte 0x1e
          .byte 0x46
          .byte 0x1e
          .byte 0x46
          .byte 0x1e
          .byte 0x48
          .byte 0x1e
          .byte 0x48
          .byte 0x1e
          .byte 0x4a
          .byte 0x1e
          .byte 0x4a
          .byte 0x1e
          .byte 0x4c
          .byte 0x1e
          .byte 0x4c
          .byte 0x1e
          .byte 0x4e
          .byte 0x1e
          .byte 0x4e
          .byte 0x1e
          .byte 0x50
          .byte 0x1e
          .byte 0x50
          .byte 0x1e
          .byte 0x52
          .byte 0x1e
          .byte 0x52
          .byte 0x1e
          .byte 0x54
          .byte 0x1e
          .byte 0x54
          .byte 0x1e
          .byte 0x56
          .byte 0x1e
          .byte 0x56
          .byte 0x1e
          .byte 0x58
          .byte 0x1e
          .byte 0x58
          .byte 0x1e
          .byte 0x5a
          .byte 0x1e
          .byte 0x5a
          .byte 0x1e
          .byte 0x5c
          .byte 0x1e
          .byte 0x5c
          .byte 0x1e
          .byte 0x5e
          .byte 0x1e
          .byte 0x5e
          .byte 0x1e
          .byte 0x60
          .byte 0x1e
          .byte 0x60
          .byte 0x1e
          .byte 0x62
          .byte 0x1e
          .byte 0x62
          .byte 0x1e
          .byte 0x64
          .byte 0x1e
          .byte 0x64
          .byte 0x1e
          .byte 0x66
          .byte 0x1e
          .byte 0x66
          .byte 0x1e
          .byte 0x68
          .byte 0x1e
          .byte 0x68
          .byte 0x1e
          .byte 0x6a
          .byte 0x1e
          .byte 0x6a
          .byte 0x1e
          .byte 0x6c
          .byte 0x1e
          .byte 0x6c
          .byte 0x1e
          .byte 0x6e
          .byte 0x1e
          .byte 0x6e
          .byte 0x1e
          .byte 0x70
          .byte 0x1e
          .byte 0x70
          .byte 0x1e
          .byte 0x72
          .byte 0x1e
          .byte 0x72
          .byte 0x1e
          .byte 0x74
          .byte 0x1e
          .byte 0x74
          .byte 0x1e
          .byte 0x76
          .byte 0x1e
          .byte 0x76
          .byte 0x1e
          .byte 0x78
          .byte 0x1e
          .byte 0x78
          .byte 0x1e
          .byte 0x7a
          .byte 0x1e
          .byte 0x7a
          .byte 0x1e
          .byte 0x7c
          .byte 0x1e
          .byte 0x7c
          .byte 0x1e
          .byte 0x7e
          .byte 0x1e
          .byte 0x7e
          .byte 0x1e
          .byte 0x80
          .byte 0x1e
          .byte 0x80
          .byte 0x1e
          .byte 0x82
          .byte 0x1e
          .byte 0x82
          .byte 0x1e
          .byte 0x84
          .byte 0x1e
          .byte 0x84
          .byte 0x1e
          .byte 0x86
          .byte 0x1e
          .byte 0x86
          .byte 0x1e
          .byte 0x88
          .byte 0x1e
          .byte 0x88
          .byte 0x1e
          .byte 0x8a
          .byte 0x1e
          .byte 0x8a
          .byte 0x1e
          .byte 0x8c
          .byte 0x1e
          .byte 0x8c
          .byte 0x1e
          .byte 0x8e
          .byte 0x1e
          .byte 0x8e
          .byte 0x1e
          .byte 0x90
          .byte 0x1e
          .byte 0x90
          .byte 0x1e
          .byte 0x92
          .byte 0x1e
          .byte 0x92
          .byte 0x1e
          .byte 0x94
          .byte 0x1e
          .byte 0x94
          .byte 0x1e
          .byte 0x9e
          .byte 0x1e
          .byte 0x9e
          .byte 0x1e
          .byte 0xa0
          .byte 0x1e
          .byte 0xa0
          .byte 0x1e
          .byte 0xa2
          .byte 0x1e
          .byte 0xa2
          .byte 0x1e
          .byte 0xa4
          .byte 0x1e
          .byte 0xa4
          .byte 0x1e
          .byte 0xa6
          .byte 0x1e
          .byte 0xa6
          .byte 0x1e
          .byte 0xa8
          .byte 0x1e
          .byte 0xa8
          .byte 0x1e
          .byte 0xaa
          .byte 0x1e
          .byte 0xaa
          .byte 0x1e
          .byte 0xac
          .byte 0x1e
          .byte 0xac
          .byte 0x1e
          .byte 0xae
          .byte 0x1e
          .byte 0xae
          .byte 0x1e
          .byte 0xb0
          .byte 0x1e
          .byte 0xb0
          .byte 0x1e
          .byte 0xb2
          .byte 0x1e
          .byte 0xb2
          .byte 0x1e
          .byte 0xb4
          .byte 0x1e
          .byte 0xb4
          .byte 0x1e
          .byte 0xb6
          .byte 0x1e
          .byte 0xb6
          .byte 0x1e
          .byte 0xb8
          .byte 0x1e
          .byte 0xb8
          .byte 0x1e
          .byte 0xba
          .byte 0x1e
          .byte 0xba
          .byte 0x1e
          .byte 0xbc
          .byte 0x1e
          .byte 0xbc
          .byte 0x1e
          .byte 0xbe
          .byte 0x1e
          .byte 0xbe
          .byte 0x1e
          .byte 0xc0
          .byte 0x1e
          .byte 0xc0
          .byte 0x1e
          .byte 0xc2
          .byte 0x1e
          .byte 0xc2
          .byte 0x1e
          .byte 0xc4
          .byte 0x1e
          .byte 0xc4
          .byte 0x1e
          .byte 0xc6
          .byte 0x1e
          .byte 0xc6
          .byte 0x1e
          .byte 0xc8
          .byte 0x1e
          .byte 0xc8
          .byte 0x1e
          .byte 0xca
          .byte 0x1e
          .byte 0xca
          .byte 0x1e
          .byte 0xcc
          .byte 0x1e
          .byte 0xcc
          .byte 0x1e
          .byte 0xce
          .byte 0x1e
          .byte 0xce
          .byte 0x1e
          .byte 0xd0
          .byte 0x1e
          .byte 0xd0
          .byte 0x1e
          .byte 0xd2
          .byte 0x1e
          .byte 0xd2
          .byte 0x1e
          .byte 0xd4
          .byte 0x1e
          .byte 0xd4
          .byte 0x1e
          .byte 0xd6
          .byte 0x1e
          .byte 0xd6
          .byte 0x1e
          .byte 0xd8
          .byte 0x1e
          .byte 0xd8
          .byte 0x1e
          .byte 0xda
          .byte 0x1e
          .byte 0xda
          .byte 0x1e
          .byte 0xdc
          .byte 0x1e
          .byte 0xdc
          .byte 0x1e
          .byte 0xde
          .byte 0x1e
          .byte 0xde
          .byte 0x1e
          .byte 0xe0
          .byte 0x1e
          .byte 0xe0
          .byte 0x1e
          .byte 0xe2
          .byte 0x1e
          .byte 0xe2
          .byte 0x1e
          .byte 0xe4
          .byte 0x1e
          .byte 0xe4
          .byte 0x1e
          .byte 0xe6
          .byte 0x1e
          .byte 0xe6
          .byte 0x1e
          .byte 0xe8
          .byte 0x1e
          .byte 0xe8
          .byte 0x1e
          .byte 0xea
          .byte 0x1e
          .byte 0xea
          .byte 0x1e
          .byte 0xec
          .byte 0x1e
          .byte 0xec
          .byte 0x1e
          .byte 0xee
          .byte 0x1e
          .byte 0xee
          .byte 0x1e
          .byte 0xf0
          .byte 0x1e
          .byte 0xf0
          .byte 0x1e
          .byte 0xf2
          .byte 0x1e
          .byte 0xf2
          .byte 0x1e
          .byte 0xf4
          .byte 0x1e
          .byte 0xf4
          .byte 0x1e
          .byte 0xf6
          .byte 0x1e
          .byte 0xf6
          .byte 0x1e
          .byte 0xf8
          .byte 0x1e
          .byte 0xf8
          .byte 0x1e
          .byte 0xfa
          .byte 0x1e
          .byte 0xfa
          .byte 0x1e
          .byte 0xfc
          .byte 0x1e
          .byte 0xfc
          .byte 0x1e
          .byte 0xfe
          .byte 0x1e
          .byte 0xfe
          .byte 0x1e
          .byte 0x8
          .byte 0x1f
          .byte 0xf
          .byte 0x1f
          .byte 0x18
          .byte 0x1f
          .byte 0x1d
          .byte 0x1f
          .byte 0x28
          .byte 0x1f
          .byte 0x2f
          .byte 0x1f
          .byte 0x38
          .byte 0x1f
          .byte 0x3f
          .byte 0x1f
          .byte 0x48
          .byte 0x1f
          .byte 0x4d
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x59
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5b
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5d
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x5f
          .byte 0x1f
          .byte 0x68
          .byte 0x1f
          .byte 0x6f
          .byte 0x1f
          .byte 0xb8
          .byte 0x1f
          .byte 0xbb
          .byte 0x1f
          .byte 0xc8
          .byte 0x1f
          .byte 0xcb
          .byte 0x1f
          .byte 0xd8
          .byte 0x1f
          .byte 0xdb
          .byte 0x1f
          .byte 0xe8
          .byte 0x1f
          .byte 0xec
          .byte 0x1f
          .byte 0xf8
          .byte 0x1f
          .byte 0xfb
          .byte 0x1f
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0x7
          .byte 0x21
          .byte 0xb
          .byte 0x21
          .byte 0xd
          .byte 0x21
          .byte 0x10
          .byte 0x21
          .byte 0x12
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x15
          .byte 0x21
          .byte 0x19
          .byte 0x21
          .byte 0x1d
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x24
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x26
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x28
          .byte 0x21
          .byte 0x2a
          .byte 0x21
          .byte 0x2d
          .byte 0x21
          .byte 0x30
          .byte 0x21
          .byte 0x33
          .byte 0x21
          .byte 0x3e
          .byte 0x21
          .byte 0x3f
          .byte 0x21
          .byte 0x45
          .byte 0x21
          .byte 0x45
          .byte 0x21
          .byte 0x83
          .byte 0x21
          .byte 0x83
          .byte 0x21
          .byte 0x0
          .byte 0x2c
          .byte 0x2e
          .byte 0x2c
          .byte 0x60
          .byte 0x2c
          .byte 0x60
          .byte 0x2c
          .byte 0x62
          .byte 0x2c
          .byte 0x64
          .byte 0x2c
          .byte 0x67
          .byte 0x2c
          .byte 0x67
          .byte 0x2c
          .byte 0x69
          .byte 0x2c
          .byte 0x69
          .byte 0x2c
          .byte 0x6b
          .byte 0x2c
          .byte 0x6b
          .byte 0x2c
          .byte 0x6d
          .byte 0x2c
          .byte 0x70
          .byte 0x2c
          .byte 0x72
          .byte 0x2c
          .byte 0x72
          .byte 0x2c
          .byte 0x75
          .byte 0x2c
          .byte 0x75
          .byte 0x2c
          .byte 0x7e
          .byte 0x2c
          .byte 0x80
          .byte 0x2c
          .byte 0x82
          .byte 0x2c
          .byte 0x82
          .byte 0x2c
          .byte 0x84
          .byte 0x2c
          .byte 0x84
          .byte 0x2c
          .byte 0x86
          .byte 0x2c
          .byte 0x86
          .byte 0x2c
          .byte 0x88
          .byte 0x2c
          .byte 0x88
          .byte 0x2c
          .byte 0x8a
          .byte 0x2c
          .byte 0x8a
          .byte 0x2c
          .byte 0x8c
          .byte 0x2c
          .byte 0x8c
          .byte 0x2c
          .byte 0x8e
          .byte 0x2c
          .byte 0x8e
          .byte 0x2c
          .byte 0x90
          .byte 0x2c
          .byte 0x90
          .byte 0x2c
          .byte 0x92
          .byte 0x2c
          .byte 0x92
          .byte 0x2c
          .byte 0x94
          .byte 0x2c
          .byte 0x94
          .byte 0x2c
          .byte 0x96
          .byte 0x2c
          .byte 0x96
          .byte 0x2c
          .byte 0x98
          .byte 0x2c
          .byte 0x98
          .byte 0x2c
          .byte 0x9a
          .byte 0x2c
          .byte 0x9a
          .byte 0x2c
          .byte 0x9c
          .byte 0x2c
          .byte 0x9c
          .byte 0x2c
          .byte 0x9e
          .byte 0x2c
          .byte 0x9e
          .byte 0x2c
          .byte 0xa0
          .byte 0x2c
          .byte 0xa0
          .byte 0x2c
          .byte 0xa2
          .byte 0x2c
          .byte 0xa2
          .byte 0x2c
          .byte 0xa4
          .byte 0x2c
          .byte 0xa4
          .byte 0x2c
          .byte 0xa6
          .byte 0x2c
          .byte 0xa6
          .byte 0x2c
          .byte 0xa8
          .byte 0x2c
          .byte 0xa8
          .byte 0x2c
          .byte 0xaa
          .byte 0x2c
          .byte 0xaa
          .byte 0x2c
          .byte 0xac
          .byte 0x2c
          .byte 0xac
          .byte 0x2c
          .byte 0xae
          .byte 0x2c
          .byte 0xae
          .byte 0x2c
          .byte 0xb0
          .byte 0x2c
          .byte 0xb0
          .byte 0x2c
          .byte 0xb2
          .byte 0x2c
          .byte 0xb2
          .byte 0x2c
          .byte 0xb4
          .byte 0x2c
          .byte 0xb4
          .byte 0x2c
          .byte 0xb6
          .byte 0x2c
          .byte 0xb6
          .byte 0x2c
          .byte 0xb8
          .byte 0x2c
          .byte 0xb8
          .byte 0x2c
          .byte 0xba
          .byte 0x2c
          .byte 0xba
          .byte 0x2c
          .byte 0xbc
          .byte 0x2c
          .byte 0xbc
          .byte 0x2c
          .byte 0xbe
          .byte 0x2c
          .byte 0xbe
          .byte 0x2c
          .byte 0xc0
          .byte 0x2c
          .byte 0xc0
          .byte 0x2c
          .byte 0xc2
          .byte 0x2c
          .byte 0xc2
          .byte 0x2c
          .byte 0xc4
          .byte 0x2c
          .byte 0xc4
          .byte 0x2c
          .byte 0xc6
          .byte 0x2c
          .byte 0xc6
          .byte 0x2c
          .byte 0xc8
          .byte 0x2c
          .byte 0xc8
          .byte 0x2c
          .byte 0xca
          .byte 0x2c
          .byte 0xca
          .byte 0x2c
          .byte 0xcc
          .byte 0x2c
          .byte 0xcc
          .byte 0x2c
          .byte 0xce
          .byte 0x2c
          .byte 0xce
          .byte 0x2c
          .byte 0xd0
          .byte 0x2c
          .byte 0xd0
          .byte 0x2c
          .byte 0xd2
          .byte 0x2c
          .byte 0xd2
          .byte 0x2c
          .byte 0xd4
          .byte 0x2c
          .byte 0xd4
          .byte 0x2c
          .byte 0xd6
          .byte 0x2c
          .byte 0xd6
          .byte 0x2c
          .byte 0xd8
          .byte 0x2c
          .byte 0xd8
          .byte 0x2c
          .byte 0xda
          .byte 0x2c
          .byte 0xda
          .byte 0x2c
          .byte 0xdc
          .byte 0x2c
          .byte 0xdc
          .byte 0x2c
          .byte 0xde
          .byte 0x2c
          .byte 0xde
          .byte 0x2c
          .byte 0xe0
          .byte 0x2c
          .byte 0xe0
          .byte 0x2c
          .byte 0xe2
          .byte 0x2c
          .byte 0xe2
          .byte 0x2c
          .byte 0xeb
          .byte 0x2c
          .byte 0xeb
          .byte 0x2c
          .byte 0xed
          .byte 0x2c
          .byte 0xed
          .byte 0x2c
          .byte 0xf2
          .byte 0x2c
          .byte 0xf2
          .byte 0x2c
          .byte 0x40
          .byte 0xa6
          .byte 0x40
          .byte 0xa6
          .byte 0x42
          .byte 0xa6
          .byte 0x42
          .byte 0xa6
          .byte 0x44
          .byte 0xa6
          .byte 0x44
          .byte 0xa6
          .byte 0x46
          .byte 0xa6
          .byte 0x46
          .byte 0xa6
          .byte 0x48
          .byte 0xa6
          .byte 0x48
          .byte 0xa6
          .byte 0x4a
          .byte 0xa6
          .byte 0x4a
          .byte 0xa6
          .byte 0x4c
          .byte 0xa6
          .byte 0x4c
          .byte 0xa6
          .byte 0x4e
          .byte 0xa6
          .byte 0x4e
          .byte 0xa6
          .byte 0x50
          .byte 0xa6
          .byte 0x50
          .byte 0xa6
          .byte 0x52
          .byte 0xa6
          .byte 0x52
          .byte 0xa6
          .byte 0x54
          .byte 0xa6
          .byte 0x54
          .byte 0xa6
          .byte 0x56
          .byte 0xa6
          .byte 0x56
          .byte 0xa6
          .byte 0x58
          .byte 0xa6
          .byte 0x58
          .byte 0xa6
          .byte 0x5a
          .byte 0xa6
          .byte 0x5a
          .byte 0xa6
          .byte 0x5c
          .byte 0xa6
          .byte 0x5c
          .byte 0xa6
          .byte 0x5e
          .byte 0xa6
          .byte 0x5e
          .byte 0xa6
          .byte 0x60
          .byte 0xa6
          .byte 0x60
          .byte 0xa6
          .byte 0x62
          .byte 0xa6
          .byte 0x62
          .byte 0xa6
          .byte 0x64
          .byte 0xa6
          .byte 0x64
          .byte 0xa6
          .byte 0x66
          .byte 0xa6
          .byte 0x66
          .byte 0xa6
          .byte 0x68
          .byte 0xa6
          .byte 0x68
          .byte 0xa6
          .byte 0x6a
          .byte 0xa6
          .byte 0x6a
          .byte 0xa6
          .byte 0x6c
          .byte 0xa6
          .byte 0x6c
          .byte 0xa6
          .byte 0x80
          .byte 0xa6
          .byte 0x80
          .byte 0xa6
          .byte 0x82
          .byte 0xa6
          .byte 0x82
          .byte 0xa6
          .byte 0x84
          .byte 0xa6
          .byte 0x84
          .byte 0xa6
          .byte 0x86
          .byte 0xa6
          .byte 0x86
          .byte 0xa6
          .byte 0x88
          .byte 0xa6
          .byte 0x88
          .byte 0xa6
          .byte 0x8a
          .byte 0xa6
          .byte 0x8a
          .byte 0xa6
          .byte 0x8c
          .byte 0xa6
          .byte 0x8c
          .byte 0xa6
          .byte 0x8e
          .byte 0xa6
          .byte 0x8e
          .byte 0xa6
          .byte 0x90
          .byte 0xa6
          .byte 0x90
          .byte 0xa6
          .byte 0x92
          .byte 0xa6
          .byte 0x92
          .byte 0xa6
          .byte 0x94
          .byte 0xa6
          .byte 0x94
          .byte 0xa6
          .byte 0x96
          .byte 0xa6
          .byte 0x96
          .byte 0xa6
          .byte 0x22
          .byte 0xa7
          .byte 0x22
          .byte 0xa7
          .byte 0x24
          .byte 0xa7
          .byte 0x24
          .byte 0xa7
          .byte 0x26
          .byte 0xa7
          .byte 0x26
          .byte 0xa7
          .byte 0x28
          .byte 0xa7
          .byte 0x28
          .byte 0xa7
          .byte 0x2a
          .byte 0xa7
          .byte 0x2a
          .byte 0xa7
          .byte 0x2c
          .byte 0xa7
          .byte 0x2c
          .byte 0xa7
          .byte 0x2e
          .byte 0xa7
          .byte 0x2e
          .byte 0xa7
          .byte 0x32
          .byte 0xa7
          .byte 0x32
          .byte 0xa7
          .byte 0x34
          .byte 0xa7
          .byte 0x34
          .byte 0xa7
          .byte 0x36
          .byte 0xa7
          .byte 0x36
          .byte 0xa7
          .byte 0x38
          .byte 0xa7
          .byte 0x38
          .byte 0xa7
          .byte 0x3a
          .byte 0xa7
          .byte 0x3a
          .byte 0xa7
          .byte 0x3c
          .byte 0xa7
          .byte 0x3c
          .byte 0xa7
          .byte 0x3e
          .byte 0xa7
          .byte 0x3e
          .byte 0xa7
          .byte 0x40
          .byte 0xa7
          .byte 0x40
          .byte 0xa7
          .byte 0x42
          .byte 0xa7
          .byte 0x42
          .byte 0xa7
          .byte 0x44
          .byte 0xa7
          .byte 0x44
          .byte 0xa7
          .byte 0x46
          .byte 0xa7
          .byte 0x46
          .byte 0xa7
          .byte 0x48
          .byte 0xa7
          .byte 0x48
          .byte 0xa7
          .byte 0x4a
          .byte 0xa7
          .byte 0x4a
          .byte 0xa7
          .byte 0x4c
          .byte 0xa7
          .byte 0x4c
          .byte 0xa7
          .byte 0x4e
          .byte 0xa7
          .byte 0x4e
          .byte 0xa7
          .byte 0x50
          .byte 0xa7
          .byte 0x50
          .byte 0xa7
          .byte 0x52
          .byte 0xa7
          .byte 0x52
          .byte 0xa7
          .byte 0x54
          .byte 0xa7
          .byte 0x54
          .byte 0xa7
          .byte 0x56
          .byte 0xa7
          .byte 0x56
          .byte 0xa7
          .byte 0x58
          .byte 0xa7
          .byte 0x58
          .byte 0xa7
          .byte 0x5a
          .byte 0xa7
          .byte 0x5a
          .byte 0xa7
          .byte 0x5c
          .byte 0xa7
          .byte 0x5c
          .byte 0xa7
          .byte 0x5e
          .byte 0xa7
          .byte 0x5e
          .byte 0xa7
          .byte 0x60
          .byte 0xa7
          .byte 0x60
          .byte 0xa7
          .byte 0x62
          .byte 0xa7
          .byte 0x62
          .byte 0xa7
          .byte 0x64
          .byte 0xa7
          .byte 0x64
          .byte 0xa7
          .byte 0x66
          .byte 0xa7
          .byte 0x66
          .byte 0xa7
          .byte 0x68
          .byte 0xa7
          .byte 0x68
          .byte 0xa7
          .byte 0x6a
          .byte 0xa7
          .byte 0x6a
          .byte 0xa7
          .byte 0x6c
          .byte 0xa7
          .byte 0x6c
          .byte 0xa7
          .byte 0x6e
          .byte 0xa7
          .byte 0x6e
          .byte 0xa7
          .byte 0x79
          .byte 0xa7
          .byte 0x79
          .byte 0xa7
          .byte 0x7b
          .byte 0xa7
          .byte 0x7b
          .byte 0xa7
          .byte 0x7d
          .byte 0xa7
          .byte 0x7e
          .byte 0xa7
          .byte 0x80
          .byte 0xa7
          .byte 0x80
          .byte 0xa7
          .byte 0x82
          .byte 0xa7
          .byte 0x82
          .byte 0xa7
          .byte 0x84
          .byte 0xa7
          .byte 0x84
          .byte 0xa7
          .byte 0x86
          .byte 0xa7
          .byte 0x86
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8b
          .byte 0xa7
          .byte 0x8d
          .byte 0xa7
          .byte 0x8d
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x90
          .byte 0xa7
          .byte 0x92
          .byte 0xa7
          .byte 0x92
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xa0
          .byte 0xa7
          .byte 0xa2
          .byte 0xa7
          .byte 0xa2
          .byte 0xa7
          .byte 0xa4
          .byte 0xa7
          .byte 0xa4
          .byte 0xa7
          .byte 0xa6
          .byte 0xa7
          .byte 0xa6
          .byte 0xa7
          .byte 0xa8
          .byte 0xa7
          .byte 0xa8
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0xaa
          .byte 0xa7
          .byte 0x21
          .byte 0xff
          .byte 0x3a
          .byte 0xff
.L_43c480:
          .byte 0xc5
          .byte 0x1
          .byte 0xc5
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xc8
          .byte 0x1
          .byte 0xcb
          .byte 0x1
          .byte 0xcb
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0xf2
          .byte 0x1
          .byte 0x88
          .byte 0x1f
          .byte 0x8f
          .byte 0x1f
          .byte 0x98
          .byte 0x1f
          .byte 0x9f
          .byte 0x1f
          .byte 0xa8
          .byte 0x1f
          .byte 0xaf
          .byte 0x1f
          .byte 0xbc
          .byte 0x1f
          .byte 0xbc
          .byte 0x1f
          .byte 0xcc
          .byte 0x1f
          .byte 0xcc
          .byte 0x1f
          .byte 0xfc
          .byte 0x1f
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c4b0:
          .string "_"
          .byte 0x5f
          .byte 0x0
          .byte 0x3f
          .byte 0x20
          .byte 0x40
          .byte 0x20
          .byte 0x54
          .byte 0x20
          .byte 0x54
          .byte 0x20
          .byte 0x33
          .byte 0xfe
          .byte 0x34
          .byte 0xfe
          .byte 0x4d
          .byte 0xfe
          .byte 0x4f
          .byte 0xfe
          .byte 0x3f
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c4e0:
          .byte 0xa0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x66
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xf9
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xd9
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xce
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c520:
          .string "0"
          .byte 0x39
          .byte 0x0
          .byte 0x60
          .byte 0x6
          .byte 0x69
          .byte 0x6
          .byte 0xf0
          .byte 0x6
          .byte 0xf9
          .byte 0x6
          .byte 0xc0
          .byte 0x7
          .byte 0xc9
          .byte 0x7
          .byte 0x66
          .byte 0x9
          .byte 0x6f
          .byte 0x9
          .byte 0xe6
          .byte 0x9
          .byte 0xef
          .byte 0x9
          .byte 0x66
          .byte 0xa
          .byte 0x6f
          .byte 0xa
          .byte 0xe6
          .byte 0xa
          .byte 0xef
          .byte 0xa
          .byte 0x66
          .byte 0xb
          .byte 0x6f
          .byte 0xb
          .byte 0xe6
          .byte 0xb
          .byte 0xef
          .byte 0xb
          .byte 0x66
          .byte 0xc
          .byte 0x6f
          .byte 0xc
          .byte 0xe6
          .byte 0xc
          .byte 0xef
          .byte 0xc
          .byte 0x66
          .byte 0xd
          .byte 0x6f
          .byte 0xd
          .byte 0x50
          .byte 0xe
          .byte 0x59
          .byte 0xe
          .byte 0xd0
          .byte 0xe
          .byte 0xd9
          .byte 0xe
          .byte 0x20
          .byte 0xf
          .byte 0x29
          .byte 0xf
          .byte 0x40
          .byte 0x10
          .byte 0x49
          .byte 0x10
          .byte 0x90
          .byte 0x10
          .byte 0x99
          .byte 0x10
          .byte 0xe0
          .byte 0x17
          .byte 0xe9
          .byte 0x17
          .byte 0x10
          .byte 0x18
          .byte 0x19
          .byte 0x18
          .byte 0x46
          .byte 0x19
          .byte 0x4f
          .byte 0x19
          .byte 0xd0
          .byte 0x19
          .byte 0xd9
          .byte 0x19
          .byte 0x80
          .byte 0x1a
          .byte 0x89
          .byte 0x1a
          .byte 0x90
          .byte 0x1a
          .byte 0x99
          .byte 0x1a
          .byte 0x50
          .byte 0x1b
          .byte 0x59
          .byte 0x1b
          .byte 0xb0
          .byte 0x1b
          .byte 0xb9
          .byte 0x1b
          .byte 0x40
          .byte 0x1c
          .byte 0x49
          .byte 0x1c
          .byte 0x50
          .byte 0x1c
          .byte 0x59
          .byte 0x1c
          .byte 0x20
          .byte 0xa6
          .byte 0x29
          .byte 0xa6
          .byte 0xd0
          .byte 0xa8
          .byte 0xd9
          .byte 0xa8
          .byte 0x0
          .byte 0xa9
          .byte 0x9
          .byte 0xa9
          .byte 0xd0
          .byte 0xa9
          .byte 0xd9
          .byte 0xa9
          .byte 0x50
          .byte 0xaa
          .byte 0x59
          .byte 0xaa
          .byte 0xf0
          .byte 0xab
          .byte 0xf9
          .byte 0xab
          .byte 0x10
          .byte 0xff
          .byte 0x19
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c5b0:

            xchg EBX,EAX
            outsd DX,DWORD PTR [RSI]
            add DWORD PTR [RAX],EAX
            lahf 
            outsd DX,DWORD PTR [RSI]
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43c5c0:

            mov AL,2
            rol DWORD PTR [RDX],198
            add DL,CL
            add AH,AL
            add AH,AH
            add CH,AH
            add CH,AH
            add CH,DH
            add CH,DH
            add DH,BYTE PTR [RBX+RAX*1+116]
            add EDI,DWORD PTR [RDX+3]
            jp .L_43c5df
          .byte 0x59
          .byte 0x5
          .byte 0x59
.L_43c5df:

            add EAX,104859200
            in EAX,6
            out 6,AL
            hlt 
          .byte 0x7
          .byte 0xf5
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0xfa
          .byte 0x7
          .byte 0x1a
          .byte 0x8
          .byte 0x1a
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x24
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x28
          .byte 0x8
          .byte 0x71
          .byte 0x9
          .byte 0x71
          .byte 0x9
          .byte 0x46
          .byte 0xe
          .byte 0x46
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xc6
          .byte 0xe
          .byte 0xfc
          .byte 0x10
          .byte 0xfc
          .byte 0x10
          .byte 0xd7
          .byte 0x17
          .byte 0xd7
          .byte 0x17
          .byte 0x43
          .byte 0x18
          .byte 0x43
          .byte 0x18
          .byte 0xa7
          .byte 0x1a
          .byte 0xa7
          .byte 0x1a
          .byte 0x78
          .byte 0x1c
          .byte 0x7d
          .byte 0x1c
          .byte 0x2c
          .byte 0x1d
          .byte 0x6a
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0x78
          .byte 0x1d
          .byte 0x9b
          .byte 0x1d
          .byte 0xbf
          .byte 0x1d
          .byte 0x71
          .byte 0x20
          .byte 0x71
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x7f
          .byte 0x20
          .byte 0x90
          .byte 0x20
          .byte 0x9c
          .byte 0x20
          .byte 0x7c
          .byte 0x2c
          .byte 0x7d
          .byte 0x2c
          .byte 0x6f
          .byte 0x2d
          .byte 0x6f
          .byte 0x2d
          .byte 0x2f
          .byte 0x2e
          .byte 0x2f
          .byte 0x2e
          .byte 0x5
          .byte 0x30
          .byte 0x5
          .byte 0x30
          .byte 0x31
          .byte 0x30
          .byte 0x35
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x3b
          .byte 0x30
          .byte 0x9d
          .byte 0x30
          .byte 0x9e
          .byte 0x30
          .byte 0xfc
          .byte 0x30
          .byte 0xfe
          .byte 0x30
          .byte 0x15
          .byte 0xa0
          .byte 0x15
          .byte 0xa0
          .byte 0xf8
          .byte 0xa4
          .byte 0xfd
          .byte 0xa4
          .byte 0xc
          .byte 0xa6
          .byte 0xc
          .byte 0xa6
          .byte 0x7f
          .byte 0xa6
          .byte 0x7f
          .byte 0xa6
          .byte 0x17
          .byte 0xa7
          .byte 0x1f
          .byte 0xa7
          .byte 0x70
          .byte 0xa7
          .byte 0x70
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0x88
          .byte 0xa7
          .byte 0xf8
          .byte 0xa7
          .byte 0xf9
          .byte 0xa7
          .byte 0xcf
          .byte 0xa9
          .byte 0xcf
          .byte 0xa9
          .byte 0x70
          .byte 0xaa
          .byte 0x70
          .byte 0xaa
          .byte 0xdd
          .byte 0xaa
          .byte 0xdd
          .byte 0xaa
          .byte 0xf3
          .byte 0xaa
          .byte 0xf4
          .byte 0xaa
          .byte 0x70
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0x9e
          .byte 0xff
          .byte 0x9f
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c6a0:
          .byte 0x28
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x1a
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x82
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb6
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xb9
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xbd
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xc5
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0xea
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x6b
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x86
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x9f
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xd3
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0xee
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x7
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x56
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x6f
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xda
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xdc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xe1
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0xfc
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x14
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x36
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x70
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x88
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x8f
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc2
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xc9
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0xcb
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c7a0:
          .string "a"
          .byte 0x7a
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x3
          .byte 0x1
          .byte 0x3
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0x9
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xb
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xd
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0xf
          .byte 0x1
          .byte 0x11
          .byte 0x1
          .byte 0x11
          .byte 0x1
          .byte 0x13
          .byte 0x1
          .byte 0x13
          .byte 0x1
          .byte 0x15
          .byte 0x1
          .byte 0x15
          .byte 0x1
          .byte 0x17
          .byte 0x1
          .byte 0x17
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x19
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1b
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x1d
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x1f
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x21
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x23
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x25
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x27
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x29
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x2b
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2d
          .byte 0x1
          .byte 0x2f
          .byte 0x1
          .byte 0x2f
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x31
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x33
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x35
          .byte 0x1
          .byte 0x37
          .byte 0x1
          .byte 0x38
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3a
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x3c
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x3e
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x40
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x42
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x44
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x46
          .byte 0x1
          .byte 0x48
          .byte 0x1
          .byte 0x49
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x4b
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0x4d
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x4f
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x51
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x53
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x55
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x57
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x59
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x5b
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x5d
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x5f
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x61
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x63
          .byte 0x1
          .byte 0x65
          .byte 0x1
          .byte 0x65
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x67
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x69
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x6b
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x6d
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x6f
          .byte 0x1
          .byte 0x71
          .byte 0x1
          .byte 0x71
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x73
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x75
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x77
          .byte 0x1
          .byte 0x7a
          .byte 0x1
          .byte 0x7a
          .byte 0x1
          .byte 0x7c
          .byte 0x1
          .byte 0x7c
          .byte 0x1
          .byte 0x7e
          .byte 0x1
          .byte 0x80
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x83
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x85
          .byte 0x1
          .byte 0x88
          .byte 0x1
          .byte 0x88
          .byte 0x1
          .byte 0x8c
          .byte 0x1
          .byte 0x8d
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x92
          .byte 0x1
          .byte 0x95
          .byte 0x1
          .byte 0x95
          .byte 0x1
          .byte 0x99
          .byte 0x1
          .byte 0x9b
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0x9e
          .byte 0x1
          .byte 0xa1
          .byte 0x1
          .byte 0xa1
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0xa3
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0xa5
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0xa8
          .byte 0x1
          .byte 0xaa
          .byte 0x1
          .byte 0xab
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0xad
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb4
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb6
          .byte 0x1
          .byte 0xb9
          .byte 0x1
          .byte 0xba
          .byte 0x1
          .byte 0xbd
          .byte 0x1
          .byte 0xbf
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc6
          .byte 0x1
          .byte 0xc9
          .byte 0x1
          .byte 0xc9
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xcc
          .byte 0x1
          .byte 0xce
          .byte 0x1
          .byte 0xce
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd0
          .byte 0x1
          .byte 0xd2
          .byte 0x1
          .byte 0xd2
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd4
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xd6
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xd8
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xda
          .byte 0x1
          .byte 0xdc
          .byte 0x1
          .byte 0xdd
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xdf
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xe1
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xe3
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xe5
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe7
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xe9
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xeb
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0xed
          .byte 0x1
          .byte 0xef
          .byte 0x1
          .byte 0xf0
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0xf3
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0xf5
          .byte 0x1
          .byte 0xf9
          .byte 0x1
          .byte 0xf9
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0xfb
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0xfd
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x3
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x5
          .byte 0x2
          .byte 0x7
          .byte 0x2
          .byte 0x7
          .byte 0x2
          .byte 0x9
          .byte 0x2
          .byte 0x9
          .byte 0x2
          .byte 0xb
          .byte 0x2
          .byte 0xb
          .byte 0x2
          .byte 0xd
          .byte 0x2
          .byte 0xd
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0xf
          .byte 0x2
          .byte 0x11
          .byte 0x2
          .byte 0x11
          .byte 0x2
          .byte 0x13
          .byte 0x2
          .byte 0x13
          .byte 0x2
          .byte 0x15
          .byte 0x2
          .byte 0x15
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x17
          .byte 0x2
          .byte 0x19
          .byte 0x2
          .byte 0x19
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0x1b
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0x1d
          .byte 0x2
          .byte 0x1f
          .byte 0x2
          .byte 0x1f
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x21
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x23
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x25
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x27
          .byte 0x2
          .byte 0x29
          .byte 0x2
          .byte 0x29
          .byte 0x2
          .byte 0x2b
          .byte 0x2
          .byte 0x2b
          .byte 0x2
          .byte 0x2d
          .byte 0x2
          .byte 0x2d
          .byte 0x2
          .byte 0x2f
          .byte 0x2
          .byte 0x2f
          .byte 0x2
          .byte 0x31
          .byte 0x2
          .byte 0x31
          .byte 0x2
          .byte 0x33
          .byte 0x2
          .byte 0x39
          .byte 0x2
          .byte 0x3c
          .byte 0x2
          .byte 0x3c
          .byte 0x2
          .byte 0x3f
          .byte 0x2
          .byte 0x40
          .byte 0x2
          .byte 0x42
          .byte 0x2
          .byte 0x42
          .byte 0x2
          .byte 0x47
          .byte 0x2
          .byte 0x47
          .byte 0x2
          .byte 0x49
          .byte 0x2
          .byte 0x49
          .byte 0x2
          .byte 0x4b
          .byte 0x2
          .byte 0x4b
          .byte 0x2
          .byte 0x4d
          .byte 0x2
          .byte 0x4d
          .byte 0x2
          .byte 0x4f
          .byte 0x2
          .byte 0x93
          .byte 0x2
          .byte 0x95
          .byte 0x2
          .byte 0xaf
          .byte 0x2
          .byte 0x71
          .byte 0x3
          .byte 0x71
          .byte 0x3
          .byte 0x73
          .byte 0x3
          .byte 0x73
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x77
          .byte 0x3
          .byte 0x7b
          .byte 0x3
          .byte 0x7d
          .byte 0x3
          .byte 0x90
          .byte 0x3
          .byte 0x90
          .byte 0x3
          .byte 0xac
          .byte 0x3
          .byte 0xce
          .byte 0x3
          .byte 0xd0
          .byte 0x3
          .byte 0xd1
          .byte 0x3
          .byte 0xd5
          .byte 0x3
          .byte 0xd7
          .byte 0x3
          .byte 0xd9
          .byte 0x3
          .byte 0xd9
          .byte 0x3
          .byte 0xdb
          .byte 0x3
          .byte 0xdb
          .byte 0x3
          .byte 0xdd
          .byte 0x3
          .byte 0xdd
          .byte 0x3
          .byte 0xdf
          .byte 0x3
          .byte 0xdf
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xe1
          .byte 0x3
          .byte 0xe3
          .byte 0x3
          .byte 0xe3
          .byte 0x3
          .byte 0xe5
          .byte 0x3
          .byte 0xe5
          .byte 0x3
          .byte 0xe7
          .byte 0x3
          .byte 0xe7
          .byte 0x3
          .byte 0xe9
          .byte 0x3
          .byte 0xe9
          .byte 0x3
          .byte 0xeb
          .byte 0x3
          .byte 0xeb
          .byte 0x3
          .byte 0xed
          .byte 0x3
          .byte 0xed
          .byte 0x3
          .byte 0xef
          .byte 0x3
          .byte 0xf3
          .byte 0x3
          .byte 0xf5
          .byte 0x3
          .byte 0xf5
          .byte 0x3
          .byte 0xf8
          .byte 0x3
          .byte 0xf8
          .byte 0x3
          .byte 0xfb
          .byte 0x3
          .byte 0xfc
          .byte 0x3
          .byte 0x30
          .byte 0x4
          .byte 0x5f
          .byte 0x4
          .byte 0x61
          .byte 0x4
          .byte 0x61
          .byte 0x4
          .byte 0x63
          .byte 0x4
          .byte 0x63
          .byte 0x4
          .byte 0x65
          .byte 0x4
          .byte 0x65
          .byte 0x4
          .byte 0x67
          .byte 0x4
          .byte 0x67
          .byte 0x4
          .byte 0x69
          .byte 0x4
          .byte 0x69
          .byte 0x4
          .byte 0x6b
          .byte 0x4
          .byte 0x6b
          .byte 0x4
          .byte 0x6d
          .byte 0x4
          .byte 0x6d
          .byte 0x4
          .byte 0x6f
          .byte 0x4
          .byte 0x6f
          .byte 0x4
          .byte 0x71
          .byte 0x4
          .byte 0x71
          .byte 0x4
          .byte 0x73
          .byte 0x4
          .byte 0x73
          .byte 0x4
          .byte 0x75
          .byte 0x4
          .byte 0x75
          .byte 0x4
          .byte 0x77
          .byte 0x4
          .byte 0x77
          .byte 0x4
          .byte 0x79
          .byte 0x4
          .byte 0x79
          .byte 0x4
          .byte 0x7b
          .byte 0x4
          .byte 0x7b
          .byte 0x4
          .byte 0x7d
          .byte 0x4
          .byte 0x7d
          .byte 0x4
          .byte 0x7f
          .byte 0x4
          .byte 0x7f
          .byte 0x4
          .byte 0x81
          .byte 0x4
          .byte 0x81
          .byte 0x4
          .byte 0x8b
          .byte 0x4
          .byte 0x8b
          .byte 0x4
          .byte 0x8d
          .byte 0x4
          .byte 0x8d
          .byte 0x4
          .byte 0x8f
          .byte 0x4
          .byte 0x8f
          .byte 0x4
          .byte 0x91
          .byte 0x4
          .byte 0x91
          .byte 0x4
          .byte 0x93
          .byte 0x4
          .byte 0x93
          .byte 0x4
          .byte 0x95
          .byte 0x4
          .byte 0x95
          .byte 0x4
          .byte 0x97
          .byte 0x4
          .byte 0x97
          .byte 0x4
          .byte 0x99
          .byte 0x4
          .byte 0x99
          .byte 0x4
          .byte 0x9b
          .byte 0x4
          .byte 0x9b
          .byte 0x4
          .byte 0x9d
          .byte 0x4
          .byte 0x9d
          .byte 0x4
          .byte 0x9f
          .byte 0x4
          .byte 0x9f
          .byte 0x4
          .byte 0xa1
          .byte 0x4
          .byte 0xa1
          .byte 0x4
          .byte 0xa3
          .byte 0x4
          .byte 0xa3
          .byte 0x4
          .byte 0xa5
          .byte 0x4
          .byte 0xa5
          .byte 0x4
          .byte 0xa7
          .byte 0x4
          .byte 0xa7
          .byte 0x4
          .byte 0xa9
          .byte 0x4
          .byte 0xa9
          .byte 0x4
          .byte 0xab
          .byte 0x4
          .byte 0xab
          .byte 0x4
          .byte 0xad
          .byte 0x4
          .byte 0xad
          .byte 0x4
          .byte 0xaf
          .byte 0x4
          .byte 0xaf
          .byte 0x4
          .byte 0xb1
          .byte 0x4
          .byte 0xb1
          .byte 0x4
          .byte 0xb3
          .byte 0x4
          .byte 0xb3
          .byte 0x4
          .byte 0xb5
          .byte 0x4
          .byte 0xb5
          .byte 0x4
          .byte 0xb7
          .byte 0x4
          .byte 0xb7
          .byte 0x4
          .byte 0xb9
          .byte 0x4
          .byte 0xb9
          .byte 0x4
          .byte 0xbb
          .byte 0x4
          .byte 0xbb
          .byte 0x4
          .byte 0xbd
          .byte 0x4
          .byte 0xbd
          .byte 0x4
          .byte 0xbf
          .byte 0x4
          .byte 0xbf
          .byte 0x4
          .byte 0xc2
          .byte 0x4
          .byte 0xc2
          .byte 0x4
          .byte 0xc4
          .byte 0x4
          .byte 0xc4
          .byte 0x4
          .byte 0xc6
          .byte 0x4
          .byte 0xc6
          .byte 0x4
          .byte 0xc8
          .byte 0x4
          .byte 0xc8
          .byte 0x4
          .byte 0xca
          .byte 0x4
          .byte 0xca
          .byte 0x4
          .byte 0xcc
          .byte 0x4
          .byte 0xcc
          .byte 0x4
          .byte 0xce
          .byte 0x4
          .byte 0xcf
          .byte 0x4
          .byte 0xd1
          .byte 0x4
          .byte 0xd1
          .byte 0x4
          .byte 0xd3
          .byte 0x4
          .byte 0xd3
          .byte 0x4
          .byte 0xd5
          .byte 0x4
          .byte 0xd5
          .byte 0x4
          .byte 0xd7
          .byte 0x4
          .byte 0xd7
          .byte 0x4
          .byte 0xd9
          .byte 0x4
          .byte 0xd9
          .byte 0x4
          .byte 0xdb
          .byte 0x4
          .byte 0xdb
          .byte 0x4
          .byte 0xdd
          .byte 0x4
          .byte 0xdd
          .byte 0x4
          .byte 0xdf
          .byte 0x4
          .byte 0xdf
          .byte 0x4
          .byte 0xe1
          .byte 0x4
          .byte 0xe1
          .byte 0x4
          .byte 0xe3
          .byte 0x4
          .byte 0xe3
          .byte 0x4
          .byte 0xe5
          .byte 0x4
          .byte 0xe5
          .byte 0x4
          .byte 0xe7
          .byte 0x4
          .byte 0xe7
          .byte 0x4
          .byte 0xe9
          .byte 0x4
          .byte 0xe9
          .byte 0x4
          .byte 0xeb
          .byte 0x4
          .byte 0xeb
          .byte 0x4
          .byte 0xed
          .byte 0x4
          .byte 0xed
          .byte 0x4
          .byte 0xef
          .byte 0x4
          .byte 0xef
          .byte 0x4
          .byte 0xf1
          .byte 0x4
          .byte 0xf1
          .byte 0x4
          .byte 0xf3
          .byte 0x4
          .byte 0xf3
          .byte 0x4
          .byte 0xf5
          .byte 0x4
          .byte 0xf5
          .byte 0x4
          .byte 0xf7
          .byte 0x4
          .byte 0xf7
          .byte 0x4
          .byte 0xf9
          .byte 0x4
          .byte 0xf9
          .byte 0x4
          .byte 0xfb
          .byte 0x4
          .byte 0xfb
          .byte 0x4
          .byte 0xfd
          .byte 0x4
          .byte 0xfd
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0xff
          .byte 0x4
          .byte 0x1
          .byte 0x5
          .byte 0x1
          .byte 0x5
          .byte 0x3
          .byte 0x5
          .byte 0x3
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x9
          .byte 0x5
          .byte 0x9
          .byte 0x5
          .byte 0xb
          .byte 0x5
          .byte 0xb
          .byte 0x5
          .byte 0xd
          .byte 0x5
          .byte 0xd
          .byte 0x5
          .byte 0xf
          .byte 0x5
          .byte 0xf
          .byte 0x5
          .byte 0x11
          .byte 0x5
          .byte 0x11
          .byte 0x5
          .byte 0x13
          .byte 0x5
          .byte 0x13
          .byte 0x5
          .byte 0x15
          .byte 0x5
          .byte 0x15
          .byte 0x5
          .byte 0x17
          .byte 0x5
          .byte 0x17
          .byte 0x5
          .byte 0x19
          .byte 0x5
          .byte 0x19
          .byte 0x5
          .byte 0x1b
          .byte 0x5
          .byte 0x1b
          .byte 0x5
          .byte 0x1d
          .byte 0x5
          .byte 0x1d
          .byte 0x5
          .byte 0x1f
          .byte 0x5
          .byte 0x1f
          .byte 0x5
          .byte 0x21
          .byte 0x5
          .byte 0x21
          .byte 0x5
          .byte 0x23
          .byte 0x5
          .byte 0x23
          .byte 0x5
          .byte 0x25
          .byte 0x5
          .byte 0x25
          .byte 0x5
          .byte 0x27
          .byte 0x5
          .byte 0x27
          .byte 0x5
          .byte 0x61
          .byte 0x5
          .byte 0x87
          .byte 0x5
          .byte 0x0
          .byte 0x1d
          .byte 0x2b
          .byte 0x1d
          .byte 0x6b
          .byte 0x1d
          .byte 0x77
          .byte 0x1d
          .byte 0x79
          .byte 0x1d
          .byte 0x9a
          .byte 0x1d
          .byte 0x1
          .byte 0x1e
          .byte 0x1
          .byte 0x1e
          .byte 0x3
          .byte 0x1e
          .byte 0x3
          .byte 0x1e
          .byte 0x5
          .byte 0x1e
          .byte 0x5
          .byte 0x1e
          .byte 0x7
          .byte 0x1e
          .byte 0x7
          .byte 0x1e
          .byte 0x9
          .byte 0x1e
          .byte 0x9
          .byte 0x1e
          .byte 0xb
          .byte 0x1e
          .byte 0xb
          .byte 0x1e
          .byte 0xd
          .byte 0x1e
          .byte 0xd
          .byte 0x1e
          .byte 0xf
          .byte 0x1e
          .byte 0xf
          .byte 0x1e
          .byte 0x11
          .byte 0x1e
          .byte 0x11
          .byte 0x1e
          .byte 0x13
          .byte 0x1e
          .byte 0x13
          .byte 0x1e
          .byte 0x15
          .byte 0x1e
          .byte 0x15
          .byte 0x1e
          .byte 0x17
          .byte 0x1e
          .byte 0x17
          .byte 0x1e
          .byte 0x19
          .byte 0x1e
          .byte 0x19
          .byte 0x1e
          .byte 0x1b
          .byte 0x1e
          .byte 0x1b
          .byte 0x1e
          .byte 0x1d
          .byte 0x1e
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x1e
          .byte 0x1f
          .byte 0x1e
          .byte 0x21
          .byte 0x1e
          .byte 0x21
          .byte 0x1e
          .byte 0x23
          .byte 0x1e
          .byte 0x23
          .byte 0x1e
          .byte 0x25
          .byte 0x1e
          .byte 0x25
          .byte 0x1e
          .byte 0x27
          .byte 0x1e
          .byte 0x27
          .byte 0x1e
          .byte 0x29
          .byte 0x1e
          .byte 0x29
          .byte 0x1e
          .byte 0x2b
          .byte 0x1e
          .byte 0x2b
          .byte 0x1e
          .byte 0x2d
          .byte 0x1e
          .byte 0x2d
          .byte 0x1e
          .byte 0x2f
          .byte 0x1e
          .byte 0x2f
          .byte 0x1e
          .byte 0x31
          .byte 0x1e
          .byte 0x31
          .byte 0x1e
          .byte 0x33
          .byte 0x1e
          .byte 0x33
          .byte 0x1e
          .byte 0x35
          .byte 0x1e
          .byte 0x35
          .byte 0x1e
          .byte 0x37
          .byte 0x1e
          .byte 0x37
          .byte 0x1e
          .byte 0x39
          .byte 0x1e
          .byte 0x39
          .byte 0x1e
          .byte 0x3b
          .byte 0x1e
          .byte 0x3b
          .byte 0x1e
          .byte 0x3d
          .byte 0x1e
          .byte 0x3d
          .byte 0x1e
          .byte 0x3f
          .byte 0x1e
          .byte 0x3f
          .byte 0x1e
          .byte 0x41
          .byte 0x1e
          .byte 0x41
          .byte 0x1e
          .byte 0x43
          .byte 0x1e
          .byte 0x43
          .byte 0x1e
          .byte 0x45
          .byte 0x1e
          .byte 0x45
          .byte 0x1e
          .byte 0x47
          .byte 0x1e
          .byte 0x47
          .byte 0x1e
          .byte 0x49
          .byte 0x1e
          .byte 0x49
          .byte 0x1e
          .byte 0x4b
          .byte 0x1e
          .byte 0x4b
          .byte 0x1e
          .byte 0x4d
          .byte 0x1e
          .byte 0x4d
          .byte 0x1e
          .byte 0x4f
          .byte 0x1e
          .byte 0x4f
          .byte 0x1e
          .byte 0x51
          .byte 0x1e
          .byte 0x51
          .byte 0x1e
          .byte 0x53
          .byte 0x1e
          .byte 0x53
          .byte 0x1e
          .byte 0x55
          .byte 0x1e
          .byte 0x55
          .byte 0x1e
          .byte 0x57
          .byte 0x1e
          .byte 0x57
          .byte 0x1e
          .byte 0x59
          .byte 0x1e
          .byte 0x59
          .byte 0x1e
          .byte 0x5b
          .byte 0x1e
          .byte 0x5b
          .byte 0x1e
          .byte 0x5d
          .byte 0x1e
          .byte 0x5d
          .byte 0x1e
          .byte 0x5f
          .byte 0x1e
          .byte 0x5f
          .byte 0x1e
          .byte 0x61
          .byte 0x1e
          .byte 0x61
          .byte 0x1e
          .byte 0x63
          .byte 0x1e
          .byte 0x63
          .byte 0x1e
          .byte 0x65
          .byte 0x1e
          .byte 0x65
          .byte 0x1e
          .byte 0x67
          .byte 0x1e
          .byte 0x67
          .byte 0x1e
          .byte 0x69
          .byte 0x1e
          .byte 0x69
          .byte 0x1e
          .byte 0x6b
          .byte 0x1e
          .byte 0x6b
          .byte 0x1e
          .byte 0x6d
          .byte 0x1e
          .byte 0x6d
          .byte 0x1e
          .byte 0x6f
          .byte 0x1e
          .byte 0x6f
          .byte 0x1e
          .byte 0x71
          .byte 0x1e
          .byte 0x71
          .byte 0x1e
          .byte 0x73
          .byte 0x1e
          .byte 0x73
          .byte 0x1e
          .byte 0x75
          .byte 0x1e
          .byte 0x75
          .byte 0x1e
          .byte 0x77
          .byte 0x1e
          .byte 0x77
          .byte 0x1e
          .byte 0x79
          .byte 0x1e
          .byte 0x79
          .byte 0x1e
          .byte 0x7b
          .byte 0x1e
          .byte 0x7b
          .byte 0x1e
          .byte 0x7d
          .byte 0x1e
          .byte 0x7d
          .byte 0x1e
          .byte 0x7f
          .byte 0x1e
          .byte 0x7f
          .byte 0x1e
          .byte 0x81
          .byte 0x1e
          .byte 0x81
          .byte 0x1e
          .byte 0x83
          .byte 0x1e
          .byte 0x83
          .byte 0x1e
          .byte 0x85
          .byte 0x1e
          .byte 0x85
          .byte 0x1e
          .byte 0x87
          .byte 0x1e
          .byte 0x87
          .byte 0x1e
          .byte 0x89
          .byte 0x1e
          .byte 0x89
          .byte 0x1e
          .byte 0x8b
          .byte 0x1e
          .byte 0x8b
          .byte 0x1e
          .byte 0x8d
          .byte 0x1e
          .byte 0x8d
          .byte 0x1e
          .byte 0x8f
          .byte 0x1e
          .byte 0x8f
          .byte 0x1e
          .byte 0x91
          .byte 0x1e
          .byte 0x91
          .byte 0x1e
          .byte 0x93
          .byte 0x1e
          .byte 0x93
          .byte 0x1e
          .byte 0x95
          .byte 0x1e
          .byte 0x9d
          .byte 0x1e
          .byte 0x9f
          .byte 0x1e
          .byte 0x9f
          .byte 0x1e
          .byte 0xa1
          .byte 0x1e
          .byte 0xa1
          .byte 0x1e
          .byte 0xa3
          .byte 0x1e
          .byte 0xa3
          .byte 0x1e
          .byte 0xa5
          .byte 0x1e
          .byte 0xa5
          .byte 0x1e
          .byte 0xa7
          .byte 0x1e
          .byte 0xa7
          .byte 0x1e
          .byte 0xa9
          .byte 0x1e
          .byte 0xa9
          .byte 0x1e
          .byte 0xab
          .byte 0x1e
          .byte 0xab
          .byte 0x1e
          .byte 0xad
          .byte 0x1e
          .byte 0xad
          .byte 0x1e
          .byte 0xaf
          .byte 0x1e
          .byte 0xaf
          .byte 0x1e
          .byte 0xb1
          .byte 0x1e
          .byte 0xb1
          .byte 0x1e
          .byte 0xb3
          .byte 0x1e
          .byte 0xb3
          .byte 0x1e
          .byte 0xb5
          .byte 0x1e
          .byte 0xb5
          .byte 0x1e
          .byte 0xb7
          .byte 0x1e
          .byte 0xb7
          .byte 0x1e
          .byte 0xb9
          .byte 0x1e
          .byte 0xb9
          .byte 0x1e
          .byte 0xbb
          .byte 0x1e
          .byte 0xbb
          .byte 0x1e
          .byte 0xbd
          .byte 0x1e
          .byte 0xbd
          .byte 0x1e
          .byte 0xbf
          .byte 0x1e
          .byte 0xbf
          .byte 0x1e
          .byte 0xc1
          .byte 0x1e
          .byte 0xc1
          .byte 0x1e
          .byte 0xc3
          .byte 0x1e
          .byte 0xc3
          .byte 0x1e
          .byte 0xc5
          .byte 0x1e
          .byte 0xc5
          .byte 0x1e
          .byte 0xc7
          .byte 0x1e
          .byte 0xc7
          .byte 0x1e
          .byte 0xc9
          .byte 0x1e
          .byte 0xc9
          .byte 0x1e
          .byte 0xcb
          .byte 0x1e
          .byte 0xcb
          .byte 0x1e
          .byte 0xcd
          .byte 0x1e
          .byte 0xcd
          .byte 0x1e
          .byte 0xcf
          .byte 0x1e
          .byte 0xcf
          .byte 0x1e
          .byte 0xd1
          .byte 0x1e
          .byte 0xd1
          .byte 0x1e
          .byte 0xd3
          .byte 0x1e
          .byte 0xd3
          .byte 0x1e
          .byte 0xd5
          .byte 0x1e
          .byte 0xd5
          .byte 0x1e
          .byte 0xd7
          .byte 0x1e
          .byte 0xd7
          .byte 0x1e
          .byte 0xd9
          .byte 0x1e
          .byte 0xd9
          .byte 0x1e
          .byte 0xdb
          .byte 0x1e
          .byte 0xdb
          .byte 0x1e
          .byte 0xdd
          .byte 0x1e
          .byte 0xdd
          .byte 0x1e
          .byte 0xdf
          .byte 0x1e
          .byte 0xdf
          .byte 0x1e
          .byte 0xe1
          .byte 0x1e
          .byte 0xe1
          .byte 0x1e
          .byte 0xe3
          .byte 0x1e
          .byte 0xe3
          .byte 0x1e
          .byte 0xe5
          .byte 0x1e
          .byte 0xe5
          .byte 0x1e
          .byte 0xe7
          .byte 0x1e
          .byte 0xe7
          .byte 0x1e
          .byte 0xe9
          .byte 0x1e
          .byte 0xe9
          .byte 0x1e
          .byte 0xeb
          .byte 0x1e
          .byte 0xeb
          .byte 0x1e
          .byte 0xed
          .byte 0x1e
          .byte 0xed
          .byte 0x1e
          .byte 0xef
          .byte 0x1e
          .byte 0xef
          .byte 0x1e
          .byte 0xf1
          .byte 0x1e
          .byte 0xf1
          .byte 0x1e
          .byte 0xf3
          .byte 0x1e
          .byte 0xf3
          .byte 0x1e
          .byte 0xf5
          .byte 0x1e
          .byte 0xf5
          .byte 0x1e
          .byte 0xf7
          .byte 0x1e
          .byte 0xf7
          .byte 0x1e
          .byte 0xf9
          .byte 0x1e
          .byte 0xf9
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfb
          .byte 0x1e
          .byte 0xfd
          .byte 0x1e
          .byte 0xfd
          .byte 0x1e
          .byte 0xff
          .byte 0x1e
          .byte 0x7
          .byte 0x1f
          .byte 0x10
          .byte 0x1f
          .byte 0x15
          .byte 0x1f
          .byte 0x20
          .byte 0x1f
          .byte 0x27
          .byte 0x1f
          .byte 0x30
          .byte 0x1f
          .byte 0x37
          .byte 0x1f
          .byte 0x40
          .byte 0x1f
          .byte 0x45
          .byte 0x1f
          .byte 0x50
          .byte 0x1f
          .byte 0x57
          .byte 0x1f
          .byte 0x60
          .byte 0x1f
          .byte 0x67
          .byte 0x1f
          .byte 0x70
          .byte 0x1f
          .byte 0x7d
          .byte 0x1f
          .byte 0x80
          .byte 0x1f
          .byte 0x87
          .byte 0x1f
          .byte 0x90
          .byte 0x1f
          .byte 0x97
          .byte 0x1f
          .byte 0xa0
          .byte 0x1f
          .byte 0xa7
          .byte 0x1f
          .byte 0xb0
          .byte 0x1f
          .byte 0xb4
          .byte 0x1f
          .byte 0xb6
          .byte 0x1f
          .byte 0xb7
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xbe
          .byte 0x1f
          .byte 0xc2
          .byte 0x1f
          .byte 0xc4
          .byte 0x1f
          .byte 0xc6
          .byte 0x1f
          .byte 0xc7
          .byte 0x1f
          .byte 0xd0
          .byte 0x1f
          .byte 0xd3
          .byte 0x1f
          .byte 0xd6
          .byte 0x1f
          .byte 0xd7
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe7
          .byte 0x1f
          .byte 0xf2
          .byte 0x1f
          .byte 0xf4
          .byte 0x1f
          .byte 0xf6
          .byte 0x1f
          .byte 0xf7
          .byte 0x1f
          .byte 0xa
          .byte 0x21
          .byte 0xa
          .byte 0x21
          .byte 0xe
          .byte 0x21
          .byte 0xf
          .byte 0x21
          .byte 0x13
          .byte 0x21
          .byte 0x13
          .byte 0x21
          .byte 0x2f
          .byte 0x21
          .byte 0x2f
          .byte 0x21
          .byte 0x34
          .byte 0x21
          .byte 0x34
          .byte 0x21
          .byte 0x39
          .byte 0x21
          .byte 0x39
          .byte 0x21
          .byte 0x3c
          .byte 0x21
          .byte 0x3d
          .byte 0x21
          .byte 0x46
          .byte 0x21
          .byte 0x49
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x4e
          .byte 0x21
          .byte 0x84
          .byte 0x21
          .byte 0x84
          .byte 0x21
          .byte 0x30
          .byte 0x2c
          .byte 0x5e
          .byte 0x2c
          .byte 0x61
          .byte 0x2c
          .byte 0x61
          .byte 0x2c
          .byte 0x65
          .byte 0x2c
          .byte 0x66
          .byte 0x2c
          .byte 0x68
          .byte 0x2c
          .byte 0x68
          .byte 0x2c
          .byte 0x6a
          .byte 0x2c
          .byte 0x6a
          .byte 0x2c
          .byte 0x6c
          .byte 0x2c
          .byte 0x6c
          .byte 0x2c
          .byte 0x71
          .byte 0x2c
          .byte 0x71
          .byte 0x2c
          .byte 0x73
          .byte 0x2c
          .byte 0x74
          .byte 0x2c
          .byte 0x76
          .byte 0x2c
          .byte 0x7b
          .byte 0x2c
          .byte 0x81
          .byte 0x2c
          .byte 0x81
          .byte 0x2c
          .byte 0x83
          .byte 0x2c
          .byte 0x83
          .byte 0x2c
          .byte 0x85
          .byte 0x2c
          .byte 0x85
          .byte 0x2c
          .byte 0x87
          .byte 0x2c
          .byte 0x87
          .byte 0x2c
          .byte 0x89
          .byte 0x2c
          .byte 0x89
          .byte 0x2c
          .byte 0x8b
          .byte 0x2c
          .byte 0x8b
          .byte 0x2c
          .byte 0x8d
          .byte 0x2c
          .byte 0x8d
          .byte 0x2c
          .byte 0x8f
          .byte 0x2c
          .byte 0x8f
          .byte 0x2c
          .byte 0x91
          .byte 0x2c
          .byte 0x91
          .byte 0x2c
          .byte 0x93
          .byte 0x2c
          .byte 0x93
          .byte 0x2c
          .byte 0x95
          .byte 0x2c
          .byte 0x95
          .byte 0x2c
          .byte 0x97
          .byte 0x2c
          .byte 0x97
          .byte 0x2c
          .byte 0x99
          .byte 0x2c
          .byte 0x99
          .byte 0x2c
          .byte 0x9b
          .byte 0x2c
          .byte 0x9b
          .byte 0x2c
          .byte 0x9d
          .byte 0x2c
          .byte 0x9d
          .byte 0x2c
          .byte 0x9f
          .byte 0x2c
          .byte 0x9f
          .byte 0x2c
          .byte 0xa1
          .byte 0x2c
          .byte 0xa1
          .byte 0x2c
          .byte 0xa3
          .byte 0x2c
          .byte 0xa3
          .byte 0x2c
          .byte 0xa5
          .byte 0x2c
          .byte 0xa5
          .byte 0x2c
          .byte 0xa7
          .byte 0x2c
          .byte 0xa7
          .byte 0x2c
          .byte 0xa9
          .byte 0x2c
          .byte 0xa9
          .byte 0x2c
          .byte 0xab
          .byte 0x2c
          .byte 0xab
          .byte 0x2c
          .byte 0xad
          .byte 0x2c
          .byte 0xad
          .byte 0x2c
          .byte 0xaf
          .byte 0x2c
          .byte 0xaf
          .byte 0x2c
          .byte 0xb1
          .byte 0x2c
          .byte 0xb1
          .byte 0x2c
          .byte 0xb3
          .byte 0x2c
          .byte 0xb3
          .byte 0x2c
          .byte 0xb5
          .byte 0x2c
          .byte 0xb5
          .byte 0x2c
          .byte 0xb7
          .byte 0x2c
          .byte 0xb7
          .byte 0x2c
          .byte 0xb9
          .byte 0x2c
          .byte 0xb9
          .byte 0x2c
          .byte 0xbb
          .byte 0x2c
          .byte 0xbb
          .byte 0x2c
          .byte 0xbd
          .byte 0x2c
          .byte 0xbd
          .byte 0x2c
          .byte 0xbf
          .byte 0x2c
          .byte 0xbf
          .byte 0x2c
          .byte 0xc1
          .byte 0x2c
          .byte 0xc1
          .byte 0x2c
          .byte 0xc3
          .byte 0x2c
          .byte 0xc3
          .byte 0x2c
          .byte 0xc5
          .byte 0x2c
          .byte 0xc5
          .byte 0x2c
          .byte 0xc7
          .byte 0x2c
          .byte 0xc7
          .byte 0x2c
          .byte 0xc9
          .byte 0x2c
          .byte 0xc9
          .byte 0x2c
          .byte 0xcb
          .byte 0x2c
          .byte 0xcb
          .byte 0x2c
          .byte 0xcd
          .byte 0x2c
          .byte 0xcd
          .byte 0x2c
          .byte 0xcf
          .byte 0x2c
          .byte 0xcf
          .byte 0x2c
          .byte 0xd1
          .byte 0x2c
          .byte 0xd1
          .byte 0x2c
          .byte 0xd3
          .byte 0x2c
          .byte 0xd3
          .byte 0x2c
          .byte 0xd5
          .byte 0x2c
          .byte 0xd5
          .byte 0x2c
          .byte 0xd7
          .byte 0x2c
          .byte 0xd7
          .byte 0x2c
          .byte 0xd9
          .byte 0x2c
          .byte 0xd9
          .byte 0x2c
          .byte 0xdb
          .byte 0x2c
          .byte 0xdb
          .byte 0x2c
          .byte 0xdd
          .byte 0x2c
          .byte 0xdd
          .byte 0x2c
          .byte 0xdf
          .byte 0x2c
          .byte 0xdf
          .byte 0x2c
          .byte 0xe1
          .byte 0x2c
          .byte 0xe1
          .byte 0x2c
          .byte 0xe3
          .byte 0x2c
          .byte 0xe4
          .byte 0x2c
          .byte 0xec
          .byte 0x2c
          .byte 0xec
          .byte 0x2c
          .byte 0xee
          .byte 0x2c
          .byte 0xee
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0xf3
          .byte 0x2c
          .byte 0x0
          .byte 0x2d
          .byte 0x25
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x27
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x2d
          .byte 0x41
          .byte 0xa6
          .byte 0x41
          .byte 0xa6
          .byte 0x43
          .byte 0xa6
          .byte 0x43
          .byte 0xa6
          .byte 0x45
          .byte 0xa6
          .byte 0x45
          .byte 0xa6
          .byte 0x47
          .byte 0xa6
          .byte 0x47
          .byte 0xa6
          .byte 0x49
          .byte 0xa6
          .byte 0x49
          .byte 0xa6
          .byte 0x4b
          .byte 0xa6
          .byte 0x4b
          .byte 0xa6
          .byte 0x4d
          .byte 0xa6
          .byte 0x4d
          .byte 0xa6
          .byte 0x4f
          .byte 0xa6
          .byte 0x4f
          .byte 0xa6
          .byte 0x51
          .byte 0xa6
          .byte 0x51
          .byte 0xa6
          .byte 0x53
          .byte 0xa6
          .byte 0x53
          .byte 0xa6
          .byte 0x55
          .byte 0xa6
          .byte 0x55
          .byte 0xa6
          .byte 0x57
          .byte 0xa6
          .byte 0x57
          .byte 0xa6
          .byte 0x59
          .byte 0xa6
          .byte 0x59
          .byte 0xa6
          .byte 0x5b
          .byte 0xa6
          .byte 0x5b
          .byte 0xa6
          .byte 0x5d
          .byte 0xa6
          .byte 0x5d
          .byte 0xa6
          .byte 0x5f
          .byte 0xa6
          .byte 0x5f
          .byte 0xa6
          .byte 0x61
          .byte 0xa6
          .byte 0x61
          .byte 0xa6
          .byte 0x63
          .byte 0xa6
          .byte 0x63
          .byte 0xa6
          .byte 0x65
          .byte 0xa6
          .byte 0x65
          .byte 0xa6
          .byte 0x67
          .byte 0xa6
          .byte 0x67
          .byte 0xa6
          .byte 0x69
          .byte 0xa6
          .byte 0x69
          .byte 0xa6
          .byte 0x6b
          .byte 0xa6
          .byte 0x6b
          .byte 0xa6
          .byte 0x6d
          .byte 0xa6
          .byte 0x6d
          .byte 0xa6
          .byte 0x81
          .byte 0xa6
          .byte 0x81
          .byte 0xa6
          .byte 0x83
          .byte 0xa6
          .byte 0x83
          .byte 0xa6
          .byte 0x85
          .byte 0xa6
          .byte 0x85
          .byte 0xa6
          .byte 0x87
          .byte 0xa6
          .byte 0x87
          .byte 0xa6
          .byte 0x89
          .byte 0xa6
          .byte 0x89
          .byte 0xa6
          .byte 0x8b
          .byte 0xa6
          .byte 0x8b
          .byte 0xa6
          .byte 0x8d
          .byte 0xa6
          .byte 0x8d
          .byte 0xa6
          .byte 0x8f
          .byte 0xa6
          .byte 0x8f
          .byte 0xa6
          .byte 0x91
          .byte 0xa6
          .byte 0x91
          .byte 0xa6
          .byte 0x93
          .byte 0xa6
          .byte 0x93
          .byte 0xa6
          .byte 0x95
          .byte 0xa6
          .byte 0x95
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0x97
          .byte 0xa6
          .byte 0x23
          .byte 0xa7
          .byte 0x23
          .byte 0xa7
          .byte 0x25
          .byte 0xa7
          .byte 0x25
          .byte 0xa7
          .byte 0x27
          .byte 0xa7
          .byte 0x27
          .byte 0xa7
          .byte 0x29
          .byte 0xa7
          .byte 0x29
          .byte 0xa7
          .byte 0x2b
          .byte 0xa7
          .byte 0x2b
          .byte 0xa7
          .byte 0x2d
          .byte 0xa7
          .byte 0x2d
          .byte 0xa7
          .byte 0x2f
          .byte 0xa7
          .byte 0x31
          .byte 0xa7
          .byte 0x33
          .byte 0xa7
          .byte 0x33
          .byte 0xa7
          .byte 0x35
          .byte 0xa7
          .byte 0x35
          .byte 0xa7
          .byte 0x37
          .byte 0xa7
          .byte 0x37
          .byte 0xa7
          .byte 0x39
          .byte 0xa7
          .byte 0x39
          .byte 0xa7
          .byte 0x3b
          .byte 0xa7
          .byte 0x3b
          .byte 0xa7
          .byte 0x3d
          .byte 0xa7
          .byte 0x3d
          .byte 0xa7
          .byte 0x3f
          .byte 0xa7
          .byte 0x3f
          .byte 0xa7
          .byte 0x41
          .byte 0xa7
          .byte 0x41
          .byte 0xa7
          .byte 0x43
          .byte 0xa7
          .byte 0x43
          .byte 0xa7
          .byte 0x45
          .byte 0xa7
          .byte 0x45
          .byte 0xa7
          .byte 0x47
          .byte 0xa7
          .byte 0x47
          .byte 0xa7
          .byte 0x49
          .byte 0xa7
          .byte 0x49
          .byte 0xa7
          .byte 0x4b
          .byte 0xa7
          .byte 0x4b
          .byte 0xa7
          .byte 0x4d
          .byte 0xa7
          .byte 0x4d
          .byte 0xa7
          .byte 0x4f
          .byte 0xa7
          .byte 0x4f
          .byte 0xa7
          .byte 0x51
          .byte 0xa7
          .byte 0x51
          .byte 0xa7
          .byte 0x53
          .byte 0xa7
          .byte 0x53
          .byte 0xa7
          .byte 0x55
          .byte 0xa7
          .byte 0x55
          .byte 0xa7
          .byte 0x57
          .byte 0xa7
          .byte 0x57
          .byte 0xa7
          .byte 0x59
          .byte 0xa7
          .byte 0x59
          .byte 0xa7
          .byte 0x5b
          .byte 0xa7
          .byte 0x5b
          .byte 0xa7
          .byte 0x5d
          .byte 0xa7
          .byte 0x5d
          .byte 0xa7
          .byte 0x5f
          .byte 0xa7
          .byte 0x5f
          .byte 0xa7
          .byte 0x61
          .byte 0xa7
          .byte 0x61
          .byte 0xa7
          .byte 0x63
          .byte 0xa7
          .byte 0x63
          .byte 0xa7
          .byte 0x65
          .byte 0xa7
          .byte 0x65
          .byte 0xa7
          .byte 0x67
          .byte 0xa7
          .byte 0x67
          .byte 0xa7
          .byte 0x69
          .byte 0xa7
          .byte 0x69
          .byte 0xa7
          .byte 0x6b
          .byte 0xa7
          .byte 0x6b
          .byte 0xa7
          .byte 0x6d
          .byte 0xa7
          .byte 0x6d
          .byte 0xa7
          .byte 0x6f
          .byte 0xa7
          .byte 0x6f
          .byte 0xa7
          .byte 0x71
          .byte 0xa7
          .byte 0x78
          .byte 0xa7
          .byte 0x7a
          .byte 0xa7
          .byte 0x7a
          .byte 0xa7
          .byte 0x7c
          .byte 0xa7
          .byte 0x7c
          .byte 0xa7
          .byte 0x7f
          .byte 0xa7
          .byte 0x7f
          .byte 0xa7
          .byte 0x81
          .byte 0xa7
          .byte 0x81
          .byte 0xa7
          .byte 0x83
          .byte 0xa7
          .byte 0x83
          .byte 0xa7
          .byte 0x85
          .byte 0xa7
          .byte 0x85
          .byte 0xa7
          .byte 0x87
          .byte 0xa7
          .byte 0x87
          .byte 0xa7
          .byte 0x8c
          .byte 0xa7
          .byte 0x8c
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x8e
          .byte 0xa7
          .byte 0x91
          .byte 0xa7
          .byte 0x91
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0x93
          .byte 0xa7
          .byte 0xa1
          .byte 0xa7
          .byte 0xa1
          .byte 0xa7
          .byte 0xa3
          .byte 0xa7
          .byte 0xa3
          .byte 0xa7
          .byte 0xa5
          .byte 0xa7
          .byte 0xa5
          .byte 0xa7
          .byte 0xa7
          .byte 0xa7
          .byte 0xa7
          .byte 0xa7
          .byte 0xa9
          .byte 0xa7
          .byte 0xa9
          .byte 0xa7
          .byte 0xfa
          .byte 0xa7
          .byte 0xfa
          .byte 0xa7
          .byte 0x0
          .byte 0xfb
          .byte 0x6
          .byte 0xfb
          .byte 0x13
          .byte 0xfb
          .byte 0x17
          .byte 0xfb
          .byte 0x41
          .byte 0xff
          .byte 0x5a
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d0c0:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc3
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xc8
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xcf
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x9d
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3c
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x3f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xb7
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0xbf
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x10
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x13
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x15
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x17
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x19
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x35
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x55
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xaf
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xd0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xe8
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x26
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x83
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xb2
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc1
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0xc4
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0xaa
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x6e
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x2e
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x38
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x44
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x50
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x1f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x21
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x22
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x24
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x27
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x29
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x32
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x37
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x39
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x3b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x42
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x49
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x4f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x51
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x54
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x57
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x59
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5d
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x61
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x64
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x67
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6a
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x6c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x72
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x77
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x79
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7c
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x89
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x8b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa1
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa3
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xa9
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0xbb
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0xd6
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x34
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x1d
          .byte 0xfa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d380:
          .byte 0xaa
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0xbb
          .byte 0x1
          .byte 0xc0
          .byte 0x1
          .byte 0xc3
          .byte 0x1
          .byte 0x94
          .byte 0x2
          .byte 0x94
          .byte 0x2
          .byte 0xd0
          .byte 0x5
          .byte 0xea
          .byte 0x5
          .byte 0xf0
          .byte 0x5
          .byte 0xf2
          .byte 0x5
          .byte 0x20
          .byte 0x6
          .byte 0x3f
          .byte 0x6
          .byte 0x41
          .byte 0x6
          .byte 0x4a
          .byte 0x6
          .byte 0x6e
          .byte 0x6
          .byte 0x6f
          .byte 0x6
          .byte 0x71
          .byte 0x6
          .byte 0xd3
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xd5
          .byte 0x6
          .byte 0xee
          .byte 0x6
          .byte 0xef
          .byte 0x6
          .byte 0xfa
          .byte 0x6
          .byte 0xfc
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0xff
          .byte 0x6
          .byte 0x10
          .byte 0x7
          .byte 0x10
          .byte 0x7
          .byte 0x12
          .byte 0x7
          .byte 0x2f
          .byte 0x7
          .byte 0x4d
          .byte 0x7
          .byte 0xa5
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xb1
          .byte 0x7
          .byte 0xca
          .byte 0x7
          .byte 0xea
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x15
          .byte 0x8
          .byte 0x40
          .byte 0x8
          .byte 0x58
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa0
          .byte 0x8
          .byte 0xa2
          .byte 0x8
          .byte 0xac
          .byte 0x8
          .byte 0x4
          .byte 0x9
          .byte 0x39
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x3d
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x50
          .byte 0x9
          .byte 0x58
          .byte 0x9
          .byte 0x61
          .byte 0x9
          .byte 0x72
          .byte 0x9
          .byte 0x77
          .byte 0x9
          .byte 0x79
          .byte 0x9
          .byte 0x7f
          .byte 0x9
          .byte 0x85
          .byte 0x9
          .byte 0x8c
          .byte 0x9
          .byte 0x8f
          .byte 0x9
          .byte 0x90
          .byte 0x9
          .byte 0x93
          .byte 0x9
          .byte 0xa8
          .byte 0x9
          .byte 0xaa
          .byte 0x9
          .byte 0xb0
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb2
          .byte 0x9
          .byte 0xb6
          .byte 0x9
          .byte 0xb9
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xbd
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xce
          .byte 0x9
          .byte 0xdc
          .byte 0x9
          .byte 0xdd
          .byte 0x9
          .byte 0xdf
          .byte 0x9
          .byte 0xe1
          .byte 0x9
          .byte 0xf0
          .byte 0x9
          .byte 0xf1
          .byte 0x9
          .byte 0x5
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xf
          .byte 0xa
          .byte 0x10
          .byte 0xa
          .byte 0x13
          .byte 0xa
          .byte 0x28
          .byte 0xa
          .byte 0x2a
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x32
          .byte 0xa
          .byte 0x33
          .byte 0xa
          .byte 0x35
          .byte 0xa
          .byte 0x36
          .byte 0xa
          .byte 0x38
          .byte 0xa
          .byte 0x39
          .byte 0xa
          .byte 0x59
          .byte 0xa
          .byte 0x5c
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x5e
          .byte 0xa
          .byte 0x72
          .byte 0xa
          .byte 0x74
          .byte 0xa
          .byte 0x85
          .byte 0xa
          .byte 0x8d
          .byte 0xa
          .byte 0x8f
          .byte 0xa
          .byte 0x91
          .byte 0xa
          .byte 0x93
          .byte 0xa
          .byte 0xa8
          .byte 0xa
          .byte 0xaa
          .byte 0xa
          .byte 0xb0
          .byte 0xa
          .byte 0xb2
          .byte 0xa
          .byte 0xb3
          .byte 0xa
          .byte 0xb5
          .byte 0xa
          .byte 0xb9
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xbd
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xd0
          .byte 0xa
          .byte 0xe0
          .byte 0xa
          .byte 0xe1
          .byte 0xa
          .byte 0x5
          .byte 0xb
          .byte 0xc
          .byte 0xb
          .byte 0xf
          .byte 0xb
          .byte 0x10
          .byte 0xb
          .byte 0x13
          .byte 0xb
          .byte 0x28
          .byte 0xb
          .byte 0x2a
          .byte 0xb
          .byte 0x30
          .byte 0xb
          .byte 0x32
          .byte 0xb
          .byte 0x33
          .byte 0xb
          .byte 0x35
          .byte 0xb
          .byte 0x39
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x3d
          .byte 0xb
          .byte 0x5c
          .byte 0xb
          .byte 0x5d
          .byte 0xb
          .byte 0x5f
          .byte 0xb
          .byte 0x61
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x71
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x83
          .byte 0xb
          .byte 0x85
          .byte 0xb
          .byte 0x8a
          .byte 0xb
          .byte 0x8e
          .byte 0xb
          .byte 0x90
          .byte 0xb
          .byte 0x92
          .byte 0xb
          .byte 0x95
          .byte 0xb
          .byte 0x99
          .byte 0xb
          .byte 0x9a
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9c
          .byte 0xb
          .byte 0x9e
          .byte 0xb
          .byte 0x9f
          .byte 0xb
          .byte 0xa3
          .byte 0xb
          .byte 0xa4
          .byte 0xb
          .byte 0xa8
          .byte 0xb
          .byte 0xaa
          .byte 0xb
          .byte 0xae
          .byte 0xb
          .byte 0xb9
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0xd0
          .byte 0xb
          .byte 0x5
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xe
          .byte 0xc
          .byte 0x10
          .byte 0xc
          .byte 0x12
          .byte 0xc
          .byte 0x28
          .byte 0xc
          .byte 0x2a
          .byte 0xc
          .byte 0x33
          .byte 0xc
          .byte 0x35
          .byte 0xc
          .byte 0x39
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x3d
          .byte 0xc
          .byte 0x58
          .byte 0xc
          .byte 0x59
          .byte 0xc
          .byte 0x60
          .byte 0xc
          .byte 0x61
          .byte 0xc
          .byte 0x85
          .byte 0xc
          .byte 0x8c
          .byte 0xc
          .byte 0x8e
          .byte 0xc
          .byte 0x90
          .byte 0xc
          .byte 0x92
          .byte 0xc
          .byte 0xa8
          .byte 0xc
          .byte 0xaa
          .byte 0xc
          .byte 0xb3
          .byte 0xc
          .byte 0xb5
          .byte 0xc
          .byte 0xb9
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xbd
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xde
          .byte 0xc
          .byte 0xe0
          .byte 0xc
          .byte 0xe1
          .byte 0xc
          .byte 0xf1
          .byte 0xc
          .byte 0xf2
          .byte 0xc
          .byte 0x5
          .byte 0xd
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xd
          .byte 0x10
          .byte 0xd
          .byte 0x12
          .byte 0xd
          .byte 0x3a
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x3d
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x4e
          .byte 0xd
          .byte 0x60
          .byte 0xd
          .byte 0x61
          .byte 0xd
          .byte 0x7a
          .byte 0xd
          .byte 0x7f
          .byte 0xd
          .byte 0x85
          .byte 0xd
          .byte 0x96
          .byte 0xd
          .byte 0x9a
          .byte 0xd
          .byte 0xb1
          .byte 0xd
          .byte 0xb3
          .byte 0xd
          .byte 0xbb
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xbd
          .byte 0xd
          .byte 0xc0
          .byte 0xd
          .byte 0xc6
          .byte 0xd
          .byte 0x1
          .byte 0xe
          .byte 0x30
          .byte 0xe
          .byte 0x32
          .byte 0xe
          .byte 0x33
          .byte 0xe
          .byte 0x40
          .byte 0xe
          .byte 0x45
          .byte 0xe
          .byte 0x81
          .byte 0xe
          .byte 0x82
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x84
          .byte 0xe
          .byte 0x87
          .byte 0xe
          .byte 0x88
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8a
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x8d
          .byte 0xe
          .byte 0x94
          .byte 0xe
          .byte 0x97
          .byte 0xe
          .byte 0x99
          .byte 0xe
          .byte 0x9f
          .byte 0xe
          .byte 0xa1
          .byte 0xe
          .byte 0xa3
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa5
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xa7
          .byte 0xe
          .byte 0xaa
          .byte 0xe
          .byte 0xab
          .byte 0xe
          .byte 0xad
          .byte 0xe
          .byte 0xb0
          .byte 0xe
          .byte 0xb2
          .byte 0xe
          .byte 0xb3
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xbd
          .byte 0xe
          .byte 0xc0
          .byte 0xe
          .byte 0xc4
          .byte 0xe
          .byte 0xdc
          .byte 0xe
          .byte 0xdf
          .byte 0xe
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0xf
          .byte 0x40
          .byte 0xf
          .byte 0x47
          .byte 0xf
          .byte 0x49
          .byte 0xf
          .byte 0x6c
          .byte 0xf
          .byte 0x88
          .byte 0xf
          .byte 0x8c
          .byte 0xf
          .byte 0x0
          .byte 0x10
          .byte 0x2a
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x3f
          .byte 0x10
          .byte 0x50
          .byte 0x10
          .byte 0x55
          .byte 0x10
          .byte 0x5a
          .byte 0x10
          .byte 0x5d
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x61
          .byte 0x10
          .byte 0x65
          .byte 0x10
          .byte 0x66
          .byte 0x10
          .byte 0x6e
          .byte 0x10
          .byte 0x70
          .byte 0x10
          .byte 0x75
          .byte 0x10
          .byte 0x81
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0x8e
          .byte 0x10
          .byte 0xd0
          .byte 0x10
          .byte 0xfa
          .byte 0x10
          .byte 0xfd
          .byte 0x10
          .byte 0x48
          .byte 0x12
          .byte 0x4a
          .byte 0x12
          .byte 0x4d
          .byte 0x12
          .byte 0x50
          .byte 0x12
          .byte 0x56
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x58
          .byte 0x12
          .byte 0x5a
          .byte 0x12
          .byte 0x5d
          .byte 0x12
          .byte 0x60
          .byte 0x12
          .byte 0x88
          .byte 0x12
          .byte 0x8a
          .byte 0x12
          .byte 0x8d
          .byte 0x12
          .byte 0x90
          .byte 0x12
          .byte 0xb0
          .byte 0x12
          .byte 0xb2
          .byte 0x12
          .byte 0xb5
          .byte 0x12
          .byte 0xb8
          .byte 0x12
          .byte 0xbe
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc0
          .byte 0x12
          .byte 0xc2
          .byte 0x12
          .byte 0xc5
          .byte 0x12
          .byte 0xc8
          .byte 0x12
          .byte 0xd6
          .byte 0x12
          .byte 0xd8
          .byte 0x12
          .byte 0x10
          .byte 0x13
          .byte 0x12
          .byte 0x13
          .byte 0x15
          .byte 0x13
          .byte 0x18
          .byte 0x13
          .byte 0x5a
          .byte 0x13
          .byte 0x80
          .byte 0x13
          .byte 0x8f
          .byte 0x13
          .byte 0xa0
          .byte 0x13
          .byte 0xf4
          .byte 0x13
          .byte 0x1
          .byte 0x14
          .byte 0x6c
          .byte 0x16
          .byte 0x6f
          .byte 0x16
          .byte 0x7f
          .byte 0x16
          .byte 0x81
          .byte 0x16
          .byte 0x9a
          .byte 0x16
          .byte 0xa0
          .byte 0x16
          .byte 0xea
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0xc
          .byte 0x17
          .byte 0xe
          .byte 0x17
          .byte 0x11
          .byte 0x17
          .byte 0x20
          .byte 0x17
          .byte 0x31
          .byte 0x17
          .byte 0x40
          .byte 0x17
          .byte 0x51
          .byte 0x17
          .byte 0x60
          .byte 0x17
          .byte 0x6c
          .byte 0x17
          .byte 0x6e
          .byte 0x17
          .byte 0x70
          .byte 0x17
          .byte 0x80
          .byte 0x17
          .byte 0xb3
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0xdc
          .byte 0x17
          .byte 0x20
          .byte 0x18
          .byte 0x42
          .byte 0x18
          .byte 0x44
          .byte 0x18
          .byte 0x77
          .byte 0x18
          .byte 0x80
          .byte 0x18
          .byte 0xa8
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xaa
          .byte 0x18
          .byte 0xb0
          .byte 0x18
          .byte 0xf5
          .byte 0x18
          .byte 0x0
          .byte 0x19
          .byte 0x1c
          .byte 0x19
          .byte 0x50
          .byte 0x19
          .byte 0x6d
          .byte 0x19
          .byte 0x70
          .byte 0x19
          .byte 0x74
          .byte 0x19
          .byte 0x80
          .byte 0x19
          .byte 0xab
          .byte 0x19
          .byte 0xc1
          .byte 0x19
          .byte 0xc7
          .byte 0x19
          .byte 0x0
          .byte 0x1a
          .byte 0x16
          .byte 0x1a
          .byte 0x20
          .byte 0x1a
          .byte 0x54
          .byte 0x1a
          .byte 0x5
          .byte 0x1b
          .byte 0x33
          .byte 0x1b
          .byte 0x45
          .byte 0x1b
          .byte 0x4b
          .byte 0x1b
          .byte 0x83
          .byte 0x1b
          .byte 0xa0
          .byte 0x1b
          .byte 0xae
          .byte 0x1b
          .byte 0xaf
          .byte 0x1b
          .byte 0xba
          .byte 0x1b
          .byte 0xe5
          .byte 0x1b
          .byte 0x0
          .byte 0x1c
          .byte 0x23
          .byte 0x1c
          .byte 0x4d
          .byte 0x1c
          .byte 0x4f
          .byte 0x1c
          .byte 0x5a
          .byte 0x1c
          .byte 0x77
          .byte 0x1c
          .byte 0xe9
          .byte 0x1c
          .byte 0xec
          .byte 0x1c
          .byte 0xee
          .byte 0x1c
          .byte 0xf1
          .byte 0x1c
          .byte 0xf5
          .byte 0x1c
          .byte 0xf6
          .byte 0x1c
          .byte 0x35
          .byte 0x21
          .byte 0x38
          .byte 0x21
          .byte 0x30
          .byte 0x2d
          .byte 0x67
          .byte 0x2d
          .byte 0x80
          .byte 0x2d
          .byte 0x96
          .byte 0x2d
          .byte 0xa0
          .byte 0x2d
          .byte 0xa6
          .byte 0x2d
          .byte 0xa8
          .byte 0x2d
          .byte 0xae
          .byte 0x2d
          .byte 0xb0
          .byte 0x2d
          .byte 0xb6
          .byte 0x2d
          .byte 0xb8
          .byte 0x2d
          .byte 0xbe
          .byte 0x2d
          .byte 0xc0
          .byte 0x2d
          .byte 0xc6
          .byte 0x2d
          .byte 0xc8
          .byte 0x2d
          .byte 0xce
          .byte 0x2d
          .byte 0xd0
          .byte 0x2d
          .byte 0xd6
          .byte 0x2d
          .byte 0xd8
          .byte 0x2d
          .byte 0xde
          .byte 0x2d
          .byte 0x6
          .byte 0x30
          .byte 0x6
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x3c
          .byte 0x30
          .byte 0x41
          .byte 0x30
          .byte 0x96
          .byte 0x30
          .byte 0x9f
          .byte 0x30
          .byte 0x9f
          .byte 0x30
          .byte 0xa1
          .byte 0x30
          .byte 0xfa
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0xff
          .byte 0x30
          .byte 0x5
          .byte 0x31
          .byte 0x2d
          .byte 0x31
          .byte 0x31
          .byte 0x31
          .byte 0x8e
          .byte 0x31
          .byte 0xa0
          .byte 0x31
          .byte 0xba
          .byte 0x31
          .byte 0xf0
          .byte 0x31
          .byte 0xff
          .byte 0x31
          .byte 0x0
          .byte 0x34
          .byte 0xb5
          .byte 0x4d
          .byte 0x0
          .byte 0x4e
          .byte 0xcc
          .byte 0x9f
          .byte 0x0
          .byte 0xa0
          .byte 0x14
          .byte 0xa0
          .byte 0x16
          .byte 0xa0
          .byte 0x8c
          .byte 0xa4
          .byte 0xd0
          .byte 0xa4
          .byte 0xf7
          .byte 0xa4
          .byte 0x0
          .byte 0xa5
          .byte 0xb
          .byte 0xa6
          .byte 0x10
          .byte 0xa6
          .byte 0x1f
          .byte 0xa6
          .byte 0x2a
          .byte 0xa6
          .byte 0x2b
          .byte 0xa6
          .byte 0x6e
          .byte 0xa6
          .byte 0x6e
          .byte 0xa6
          .byte 0xa0
          .byte 0xa6
          .byte 0xe5
          .byte 0xa6
          .byte 0xfb
          .byte 0xa7
          .byte 0x1
          .byte 0xa8
          .byte 0x3
          .byte 0xa8
          .byte 0x5
          .byte 0xa8
          .byte 0x7
          .byte 0xa8
          .byte 0xa
          .byte 0xa8
          .byte 0xc
          .byte 0xa8
          .byte 0x22
          .byte 0xa8
          .byte 0x40
          .byte 0xa8
          .byte 0x73
          .byte 0xa8
          .byte 0x82
          .byte 0xa8
          .byte 0xb3
          .byte 0xa8
          .byte 0xf2
          .byte 0xa8
          .byte 0xf7
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xfb
          .byte 0xa8
          .byte 0xa
          .byte 0xa9
          .byte 0x25
          .byte 0xa9
          .byte 0x30
          .byte 0xa9
          .byte 0x46
          .byte 0xa9
          .byte 0x60
          .byte 0xa9
          .byte 0x7c
          .byte 0xa9
          .byte 0x84
          .byte 0xa9
          .byte 0xb2
          .byte 0xa9
          .byte 0x0
          .byte 0xaa
          .byte 0x28
          .byte 0xaa
          .byte 0x40
          .byte 0xaa
          .byte 0x42
          .byte 0xaa
          .byte 0x44
          .byte 0xaa
          .byte 0x4b
          .byte 0xaa
          .byte 0x60
          .byte 0xaa
          .byte 0x6f
          .byte 0xaa
          .byte 0x71
          .byte 0xaa
          .byte 0x76
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x7a
          .byte 0xaa
          .byte 0x80
          .byte 0xaa
          .byte 0xaf
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb1
          .byte 0xaa
          .byte 0xb5
          .byte 0xaa
          .byte 0xb6
          .byte 0xaa
          .byte 0xb9
          .byte 0xaa
          .byte 0xbd
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc0
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xc2
          .byte 0xaa
          .byte 0xdb
          .byte 0xaa
          .byte 0xdc
          .byte 0xaa
          .byte 0xe0
          .byte 0xaa
          .byte 0xea
          .byte 0xaa
          .byte 0xf2
          .byte 0xaa
          .byte 0xf2
          .byte 0xaa
          .byte 0x1
          .byte 0xab
          .byte 0x6
          .byte 0xab
          .byte 0x9
          .byte 0xab
          .byte 0xe
          .byte 0xab
          .byte 0x11
          .byte 0xab
          .byte 0x16
          .byte 0xab
          .byte 0x20
          .byte 0xab
          .byte 0x26
          .byte 0xab
          .byte 0x28
          .byte 0xab
          .byte 0x2e
          .byte 0xab
          .byte 0xc0
          .byte 0xab
          .byte 0xe2
          .byte 0xab
          .byte 0x0
          .byte 0xac
          .byte 0xa3
          .byte 0xd7
          .byte 0xb0
          .byte 0xd7
          .byte 0xc6
          .byte 0xd7
          .byte 0xcb
          .byte 0xd7
          .byte 0xfb
          .byte 0xd7
          .byte 0x0
          .byte 0xf9
          .byte 0x6d
          .byte 0xfa
          .byte 0x70
          .byte 0xfa
          .byte 0xd9
          .byte 0xfa
          .byte 0x1d
          .byte 0xfb
          .byte 0x1d
          .byte 0xfb
          .byte 0x1f
          .byte 0xfb
          .byte 0x28
          .byte 0xfb
          .byte 0x2a
          .byte 0xfb
          .byte 0x36
          .byte 0xfb
          .byte 0x38
          .byte 0xfb
          .byte 0x3c
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x3e
          .byte 0xfb
          .byte 0x40
          .byte 0xfb
          .byte 0x41
          .byte 0xfb
          .byte 0x43
          .byte 0xfb
          .byte 0x44
          .byte 0xfb
          .byte 0x46
          .byte 0xfb
          .byte 0xb1
          .byte 0xfb
          .byte 0xd3
          .byte 0xfb
          .byte 0x3d
          .byte 0xfd
          .byte 0x50
          .byte 0xfd
          .byte 0x8f
          .byte 0xfd
          .byte 0x92
          .byte 0xfd
          .byte 0xc7
          .byte 0xfd
          .byte 0xf0
          .byte 0xfd
          .byte 0xfb
          .byte 0xfd
          .byte 0x70
          .byte 0xfe
          .byte 0x74
          .byte 0xfe
          .byte 0x76
          .byte 0xfe
          .byte 0xfc
          .byte 0xfe
          .byte 0x66
          .byte 0xff
          .byte 0x6f
          .byte 0xff
          .byte 0x71
          .byte 0xff
          .byte 0x9d
          .byte 0xff
          .byte 0xa0
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xca
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d800:
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x16
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x1b
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x47
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7d
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x58
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x5f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x78
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x7f
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x7e
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x52
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x65
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x60
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x71
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0xa
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d880:
          .byte 0xb2
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0xf4
          .byte 0x9
          .byte 0xf9
          .byte 0x9
          .byte 0x72
          .byte 0xb
          .byte 0x77
          .byte 0xb
          .byte 0xf0
          .byte 0xb
          .byte 0xf2
          .byte 0xb
          .byte 0x78
          .byte 0xc
          .byte 0x7e
          .byte 0xc
          .byte 0x70
          .byte 0xd
          .byte 0x75
          .byte 0xd
          .byte 0x2a
          .byte 0xf
          .byte 0x33
          .byte 0xf
          .byte 0x69
          .byte 0x13
          .byte 0x7c
          .byte 0x13
          .byte 0xf0
          .byte 0x17
          .byte 0xf9
          .byte 0x17
          .byte 0xda
          .byte 0x19
          .byte 0xda
          .byte 0x19
          .byte 0x70
          .byte 0x20
          .byte 0x70
          .byte 0x20
          .byte 0x74
          .byte 0x20
          .byte 0x79
          .byte 0x20
          .byte 0x80
          .byte 0x20
          .byte 0x89
          .byte 0x20
          .byte 0x50
          .byte 0x21
          .byte 0x5f
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x89
          .byte 0x21
          .byte 0x60
          .byte 0x24
          .byte 0x9b
          .byte 0x24
          .byte 0xea
          .byte 0x24
          .byte 0xff
          .byte 0x24
          .byte 0x76
          .byte 0x27
          .byte 0x93
          .byte 0x27
          .byte 0xfd
          .byte 0x2c
          .byte 0xfd
          .byte 0x2c
          .byte 0x92
          .byte 0x31
          .byte 0x95
          .byte 0x31
          .byte 0x20
          .byte 0x32
          .byte 0x29
          .byte 0x32
          .byte 0x48
          .byte 0x32
          .byte 0x4f
          .byte 0x32
          .byte 0x51
          .byte 0x32
          .byte 0x5f
          .byte 0x32
          .byte 0x80
          .byte 0x32
          .byte 0x89
          .byte 0x32
          .byte 0xb1
          .byte 0x32
          .byte 0xbf
          .byte 0x32
          .byte 0x30
          .byte 0xa8
          .byte 0x35
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d900:
          .byte 0x40
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd1
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0xd5
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x62
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d930:
          .byte 0xee
          .byte 0x16
          .byte 0xf0
          .byte 0x16
          .byte 0x60
          .byte 0x21
          .byte 0x82
          .byte 0x21
          .byte 0x85
          .byte 0x21
          .byte 0x88
          .byte 0x21
          .byte 0x7
          .byte 0x30
          .byte 0x7
          .byte 0x30
          .byte 0x21
          .byte 0x30
          .byte 0x29
          .byte 0x30
          .byte 0x38
          .byte 0x30
          .byte 0x3a
          .byte 0x30
          .byte 0xe6
          .byte 0xa6
          .byte 0xef
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d960:
          .string "("
          .byte 0x28
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x3a
          .byte 0xf
          .byte 0x3a
          .byte 0xf
          .byte 0x3c
          .byte 0xf
          .byte 0x3c
          .byte 0xf
          .byte 0x9b
          .byte 0x16
          .byte 0x9b
          .byte 0x16
          .byte 0x1a
          .byte 0x20
          .byte 0x1a
          .byte 0x20
          .byte 0x1e
          .byte 0x20
          .byte 0x1e
          .byte 0x20
          .byte 0x45
          .byte 0x20
          .byte 0x45
          .byte 0x20
          .byte 0x7d
          .byte 0x20
          .byte 0x7d
          .byte 0x20
          .byte 0x8d
          .byte 0x20
          .byte 0x8d
          .byte 0x20
          .byte 0x8
          .byte 0x23
          .byte 0x8
          .byte 0x23
          .byte 0xa
          .byte 0x23
          .byte 0xa
          .byte 0x23
          .byte 0x29
          .byte 0x23
          .byte 0x29
          .byte 0x23
          .byte 0x68
          .byte 0x27
          .byte 0x68
          .byte 0x27
          .byte 0x6a
          .byte 0x27
          .byte 0x6a
          .byte 0x27
          .byte 0x6c
          .byte 0x27
          .byte 0x6c
          .byte 0x27
          .byte 0x6e
          .byte 0x27
          .byte 0x6e
          .byte 0x27
          .byte 0x70
          .byte 0x27
          .byte 0x70
          .byte 0x27
          .byte 0x72
          .byte 0x27
          .byte 0x72
          .byte 0x27
          .byte 0x74
          .byte 0x27
          .byte 0x74
          .byte 0x27
          .byte 0xc5
          .byte 0x27
          .byte 0xc5
          .byte 0x27
          .byte 0xe6
          .byte 0x27
          .byte 0xe6
          .byte 0x27
          .byte 0xe8
          .byte 0x27
          .byte 0xe8
          .byte 0x27
          .byte 0xea
          .byte 0x27
          .byte 0xea
          .byte 0x27
          .byte 0xec
          .byte 0x27
          .byte 0xec
          .byte 0x27
          .byte 0xee
          .byte 0x27
          .byte 0xee
          .byte 0x27
          .byte 0x83
          .byte 0x29
          .byte 0x83
          .byte 0x29
          .byte 0x85
          .byte 0x29
          .byte 0x85
          .byte 0x29
          .byte 0x87
          .byte 0x29
          .byte 0x87
          .byte 0x29
          .byte 0x89
          .byte 0x29
          .byte 0x89
          .byte 0x29
          .byte 0x8b
          .byte 0x29
          .byte 0x8b
          .byte 0x29
          .byte 0x8d
          .byte 0x29
          .byte 0x8d
          .byte 0x29
          .byte 0x8f
          .byte 0x29
          .byte 0x8f
          .byte 0x29
          .byte 0x91
          .byte 0x29
          .byte 0x91
          .byte 0x29
          .byte 0x93
          .byte 0x29
          .byte 0x93
          .byte 0x29
          .byte 0x95
          .byte 0x29
          .byte 0x95
          .byte 0x29
          .byte 0x97
          .byte 0x29
          .byte 0x97
          .byte 0x29
          .byte 0xd8
          .byte 0x29
          .byte 0xd8
          .byte 0x29
          .byte 0xda
          .byte 0x29
          .byte 0xda
          .byte 0x29
          .byte 0xfc
          .byte 0x29
          .byte 0xfc
          .byte 0x29
          .byte 0x22
          .byte 0x2e
          .byte 0x22
          .byte 0x2e
          .byte 0x24
          .byte 0x2e
          .byte 0x24
          .byte 0x2e
          .byte 0x26
          .byte 0x2e
          .byte 0x26
          .byte 0x2e
          .byte 0x28
          .byte 0x2e
          .byte 0x28
          .byte 0x2e
          .byte 0x8
          .byte 0x30
          .byte 0x8
          .byte 0x30
          .byte 0xa
          .byte 0x30
          .byte 0xa
          .byte 0x30
          .byte 0xc
          .byte 0x30
          .byte 0xc
          .byte 0x30
          .byte 0xe
          .byte 0x30
          .byte 0xe
          .byte 0x30
          .byte 0x10
          .byte 0x30
          .byte 0x10
          .byte 0x30
          .byte 0x14
          .byte 0x30
          .byte 0x14
          .byte 0x30
          .byte 0x16
          .byte 0x30
          .byte 0x16
          .byte 0x30
          .byte 0x18
          .byte 0x30
          .byte 0x18
          .byte 0x30
          .byte 0x1a
          .byte 0x30
          .byte 0x1a
          .byte 0x30
          .byte 0x1d
          .byte 0x30
          .byte 0x1d
          .byte 0x30
          .byte 0x3e
          .byte 0xfd
          .byte 0x3e
          .byte 0xfd
          .byte 0x17
          .byte 0xfe
          .byte 0x17
          .byte 0xfe
          .byte 0x35
          .byte 0xfe
          .byte 0x35
          .byte 0xfe
          .byte 0x37
          .byte 0xfe
          .byte 0x37
          .byte 0xfe
          .byte 0x39
          .byte 0xfe
          .byte 0x39
          .byte 0xfe
          .byte 0x3b
          .byte 0xfe
          .byte 0x3b
          .byte 0xfe
          .byte 0x3d
          .byte 0xfe
          .byte 0x3d
          .byte 0xfe
          .byte 0x3f
          .byte 0xfe
          .byte 0x3f
          .byte 0xfe
          .byte 0x41
          .byte 0xfe
          .byte 0x41
          .byte 0xfe
          .byte 0x43
          .byte 0xfe
          .byte 0x43
          .byte 0xfe
          .byte 0x47
          .byte 0xfe
          .byte 0x47
          .byte 0xfe
          .byte 0x59
          .byte 0xfe
          .byte 0x59
          .byte 0xfe
          .byte 0x5b
          .byte 0xfe
          .byte 0x5b
          .byte 0xfe
          .byte 0x5d
          .byte 0xfe
          .byte 0x5d
          .byte 0xfe
          .byte 0x8
          .byte 0xff
          .byte 0x8
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0x62
          .byte 0xff
          .byte 0x62
          .byte 0xff
.L_43da88:
          .string "Arabic"
.L_43da8f:
          .string "Armenian"
.L_43da98:
          .string "Avestan"
.L_43daa0:
          .string "Balinese"
.L_43daa9:
          .string "Bamum"
.L_43daaf:
          .string "Batak"
.L_43dab5:
          .string "Bengali"
.L_43dabd:
          .string "Bopomofo"
.L_43dac6:
          .string "Brahmi"
.L_43dacd:
          .string "Braille"
.L_43dad5:
          .string "Buginese"
.L_43dade:
          .string "Buhid"
.L_43dae4:
          .string "C"
.L_43dae6:
          .string "Canadian_Aboriginal"
.L_43dafa:
          .string "Carian"
.L_43db01:
          .string "Cc"
.L_43db04:
          .string "Cf"
.L_43db07:
          .string "Chakma"
.L_43db0e:
          .string "Cham"
.L_43db13:
          .string "Cherokee"
.L_43db1c:
          .string "Co"
.L_43db1f:
          .string "Common"
.L_43db26:
          .string "Coptic"
.L_43db2d:
          .string "Cs"
.L_43db30:
          .string "Cuneiform"
.L_43db3a:
          .string "Cypriot"
.L_43db42:
          .string "Cyrillic"
.L_43db4b:
          .string "Deseret"
.L_43db53:
          .string "Devanagari"
.L_43db5e:
          .string "Egyptian_Hieroglyphs"
.L_43db73:
          .string "Ethiopic"
.L_43db7c:
          .string "Georgian"
.L_43db85:
          .string "Glagolitic"
.L_43db90:
          .string "Gothic"
.L_43db97:
          .string "Greek"
.L_43db9d:
          .string "Gujarati"
.L_43dba6:
          .string "Gurmukhi"
.L_43dbaf:
          .string "Han"
.L_43dbb3:
          .string "Hangul"
.L_43dbba:
          .string "Hanunoo"
.L_43dbc2:
          .string "Hebrew"
.L_43dbc9:
          .string "Hiragana"
.L_43dbd2:
          .string "Imperial_Aramaic"
.L_43dbe3:
          .string "Inherited"
.L_43dbed:
          .string "Inscriptional_Pahlavi"
.L_43dc03:
          .string "Inscriptional_Parthian"
.L_43dc1a:
          .string "Javanese"
.L_43dc23:
          .string "Kaithi"
.L_43dc2a:
          .string "Kannada"
.L_43dc32:
          .string "Katakana"
.L_43dc3b:
          .string "Kayah_Li"
.L_43dc44:
          .string "Kharoshthi"
.L_43dc4f:
          .string "Khmer"
.L_43dc55:
          .string "L"
.L_43dc57:
          .string "Lao"
.L_43dc5b:
          .string "Latin"
.L_43dc61:
          .string "Lepcha"
.L_43dc68:
          .string "Limbu"
.L_43dc6e:
          .string "Linear_B"
.L_43dc77:
          .string "Lisu"
.L_43dc7c:
          .string "Ll"
.L_43dc7f:
          .string "Lm"
.L_43dc82:
          .string "Lo"
.L_43dc85:
          .string "Lt"
.L_43dc88:
          .string "Lu"
.L_43dc8b:
          .string "Lycian"
.L_43dc92:
          .string "Lydian"
.L_43dc99:
          .string "M"
.L_43dc9b:
          .string "Malayalam"
.L_43dca5:
          .string "Mandaic"
.L_43dcad:
          .string "Mc"
.L_43dcb0:
          .string "Me"
.L_43dcb3:
          .string "Meetei_Mayek"
.L_43dcc0:
          .string "Meroitic_Cursive"
.L_43dcd1:
          .string "Meroitic_Hieroglyphs"
.L_43dce6:
          .string "Miao"
.L_43dceb:
          .string "Mn"
.L_43dcee:
          .string "Mongolian"
.L_43dcf8:
          .string "Myanmar"
.L_43dd00:
          .string "N"
.L_43dd02:
          .string "Nd"
.L_43dd05:

            ja .L_43dd68
          .byte 0x54
          .byte 0x61
          .byte 0x69
          .byte 0x5f
          .byte 0x4c
          .byte 0x75
          .byte 0x65
          .byte 0x0
.L_43dd11:
          .string "Nko"
.L_43dd15:
          .string "Nl"
.L_43dd18:
          .string "No"
.L_43dd1b:
          .string "Ogham"
.L_43dd21:
          .string "Ol_Chiki"
.L_43dd2a:
          .string "Old_Italic"
.L_43dd35:
          .string "Old_Persian"
.L_43dd41:
          .string "Old_South_Arabian"
.L_43dd53:

            insb BYTE PTR [RDI],DX
            pop RDI
            push RSP
            jne .L_43ddcc

            imul EBP,DWORD PTR [RCX+99],0
.L_43dd5e:
          .string "Oriya"
.L_43dd64:
          .byte 0x4f
          .byte 0x73
          .byte 0x6d
          .byte 0x61
.L_43dd68:

            outsb DX,BYTE PTR [RSI]
            jns .L_43ddcc
          .zero 1
.L_43dd6c:
          .string "P"
.L_43dd6e:
          .string "Pc"
.L_43dd71:
          .string "Pd"
.L_43dd74:
          .string "Pe"
.L_43dd77:
          .string "Pf"
.L_43dd7a:
          .string "Phags_Pa"
.L_43dd83:
          .string "Phoenician"
.L_43dd8e:
          .string "Pi"
.L_43dd91:
          .string "Po"
.L_43dd94:
          .string "Ps"
.L_43dd97:
          .string "Rejang"
.L_43dd9e:
          .string "Runic"
.L_43dda4:
          .string "S"
.L_43dda6:
          .string "Samaritan"
.L_43ddb0:
          .string "Saurashtra"
.L_43ddbb:
          .string "Sc"
.L_43ddbe:
          .string "Sharada"
.L_43ddc6:
          .byte 0x53
          .byte 0x68
          .byte 0x61
          .byte 0x76
          .byte 0x69
          .byte 0x61
.L_43ddcc:

            outsb DX,BYTE PTR [RSI]
            add BYTE PTR [RBX+105],DL
            outsb DX,BYTE PTR [RSI]
            push 6384737
.L_43ddd6:

            push RBX
            imul EAX,DWORD PTR [RAX],83
            insd DWORD PTR [RDI],DX
            add BYTE PTR [RBX+111],DL
            add BYTE PTR [RBX+111],DL
          .byte 0x72
          .byte 0x61
          .byte 0x5f
          .byte 0x53
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x67
          .byte 0x0
.L_43ddec:
          .string "Sundanese"
.L_43ddf6:
          .string "Syloti_Nagri"
.L_43de03:

            push RBX
            jns .L_43de78
          .byte 0x69
          .byte 0x61
          .byte 0x63
          .byte 0x0
.L_43de0a:
          .string "Tagalog"
.L_43de12:
          .string "Tagbanwa"
.L_43de1b:
          .string "Tai_Le"
.L_43de22:
          .string "Tai_Tham"
.L_43de2b:
          .string "Tai_Viet"
.L_43de34:
          .string "Takri"
.L_43de3a:
          .string "Tamil"
.L_43de40:
          .string "Telugu"
.L_43de47:
          .string "Thaana"
.L_43de4e:
          .string "Thai"
.L_43de53:
          .string "Tibetan"
.L_43de5b:
          .string "Tifinagh"
.L_43de64:
          .string "Ugaritic"
.L_43de6d:
          .string "Vai"
.L_43de71:

            pop RCX
            imul EAX,DWORD PTR [RAX],1817837658
# WARNING: found overlapping blocks at address 3dc44
.set .L_43de74, . - 4

# WARNING: found overlapping blocks at address 3dc46
.set .L_43de76, . - 2

.L_43de78:

            add BYTE PTR [RDX+112],BL
          .zero 1
.L_43de7c:
          .string "Zs"
          .byte 0x90
.L_43de80:

            lea R8D,DWORD PTR [RDX+RSI*4-559038737]
            cmp RSI,3
            mov EAX,R8D
            mov EDX,R8D
            jbe .L_43df05

            nop
            nop
            nop
            nop
.L_43de98:

            add EAX,DWORD PTR [RDI+8]
            mov ECX,DWORD PTR [RDI]
            sub RSI,3
            add EDX,DWORD PTR [RDI+4]
            add RDI,12
            sub ECX,EAX
            add ECX,R8D
            mov R8D,EAX
            add EAX,EDX
            rol R8D,4
            xor ECX,R8D
            mov R8D,ECX
            sub EDX,ECX
            add ECX,EAX
            rol R8D,6
            xor EDX,R8D
            mov R8D,EDX
            sub EAX,EDX
            add EDX,ECX
            rol R8D,8
            xor EAX,R8D
            mov R8D,EAX
            sub ECX,EAX
            add EAX,EDX
            rol R8D,16
            xor ECX,R8D
            mov R8D,ECX
            sub EDX,ECX
            ror R8D,13
            xor EDX,R8D
            lea R8D,DWORD PTR [RCX+RAX*1]
            mov ECX,EDX
            sub EAX,EDX
            rol ECX,4
            add EDX,R8D
            xor EAX,ECX
            cmp RSI,3
            ja .L_43de98
.L_43df05:

            cmp RSI,2
            je .L_43df23

            cmp RSI,3
            je .L_43df20

            cmp RSI,1
            je .L_43df26

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43df20:

            add EAX,DWORD PTR [RDI+8]
.L_43df23:

            add EDX,DWORD PTR [RDI+4]
.L_43df26:

            mov ECX,EDX
            xor EAX,EDX
            rol ECX,14
            sub EAX,ECX
            mov ECX,DWORD PTR [RDI]
            mov ESI,EAX
            rol ESI,11
            add ECX,R8D
            xor ECX,EAX
            sub ECX,ESI
            mov ESI,ECX
            xor EDX,ECX
            ror ESI,7
            sub EDX,ESI
            mov ESI,EDX
            xor EAX,EDX
            rol ESI,16
            sub EAX,ESI
            mov ESI,EAX
            xor ECX,EAX
            rol ESI,4
            sub ECX,ESI
            xor EDX,ECX
            rol ECX,14
            sub EDX,ECX
            xor EAX,EDX
            ror EDX,8
            sub EAX,EDX
            ret 
.L_43df67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43df70:

            mov EAX,DWORD PTR [RDX]
            lea R10D,DWORD PTR [RAX+RSI*4-559038737]
            mov EAX,DWORD PTR [RCX]
            mov R9D,R10D
            add EAX,R10D
            cmp RSI,3
            jbe .L_43e00c

            nop
            nop
            nop
            nop
.L_43df90:

            add EAX,DWORD PTR [RDI+8]
            mov R8D,DWORD PTR [RDI]
            sub RSI,3
            add R9D,DWORD PTR [RDI+4]
            add RDI,12
            sub R8D,EAX
            add R8D,R10D
            mov R10D,EAX
            add EAX,R9D
            rol R10D,4
            xor R8D,R10D
            mov R10D,R8D
            sub R9D,R8D
            add R8D,EAX
            rol R10D,6
            xor R9D,R10D
            mov R10D,R9D
            sub EAX,R9D
            add R9D,R8D
            rol R10D,8
            xor EAX,R10D
            mov R10D,EAX
            sub R8D,EAX
            add EAX,R9D
            rol R10D,16
            xor R8D,R10D
            mov R10D,R8D
            sub R9D,R8D
            ror R10D,13
            xor R9D,R10D
            lea R10D,DWORD PTR [R8+RAX*1]
            mov R8D,R9D
            sub EAX,R9D
            rol R8D,4
            add R9D,R10D
            xor EAX,R8D
            cmp RSI,3
            ja .L_43df90
.L_43e00c:

            cmp RSI,2
            je .L_43e02b

            cmp RSI,3
            je .L_43e028

            cmp RSI,1
            je .L_43e02f

            mov DWORD PTR [RDX],EAX
            mov DWORD PTR [RCX],R9D
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e028:

            add EAX,DWORD PTR [RDI+8]
.L_43e02b:

            add R9D,DWORD PTR [RDI+4]
.L_43e02f:

            mov R8D,DWORD PTR [RDI]
            mov ESI,R9D
            xor EAX,R9D
            rol ESI,14
            sub EAX,ESI
            mov ESI,EAX
            add R8D,R10D
            xor R8D,EAX
            rol ESI,11
            sub R8D,ESI
            mov ESI,R8D
            xor R9D,R8D
            ror ESI,7
            sub R9D,ESI
            mov ESI,R9D
            xor EAX,R9D
            rol ESI,16
            sub EAX,ESI
            mov ESI,EAX
            xor R8D,EAX
            rol ESI,4
            sub R8D,ESI
            xor R9D,R8D
            rol R8D,14
            sub R9D,R8D
            mov ESI,R9D
            xor EAX,R9D
            ror ESI,8
            sub EAX,ESI
            mov DWORD PTR [RDX],EAX
            mov DWORD PTR [RCX],R9D
            ret 
.L_43e088:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e090:

            sub RSP,88
.L_43e094:

            xor EDX,EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],4097
            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            rol RDI,3
            rol RDI,13
            rol RDI,61
            rol RDI,51
            xchg RBX,RBX
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43e113

            add RSP,88
.L_43e112:

            ret 
.L_43e113:

            call __stack_chk_fail@PLT
.L_43e118:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e120:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_646e70]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_646e78]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 8368

            test RBP,RBP
            je .L_43e176

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e160:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_43e160
.L_43e176:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43e185:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e190:

            ret 
.L_43e192:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

.L_43e1a0:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e1a8:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_43e1d8:
          .string "rb"
.L_43e1db:
          .string "malloc error!"
.L_43e1e9:
          .string "read error!"
#===================================
# end section .rodata
#===================================

#===================================
.section .gcc_except_table ,"a",@progbits
.align 8
#===================================

.L_4448b8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4448ce-.L_4448bc
.L_4448bc:
          .uleb128 .L_402b07-.L_4029d0
          .uleb128 .L_402b0c-.L_402b07
          .uleb128 .L_402c4d-.L_4029d0
          .zero 1
          .uleb128 .L_402b33-.L_4029d0
          .uleb128 .L_402b38-.L_402b33
          .uleb128 .L_402c6b-.L_4029d0
          .zero 1
          .uleb128 .L_402b8b-.L_4029d0
          .uleb128 .L_402c6b-.L_402b8b
          .zero 2
.L_4448ce:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4448eb-.L_4448d2
.L_4448d2:
          .uleb128 .L_403013-.L_402fe0
          .uleb128 .L_403031-.L_403013
          .zero 2
          .uleb128 .L_403059-.L_402fe0
          .uleb128 .L_40305e-.L_403059
          .uleb128 .L_4030fc-.L_402fe0
          .zero 1
          .uleb128 .L_4030d0-.L_402fe0
          .uleb128 .L_4030d5-.L_4030d0
          .zero 2
          .uleb128 .L_4030f7-.L_402fe0
          .uleb128 .L_4030fc-.L_4030f7
          .uleb128 .L_4030fc-.L_402fe0
          .zero 1
          .uleb128 .L_403114-.L_402fe0
          .uleb128 .L_403119-.L_403114
          .zero 2
.L_4448eb:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444902-.L_4448ef
.L_4448ef:
          .uleb128 .L_40c276-.L_40c160
          .uleb128 .L_40c27b-.L_40c276
          .uleb128 .L_40c4c9-.L_40c160
          .zero 1
          .uleb128 .L_40c2fc-.L_40c160
          .uleb128 .L_40c301-.L_40c2fc
          .uleb128 .L_40c4b2-.L_40c160
          .zero 1
          .uleb128 .L_40c335-.L_40c160
          .uleb128 .L_40c3c4-.L_40c335
          .uleb128 .L_40c4c9-.L_40c160
          .zero 1
.L_444902:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444910-.L_444906
.L_444906:
          .uleb128 .L_403204-.L_403190
          .uleb128 .L_403209-.L_403204
          .uleb128 .L_403232-.L_403190
          .zero 1
          .uleb128 .L_403240-.L_403190
          .uleb128 .L_403245-.L_403240
          .zero 2
.L_444910:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44491e-.L_444914
.L_444914:
          .uleb128 .L_4032c4-.L_403250
          .uleb128 .L_4032c9-.L_4032c4
          .uleb128 .L_4032f2-.L_403250
          .zero 1
          .uleb128 .L_403300-.L_403250
          .uleb128 .L_403305-.L_403300
          .zero 2
.L_44491e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44492d-.L_444922
.L_444922:
          .uleb128 .L_4033a5-.L_403370
          .uleb128 .L_403538-.L_4033a5
          .uleb128 .L_403538-.L_403370
          .zero 1
          .uleb128 .L_40354d-.L_403370
          .uleb128 .L_403552-.L_40354d
          .zero 2
.L_44492d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444944-.L_444931
.L_444931:
          .uleb128 .L_403609-.L_403560
          .uleb128 .L_4036b8-.L_403609
          .uleb128 .L_403b59-.L_403560
          .zero 1
          .uleb128 .L_40381b-.L_403560
          .uleb128 .L_403954-.L_40381b
          .uleb128 .L_403b8a-.L_403560
          .zero 1
          .uleb128 .L_403b85-.L_403560
          .uleb128 .L_403b8a-.L_403b85
          .zero 2
.L_444944:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44495f-.L_444948
.L_444948:
          .uleb128 .L_40c5c9-.L_40c530
          .uleb128 .L_40c5ce-.L_40c5c9
          .uleb128 .L_40c712-.L_40c530
          .zero 1
          .uleb128 .L_40c655-.L_40c530
          .uleb128 .L_40c65a-.L_40c655
          .uleb128 .L_40c6d8-.L_40c530
          .zero 1
          .uleb128 .L_40c670-.L_40c530
          .uleb128 .L_40c6d6-.L_40c670
          .uleb128 .L_40c717-.L_40c530
          .zero 1
          .uleb128 .L_40c70d-.L_40c530
          .uleb128 .L_40c72a-.L_40c70d
          .zero 2
.L_44495f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444993-.L_444963
.L_444963:
          .uleb128 .L_4045c8-.L_404460
          .uleb128 .L_4045cd-.L_4045c8
          .uleb128 .L_404a75-.L_404460
          .zero 1
          .uleb128 .L_404687-.L_404460
          .uleb128 .L_40468c-.L_404687
          .uleb128 .L_404aa5-.L_404460
          .zero 1
          .uleb128 .L_40469c-.L_404460
          .uleb128 .L_4046d8-.L_40469c
          .uleb128 .L_404a91-.L_404460
          .zero 1
          .uleb128 .L_4046e8-.L_404460
          .uleb128 .L_4046f8-.L_4046e8
          .uleb128 .L_404a62-.L_404460
          .zero 1
          .uleb128 .L_4047fa-.L_404460
          .uleb128 .L_4047ff-.L_4047fa
          .uleb128 .L_404a44-.L_404460
          .zero 1
          .uleb128 .L_404890-.L_404460
          .uleb128 .L_404895-.L_404890
          .uleb128 .L_404a60-.L_404460
          .zero 1
          .uleb128 .L_4048d7-.L_404460
          .uleb128 .L_40496f-.L_4048d7
          .uleb128 .L_404a44-.L_404460
          .zero 1
          .uleb128 .L_404a70-.L_404460
          .uleb128 .L_404aa5-.L_404a70
          .zero 2
.L_444993:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444a0f-.L_444997
.L_444997:
          .uleb128 .L_404bb2-.L_404ad0
          .uleb128 .L_404ca3-.L_404bb2
          .zero 2
          .uleb128 .L_404d3e-.L_404ad0
          .uleb128 .L_404d43-.L_404d3e
          .uleb128 .L_405737-.L_404ad0
          .zero 1
          .uleb128 .L_404e14-.L_404ad0
          .uleb128 .L_404e19-.L_404e14
          .uleb128 .L_405735-.L_404ad0
          .zero 1
          .uleb128 .L_404e29-.L_404ad0
          .uleb128 .L_404e65-.L_404e29
          .uleb128 .L_4056c0-.L_404ad0
          .zero 1
          .uleb128 .L_404e75-.L_404ad0
          .uleb128 .L_404ea2-.L_404e75
          .uleb128 .L_4056ad-.L_404ad0
          .zero 1
          .uleb128 .L_404f1f-.L_404ad0
          .uleb128 .L_404f24-.L_404f1f
          .uleb128 .L_405717-.L_404ad0
          .zero 1
          .uleb128 .L_404fad-.L_404ad0
          .uleb128 .L_404fb2-.L_404fad
          .uleb128 .L_40572f-.L_404ad0
          .zero 1
          .uleb128 .L_40508a-.L_404ad0
          .uleb128 .L_40508f-.L_40508a
          .uleb128 .L_405712-.L_404ad0
          .zero 1
          .uleb128 .L_405160-.L_404ad0
          .uleb128 .L_405165-.L_405160
          .uleb128 .L_4056d8-.L_404ad0
          .zero 1
          .uleb128 .L_405175-.L_404ad0
          .uleb128 .L_4051b1-.L_405175
          .uleb128 .L_4056d6-.L_404ad0
          .zero 1
          .uleb128 .L_4051c1-.L_404ad0
          .uleb128 .L_40520f-.L_4051c1
          .uleb128 .L_4056d4-.L_404ad0
          .zero 1
          .uleb128 .L_4052b4-.L_404ad0
          .uleb128 .L_4052b9-.L_4052b4
          .uleb128 .L_4056ad-.L_404ad0
          .zero 1
          .uleb128 .L_4052cf-.L_404ad0
          .uleb128 .L_4052d4-.L_4052cf
          .uleb128 .L_4056d4-.L_404ad0
          .zero 1
          .uleb128 .L_405348-.L_404ad0
          .uleb128 .L_40534d-.L_405348
          .uleb128 .L_405731-.L_404ad0
          .zero 1
          .uleb128 .L_4053d6-.L_404ad0
          .uleb128 .L_4053db-.L_4053d6
          .uleb128 .L_405733-.L_404ad0
          .zero 1
          .uleb128 .L_4053f1-.L_404ad0
          .uleb128 .L_4053f6-.L_4053f1
          .uleb128 .L_405731-.L_404ad0
          .zero 1
          .uleb128 .L_40547f-.L_404ad0
          .uleb128 .L_405484-.L_40547f
          .uleb128 .L_405717-.L_404ad0
          .zero 1
          .uleb128 .L_405503-.L_404ad0
          .uleb128 .L_405508-.L_405503
          .uleb128 .L_405731-.L_404ad0
          .zero 1
          .uleb128 .L_405514-.L_404ad0
          .uleb128 .L_405519-.L_405514
          .uleb128 .L_405717-.L_404ad0
          .zero 1
          .uleb128 .L_4056bb-.L_404ad0
          .uleb128 .L_405745-.L_4056bb
          .zero 2
.L_444a0f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444aba-.L_444a14
.L_444a14:
          .uleb128 .L_405782-.L_405750
          .uleb128 .L_4057c6-.L_405782
          .zero 2
          .uleb128 .L_405963-.L_405750
          .uleb128 .L_405a13-.L_405963
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_405b48-.L_405750
          .uleb128 .L_405b4d-.L_405b48
          .uleb128 .L_406b67-.L_405750
          .zero 1
          .uleb128 .L_405c1e-.L_405750
          .uleb128 .L_405c23-.L_405c1e
          .uleb128 .L_406b69-.L_405750
          .zero 1
          .uleb128 .L_405c33-.L_405750
          .uleb128 .L_405c6f-.L_405c33
          .uleb128 .L_406b6b-.L_405750
          .zero 1
          .uleb128 .L_405c7f-.L_405750
          .uleb128 .L_405cad-.L_405c7f
          .uleb128 .L_406b6d-.L_405750
          .zero 1
          .uleb128 .L_405cc1-.L_405750
          .uleb128 .L_405cf0-.L_405cc1
          .uleb128 .L_406ab9-.L_405750
          .zero 1
          .uleb128 .L_405d03-.L_405750
          .uleb128 .L_405d08-.L_405d03
          .uleb128 .L_406ad4-.L_405750
          .zero 1
          .uleb128 .L_405de5-.L_405750
          .uleb128 .L_405dea-.L_405de5
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_405f9c-.L_405750
          .uleb128 .L_405fa1-.L_405f9c
          .uleb128 .L_406b62-.L_405750
          .zero 1
          .uleb128 .L_406072-.L_405750
          .uleb128 .L_406077-.L_406072
          .uleb128 .L_406b22-.L_405750
          .zero 1
          .uleb128 .L_406087-.L_405750
          .uleb128 .L_4060c3-.L_406087
          .uleb128 .L_406b11-.L_405750
          .zero 1
          .uleb128 .L_4060d3-.L_405750
          .uleb128 .L_4060fc-.L_4060d3
          .uleb128 .L_406b0c-.L_405750
          .zero 1
          .uleb128 .L_406110-.L_405750
          .uleb128 .L_406129-.L_406110
          .uleb128 .L_406a92-.L_405750
          .zero 1
          .uleb128 .L_4061d4-.L_405750
          .uleb128 .L_4061d9-.L_4061d4
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_4061f2-.L_405750
          .uleb128 .L_4061f7-.L_4061f2
          .uleb128 .L_406af7-.L_405750
          .zero 1
          .uleb128 .L_40628a-.L_405750
          .uleb128 .L_40628f-.L_40628a
          .uleb128 .L_406a90-.L_405750
          .zero 1
          .uleb128 .L_40633d-.L_405750
          .uleb128 .L_406342-.L_40633d
          .uleb128 .L_406a75-.L_405750
          .zero 1
          .uleb128 .L_406375-.L_405750
          .uleb128 .L_4063d2-.L_406375
          .zero 2
          .uleb128 .L_40640c-.L_405750
          .uleb128 .L_4064ba-.L_40640c
          .uleb128 .L_406aef-.L_405750
          .zero 1
          .uleb128 .L_4064c3-.L_405750
          .uleb128 .L_4064c8-.L_4064c3
          .uleb128 .L_406a34-.L_405750
          .zero 1
          .uleb128 .L_40650c-.L_405750
          .uleb128 .L_406511-.L_40650c
          .uleb128 .L_406a90-.L_405750
          .zero 1
          .uleb128 .L_406632-.L_405750
          .uleb128 .L_406637-.L_406632
          .uleb128 .L_406ab5-.L_405750
          .zero 1
          .uleb128 .L_4066e5-.L_405750
          .uleb128 .L_4066ea-.L_4066e5
          .uleb128 .L_406ab7-.L_405750
          .zero 1
          .uleb128 .L_406737-.L_405750
          .uleb128 .L_40673c-.L_406737
          .uleb128 .L_406ab5-.L_405750
          .zero 1
          .uleb128 .L_4067e7-.L_405750
          .uleb128 .L_4067ec-.L_4067e7
          .uleb128 .L_406a90-.L_405750
          .zero 1
          .uleb128 .L_4068d3-.L_405750
          .uleb128 .L_4068d8-.L_4068d3
          .uleb128 .L_406ab5-.L_405750
          .zero 1
          .uleb128 .L_406a70-.L_405750
          .uleb128 .L_406a75-.L_406a70
          .zero 2
.L_444aba:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ac9-.L_444abe
.L_444abe:
          .uleb128 .L_406c7a-.L_406b70
          .uleb128 .L_406c7f-.L_406c7a
          .uleb128 .L_406ca1-.L_406b70
          .zero 1
          .uleb128 .L_406cd4-.L_406b70
          .uleb128 .L_406cd9-.L_406cd4
          .zero 2
.L_444ac9:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ad8-.L_444acd
.L_444acd:
          .uleb128 .L_406de1-.L_406ce0
          .uleb128 .L_406de6-.L_406de1
          .uleb128 .L_406e08-.L_406ce0
          .zero 1
          .uleb128 .L_406e3b-.L_406ce0
          .uleb128 .L_406e40-.L_406e3b
          .zero 2
.L_444ad8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ae7-.L_444adc
.L_444adc:
          .uleb128 .L_406f2c-.L_406e40
          .uleb128 .L_406f31-.L_406f2c
          .uleb128 .L_406f53-.L_406e40
          .zero 1
          .uleb128 .L_406f86-.L_406e40
          .uleb128 .L_406f8b-.L_406f86
          .zero 2
.L_444ae7:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444af6-.L_444aeb
.L_444aeb:
          .uleb128 .L_40701e-.L_406f90
          .uleb128 .L_407023-.L_40701e
          .uleb128 .L_40702c-.L_406f90
          .zero 1
          .uleb128 .L_40705f-.L_406f90
          .uleb128 .L_407064-.L_40705f
          .zero 2
.L_444af6:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444b42-.L_444afa
.L_444afa:
          .uleb128 .L_407132-.L_407070
          .uleb128 .L_407137-.L_407132
          .uleb128 .L_4076f5-.L_407070
          .zero 1
          .uleb128 .L_4071ed-.L_407070
          .uleb128 .L_4071f2-.L_4071ed
          .uleb128 .L_4077ae-.L_407070
          .zero 1
          .uleb128 .L_4072b3-.L_407070
          .uleb128 .L_4072b8-.L_4072b3
          .uleb128 .L_40776f-.L_407070
          .zero 1
          .uleb128 .L_4072c9-.L_407070
          .uleb128 .L_407307-.L_4072c9
          .uleb128 .L_407760-.L_407070
          .zero 1
          .uleb128 .L_407318-.L_407070
          .uleb128 .L_407340-.L_407318
          .uleb128 .L_40775b-.L_407070
          .zero 1
          .uleb128 .L_40734f-.L_407070
          .uleb128 .L_407368-.L_40734f
          .uleb128 .L_40770a-.L_407070
          .zero 1
          .uleb128 .L_407415-.L_407070
          .uleb128 .L_40741a-.L_407415
          .uleb128 .L_4076f5-.L_407070
          .zero 1
          .uleb128 .L_407433-.L_407070
          .uleb128 .L_407438-.L_407433
          .uleb128 .L_40772a-.L_407070
          .zero 1
          .uleb128 .L_4074bf-.L_407070
          .uleb128 .L_4074c4-.L_4074bf
          .uleb128 .L_40773c-.L_407070
          .zero 1
          .uleb128 .L_407557-.L_407070
          .uleb128 .L_40755c-.L_407557
          .uleb128 .L_407759-.L_407070
          .zero 1
          .uleb128 .L_407596-.L_407070
          .uleb128 .L_407631-.L_407596
          .uleb128 .L_40773c-.L_407070
          .zero 1
          .uleb128 .L_407705-.L_407070
          .uleb128 .L_40770a-.L_407705
          .zero 2
.L_444b42:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444d7d-.L_444b47
.L_444b47:
          .uleb128 .L_407889-.L_4077c0
          .uleb128 .L_40788e-.L_407889
          .zero 2
          .uleb128 .L_407a28-.L_4077c0
          .uleb128 .L_407a2d-.L_407a28
          .uleb128 .L_40ab2a-.L_4077c0
          .zero 1
          .uleb128 .L_407afe-.L_4077c0
          .uleb128 .L_407b03-.L_407afe
          .uleb128 .L_40ab4b-.L_4077c0
          .zero 1
          .uleb128 .L_407b13-.L_4077c0
          .uleb128 .L_407b4f-.L_407b13
          .uleb128 .L_40abd8-.L_4077c0
          .zero 1
          .uleb128 .L_407b5f-.L_4077c0
          .uleb128 .L_407b7b-.L_407b5f
          .uleb128 .L_40abec-.L_4077c0
          .zero 1
          .uleb128 .L_407cc4-.L_4077c0
          .uleb128 .L_407cc9-.L_407cc4
          .uleb128 .L_40abba-.L_4077c0
          .zero 1
          .uleb128 .L_407d9a-.L_4077c0
          .uleb128 .L_407d9f-.L_407d9a
          .uleb128 .L_40abf0-.L_4077c0
          .zero 1
          .uleb128 .L_407daf-.L_4077c0
          .uleb128 .L_407deb-.L_407daf
          .uleb128 .L_40abee-.L_4077c0
          .zero 1
          .uleb128 .L_407dfb-.L_4077c0
          .uleb128 .L_407e00-.L_407dfb
          .uleb128 .L_40abb3-.L_4077c0
          .zero 1
          .uleb128 .L_407ea0-.L_4077c0
          .uleb128 .L_407ea5-.L_407ea0
          .uleb128 .L_40accb-.L_4077c0
          .zero 1
          .uleb128 .L_407f5c-.L_4077c0
          .uleb128 .L_407f61-.L_407f5c
          .uleb128 .L_40aca3-.L_4077c0
          .zero 1
          .uleb128 .L_407fff-.L_4077c0
          .uleb128 .L_408004-.L_407fff
          .uleb128 .L_40abb5-.L_4077c0
          .zero 1
          .uleb128 .L_4080bb-.L_4077c0
          .uleb128 .L_4080c0-.L_4080bb
          .uleb128 .L_40acc6-.L_4077c0
          .zero 1
          .uleb128 .L_408132-.L_4077c0
          .uleb128 .L_408137-.L_408132
          .uleb128 .L_40abb5-.L_4077c0
          .zero 1
          .uleb128 .L_40839f-.L_4077c0
          .uleb128 .L_4083a4-.L_40839f
          .uleb128 .L_40ac0b-.L_4077c0
          .zero 1
          .uleb128 .L_408475-.L_4077c0
          .uleb128 .L_40847a-.L_408475
          .uleb128 .L_40ac06-.L_4077c0
          .zero 1
          .uleb128 .L_40848a-.L_4077c0
          .uleb128 .L_4084c6-.L_40848a
          .uleb128 .L_40ac04-.L_4077c0
          .zero 1
          .uleb128 .L_4084d6-.L_4077c0
          .uleb128 .L_40850f-.L_4084d6
          .uleb128 .L_40abff-.L_4077c0
          .zero 1
          .uleb128 .L_408523-.L_4077c0
          .uleb128 .L_40855e-.L_408523
          .uleb128 .L_40abfa-.L_4077c0
          .zero 1
          .uleb128 .L_408573-.L_4077c0
          .uleb128 .L_4085a7-.L_408573
          .uleb128 .L_40abf5-.L_4077c0
          .zero 1
          .uleb128 .L_408694-.L_4077c0
          .uleb128 .L_4086d6-.L_408694
          .zero 2
          .uleb128 .L_4086e1-.L_4077c0
          .uleb128 .L_4086e6-.L_4086e1
          .uleb128 .L_40ac10-.L_4077c0
          .zero 1
          .uleb128 .L_40871a-.L_4077c0
          .uleb128 .L_40871f-.L_40871a
          .zero 2
          .uleb128 .L_40872f-.L_4077c0
          .uleb128 .L_408768-.L_40872f
          .uleb128 .L_40aba7-.L_4077c0
          .zero 1
          .uleb128 .L_40877c-.L_4077c0
          .uleb128 .L_4087b2-.L_40877c
          .uleb128 .L_40aba5-.L_4077c0
          .zero 1
          .uleb128 .L_4087c5-.L_4077c0
          .uleb128 .L_4087f0-.L_4087c5
          .uleb128 .L_40ac94-.L_4077c0
          .zero 1
          .uleb128 .L_40892f-.L_4077c0
          .uleb128 .L_408934-.L_40892f
          .zero 2
          .uleb128 .L_408944-.L_4077c0
          .uleb128 .L_40897d-.L_408944
          .uleb128 .L_40abd6-.L_4077c0
          .zero 1
          .uleb128 .L_408991-.L_4077c0
          .uleb128 .L_4089ca-.L_408991
          .uleb128 .L_40abd4-.L_4077c0
          .zero 1
          .uleb128 .L_4089dd-.L_4077c0
          .uleb128 .L_408a08-.L_4089dd
          .uleb128 .L_40acda-.L_4077c0
          .zero 1
          .uleb128 .L_408a93-.L_4077c0
          .uleb128 .L_408ae7-.L_408a93
          .zero 2
          .uleb128 .L_408af7-.L_4077c0
          .uleb128 .L_408b30-.L_408af7
          .uleb128 .L_40abaf-.L_4077c0
          .zero 1
          .uleb128 .L_408b44-.L_4077c0
          .uleb128 .L_408b7a-.L_408b44
          .uleb128 .L_40abad-.L_4077c0
          .zero 1
          .uleb128 .L_408b8d-.L_4077c0
          .uleb128 .L_408bb8-.L_408b8d
          .uleb128 .L_40aaa5-.L_4077c0
          .zero 1
          .uleb128 .L_408c31-.L_4077c0
          .uleb128 .L_408c36-.L_408c31
          .zero 2
          .uleb128 .L_408c81-.L_4077c0
          .uleb128 .L_408c86-.L_408c81
          .uleb128 .L_40abb5-.L_4077c0
          .zero 1
          .uleb128 .L_408caf-.L_4077c0
          .uleb128 .L_408cb4-.L_408caf
          .uleb128 .L_40accb-.L_4077c0
          .zero 1
          .uleb128 .L_408e78-.L_4077c0
          .uleb128 .L_408e7d-.L_408e78
          .zero 2
          .uleb128 .L_408e8d-.L_4077c0
          .uleb128 .L_408ec6-.L_408e8d
          .uleb128 .L_40ac8f-.L_4077c0
          .zero 1
          .uleb128 .L_408eda-.L_4077c0
          .uleb128 .L_408f13-.L_408eda
          .uleb128 .L_40ac8a-.L_4077c0
          .zero 1
          .uleb128 .L_408f26-.L_4077c0
          .uleb128 .L_408f51-.L_408f26
          .uleb128 .L_40abbf-.L_4077c0
          .zero 1
          .uleb128 .L_408fb5-.L_4077c0
          .uleb128 .L_408ff5-.L_408fb5
          .zero 2
          .uleb128 .L_409000-.L_4077c0
          .uleb128 .L_409005-.L_409000
          .uleb128 .L_40ac9e-.L_4077c0
          .zero 1
          .uleb128 .L_40906c-.L_4077c0
          .uleb128 .L_4090e7-.L_40906c
          .zero 2
          .uleb128 .L_4090f7-.L_4077c0
          .uleb128 .L_409130-.L_4090f7
          .uleb128 .L_40ab82-.L_4077c0
          .zero 1
          .uleb128 .L_409144-.L_4077c0
          .uleb128 .L_40917a-.L_409144
          .uleb128 .L_40abd2-.L_4077c0
          .zero 1
          .uleb128 .L_40918d-.L_4077c0
          .uleb128 .L_4091b8-.L_40918d
          .uleb128 .L_40abcd-.L_4077c0
          .zero 1
          .uleb128 .L_40921a-.L_4077c0
          .uleb128 .L_40921f-.L_40921a
          .uleb128 .L_40accb-.L_4077c0
          .zero 1
          .uleb128 .L_4092da-.L_4077c0
          .uleb128 .L_4092df-.L_4092da
          .uleb128 .L_40acb7-.L_4077c0
          .zero 1
          .uleb128 .L_4093b0-.L_4077c0
          .uleb128 .L_4093b5-.L_4093b0
          .uleb128 .L_40acb2-.L_4077c0
          .zero 1
          .uleb128 .L_4093c5-.L_4077c0
          .uleb128 .L_409401-.L_4093c5
          .uleb128 .L_40acad-.L_4077c0
          .zero 1
          .uleb128 .L_409411-.L_4077c0
          .uleb128 .L_40944a-.L_409411
          .uleb128 .L_40aca8-.L_4077c0
          .zero 1
          .uleb128 .L_40945e-.L_4077c0
          .uleb128 .L_409499-.L_40945e
          .uleb128 .L_40acc1-.L_4077c0
          .zero 1
          .uleb128 .L_4094ae-.L_4077c0
          .uleb128 .L_4094e2-.L_4094ae
          .uleb128 .L_40acbc-.L_4077c0
          .zero 1
          .uleb128 .L_4095ce-.L_4077c0
          .uleb128 .L_40960e-.L_4095ce
          .zero 2
          .uleb128 .L_409619-.L_4077c0
          .uleb128 .L_40961e-.L_409619
          .uleb128 .L_40ac99-.L_4077c0
          .zero 1
          .uleb128 .L_4096bd-.L_4077c0
          .uleb128 .L_4096c2-.L_4096bd
          .zero 2
          .uleb128 .L_4096d2-.L_4077c0
          .uleb128 .L_40970b-.L_4096d2
          .uleb128 .L_40abb1-.L_4077c0
          .zero 1
          .uleb128 .L_40971f-.L_4077c0
          .uleb128 .L_409755-.L_40971f
          .uleb128 .L_40acd5-.L_4077c0
          .zero 1
          .uleb128 .L_409768-.L_4077c0
          .uleb128 .L_409793-.L_409768
          .uleb128 .L_40acd0-.L_4077c0
          .zero 1
          .uleb128 .L_409855-.L_4077c0
          .uleb128 .L_40985a-.L_409855
          .zero 2
          .uleb128 .L_40986a-.L_4077c0
          .uleb128 .L_4098a3-.L_40986a
          .uleb128 .L_40ac7b-.L_4077c0
          .zero 1
          .uleb128 .L_4098b7-.L_4077c0
          .uleb128 .L_4098ed-.L_4098b7
          .uleb128 .L_40ac76-.L_4077c0
          .zero 1
          .uleb128 .L_409900-.L_4077c0
          .uleb128 .L_40992b-.L_409900
          .uleb128 .L_40ac71-.L_4077c0
          .zero 1
          .uleb128 .L_409a18-.L_4077c0
          .uleb128 .L_409a1d-.L_409a18
          .uleb128 .L_40ac85-.L_4077c0
          .zero 1
          .uleb128 .L_409aee-.L_4077c0
          .uleb128 .L_409af3-.L_409aee
          .uleb128 .L_40ac80-.L_4077c0
          .zero 1
          .uleb128 .L_409b03-.L_4077c0
          .uleb128 .L_409b3f-.L_409b03
          .uleb128 .L_40ac67-.L_4077c0
          .zero 1
          .uleb128 .L_409b4f-.L_4077c0
          .uleb128 .L_409b88-.L_409b4f
          .uleb128 .L_40ac62-.L_4077c0
          .zero 1
          .uleb128 .L_409b9c-.L_4077c0
          .uleb128 .L_409bd4-.L_409b9c
          .uleb128 .L_40ac5d-.L_4077c0
          .zero 1
          .uleb128 .L_409be9-.L_4077c0
          .uleb128 .L_409c1d-.L_409be9
          .uleb128 .L_40ac58-.L_4077c0
          .zero 1
          .uleb128 .L_409cff-.L_4077c0
          .uleb128 .L_409d04-.L_409cff
          .zero 2
          .uleb128 .L_409d14-.L_4077c0
          .uleb128 .L_409d4d-.L_409d14
          .uleb128 .L_40abab-.L_4077c0
          .zero 1
          .uleb128 .L_409d61-.L_4077c0
          .uleb128 .L_409d9c-.L_409d61
          .uleb128 .L_40aba9-.L_4077c0
          .zero 1
          .uleb128 .L_409db1-.L_4077c0
          .uleb128 .L_409de0-.L_409db1
          .uleb128 .L_40ac6c-.L_4077c0
          .zero 1
          .uleb128 .L_409efd-.L_4077c0
          .uleb128 .L_409f02-.L_409efd
          .uleb128 .L_40ac53-.L_4077c0
          .zero 1
          .uleb128 .L_409fc6-.L_4077c0
          .uleb128 .L_409fcb-.L_409fc6
          .uleb128 .L_40ac15-.L_4077c0
          .zero 1
          .uleb128 .L_40a00e-.L_4077c0
          .uleb128 .L_40a013-.L_40a00e
          .zero 2
          .uleb128 .L_40a023-.L_4077c0
          .uleb128 .L_40a05c-.L_40a023
          .uleb128 .L_40abcb-.L_4077c0
          .zero 1
          .uleb128 .L_40a070-.L_4077c0
          .uleb128 .L_40a0a6-.L_40a070
          .uleb128 .L_40abc9-.L_4077c0
          .zero 1
          .uleb128 .L_40a0b9-.L_4077c0
          .uleb128 .L_40a0e4-.L_40a0b9
          .uleb128 .L_40abc4-.L_4077c0
          .zero 1
          .uleb128 .L_40a170-.L_4077c0
          .uleb128 .L_40a175-.L_40a170
          .uleb128 .L_40aba0-.L_4077c0
          .zero 1
          .uleb128 .L_40a239-.L_4077c0
          .uleb128 .L_40a23e-.L_40a239
          .uleb128 .L_40acdf-.L_4077c0
          .zero 1
          .uleb128 .L_40a2f1-.L_4077c0
          .uleb128 .L_40a2f6-.L_40a2f1
          .uleb128 .L_40ab0a-.L_4077c0
          .zero 1
          .uleb128 .L_40a3ba-.L_4077c0
          .uleb128 .L_40a3bf-.L_40a3ba
          .uleb128 .L_40ab84-.L_4077c0
          .zero 1
          .uleb128 .L_40a417-.L_4077c0
          .uleb128 .L_40a41c-.L_40a417
          .zero 2
          .uleb128 .L_40a427-.L_4077c0
          .uleb128 .L_40a42c-.L_40a427
          .uleb128 .L_40ac34-.L_4077c0
          .zero 1
          .uleb128 .L_40a445-.L_4077c0
          .uleb128 .L_40a44a-.L_40a445
          .uleb128 .L_40ac53-.L_4077c0
          .zero 1
          .uleb128 .L_40a511-.L_4077c0
          .uleb128 .L_40a516-.L_40a511
          .uleb128 .L_40aba0-.L_4077c0
          .zero 1
          .uleb128 .L_40a5e2-.L_4077c0
          .uleb128 .L_40a5e7-.L_40a5e2
          .uleb128 .L_40ab0a-.L_4077c0
          .zero 1
          .uleb128 .L_40a6a3-.L_4077c0
          .uleb128 .L_40a6a8-.L_40a6a3
          .uleb128 .L_40ac53-.L_4077c0
          .zero 1
          .uleb128 .L_40a6b6-.L_4077c0
          .uleb128 .L_40a6bb-.L_40a6b6
          .uleb128 .L_40aba0-.L_4077c0
          .zero 1
          .uleb128 .L_40a74b-.L_4077c0
          .uleb128 .L_40a750-.L_40a74b
          .zero 2
          .uleb128 .L_40a760-.L_4077c0
          .uleb128 .L_40a799-.L_40a760
          .uleb128 .L_40ab7a-.L_4077c0
          .zero 1
          .uleb128 .L_40a7ad-.L_4077c0
          .uleb128 .L_40a7e3-.L_40a7ad
          .uleb128 .L_40ab72-.L_4077c0
          .zero 1
          .uleb128 .L_40a7f6-.L_4077c0
          .uleb128 .L_40a821-.L_40a7f6
          .uleb128 .L_40ab08-.L_4077c0
          .zero 1
          .uleb128 .L_40a997-.L_4077c0
          .uleb128 .L_40a99c-.L_40a997
          .uleb128 .L_40ab0a-.L_4077c0
          .zero 1
          .uleb128 .L_40aae9-.L_4077c0
          .uleb128 .L_40abec-.L_40aae9
          .zero 2
.L_444d7d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444dbc-.L_444d81
.L_444d81:
          .uleb128 .L_40add8-.L_40acf0
          .uleb128 .L_40addd-.L_40add8
          .zero 2
          .uleb128 .L_40aed9-.L_40acf0
          .uleb128 .L_40aede-.L_40aed9
          .uleb128 .L_40b527-.L_40acf0
          .zero 1
          .uleb128 .L_40af9b-.L_40acf0
          .uleb128 .L_40afa0-.L_40af9b
          .uleb128 .L_40b4e6-.L_40acf0
          .zero 1
          .uleb128 .L_40afb0-.L_40acf0
          .uleb128 .L_40afec-.L_40afb0
          .uleb128 .L_40b4d2-.L_40acf0
          .zero 1
          .uleb128 .L_40affc-.L_40acf0
          .uleb128 .L_40b018-.L_40affc
          .uleb128 .L_40b4bd-.L_40acf0
          .zero 1
          .uleb128 .L_40b0b3-.L_40acf0
          .uleb128 .L_40b1a9-.L_40b0b3
          .zero 2
          .uleb128 .L_40b270-.L_40acf0
          .uleb128 .L_40b275-.L_40b270
          .uleb128 .L_40b4a5-.L_40acf0
          .zero 1
          .uleb128 .L_40b302-.L_40acf0
          .uleb128 .L_40b307-.L_40b302
          .uleb128 .L_40b4d0-.L_40acf0
          .zero 1
          .uleb128 .L_40b341-.L_40acf0
          .uleb128 .L_40b3d8-.L_40b341
          .uleb128 .L_40b4a5-.L_40acf0
          .zero 1
          .uleb128 .L_40b4cb-.L_40acf0
          .uleb128 .L_40b527-.L_40b4cb
          .zero 2
.L_444dbc:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444dd6-.L_444dc0
.L_444dc0:
          .uleb128 .L_40b6fd-.L_40b640
          .uleb128 .L_40b702-.L_40b6fd
          .zero 2
          .uleb128 .L_40b733-.L_40b640
          .uleb128 .L_40b78f-.L_40b733
          .uleb128 .L_40b796-.L_40b640
          .zero 1
          .uleb128 .L_40b7af-.L_40b640
          .uleb128 .L_40b7b4-.L_40b7af
          .zero 2
          .uleb128 .L_40b7cc-.L_40b640
          .uleb128 .L_40b7d1-.L_40b7cc
          .uleb128 .L_40b796-.L_40b640
          .zero 1
.L_444dd6:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444dec-.L_444dda
.L_444dda:
          .uleb128 .L_40b8db-.L_40b7e0
          .uleb128 .L_40bae3-.L_40b8db
          .uleb128 .L_40bae3-.L_40b7e0
          .zero 1
          .uleb128 .L_40bb05-.L_40b7e0
          .uleb128 .L_40bb0a-.L_40bb05
          .zero 2
          .uleb128 .L_40bb16-.L_40b7e0
          .uleb128 .L_40bb27-.L_40bb16
          .uleb128 .L_40bae3-.L_40b7e0
          .zero 1
.L_444dec:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444df0-.L_444df0
.L_444df0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444e0f-.L_444df4
.L_444df4:
          .uleb128 .L_41063e-.L_410610
          .uleb128 .L_410643-.L_41063e
          .zero 2
          .uleb128 .L_41068c-.L_410610
          .uleb128 .L_410691-.L_41068c
          .uleb128 .L_4108c5-.L_410610
          .zero 1
          .uleb128 .L_410712-.L_410610
          .uleb128 .L_410717-.L_410712
          .uleb128 .L_4108e2-.L_410610
          .zero 1
          .uleb128 .L_410762-.L_410610
          .uleb128 .L_41082c-.L_410762
          .uleb128 .L_4108c5-.L_410610
          .zero 1
          .uleb128 .L_4108dd-.L_410610
          .uleb128 .L_4108e2-.L_4108dd
          .zero 2
.L_444e0f:
          .zero 1
.L_444e10:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444e36-.L_444e14
.L_444e14:
          .uleb128 .L_40cffa-.L_40cfb0
          .uleb128 .L_40cfff-.L_40cffa
          .zero 2
          .uleb128 .L_40d072-.L_40cfb0
          .uleb128 .L_40d077-.L_40d072
          .uleb128 .L_40d1c8-.L_40cfb0
          .zero 1
          .uleb128 .L_40d084-.L_40cfb0
          .uleb128 .L_40d089-.L_40d084
          .uleb128 .L_40d1f2-.L_40cfb0
          .zero 1
          .uleb128 .L_40d0c4-.L_40cfb0
          .uleb128 .L_40d1c8-.L_40d0c4
          .uleb128 .L_40d1c8-.L_40cfb0
          .zero 1
          .uleb128 .L_40d1e1-.L_40cfb0
          .uleb128 .L_40d1e6-.L_40d1e1
          .zero 2
          .uleb128 .L_40d1ed-.L_40cfb0
          .uleb128 .L_40d1f2-.L_40d1ed
          .uleb128 .L_40d1c8-.L_40cfb0
          .zero 1
.L_444e36:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444e5c-.L_444e3a
.L_444e3a:
          .uleb128 .L_40d58e-.L_40d4e0
          .uleb128 .L_40d593-.L_40d58e
          .uleb128 .L_40d6a5-.L_40d4e0
          .zero 1
          .uleb128 .L_40d626-.L_40d4e0
          .uleb128 .L_40d62b-.L_40d626
          .uleb128 .L_40d6df-.L_40d4e0
          .zero 1
          .uleb128 .L_40d63b-.L_40d4e0
          .uleb128 .L_40d677-.L_40d63b
          .uleb128 .L_40d6cb-.L_40d4e0
          .zero 1
          .uleb128 .L_40d687-.L_40d4e0
          .uleb128 .L_40d698-.L_40d687
          .uleb128 .L_40d6be-.L_40d4e0
          .zero 1
          .uleb128 .L_40d6b9-.L_40d4e0
          .uleb128 .L_40d6be-.L_40d6b9
          .zero 2
          .uleb128 .L_40d6da-.L_40d4e0
          .uleb128 .L_40d6df-.L_40d6da
          .zero 2
.L_444e5c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444e90-.L_444e60
.L_444e60:
          .uleb128 .L_410b50-.L_410a90
          .uleb128 .L_410b55-.L_410b50
          .uleb128 .L_411082-.L_410a90
          .zero 1
          .uleb128 .L_410c12-.L_410a90
          .uleb128 .L_410c17-.L_410c12
          .uleb128 .L_411040-.L_410a90
          .zero 1
          .uleb128 .L_410c27-.L_410a90
          .uleb128 .L_410c63-.L_410c27
          .uleb128 .L_411087-.L_410a90
          .zero 1
          .uleb128 .L_410c73-.L_410a90
          .uleb128 .L_410c78-.L_410c73
          .uleb128 .L_41109b-.L_410a90
          .zero 1
          .uleb128 .L_410da0-.L_410a90
          .uleb128 .L_410da5-.L_410da0
          .uleb128 .L_411080-.L_410a90
          .zero 1
          .uleb128 .L_410e37-.L_410a90
          .uleb128 .L_410e3c-.L_410e37
          .uleb128 .L_411023-.L_410a90
          .zero 1
          .uleb128 .L_410e82-.L_410a90
          .uleb128 .L_410f1e-.L_410e82
          .uleb128 .L_411080-.L_410a90
          .zero 1
          .uleb128 .L_41107b-.L_410a90
          .uleb128 .L_4110ae-.L_41107b
          .zero 2
.L_444e90:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ec4-.L_444e94
.L_444e94:
          .uleb128 .L_4111a0-.L_4110e0
          .uleb128 .L_4111a5-.L_4111a0
          .uleb128 .L_4116d2-.L_4110e0
          .zero 1
          .uleb128 .L_411262-.L_4110e0
          .uleb128 .L_411267-.L_411262
          .uleb128 .L_411690-.L_4110e0
          .zero 1
          .uleb128 .L_411277-.L_4110e0
          .uleb128 .L_4112b3-.L_411277
          .uleb128 .L_4116d7-.L_4110e0
          .zero 1
          .uleb128 .L_4112c3-.L_4110e0
          .uleb128 .L_4112c8-.L_4112c3
          .uleb128 .L_4116eb-.L_4110e0
          .zero 1
          .uleb128 .L_4113f0-.L_4110e0
          .uleb128 .L_4113f5-.L_4113f0
          .uleb128 .L_4116d0-.L_4110e0
          .zero 1
          .uleb128 .L_411487-.L_4110e0
          .uleb128 .L_41148c-.L_411487
          .uleb128 .L_411673-.L_4110e0
          .zero 1
          .uleb128 .L_4114d2-.L_4110e0
          .uleb128 .L_41156e-.L_4114d2
          .uleb128 .L_4116d0-.L_4110e0
          .zero 1
          .uleb128 .L_4116cb-.L_4110e0
          .uleb128 .L_4116fe-.L_4116cb
          .zero 2
.L_444ec4:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444ef8-.L_444ec8
.L_444ec8:
          .uleb128 .L_4117f0-.L_411730
          .uleb128 .L_4117f5-.L_4117f0
          .uleb128 .L_411d22-.L_411730
          .zero 1
          .uleb128 .L_4118b2-.L_411730
          .uleb128 .L_4118b7-.L_4118b2
          .uleb128 .L_411ce0-.L_411730
          .zero 1
          .uleb128 .L_4118c7-.L_411730
          .uleb128 .L_411903-.L_4118c7
          .uleb128 .L_411d27-.L_411730
          .zero 1
          .uleb128 .L_411913-.L_411730
          .uleb128 .L_411918-.L_411913
          .uleb128 .L_411d3b-.L_411730
          .zero 1
          .uleb128 .L_411a40-.L_411730
          .uleb128 .L_411a45-.L_411a40
          .uleb128 .L_411d20-.L_411730
          .zero 1
          .uleb128 .L_411ad7-.L_411730
          .uleb128 .L_411adc-.L_411ad7
          .uleb128 .L_411cc3-.L_411730
          .zero 1
          .uleb128 .L_411b22-.L_411730
          .uleb128 .L_411bbe-.L_411b22
          .uleb128 .L_411d20-.L_411730
          .zero 1
          .uleb128 .L_411d1b-.L_411730
          .uleb128 .L_411d4e-.L_411d1b
          .zero 2
.L_444ef8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444f2c-.L_444efc
.L_444efc:
          .uleb128 .L_40dd60-.L_40db10
          .uleb128 .L_40dd65-.L_40dd60
          .uleb128 .L_40e1ed-.L_40db10
          .zero 1
          .uleb128 .L_40de1f-.L_40db10
          .uleb128 .L_40de24-.L_40de1f
          .uleb128 .L_40e21d-.L_40db10
          .zero 1
          .uleb128 .L_40de34-.L_40db10
          .uleb128 .L_40de70-.L_40de34
          .uleb128 .L_40e209-.L_40db10
          .zero 1
          .uleb128 .L_40de80-.L_40db10
          .uleb128 .L_40de91-.L_40de80
          .uleb128 .L_40e1da-.L_40db10
          .zero 1
          .uleb128 .L_40df84-.L_40db10
          .uleb128 .L_40df89-.L_40df84
          .uleb128 .L_40e1c0-.L_40db10
          .zero 1
          .uleb128 .L_40e019-.L_40db10
          .uleb128 .L_40e01e-.L_40e019
          .uleb128 .L_40e1d8-.L_40db10
          .zero 1
          .uleb128 .L_40e055-.L_40db10
          .uleb128 .L_40e0eb-.L_40e055
          .uleb128 .L_40e1c0-.L_40db10
          .zero 1
          .uleb128 .L_40e1e8-.L_40db10
          .uleb128 .L_40e21d-.L_40e1e8
          .zero 2
.L_444f2c:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_444f58-.L_444f2f
.L_444f2f:
          .byte 0x1
          .uleb128 .L_444f51-.L_444f31
.L_444f31:
          .uleb128 .L_411dc6-.L_411db0
          .uleb128 .L_411dcb-.L_411dc6
          .zero 2
          .uleb128 .L_411e22-.L_411db0
          .uleb128 .L_411e27-.L_411e22
          .uleb128 .L_411e7b-.L_411db0
          .zero 1
          .uleb128 .L_411e3e-.L_411db0
          .uleb128 .L_411e43-.L_411e3e
          .uleb128 .L_411e93-.L_411db0
          .byte 0x1
          .uleb128 .L_411e8e-.L_411db0
          .uleb128 .L_411e93-.L_411e8e
          .zero 2
          .uleb128 .L_411e9b-.L_411db0
          .uleb128 .L_411ea0-.L_411e9b
          .uleb128 .L_411ea0-.L_411db0
          .byte 0x1
          .uleb128 .L_411ec7-.L_411db0
          .uleb128 .L_411ecc-.L_411ec7
          .uleb128 .L_411ecc-.L_411db0
          .zero 1
.L_444f51:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444f58:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444f81-.L_444f5c
.L_444f5c:
          .uleb128 .L_40e360-.L_40e250
          .uleb128 .L_40e365-.L_40e360
          .uleb128 .L_40e878-.L_40e250
          .zero 1
          .uleb128 .L_40e41f-.L_40e250
          .uleb128 .L_40e424-.L_40e41f
          .uleb128 .L_40e8a9-.L_40e250
          .zero 1
          .uleb128 .L_40e434-.L_40e250
          .uleb128 .L_40e470-.L_40e434
          .uleb128 .L_40e8ca-.L_40e250
          .zero 1
          .uleb128 .L_40e605-.L_40e250
          .uleb128 .L_40e60a-.L_40e605
          .uleb128 .L_40e8a7-.L_40e250
          .zero 1
          .uleb128 .L_40e69b-.L_40e250
          .uleb128 .L_40e6a0-.L_40e69b
          .uleb128 .L_40e88e-.L_40e250
          .zero 1
          .uleb128 .L_40e6e1-.L_40e250
          .uleb128 .L_40e77d-.L_40e6e1
          .uleb128 .L_40e8a7-.L_40e250
          .zero 1
.L_444f81:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444f95-.L_444f85
.L_444f85:
          .uleb128 .L_40e978-.L_40e910
          .uleb128 .L_40e97d-.L_40e978
          .zero 2
          .uleb128 .L_40e9f9-.L_40e910
          .uleb128 .L_40eb6b-.L_40e9f9
          .uleb128 .L_40eb84-.L_40e910
          .zero 1
          .uleb128 .L_40eb99-.L_40e910
          .uleb128 .L_40eb9e-.L_40eb99
          .zero 2
.L_444f95:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444fc9-.L_444f99
.L_444f99:
          .uleb128 .L_4124f3-.L_4123d0
          .uleb128 .L_4124f8-.L_4124f3
          .uleb128 .L_412aa6-.L_4123d0
          .zero 1
          .uleb128 .L_4125b2-.L_4123d0
          .uleb128 .L_4125b7-.L_4125b2
          .uleb128 .L_412a44-.L_4123d0
          .zero 1
          .uleb128 .L_4125c7-.L_4123d0
          .uleb128 .L_412603-.L_4125c7
          .uleb128 .L_412a92-.L_4123d0
          .zero 1
          .uleb128 .L_412613-.L_4123d0
          .uleb128 .L_412618-.L_412613
          .uleb128 .L_412a7f-.L_4123d0
          .zero 1
          .uleb128 .L_4127d6-.L_4123d0
          .uleb128 .L_4127db-.L_4127d6
          .uleb128 .L_412a26-.L_4123d0
          .zero 1
          .uleb128 .L_41286c-.L_4123d0
          .uleb128 .L_412871-.L_41286c
          .uleb128 .L_412a42-.L_4123d0
          .zero 1
          .uleb128 .L_4128b9-.L_4123d0
          .uleb128 .L_412951-.L_4128b9
          .uleb128 .L_412a26-.L_4123d0
          .zero 1
          .uleb128 .L_412a7a-.L_4123d0
          .uleb128 .L_412aa6-.L_412a7a
          .zero 2
.L_444fc9:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444fcd-.L_444fcd
.L_444fcd:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_444fdd-.L_444fd1
.L_444fd1:
          .uleb128 .L_40f1a4-.L_40f100
          .uleb128 .L_40f35c-.L_40f1a4
          .uleb128 .L_40f35c-.L_40f100
          .zero 1
          .uleb128 .L_40f371-.L_40f100
          .uleb128 .L_40f376-.L_40f371
          .zero 2
.L_444fdd:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445016-.L_444fe1
.L_444fe1:
          .uleb128 .L_40f6ae-.L_40f5a0
          .uleb128 .L_40f6b3-.L_40f6ae
          .zero 2
          .uleb128 .L_40f74a-.L_40f5a0
          .uleb128 .L_40f74f-.L_40f74a
          .uleb128 .L_40fd0f-.L_40f5a0
          .zero 1
          .uleb128 .L_40f810-.L_40f5a0
          .uleb128 .L_40f815-.L_40f810
          .uleb128 .L_40fcc6-.L_40f5a0
          .zero 1
          .uleb128 .L_40f826-.L_40f5a0
          .uleb128 .L_40f864-.L_40f826
          .uleb128 .L_40fcb1-.L_40f5a0
          .zero 1
          .uleb128 .L_40f875-.L_40f5a0
          .uleb128 .L_40f888-.L_40f875
          .uleb128 .L_40fc9e-.L_40f5a0
          .zero 1
          .uleb128 .L_40fa2b-.L_40f5a0
          .uleb128 .L_40fadb-.L_40fa2b
          .uleb128 .L_40fd14-.L_40f5a0
          .zero 1
          .uleb128 .L_40fb6d-.L_40f5a0
          .uleb128 .L_40fb72-.L_40fb6d
          .uleb128 .L_40fc7c-.L_40f5a0
          .zero 1
          .uleb128 .L_40fbaa-.L_40f5a0
          .uleb128 .L_40fbaf-.L_40fbaa
          .uleb128 .L_40fd14-.L_40f5a0
          .zero 1
          .uleb128 .L_40fcac-.L_40f5a0
          .uleb128 .L_40fd0f-.L_40fcac
          .zero 2
.L_445016:
          .zero 2
.L_445018:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_44503c-.L_44501b
.L_44501b:
          .byte 0x1
          .uleb128 .L_445033-.L_44501d
.L_44501d:
          .uleb128 .L_413725-.L_413560
          .uleb128 .L_413771-.L_413725
          .zero 2
          .uleb128 .L_413795-.L_413560
          .uleb128 .L_41379a-.L_413795
          .uleb128 .L_4138dd-.L_413560
          .byte 0x1
          .uleb128 .L_4138ed-.L_413560
          .uleb128 .L_4138f2-.L_4138ed
          .uleb128 .L_4138f2-.L_413560
          .zero 1
          .uleb128 .L_4138fd-.L_413560
          .uleb128 .L_413902-.L_4138fd
          .zero 2
.L_445033:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44503c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44507c-.L_445040
.L_445040:
          .uleb128 .L_413e2f-.L_413e00
          .uleb128 .L_413ec5-.L_413e2f
          .zero 2
          .uleb128 .L_4140d9-.L_413e00
          .uleb128 .L_4140de-.L_4140d9
          .uleb128 .L_414700-.L_413e00
          .zero 1
          .uleb128 .L_41419b-.L_413e00
          .uleb128 .L_4141a0-.L_41419b
          .uleb128 .L_41471c-.L_413e00
          .zero 1
          .uleb128 .L_4141b0-.L_413e00
          .uleb128 .L_4141ec-.L_4141b0
          .uleb128 .L_414746-.L_413e00
          .zero 1
          .uleb128 .L_4141fc-.L_413e00
          .uleb128 .L_414201-.L_4141fc
          .uleb128 .L_41475a-.L_413e00
          .zero 1
          .uleb128 .L_414285-.L_413e00
          .uleb128 .L_41428a-.L_414285
          .uleb128 .L_4146fe-.L_413e00
          .zero 1
          .uleb128 .L_41431b-.L_413e00
          .uleb128 .L_414320-.L_41431b
          .uleb128 .L_4146e2-.L_413e00
          .zero 1
          .uleb128 .L_4143f3-.L_413e00
          .uleb128 .L_4144ed-.L_4143f3
          .zero 2
          .uleb128 .L_41455f-.L_413e00
          .uleb128 .L_4145fd-.L_41455f
          .uleb128 .L_4146fe-.L_413e00
          .zero 1
          .uleb128 .L_414607-.L_413e00
          .uleb128 .L_41476d-.L_414607
          .zero 2
.L_44507c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44508d-.L_445080
.L_445080:
          .uleb128 .L_410368-.L_410340
          .uleb128 .L_41036d-.L_410368
          .zero 2
          .uleb128 .L_410387-.L_410340
          .uleb128 .L_41038c-.L_410387
          .uleb128 .L_4103be-.L_410340
          .zero 1
          .uleb128 .L_4103d0-.L_410340
          .uleb128 .L_4103d5-.L_4103d0
          .zero 2
.L_44508d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44509f-.L_445091
.L_445091:
          .uleb128 .L_410408-.L_4103e0
          .uleb128 .L_41040d-.L_410408
          .zero 2
          .uleb128 .L_41042f-.L_4103e0
          .uleb128 .L_410434-.L_41042f
          .uleb128 .L_41046f-.L_4103e0
          .zero 1
          .uleb128 .L_41047d-.L_4103e0
          .uleb128 .L_410482-.L_41047d
          .zero 2
.L_44509f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4450b1-.L_4450a3
.L_4450a3:
          .uleb128 .L_4104b8-.L_410490
          .uleb128 .L_4104bd-.L_4104b8
          .zero 2
          .uleb128 .L_4104df-.L_410490
          .uleb128 .L_4104e4-.L_4104df
          .uleb128 .L_41051f-.L_410490
          .zero 1
          .uleb128 .L_41052d-.L_410490
          .uleb128 .L_410532-.L_41052d
          .zero 2
.L_4450b1:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4450c0-.L_4450b5
.L_4450b5:
          .uleb128 .L_41556c-.L_4154c0
          .uleb128 .L_415571-.L_41556c
          .uleb128 .L_415595-.L_4154c0
          .zero 1
          .uleb128 .L_4155a8-.L_4154c0
          .uleb128 .L_4155ad-.L_4155a8
          .zero 2
.L_4450c0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4450d3-.L_4450c4
.L_4450c4:
          .uleb128 .L_415a91-.L_415a60
          .uleb128 .L_415a96-.L_415a91
          .zero 2
          .uleb128 .L_415b5d-.L_415a60
          .uleb128 .L_415b90-.L_415b5d
          .uleb128 .L_415b90-.L_415a60
          .zero 1
          .uleb128 .L_415ba8-.L_415a60
          .uleb128 .L_415bad-.L_415ba8
          .zero 2
.L_4450d3:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44510b-.L_4450d7
.L_4450d7:
          .uleb128 .L_415e0a-.L_415dc0
          .uleb128 .L_415e0f-.L_415e0a
          .zero 2
          .uleb128 .L_415eff-.L_415dc0
          .uleb128 .L_415f04-.L_415eff
          .uleb128 .L_4163d5-.L_415dc0
          .zero 1
          .uleb128 .L_415fbe-.L_415dc0
          .uleb128 .L_415fc3-.L_415fbe
          .uleb128 .L_4163f1-.L_415dc0
          .zero 1
          .uleb128 .L_415fd3-.L_415dc0
          .uleb128 .L_41600f-.L_415fd3
          .uleb128 .L_416390-.L_415dc0
          .zero 1
          .uleb128 .L_41601f-.L_415dc0
          .uleb128 .L_416024-.L_41601f
          .uleb128 .L_4163a4-.L_415dc0
          .zero 1
          .uleb128 .L_41611a-.L_415dc0
          .uleb128 .L_4161c4-.L_41611a
          .uleb128 .L_4163d3-.L_415dc0
          .zero 1
          .uleb128 .L_416255-.L_415dc0
          .uleb128 .L_41625a-.L_416255
          .uleb128 .L_4163b7-.L_415dc0
          .zero 1
          .uleb128 .L_416300-.L_415dc0
          .uleb128 .L_416305-.L_416300
          .uleb128 .L_4163d3-.L_415dc0
          .zero 1
          .uleb128 .L_416386-.L_415dc0
          .uleb128 .L_4163f1-.L_416386
          .zero 2
.L_44510b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4451b6-.L_445110
.L_445110:
          .uleb128 .L_41650d-.L_4164d0
          .uleb128 .L_4166de-.L_41650d
          .zero 2
          .uleb128 .L_41687d-.L_4164d0
          .uleb128 .L_416882-.L_41687d
          .uleb128 .L_417a4a-.L_4164d0
          .zero 1
          .uleb128 .L_416953-.L_4164d0
          .uleb128 .L_416958-.L_416953
          .uleb128 .L_417a6b-.L_4164d0
          .zero 1
          .uleb128 .L_416968-.L_4164d0
          .uleb128 .L_4169a4-.L_416968
          .uleb128 .L_417ad9-.L_4164d0
          .zero 1
          .uleb128 .L_4169b4-.L_4164d0
          .uleb128 .L_4169eb-.L_4169b4
          .uleb128 .L_417a8d-.L_4164d0
          .zero 1
          .uleb128 .L_416b16-.L_4164d0
          .uleb128 .L_416b1b-.L_416b16
          .uleb128 .L_417ab8-.L_4164d0
          .zero 1
          .uleb128 .L_416bbd-.L_4164d0
          .uleb128 .L_416c40-.L_416bbd
          .zero 2
          .uleb128 .L_416de5-.L_4164d0
          .uleb128 .L_416dea-.L_416de5
          .uleb128 .L_417ad4-.L_4164d0
          .zero 1
          .uleb128 .L_416ebb-.L_4164d0
          .uleb128 .L_416ec0-.L_416ebb
          .uleb128 .L_417aea-.L_4164d0
          .zero 1
          .uleb128 .L_416ed0-.L_4164d0
          .uleb128 .L_416f0c-.L_416ed0
          .uleb128 .L_417abe-.L_4164d0
          .zero 1
          .uleb128 .L_416f1c-.L_4164d0
          .uleb128 .L_416f2d-.L_416f1c
          .uleb128 .L_417ad2-.L_4164d0
          .zero 1
          .uleb128 .L_41705d-.L_4164d0
          .uleb128 .L_417062-.L_41705d
          .uleb128 .L_417adf-.L_4164d0
          .zero 1
          .uleb128 .L_417133-.L_4164d0
          .uleb128 .L_417138-.L_417133
          .uleb128 .L_417ae4-.L_4164d0
          .zero 1
          .uleb128 .L_417148-.L_4164d0
          .uleb128 .L_417184-.L_417148
          .uleb128 .L_417ae6-.L_4164d0
          .zero 1
          .uleb128 .L_417194-.L_4164d0
          .uleb128 .L_4171a5-.L_417194
          .uleb128 .L_417ae8-.L_4164d0
          .zero 1
          .uleb128 .L_417220-.L_4164d0
          .uleb128 .L_417225-.L_417220
          .uleb128 .L_417aba-.L_4164d0
          .zero 1
          .uleb128 .L_4172a9-.L_4164d0
          .uleb128 .L_4172ae-.L_4172a9
          .uleb128 .L_417abc-.L_4164d0
          .zero 1
          .uleb128 .L_417301-.L_4164d0
          .uleb128 .L_417306-.L_417301
          .uleb128 .L_417ab8-.L_4164d0
          .zero 1
          .uleb128 .L_41738a-.L_4164d0
          .uleb128 .L_41738f-.L_41738a
          .uleb128 .L_417adb-.L_4164d0
          .zero 1
          .uleb128 .L_41742e-.L_4164d0
          .uleb128 .L_417433-.L_41742e
          .uleb128 .L_417aa0-.L_4164d0
          .zero 1
          .uleb128 .L_4174cc-.L_4164d0
          .uleb128 .L_4174d1-.L_4174cc
          .uleb128 .L_417add-.L_4164d0
          .zero 1
          .uleb128 .L_41750d-.L_4164d0
          .uleb128 .L_417512-.L_41750d
          .zero 2
          .uleb128 .L_41753e-.L_4164d0
          .uleb128 .L_417543-.L_41753e
          .uleb128 .L_417aba-.L_4164d0
          .zero 1
          .uleb128 .L_4175e2-.L_4164d0
          .uleb128 .L_4175e7-.L_4175e2
          .uleb128 .L_417aa0-.L_4164d0
          .zero 1
          .uleb128 .L_417737-.L_4164d0
          .uleb128 .L_41773c-.L_417737
          .uleb128 .L_417ab8-.L_4164d0
          .zero 1
          .uleb128 .L_4177b0-.L_4164d0
          .uleb128 .L_4177b5-.L_4177b0
          .uleb128 .L_417aba-.L_4164d0
          .zero 1
          .uleb128 .L_4177c1-.L_4164d0
          .uleb128 .L_4177c6-.L_4177c1
          .uleb128 .L_417aa0-.L_4164d0
          .zero 1
          .uleb128 .L_417954-.L_4164d0
          .uleb128 .L_417ad2-.L_417954
          .zero 2
.L_4451b6:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4451c5-.L_4451ba
.L_4451ba:
          .uleb128 .L_417e18-.L_417d20
          .uleb128 .L_417e1d-.L_417e18
          .uleb128 .L_417e9b-.L_417d20
          .zero 1
          .uleb128 .L_417ea9-.L_417d20
          .uleb128 .L_417eae-.L_417ea9
          .zero 2
.L_4451c5:
          .zero 3
.L_4451c8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4451fc-.L_4451cc
.L_4451cc:
          .uleb128 .L_419401-.L_419340
          .uleb128 .L_419406-.L_419401
          .uleb128 .L_419942-.L_419340
          .zero 1
          .uleb128 .L_4194c3-.L_419340
          .uleb128 .L_4194c8-.L_4194c3
          .uleb128 .L_419900-.L_419340
          .zero 1
          .uleb128 .L_4194d8-.L_419340
          .uleb128 .L_419514-.L_4194d8
          .uleb128 .L_419947-.L_419340
          .zero 1
          .uleb128 .L_419524-.L_419340
          .uleb128 .L_419529-.L_419524
          .uleb128 .L_41995b-.L_419340
          .zero 1
          .uleb128 .L_419658-.L_419340
          .uleb128 .L_41965d-.L_419658
          .uleb128 .L_419940-.L_419340
          .zero 1
          .uleb128 .L_4196ef-.L_419340
          .uleb128 .L_4196f4-.L_4196ef
          .uleb128 .L_4198e3-.L_419340
          .zero 1
          .uleb128 .L_41973a-.L_419340
          .uleb128 .L_4197de-.L_41973a
          .uleb128 .L_419940-.L_419340
          .zero 1
          .uleb128 .L_41993b-.L_419340
          .uleb128 .L_41996e-.L_41993b
          .zero 2
.L_4451fc:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445230-.L_445200
.L_445200:
          .uleb128 .L_41b703-.L_41b5d0
          .uleb128 .L_41b708-.L_41b703
          .uleb128 .L_41bcc7-.L_41b5d0
          .zero 1
          .uleb128 .L_41b7c2-.L_41b5d0
          .uleb128 .L_41b7c7-.L_41b7c2
          .uleb128 .L_41bc65-.L_41b5d0
          .zero 1
          .uleb128 .L_41b7d7-.L_41b5d0
          .uleb128 .L_41b813-.L_41b7d7
          .uleb128 .L_41bcb3-.L_41b5d0
          .zero 1
          .uleb128 .L_41b823-.L_41b5d0
          .uleb128 .L_41b828-.L_41b823
          .uleb128 .L_41bca0-.L_41b5d0
          .zero 1
          .uleb128 .L_41b9f7-.L_41b5d0
          .uleb128 .L_41b9fc-.L_41b9f7
          .uleb128 .L_41bc47-.L_41b5d0
          .zero 1
          .uleb128 .L_41ba8d-.L_41b5d0
          .uleb128 .L_41ba92-.L_41ba8d
          .uleb128 .L_41bc63-.L_41b5d0
          .zero 1
          .uleb128 .L_41bada-.L_41b5d0
          .uleb128 .L_41bb72-.L_41bada
          .uleb128 .L_41bc47-.L_41b5d0
          .zero 1
          .uleb128 .L_41bc9b-.L_41b5d0
          .uleb128 .L_41bcc7-.L_41bc9b
          .zero 2
.L_445230:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445234-.L_445234
.L_445234:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445274-.L_445237
.L_445237:
          .byte 0x1
          .uleb128 .L_44526b-.L_445239
.L_445239:
          .uleb128 .L_419a46-.L_419a30
          .uleb128 .L_419a4b-.L_419a46
          .zero 2
          .uleb128 .L_419aa2-.L_419a30
          .uleb128 .L_419aa7-.L_419aa2
          .uleb128 .L_419b9b-.L_419a30
          .zero 1
          .uleb128 .L_419abf-.L_419a30
          .uleb128 .L_419ac4-.L_419abf
          .uleb128 .L_419be5-.L_419a30
          .byte 0x1
          .uleb128 .L_419b31-.L_419a30
          .uleb128 .L_419b36-.L_419b31
          .uleb128 .L_419be0-.L_419a30
          .zero 1
          .uleb128 .L_419b3c-.L_419a30
          .uleb128 .L_419b41-.L_419b3c
          .uleb128 .L_419bb3-.L_419a30
          .zero 1
          .uleb128 .L_419b7b-.L_419a30
          .uleb128 .L_419b8f-.L_419b7b
          .uleb128 .L_419be0-.L_419a30
          .zero 1
          .uleb128 .L_419bae-.L_419a30
          .uleb128 .L_419be0-.L_419bae
          .zero 2
          .uleb128 .L_419bed-.L_419a30
          .uleb128 .L_419bf2-.L_419bed
          .uleb128 .L_419bf2-.L_419a30
          .byte 0x1
          .uleb128 .L_419c1b-.L_419a30
          .uleb128 .L_419c20-.L_419c1b
          .uleb128 .L_419c20-.L_419a30
          .zero 1
.L_44526b:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445274:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4452ed-.L_445278
.L_445278:
          .uleb128 .L_41a235-.L_41a150
          .uleb128 .L_41a23a-.L_41a235
          .zero 2
          .uleb128 .L_41a34a-.L_41a150
          .uleb128 .L_41a34f-.L_41a34a
          .uleb128 .L_41b05d-.L_41a150
          .zero 1
          .uleb128 .L_41a424-.L_41a150
          .uleb128 .L_41a429-.L_41a424
          .uleb128 .L_41b05b-.L_41a150
          .zero 1
          .uleb128 .L_41a43a-.L_41a150
          .uleb128 .L_41a478-.L_41a43a
          .uleb128 .L_41b059-.L_41a150
          .zero 1
          .uleb128 .L_41a489-.L_41a150
          .uleb128 .L_41a48e-.L_41a489
          .uleb128 .L_41b057-.L_41a150
          .zero 1
          .uleb128 .L_41a52b-.L_41a150
          .uleb128 .L_41a812-.L_41a52b
          .zero 2
          .uleb128 .L_41a8c9-.L_41a150
          .uleb128 .L_41a8ce-.L_41a8c9
          .uleb128 .L_41b020-.L_41a150
          .zero 1
          .uleb128 .L_41a9a3-.L_41a150
          .uleb128 .L_41a9a8-.L_41a9a3
          .uleb128 .L_41afe5-.L_41a150
          .zero 1
          .uleb128 .L_41a9b9-.L_41a150
          .uleb128 .L_41a9f7-.L_41a9b9
          .uleb128 .L_41b038-.L_41a150
          .zero 1
          .uleb128 .L_41aa08-.L_41a150
          .uleb128 .L_41aa1b-.L_41aa08
          .uleb128 .L_41b025-.L_41a150
          .zero 1
          .uleb128 .L_41aa9e-.L_41a150
          .uleb128 .L_41aaa3-.L_41aa9e
          .uleb128 .L_41afe3-.L_41a150
          .zero 1
          .uleb128 .L_41ab39-.L_41a150
          .uleb128 .L_41ab3e-.L_41ab39
          .uleb128 .L_41afcb-.L_41a150
          .zero 1
          .uleb128 .L_41ab93-.L_41a150
          .uleb128 .L_41ab98-.L_41ab93
          .zero 2
          .uleb128 .L_41ac12-.L_41a150
          .uleb128 .L_41ac17-.L_41ac12
          .uleb128 .L_41b052-.L_41a150
          .zero 1
          .uleb128 .L_41acaf-.L_41a150
          .uleb128 .L_41acb4-.L_41acaf
          .uleb128 .L_41b04d-.L_41a150
          .zero 1
          .uleb128 .L_41accf-.L_41a150
          .uleb128 .L_41acd4-.L_41accf
          .uleb128 .L_41afe3-.L_41a150
          .zero 1
          .uleb128 .L_41ad6f-.L_41a150
          .uleb128 .L_41ad74-.L_41ad6f
          .uleb128 .L_41b052-.L_41a150
          .zero 1
          .uleb128 .L_41ae0a-.L_41a150
          .uleb128 .L_41ae0f-.L_41ae0a
          .uleb128 .L_41afe3-.L_41a150
          .zero 1
          .uleb128 .L_41aec2-.L_41a150
          .uleb128 .L_41aec7-.L_41aec2
          .uleb128 .L_41b052-.L_41a150
          .zero 1
          .uleb128 .L_41b01b-.L_41a150
          .uleb128 .L_41b04d-.L_41b01b
          .zero 2
.L_4452ed:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44532b-.L_4452f1
.L_4452f1:
          .uleb128 .L_41c288-.L_41c250
          .uleb128 .L_41c546-.L_41c288
          .zero 2
          .uleb128 .L_41c6d8-.L_41c250
          .uleb128 .L_41c6dd-.L_41c6d8
          .uleb128 .L_41cc06-.L_41c250
          .zero 1
          .uleb128 .L_41c79a-.L_41c250
          .uleb128 .L_41c79f-.L_41c79a
          .uleb128 .L_41cc35-.L_41c250
          .zero 1
          .uleb128 .L_41c7af-.L_41c250
          .uleb128 .L_41c7eb-.L_41c7af
          .uleb128 .L_41cc5e-.L_41c250
          .zero 1
          .uleb128 .L_41c7fb-.L_41c250
          .uleb128 .L_41c800-.L_41c7fb
          .uleb128 .L_41cc22-.L_41c250
          .zero 1
          .uleb128 .L_41c916-.L_41c250
          .uleb128 .L_41c91b-.L_41c916
          .uleb128 .L_41cbe8-.L_41c250
          .zero 1
          .uleb128 .L_41c9ac-.L_41c250
          .uleb128 .L_41c9b1-.L_41c9ac
          .uleb128 .L_41cc04-.L_41c250
          .zero 1
          .uleb128 .L_41c9f0-.L_41c250
          .uleb128 .L_41ca1d-.L_41c9f0
          .zero 2
          .uleb128 .L_41ca57-.L_41c250
          .uleb128 .L_41cb04-.L_41ca57
          .uleb128 .L_41cbe8-.L_41c250
          .zero 1
          .uleb128 .L_41cc1d-.L_41c250
          .uleb128 .L_41cc72-.L_41cc1d
          .zero 2
.L_44532b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44533f-.L_44532f
.L_44532f:
          .uleb128 .L_41b093-.L_41b060
          .uleb128 .L_41b098-.L_41b093
          .zero 2
          .uleb128 .L_41b100-.L_41b060
          .uleb128 .L_41b226-.L_41b100
          .uleb128 .L_41b264-.L_41b060
          .zero 1
          .uleb128 .L_41b272-.L_41b060
          .uleb128 .L_41b277-.L_41b272
          .zero 2
.L_44533f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445352-.L_445343
.L_445343:
          .uleb128 .L_41b2da-.L_41b2a0
          .uleb128 .L_41b2df-.L_41b2da
          .zero 2
          .uleb128 .L_41b2e2-.L_41b2a0
          .uleb128 .L_41b429-.L_41b2e2
          .uleb128 .L_41b4af-.L_41b2a0
          .zero 1
          .uleb128 .L_41b4bd-.L_41b2a0
          .uleb128 .L_41b4c2-.L_41b4bd
          .zero 2
.L_445352:
          .zero 2
.L_445354:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445362-.L_445358
.L_445358:
          .uleb128 .L_41d098-.L_41d030
          .uleb128 .L_41d0cd-.L_41d098
          .uleb128 .L_41d0ea-.L_41d030
          .zero 1
          .uleb128 .L_41d100-.L_41d030
          .uleb128 .L_41d105-.L_41d100
          .zero 2
.L_445362:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445371-.L_445366
.L_445366:
          .uleb128 .L_41d17a-.L_41d110
          .uleb128 .L_41d200-.L_41d17a
          .uleb128 .L_41d2c1-.L_41d110
          .zero 1
          .uleb128 .L_41d272-.L_41d110
          .uleb128 .L_41d2de-.L_41d272
          .zero 2
.L_445371:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445418-.L_445376
.L_445376:
          .uleb128 .L_41d9ec-.L_41d8b0
          .uleb128 .L_41d9f1-.L_41d9ec
          .uleb128 .L_41e835-.L_41d8b0
          .zero 1
          .uleb128 .L_41db6a-.L_41d8b0
          .uleb128 .L_41db6f-.L_41db6a
          .uleb128 .L_41e738-.L_41d8b0
          .zero 1
          .uleb128 .L_41dc44-.L_41d8b0
          .uleb128 .L_41dc49-.L_41dc44
          .uleb128 .L_41e790-.L_41d8b0
          .zero 1
          .uleb128 .L_41dc5a-.L_41d8b0
          .uleb128 .L_41dc98-.L_41dc5a
          .uleb128 .L_41e7b3-.L_41d8b0
          .zero 1
          .uleb128 .L_41dcb6-.L_41d8b0
          .uleb128 .L_41dcbb-.L_41dcb6
          .uleb128 .L_41e7c2-.L_41d8b0
          .zero 1
          .uleb128 .L_41dcd0-.L_41d8b0
          .uleb128 .L_41dcd5-.L_41dcd0
          .uleb128 .L_41e7d9-.L_41d8b0
          .zero 1
          .uleb128 .L_41de39-.L_41d8b0
          .uleb128 .L_41de3e-.L_41de39
          .uleb128 .L_41e811-.L_41d8b0
          .zero 1
          .uleb128 .L_41de6b-.L_41d8b0
          .uleb128 .L_41de87-.L_41de6b
          .uleb128 .L_41e81e-.L_41d8b0
          .zero 1
          .uleb128 .L_41deeb-.L_41d8b0
          .uleb128 .L_41def0-.L_41deeb
          .uleb128 .L_41e811-.L_41d8b0
          .zero 1
          .uleb128 .L_41df18-.L_41d8b0
          .uleb128 .L_41df32-.L_41df18
          .uleb128 .L_41e7f4-.L_41d8b0
          .zero 1
          .uleb128 .L_41dfa5-.L_41d8b0
          .uleb128 .L_41dfaa-.L_41dfa5
          .uleb128 .L_41e811-.L_41d8b0
          .zero 1
          .uleb128 .L_41e056-.L_41d8b0
          .uleb128 .L_41e05b-.L_41e056
          .uleb128 .L_41e830-.L_41d8b0
          .zero 1
          .uleb128 .L_41e130-.L_41d8b0
          .uleb128 .L_41e135-.L_41e130
          .uleb128 .L_41e820-.L_41d8b0
          .zero 1
          .uleb128 .L_41e146-.L_41d8b0
          .uleb128 .L_41e184-.L_41e146
          .uleb128 .L_41e825-.L_41d8b0
          .zero 1
          .uleb128 .L_41e1a2-.L_41d8b0
          .uleb128 .L_41e1a7-.L_41e1a2
          .uleb128 .L_41e827-.L_41d8b0
          .zero 1
          .uleb128 .L_41e1bc-.L_41d8b0
          .uleb128 .L_41e1c1-.L_41e1bc
          .uleb128 .L_41e829-.L_41d8b0
          .zero 1
          .uleb128 .L_41e252-.L_41d8b0
          .uleb128 .L_41e257-.L_41e252
          .uleb128 .L_41e78e-.L_41d8b0
          .zero 1
          .uleb128 .L_41e2da-.L_41d8b0
          .uleb128 .L_41e2df-.L_41e2da
          .uleb128 .L_41e720-.L_41d8b0
          .zero 1
          .uleb128 .L_41e356-.L_41d8b0
          .uleb128 .L_41e3fe-.L_41e356
          .uleb128 .L_41e78c-.L_41d8b0
          .zero 1
          .uleb128 .L_41e481-.L_41d8b0
          .uleb128 .L_41e486-.L_41e481
          .uleb128 .L_41e78a-.L_41d8b0
          .zero 1
          .uleb128 .L_41e4bc-.L_41d8b0
          .uleb128 .L_41e4c1-.L_41e4bc
          .uleb128 .L_41e78e-.L_41d8b0
          .zero 1
          .uleb128 .L_41e5be-.L_41d8b0
          .uleb128 .L_41e5c3-.L_41e5be
          .uleb128 .L_41e78c-.L_41d8b0
          .zero 1
          .uleb128 .L_41e5f0-.L_41d8b0
          .uleb128 .L_41e5f5-.L_41e5f0
          .uleb128 .L_41e78e-.L_41d8b0
          .zero 1
          .uleb128 .L_41e785-.L_41d8b0
          .uleb128 .L_41e78a-.L_41e785
          .zero 2
          .uleb128 .L_41e7d4-.L_41d8b0
          .uleb128 .L_41e7d9-.L_41e7d4
          .uleb128 .L_41e7f4-.L_41d8b0
          .zero 1
          .uleb128 .L_41e819-.L_41d8b0
          .uleb128 .L_41e81e-.L_41e819
          .uleb128 .L_41e81e-.L_41d8b0
          .zero 1
          .uleb128 .L_41e82b-.L_41d8b0
          .uleb128 .L_41e830-.L_41e82b
          .uleb128 .L_41e811-.L_41d8b0
          .zero 1
.L_445418:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44542d-.L_44541c
.L_44541c:
          .uleb128 .L_41e8ff-.L_41e840
          .uleb128 .L_41e904-.L_41e8ff
          .uleb128 .L_41e973-.L_41e840
          .zero 1
          .uleb128 .L_41e912-.L_41e840
          .uleb128 .L_41e917-.L_41e912
          .uleb128 .L_41e953-.L_41e840
          .zero 1
          .uleb128 .L_41e96e-.L_41e840
          .uleb128 .L_41e973-.L_41e96e
          .zero 2
.L_44542d:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445443-.L_445431
.L_445431:
          .uleb128 .L_41ea34-.L_41e980
          .uleb128 .L_41eb10-.L_41ea34
          .uleb128 .L_41eb72-.L_41e980
          .zero 1
          .uleb128 .L_41eb86-.L_41e980
          .uleb128 .L_41eb8b-.L_41eb86
          .zero 2
          .uleb128 .L_41eb92-.L_41e980
          .uleb128 .L_41eb97-.L_41eb92
          .uleb128 .L_41eb72-.L_41e980
          .zero 1
.L_445443:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445447-.L_445447
.L_445447:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44547f-.L_44544b
.L_44544b:
          .uleb128 .L_41ed0b-.L_41ec90
          .uleb128 .L_41ed10-.L_41ed0b
          .zero 2
          .uleb128 .L_41ede0-.L_41ec90
          .uleb128 .L_41ede5-.L_41ede0
          .uleb128 .L_41f2f3-.L_41ec90
          .zero 1
          .uleb128 .L_41ee9f-.L_41ec90
          .uleb128 .L_41eea4-.L_41ee9f
          .uleb128 .L_41f2b8-.L_41ec90
          .zero 1
          .uleb128 .L_41eeb4-.L_41ec90
          .uleb128 .L_41eef0-.L_41eeb4
          .uleb128 .L_41f2a4-.L_41ec90
          .zero 1
          .uleb128 .L_41ef00-.L_41ec90
          .uleb128 .L_41ef3e-.L_41ef00
          .uleb128 .L_41f273-.L_41ec90
          .zero 1
          .uleb128 .L_41f035-.L_41ec90
          .uleb128 .L_41f03a-.L_41f035
          .uleb128 .L_41f286-.L_41ec90
          .zero 1
          .uleb128 .L_41f0cb-.L_41ec90
          .uleb128 .L_41f0d0-.L_41f0cb
          .uleb128 .L_41f2a2-.L_41ec90
          .zero 1
          .uleb128 .L_41f10b-.L_41ec90
          .uleb128 .L_41f1a3-.L_41f10b
          .uleb128 .L_41f286-.L_41ec90
          .zero 1
          .uleb128 .L_41f281-.L_41ec90
          .uleb128 .L_41f2f3-.L_41f281
          .zero 2
.L_44547f:
          .zero 1
.L_445480:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4454a0-.L_445483
.L_445483:
          .byte 0x1
          .uleb128 .L_44549a-.L_445485
.L_445485:
          .uleb128 .L_423a27-.L_423a00
          .uleb128 .L_423a2c-.L_423a27
          .zero 2
          .uleb128 .L_423ab3-.L_423a00
          .uleb128 .L_423ab8-.L_423ab3
          .uleb128 .L_423b48-.L_423a00
          .byte 0x1
          .uleb128 .L_423b78-.L_423a00
          .uleb128 .L_423b7d-.L_423b78
          .uleb128 .L_423b82-.L_423a00
          .zero 1
          .uleb128 .L_423b8d-.L_423a00
          .uleb128 .L_423b92-.L_423b8d
          .zero 2
.L_44549a:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4454a0:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4454c4-.L_4454a3
.L_4454a3:
          .byte 0x1
          .uleb128 .L_4454bb-.L_4454a5
.L_4454a5:
          .uleb128 .L_423bc8-.L_423ba0
          .uleb128 .L_423d63-.L_423bc8
          .zero 2
          .uleb128 .L_423d8c-.L_423ba0
          .uleb128 .L_423d91-.L_423d8c
          .uleb128 .L_423ef7-.L_423ba0
          .byte 0x1
          .uleb128 .L_423f07-.L_423ba0
          .uleb128 .L_423f0c-.L_423f07
          .uleb128 .L_423f0c-.L_423ba0
          .zero 1
          .uleb128 .L_423f17-.L_423ba0
          .uleb128 .L_423f1c-.L_423f17
          .zero 2
.L_4454bb:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4454c4:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4454fe-.L_4454c8
.L_4454c8:
          .uleb128 .L_41f4f2-.L_41f470
          .uleb128 .L_41f4f7-.L_41f4f2
          .uleb128 .L_41fa34-.L_41f470
          .zero 1
          .uleb128 .L_41f5b1-.L_41f470
          .uleb128 .L_41f5b6-.L_41f5b1
          .uleb128 .L_41fac0-.L_41f470
          .zero 1
          .uleb128 .L_41f673-.L_41f470
          .uleb128 .L_41f678-.L_41f673
          .uleb128 .L_41fa82-.L_41f470
          .zero 1
          .uleb128 .L_41f688-.L_41f470
          .uleb128 .L_41f6c4-.L_41f688
          .uleb128 .L_41fa74-.L_41f470
          .zero 1
          .uleb128 .L_41f6d4-.L_41f470
          .uleb128 .L_41f6d9-.L_41f6d4
          .uleb128 .L_41fa67-.L_41f470
          .zero 1
          .uleb128 .L_41f7ea-.L_41f470
          .uleb128 .L_41f7ef-.L_41f7ea
          .uleb128 .L_41fa65-.L_41f470
          .zero 1
          .uleb128 .L_41f880-.L_41f470
          .uleb128 .L_41f885-.L_41f880
          .uleb128 .L_41fa49-.L_41f470
          .zero 1
          .uleb128 .L_41f8c7-.L_41f470
          .uleb128 .L_41f95f-.L_41f8c7
          .uleb128 .L_41fa65-.L_41f470
          .zero 1
          .uleb128 .L_41fa44-.L_41f470
          .uleb128 .L_41fa49-.L_41fa44
          .zero 2
.L_4454fe:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445598-.L_445503
.L_445503:
          .uleb128 .L_420122-.L_420040
          .uleb128 .L_420127-.L_420122
          .uleb128 .L_4210f6-.L_420040
          .zero 1
          .uleb128 .L_4201e9-.L_420040
          .uleb128 .L_4201ee-.L_4201e9
          .uleb128 .L_421141-.L_420040
          .zero 1
          .uleb128 .L_4201fe-.L_420040
          .uleb128 .L_42023a-.L_4201fe
          .uleb128 .L_421143-.L_420040
          .zero 1
          .uleb128 .L_42024a-.L_420040
          .uleb128 .L_42024f-.L_42024a
          .uleb128 .L_4210f4-.L_420040
          .zero 1
          .uleb128 .L_4203eb-.L_420040
          .uleb128 .L_4203f0-.L_4203eb
          .zero 2
          .uleb128 .L_42049f-.L_420040
          .uleb128 .L_4204a4-.L_42049f
          .uleb128 .L_421114-.L_420040
          .zero 1
          .uleb128 .L_420536-.L_420040
          .uleb128 .L_42053b-.L_420536
          .uleb128 .L_421112-.L_420040
          .zero 1
          .uleb128 .L_42061d-.L_420040
          .uleb128 .L_420622-.L_42061d
          .uleb128 .L_42114f-.L_420040
          .zero 1
          .uleb128 .L_4206e4-.L_420040
          .uleb128 .L_4206e9-.L_4206e4
          .uleb128 .L_42114d-.L_420040
          .zero 1
          .uleb128 .L_4206f9-.L_420040
          .uleb128 .L_420735-.L_4206f9
          .uleb128 .L_421148-.L_420040
          .zero 1
          .uleb128 .L_420745-.L_420040
          .uleb128 .L_42074a-.L_420745
          .uleb128 .L_4210f0-.L_420040
          .zero 1
          .uleb128 .L_4207d2-.L_420040
          .uleb128 .L_4207d7-.L_4207d2
          .uleb128 .L_4210ee-.L_420040
          .zero 1
          .uleb128 .L_42086f-.L_420040
          .uleb128 .L_420874-.L_42086f
          .uleb128 .L_421151-.L_420040
          .zero 1
          .uleb128 .L_420931-.L_420040
          .uleb128 .L_420936-.L_420931
          .uleb128 .L_421114-.L_420040
          .zero 1
          .uleb128 .L_4209de-.L_420040
          .uleb128 .L_4209e3-.L_4209de
          .uleb128 .L_4210ee-.L_420040
          .zero 1
          .uleb128 .L_420a79-.L_420040
          .uleb128 .L_420a7e-.L_420a79
          .uleb128 .L_421114-.L_420040
          .zero 1
          .uleb128 .L_420bb2-.L_420040
          .uleb128 .L_420bb7-.L_420bb2
          .uleb128 .L_42113f-.L_420040
          .zero 1
          .uleb128 .L_420c79-.L_420040
          .uleb128 .L_420c7e-.L_420c79
          .uleb128 .L_421116-.L_420040
          .zero 1
          .uleb128 .L_420c8e-.L_420040
          .uleb128 .L_420cca-.L_420c8e
          .uleb128 .L_4210bd-.L_420040
          .zero 1
          .uleb128 .L_420cda-.L_420040
          .uleb128 .L_420cdf-.L_420cda
          .uleb128 .L_4210aa-.L_420040
          .zero 1
          .uleb128 .L_420d67-.L_420040
          .uleb128 .L_420d6c-.L_420d67
          .uleb128 .L_4210d1-.L_420040
          .zero 1
          .uleb128 .L_420e09-.L_420040
          .uleb128 .L_420e0e-.L_420e09
          .uleb128 .L_4210f2-.L_420040
          .zero 1
          .uleb128 .L_420e1c-.L_420040
          .uleb128 .L_420e21-.L_420e1c
          .uleb128 .L_4210ee-.L_420040
          .zero 1
          .uleb128 .L_420f40-.L_420040
          .uleb128 .L_420fdf-.L_420f40
          .uleb128 .L_4210d1-.L_420040
          .zero 1
          .uleb128 .L_4210b8-.L_420040
          .uleb128 .L_421112-.L_4210b8
          .zero 2
.L_445598:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4455a5-.L_44559c
.L_44559c:
          .uleb128 .L_42119b-.L_421160
          .uleb128 .L_4211a0-.L_42119b
          .uleb128 .L_4211d6-.L_421160
          .zero 1
          .uleb128 .L_4211e4-.L_421160
          .uleb128 .L_4211e9-.L_4211e4
          .zero 2
.L_4455a5:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445630-.L_4455aa
.L_4455aa:
          .uleb128 .L_42450c-.L_4243a0
          .uleb128 .L_424563-.L_42450c
          .zero 2
          .uleb128 .L_424573-.L_4243a0
          .uleb128 .L_424578-.L_424573
          .uleb128 .L_425550-.L_4243a0
          .zero 1
          .uleb128 .L_42457f-.L_4243a0
          .uleb128 .L_4245bc-.L_42457f
          .uleb128 .L_425548-.L_4243a0
          .zero 1
          .uleb128 .L_424822-.L_4243a0
          .uleb128 .L_424853-.L_424822
          .zero 2
          .uleb128 .L_42485a-.L_4243a0
          .uleb128 .L_42487f-.L_42485a
          .uleb128 .L_425521-.L_4243a0
          .zero 1
          .uleb128 .L_42496e-.L_4243a0
          .uleb128 .L_424973-.L_42496e
          .uleb128 .L_4252b2-.L_4243a0
          .zero 1
          .uleb128 .L_424a44-.L_4243a0
          .uleb128 .L_424a49-.L_424a44
          .uleb128 .L_42531f-.L_4243a0
          .zero 1
          .uleb128 .L_424a59-.L_4243a0
          .uleb128 .L_424a95-.L_424a59
          .uleb128 .L_425311-.L_4243a0
          .zero 1
          .uleb128 .L_424aa5-.L_4243a0
          .uleb128 .L_424aaa-.L_424aa5
          .uleb128 .L_42534f-.L_4243a0
          .zero 1
          .uleb128 .L_424c1f-.L_4243a0
          .uleb128 .L_424c24-.L_424c1f
          .uleb128 .L_42551c-.L_4243a0
          .zero 1
          .uleb128 .L_424cf5-.L_4243a0
          .uleb128 .L_424cfa-.L_424cf5
          .uleb128 .L_4254e0-.L_4243a0
          .zero 1
          .uleb128 .L_424d0a-.L_4243a0
          .uleb128 .L_424d46-.L_424d0a
          .uleb128 .L_4254cf-.L_4243a0
          .zero 1
          .uleb128 .L_424d56-.L_4243a0
          .uleb128 .L_424d5b-.L_424d56
          .uleb128 .L_425432-.L_4243a0
          .zero 1
          .uleb128 .L_424e94-.L_4243a0
          .uleb128 .L_424e99-.L_424e94
          .uleb128 .L_425581-.L_4243a0
          .zero 1
          .uleb128 .L_424f49-.L_4243a0
          .uleb128 .L_424f4e-.L_424f49
          .uleb128 .L_425543-.L_4243a0
          .zero 1
          .uleb128 .L_424f8c-.L_4243a0
          .uleb128 .L_424f91-.L_424f8c
          .uleb128 .L_425581-.L_4243a0
          .zero 1
          .uleb128 .L_42503b-.L_4243a0
          .uleb128 .L_425040-.L_42503b
          .zero 2
          .uleb128 .L_4250cb-.L_4243a0
          .uleb128 .L_4250d0-.L_4250cb
          .uleb128 .L_42535f-.L_4243a0
          .zero 1
          .uleb128 .L_425185-.L_4243a0
          .uleb128 .L_42518a-.L_425185
          .uleb128 .L_4252f6-.L_4243a0
          .zero 1
          .uleb128 .L_425253-.L_4243a0
          .uleb128 .L_425258-.L_425253
          .uleb128 .L_425581-.L_4243a0
          .zero 1
          .uleb128 .L_4252f1-.L_4243a0
          .uleb128 .L_4252f6-.L_4252f1
          .zero 2
          .uleb128 .L_425378-.L_4243a0
          .uleb128 .L_42542d-.L_425378
          .uleb128 .L_42535f-.L_4243a0
          .zero 1
          .uleb128 .L_425454-.L_4243a0
          .uleb128 .L_425459-.L_425454
          .zero 2
.L_445630:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44563f-.L_445634
.L_445634:
          .uleb128 .L_421391-.L_4212d0
          .uleb128 .L_4213e7-.L_421391
          .uleb128 .L_421454-.L_4212d0
          .zero 1
          .uleb128 .L_421464-.L_4212d0
          .uleb128 .L_421469-.L_421464
          .zero 2
.L_44563f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4456a8-.L_445643
.L_445643:
          .uleb128 .L_421553-.L_421470
          .uleb128 .L_421558-.L_421553
          .uleb128 .L_42212d-.L_421470
          .zero 1
          .uleb128 .L_421624-.L_421470
          .uleb128 .L_421629-.L_421624
          .uleb128 .L_422134-.L_421470
          .zero 1
          .uleb128 .L_421639-.L_421470
          .uleb128 .L_421675-.L_421639
          .uleb128 .L_422132-.L_421470
          .zero 1
          .uleb128 .L_421685-.L_421470
          .uleb128 .L_42168a-.L_421685
          .uleb128 .L_42213c-.L_421470
          .zero 1
          .uleb128 .L_4217cd-.L_421470
          .uleb128 .L_4217f3-.L_4217cd
          .zero 2
          .uleb128 .L_4218a2-.L_421470
          .uleb128 .L_4218a7-.L_4218a2
          .uleb128 .L_42213a-.L_421470
          .zero 1
          .uleb128 .L_42193f-.L_421470
          .uleb128 .L_421944-.L_42193f
          .uleb128 .L_422136-.L_421470
          .zero 1
          .uleb128 .L_4219b6-.L_421470
          .uleb128 .L_4219bb-.L_4219b6
          .uleb128 .L_42213a-.L_421470
          .zero 1
          .uleb128 .L_421b09-.L_421470
          .uleb128 .L_421b0e-.L_421b09
          .uleb128 .L_422138-.L_421470
          .zero 1
          .uleb128 .L_421bda-.L_421470
          .uleb128 .L_421bdf-.L_421bda
          .uleb128 .L_4220f1-.L_421470
          .zero 1
          .uleb128 .L_421bef-.L_421470
          .uleb128 .L_421c2b-.L_421bef
          .uleb128 .L_4220dd-.L_421470
          .zero 1
          .uleb128 .L_421c3b-.L_421470
          .uleb128 .L_421c40-.L_421c3b
          .uleb128 .L_4220ad-.L_421470
          .zero 1
          .uleb128 .L_421d9a-.L_421470
          .uleb128 .L_421d9f-.L_421d9a
          .uleb128 .L_42212b-.L_421470
          .zero 1
          .uleb128 .L_421e37-.L_421470
          .uleb128 .L_421e3c-.L_421e37
          .uleb128 .L_4220c0-.L_421470
          .zero 1
          .uleb128 .L_421e71-.L_421470
          .uleb128 .L_421e76-.L_421e71
          .uleb128 .L_42213a-.L_421470
          .zero 1
          .uleb128 .L_421f09-.L_421470
          .uleb128 .L_421fd2-.L_421f09
          .uleb128 .L_42212b-.L_421470
          .zero 1
          .uleb128 .L_4220bb-.L_421470
          .uleb128 .L_42212b-.L_4220bb
          .zero 2
.L_4456a8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4456b7-.L_4456ac
.L_4456ac:
          .uleb128 .L_42228d-.L_422150
          .uleb128 .L_4222b4-.L_42228d
          .uleb128 .L_42230f-.L_422150
          .zero 1
          .uleb128 .L_42231f-.L_422150
          .uleb128 .L_422324-.L_42231f
          .zero 2
.L_4456b7:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4456d9-.L_4456bb
.L_4456bb:
          .uleb128 .L_4227a2-.L_422640
          .uleb128 .L_4227a7-.L_4227a2
          .uleb128 .L_422f77-.L_422640
          .zero 1
          .uleb128 .L_422869-.L_422640
          .uleb128 .L_422c88-.L_422869
          .uleb128 .L_422f9e-.L_422640
          .zero 1
          .uleb128 .L_422cab-.L_422640
          .uleb128 .L_422cca-.L_422cab
          .uleb128 .L_422f77-.L_422640
          .zero 1
          .uleb128 .L_422d24-.L_422640
          .uleb128 .L_422d69-.L_422d24
          .uleb128 .L_422f9e-.L_422640
          .zero 1
          .uleb128 .L_422f99-.L_422640
          .uleb128 .L_422f9e-.L_422f99
          .zero 2
.L_4456d9:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4456f2-.L_4456dd
.L_4456dd:
          .uleb128 .L_42300f-.L_422fb0
          .uleb128 .L_423014-.L_42300f
          .zero 2
          .uleb128 .L_42303d-.L_422fb0
          .uleb128 .L_423042-.L_42303d
          .uleb128 .L_423084-.L_422fb0
          .zero 1
          .uleb128 .L_423061-.L_422fb0
          .uleb128 .L_423066-.L_423061
          .uleb128 .L_423097-.L_422fb0
          .zero 1
          .uleb128 .L_423092-.L_422fb0
          .uleb128 .L_423097-.L_423092
          .zero 2
.L_4456f2:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445709-.L_4456f6
.L_4456f6:
          .uleb128 .L_42319d-.L_4230b0
          .uleb128 .L_423256-.L_42319d
          .uleb128 .L_423530-.L_4230b0
          .zero 1
          .uleb128 .L_4232a4-.L_4230b0
          .uleb128 .L_4234e6-.L_4232a4
          .uleb128 .L_4234f2-.L_4230b0
          .zero 1
          .uleb128 .L_423521-.L_4230b0
          .uleb128 .L_423526-.L_423521
          .zero 2
.L_445709:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445717-.L_44570d
.L_44570d:
          .uleb128 .L_42570b-.L_4256c0
          .uleb128 .L_425779-.L_42570b
          .uleb128 .L_42577b-.L_4256c0
          .zero 1
          .uleb128 .L_42578f-.L_4256c0
          .uleb128 .L_425794-.L_42578f
          .zero 2
.L_445717:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44580f-.L_44571c
.L_44571c:
          .uleb128 .L_425e6a-.L_425d80
          .uleb128 .L_425e6f-.L_425e6a
          .zero 2
          .uleb128 .L_426071-.L_425d80
          .uleb128 .L_426076-.L_426071
          .uleb128 .L_427f16-.L_425d80
          .zero 1
          .uleb128 .L_426148-.L_425d80
          .uleb128 .L_42614d-.L_426148
          .uleb128 .L_427ed1-.L_425d80
          .zero 1
          .uleb128 .L_42615d-.L_425d80
          .uleb128 .L_426199-.L_42615d
          .uleb128 .L_427ebd-.L_425d80
          .zero 1
          .uleb128 .L_4261a9-.L_425d80
          .uleb128 .L_4261d1-.L_4261a9
          .uleb128 .L_427eaa-.L_425d80
          .zero 1
          .uleb128 .L_426341-.L_425d80
          .uleb128 .L_426346-.L_426341
          .zero 2
          .uleb128 .L_42666a-.L_425d80
          .uleb128 .L_42666f-.L_42666a
          .uleb128 .L_427e83-.L_425d80
          .zero 1
          .uleb128 .L_426721-.L_425d80
          .uleb128 .L_426726-.L_426721
          .uleb128 .L_427e7e-.L_425d80
          .zero 1
          .uleb128 .L_4267e6-.L_425d80
          .uleb128 .L_4267eb-.L_4267e6
          .zero 2
          .uleb128 .L_426817-.L_425d80
          .uleb128 .L_4268fe-.L_426817
          .uleb128 .L_427e83-.L_425d80
          .zero 1
          .uleb128 .L_426cd5-.L_425d80
          .uleb128 .L_426cda-.L_426cd5
          .uleb128 .L_427f2a-.L_425d80
          .zero 1
          .uleb128 .L_426daf-.L_425d80
          .uleb128 .L_426db4-.L_426daf
          .uleb128 .L_427f25-.L_425d80
          .zero 1
          .uleb128 .L_426dc5-.L_425d80
          .uleb128 .L_426e03-.L_426dc5
          .uleb128 .L_427f20-.L_425d80
          .zero 1
          .uleb128 .L_426e14-.L_425d80
          .uleb128 .L_426e2a-.L_426e14
          .uleb128 .L_427f1b-.L_425d80
          .zero 1
          .uleb128 .L_426f1f-.L_425d80
          .uleb128 .L_426f24-.L_426f1f
          .zero 2
          .uleb128 .L_426fe4-.L_425d80
          .uleb128 .L_426fe9-.L_426fe4
          .uleb128 .L_427bba-.L_425d80
          .zero 1
          .uleb128 .L_42709e-.L_425d80
          .uleb128 .L_4270a3-.L_42709e
          .uleb128 .L_4281c9-.L_425d80
          .zero 1
          .uleb128 .L_427197-.L_425d80
          .uleb128 .L_42719c-.L_427197
          .uleb128 .L_427e8d-.L_425d80
          .zero 1
          .uleb128 .L_427271-.L_425d80
          .uleb128 .L_427276-.L_427271
          .uleb128 .L_427cfc-.L_425d80
          .zero 1
          .uleb128 .L_427287-.L_425d80
          .uleb128 .L_4272c5-.L_427287
          .uleb128 .L_427ce7-.L_425d80
          .zero 1
          .uleb128 .L_4272d6-.L_425d80
          .uleb128 .L_4272e8-.L_4272d6
          .uleb128 .L_427ea8-.L_425d80
          .zero 1
          .uleb128 .L_427428-.L_425d80
          .uleb128 .L_42742d-.L_427428
          .uleb128 .L_427e76-.L_425d80
          .zero 1
          .uleb128 .L_427502-.L_425d80
          .uleb128 .L_427507-.L_427502
          .uleb128 .L_427e71-.L_425d80
          .zero 1
          .uleb128 .L_427518-.L_425d80
          .uleb128 .L_427556-.L_427518
          .uleb128 .L_427e6c-.L_425d80
          .zero 1
          .uleb128 .L_427567-.L_425d80
          .uleb128 .L_42757c-.L_427567
          .uleb128 .L_427e59-.L_425d80
          .zero 1
          .uleb128 .L_427615-.L_425d80
          .uleb128 .L_42761a-.L_427615
          .uleb128 .L_427c6c-.L_425d80
          .zero 1
          .uleb128 .L_4276cf-.L_425d80
          .uleb128 .L_4276d4-.L_4276cf
          .uleb128 .L_427e88-.L_425d80
          .zero 1
          .uleb128 .L_42772b-.L_425d80
          .uleb128 .L_427730-.L_42772b
          .uleb128 .L_427bba-.L_425d80
          .zero 1
          .uleb128 .L_42785f-.L_425d80
          .uleb128 .L_427864-.L_42785f
          .uleb128 .L_427c50-.L_425d80
          .zero 1
          .uleb128 .L_42791e-.L_425d80
          .uleb128 .L_427923-.L_42791e
          .uleb128 .L_4281ce-.L_425d80
          .zero 1
          .uleb128 .L_427951-.L_425d80
          .uleb128 .L_427956-.L_427951
          .uleb128 .L_427c50-.L_425d80
          .zero 1
          .uleb128 .L_427a17-.L_425d80
          .uleb128 .L_427a1c-.L_427a17
          .uleb128 .L_427c6c-.L_425d80
          .zero 1
          .uleb128 .L_427aca-.L_425d80
          .uleb128 .L_427acf-.L_427aca
          .uleb128 .L_427bba-.L_425d80
          .zero 1
          .uleb128 .L_427b49-.L_425d80
          .uleb128 .L_427b4e-.L_427b49
          .uleb128 .L_427c6c-.L_425d80
          .zero 1
          .uleb128 .L_427cf7-.L_425d80
          .uleb128 .L_427e94-.L_427cf7
          .zero 2
          .uleb128 .L_427e9e-.L_425d80
          .uleb128 .L_427ea3-.L_427e9e
          .uleb128 .L_427c50-.L_425d80
          .zero 1
          .uleb128 .L_427eb8-.L_425d80
          .uleb128 .L_427f16-.L_427eb8
          .zero 2
          .uleb128 .L_427fc8-.L_425d80
          .uleb128 .L_427fcd-.L_427fc8
          .uleb128 .L_4281c4-.L_425d80
          .zero 1
          .uleb128 .L_42808e-.L_425d80
          .uleb128 .L_428093-.L_42808e
          .uleb128 .L_42819e-.L_425d80
          .zero 1
          .uleb128 .L_4280a4-.L_425d80
          .uleb128 .L_4280e2-.L_4280a4
          .uleb128 .L_428199-.L_425d80
          .zero 1
          .uleb128 .L_4280f3-.L_425d80
          .uleb128 .L_42817a-.L_4280f3
          .uleb128 .L_42818c-.L_425d80
          .zero 1
.L_44580f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44581b-.L_445813
.L_445813:
          .uleb128 .L_428650-.L_428620
          .uleb128 .L_428655-.L_428650
          .uleb128 .L_428662-.L_428620
          .zero 1
          .uleb128 .L_428676-.L_428620
          .uleb128 .L_42867b-.L_428676
          .zero 2
.L_44581b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445833-.L_44581f
.L_44581f:
          .uleb128 .L_42827b-.L_428260
          .uleb128 .L_428280-.L_42827b
          .zero 2
          .uleb128 .L_428283-.L_428260
          .uleb128 .L_428288-.L_428283
          .uleb128 .L_42837f-.L_428260
          .zero 1
          .uleb128 .L_4282b6-.L_428260
          .uleb128 .L_428364-.L_4282b6
          .uleb128 .L_428364-.L_428260
          .zero 1
          .uleb128 .L_42837a-.L_428260
          .uleb128 .L_42837f-.L_42837a
          .zero 2
.L_445833:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445846-.L_445837
.L_445837:
          .uleb128 .L_4283d3-.L_428390
          .uleb128 .L_4283d8-.L_4283d3
          .zero 2
          .uleb128 .L_428426-.L_428390
          .uleb128 .L_42842b-.L_428426
          .uleb128 .L_4284b8-.L_428390
          .zero 1
          .uleb128 .L_4284c6-.L_428390
          .uleb128 .L_4284cb-.L_4284c6
          .zero 2
.L_445846:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445884-.L_44584a
.L_44584a:
          .uleb128 .L_428c09-.L_4289f0
          .uleb128 .L_428c6b-.L_428c09
          .zero 2
          .uleb128 .L_428db8-.L_4289f0
          .uleb128 .L_428dbd-.L_428db8
          .uleb128 .L_4294c3-.L_4289f0
          .zero 1
          .uleb128 .L_428e7a-.L_4289f0
          .uleb128 .L_428e7f-.L_428e7a
          .uleb128 .L_429446-.L_4289f0
          .zero 1
          .uleb128 .L_428e8f-.L_4289f0
          .uleb128 .L_428ecb-.L_428e8f
          .uleb128 .L_4294af-.L_4289f0
          .zero 1
          .uleb128 .L_428edb-.L_4289f0
          .uleb128 .L_428ee0-.L_428edb
          .uleb128 .L_4294c8-.L_4289f0
          .zero 1
          .uleb128 .L_429170-.L_4289f0
          .uleb128 .L_42922c-.L_429170
          .uleb128 .L_4294f7-.L_4289f0
          .zero 1
          .uleb128 .L_4292ce-.L_4289f0
          .uleb128 .L_4292d3-.L_4292ce
          .uleb128 .L_4294db-.L_4289f0
          .zero 1
          .uleb128 .L_429375-.L_4289f0
          .uleb128 .L_42937a-.L_429375
          .zero 2
          .uleb128 .L_429395-.L_4289f0
          .uleb128 .L_42939a-.L_429395
          .uleb128 .L_4294f7-.L_4289f0
          .zero 1
          .uleb128 .L_4294aa-.L_4289f0
          .uleb128 .L_4294db-.L_4294aa
          .zero 2
.L_445884:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44589e-.L_445888
.L_445888:
          .uleb128 .L_4295b8-.L_429500
          .uleb128 .L_429614-.L_4295b8
          .zero 2
          .uleb128 .L_429666-.L_429500
          .uleb128 .L_429682-.L_429666
          .uleb128 .L_429bce-.L_429500
          .zero 1
          .uleb128 .L_429b51-.L_429500
          .uleb128 .L_429b56-.L_429b51
          .uleb128 .L_429be3-.L_429500
          .zero 1
          .uleb128 .L_429bc9-.L_429500
          .uleb128 .L_429be3-.L_429bc9
          .zero 2
.L_44589e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4458a2-.L_4458a2
.L_4458a2:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4458b5-.L_4458a6
.L_4458a6:
          .uleb128 .L_42a28f-.L_42a260
          .uleb128 .L_42a2e7-.L_42a28f
          .zero 2
          .uleb128 .L_42a2f5-.L_42a260
          .uleb128 .L_42a2fa-.L_42a2f5
          .uleb128 .L_42a330-.L_42a260
          .zero 1
          .uleb128 .L_42a329-.L_42a260
          .uleb128 .L_42a348-.L_42a329
          .zero 2
.L_4458b5:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4458d4-.L_4458b9
.L_4458b9:
          .uleb128 .L_42a4f7-.L_42a4e0
          .uleb128 .L_42a57a-.L_42a4f7
          .zero 2
          .uleb128 .L_42a588-.L_42a4e0
          .uleb128 .L_42a58d-.L_42a588
          .uleb128 .L_42a5df-.L_42a4e0
          .zero 1
          .uleb128 .L_42a5a7-.L_42a4e0
          .uleb128 .L_42a5c6-.L_42a5a7
          .zero 2
          .uleb128 .L_42a5d8-.L_42a4e0
          .uleb128 .L_42a5dd-.L_42a5d8
          .uleb128 .L_42a5f7-.L_42a4e0
          .zero 1
          .uleb128 .L_42a5f2-.L_42a4e0
          .uleb128 .L_42a5f7-.L_42a5f2
          .zero 2
.L_4458d4:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4458e4-.L_4458d8
.L_4458d8:
          .uleb128 .L_42a60f-.L_42a600
          .uleb128 .L_42a614-.L_42a60f
          .zero 2
          .uleb128 .L_42a620-.L_42a600
          .uleb128 .L_42a625-.L_42a620
          .uleb128 .L_42a634-.L_42a600
          .zero 1
          .uleb128 .L_42a62f-.L_42a600
          .uleb128 .L_42a64c-.L_42a62f
          .zero 2
.L_4458e4:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4458fe-.L_4458e8
.L_4458e8:
          .uleb128 .L_42a6ec-.L_42a6d0
          .uleb128 .L_42a6f1-.L_42a6ec
          .zero 2
          .uleb128 .L_42a701-.L_42a6d0
          .uleb128 .L_42a706-.L_42a701
          .uleb128 .L_42a75e-.L_42a6d0
          .zero 1
          .uleb128 .L_42a70b-.L_42a6d0
          .uleb128 .L_42a710-.L_42a70b
          .zero 2
          .uleb128 .L_42a716-.L_42a6d0
          .uleb128 .L_42a71b-.L_42a716
          .uleb128 .L_42a776-.L_42a6d0
          .zero 1
          .uleb128 .L_42a72a-.L_42a6d0
          .uleb128 .L_42a78e-.L_42a72a
          .zero 2
.L_4458fe:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44590e-.L_445902
.L_445902:
          .uleb128 .L_42a79e-.L_42a790
          .uleb128 .L_42a7a3-.L_42a79e
          .zero 2
          .uleb128 .L_42a7b1-.L_42a790
          .uleb128 .L_42a7b6-.L_42a7b1
          .uleb128 .L_42a7ce-.L_42a790
          .zero 1
          .uleb128 .L_42a7c9-.L_42a790
          .uleb128 .L_42a7e6-.L_42a7c9
          .zero 2
.L_44590e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445928-.L_445912
.L_445912:
          .uleb128 .L_42a805-.L_42a7f0
          .uleb128 .L_42a80a-.L_42a805
          .zero 2
          .uleb128 .L_42a817-.L_42a7f0
          .uleb128 .L_42a81c-.L_42a817
          .uleb128 .L_42a870-.L_42a7f0
          .zero 1
          .uleb128 .L_42a834-.L_42a7f0
          .uleb128 .L_42a839-.L_42a834
          .zero 2
          .uleb128 .L_42a852-.L_42a7f0
          .uleb128 .L_42a857-.L_42a852
          .uleb128 .L_42a888-.L_42a7f0
          .zero 1
          .uleb128 .L_42a86b-.L_42a7f0
          .uleb128 .L_42a8a0-.L_42a86b
          .zero 2
.L_445928:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44595a-.L_44592c
.L_44592c:
          .uleb128 .L_42a8cc-.L_42a8a0
          .uleb128 .L_42a8ea-.L_42a8cc
          .zero 2
          .uleb128 .L_42a8f8-.L_42a8a0
          .uleb128 .L_42a8fd-.L_42a8f8
          .uleb128 .L_42a9ea-.L_42a8a0
          .zero 1
          .uleb128 .L_42a90f-.L_42a8a0
          .uleb128 .L_42a92e-.L_42a90f
          .zero 2
          .uleb128 .L_42a93e-.L_42a8a0
          .uleb128 .L_42a943-.L_42a93e
          .uleb128 .L_42a9d2-.L_42a8a0
          .zero 1
          .uleb128 .L_42a948-.L_42a8a0
          .uleb128 .L_42a94d-.L_42a948
          .zero 2
          .uleb128 .L_42a953-.L_42a8a0
          .uleb128 .L_42a958-.L_42a953
          .uleb128 .L_42aa04-.L_42a8a0
          .zero 1
          .uleb128 .L_42a975-.L_42a8a0
          .uleb128 .L_42a9ba-.L_42a975
          .zero 2
          .uleb128 .L_42a9c8-.L_42a8a0
          .uleb128 .L_42a9cd-.L_42a9c8
          .uleb128 .L_42aa02-.L_42a8a0
          .zero 1
          .uleb128 .L_42a9e5-.L_42a8a0
          .uleb128 .L_42aa1c-.L_42a9e5
          .zero 2
.L_44595a:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44598e-.L_44595e
.L_44595e:
          .uleb128 .L_42ac80-.L_42ab70
          .uleb128 .L_42ac85-.L_42ac80
          .uleb128 .L_42b10b-.L_42ab70
          .zero 1
          .uleb128 .L_42ad3f-.L_42ab70
          .uleb128 .L_42ad44-.L_42ad3f
          .uleb128 .L_42b13b-.L_42ab70
          .zero 1
          .uleb128 .L_42ad54-.L_42ab70
          .uleb128 .L_42ad90-.L_42ad54
          .uleb128 .L_42b127-.L_42ab70
          .zero 1
          .uleb128 .L_42ada0-.L_42ab70
          .uleb128 .L_42adb0-.L_42ada0
          .uleb128 .L_42b0f8-.L_42ab70
          .zero 1
          .uleb128 .L_42aea4-.L_42ab70
          .uleb128 .L_42aea9-.L_42aea4
          .uleb128 .L_42b0de-.L_42ab70
          .zero 1
          .uleb128 .L_42af36-.L_42ab70
          .uleb128 .L_42af3b-.L_42af36
          .uleb128 .L_42b0f6-.L_42ab70
          .zero 1
          .uleb128 .L_42af76-.L_42ab70
          .uleb128 .L_42b009-.L_42af76
          .uleb128 .L_42b0de-.L_42ab70
          .zero 1
          .uleb128 .L_42b106-.L_42ab70
          .uleb128 .L_42b13b-.L_42b106
          .zero 2
.L_44598e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4459c8-.L_445992
.L_445992:
          .uleb128 .L_42b746-.L_42b660
          .uleb128 .L_42b74b-.L_42b746
          .uleb128 .L_42bf91-.L_42b660
          .zero 1
          .uleb128 .L_42b808-.L_42b660
          .uleb128 .L_42b80d-.L_42b808
          .uleb128 .L_42bf51-.L_42b660
          .zero 1
          .uleb128 .L_42b81d-.L_42b660
          .uleb128 .L_42b859-.L_42b81d
          .uleb128 .L_42bf3d-.L_42b660
          .zero 1
          .uleb128 .L_42b869-.L_42b660
          .uleb128 .L_42b86e-.L_42b869
          .uleb128 .L_42bf96-.L_42b660
          .zero 1
          .uleb128 .L_42b9a7-.L_42b660
          .uleb128 .L_42b9ac-.L_42b9a7
          .uleb128 .L_42bfc5-.L_42b660
          .zero 1
          .uleb128 .L_42ba3d-.L_42b660
          .uleb128 .L_42ba42-.L_42ba3d
          .uleb128 .L_42bfa9-.L_42b660
          .zero 1
          .uleb128 .L_42babc-.L_42b660
          .uleb128 .L_42bac1-.L_42babc
          .zero 2
          .uleb128 .L_42bb3d-.L_42b660
          .uleb128 .L_42bbdd-.L_42bb3d
          .uleb128 .L_42bfc5-.L_42b660
          .zero 1
          .uleb128 .L_42bd33-.L_42b660
          .uleb128 .L_42bfa9-.L_42bd33
          .zero 2
.L_4459c8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a01-.L_4459cc
.L_4459cc:
          .uleb128 .L_42c08c-.L_42bfd0
          .uleb128 .L_42c091-.L_42c08c
          .uleb128 .L_42c658-.L_42bfd0
          .zero 1
          .uleb128 .L_42c14b-.L_42bfd0
          .uleb128 .L_42c150-.L_42c14b
          .uleb128 .L_42c61e-.L_42bfd0
          .zero 1
          .uleb128 .L_42c160-.L_42bfd0
          .uleb128 .L_42c19c-.L_42c160
          .uleb128 .L_42c68e-.L_42bfd0
          .zero 1
          .uleb128 .L_42c1ac-.L_42bfd0
          .uleb128 .L_42c1b1-.L_42c1ac
          .uleb128 .L_42c67b-.L_42bfd0
          .zero 1
          .uleb128 .L_42c25a-.L_42bfd0
          .uleb128 .L_42c2d3-.L_42c25a
          .zero 2
          .uleb128 .L_42c359-.L_42bfd0
          .uleb128 .L_42c45b-.L_42c359
          .uleb128 .L_42c679-.L_42bfd0
          .zero 1
          .uleb128 .L_42c4ec-.L_42bfd0
          .uleb128 .L_42c4f1-.L_42c4ec
          .uleb128 .L_42c65d-.L_42bfd0
          .zero 1
          .uleb128 .L_42c578-.L_42bfd0
          .uleb128 .L_42c57d-.L_42c578
          .uleb128 .L_42c679-.L_42bfd0
          .zero 1
          .uleb128 .L_42c653-.L_42bfd0
          .uleb128 .L_42c6a2-.L_42c653
          .zero 2
.L_445a01:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a3a-.L_445a05
.L_445a05:
          .uleb128 .L_42c816-.L_42c750
          .uleb128 .L_42c85d-.L_42c816
          .zero 2
          .uleb128 .L_42c988-.L_42c750
          .uleb128 .L_42c98d-.L_42c988
          .uleb128 .L_42cf1e-.L_42c750
          .zero 1
          .uleb128 .L_42ca4c-.L_42c750
          .uleb128 .L_42ca51-.L_42ca4c
          .uleb128 .L_42cead-.L_42c750
          .zero 1
          .uleb128 .L_42ca62-.L_42c750
          .uleb128 .L_42caa0-.L_42ca62
          .uleb128 .L_42cf09-.L_42c750
          .zero 1
          .uleb128 .L_42cab1-.L_42c750
          .uleb128 .L_42cac4-.L_42cab1
          .uleb128 .L_42cef6-.L_42c750
          .zero 1
          .uleb128 .L_42cc18-.L_42c750
          .uleb128 .L_42cc1d-.L_42cc18
          .uleb128 .L_42ceab-.L_42c750
          .zero 1
          .uleb128 .L_42ccae-.L_42c750
          .uleb128 .L_42ccb3-.L_42ccae
          .uleb128 .L_42ce8f-.L_42c750
          .zero 1
          .uleb128 .L_42cd18-.L_42c750
          .uleb128 .L_42cdb7-.L_42cd18
          .uleb128 .L_42ceab-.L_42c750
          .zero 1
          .uleb128 .L_42cef1-.L_42c750
          .uleb128 .L_42cf1e-.L_42cef1
          .zero 2
.L_445a3a:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a4b-.L_445a3e
.L_445a3e:
          .uleb128 .L_42cfea-.L_42cfb0
          .uleb128 .L_42cfef-.L_42cfea
          .zero 2
          .uleb128 .L_42cffb-.L_42cfb0
          .uleb128 .L_42d000-.L_42cffb
          .uleb128 .L_42d072-.L_42cfb0
          .zero 1
          .uleb128 .L_42d029-.L_42cfb0
          .uleb128 .L_42d08a-.L_42d029
          .zero 2
.L_445a4b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a5e-.L_445a4f
.L_445a4f:
          .uleb128 .L_42d10b-.L_42d090
          .uleb128 .L_42d110-.L_42d10b
          .zero 2
          .uleb128 .L_42d11e-.L_42d090
          .uleb128 .L_42d123-.L_42d11e
          .uleb128 .L_42d1aa-.L_42d090
          .zero 1
          .uleb128 .L_42d15a-.L_42d090
          .uleb128 .L_42d1c2-.L_42d15a
          .zero 2
.L_445a5e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a6e-.L_445a62
.L_445a62:
          .uleb128 .L_42d3fc-.L_42d3e0
          .uleb128 .L_42d401-.L_42d3fc
          .zero 2
          .uleb128 .L_42d40e-.L_42d3e0
          .uleb128 .L_42d413-.L_42d40e
          .uleb128 .L_42d431-.L_42d3e0
          .zero 1
          .uleb128 .L_42d419-.L_42d3e0
          .uleb128 .L_42d449-.L_42d419
          .zero 2
.L_445a6e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445a83-.L_445a72
.L_445a72:
          .uleb128 .L_42d468-.L_42d450
          .uleb128 .L_42d536-.L_42d468
          .zero 2
          .uleb128 .L_42d53c-.L_42d450
          .uleb128 .L_42d541-.L_42d53c
          .uleb128 .L_42d605-.L_42d450
          .zero 1
          .uleb128 .L_42d554-.L_42d450
          .uleb128 .L_42d61d-.L_42d554
          .zero 2
.L_445a83:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445adb-.L_445a87
.L_445a87:
          .uleb128 .L_42d997-.L_42d770
          .uleb128 .L_42d99c-.L_42d997
          .zero 2
          .uleb128 .L_42da64-.L_42d770
          .uleb128 .L_42da69-.L_42da64
          .uleb128 .L_42e58a-.L_42d770
          .zero 1
          .uleb128 .L_42db25-.L_42d770
          .uleb128 .L_42db2a-.L_42db25
          .uleb128 .L_42e53f-.L_42d770
          .zero 1
          .uleb128 .L_42db3a-.L_42d770
          .uleb128 .L_42db76-.L_42db3a
          .uleb128 .L_42e531-.L_42d770
          .zero 1
          .uleb128 .L_42db86-.L_42d770
          .uleb128 .L_42dbc2-.L_42db86
          .uleb128 .L_42e52c-.L_42d770
          .zero 1
          .uleb128 .L_42dbd5-.L_42d770
          .uleb128 .L_42dbda-.L_42dbd5
          .uleb128 .L_42e506-.L_42d770
          .zero 1
          .uleb128 .L_42dc94-.L_42d770
          .uleb128 .L_42dd80-.L_42dc94
          .uleb128 .L_42e4e5-.L_42d770
          .zero 1
          .uleb128 .L_42de19-.L_42d770
          .uleb128 .L_42de1e-.L_42de19
          .uleb128 .L_42e58f-.L_42d770
          .zero 1
          .uleb128 .L_42decb-.L_42d770
          .uleb128 .L_42ded0-.L_42decb
          .uleb128 .L_42e4ca-.L_42d770
          .zero 1
          .uleb128 .L_42df08-.L_42d770
          .uleb128 .L_42df2a-.L_42df08
          .uleb128 .L_42e4e5-.L_42d770
          .zero 1
          .uleb128 .L_42df67-.L_42d770
          .uleb128 .L_42df6c-.L_42df67
          .uleb128 .L_42e58f-.L_42d770
          .zero 1
          .uleb128 .L_42e01d-.L_42d770
          .uleb128 .L_42e1f9-.L_42e01d
          .zero 2
          .uleb128 .L_42e217-.L_42d770
          .uleb128 .L_42e21c-.L_42e217
          .uleb128 .L_42e58f-.L_42d770
          .zero 1
          .uleb128 .L_42e3b8-.L_42d770
          .uleb128 .L_42e506-.L_42e3b8
          .zero 2
.L_445adb:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445aef-.L_445adf
.L_445adf:
          .uleb128 .L_42e62f-.L_42e5b0
          .uleb128 .L_42e74b-.L_42e62f
          .zero 2
          .uleb128 .L_42e759-.L_42e5b0
          .uleb128 .L_42e7aa-.L_42e759
          .uleb128 .L_42e7b1-.L_42e5b0
          .zero 1
          .uleb128 .L_42e7c5-.L_42e5b0
          .uleb128 .L_42e7ca-.L_42e7c5
          .zero 2
.L_445aef:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445b0f-.L_445af3
.L_445af3:
          .uleb128 .L_42eaae-.L_42ea20
          .uleb128 .L_42eab3-.L_42eaae
          .zero 2
          .uleb128 .L_42eac5-.L_42ea20
          .uleb128 .L_42eaca-.L_42eac5
          .uleb128 .L_42ee52-.L_42ea20
          .zero 1
          .uleb128 .L_42eacf-.L_42ea20
          .uleb128 .L_42ead4-.L_42eacf
          .zero 2
          .uleb128 .L_42eada-.L_42ea20
          .uleb128 .L_42eadf-.L_42eada
          .uleb128 .L_42ee3a-.L_42ea20
          .zero 1
          .uleb128 .L_42eb58-.L_42ea20
          .uleb128 .L_42ee6a-.L_42eb58
          .zero 2
.L_445b0f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445b51-.L_445b13
.L_445b13:
          .uleb128 .L_42ef20-.L_42ee70
          .uleb128 .L_42f2bc-.L_42ef20
          .uleb128 .L_42f7e4-.L_42ee70
          .zero 1
          .uleb128 .L_42f2cd-.L_42ee70
          .uleb128 .L_42f2d2-.L_42f2cd
          .uleb128 .L_42f7b7-.L_42ee70
          .zero 1
          .uleb128 .L_42f2d7-.L_42ee70
          .uleb128 .L_42f2dc-.L_42f2d7
          .uleb128 .L_42f7e4-.L_42ee70
          .zero 1
          .uleb128 .L_42f2e4-.L_42ee70
          .uleb128 .L_42f2e9-.L_42f2e4
          .uleb128 .L_42f7cb-.L_42ee70
          .zero 1
          .uleb128 .L_42f305-.L_42ee70
          .uleb128 .L_42f4c1-.L_42f305
          .uleb128 .L_42f7e4-.L_42ee70
          .zero 1
          .uleb128 .L_42f4d0-.L_42ee70
          .uleb128 .L_42f4d5-.L_42f4d0
          .uleb128 .L_42f75a-.L_42ee70
          .zero 1
          .uleb128 .L_42f4da-.L_42ee70
          .uleb128 .L_42f4df-.L_42f4da
          .uleb128 .L_42f7e4-.L_42ee70
          .zero 1
          .uleb128 .L_42f4e7-.L_42ee70
          .uleb128 .L_42f4ec-.L_42f4e7
          .uleb128 .L_42f7a3-.L_42ee70
          .zero 1
          .uleb128 .L_42f50a-.L_42ee70
          .uleb128 .L_42f6d8-.L_42f50a
          .uleb128 .L_42f7e4-.L_42ee70
          .zero 1
          .uleb128 .L_42f79e-.L_42ee70
          .uleb128 .L_42f7a3-.L_42f79e
          .zero 2
.L_445b51:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445b85-.L_445b55
.L_445b55:
          .uleb128 .L_42ff49-.L_42fe10
          .uleb128 .L_42ff4e-.L_42ff49
          .uleb128 .L_4303f6-.L_42fe10
          .zero 1
          .uleb128 .L_430008-.L_42fe10
          .uleb128 .L_43000d-.L_430008
          .uleb128 .L_430412-.L_42fe10
          .zero 1
          .uleb128 .L_43001d-.L_42fe10
          .uleb128 .L_430059-.L_43001d
          .uleb128 .L_4303b5-.L_42fe10
          .zero 1
          .uleb128 .L_430069-.L_42fe10
          .uleb128 .L_43007c-.L_430069
          .uleb128 .L_4303c9-.L_42fe10
          .zero 1
          .uleb128 .L_430181-.L_42fe10
          .uleb128 .L_430228-.L_430181
          .uleb128 .L_4303f4-.L_42fe10
          .zero 1
          .uleb128 .L_4302b5-.L_42fe10
          .uleb128 .L_4302ba-.L_4302b5
          .uleb128 .L_4303dc-.L_42fe10
          .zero 1
          .uleb128 .L_430326-.L_42fe10
          .uleb128 .L_43032b-.L_430326
          .uleb128 .L_4303f4-.L_42fe10
          .zero 1
          .uleb128 .L_4303c4-.L_42fe10
          .uleb128 .L_430412-.L_4303c4
          .zero 2
.L_445b85:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445b9a-.L_445b89
.L_445b89:
          .uleb128 .L_4306ff-.L_430650
          .uleb128 .L_430704-.L_4306ff
          .uleb128 .L_430831-.L_430650
          .zero 1
          .uleb128 .L_430718-.L_430650
          .uleb128 .L_43071d-.L_430718
          .uleb128 .L_4307ff-.L_430650
          .zero 1
          .uleb128 .L_43082c-.L_430650
          .uleb128 .L_430831-.L_43082c
          .zero 2
.L_445b9a:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445b9e-.L_445b9e
.L_445b9e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445bbe-.L_445ba2
.L_445ba2:
          .uleb128 .L_4309d4-.L_430970
          .uleb128 .L_4309f0-.L_4309d4
          .uleb128 .L_430b68-.L_430970
          .zero 1
          .uleb128 .L_430a5b-.L_430970
          .uleb128 .L_430a60-.L_430a5b
          .uleb128 .L_430ba6-.L_430970
          .zero 1
          .uleb128 .L_430a71-.L_430970
          .uleb128 .L_430a76-.L_430a71
          .uleb128 .L_430b86-.L_430970
          .zero 1
          .uleb128 .L_430b63-.L_430970
          .uleb128 .L_430b68-.L_430b63
          .uleb128 .L_430b68-.L_430970
          .zero 1
          .uleb128 .L_430b81-.L_430970
          .uleb128 .L_430b86-.L_430b81
          .zero 2
.L_445bbe:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445bd1-.L_445bc2
.L_445bc2:
          .uleb128 .L_430bf5-.L_430bb0
          .uleb128 .L_430c11-.L_430bf5
          .zero 2
          .uleb128 .L_430c71-.L_430bb0
          .uleb128 .L_430c76-.L_430c71
          .uleb128 .L_430ce9-.L_430bb0
          .zero 1
          .uleb128 .L_430ce4-.L_430bb0
          .uleb128 .L_430cfc-.L_430ce4
          .zero 2
.L_445bd1:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445be5-.L_445bd5
.L_445bd5:
          .uleb128 .L_430d46-.L_430d00
          .uleb128 .L_430d62-.L_430d46
          .zero 2
          .uleb128 .L_430f94-.L_430d00
          .uleb128 .L_431141-.L_430f94
          .uleb128 .L_431184-.L_430d00
          .zero 1
          .uleb128 .L_431192-.L_430d00
          .uleb128 .L_43119c-.L_431192
          .zero 2
.L_445be5:
          .zero 3
.L_445be8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445bf8-.L_445bec
.L_445bec:
          .uleb128 .L_4315f8-.L_4315e0
          .uleb128 .L_4315fd-.L_4315f8
          .zero 2
          .uleb128 .L_43160b-.L_4315e0
          .uleb128 .L_431610-.L_43160b
          .uleb128 .L_43163c-.L_4315e0
          .zero 1
          .uleb128 .L_431615-.L_4315e0
          .uleb128 .L_431654-.L_431615
          .zero 2
.L_445bf8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445c13-.L_445bfc
.L_445bfc:
          .uleb128 .L_43167e-.L_431660
          .uleb128 .L_431696-.L_43167e
          .zero 2
          .uleb128 .L_4316a3-.L_431660
          .uleb128 .L_4316a8-.L_4316a3
          .uleb128 .L_4316e2-.L_431660
          .zero 1
          .uleb128 .L_4316c1-.L_431660
          .uleb128 .L_4316c6-.L_4316c1
          .zero 2
          .uleb128 .L_4316d3-.L_431660
          .uleb128 .L_4316d8-.L_4316d3
          .uleb128 .L_4316fa-.L_431660
          .zero 1
          .uleb128 .L_4316f5-.L_431660
          .uleb128 .L_4316fa-.L_4316f5
          .zero 2
.L_445c13:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445c39-.L_445c17
.L_445c17:
          .uleb128 .L_4317ae-.L_431700
          .uleb128 .L_4317b3-.L_4317ae
          .uleb128 .L_4318c5-.L_431700
          .zero 1
          .uleb128 .L_431846-.L_431700
          .uleb128 .L_43184b-.L_431846
          .uleb128 .L_4318ff-.L_431700
          .zero 1
          .uleb128 .L_43185b-.L_431700
          .uleb128 .L_431897-.L_43185b
          .uleb128 .L_4318eb-.L_431700
          .zero 1
          .uleb128 .L_4318a7-.L_431700
          .uleb128 .L_4318b8-.L_4318a7
          .uleb128 .L_4318de-.L_431700
          .zero 1
          .uleb128 .L_4318d9-.L_431700
          .uleb128 .L_4318de-.L_4318d9
          .zero 2
          .uleb128 .L_4318fa-.L_431700
          .uleb128 .L_4318ff-.L_4318fa
          .zero 2
.L_445c39:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445c72-.L_445c3d
.L_445c3d:
          .uleb128 .L_4319e1-.L_431920
          .uleb128 .L_4319e6-.L_4319e1
          .uleb128 .L_431f22-.L_431920
          .zero 1
          .uleb128 .L_431aa3-.L_431920
          .uleb128 .L_431aa8-.L_431aa3
          .uleb128 .L_431ee0-.L_431920
          .zero 1
          .uleb128 .L_431ab8-.L_431920
          .uleb128 .L_431af4-.L_431ab8
          .uleb128 .L_431f27-.L_431920
          .zero 1
          .uleb128 .L_431b04-.L_431920
          .uleb128 .L_431b09-.L_431b04
          .uleb128 .L_431f3b-.L_431920
          .zero 1
          .uleb128 .L_431b8e-.L_431920
          .uleb128 .L_431b93-.L_431b8e
          .zero 2
          .uleb128 .L_431c38-.L_431920
          .uleb128 .L_431c3d-.L_431c38
          .uleb128 .L_431f20-.L_431920
          .zero 1
          .uleb128 .L_431ccf-.L_431920
          .uleb128 .L_431cd4-.L_431ccf
          .uleb128 .L_431ec3-.L_431920
          .zero 1
          .uleb128 .L_431d1a-.L_431920
          .uleb128 .L_431dbe-.L_431d1a
          .uleb128 .L_431f20-.L_431920
          .zero 1
          .uleb128 .L_431f1b-.L_431920
          .uleb128 .L_431f4e-.L_431f1b
          .zero 2
.L_445c72:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445ca5-.L_445c76
.L_445c76:
          .uleb128 .L_432141-.L_431f50
          .uleb128 .L_432146-.L_432141
          .uleb128 .L_43266f-.L_431f50
          .zero 1
          .uleb128 .L_432203-.L_431f50
          .uleb128 .L_432208-.L_432203
          .uleb128 .L_43262e-.L_431f50
          .zero 1
          .uleb128 .L_432218-.L_431f50
          .uleb128 .L_432254-.L_432218
          .uleb128 .L_43261a-.L_431f50
          .zero 1
          .uleb128 .L_432264-.L_431f50
          .uleb128 .L_432283-.L_432264
          .uleb128 .L_432607-.L_431f50
          .zero 1
          .uleb128 .L_43238c-.L_431f50
          .uleb128 .L_432391-.L_43238c
          .uleb128 .L_432605-.L_431f50
          .zero 1
          .uleb128 .L_43241e-.L_431f50
          .uleb128 .L_432423-.L_43241e
          .uleb128 .L_4325ed-.L_431f50
          .zero 1
          .uleb128 .L_432460-.L_431f50
          .uleb128 .L_43249b-.L_432460
          .uleb128 .L_432605-.L_431f50
          .zero 1
          .uleb128 .L_432615-.L_431f50
          .uleb128 .L_43266f-.L_432615
          .zero 2
.L_445ca5:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445d12-.L_445ca9
.L_445ca9:
          .uleb128 .L_43276e-.L_432680
          .uleb128 .L_432773-.L_43276e
          .uleb128 .L_432f2a-.L_432680
          .zero 1
          .uleb128 .L_43282d-.L_432680
          .uleb128 .L_432832-.L_43282d
          .uleb128 .L_432f61-.L_432680
          .zero 1
          .uleb128 .L_432842-.L_432680
          .uleb128 .L_43287e-.L_432842
          .uleb128 .L_432f4d-.L_432680
          .zero 1
          .uleb128 .L_43288e-.L_432680
          .uleb128 .L_4328a8-.L_43288e
          .uleb128 .L_432fe7-.L_432680
          .zero 1
          .uleb128 .L_4328b6-.L_432680
          .uleb128 .L_4328fd-.L_4328b6
          .uleb128 .L_432fbc-.L_432680
          .zero 1
          .uleb128 .L_4329a7-.L_432680
          .uleb128 .L_4329ac-.L_4329a7
          .zero 2
          .uleb128 .L_4329ba-.L_432680
          .uleb128 .L_4329bf-.L_4329ba
          .uleb128 .L_432fb4-.L_432680
          .zero 1
          .uleb128 .L_4329cd-.L_432680
          .uleb128 .L_4329d2-.L_4329cd
          .zero 2
          .uleb128 .L_4329e0-.L_432680
          .uleb128 .L_4329e5-.L_4329e0
          .uleb128 .L_432fba-.L_432680
          .zero 1
          .uleb128 .L_432a2e-.L_432680
          .uleb128 .L_432a33-.L_432a2e
          .zero 2
          .uleb128 .L_432a41-.L_432680
          .uleb128 .L_432a46-.L_432a41
          .uleb128 .L_432fb8-.L_432680
          .zero 1
          .uleb128 .L_432a6d-.L_432680
          .uleb128 .L_432ae2-.L_432a6d
          .zero 2
          .uleb128 .L_432af0-.L_432680
          .uleb128 .L_432af5-.L_432af0
          .uleb128 .L_432f9c-.L_432680
          .zero 1
          .uleb128 .L_432b11-.L_432680
          .uleb128 .L_432c6f-.L_432b11
          .zero 2
          .uleb128 .L_432cff-.L_432680
          .uleb128 .L_432d04-.L_432cff
          .uleb128 .L_432f84-.L_432680
          .zero 1
          .uleb128 .L_432d8c-.L_432680
          .uleb128 .L_432d91-.L_432d8c
          .uleb128 .L_432fb6-.L_432680
          .zero 1
          .uleb128 .L_432dd1-.L_432680
          .uleb128 .L_432e56-.L_432dd1
          .uleb128 .L_432f84-.L_432680
          .zero 1
          .uleb128 .L_432f25-.L_432680
          .uleb128 .L_432fe7-.L_432f25
          .zero 2
.L_445d12:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445d6c-.L_445d16
.L_445d16:
          .uleb128 .L_433043-.L_432ff0
          .uleb128 .L_433169-.L_433043
          .zero 2
          .uleb128 .L_433175-.L_432ff0
          .uleb128 .L_43317a-.L_433175
          .uleb128 .L_4337f5-.L_432ff0
          .zero 1
          .uleb128 .L_4331b3-.L_432ff0
          .uleb128 .L_4331f9-.L_4331b3
          .zero 2
          .uleb128 .L_433207-.L_432ff0
          .uleb128 .L_43320c-.L_433207
          .uleb128 .L_43388e-.L_432ff0
          .zero 1
          .uleb128 .L_4332c0-.L_432ff0
          .uleb128 .L_4332c5-.L_4332c0
          .uleb128 .L_433889-.L_432ff0
          .zero 1
          .uleb128 .L_43337f-.L_432ff0
          .uleb128 .L_433384-.L_43337f
          .uleb128 .L_43384e-.L_432ff0
          .zero 1
          .uleb128 .L_433394-.L_432ff0
          .uleb128 .L_4333d0-.L_433394
          .uleb128 .L_43383a-.L_432ff0
          .zero 1
          .uleb128 .L_4333e0-.L_432ff0
          .uleb128 .L_4333f1-.L_4333e0
          .uleb128 .L_43380d-.L_432ff0
          .zero 1
          .uleb128 .L_433470-.L_432ff0
          .uleb128 .L_43348f-.L_433470
          .zero 2
          .uleb128 .L_43349b-.L_432ff0
          .uleb128 .L_4334a0-.L_43349b
          .uleb128 .L_433822-.L_432ff0
          .zero 1
          .uleb128 .L_4334b8-.L_432ff0
          .uleb128 .L_4334bd-.L_4334b8
          .zero 2
          .uleb128 .L_433579-.L_432ff0
          .uleb128 .L_43357e-.L_433579
          .uleb128 .L_433820-.L_432ff0
          .zero 1
          .uleb128 .L_43360f-.L_432ff0
          .uleb128 .L_433614-.L_43360f
          .uleb128 .L_4337d9-.L_432ff0
          .zero 1
          .uleb128 .L_43365c-.L_432ff0
          .uleb128 .L_433683-.L_43365c
          .uleb128 .L_433820-.L_432ff0
          .zero 1
          .uleb128 .L_433808-.L_432ff0
          .uleb128 .L_433889-.L_433808
          .zero 2
.L_445d6c:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445d98-.L_445d6f
.L_445d6f:
          .byte 0x1
          .uleb128 .L_445d91-.L_445d71
.L_445d71:
          .uleb128 .L_434276-.L_434260
          .uleb128 .L_43427b-.L_434276
          .zero 2
          .uleb128 .L_4342d2-.L_434260
          .uleb128 .L_4342d7-.L_4342d2
          .uleb128 .L_43432b-.L_434260
          .zero 1
          .uleb128 .L_4342ee-.L_434260
          .uleb128 .L_4342f3-.L_4342ee
          .uleb128 .L_434343-.L_434260
          .byte 0x1
          .uleb128 .L_43433e-.L_434260
          .uleb128 .L_434343-.L_43433e
          .zero 2
          .uleb128 .L_43434b-.L_434260
          .uleb128 .L_434350-.L_43434b
          .uleb128 .L_434350-.L_434260
          .byte 0x1
          .uleb128 .L_434377-.L_434260
          .uleb128 .L_43437c-.L_434377
          .uleb128 .L_43437c-.L_434260
          .zero 1
.L_445d91:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445d98:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445dcc-.L_445d9c
.L_445d9c:
          .uleb128 .L_4344e3-.L_4343b0
          .uleb128 .L_4344e8-.L_4344e3
          .uleb128 .L_434aa7-.L_4343b0
          .zero 1
          .uleb128 .L_4345a2-.L_4343b0
          .uleb128 .L_4345a7-.L_4345a2
          .uleb128 .L_434a45-.L_4343b0
          .zero 1
          .uleb128 .L_4345b7-.L_4343b0
          .uleb128 .L_4345f3-.L_4345b7
          .uleb128 .L_434a93-.L_4343b0
          .zero 1
          .uleb128 .L_434603-.L_4343b0
          .uleb128 .L_434608-.L_434603
          .uleb128 .L_434a80-.L_4343b0
          .zero 1
          .uleb128 .L_4347d7-.L_4343b0
          .uleb128 .L_4347dc-.L_4347d7
          .uleb128 .L_434a27-.L_4343b0
          .zero 1
          .uleb128 .L_43486d-.L_4343b0
          .uleb128 .L_434872-.L_43486d
          .uleb128 .L_434a43-.L_4343b0
          .zero 1
          .uleb128 .L_4348ba-.L_4343b0
          .uleb128 .L_434952-.L_4348ba
          .uleb128 .L_434a27-.L_4343b0
          .zero 1
          .uleb128 .L_434a7b-.L_4343b0
          .uleb128 .L_434aa7-.L_434a7b
          .zero 2
.L_445dcc:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445dd0-.L_445dd0
.L_445dd0:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445e0f-.L_445dd4
.L_445dd4:
          .uleb128 .L_434dd0-.L_434da0
          .uleb128 .L_434ff3-.L_434dd0
          .zero 2
          .uleb128 .L_4350c9-.L_434da0
          .uleb128 .L_4350ce-.L_4350c9
          .uleb128 .L_435680-.L_434da0
          .zero 1
          .uleb128 .L_43518b-.L_434da0
          .uleb128 .L_435190-.L_43518b
          .uleb128 .L_4356af-.L_434da0
          .zero 1
          .uleb128 .L_4351a0-.L_434da0
          .uleb128 .L_4351dc-.L_4351a0
          .uleb128 .L_4356d9-.L_434da0
          .zero 1
          .uleb128 .L_4351ec-.L_434da0
          .uleb128 .L_4351f1-.L_4351ec
          .uleb128 .L_43569c-.L_434da0
          .zero 1
          .uleb128 .L_435275-.L_434da0
          .uleb128 .L_43527a-.L_435275
          .uleb128 .L_435662-.L_434da0
          .zero 1
          .uleb128 .L_43530b-.L_434da0
          .uleb128 .L_435310-.L_43530b
          .uleb128 .L_43567e-.L_434da0
          .zero 1
          .uleb128 .L_4353e3-.L_434da0
          .uleb128 .L_435496-.L_4353e3
          .zero 2
          .uleb128 .L_4354d1-.L_434da0
          .uleb128 .L_43557e-.L_4354d1
          .uleb128 .L_435662-.L_434da0
          .zero 1
          .uleb128 .L_435697-.L_434da0
          .uleb128 .L_4356ed-.L_435697
          .zero 2
.L_445e0f:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445e21-.L_445e13
.L_445e13:
          .uleb128 .L_4338c0-.L_433890
          .uleb128 .L_4338c5-.L_4338c0
          .zero 2
          .uleb128 .L_4338df-.L_433890
          .uleb128 .L_4338e4-.L_4338df
          .uleb128 .L_433924-.L_433890
          .zero 1
          .uleb128 .L_433918-.L_433890
          .uleb128 .L_43393c-.L_433918
          .zero 2
.L_445e21:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445e5a-.L_445e25
.L_445e25:
          .uleb128 .L_433970-.L_433940
          .uleb128 .L_433a2a-.L_433970
          .zero 2
          .uleb128 .L_433ac7-.L_433940
          .uleb128 .L_433acc-.L_433ac7
          .uleb128 .L_434033-.L_433940
          .zero 1
          .uleb128 .L_433b86-.L_433940
          .uleb128 .L_433b8b-.L_433b86
          .uleb128 .L_434063-.L_433940
          .zero 1
          .uleb128 .L_433b9b-.L_433940
          .uleb128 .L_433bd7-.L_433b9b
          .uleb128 .L_43404f-.L_433940
          .zero 1
          .uleb128 .L_433be7-.L_433940
          .uleb128 .L_433bf8-.L_433be7
          .uleb128 .L_434020-.L_433940
          .zero 1
          .uleb128 .L_433d96-.L_433940
          .uleb128 .L_433d9b-.L_433d96
          .uleb128 .L_434002-.L_433940
          .zero 1
          .uleb128 .L_433e2c-.L_433940
          .uleb128 .L_433e31-.L_433e2c
          .uleb128 .L_43401e-.L_433940
          .zero 1
          .uleb128 .L_433e91-.L_433940
          .uleb128 .L_433f2d-.L_433e91
          .uleb128 .L_434002-.L_433940
          .zero 1
          .uleb128 .L_43402e-.L_433940
          .uleb128 .L_434063-.L_43402e
          .zero 2
.L_445e5a:
          .zero 2
.L_445e5c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_445ebe-.L_445e60
.L_445e60:
          .uleb128 .L_435caf-.L_435c40
          .uleb128 .L_435e0a-.L_435caf
          .zero 2
          .uleb128 .L_435ebb-.L_435c40
          .uleb128 .L_435ec0-.L_435ebb
          .uleb128 .L_4368a8-.L_435c40
          .zero 1
          .uleb128 .L_435f7e-.L_435c40
          .uleb128 .L_435f83-.L_435f7e
          .uleb128 .L_43686c-.L_435c40
          .zero 1
          .uleb128 .L_435f94-.L_435c40
          .uleb128 .L_435fd2-.L_435f94
          .uleb128 .L_4368fa-.L_435c40
          .zero 1
          .uleb128 .L_435fe3-.L_435c40
          .uleb128 .L_435ff6-.L_435fe3
          .uleb128 .L_4368e7-.L_435c40
          .zero 1
          .uleb128 .L_43609e-.L_435c40
          .uleb128 .L_4363b1-.L_43609e
          .zero 2
          .uleb128 .L_4363be-.L_435c40
          .uleb128 .L_4363c3-.L_4363be
          .uleb128 .L_43692c-.L_435c40
          .zero 1
          .uleb128 .L_43641c-.L_435c40
          .uleb128 .L_43653b-.L_43641c
          .zero 2
          .uleb128 .L_436548-.L_435c40
          .uleb128 .L_43654d-.L_436548
          .uleb128 .L_4368c9-.L_435c40
          .zero 1
          .uleb128 .L_4365d2-.L_435c40
          .uleb128 .L_4365d7-.L_4365d2
          .uleb128 .L_4368ad-.L_435c40
          .zero 1
          .uleb128 .L_43666b-.L_435c40
          .uleb128 .L_436670-.L_43666b
          .uleb128 .L_43692a-.L_435c40
          .zero 1
          .uleb128 .L_4366a1-.L_435c40
          .uleb128 .L_4366a6-.L_4366a1
          .zero 2
          .uleb128 .L_4366b3-.L_435c40
          .uleb128 .L_4366b8-.L_4366b3
          .uleb128 .L_43692e-.L_435c40
          .zero 1
          .uleb128 .L_4366c0-.L_435c40
          .uleb128 .L_4366e7-.L_4366c0
          .zero 2
          .uleb128 .L_436702-.L_435c40
          .uleb128 .L_43679a-.L_436702
          .uleb128 .L_4368ad-.L_435c40
          .zero 1
          .uleb128 .L_4368a3-.L_435c40
          .uleb128 .L_43692a-.L_4368a3
          .zero 2
.L_445ebe:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x30
          .byte 0xa3
          .byte 0x2
          .byte 0x5
          .byte 0xd6
          .byte 0xd
          .byte 0x0
          .byte 0xe2
          .byte 0x3
          .byte 0x5
          .byte 0xf4
          .byte 0xc
          .byte 0x0
          .byte 0xf7
          .byte 0x3
          .byte 0x3c
          .byte 0xc2
          .byte 0xd
          .byte 0x0
          .byte 0xc3
          .byte 0x4
          .byte 0x5
          .byte 0xaf
          .byte 0xd
          .byte 0x0
          .byte 0x86
          .byte 0x8
          .byte 0x5
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0x9c
          .byte 0x9
          .byte 0x5
          .byte 0xf2
          .byte 0xc
          .byte 0x0
          .byte 0xe9
          .byte 0x9
          .byte 0x98
          .byte 0x1
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0xaa
          .byte 0xd
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x3b
          .byte 0x2f
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x6
          .byte 0x5
          .byte 0xfe
          .byte 0x11
          .byte 0x0
          .byte 0xbb
          .byte 0x8
          .byte 0x5
          .byte 0x9a
          .byte 0x12
          .byte 0x0
          .byte 0xd0
          .byte 0x8
          .byte 0x3c
          .byte 0xc4
          .byte 0x12
          .byte 0x0
          .byte 0x9c
          .byte 0x9
          .byte 0x5
          .byte 0xd8
          .byte 0x12
          .byte 0x0
          .byte 0xa2
          .byte 0xa
          .byte 0x5
          .byte 0xfc
          .byte 0x11
          .byte 0x0
          .byte 0xb8
          .byte 0xb
          .byte 0x5
          .byte 0xe0
          .byte 0x11
          .byte 0x0
          .byte 0xa9
          .byte 0xd
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xe
          .byte 0x9e
          .byte 0x1
          .byte 0xfc
          .byte 0x11
          .byte 0x0
          .byte 0x85
          .byte 0x10
          .byte 0xe6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445f38:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_445f6c-.L_445f3b
.L_445f3b:
          .byte 0x1
          .uleb128 .L_445f65-.L_445f3d
.L_445f3d:
          .uleb128 .L_436975-.L_436930
          .uleb128 .L_43697a-.L_436975
          .uleb128 .L_436b03-.L_436930
          .zero 1
          .uleb128 .L_4369d1-.L_436930
          .uleb128 .L_4369d6-.L_4369d1
          .uleb128 .L_436af1-.L_436930
          .zero 1
          .uleb128 .L_4369ed-.L_436930
          .uleb128 .L_4369f2-.L_4369ed
          .uleb128 .L_436ae4-.L_436930
          .byte 0x1
          .uleb128 .L_436a4e-.L_436930
          .uleb128 .L_436abf-.L_436a4e
          .uleb128 .L_436abf-.L_436930
          .zero 1
          .uleb128 .L_436adf-.L_436930
          .uleb128 .L_436ae4-.L_436adf
          .zero 2
          .uleb128 .L_436aec-.L_436930
          .uleb128 .L_436af1-.L_436aec
          .uleb128 .L_436b08-.L_436930
          .byte 0x1
          .uleb128 .L_436b2f-.L_436930
          .uleb128 .L_436b34-.L_436b2f
          .uleb128 .L_436b34-.L_436930
          .zero 1
.L_445f65:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445f6c:
#===================================
# end section .gcc_except_table
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_646e70:
          .quad .L_4029c0
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_646e78:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_646e90:
          .quad .L_412b50
          .quad .L_412b60
          .quad .L_410540
          .quad .L_410580
          .quad .L_410570
          .quad .L_411730
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_646ed0:
          .quad .L_412b90
          .quad .L_412be0
          .quad .L_413560
          .quad .L_410580
          .quad .L_410570
          .quad .L_4110e0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_646f10:
          .quad .L_412c30
          .quad .L_412c80
          .quad .L_413a80
          .quad .L_410580
          .quad .L_410570
          .quad .L_410a90
.L_646f40:
          .quad .L_41096a
          .quad .L_4108e4
          .quad .L_410973
          .quad .L_41098b
          .quad .L_4109a3
          .quad .L_4109c1
          .quad .L_4109cb
          .quad .L_4109d5
          .quad .L_4105e0
          .quad .L_4109e0
          .quad .L_4109f8
          .quad .L_410a10
          .quad .L_410a26
          .quad .L_410a34
          .zero 8
          .quad .L_649d10
.L_646fc0:
          .quad .L_4199b0
          .quad .L_419a10
          .quad .L_418000
          .quad .L_41a150
          .quad .L_419340
          .quad .L_417ff0
          .zero 16
.L_647000:
          .quad .L_4211f0
          .zero 8
          .quad .L_421200
          .zero 8
          .quad .L_421210
          .zero 8
          .quad .L_421220
          .zero 8
          .quad .L_421240
          .zero 8
          .quad .L_421250
          .zero 8
          .quad .L_421270
          .zero 8
          .quad .L_421290
          .zero 8
.L_647080:
          .quad .L_42fc00
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc0a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbd0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbc8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc1f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbc8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc34
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc3f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc49
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc5e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc73
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fba8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc88
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fba8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fba4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fc9d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fba4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fca8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fba0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fcb2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fba0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fcbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb90
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fcc7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb90
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fcd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fcdc
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fce7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0xfc
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0xfc
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb70
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd05
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb70
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd0f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd1a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fb58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6475c0:
          .quad .L_42fd26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd29
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd2f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fd32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbe0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0xfd
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42fbe0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x9d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6476f0:
          .quad .L_434b50
          .quad .L_434b60
          .quad .L_4314f0
          .quad .L_432ff0
          .quad .L_4314e0
          .quad .L_431920
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x9d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_647730:
          .quad .L_436d60
          .quad .L_436d70
          .quad .L_435af0
          .quad .L_435c40
          .quad .L_410570
          .quad .L_436b40
.L_647760:
          .quad .L_43da88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438500
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4383e0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439160
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43da98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4383b0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a08
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4383d0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4383c8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43daaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f08
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dab5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438bc0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dabd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439100
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dac6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dacd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dad5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439060
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dade
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438920
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dae4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b5e0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b5a0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dae6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dafa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390b8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db01
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439450
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db04
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439420
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db07
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438560
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db0e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438dd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d38
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439470
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439460
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4387c0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x85
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438570
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x93
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ae0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439360
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ef0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db5e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438930
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439280
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f20
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ba0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438db0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8c
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dba6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b40
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4391a0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439180
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439320
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbba
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4389b8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbc2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438380
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390b0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390a0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b90
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439220
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4391e0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dbed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc03
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438de0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b18
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ba8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438aa0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x8d
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8d
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439068
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439020
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a5e0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a240
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4389c0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438950
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d40
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438980
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438924
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c7a0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c6a0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c5c0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c5b0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d380
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d0c0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c480
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43bb80
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ba80
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438e00
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438940
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ac80
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43abc0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dc9b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390c0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dca5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b3e0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b360
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b620
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439078
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4391d0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dce6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d20
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dceb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b040
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43af60
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a70
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dcf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4383c0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd00
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a140
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a080
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd02
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c520
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c4e0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd05
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x8d
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd11
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d930
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d900
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d880
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d800
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438df0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438d54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ff0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438fe0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439300
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438960
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd5e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x8c
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x8d
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439e00
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439d80
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43c4b0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ba00
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b8e0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ba40
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd83
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c00
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b8a0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b6c0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b640
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43d960
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dd9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438db8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dda4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439b40
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439980
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43dda6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438928
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f48
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddbb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4394a0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddbe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x8c
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438f40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0xdd
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a40
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a000
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xdd
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439560
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439500
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdd
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4397c0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439640
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xdd
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438b80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390f8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ddf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438c24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de03
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438dc0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de0a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4390f0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439088
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439070
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439000
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x8d
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438370
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439120
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439380
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393b8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ee0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ec0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438eb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438ea0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438df4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438a10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439480
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439474
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0xde
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x93
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43de7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4393c0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
#-----------------------------------
.align 16
.weak _ZTVSt9basic_iosIcSt11char_traitsIcEE_copy
.type _ZTVSt9basic_iosIcSt11char_traitsIcEE_copy, @object
#-----------------------------------
_ZTVSt9basic_iosIcSt11char_traitsIcEE_copy:
          .zero 32
#-----------------------------------
.align 16
.weak _ZTVSt15basic_streambufIcSt11char_traitsIcEE_copy
.type _ZTVSt15basic_streambufIcSt11char_traitsIcEE_copy, @object
#-----------------------------------
_ZTVSt15basic_streambufIcSt11char_traitsIcEE_copy:
          .zero 128
#-----------------------------------
.align 16
.weak _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy
.type _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy, @object
#-----------------------------------
_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy:
          .zero 80
#-----------------------------------
.align 16
.weak _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy
.type _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy, @object
#-----------------------------------
_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE_copy:
          .zero 48
#-----------------------------------
.align 16
.globl _ZNSt3tr18__detail12__prime_listE_copy
.type _ZNSt3tr18__detail12__prime_listE_copy, @object
#-----------------------------------
_ZNSt3tr18__detail12__prime_listE_copy:
          .zero 2440
#-----------------------------------
.align 8
.weak _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE_copy
.type _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE_copy, @object
#-----------------------------------
_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE_copy:
          .zero 128
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_414770
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_414790
          .byte 0x68
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_4147b0
          .byte 0x68
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_4147d0
          .byte 0x68
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_649cd0:
          .zero 16
          .quad .L_410560
          .quad .L_410580
          .quad .L_410570
          .quad __cxa_pure_virtual
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_41cc80
.L_649d10:
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_41cca0
          .byte 0x0
          .byte 0x9d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_649d38:
          .zero 16
          .quad .L_41b4e0
          .quad .L_41b500
          .quad .L_41b4f0
          .quad __cxa_pure_virtual
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_4356f0
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_435710
          .byte 0x68
          .byte 0x9d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x9d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_649da0:
          .zero 16
          .quad .L_434090
          .quad .L_4340b0
          .quad .L_4340a0
          .quad __cxa_pure_virtual
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_436da0
          .byte 0x68
          .byte 0x9c
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 16
.L_64a2b0:
          .quad __gxx_personality_v0
.L_64a2b8:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_64a2c0:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x10
          .byte 0x0
.L_64a2c8:
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_64a2e0:
          .quad .L_42f8c4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_64a2c8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_64a2c0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_64a310:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_64a320:
          .zero 32
.L_64a340:
          .zero 8
.L_64a348:
          .zero 8
.L_64a350:
          .zero 8
.L_64a358:
          .zero 8
.L_64a360:
          .zero 64
.L_64a3a0:
          .zero 40
.L_64a3c8:
          .zero 8
.L_64a3d0:
#===================================
# end section .bss
#===================================
