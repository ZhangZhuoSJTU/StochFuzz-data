#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 8
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

.L_402d90:

            lea RSI,QWORD PTR [RIP+.L_448d77]
            sub RSP,8
            mov EDI,1
            call .L_432cd0
.L_402da5:

            lea RSI,QWORD PTR [RIP+.L_44512a]
            sub RSP,8
            mov EDI,1
            call .L_432cd0
.L_402dba:

            push R12
            push RBP
            or RBP,-1
            push RBX
.L_402dc2:

            xor EAX,EAX
            mov RCX,RBP
            mov R12,RDI

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            lea RBX,QWORD PTR [RAX+RBP*1]
.L_402dd6:

            test RBX,RBX
            je .L_402e09

            xor EAX,EAX
            mov RDI,R12
            mov RCX,RBP

            repne scasb AL,BYTE PTR [RDI]

            mov RSI,R12
            mov EDI,2
            mov RAX,RCX
            not RAX
            lea RDX,QWORD PTR [RAX-1]
            call write@PLT

            test RAX,RAX
            jle .L_402e09

            add R12,RAX
            sub RBX,RAX
            jmp .L_402dd6
.L_402e09:

            pop RBX
.L_402e0a:

            pop RBP
            pop R12
            ret 
.L_402e0e:

            nop
            nop
#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_402e14:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_443324]
            call fopen@PLT

            test RAX,RAX
            je .L_402e98

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_402ebf

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_402ea2

            mov RSI,RBP
            mov RDI,R12
            call .L_402ff0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_402e92:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_402e98:

            mov EDI,1
            call exit@PLT
.L_402ea2:

            lea RSI,QWORD PTR [RIP+.L_443336]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_402ebf:

            lea RSI,QWORD PTR [RIP+.L_443327]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_402edc:

            nop
            nop
            nop
            nop
.L_402f10:

            ret 
.L_402f12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402f20:

            push RBP
            mov EAX,OFFSET 6665968
            cmp RAX,OFFSET 6665968
            mov RBP,RSP
            je .L_402f48

            mov EAX,0
            test RAX,RAX
            je .L_402f48

            pop RBP
            mov EDI,OFFSET 6665968
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f48:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f50:

            mov ESI,OFFSET 6665968
            push RBP
            sub RSI,OFFSET 6665968
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_402f88

            mov EAX,0
            test RAX,RAX
            je .L_402f88

            pop RBP
            mov EDI,OFFSET 6665968
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402f88:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402fc0:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_402f50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402fd0:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSI+8],0
            ret 
.L_402fe3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402ff0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,56
.L_403000:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_403010:

            call .L_403b80

            mov RBX,RAX
            mov RDI,RAX
            call .L_405380

            mov RDI,RBX
            call .L_4096d0

            lea RSI,QWORD PTR [RSP+16]
            lea RCX,QWORD PTR [RIP+.L_402fd0]
            xor R8D,R8D
            xor EDX,EDX
            mov RDI,RBX
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+24],RBP
            xor R12D,R12D
            xor EBP,EBP
            call .L_405210

            call getpagesize@PLT

            movsxd R13,EAX
            test R13,R13
            je .L_403079

            mov RDI,R13
            call _Znwm@PLT
.L_403065:

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            mov RBP,RAX
            lea R12,QWORD PTR [RAX+R13*1]
            call memset@PLT
.L_403079:

            lea R13,QWORD PTR [RSP+8]
            sub R12,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403088:

            mov RSI,R13
            mov RDI,RBX
.L_40308e:

            call .L_432fc0

            test EAX,EAX
            jne .L_4030b9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4030a0:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_404150

            test RAX,RAX
            jg .L_4030a0

            cmp RAX,-30
            jne .L_403088
.L_4030b9:

            mov RDI,RBX
            call .L_432ef0
.L_4030c1:

            test RBP,RBP
            je .L_4030ce

            mov RDI,RBP
            call _ZdlPv@PLT
.L_4030ce:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_403103

            add RSP,56
.L_4030e4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4030eb:

            test RBP,RBP
            mov RBX,RAX
            je .L_4030fb

            mov RDI,RBP
            call _ZdlPv@PLT
.L_4030fb:

            mov RDI,RBX
.L_4030fe:

            call _Unwind_Resume@PLT
.L_403103:

            call __stack_chk_fail@PLT
.L_403108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403110:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,RSI
            mov RSI,QWORD PTR [RDI+80]
            mov RCX,QWORD PTR [RAX+200]
            mov RDI,RAX
            jmp RCX
.L_403127:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403130:

            mov RDX,QWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDX+192]
            test RAX,RAX
            je .L_403150

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403150:

            xor EAX,EAX
            ret 
.L_403153:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403160:

            mov RCX,QWORD PTR [RDI+24]
            cmp DWORD PTR [RCX+244],ESI
            je .L_4031c0

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov DWORD PTR [RCX+244],ESI
            mov ESI,ESI
            mov RDX,QWORD PTR [RCX+256]
            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov R12,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RCX+232]
            test RAX,RAX
            je .L_4031c8

            mov RSI,QWORD PTR [RDI+80]
            mov RDX,R12
            mov RDI,RCX
            call RAX

            mov QWORD PTR [RBP+80],R12
            mov EBX,EAX
.L_4031ac:

            cmp EBX,EAX
            cmovle EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4031c0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4031c8:

            mov RAX,QWORD PTR [RCX+224]
            test RAX,RAX
            je .L_4031fd

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,RCX
            call RAX

            mov RCX,QWORD PTR [RBP+24]
            mov EBX,EAX
.L_4031e3:

            mov RAX,QWORD PTR [RCX+192]
            mov QWORD PTR [RBP+80],R12
            test RAX,RAX
            je .L_403201

            mov RSI,R12
            mov RDI,RCX
            call RAX

            jmp .L_4031ac
.L_4031fd:

            xor EBX,EBX
            jmp .L_4031e3
.L_403201:

            xor EAX,EAX
            jmp .L_4031ac
.L_403205:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403210:

            mov RDX,QWORD PTR [RDI+1032]
            xor EAX,EAX
            test RDX,RDX
            je .L_403230

            nop
            nop
.L_403220:

            mov RDX,QWORD PTR [RDX+16]
            add EAX,1
            test RDX,RDX
            jne .L_403220

            ret 
          .byte 0x66
          .byte 0x90
.L_403230:

            ret 
.L_403232:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403240:

            mov RDX,QWORD PTR [RDI+1032]
            test RDX,RDX
            setne AL
            cmp ESI,-1
            jne .L_403280

            test AL,AL
            je .L_403280

            mov RAX,QWORD PTR [RDX+16]
            test RAX,RAX
            jne .L_40326b
.L_40325f:

            mov RAX,RDX
.L_403262:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403268:

            mov RAX,RDX
.L_40326b:

            mov RDX,QWORD PTR [RAX+16]
            test RDX,RDX
            jne .L_403268

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403280:

            cmp ESI,0
            jl .L_4032aa

            jle .L_40325f

            test AL,AL
            je .L_40325f

            mov RAX,RDX
            jmp .L_403295
.L_403290:

            test RAX,RAX
            je .L_4032a8
.L_403295:

            sub ESI,1
            mov RAX,QWORD PTR [RAX+16]
            test ESI,ESI
            jg .L_403290

            jmp .L_403262
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4032a8:

            ret 
.L_4032aa:

            xor EAX,EAX
            ret 
.L_4032ad:

            nop
            nop
            nop
.L_4032b0:

            call .L_403240

            test RAX,RAX
            je .L_4032be

            mov EAX,DWORD PTR [RAX+96]
            ret 
.L_4032be:

            mov EAX,4294967295
            ret 
.L_4032c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4032d0:

            call .L_403240

            test RAX,RAX
            je .L_4032e0

            mov RAX,QWORD PTR [RAX+88]
            ret 
          .byte 0x90
.L_4032e0:

            xor EAX,EAX
            ret 
.L_4032e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4032f0:

            call .L_403240

            test RAX,RAX
            je .L_4032fe

            mov RAX,QWORD PTR [RAX]
            ret 
.L_4032fe:

            mov RAX,-1
            ret 
.L_403306:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403310:

            mov RAX,QWORD PTR [RDI+24]
            mov R8,QWORD PTR [RAX+216]
            test R8,R8
            je .L_403332

            mov R9,RSI
            mov ECX,EDX
            mov RSI,QWORD PTR [RDI+80]
            mov RDX,R9
            mov RDI,RAX
            jmp R8
.L_403332:

            lea RDX,QWORD PTR [RIP+.L_443348]
            sub RSP,8
            mov RDI,RAX
            or ESI,4294967295
            xor EAX,EAX
            call .L_432bc0

            mov RAX,-25
            pop RDX
            ret 
.L_403353:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403360:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_403367:

            mov RDI,QWORD PTR [RDI+24]
            xor R12D,R12D
            mov RDX,QWORD PTR [RDI+224]
            test RDX,RDX
            je .L_4033c4

            mov ESI,DWORD PTR [RDI+240]
            test ESI,ESI
            je .L_4033c4

            xor EBX,EBX
            jmp .L_403397
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403390:

            mov RDX,QWORD PTR [RDI+224]
.L_403397:

            mov RCX,QWORD PTR [RDI+256]
            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov RSI,QWORD PTR [RAX+16]
            call RDX

            mov RDI,QWORD PTR [RBP+24]
            cmp R12D,EAX
            cmovg R12D,EAX
            add EBX,1
            cmp EBX,DWORD PTR [RDI+240]
            jb .L_403390
.L_4033c4:

            mov EAX,R12D
            pop RBX
.L_4033c8:

            pop RBP
            pop R12
            ret 
.L_4033cc:

            nop
            nop
            nop
            nop
.L_4033d0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_4033d7:

            je .L_403430

            mov RBX,RDI
            xor R12D,R12D
            nop
.L_4033e0:

            cmp BYTE PTR [RBX+169],0
            mov RBP,QWORD PTR [RBX+16]
            jne .L_403409

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            je .L_403409

            mov RDI,RBX
            call RAX

            cmp R12D,EAX
            mov BYTE PTR [RBX+169],1
            cmovg R12D,EAX
.L_403409:

            mov RDI,QWORD PTR [RBX+104]
            call free@PLT

            test RBP,RBP
            mov QWORD PTR [RBX+104],0
            mov RBX,RBP
            jne .L_4033e0

            mov EAX,R12D
            pop RBX
.L_403426:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403430:

            xor R12D,R12D
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
.L_40343b:

            nop
            nop
            nop
            nop
            nop
.L_403440:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_44369d]
            mov EDX,65535
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_436df0

            cmp EAX,-30
            mov EBX,EAX
            je .L_40348e

            xor EBX,EBX
            cmp DWORD PTR [RBP+4],32
            je .L_40348e

            mov RDI,RBP
            call .L_432ba0

            mov RDI,QWORD PTR [RBP+1032]
            mov DWORD PTR [RBP+4],32
            call .L_4033d0

            test EAX,EAX
            cmovle EBX,EAX
.L_40348e:

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_403497:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034a0:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4436b0]
            mov RBP,RSI
            mov R12,RDX
            mov ESI,14594245
            sub RSP,8
            mov EDX,4
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403512

            mov RAX,QWORD PTR [RBX+2472]
            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_4034f9

            add RSP,8
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp RAX
.L_4034f9:

            lea RDX,QWORD PTR [RIP+.L_443380]
            mov ESI,22
            mov RDI,RBX
            call .L_432bc0

            mov EAX,4294967266
.L_403512:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40351d:

            nop
            nop
            nop
.L_403520:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40352a:

            test RSI,RSI
            js .L_40360c

            mov RBX,RSI
            je .L_40359b

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDI+208]
            test RAX,RAX
            je .L_4035b0

            xor R12D,R12D
            mov R13D,1073741824
            jmp .L_40356e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403560:

            mov RDI,QWORD PTR [RBP+24]
            sub RBX,RAX
            mov RAX,QWORD PTR [RDI+208]
.L_40356e:

            cmp RBX,1073741824
            mov RDX,R13
            mov RSI,QWORD PTR [RBP+80]
            cmovle RDX,RBX
            call RAX

            add R12,RAX
            test RAX,RAX
            je .L_4035f0

            cmp RBX,RAX
            je .L_4035f0

            cmp RBX,RAX
            jge .L_403560
.L_403594:

            mov RBX,-30
.L_40359b:

            add RSP,8
.L_40359f:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4035b0:

            mov RAX,QWORD PTR [RDI+216]
            test RAX,RAX
            je .L_403608

            cmp RSI,65536
            jle .L_403608

            mov R12,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RBP+80]
            mov ECX,1
            mov RDX,RBX
            call RAX

            add R12,RBX
            cmp R12,RAX
            jne .L_403594

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4035f0:

            add RSP,8
            mov RBX,R12
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403608:

            xor EBX,EBX
            jmp .L_40359b
.L_40360c:

            lea RSI,QWORD PTR [RIP+.L_4436c8]
            mov EDI,1
            call .L_432cd0
.L_40361d:

            nop
            nop
            nop
.L_403620:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_403637:

            mov RDX,QWORD PTR [RDI+128]
.L_40363e:

            test RDX,RDX
            je .L_40364c

            cmp R14,RDX
            jbe .L_4038e0
.L_40364c:

            mov RBP,QWORD PTR [RBX+160]
            mov R12,QWORD PTR [RBX+104]
            lea RCX,QWORD PTR [RBP+RDX*1]
            cmp QWORD PTR [RBX+144],RCX
            jb .L_40366e

            cmp R14,RCX
            jbe .L_4038f2
.L_40366e:

            mov RSI,QWORD PTR [RBX+120]
            cmp RSI,R12
            jbe .L_403694

            mov RAX,QWORD PTR [RBX+112]
            lea RCX,QWORD PTR [RSI+R14*1]
            add RAX,R12
            cmp RCX,RAX
            jbe .L_403694

            test RDX,RDX
            jne .L_4038a0
.L_403690:

            mov QWORD PTR [RBX+120],R12
.L_403694:

            test RBP,RBP
            jne .L_4037b8

            cmp BYTE PTR [RBX+168],0
            jne .L_40392b

            lea RSI,QWORD PTR [RBX+136]
            mov RDI,RBX
            call QWORD PTR [RBX+40]

            test RAX,RAX
            js .L_403943

            jne .L_403828

            mov RAX,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RAX+244]
            mov EAX,DWORD PTR [RAX+240]
            sub EAX,1
            cmp ESI,EAX
            je .L_4036f0

            add ESI,1
            mov RDI,RBX
            call .L_403160

            test EAX,EAX
            je .L_4038c0
.L_4036f0:

            test R13,R13
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+152],0
            mov BYTE PTR [RBX+168],1
            je .L_4037a0

            mov RAX,QWORD PTR [RBX+128]
            mov QWORD PTR [R13],RAX
            add RSP,8
.L_403737:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403748:

            test R15,R15
            je .L_403850

            lea RAX,QWORD PTR [R15+R15*1]
            cmp R15,RAX
            jb .L_403763

            jmp .L_403775
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403760:

            mov RAX,RDX
.L_403763:

            cmp R14,RAX
            jbe .L_403984

            lea RDX,QWORD PTR [RAX+RAX*1]
            cmp RAX,RDX
            jb .L_403760
.L_403775:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_4433c0]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            test R13,R13
            mov BYTE PTR [RBX+170],1
            je .L_4037a0
.L_403798:

            mov QWORD PTR [R13],-30
.L_4037a0:

            xor EAX,EAX
.L_4037a2:

            add RSP,8
.L_4037a6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4037b8:

            mov R15,QWORD PTR [RBX+112]
            cmp R14,R15
            ja .L_403748

            mov RDI,QWORD PTR [RBX+120]
.L_4037c5:

            mov RAX,QWORD PTR [RBX+128]
            lea RDX,QWORD PTR [R12+R15*1]
            mov RSI,R14
            add RDI,RAX
            sub RSI,RAX
            sub RDX,RDI
            lea RCX,QWORD PTR [RAX+RDX*1]
            cmp R14,RCX
            cmovb RDX,RSI
            mov RSI,QWORD PTR [RBX+152]
            cmp RDX,RBP
            cmovbe RBP,RDX
            mov RDX,RBP
            call memcpy@PLT

            mov RDX,QWORD PTR [RBX+128]
            add QWORD PTR [RBX+152],RBP
            sub QWORD PTR [RBX+160],RBP
            add RDX,RBP
            mov QWORD PTR [RBX+128],RDX
            jmp .L_40363e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403828:

            mov QWORD PTR [RBX+144],RAX
            mov QWORD PTR [RBX+160],RAX
            mov RAX,QWORD PTR [RBX+136]
            mov RDX,QWORD PTR [RBX+128]
            mov QWORD PTR [RBX+152],RAX
            jmp .L_40363e
.L_403850:

            mov R15,R14
.L_403853:

            mov RDI,R15
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_403775

            mov RDX,QWORD PTR [RBX+128]
            test RDX,RDX
            jne .L_4038d0
.L_403873:

            mov RDI,QWORD PTR [RBX+104]
            call free@PLT

            mov QWORD PTR [RBX+104],R12
            mov QWORD PTR [RBX+120],R12
            mov RDI,R12
            mov QWORD PTR [RBX+112],R15
            mov RBP,QWORD PTR [RBX+160]
            jmp .L_4037c5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4038a0:

            mov RDI,R12
            call memmove@PLT

            mov R12,QWORD PTR [RBX+104]
            mov RBP,QWORD PTR [RBX+160]
            jmp .L_403690
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4038c0:

            mov RDX,QWORD PTR [RBX+128]
            jmp .L_40363e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4038d0:

            mov RSI,QWORD PTR [RBX+120]
            mov RDI,RAX
            call memmove@PLT

            jmp .L_403873
          .byte 0x66
          .byte 0x90
.L_4038e0:

            test R13,R13
            je .L_4038e9

            mov QWORD PTR [R13],RDX
.L_4038e9:

            mov RAX,QWORD PTR [RBX+120]
            jmp .L_4037a2
.L_4038f2:

            mov RAX,QWORD PTR [RBX+152]
            mov QWORD PTR [RBX+160],RCX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+120],R12
            sub RAX,RDX
            test R13,R13
            mov QWORD PTR [RBX+152],RAX
            je .L_4037a2

            mov QWORD PTR [R13],RCX
            jmp .L_4037a2
.L_40392b:

            test R13,R13
            je .L_4037a0

            mov QWORD PTR [R13],0
            xor EAX,EAX
            jmp .L_4037a2
.L_403943:

            test R13,R13
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+152],0
            mov BYTE PTR [RBX+170],1
            jne .L_403798

            jmp .L_4037a0
.L_403984:

            mov R15,RAX
            jmp .L_403853
.L_40398c:

            nop
            nop
            nop
            nop
.L_403990:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            push RBX
.L_40399b:

            cmp BYTE PTR [RDI+170],0
            mov RBX,RDI
            jne .L_403b30

            mov RAX,QWORD PTR [RDI+128]
            test RAX,RAX
            jne .L_403a88

            mov R12,RSI
            xor EBP,EBP
.L_4039c0:

            mov RAX,QWORD PTR [RBX+160]
            test RAX,RAX
            je .L_4039f0

            cmp RAX,R12
            mov RDX,R12
            cmovle RDX,RAX
            add QWORD PTR [RBX+152],RDX
            add QWORD PTR [RBX],RDX
            sub RAX,RDX
            sub R12,RDX
            add RBP,RDX
            mov QWORD PTR [RBX+160],RAX
.L_4039f0:

            test R12,R12
            je .L_403a6d

            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_403a1a

            mov RSI,R12
            mov RDI,RBX
            call RAX

            test RAX,RAX
            js .L_403ae0

            add QWORD PTR [RBX],RAX
            add RBP,RAX
            sub R12,RAX
            je .L_403a6d
.L_403a1a:

            lea R14,QWORD PTR [RBX+136]
.L_403a21:

            mov RSI,R14
            mov RDI,RBX
            call QWORD PTR [RBX+40]

            test RAX,RAX
            js .L_403ad0

            jne .L_403ab0

            mov RAX,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RAX+244]
            mov EAX,DWORD PTR [RAX+240]
            sub EAX,1
            cmp ESI,EAX
            je .L_403a5b

            add ESI,1
            mov RDI,RBX
            call .L_403160

            test EAX,EAX
            je .L_403a21
.L_403a5b:

            mov QWORD PTR [RBX+136],0
            mov BYTE PTR [RBX+168],1
.L_403a6d:

            cmp R13,RBP
            jne .L_403b20
.L_403a76:

            pop RBX
.L_403a77:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a88:

            cmp RAX,RSI
            mov RBP,RSI
            mov R12,RSI
            cmovle RBP,RAX
            add QWORD PTR [RDI+120],RBP
            add QWORD PTR [RDI],RBP
            sub RAX,RBP
            sub R12,RBP
            mov QWORD PTR [RDI+128],RAX
            jmp .L_4039c0
          .byte 0x66
          .byte 0x90
.L_403ab0:

            cmp RAX,R12
            mov RDX,QWORD PTR [RBX]
            jge .L_403b40

            add RDX,RAX
            add RBP,RAX
            sub R12,RAX
            mov QWORD PTR [RBX],RDX
            jmp .L_403a21
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403ad0:

            mov QWORD PTR [RBX+136],0
            nop
            nop
            nop
            nop
            nop
.L_403ae0:

            mov BYTE PTR [RBX+170],1
            mov RBP,RAX
.L_403aea:

            xor R8D,R8D
            cmp R13,RBP
            je .L_403a76
.L_403af2:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_4433e0]
            mov RCX,R13
            mov ESI,4294967295
            xor EAX,EAX
            mov RBP,-30
            call .L_432bc0

            jmp .L_403a76
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b20:

            test RBP,RBP
            mov R8D,0
            cmovns R8,RBP
            jmp .L_403af2
          .byte 0x90
.L_403b30:

            mov RBP,-1
            jmp .L_403aea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b40:

            mov RCX,QWORD PTR [RBX+136]
            add RBP,R12
            mov QWORD PTR [RBX+144],RAX
            add RCX,R12
            mov QWORD PTR [RBX+152],RCX
            mov RCX,RAX
            sub RCX,R12
            add R12,RDX
            mov QWORD PTR [RBX+160],RCX
            mov QWORD PTR [RBX],R12
            jmp .L_403a6d
.L_403b73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403b80:

            push RBP
            push RBX
            mov ESI,2536
            mov EDI,1
            sub RSP,8
.L_403b90:

            call calloc@PLT

            test RAX,RAX
            je .L_403c80

            mov RBX,RAX
            movabs RAX,4309561541
            mov QWORD PTR [RBX],RAX
            mov RDI,RBX
            mov RBP,RBX
            call .L_4379f0

            mov QWORD PTR [RBX+160],RAX
            mov EAX,DWORD PTR [RIP+.L_65b788]
            test EAX,EAX
            je .L_403bf0
.L_403bca:

            lea RAX,QWORD PTR [RIP+.L_65b720]
            mov QWORD PTR [RBX+8],RAX
            lea RAX,QWORD PTR [RBX+2496]
            mov QWORD PTR [RBX+2504],RAX
.L_403be3:

            add RSP,8
.L_403be7:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403bf0:

            lea RAX,QWORD PTR [RIP+.L_4032f0]
            mov DWORD PTR [RIP+.L_65b788],1
            mov QWORD PTR [RIP+.L_65b770],RAX
            lea RAX,QWORD PTR [RIP+.L_4032b0]
            mov QWORD PTR [RIP+.L_65b778],RAX
            lea RAX,QWORD PTR [RIP+.L_4032d0]
            mov QWORD PTR [RIP+.L_65b780],RAX
            lea RAX,QWORD PTR [RIP+.L_403210]
            mov QWORD PTR [RIP+.L_65b768],RAX
            lea RAX,QWORD PTR [RIP+.L_4034a0]
            mov QWORD PTR [RIP+.L_65b760],RAX
            lea RAX,QWORD PTR [RIP+.L_404590]
            mov QWORD PTR [RIP+.L_65b750],RAX
            lea RAX,QWORD PTR [RIP+.L_4043f0]
            mov QWORD PTR [RIP+.L_65b758],RAX
            lea RAX,QWORD PTR [RIP+.L_4046a0]
            mov QWORD PTR [RIP+.L_65b728],RAX
            lea RAX,QWORD PTR [RIP+.L_403440]
            mov QWORD PTR [RIP+.L_65b720],RAX
            jmp .L_403bca
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403c80:

            xor EBP,EBP
            jmp .L_403be3
.L_403c87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c90:

            push R12
            lea RCX,QWORD PTR [RIP+.L_443420]
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RDX
            mov ESI,14594245
            mov EDX,32767
            mov RBX,RDI
            call .L_436df0

            test EAX,EAX
            jne .L_403ccf

            mov DWORD PTR [RBX+168],1
            mov QWORD PTR [RBX+176],R12
            mov QWORD PTR [RBX+184],RBP
.L_403ccf:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_403cd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ce0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_443448]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403d10

            mov QWORD PTR [RBX+192],RBP
            xor EAX,EAX
.L_403d10:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403d17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d20:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_443468]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403d50

            mov QWORD PTR [RBX+200],RBP
            xor EAX,EAX
.L_403d50:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403d57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d60:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_443488]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403d90

            mov QWORD PTR [RBX+208],RBP
            xor EAX,EAX
.L_403d90:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403d97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403da0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4434a8]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403dd0

            mov QWORD PTR [RBX+216],RBP
            xor EAX,EAX
.L_403dd0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403dd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403de0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4434c8]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403e10

            mov QWORD PTR [RBX+224],RBP
            xor EAX,EAX
.L_403e10:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403e17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e20:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4434e8]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403e50

            mov QWORD PTR [RBX+232],RBP
            xor EAX,EAX
.L_403e50:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403e57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e60:

            push R13
            push R12
            lea RCX,QWORD PTR [RIP+.L_443510]
            push RBP
            push RBX
            mov R13,RSI
            mov EBX,EDX
            mov ESI,14594245
            mov EDX,1
            sub RSP,8
.L_403e80:

            mov RBP,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_403ec5

            mov R12D,DWORD PTR [RBP+240]
            test R12D,R12D
            je .L_403ed0

            sub R12D,1
.L_403e9d:

            cmp EBX,R12D
            ja .L_403ef7

            mov RAX,QWORD PTR [RBP+256]
            lea RDX,QWORD PTR [RBX+RBX*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov RDX,-1
            mov QWORD PTR [RAX+16],R13
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            xor EAX,EAX
.L_403ec5:

            add RSP,8
.L_403ec9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_403ed0:

            mov ESI,24
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+256],RAX
            je .L_403f14

            mov DWORD PTR [RBP+240],1
            jmp .L_403e9d
.L_403ef7:

            lea RDX,QWORD PTR [RIP+.L_4436ec]
            xor EAX,EAX
            mov ESI,22
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_403ec5
.L_403f14:

            lea RDX,QWORD PTR [RIP+.L_4436e1]
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_403ec5
.L_403f2f:

            nop
.L_403f30:

            xor EDX,EDX
            jmp .L_403e60
.L_403f37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403f40:

            push R12
            lea RCX,QWORD PTR [RIP+.L_443530]
            push RBP
            push RBX
.L_403f4b:

            mov EBP,EDX
            mov RBX,RSI
            mov EDX,1
            mov ESI,14594245
            mov R12,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_404019

            mov EAX,DWORD PTR [R12+240]
            cmp EAX,EBP
            jb .L_40401e

            add EAX,1
            mov RDI,QWORD PTR [R12+256]
            lea RSI,QWORD PTR [RAX+RAX*2]
            mov DWORD PTR [R12+240],EAX
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            je .L_40403b

            mov ECX,DWORD PTR [R12+240]
            mov QWORD PTR [R12+256],RAX
            cmp ECX,1
            lea EDX,DWORD PTR [RCX-1]
            je .L_403ffc

            cmp EBP,EDX
            jae .L_403ffc

            mov RDI,-1
            jmp .L_403fd4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fd0:

            test EDX,EDX
            je .L_403ffc
.L_403fd4:

            lea ESI,DWORD PTR [RDX-1]
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov RCX,RSI
            lea RSI,QWORD PTR [RSI+RSI*2]
            lea RDX,QWORD PTR [RAX+RDX*8]
            mov RSI,QWORD PTR [RAX+RSI*8+16]
            mov QWORD PTR [RDX],RDI
            mov QWORD PTR [RDX+8],RDI
            mov QWORD PTR [RDX+16],RSI
            mov EDX,ECX
            cmp EDX,EBP
            ja .L_403fd0
.L_403ffc:

            lea RDX,QWORD PTR [RBP+RBP*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov RDX,-1
            mov QWORD PTR [RAX+16],RBX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            xor EAX,EAX
.L_404019:

            pop RBX
.L_40401a:

            pop RBP
            pop R12
            ret 
.L_40401e:

            lea RDX,QWORD PTR [RIP+.L_4436ec]
            xor EAX,EAX
            mov ESI,22
            mov RDI,R12
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_404019
.L_40403b:

            lea RDX,QWORD PTR [RIP+.L_4436e1]
            mov ESI,12
            mov RDI,R12
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_404019
.L_404056:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404060:

            mov EDX,DWORD PTR [RDI+240]
            jmp .L_403f40
.L_40406b:

            nop
            nop
            nop
            nop
            nop
.L_404070:

            xor EDX,EDX
            jmp .L_403f40
.L_404077:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404080:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443705]
            mov EDX,32767
            mov ESI,14594245
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_4040b0

            mov RAX,QWORD PTR [RBX+1048]
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040b0:

            mov RAX,-30
            pop RBX
            ret 
.L_4040b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4040c0:

            test RDI,RDI
            je .L_404110

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_404110

            mov RAX,QWORD PTR [RAX+72]
            test RAX,RAX
            je .L_404110

            push RBX
            mov RBX,RDI
            call RAX

            test AL,3
            je .L_4040ff

            mov RAX,QWORD PTR [RBX+2472]
            test RAX,RAX
            je .L_404116

            mov RAX,QWORD PTR [RAX+80]
            test RAX,RAX
            je .L_404116

            mov RDI,RBX
            pop RBX
            jmp RAX
.L_4040ff:

            mov EAX,4294967294
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404110:

            mov EAX,4294967294
            ret 
.L_404116:

            mov EAX,4294967295
            pop RBX
            ret 
.L_40411d:

            nop
            nop
            nop
.L_404120:

            test RDI,RDI
            je .L_404140

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_404140

            mov RAX,QWORD PTR [RAX+72]
            test RAX,RAX
            je .L_404140

            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404140:

            xor EAX,EAX
            ret 
.L_404143:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404150:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_404161:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4042f2

            mov RAX,QWORD PTR [RDI+136]
            mov R15,RSI
            mov R12,RDX
            xor R13D,R13D
            mov R14,RSP
            nop
            nop
            nop
.L_404190:

            test RAX,RAX
            je .L_404280
.L_404199:

            mov RDX,QWORD PTR [RBX+120]
            mov RAX,QWORD PTR [RBX+128]
            cmp RDX,RAX
            jl .L_4042c8

            lea RCX,QWORD PTR [R12+RAX*1]
            cmp RDX,RCX
            jg .L_404230

            cmp RDX,RAX
            jle .L_4041dd

            sub RDX,RAX
            xor ESI,ESI
            mov RDI,R15
            mov RBP,RDX
            add R15,RBP
            add R13,RBP
            call memset@PLT

            add QWORD PTR [RBX+128],RBP
            sub R12,RBP
            je .L_404229
.L_4041dd:

            mov RBP,QWORD PTR [RBX+136]
            mov RSI,QWORD PTR [RBX+112]
            mov RDI,R15
            cmp RBP,R12
            cmova RBP,R12
            mov RDX,RBP
            add R15,RBP
            add R13,RBP
            call memcpy@PLT

            mov RAX,QWORD PTR [RBX+136]
            add QWORD PTR [RBX+112],RBP
            add QWORD PTR [RBX+128],RBP
            add QWORD PTR [RBX+120],RBP
            sub RAX,RBP
            sub R12,RBP
            mov QWORD PTR [RBX+136],RAX
            jne .L_404190
.L_404229:

            mov RAX,R13
            jmp .L_404248
          .byte 0x66
          .byte 0x90
.L_404230:

            mov RDX,R12
            xor ESI,ESI
            mov RDI,R15
            call memset@PLT

            add QWORD PTR [RBX+128],R12
            lea RAX,QWORD PTR [R12+R13*1]
.L_404248:

            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
.L_40425a:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4042f9

            add RSP,24
.L_404272:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404280:

            mov RAX,QWORD PTR [RBX+112]
            lea RDX,QWORD PTR [RBX+136]
            lea RCX,QWORD PTR [RBX+120]
            mov BYTE PTR [RBX+144],1
            mov QWORD PTR [RBX+152],R12
            mov RSI,R14
            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_432fe0

            mov RDX,QWORD PTR [RSP]
            cmp EAX,1
            mov QWORD PTR [RBX+112],RDX
            je .L_4042ea

            test EAX,EAX
            jns .L_404199

            cdqe 
            jmp .L_40425a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4042c8:

            lea RDX,QWORD PTR [RIP+.L_443550]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_432bc0

            mov RAX,-10
            jmp .L_40425a
.L_4042ea:

            mov RAX,R13
            jmp .L_40425a
.L_4042f2:

            xor EAX,EAX
            jmp .L_404248
.L_4042f9:

            call __stack_chk_fail@PLT
.L_4042fe:

            nop
            nop
.L_404300:

            mov QWORD PTR [RDI+128],0
            mov QWORD PTR [RDI+136],0
            mov BYTE PTR [RDI+144],0
            mov QWORD PTR [RDI+152],0
            mov QWORD PTR [RDI+112],0
            mov QWORD PTR [RDI+120],0
            ret 
.L_404339:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404340:

            push R13
            push R12
            lea RCX,QWORD PTR [RIP+.L_443722]
            push RBP
            push RBX
            mov EDX,4
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,40
.L_40435e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_40439f

            mov RAX,QWORD PTR [RBX+2472]
            mov RAX,QWORD PTR [RAX+48]
            test RAX,RAX
            je .L_4043c0

            mov RDI,RBX
            call RAX
.L_40438d:

            cmp EAX,1
            mov EDX,0
            mov DWORD PTR [RBX+4],2
            cmove EAX,EDX
.L_40439f:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4043e7

            add RSP,40
.L_4043b3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4043c0:

            lea R13,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+8]
            mov RBP,RSP
            nop
            nop
            nop
.L_4043d0:

            mov RCX,R13
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_432fe0

            test EAX,EAX
            je .L_4043d0

            jmp .L_40438d
.L_4043e7:

            call __stack_chk_fail@PLT
.L_4043ec:

            nop
            nop
            nop
            nop
.L_4043f0:

            push R12
            lea RCX,QWORD PTR [RIP+.L_443739]
            push RBP
            push RBX
.L_4043fb:

            mov R12,RSI
            mov EDX,6
            mov ESI,14594245
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            mov EBP,EAX
            je .L_4044c8

            mov RDI,R12
            xor EBP,EBP
            call .L_4378c0

            mov RDI,RBX
            call .L_432ba0

            cmp DWORD PTR [RBX+4],4
            je .L_404548
.L_404437:

            mov RAX,QWORD PTR [RBX+1032]
            mov RSI,R12
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX]
            add DWORD PTR [RBX+48],1
            mov QWORD PTR [RBX+1048],RAX
            mov RAX,QWORD PTR [RBX+2472]
            call QWORD PTR [RAX+32]

            cmp EAX,-20
            je .L_404538

            jle .L_4044d0

            test EAX,EAX
            je .L_404538

            cmp EAX,1
            jne .L_4044dc

            mov EAX,DWORD PTR [RBX+244]
            sub DWORD PTR [RBX+48],1
            mov EBP,1
            mov DWORD PTR [RBX+4],16
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+1056],EAX
.L_4044c8:

            mov EAX,EBP
            pop RBX
.L_4044cb:

            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4044d0:

            cmp EAX,-30
            jne .L_4044dc

            mov DWORD PTR [RBX+4],32768
.L_4044dc:

            mov EDX,DWORD PTR [RBX+244]
            cmp EBP,EAX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+1056],EDX
            jg .L_404529

            cmp EAX,1
            jne .L_4044c8
.L_404529:

            mov EBP,EAX
            mov EAX,EBP
            pop RBX
.L_40452e:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404538:

            mov DWORD PTR [RBX+4],4
            jmp .L_4044dc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404548:

            mov RDI,RBX
            call .L_404340

            cmp EAX,1
            mov EBP,EAX
            je .L_404571

            cmp EAX,-30
            jne .L_404437
.L_404560:

            mov DWORD PTR [RBX+4],32768
            mov EBP,4294967266
            jmp .L_4044c8
.L_404571:

            lea RDX,QWORD PTR [RIP+.L_443752]
            mov ESI,5
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0

            jmp .L_404560
.L_404589:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404590:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov QWORD PTR [RSI],0
            mov RSI,QWORD PTR [RDI+160]
            call .L_4043f0

            mov RDX,QWORD PTR [RBX+160]
            mov QWORD PTR [RBP],RDX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4045c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045d0:

            push R12
            lea RCX,QWORD PTR [RIP+.L_443769]
            push RBP
            push RBX
            mov RBP,RSI
            mov R12D,EDX
            mov ESI,14594245
            mov EDX,4
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_404620

            mov RAX,QWORD PTR [RBX+2472]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_40462c

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404620:

            mov RAX,-30
.L_404627:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40462c:

            lea RDX,QWORD PTR [RIP+.L_443578]
            mov ESI,22
            mov RDI,RBX
            call .L_432bc0

            mov RAX,-30
            jmp .L_404627
.L_404649:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404650:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+1032]
            call .L_4033d0

            mov RDI,QWORD PTR [RBP+1032]
            test RDI,RDI
            je .L_404690

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404678:

            mov RBX,QWORD PTR [RDI+16]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+1032],RBX
            mov RDI,RBX
            jne .L_404678
.L_404690:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_404697:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4046a0:

            push R14
            push R13
            push R12
            xor R12D,R12D
            test RDI,RDI
            push RBP
            push RBX
.L_4046ae:

            je .L_4047ec

            lea RCX,QWORD PTR [RIP+.L_443781]
            mov EDX,65535
            mov ESI,14594245
            mov RBP,RDI
            call .L_436df0

            cmp EAX,-30
            mov R12D,EAX
            je .L_4047ec

            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,32
            je .L_4046ec

            cmp EAX,32768
            jne .L_404800
.L_4046ec:

            xor R12D,R12D
.L_4046ef:

            mov RAX,QWORD PTR [RBP+2488]
            test RAX,RAX
            je .L_404703

            mov RDI,RBP
            call RAX

            mov R12D,EAX
.L_404703:

            lea RBX,QWORD PTR [RBP+1064]
            lea R13,QWORD PTR [RBP+2472]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404718:

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBP+2472],RBX
            test RAX,RAX
            je .L_40472d

            mov RDI,RBP
            call RAX
.L_40472d:

            add RBX,88
            cmp RBX,R13
            jne .L_404718

            lea RBX,QWORD PTR [RBP+264]
            lea R13,QWORD PTR [RBP+1032]
            mov RDI,RBP
            call .L_404650

            nop
            nop
            nop
            nop
.L_404750:

            mov RAX,QWORD PTR [RBX+40]
            test RAX,RAX
            je .L_404765

            mov RDI,RBX
            call RAX

            cmp R12D,EAX
            cmovg R12D,EAX
.L_404765:

            add RBX,48
            cmp R13,RBX
            jne .L_404750

            mov RBX,QWORD PTR [RBP+2496]
            test RBX,RBX
            je .L_4047b4

            nop
            nop
            nop
            nop
            nop
            nop
.L_404780:

            mov R13,QWORD PTR [RBX]
            mov R14,QWORD PTR [RBX+8]
            mov RDI,R13
            call strlen@PLT

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R13
            call memset@PLT

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            mov RBX,R14
            call free@PLT

            test R14,R14
            jne .L_404780
.L_4047b4:

            lea RDI,QWORD PTR [RBP+64]
            call .L_42e240

            mov RDI,QWORD PTR [RBP+160]
            call .L_4379a0

            mov RDI,RBP
            mov DWORD PTR [RBP],0
            call .L_4329a0

            mov RDI,QWORD PTR [RBP+256]
            call free@PLT

            mov RDI,RBP
            call free@PLT
.L_4047ec:

            pop RBX
.L_4047ed:

            mov EAX,R12D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404800:

            mov RDI,RBP
            call .L_432ec0

            mov R12D,EAX
            jmp .L_4046ef
.L_404810:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RCX
            lea RCX,QWORD PTR [RIP+.L_4435b8]
            mov RBP,RDX
            mov ESI,14594245
            sub RSP,8
.L_404836:

            mov EDX,1
            mov R14,R8
            mov R13,R9
            call .L_436df0

            cmp EAX,-30
            je .L_40488c

            lea RDX,QWORD PTR [R15+1080]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_404858:

            mov RCX,QWORD PTR [RDX]
            cmp RCX,RBX
            je .L_4048a0

            test RCX,RCX
            je .L_4048b8

            add EAX,1
            add RDX,88
            cmp EAX,16
            jne .L_404858

            lea RDX,QWORD PTR [RIP+.L_4435d8]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
.L_40488c:

            add RSP,8
.L_404890:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4048a0:

            add RSP,8
            mov EAX,4294967276
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4048b8:

            cdqe 
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RDX*2]
            mov RDX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [R15+RAX*8]
            mov QWORD PTR [RAX+1104],RDX
            mov RDX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX+1080],RBX
            mov QWORD PTR [RAX+1088],R14
            mov QWORD PTR [RAX+1096],R13
            mov QWORD PTR [RAX+1064],R12
            mov QWORD PTR [RAX+1112],RDX
            mov RDX,QWORD PTR [RSP+80]
            mov QWORD PTR [RAX+1072],RBP
            mov QWORD PTR [RAX+1120],RDX
            mov RDX,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+1128],RDX
            mov RDX,QWORD PTR [RSP+96]
            mov QWORD PTR [RAX+1136],RDX
            mov RDX,QWORD PTR [RSP+104]
            mov QWORD PTR [RAX+1144],RDX
            add RSP,8
.L_404935:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_404942:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404950:

            lea RDX,QWORD PTR [RDI+280]
            xor EAX,EAX
            jmp .L_40496c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404960:

            add EAX,1
            add RDX,48
            cmp EAX,16
            je .L_4049a0
.L_40496c:

            cmp QWORD PTR [RDX],0
            jne .L_404960

            cdqe 
            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,4
            lea RAX,QWORD PTR [RDI+RAX*1+264]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            mov QWORD PTR [RSI],RAX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4049a0:

            lea RDX,QWORD PTR [RIP+.L_443608]
            sub RSP,8

            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov EAX,4294967266
            add RSP,8
            ret 
.L_4049c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4049d0:

            mov RDI,QWORD PTR [RDI+1032]
            cmp BYTE PTR [RDI+170],0
            je .L_4049f0

            test RDX,RDX
            je .L_4049ec

            mov QWORD PTR [RDX],-30
.L_4049ec:

            xor EAX,EAX
            ret 
          .byte 0x90
.L_4049f0:

            jmp .L_403620
.L_4049f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a00:

            cmp BYTE PTR [RDI+170],0
            jne .L_404a10

            jmp .L_403620
          .byte 0x66
          .byte 0x90
.L_404a10:

            test RDX,RDX
            je .L_404a1c

            mov QWORD PTR [RDX],-30
.L_404a1c:

            xor EAX,EAX
            ret 
.L_404a1f:

            nop
.L_404a20:

            test RSI,RSI
            js .L_404a40

            jne .L_404a30
.L_404a27:

            mov RAX,RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a30:

            mov RDI,QWORD PTR [RDI+1032]
            jmp .L_403990
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404a40:

            mov RSI,-30
            jmp .L_404a27
.L_404a49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a50:

            test RSI,RSI
            js .L_404a68

            jne .L_404a60
.L_404a57:

            mov RAX,RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a60:

            jmp .L_403990
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404a68:

            mov RSI,-30
            jmp .L_404a57
.L_404a71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_404a8e:

            mov EBX,DWORD PTR [RDI+168]
            and EBX,16776960
            jne .L_404ac7

            cmp QWORD PTR [RDI+56],0
            mov R12,RDI
            je .L_404dad

            cmp EDX,1
            mov R14,RSI
            mov R13,QWORD PTR [RDI+24]
            je .L_404c90

            cmp EDX,2
            je .L_404ae0

            test EDX,EDX
            je .L_404c93
.L_404ac7:

            mov RAX,-30
.L_404ace:

            add RSP,8
.L_404ad2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404ae0:

            mov RAX,QWORD PTR [R13+256]
            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            js .L_404b4c

            mov RSI,QWORD PTR [RAX+8]
            test RSI,RSI
            js .L_404b4c

            mov EDX,DWORD PTR [R13+240]
            cmp EDX,1
            jbe .L_404b4c

            lea EDI,DWORD PTR [RDX-2]
            add RAX,24
            mov EDX,1
            add RDI,2
            jmp .L_404b2d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b20:

            add RDX,1
            add RAX,24
            cmp RDX,RDI
            je .L_404b4c
.L_404b2d:

            add RCX,RSI
            mov RSI,QWORD PTR [RAX+8]
            mov EBX,EDX
            mov QWORD PTR [RAX],RCX
            test RSI,RSI
            jns .L_404b20

            jmp .L_404b4c
.L_404b40:

            mov EAX,EDX
            mov EBX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov QWORD PTR [RCX+RAX*8],RDI
.L_404b4c:

            mov ESI,EBX
            mov RDI,R12
            call .L_403160

            cdqe 
            test RAX,RAX
            jne .L_404ace

            xor ESI,ESI
            mov EDX,2
            mov RDI,R12
            call .L_403310

            test RAX,RAX
            js .L_404ace

            mov RCX,QWORD PTR [R13+256]
            mov EDX,EBX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RCX+RDX*8]
            mov RBP,QWORD PTR [RDX]
            mov QWORD PTR [RDX+8],RAX
            lea EDX,DWORD PTR [RBX+1]
            cmp EDX,DWORD PTR [R13+240]
            lea RDI,QWORD PTR [RBP+RAX*1]
            jb .L_404b40

            lea R15,QWORD PTR [R14+RDI*1]
            cmp RBP,R15
            jle .L_404bf9

            add RAX,R14
            test EBX,EBX
            lea R15,QWORD PTR [RDI+RAX*1]
            je .L_404bf9

            lea EDX,DWORD PTR [RBX-1]
            mov RDI,RDX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RCX+RDX*8]
            jmp .L_404be2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404bd0:

            add RAX,RCX
            sub RDX,24
            test EBX,EBX
            je .L_404da4

            sub EDI,1
.L_404be2:

            mov RBP,QWORD PTR [RDX]
            mov RCX,QWORD PTR [RDX+8]
            mov EBX,EDI
            lea RSI,QWORD PTR [RBP+RCX*1]
            lea R15,QWORD PTR [RSI+RAX*1]
            cmp R15,RBP
            jl .L_404bd0
.L_404bf9:

            mov ESI,EBX
            mov RDI,R12
            call .L_403160

            cdqe 
            test RAX,RAX
            jne .L_404ace

            mov RSI,R15
            xor EDX,EDX
            mov RDI,R12
            sub RSI,RBP
            call .L_403310

            test RAX,RAX
            js .L_404ace

            mov EBX,EBX
            lea RBP,QWORD PTR [RBX+RBX*2]
            shl RBP,3
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c38:

            mov RDX,QWORD PTR [R13+256]
            add RAX,QWORD PTR [RDX+RBP*1]
            js .L_404ace

            mov RDX,QWORD PTR [R12+104]
            mov QWORD PTR [R12+160],0
            mov QWORD PTR [R12+128],0
            mov QWORD PTR [R12],RAX
            mov BYTE PTR [R12+168],0
            mov QWORD PTR [R12+120],RDX
            add RSP,8
.L_404c7c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404c90:

            add R14,QWORD PTR [RDI]
.L_404c93:

            mov RAX,QWORD PTR [R13+256]
            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            js .L_404d1e

            mov RDX,QWORD PTR [RAX+8]
            test RDX,RDX
            js .L_404d1e

            add RDX,RCX
            lea RCX,QWORD PTR [RDX-1]
            cmp R14,RCX
            jl .L_404d1e

            mov ECX,DWORD PTR [R13+240]
            cmp ECX,1
            jbe .L_404d1e

            lea EDI,DWORD PTR [RCX-2]
            add RAX,24
            mov ECX,1
            add RDI,2
            jmp .L_404cf1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404cd8:

            add RDX,RSI
            lea RSI,QWORD PTR [RDX-1]
            cmp RSI,R14
            jg .L_404d1e

            add RCX,1
            add RAX,24
            cmp RDI,RCX
            je .L_404d1e
.L_404cf1:

            mov RSI,QWORD PTR [RAX+8]
            mov EBX,ECX
            mov QWORD PTR [RAX],RDX
            test RSI,RSI
            jns .L_404cd8

            jmp .L_404d1e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404d08:

            add EBX,1
            cmp EBX,DWORD PTR [R13+240]
            jae .L_404d74

            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov QWORD PTR [RCX+RAX*8],RDX
.L_404d1e:

            mov ESI,EBX
            mov RDI,R12
            call .L_403160

            cdqe 
            test RAX,RAX
            jne .L_404ace

            xor ESI,ESI
            mov EDX,2
            mov RDI,R12
            call .L_403310

            test RAX,RAX
            js .L_404ace

            mov EDX,EBX
            mov RCX,QWORD PTR [R13+256]
            lea RBP,QWORD PTR [RDX+RDX*2]
            shl RBP,3
            lea RDX,QWORD PTR [RCX+RBP*1]
            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RDX+8],RAX
            lea RDX,QWORD PTR [RSI+RAX*1]
            lea RDI,QWORD PTR [RDX-1]
            cmp RDI,R14
            jle .L_404d08
.L_404d74:

            sub R14,RSI
            cmp RAX,R14
            mov RSI,R14
            jl .L_404ac7

            test R14,R14
            js .L_404ac7

            xor EDX,EDX
            mov RDI,R12
            call .L_403310

            test RAX,RAX
            jns .L_404c38

            jmp .L_404ace
.L_404da4:

            lea R15,QWORD PTR [RAX+RSI*1]
            jmp .L_404bf9
.L_404dad:

            mov RAX,-25
            jmp .L_404ace
.L_404db9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404dc0:

            mov RDI,QWORD PTR [RDI+1032]
            jmp .L_404a80
.L_404dcc:

            nop
            nop
            nop
            nop
.L_404dd0:

            push R15
            push R14
            lea RCX,QWORD PTR [RIP+.L_443793]
            push R13
            push R12
            mov EDX,1
            push RBP
            push RBX
            mov ESI,14594245
            mov R15,RDI
            sub RSP,40
.L_404df2:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_405043

            mov RDI,R15
            call .L_432ba0

            cmp QWORD PTR [R15+200],0
            je .L_405199

            mov RAX,QWORD PTR [R15+192]
            test RAX,RAX
            je .L_404ec8

            mov RDX,QWORD PTR [R15+256]
            mov RDI,R15
            mov RSI,QWORD PTR [RDX+16]
            call RAX

            test EAX,EAX
            mov EBP,EAX
            je .L_404ec8

            mov RDX,QWORD PTR [R15+224]
            test RDX,RDX
            je .L_404e9d

            mov ESI,DWORD PTR [R15+240]
            test ESI,ESI
            je .L_404e9d

            xor EBX,EBX
            jmp .L_404e77
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e70:

            mov RDX,QWORD PTR [R15+224]
.L_404e77:

            mov EAX,EBX
            mov RCX,QWORD PTR [R15+256]
            mov RDI,R15
            lea RAX,QWORD PTR [RAX+RAX*2]
            add EBX,1
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov RSI,QWORD PTR [RAX+16]
            call RDX

            cmp DWORD PTR [R15+240],EBX
            ja .L_404e70
.L_404e9d:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_4051e8

            add RSP,40
.L_404eb7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ec8:

            mov ESI,176
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_405043

            mov RDX,QWORD PTR [R15+256]
            mov RDI,QWORD PTR [R15+1032]
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],R15
            mov RCX,QWORD PTR [RDX+16]
            test RDI,RDI
            mov DWORD PTR [RAX+96],0
            mov QWORD PTR [RAX+80],RCX
            lea RCX,QWORD PTR [RIP+.L_403130]
            mov QWORD PTR [RAX+32],RCX
            lea RCX,QWORD PTR [RIP+.L_403110]
            mov QWORD PTR [RAX+40],RCX
            lea RCX,QWORD PTR [RIP+.L_403520]
            mov QWORD PTR [RAX+48],RCX
            lea RCX,QWORD PTR [RIP+.L_403310]
            mov QWORD PTR [RAX+56],RCX
            lea RCX,QWORD PTR [RIP+.L_403360]
            mov QWORD PTR [RAX+64],RCX
            lea RCX,QWORD PTR [RIP+.L_403160]
            mov QWORD PTR [RAX+72],RCX
            lea RCX,QWORD PTR [RIP+.L_4437a5]
            mov QWORD PTR [RAX+88],RCX
            mov QWORD PTR [RDX],0
            mov RCX,RDI
            je .L_404f7c

            mov EDX,DWORD PTR [R15+1040]
            test EDX,EDX
            jne .L_405053
.L_404f7c:

            mov QWORD PTR [R15+1032],RAX
            lea RAX,QWORD PTR [R15+264]
            lea R12,QWORD PTR [R15+1032]
            mov R14D,25
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
.L_404fa0:

            mov RBX,QWORD PTR [RSP+8]
            xor R13D,R13D
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_404fb0:

            mov RAX,QWORD PTR [RBX+16]
            test RAX,RAX
            je .L_404fce

            mov RSI,QWORD PTR [R15+1032]
            mov RDI,RBX
            call RAX

            cmp EAX,EBP
            jle .L_404fce

            mov R13,RBX
            mov EBP,EAX
.L_404fce:

            add RBX,48
            cmp RBX,R12
            jne .L_404fb0

            test R13,R13
            je .L_405110

            mov ESI,176
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_40503b

            mov RDX,QWORD PTR [R15+1032]
            mov QWORD PTR [RAX+8],R13
            mov RDI,RAX
            mov QWORD PTR [RAX+24],R15
            mov QWORD PTR [R15+1032],RAX
            mov QWORD PTR [RAX+16],RDX
            call QWORD PTR [R13+24]

            test EAX,EAX
            jne .L_405129

            sub R14D,1
            jne .L_404fa0

            lea RDX,QWORD PTR [RIP+.L_443670]
            mov ESI,84
            mov RDI,R15
            call .L_432bc0
.L_40503b:

            mov DWORD PTR [R15+4],32768
.L_405043:

            mov EBP,4294967266
            jmp .L_404e9d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405050:

            mov RCX,RDX
.L_405053:

            mov RDX,QWORD PTR [RCX+16]
            test RDX,RDX
            jne .L_405050

            mov QWORD PTR [RCX+16],RAX
.L_405060:

            cmp QWORD PTR [R15+2472],0
            je .L_405080
.L_40506a:

            mov DWORD PTR [R15+4],2
            xor ESI,ESI
            xor EBP,EBP
            call .L_403160

            jmp .L_404e9d
.L_405080:

            lea RAX,QWORD PTR [R15+1064]
            mov R12,-1
            xor EBX,EBX
            mov EBP,R12D
            mov QWORD PTR [R15+2472],RAX
            jmp .L_4050c4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4050a0:

            cmp R13D,EBP
            mov RAX,QWORD PTR [R15+2472]
            jg .L_405108
.L_4050ac:

            test R12D,R12D
            js .L_405108
.L_4050b1:

            add EBX,1
            add RAX,88
            cmp EBX,16
            mov QWORD PTR [R15+2472],RAX
            je .L_405136
.L_4050c4:

            mov RDX,QWORD PTR [RAX+16]
            test RDX,RDX
            je .L_4050b1

            mov ESI,EBP
            mov RDI,R15
            call RDX

            cmp EAX,-30
            mov R13D,EAX
            je .L_4051d7

            mov RDI,QWORD PTR [R15+1032]
            cmp QWORD PTR [RDI],0
            je .L_4050a0

            xor EDX,EDX
            xor ESI,ESI
            call .L_404a80

            cmp R13D,EBP
            mov RAX,QWORD PTR [R15+2472]
            jle .L_4050ac

            nop
            nop
            nop
            nop
            nop
            nop
.L_405108:

            movsxd R12,EBX
            mov EBP,R13D
            jmp .L_4050b1
.L_405110:

            mov RDI,QWORD PTR [R15+1032]
            cmp BYTE PTR [RDI+170],0
            je .L_405167

            mov QWORD PTR [RSP+16],-30
.L_405129:

            mov RDI,R15
            call .L_404650

            jmp .L_40503b
.L_405136:

            cmp R12D,-1
            je .L_4051ed

            test EBP,EBP
            jle .L_4051c1

            lea RAX,QWORD PTR [R12+R12*4]
            mov RDI,QWORD PTR [R15+1032]
            lea RAX,QWORD PTR [R12+RAX*2]
            lea RAX,QWORD PTR [R15+RAX*8+1064]
            mov QWORD PTR [R15+2472],RAX
            jmp .L_40506a
.L_405167:

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,1
            call .L_403620

            cmp QWORD PTR [RSP+16],0
            js .L_405129

            mov RDI,QWORD PTR [R15+1032]
            mov RAX,QWORD PTR [RDI+88]
            mov QWORD PTR [R15+40],RAX
            mov EAX,DWORD PTR [RDI+96]
            mov DWORD PTR [R15+32],EAX
            jmp .L_405060
.L_405199:

            lea RDX,QWORD PTR [RIP+.L_443638]
            mov ESI,22
            mov RDI,R15
            xor EAX,EAX
            mov EBP,4294967266
            call .L_432bc0

            mov DWORD PTR [R15+4],32768
            jmp .L_404e9d
.L_4051c1:

            lea RDX,QWORD PTR [RIP+.L_4437c0]
            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_432bc0
.L_4051d7:

            mov RDI,QWORD PTR [R15+1032]
            call .L_4033d0

            jmp .L_40503b
.L_4051e8:

            call __stack_chk_fail@PLT
.L_4051ed:

            lea RDX,QWORD PTR [RIP+.L_4437aa]
            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_432bc0

            jmp .L_4051d7
.L_405205:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405210:

            push R14
            push R13
            mov R13,RCX
            push R12
            lea RCX,QWORD PTR [RIP+.L_443448]
            push RBP
            push RBX
.L_405222:

            mov RBP,RSI
            mov R14,RDX
            mov ESI,14594245
            mov EDX,1
            mov RBX,RDI
            mov R12,R8
            call .L_436df0

            cmp EAX,-30
            je .L_405249

            mov QWORD PTR [RBX+192],R14
.L_405249:

            lea RCX,QWORD PTR [RIP+.L_443468]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_436df0

            cmp EAX,-30
            je .L_40526e

            mov QWORD PTR [RBX+200],R13
.L_40526e:

            lea RCX,QWORD PTR [RIP+.L_4434c8]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_436df0

            cmp EAX,-30
            je .L_405293

            mov QWORD PTR [RBX+224],R12
.L_405293:

            mov RDI,RBX
            mov RSI,RBP
            xor EDX,EDX
            call .L_403e60

            mov RDI,RBX
            pop RBX
.L_4052a4:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_404dd0
.L_4052b0:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            xor EDX,EDX
            push RBX
.L_4052bd:

            mov R13,RCX
            mov RBX,RDI
            mov R12,R8
            mov RBP,R9
            call .L_403e60

            lea RCX,QWORD PTR [RIP+.L_443448]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_436df0

            cmp EAX,-30
            je .L_4052f3

            mov QWORD PTR [RBX+192],R14
.L_4052f3:

            lea RCX,QWORD PTR [RIP+.L_443468]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_436df0

            cmp EAX,-30
            je .L_405318

            mov QWORD PTR [RBX+200],R13
.L_405318:

            lea RCX,QWORD PTR [RIP+.L_443488]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_436df0

            cmp EAX,-30
            je .L_40533d

            mov QWORD PTR [RBX+208],R12
.L_40533d:

            lea RCX,QWORD PTR [RIP+.L_4434c8]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_436df0

            cmp EAX,-30
            je .L_405362

            mov QWORD PTR [RBX+224],RBP
.L_405362:

            mov RDI,RBX
            pop RBX
.L_405366:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_404dd0
.L_405372:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405380:

            push RBX

            lea RCX,QWORD PTR [RIP+.L_4437e0]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_405409

            mov RDI,RBX
            call .L_405870

            mov RDI,RBX
            call .L_405f70

            mov RDI,RBX
            call .L_4067a0

            mov RDI,RBX
            call .L_409610

            mov RDI,RBX
            call .L_409550

            mov RDI,RBX
            call .L_409490

            mov RDI,RBX
            call .L_408a30

            mov RDI,RBX
            call .L_4079b0

            mov RDI,RBX
            call .L_406920

            mov RDI,RBX
            call .L_406c50

            mov RDI,RBX
            call .L_4060f0

            mov RDI,RBX
            call .L_406ad0

            mov RDI,RBX
            call .L_432ba0

            xor EAX,EAX
.L_405409:

            pop RBX

            ret 
.L_40540b:

            nop
            nop
            nop
            nop
            nop
.L_405410:

            jmp .L_405380
.L_405415:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405420:

            xor EAX,EAX
            ret 
.L_405423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405430:

            lea RAX,QWORD PTR [RIP+.L_447c6c]
            push R12
            push RBP
            push RBX
.L_40543b:

            mov ESI,1
            mov DWORD PTR [RDI+96],2
            mov QWORD PTR [RDI+88],RAX
            mov RBX,RDI
            mov EDI,104
            call calloc@PLT

            mov EDI,65536
            mov RBP,RAX
            call malloc@PLT

            test RBP,RBP
            mov R12,RAX
            je .L_4054a7

            test RAX,RAX
            je .L_4054a7

            mov QWORD PTR [RBP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_4055f0]
            mov QWORD PTR [RBX+80],RBP
            mov QWORD PTR [RBP+88],65536
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4054e0]
            mov QWORD PTR [RBX+64],RAX
            xor EAX,EAX
.L_4054a2:

            pop RBX
.L_4054a3:

            pop RBP
            pop R12
            ret 
.L_4054a7:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443880]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov RDI,R12
            call free@PLT

            mov RDI,RBP
            call free@PLT

            mov EAX,4294967266
            jmp .L_4054a2
.L_4054d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4054e0:

            push R12
            push RBP
            xor EBP,EBP
            push RBX
            mov RBX,QWORD PTR [RDI+80]
            cmp BYTE PTR [RBX+96],0
            jne .L_405510
.L_4054f0:

            mov RDI,QWORD PTR [RBX+80]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405510:

            mov R12,RDI
            mov RDI,RBX
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            mov EBP,EAX
            je .L_4054f0

            mov RDI,QWORD PTR [R12+24]
            lea RDX,QWORD PTR [RIP+.L_4438b0]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBP,4294967266
            call .L_432bc0

            jmp .L_4054f0
.L_405540:

            sub RSP,24
.L_405544:

            mov RDI,RSI
            mov ESI,14
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_405577

            cmp WORD PTR [RDX],23106
            je .L_405590
.L_405575:

            xor EAX,EAX
.L_405577:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4055df

            add RSP,24
.L_40558b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405590:

            cmp BYTE PTR [RDX+2],104
            jne .L_405575

            movzx ECX,BYTE PTR [RDX+3]
            sub ECX,49
            cmp CL,8
            ja .L_405577

            cmp DWORD PTR [RDX+4],643383601
            lea RCX,QWORD PTR [RDX+4]
            je .L_4055d0
.L_4055af:

            cmp DWORD PTR [RDX+4],944075287
            jne .L_405577

            cmp WORD PTR [RCX+4],36944
            mov EDX,77
            cmove EAX,EDX
            jmp .L_405577
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4055d0:

            cmp WORD PTR [RCX+4],22867
            jne .L_4055af

            mov EAX,77
            jmp .L_405577
.L_4055df:

            call __stack_chk_fail@PLT
.L_4055e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4055f0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_4055ff:

            mov RBX,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp BYTE PTR [RBX+97],0
            jne .L_405750

            mov RAX,QWORD PTR [RBX+80]
            mov RBP,RDI
            mov R13,RSP
            mov QWORD PTR [RBX+24],RAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+32],EAX
.L_405632:

            cmp BYTE PTR [RBX+96],0
            mov RDI,QWORD PTR [RBP+16]
            jne .L_40567d

            mov RSI,RDI
            mov RDI,QWORD PTR [RBP+8]
            call .L_405540

            test EAX,EAX
            je .L_405780

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBX
            call BZ2_bzDecompressInit@PLT

            cdqe 
            cmp RAX,-3
            mov QWORD PTR [RSP],RAX
            je .L_405760
.L_40566c:

            test RAX,RAX
            jne .L_4057c8

            mov BYTE PTR [RBX+96],1
            mov RDI,QWORD PTR [RBP+16]
.L_40567d:

            mov RDX,R13
            mov ESI,1
            call .L_404a00

            test RAX,RAX
            mov R12,RAX
            je .L_4057a0

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            mov DWORD PTR [RBX+8],EAX
            je .L_405780

            mov RDI,RBX
            call BZ2_bzDecompress@PLT

            mov RSI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBP+16]
            cdqe 
            mov QWORD PTR [RSP],RAX
            sub RSI,R12
            call .L_404a50

            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            je .L_40572c

            cmp RAX,4
            je .L_405718

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443863]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
.L_4056f3:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_405869

            add RSP,16
.L_40570b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405718:

            mov RDI,RBX
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            jne .L_405821

            mov BYTE PTR [RBX+96],0
.L_40572c:

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            jne .L_405632

            mov RAX,QWORD PTR [RBX+80]
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RBX+24]
            sub RAX,QWORD PTR [RBX+80]
            jmp .L_4056f3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405750:

            mov QWORD PTR [RSI],0
            jmp .L_4056f3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405760:

            mov EDX,1
            xor ESI,ESI
            mov RDI,RBX
            call BZ2_bzDecompressInit@PLT

            cdqe 
            mov QWORD PTR [RSP],RAX
            jmp .L_40566c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405780:

            mov RAX,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+97],1
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RBX+24]
            sub RAX,QWORD PTR [RBX+80]
            jmp .L_4056f3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4057a0:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_44384d]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
            jmp .L_4056f3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4057c8:

            cmp RAX,-3
            je .L_405854

            cmp RAX,-2
            mov ESI,4294967295
            je .L_405844

            cmp RAX,-9
            lea R8,QWORD PTR [RIP+.L_44382a]
            lea RCX,QWORD PTR [RIP+.L_443de5]
            lea RAX,QWORD PTR [RIP+.L_443a67]
            mov EDX,0
            cmovne R8,RDX
            cmovne RCX,RAX
.L_405803:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_4438d0]
            xor EAX,EAX
            call .L_432bc0

            mov RAX,-30
            jmp .L_4056f3
.L_405821:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_4438b0]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
            jmp .L_4056f3
.L_405844:

            lea R8,QWORD PTR [RIP+.L_443812]
            lea RCX,QWORD PTR [RIP+.L_443de5]
            jmp .L_405803
.L_405854:

            mov ESI,12
            lea R8,QWORD PTR [RIP+.L_44383f]
            lea RCX,QWORD PTR [RIP+.L_443de5]
            jmp .L_405803
.L_405869:

            call __stack_chk_fail@PLT
.L_40586e:

            nop
            nop
.L_405870:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443900]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_405889:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_405910

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_405910

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_447c6c]
            lea RDI,QWORD PTR [RIP+.L_405430]
            lea RBX,QWORD PTR [RIP+.L_405420]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_405540]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],RBX
.L_4058f1:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_405917

            add RSP,16
.L_405905:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405910:

            mov EAX,4294967266
            jmp .L_4058f1
.L_405917:

            call __stack_chk_fail@PLT
.L_40591c:

            nop
            nop
            nop
            nop
.L_405920:

            jmp .L_405870
.L_405925:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405930:

            mov QWORD PTR [RDI],0
            xor EAX,EAX
            ret 
.L_40593a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405940:

            push RBX
            mov RBX,QWORD PTR [RDI+80]
            mov RDI,QWORD PTR [RBX+48]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_40595a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405960:

            sub RSP,24
.L_405964:

            mov RDI,RSI
            mov ESI,3
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_405993

            cmp BYTE PTR [RDX],31
            je .L_4059b0
.L_405993:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4059c6

            add RSP,24
.L_4059a7:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4059b0:

            cmp BYTE PTR [RDX+1],157
            jne .L_405993

            movzx EAX,BYTE PTR [RDX+2]
            and EAX,96
            cmp AL,1
            sbb EAX,EAX
            and EAX,18
            jmp .L_405993
.L_4059c6:

            call __stack_chk_fail@PLT
.L_4059cb:

            nop
            nop
            nop
            nop
            nop
.L_4059d0:

            push R13
            push R12
            push RBP
            push RBX
            movsxd RBP,EDX
            mov RBX,RSI
            sub RSP,24
.L_4059e0:

            mov ECX,DWORD PTR [RSI+28]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp EBP,ECX
            jle .L_405a93

            mov R12,RDI
            mov RDX,QWORD PTR [RSI+8]
            mov R13,RSP
            jmp .L_405a3e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405a10:

            mov RAX,QWORD PTR [RBX]
.L_405a13:

            lea RSI,QWORD PTR [RAX+1]
            sub RDX,1
            mov QWORD PTR [RBX],RSI
            movzx EAX,BYTE PTR [RAX]
            lea ESI,DWORD PTR [RCX+8]
            add QWORD PTR [RBX+32],1
            mov QWORD PTR [RBX+8],RDX
            mov DWORD PTR [RBX+28],ESI
            shl EAX,CL
            or EAX,DWORD PTR [RBX+24]
            cmp ESI,EBP
            mov ECX,ESI
            mov DWORD PTR [RBX+24],EAX
            jge .L_405aa0
.L_405a3e:

            test RDX,RDX
            jne .L_405a10

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [R12]
            test RSI,RSI
            jne .L_405a80
.L_405a50:

            mov RDX,R13
            mov ESI,1
            call .L_404a00

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBX],RAX
            test RDX,RDX
            je .L_405ae0

            test RAX,RAX
            je .L_405ad8

            test RDX,RDX
            js .L_405ad8

            mov QWORD PTR [RBX+8],RDX
            mov QWORD PTR [RBX+16],RDX
            mov ECX,DWORD PTR [RBX+28]
            jmp .L_405a13
.L_405a80:

            call .L_404a50

            mov QWORD PTR [RBX+16],0
            mov RDI,QWORD PTR [R12]
            jmp .L_405a50
.L_405a93:

            mov EAX,DWORD PTR [RBX+24]
            mov ESI,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405aa0:

            mov EDX,EAX
            mov ECX,EBP
            sub ESI,EBP
            sar EDX,CL
            mov DWORD PTR [RBX+28],ESI
            mov DWORD PTR [RBX+24],EDX
            lea RDX,QWORD PTR [RIP+.L_4439a0]
            and EAX,DWORD PTR [RDX+RBP*4]
.L_405ab8:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_405ae7

            add RSP,24
.L_405acc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405ad8:

            mov EAX,4294967266
            jmp .L_405ab8
          .byte 0x90
.L_405ae0:

            mov EAX,4294967295
            jmp .L_405ab8
.L_405ae7:

            call __stack_chk_fail@PLT
.L_405aec:

            nop
            nop
            nop
            nop
.L_405af0:

            push R14
            push R13
            movabs R13,38654706175
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+16]
            push RBX
.L_405b06:

            mov R14,QWORD PTR [RDI+80]
            mov RBP,RDI
.L_405b0d:

            mov EDX,DWORD PTR [R14+76]
            mov RSI,R14
            mov RDI,R12
            call .L_4059d0

            test EAX,EAX
            js .L_405be8

            mov ECX,DWORD PTR [RIP+.L_65b78c]
            lea EDX,DWORD PTR [RCX+1]
            mov ECX,0
            cmp EDX,1023
            cmova EDX,ECX
            cmp EAX,256
            mov DWORD PTR [RIP+.L_65b78c],EDX
            jne .L_405bf8

            mov ECX,DWORD PTR [R14+56]
            test ECX,ECX
            je .L_405bf8

            movsxd RSI,DWORD PTR [R14+76]
            mov RAX,QWORD PTR [R14+32]
            xor EDX,EDX
            mov DWORD PTR [R14+28],0
            div RSI
            mov EAX,ESI
            sub EAX,EDX
            cdq 
            idiv ESI
            mov EBX,EDX
            jmp .L_405b94
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405b80:

            mov EDX,8
            mov RDI,R12
            sub EBX,1
            call .L_4059d0

            test EAX,EAX
            js .L_405be8
.L_405b94:

            test EBX,EBX
            mov RSI,QWORD PTR [RBP+80]
            jg .L_405b80

            mov QWORD PTR [R14+32],0
            mov DWORD PTR [R14+88],257
            mov QWORD PTR [R14+72],R13
            mov DWORD PTR [R14+80],4294967295
            mov R14,RSI
            jmp .L_405b0d
.L_405bc0:

            mov EDX,DWORD PTR [R14+80]
            test EDX,EDX
            jns .L_405cc0
.L_405bcc:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443922]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,4294967266
.L_405be8:

            pop RBX
.L_405be9:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405bf8:

            cmp DWORD PTR [R14+88],EAX
            jl .L_405bcc

            je .L_405bc0

            movsxd RDX,EAX
            jg .L_405c34

            jmp .L_405cc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405c10:

            mov RCX,QWORD PTR [R14+196704]
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [R14+196704],RSI
            movzx ESI,BYTE PTR [R14+RDX*1+92]
            mov BYTE PTR [RCX],SIL
            movzx EDX,WORD PTR [R14+RDX*2+65628]
.L_405c34:

            cmp EDX,255
            jg .L_405c10

            mov RCX,QWORD PTR [R14+196704]
            mov DWORD PTR [R14+84],EDX
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [R14+196704],RSI
            mov BYTE PTR [RCX],DL
            mov EDX,DWORD PTR [R14+88]
            mov ESI,DWORD PTR [R14+64]
            cmp ESI,EDX
            jle .L_405c84

            mov ECX,DWORD PTR [R14+80]
            test ECX,ECX
            js .L_405c84

            movsxd RDI,EDX
            add EDX,1
            mov WORD PTR [R14+RDI*2+65628],CX
            mov ECX,DWORD PTR [R14+84]
            mov BYTE PTR [R14+RDI*1+92],CL
            mov DWORD PTR [R14+88],EDX
.L_405c84:

            cmp DWORD PTR [R14+72],EDX
            jge .L_405cb1

            mov EDI,DWORD PTR [R14+76]
            mov QWORD PTR [R14+32],0
            lea ECX,DWORD PTR [RDI+1]
            cmp ECX,DWORD PTR [R14+68]
            mov DWORD PTR [R14+76],ECX
            je .L_405ce1

            mov EDX,1
            shl EDX,CL
            sub EDX,1
            mov DWORD PTR [R14+72],EDX
.L_405cb1:

            mov DWORD PTR [R14+80],EAX
            xor EAX,EAX
            pop RBX
.L_405cb8:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_405cc0:

            mov RDX,QWORD PTR [R14+196704]
            mov ECX,DWORD PTR [R14+84]
            lea RSI,QWORD PTR [RDX+1]
            mov QWORD PTR [R14+196704],RSI
            mov BYTE PTR [RDX],CL
            movsxd RDX,DWORD PTR [R14+80]
            jmp .L_405c34
.L_405ce1:

            mov DWORD PTR [R14+72],ESI
            jmp .L_405cb1
.L_405ce7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405cf0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_405cfe:

            mov RBP,QWORD PTR [RDI+80]
            mov EDX,DWORD PTR [RBP+60]
            test EDX,EDX
            jne .L_405db0

            mov R12,QWORD PTR [RBP+48]
            mov R15,QWORD PTR [RBP+40]
            mov R14,RDI
            mov QWORD PTR [RSP+8],RSI
            add R15,R12
            cmp R12,R15
            jae .L_405dc8

            lea R13,QWORD PTR [RBP+196712]
            mov RBX,R12
            jmp .L_405d5a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405d38:

            lea RDX,QWORD PTR [RAX-1]
            add RBX,1
            mov QWORD PTR [RBP+196704],RDX
            movzx EAX,BYTE PTR [RAX-1]
            mov BYTE PTR [RBX-1],AL
.L_405d4e:

            cmp RBX,R15
            jae .L_405dcc

            mov EAX,DWORD PTR [RBP+60]
            test EAX,EAX
            jne .L_405dcc
.L_405d5a:

            mov RAX,QWORD PTR [RBP+196704]
            cmp RAX,R13
            ja .L_405d38

            mov RDI,R14
            call .L_405af0

            cmp EAX,-1
            je .L_405d90

            test EAX,EAX
            je .L_405d4e

            add RSP,24
.L_405d7b:

            cdqe 
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405d90:

            mov DWORD PTR [RBP+60],EAX
            mov RAX,RBX
            sub RAX,R12
.L_405d99:

            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RCX],R12
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_405db0:

            mov QWORD PTR [RSI],0
            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_405dc8:

            xor EAX,EAX
            jmp .L_405d99
.L_405dcc:

            mov RAX,RBX
            sub RAX,R12
            jmp .L_405d99
.L_405dd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405de0:

            lea RAX,QWORD PTR [RIP+.L_44393a]
            push R12
            push RBP
            push RBX
.L_405deb:

            mov ESI,1
            mov DWORD PTR [RDI+96],3
            mov QWORD PTR [RDI+88],RAX
            mov RBP,RDI
            mov EDI,262016
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            test RBX,RBX
            je .L_405f18

            test RAX,RAX
            je .L_405f18

            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_405cf0]
            lea R12,QWORD PTR [RBP+16]
            mov EDX,8
            mov RSI,RBX
            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405940]
            mov RDI,R12
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBX+40],65536
            mov QWORD PTR [RBP+64],RAX
            call .L_4059d0

            mov RSI,QWORD PTR [RBP+80]
            mov EDX,8
            mov RDI,R12
            call .L_4059d0

            mov RSI,QWORD PTR [RBP+80]
            mov EDX,8
            mov RDI,R12
            call .L_4059d0

            mov ECX,EAX
            and ECX,31
            cmp ECX,16
            jg .L_405f4d

            mov EDX,1
            and EAX,128
            mov DWORD PTR [RBX+68],ECX
            shl EDX,CL
            test EAX,EAX
            mov DWORD PTR [RBX+56],EAX
            mov DWORD PTR [RBX+64],EDX
            lea RDX,QWORD PTR [RBX+196712]
            mov DWORD PTR [RBX+88],256
            mov QWORD PTR [RBX+196704],RDX
            jne .L_405f0f
.L_405ec7:

            movabs RAX,38654706175
            mov DWORD PTR [RBX+80],4294967295
            mov QWORD PTR [RBX+72],RAX
            mov EAX,255
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ee8:

            xor EDX,EDX
            mov WORD PTR [RBX+RAX*2+65628],DX
            mov BYTE PTR [RBX+RAX*1+92],AL
            sub RAX,1
            cmp RAX,-1
            jne .L_405ee8

            mov RDI,RBP
            call .L_405af0

            xor EAX,EAX
.L_405f0a:

            pop RBX
.L_405f0b:

            pop RBP
            pop R12
            ret 
.L_405f0f:

            mov DWORD PTR [RBX+88],257
            jmp .L_405ec7
.L_405f18:

            mov RDI,RAX
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RDI,QWORD PTR [RBP+24]
            lea RCX,QWORD PTR [RIP+.L_44393a]
            lea RDX,QWORD PTR [RIP+.L_443948]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_405f0a
.L_405f4d:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443922]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_405f0a
.L_405f6b:

            nop
            nop
            nop
            nop
            nop
.L_405f70:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443978]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_405f89:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_406010

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_406010

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_44393a]
            lea RDI,QWORD PTR [RIP+.L_405de0]
            lea RBX,QWORD PTR [RIP+.L_405930]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_405960]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],RBX
.L_405ff1:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_406017

            add RSP,16
.L_406005:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406010:

            mov EAX,4294967266
            jmp .L_405ff1
.L_406017:

            call __stack_chk_fail@PLT
.L_40601c:

            nop
            nop
            nop
            nop
.L_406020:

            jmp .L_405f70
.L_406025:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406030:

            xor EAX,EAX
            ret 
.L_406033:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406040:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_4439e4]
            mov RBX,RDI
            call .L_407350

            lea RDX,QWORD PTR [RIP+.L_4439ed]
            mov DWORD PTR [RBX+96],12
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_406064:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406070:

            sub RSP,24
.L_406074:

            mov RDI,RSI
            mov ESI,12
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4060b3

            cmp QWORD PTR [RSP],0
            je .L_4060b3

            mov RAX,QWORD PTR [RIP+.L_443a58]
            cmp QWORD PTR [RDX],RAX
            je .L_4060d0
.L_4060b1:

            xor EAX,EAX
.L_4060b3:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4060e2

            add RSP,24
.L_4060c7:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4060d0:

            mov EAX,DWORD PTR [RIP+.L_443a60]
            cmp DWORD PTR [RDX+8],EAX
            jne .L_4060b1

            mov EAX,96
            jmp .L_4060b3
.L_4060e2:

            call __stack_chk_fail@PLT
.L_4060e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4060f0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_4439f8]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_406109:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_406132

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            je .L_406150
.L_406132:

            mov EAX,4294967266
.L_406137:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4061a1

            add RSP,16
.L_40614b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406150:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_406070]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_406040]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_406030]
            mov QWORD PTR [RAX+40],RDX
            lea RDX,QWORD PTR [RIP+.L_443a20]
            xor EAX,EAX
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_406137
.L_4061a1:

            call __stack_chk_fail@PLT
.L_4061a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4061b0:

            push RBP
            lea RAX,QWORD PTR [RIP+.L_447c59]
            push RBX
            mov ESI,1
            mov RBX,RDI
            sub RSP,8
.L_4061c5:

            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+88],RAX
            mov EDI,160
            call calloc@PLT

            mov EDI,65536
            mov RBP,RAX
            call malloc@PLT

            test RBP,RBP
            je .L_40622f

            test RAX,RAX
            je .L_40622f

            mov QWORD PTR [RBP+120],RAX
            lea RAX,QWORD PTR [RIP+.L_406430]
            mov QWORD PTR [RBX+80],RBP
            mov QWORD PTR [RBP+128],65536
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_406260]
            mov BYTE PTR [RBP+112],0
            mov QWORD PTR [RBX+64],RAX
            xor EAX,EAX
.L_406228:

            add RSP,8
.L_40622c:

            pop RBX
            pop RBP
            ret 
.L_40622f:

            mov RDI,RAX
            call free@PLT

            mov RDI,RBP
            call free@PLT

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443aa0]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_406228
.L_40625d:

            nop
            nop
            nop
.L_406260:

            push R12
            push RBP
            xor EBP,EBP
            push RBX
            mov RBX,QWORD PTR [RDI+80]
            cmp BYTE PTR [RBX+112],0
            jne .L_406290
.L_406270:

            mov RDI,QWORD PTR [RBX+120]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406290:

            mov R12,RDI
            mov RDI,RBX
            call inflateEnd@PLT

            test EAX,EAX
            mov EBP,EAX
            je .L_406270

            mov RDI,QWORD PTR [R12+24]
            lea RDX,QWORD PTR [RIP+.L_443ad0]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBP,4294967266
            call .L_432bc0

            jmp .L_406270
.L_4062c0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov ESI,10
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_4062d7:

            mov R12,RSP
            mov RDX,R12
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            test RAX,RAX
            je .L_406305

            cmp QWORD PTR [RSP],0
            je .L_406305

            cmp WORD PTR [RAX],35615
            je .L_406330
.L_406305:

            xor EBX,EBX
.L_406307:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_406420

            add RSP,16
.L_406322:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406330:

            cmp BYTE PTR [RAX+2],8
            jne .L_406305

            movzx R14D,BYTE PTR [RAX+3]
            test R14B,224
            jne .L_406305

            test R14B,4
            mov EBX,10
            jne .L_4063d8
.L_406350:

            test R14B,8
            jne .L_406396
.L_406356:

            test R14B,16
            jne .L_4063c6
.L_40635c:

            and R14D,2
            jne .L_406400
.L_406366:

            test R13,R13
            je .L_406307

            mov DWORD PTR [R13],27
            jmp .L_406307
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406378:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBP
            call .L_404a00

            test RAX,RAX
            je .L_406305
.L_40638f:

            cmp BYTE PTR [RAX+RBX*1-1],0
            je .L_406356
.L_406396:

            add RBX,1
            cmp QWORD PTR [RSP],RBX
            jge .L_40638f

            jmp .L_406378
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4063a8:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBP
            call .L_404a00

            test RAX,RAX
            je .L_406305
.L_4063bf:

            cmp BYTE PTR [RAX+RBX*1-1],0
            je .L_40635c
.L_4063c6:

            add RBX,1
            cmp QWORD PTR [RSP],RBX
            jge .L_4063bf

            jmp .L_4063a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4063d8:

            mov RDX,R12
            mov ESI,12
            mov RDI,RBP
            call .L_404a00

            test RAX,RAX
            je .L_406305

            movzx EBX,WORD PTR [RAX+10]
            add RBX,12
            jmp .L_406350
          .byte 0x66
          .byte 0x90
.L_406400:

            add RBX,2
            mov RDX,R12
            mov RDI,RBP
            mov RSI,RBX
            call .L_404a00

            test RAX,RAX
            jne .L_406366

            jmp .L_406305
.L_406420:

            call __stack_chk_fail@PLT
.L_406425:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406430:

            push R15
            push R14
            lea R14,QWORD PTR [RIP+.L_443a68]
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_406448:

            mov R15,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+32]
            lea RBP,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+8],RSI
            mov RAX,QWORD PTR [R15+120]
            mov RDX,QWORD PTR [R15+128]
            mov QWORD PTR [R15+24],RAX
            mov DWORD PTR [R15+32],EDX
            mov EAX,EDX
.L_406480:

            test EAX,EAX
            je .L_4064b5

            cmp BYTE PTR [R15+152],0
            jne .L_4064b5

            cmp BYTE PTR [R15+112],0
            mov RDI,QWORD PTR [RBX+16]
            jne .L_406588

            xor ESI,ESI
            mov R12,QWORD PTR [RBX+80]
            call .L_4062c0

            test RAX,RAX
            jne .L_406508

            mov BYTE PTR [R15+152],1
.L_4064b5:

            mov RDX,QWORD PTR [R15+120]
            mov RAX,QWORD PTR [R15+24]
            mov ECX,0
            sub RAX,RDX
            add QWORD PTR [R15+136],RAX
            test RAX,RAX
            cmove RDX,RCX
            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RCX],RDX
            nop
            nop
            nop
            nop
            nop
.L_4064e0:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_406744

            add RSP,56
.L_4064f8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
.L_406508:

            mov RDI,QWORD PTR [RBX+16]
            mov RSI,RAX
            call .L_404a50

            xor EDX,EDX
            xor ESI,ESI
            xor EDI,EDI
            call crc32@PLT

            mov RDI,QWORD PTR [RBX+16]
            mov RDX,R13
            mov ESI,1
            mov QWORD PTR [R12+144],RAX
            call .L_404a00

            mov QWORD PTR [R12],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov ECX,112
            mov RDX,R14
            mov ESI,4294967281
            mov RDI,R12
            mov DWORD PTR [R12+8],EAX
            call inflateInit2_@PLT

            cmp EAX,-4
            je .L_4066d8

            jle .L_406688

            cmp EAX,-2
            je .L_406660

            test EAX,EAX
            jne .L_4066b0

            mov BYTE PTR [R12+112],1
            mov RDI,QWORD PTR [RBX+16]
            nop
            nop
            nop
.L_406588:

            mov RDX,RBP
            mov ESI,1
            call .L_404a00

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            je .L_406700

            mov RAX,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDI,R15
            mov DWORD PTR [R15+8],EAX
            call inflate@PLT

            test EAX,EAX
            je .L_406648

            cmp EAX,1
            jne .L_406620

            mov EAX,DWORD PTR [R15+8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX+16]
            sub RSI,RAX
            call .L_404a50

            mov RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RDI+112],0
            call inflateEnd@PLT

            test EAX,EAX
            jne .L_406721

            mov RDI,QWORD PTR [RBX+16]
            mov RDX,R13
            mov ESI,8
            call .L_404a00

            test RAX,RAX
            je .L_406637

            cmp QWORD PTR [RSP+32],0
            je .L_406637

            mov RDI,QWORD PTR [RBX+16]
            mov ESI,8
            call .L_404a50
.L_406617:

            mov EAX,DWORD PTR [R15+32]
            jmp .L_406480
.L_406620:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443a84]
            mov ESI,4294967295
            xor EAX,EAX
            call .L_432bc0
.L_406637:

            mov RAX,-30
            jmp .L_4064e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406648:

            mov EAX,DWORD PTR [R15+8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX+16]
            sub RSI,RAX
            call .L_404a50

            jmp .L_406617
          .byte 0x90
.L_406660:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443af8]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
            jmp .L_4064e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406688:

            cmp EAX,-6
            jne .L_4066b0

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443b88]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
            jmp .L_4064e0
.L_4066b0:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443bd8]
            mov ECX,EAX
            mov ESI,4294967295
            xor EAX,EAX
            call .L_432bc0

            mov RAX,-30
            jmp .L_4064e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4066d8:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443b48]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov RAX,-30
            jmp .L_4064e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406700:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443a6f]
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
            jmp .L_4064e0
.L_406721:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443c18]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,-30
            jmp .L_4064e0
.L_406744:

            call __stack_chk_fail@PLT
.L_406749:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406750:

            sub RSP,24
            mov RDI,RSI
            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4062c0

            xor EDX,EDX
            test RAX,RAX
            je .L_40677c

            mov EDX,DWORD PTR [RSP+4]
.L_40677c:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_406793

            add RSP,24
            ret 
.L_406793:

            call __stack_chk_fail@PLT
.L_406798:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4067a0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443c40]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_4067b9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_406838

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_406838

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_447c59]
            lea RDI,QWORD PTR [RIP+.L_4061b0]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_406750]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40681e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40683f

            add RSP,16
.L_406832:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406838:

            mov EAX,4294967266
            jmp .L_40681e
.L_40683f:

            call __stack_chk_fail@PLT
.L_406844:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406850:

            jmp .L_4067a0
.L_406855:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406860:

            xor EAX,EAX
            ret 
.L_406863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406870:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_443c61]
            mov RBX,RDI
            call .L_407350

            lea RDX,QWORD PTR [RIP+.L_443c6d]
            mov DWORD PTR [RBX+96],10
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_406894:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068a0:

            sub RSP,24
.L_4068a4:

            mov RDI,RSI
            mov ESI,6
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4068f8

            cmp QWORD PTR [RSP],0
            je .L_4068f8

            cmp DWORD PTR [RDX],1230656076
            jne .L_4068f8

            cmp BYTE PTR [RDX+4],0
            jne .L_4068f8

            movzx EAX,BYTE PTR [RDX+5]
            sub EAX,6
            cmp EAX,5
            sbb EAX,EAX
            and EAX,6
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068f8:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40690d

            add RSP,24
.L_40690c:

            ret 
.L_40690d:

            call __stack_chk_fail@PLT
.L_406912:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406920:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443c78]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_406939:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_406962

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            je .L_406980
.L_406962:

            mov EAX,4294967266
.L_406967:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4069dc

            add RSP,16
.L_40697b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406980:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_443c6d]
            lea RCX,QWORD PTR [RIP+.L_406860]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+8],RDX
            lea RDX,QWORD PTR [RIP+.L_4068a0]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],RCX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_406870]
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_443ca0]
            xor EAX,EAX
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_406967
.L_4069dc:

            call __stack_chk_fail@PLT
.L_4069e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4069f0:

            xor EAX,EAX
            ret 
.L_4069f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406a00:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_443cd5]
            mov RBX,RDI
            call .L_407350

            lea RDX,QWORD PTR [RIP+.L_443cdf]
            mov DWORD PTR [RBX+96],13
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_406a24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406a30:

            sub RSP,24
.L_406a34:

            mov RDI,RSI
            mov ESI,11
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            xor EDX,EDX
            test RAX,RAX
            je .L_406a73

            mov ECX,DWORD PTR [RAX]
            cmp ECX,407708164
            je .L_406a90

            xor EDX,EDX
            cmp ECX,407642370
            sete DL
            shl EDX,5
.L_406a73:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_406ac3

            add RSP,24
.L_406a89:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406a90:

            movzx ECX,BYTE PTR [RAX+4]
            mov ESI,ECX
            shr SIL,6
            cmp SIL,1
            jne .L_406a73

            and ECX,2
            jne .L_406a73

            movzx ECX,BYTE PTR [RAX+5]
            mov EAX,ECX
            sar EAX,4
            and EAX,7
            cmp EAX,3
            jle .L_406a73

            and ECX,4294967183
            cmp ECX,1
            sbb EDX,EDX
            and EDX,48
            jmp .L_406a73
.L_406ac3:

            call __stack_chk_fail@PLT
.L_406ac8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ad0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443d00]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_406ae9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_406b12

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            je .L_406b30
.L_406b12:

            mov EAX,4294967266
.L_406b17:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_406b8c

            add RSP,16
.L_406b2b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406b30:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_443cdf]
            lea RCX,QWORD PTR [RIP+.L_4069f0]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+8],RDX
            lea RDX,QWORD PTR [RIP+.L_406a30]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],RCX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_406a00]
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_443ce3]
            xor EAX,EAX
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_406b17
.L_406b8c:

            call __stack_chk_fail@PLT
.L_406b91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ba0:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_443d20]
            mov RBX,RDI
            call .L_407350

            lea RDX,QWORD PTR [RIP+.L_443d28]
            mov DWORD PTR [RBX+96],11
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_406bc4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406bd0:

            sub RSP,24
.L_406bd4:

            mov RDI,RSI
            mov ESI,9
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_406c13

            cmp QWORD PTR [RSP],0
            je .L_406c13

            mov RAX,QWORD PTR [RIP+.L_443d2d]
            cmp QWORD PTR [RDX],RAX
            je .L_406c30
.L_406c11:

            xor EAX,EAX
.L_406c13:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_406c43

            add RSP,24
.L_406c27:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406c30:

            movzx EAX,BYTE PTR [RIP+.L_443d35]
            cmp BYTE PTR [RDX+8],AL
            jne .L_406c11

            mov EAX,72
            jmp .L_406c13
.L_406c43:

            call __stack_chk_fail@PLT
.L_406c48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406c50:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443d38]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_406c69:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_406c92

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            je .L_406cb0
.L_406c92:

            mov EAX,4294967266
.L_406c97:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_406cfe

            add RSP,16
.L_406cab:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406cb0:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_406bd0]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_406ba0]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_443d60]
            xor EAX,EAX
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_406c97
.L_406cfe:

            call __stack_chk_fail@PLT
.L_406d03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406d10:

            push RBP
            push RBX
            sub RSP,8
            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RBX+24]
            test RAX,RAX
            jne .L_406d50

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            je .L_406d38
.L_406d29:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406d38:

            mov DWORD PTR [RBX+32],1
            add RSP,8
            mov EAX,2147483647
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406d50:

            mov RDI,RSI
            xor EDX,EDX
            mov RSI,RAX
            call .L_404a00

            test RAX,RAX
            je .L_406d29

            mov RBP,QWORD PTR [RBX+24]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,RAX
            mov RDX,RBP
            call memcmp@PLT

            test EAX,EAX
            jne .L_406d29

            add RSP,8
            lea EAX,DWORD PTR [RBP*8]
            pop RBX
            pop RBP
            ret 
.L_406d87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406d90:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_406d97:

            mov EDI,DWORD PTR [RSI+36]
            mov RBX,RSI
            cmp EDI,-1
            je .L_406dae

            call close@PLT

            mov DWORD PTR [RBX+36],4294967295
.L_406dae:

            mov EDI,DWORD PTR [RBX+40]
            cmp EDI,-1
            je .L_406dc2

            call close@PLT

            mov DWORD PTR [RBX+40],4294967295
.L_406dc2:

            mov EDI,DWORD PTR [RBX+24]
            test EDI,EDI
            jne .L_406df8

            mov EAX,DWORD PTR [RBX+32]
.L_406dcc:

            test EAX,EAX
            js .L_406e67

            mov EAX,DWORD PTR [RBX+28]
            mov ECX,EAX
            and ECX,127
            lea EDX,DWORD PTR [RCX+1]
            cmp DL,1
            jle .L_406e30

            cmp ECX,13
            jne .L_406e88

            xor EAX,EAX
.L_406def:

            pop RBX
.L_406df0:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406df8:

            lea R12,QWORD PTR [RBX+28]
            jmp .L_406e0d
          .byte 0x66
          .byte 0x90
.L_406e00:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],4
            jne .L_406e60

            mov EDI,DWORD PTR [RBX+24]
.L_406e0d:

            xor EDX,EDX
            mov RSI,R12
            call waitpid@PLT

            cmp EAX,-1
            mov DWORD PTR [RBX+32],EAX
            je .L_406e00

            mov DWORD PTR [RBX+24],0
            jmp .L_406dcc
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406e30:

            test ECX,ECX
            jne .L_406e91

            movzx EAX,AH
            test EAX,EAX
            je .L_406def

            lea RDX,QWORD PTR [RIP+.L_443e10]
            mov ECX,EAX
.L_406e44:

            mov RDI,QWORD PTR [RBP]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_406def

            nop
            nop
            nop
            nop
            nop
.L_406e60:

            mov DWORD PTR [RBX+24],0
.L_406e67:

            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_443d93]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_406def
.L_406e88:

            lea RDX,QWORD PTR [RIP+.L_443de8]
            jmp .L_406e44
.L_406e91:

            mov EAX,4294967276
            jmp .L_406def
.L_406e9b:

            nop
            nop
            nop
            nop
            nop
.L_406ea0:

            push RBP
            push RBX
            add RDI,24
            sub RSP,8
            mov RBX,QWORD PTR [RDI+56]
            mov RSI,RBX
            call .L_406d90

            mov RDI,QWORD PTR [RBX+48]
            mov EBP,EAX
            call free@PLT

            mov RDI,RBX
            call .L_42e240

            mov RDI,RBX
            call free@PLT

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
.L_406eda:

            nop
            nop
            nop
            nop
            nop
            nop
.L_406ee0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_406ef1:

            mov RBX,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov EDI,DWORD PTR [RBX+40]
            mov QWORD PTR [RSP+16],RBX
            mov R13,QWORD PTR [RBX+48]
            cmp EDI,-1
            je .L_407198

            mov R12,QWORD PTR [RBX+56]
            test R12,R12
            je .L_407198

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [R14+24]
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f50:

            sub R12,QWORD PTR [RSP+8]
            movabs RAX,9223372036854775807
            cmovs R12,RAX
            nop
            nop
            nop
            nop
            nop
.L_406f68:

            mov RDX,R12
            mov RSI,R13
            call read@PLT

            cmp RAX,-1
            je .L_407010

            cmp RAX,0
            jg .L_4070c0

            je .L_4070a2
.L_406f8d:

            cmp DWORD PTR [RBX+36],-1
            je .L_407090

            mov RDI,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP]
            mov ESI,1
            call .L_404a00

            test RAX,RAX
            mov RBP,RAX
            jne .L_406fd3

            jmp .L_407060
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406fc0:

            call __errno_location@PLT

            mov RCX,RAX
            mov EAX,DWORD PTR [RAX]
            cmp EAX,4
            jne .L_407100
.L_406fd3:

            mov EDI,DWORD PTR [RBX+36]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBP
            call write@PLT

            cmp RAX,-1
            mov R15,RAX
            je .L_406fc0

            test RAX,RAX
            jle .L_407140

            mov RDI,QWORD PTR [R14+16]
            mov RSI,R15
            call .L_404a50
.L_407001:

            mov EDI,DWORD PTR [RBX+40]
            jmp .L_406f68

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407010:

            call __errno_location@PLT

            mov EAX,DWORD PTR [RAX]
            cmp EAX,4
            je .L_407001

            cmp EAX,32
            je .L_4070a2

            cmp EAX,11
            je .L_406f8d

            nop
            nop
.L_407030:

            mov RAX,-30
.L_407037:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40719c

            add RSP,72
.L_40704f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407060:

            mov EDI,DWORD PTR [RBX+36]
            call close@PLT

            mov EDI,DWORD PTR [RBX+40]
            xor EDX,EDX
            xor EAX,EAX
            mov DWORD PTR [RBX+36],4294967295
            mov ESI,4
            call fcntl@PLT

            cmp QWORD PTR [RSP+48],0
            jns .L_407001

            jmp .L_407030
          .byte 0x66
          .byte 0x90
.L_407090:

            mov ESI,DWORD PTR [RBX+40]
            mov EDI,4294967295
            call .L_433270

            jmp .L_407001
.L_4070a2:

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,RBX
            call .L_406d90

            cdqe 
            test RAX,RAX
            js .L_407030

            je .L_407172
.L_4070c0:

            add QWORD PTR [RSP+8],RAX
            add R13,RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp DWORD PTR [RAX+40],-1
            je .L_40718d

            mov RAX,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RAX+56]
            cmp R12,QWORD PTR [RSP+8]
            jbe .L_40718d

            mov RBX,QWORD PTR [R14+80]
            mov EDI,DWORD PTR [RBX+40]
            jmp .L_406f50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407100:

            cmp EAX,11
            mov EDI,DWORD PTR [RBX+36]
            je .L_407165

            mov QWORD PTR [RSP+24],RCX
            call close@PLT

            mov EDI,DWORD PTR [RBX+40]
            xor EDX,EDX
            xor EAX,EAX
            mov DWORD PTR [RBX+36],R15D
            mov ESI,4
            call fcntl@PLT

            mov RCX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RCX],32
            je .L_407001

            jmp .L_407030
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407140:

            mov EDI,DWORD PTR [RBX+36]
            call close@PLT

            mov EDI,DWORD PTR [RBX+40]
            mov DWORD PTR [RBX+36],4294967295
            xor EDX,EDX
            mov ESI,4
            xor EAX,EAX
            call fcntl@PLT

            jmp .L_407001
.L_407165:

            mov ESI,DWORD PTR [RBX+40]
            call .L_433270

            jmp .L_407001
.L_407172:

            mov RAX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+8]
.L_407180:

            mov RDX,QWORD PTR [RSP+40]
            mov QWORD PTR [RDX],R13
            jmp .L_407037
.L_40718d:

            mov R13,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_407180
.L_407198:

            xor EAX,EAX
            jmp .L_407180
.L_40719c:

            call __stack_chk_fail@PLT
.L_4071a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071b0:

            push RBX
            mov RBX,QWORD PTR [RDI]
            test RBX,RBX
            je .L_4071d3

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,RBX
            call free@PLT
.L_4071d3:

            xor EAX,EAX
            pop RBX
            ret 
.L_4071d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071e0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDX
            push RBP
            push RBX
            mov R13,RCX
            mov RBX,RDI
            sub RSP,24
.L_4071fa:

            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404950

            test EAX,EAX
            jne .L_4072d0

            mov ESI,40
            mov EDI,1
            mov R12D,EAX
            call calloc@PLT

            test RAX,RAX
            mov RBP,RAX
            je .L_4072f1

            mov RDI,R15
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_4072e0

            test R14,R14
            mov RBX,QWORD PTR [RSP]
            je .L_407279

            test R13,R13
            je .L_407279

            mov RDI,R13
            mov QWORD PTR [RBP+24],R13
            call malloc@PLT

            mov RDX,R13
            mov QWORD PTR [RBP+16],RAX
            mov RSI,R14
            mov RDI,RAX
            call memcpy@PLT
.L_407279:

            lea RAX,QWORD PTR [RIP+.L_406d10]
            mov QWORD PTR [RBX],RBP
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+16],RAX
            lea RAX,QWORD PTR [RIP+.L_4074d0]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_4071b0]
            mov QWORD PTR [RBX+40],RAX
.L_4072a5:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40730f

            add RSP,24
.L_4072bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4072d0:

            mov R12D,4294967266
            jmp .L_4072a5
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4072e0:

            mov RDI,QWORD PTR [RBP+16]
            call free@PLT

            mov RDI,RBP
            call free@PLT
.L_4072f1:

            lea RDX,QWORD PTR [RIP+.L_443dae]
            mov ESI,12
            mov RDI,RBX
            xor EAX,EAX
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_4072a5
.L_40730f:

            call __stack_chk_fail@PLT
.L_407314:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407320:

            jmp .L_4071e0
.L_407325:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407330:

            xor ECX,ECX
            xor EDX,EDX
            jmp .L_4071e0
.L_407339:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407340:

            jmp .L_407330
.L_407342:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407350:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40735e:

            mov RDI,RSI
            call strlen@PLT

            mov ESI,64
            mov EDI,1
            lea R12,QWORD PTR [RAX+10]
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            test RBX,RBX
            mov R14,RAX
            je .L_407440

            test RAX,RAX
            je .L_407440

            mov RSI,R12
            mov RDI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_407470

            lea RSI,QWORD PTR [RIP+.L_443dde]
            mov EDX,9
            mov RDI,RBX
            mov QWORD PTR [RBX+8],0
            call .L_431240

            mov RSI,R13
            mov RDI,RBX
            call .L_4312c0

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RBX+36]
            mov DWORD PTR [RBP+96],4
            mov RDI,R13
            mov QWORD PTR [RBX+48],R14
            mov QWORD PTR [RBX+56],65536
            mov QWORD PTR [RBP+88],RAX
            call .L_432ff0

            cmp EAX,-1
            je .L_407499

            mov DWORD PTR [RBX+24],EAX
            lea RAX,QWORD PTR [RIP+.L_406ee0]
            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_406ea0]
            mov QWORD PTR [RBP+64],RAX
            xor EAX,EAX
.L_407430:

            pop RBX
.L_407431:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407440:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443dc4]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            test RBX,RBX
            jne .L_407487
.L_40745c:

            mov RDI,R14
            call free@PLT

            mov EAX,4294967266
            jmp .L_407430
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407470:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443dc4]
            mov ESI,12
            xor EAX,EAX
            call .L_432bc0
.L_407487:

            mov RDI,RBX
            call .L_42e240

            mov RDI,RBX
            call free@PLT

            jmp .L_40745c
.L_407499:

            mov RDI,QWORD PTR [RBX+48]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443e38]
            xor EAX,EAX
            mov RCX,R13
            mov ESI,22
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_407430
.L_4074ce:

            nop
            nop
.L_4074d0:

            mov RAX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+8]
            jmp .L_407350
.L_4074e0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI+80]
            call free@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_4074f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407500:

            push R15
            push R14
            xor R8D,R8D
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_443ea4]
            push RBP
            push RBX
            mov RBP,RDI
            xor R14D,R14D
            sub RSP,56
.L_40751e:

            mov R13,QWORD PTR [RDI+80]
            mov QWORD PTR [RSI],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RSI
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [R13+24]
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_407560:

            test R8,R8
            je .L_407609
.L_407569:

            cmp DWORD PTR [R13+40],4
            mov RBX,QWORD PTR [RSP+32]
            mov R15,RBX
            ja .L_407740

            mov EAX,DWORD PTR [R13+40]
            movsxd RAX,DWORD PTR [R12+RAX*4]
            add RAX,R12
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407590:

            mov RDI,QWORD PTR [R13+8]
            mov EAX,16
            sub RBX,R14
            mov RSI,R8
            mov QWORD PTR [RSP],R8
            sub RAX,RDI
            cmp RBX,RAX
            cmova RBX,RAX
            add RDI,QWORD PTR [RSP+16]
            mov RDX,RBX
            add R14,RBX
            call memcpy@PLT

            mov R8,QWORD PTR [RSP]
            add R8,RBX
            add RBX,QWORD PTR [R13+8]
            cmp RBX,16
            mov QWORD PTR [R13+8],RBX
            je .L_4077b0

            mov R15,QWORD PTR [RSP+32]
            cmp R14,R15
            jne .L_40767e
.L_4075e4:

            mov RBX,R14
.L_4075e7:

            mov RAX,QWORD PTR [R13]
            add RAX,RBX
.L_4075ee:

            mov RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [R13],RAX
            mov RSI,RBX
            call .L_404a50
.L_4075fe:

            xor R14D,R14D
            cmp QWORD PTR [RSP+32],0
            jle .L_407634
.L_407609:

            mov RDI,QWORD PTR [RBP+16]
            mov RDX,QWORD PTR [RSP+24]
            mov ESI,1
            call .L_404a00

            test RAX,RAX
            mov R8,RAX
            jne .L_407569

            cmp QWORD PTR [RSP+32],0
            js .L_407876
.L_407634:

            xor R15D,R15D
            jmp .L_4076b1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407640:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [R13+8]
            mov RAX,RBX
            sub RAX,R14
            mov R11,RSI
            sub R11,RDI
            cmp RAX,R11
            cmova RAX,R11
            add R8,RAX
            add R14,RAX
            add RAX,RDI
            cmp RSI,RAX
            mov QWORD PTR [R13+8],RAX
            jne .L_407675

            mov DWORD PTR [R13+40],3
.L_407675:

            cmp RBX,R14
            je .L_4075e7
.L_40767e:

            test R15,R15
            jg .L_407560

            xor R15D,R15D
            jmp .L_4077e8
          .byte 0x90
.L_407690:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,RBX
            mov QWORD PTR [RAX],R8
            add QWORD PTR [R13],RBX
            mov RDI,QWORD PTR [RBP+16]
            call .L_404a50

            test RBX,RBX
            je .L_4075fe
.L_4076b1:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_4078ab

            add RSP,56
.L_4076cc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4076e0:

            mov RDI,QWORD PTR [R13]
            lea RAX,QWORD PTR [RDI+RBX*1]
            cmp RAX,95
            jg .L_407758

            add R14,RBX
            cmp RBX,R14
            jne .L_40767e

            jmp .L_4075ee
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407700:

            cmp RBX,R14
            ja .L_40771d

            jmp .L_407850
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407710:

            add R14,1
            add R8,1
            cmp RBX,R14
            je .L_407798
.L_40771d:

            cmp BYTE PTR [R8],0
            je .L_407710

            mov DWORD PTR [R13+40],1
            mov QWORD PTR [R13+8],0
            mov QWORD PTR [R13+16],0
            jmp .L_40767e
.L_407740:

            cmp RBX,R14
            jne .L_40767e

            mov RAX,QWORD PTR [R13]
            add RAX,R14
            jmp .L_4075ee
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407758:

            mov ESI,96
            mov DWORD PTR [R13+40],1
            mov QWORD PTR [R13+8],0
            sub RSI,RDI
            mov QWORD PTR [R13+16],0
            mov DWORD PTR [R13+44],1
            add R14,RSI
            add R8,RSI
            cmp RBX,R14
            jne .L_40767e

            jmp .L_4075ee
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407798:

            add QWORD PTR [R13],RBX
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,RBX
            call .L_404a50

            jmp .L_4075fe
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4077b0:

            cmp DWORD PTR [R13+24],32025998
            je .L_407810

            mov EAX,DWORD PTR [R13+44]
            test EAX,EAX
            jne .L_407888

            cmp R14,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            mov DWORD PTR [R13+40],4
            mov QWORD PTR [RAX],RCX
            je .L_40785b

            mov R15D,16
.L_4077e8:

            test R14,R14
            je .L_4076b1

            test R8,R8
            je .L_4076b1

            add QWORD PTR [R13],R14
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,R14
            call .L_404a50

            jmp .L_4076b1
          .byte 0x90
.L_407810:

            mov EAX,DWORD PTR [R13+32]
            mov EDX,DWORD PTR [R13+36]
            mov R15,QWORD PTR [RSP+32]
            mov DWORD PTR [R13+40],2
            mov DWORD PTR [R13+44],0
            bswap EAX
            bswap EDX
            add EAX,1
            shl EAX,4
            add EAX,EDX
            cmp R14,R15
            mov QWORD PTR [R13+16],RAX
            jne .L_40767e

            jmp .L_4075e4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407850:

            jne .L_40767e

            jmp .L_4075e7
.L_40785b:

            add QWORD PTR [R13],R14
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,R14
            mov R15D,16
            call .L_404a50

            jmp .L_4076b1
.L_407876:

            mov R15,-30
            jmp .L_4076b1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407888:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443e6c]
            mov ESI,84
            xor EAX,EAX
            mov R15,-30
            call .L_432bc0

            jmp .L_4076b1
.L_4078ab:

            call __stack_chk_fail@PLT
.L_4078b0:

            sub RSP,24
.L_4078b4:

            mov RDI,RSI
            mov ESI,8
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4078f2

            cmp DWORD PTR [RDX],3689851885
            jne .L_4078f2

            movzx ECX,BYTE PTR [RDX+4]
            sub ECX,3
            cmp CL,1
            jbe .L_407910
.L_4078f2:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_407921

            add RSP,24
.L_407906:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407910:

            cmp BYTE PTR [RDX+6],0
            jne .L_4078f2

            cmp BYTE PTR [RDX+7],2
            sbb EAX,EAX
            and EAX,56
            jmp .L_4078f2
.L_407921:

            call __stack_chk_fail@PLT
.L_407926:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407930:

            lea RAX,QWORD PTR [RIP+.L_443e9d]
            push RBX
.L_407938:

            mov ESI,1
            mov DWORD PTR [RDI+96],8
            mov QWORD PTR [RDI+48],0
            mov RBX,RDI
            mov QWORD PTR [RDI+88],RAX
            lea RAX,QWORD PTR [RIP+.L_407500]
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4074e0]
            mov QWORD PTR [RDI+64],RAX
            mov EDI,48
            call calloc@PLT

            test RAX,RAX
            je .L_407987

            mov QWORD PTR [RBX+80],RAX
            mov DWORD PTR [RAX+40],0
            xor EAX,EAX
            pop RBX
.L_407986:

            ret 
.L_407987:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_443e85]
            mov ESI,12
            call .L_432bc0

            mov EAX,4294967266
            pop RBX
            ret 
.L_4079a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4079b0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443eb8]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_4079c9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_407a48

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_407a48

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_443e9d]
            lea RDI,QWORD PTR [RIP+.L_407930]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_4078b0]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_407a2e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_407a4f

            add RSP,16
.L_407a42:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407a48:

            mov EAX,4294967266
            jmp .L_407a2e
.L_407a4f:

            call __stack_chk_fail@PLT
.L_407a54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a60:

            jmp .L_4079b0
.L_407a65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a70:

            lea R8,QWORD PTR [RIP+.L_4443a0]
            xor EAX,EAX
.L_407a79:

            cmp RAX,RSI
            jge .L_407af0

            movzx ECX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [R8+RCX*1]
.L_407a86:

            cmp CL,1
            je .L_407ab8

            jb .L_407ac8

            cmp CL,10
            je .L_407aa6

            cmp CL,13
            jne .L_407a86

            sub RSI,RAX
            cmp RSI,1
            je .L_407aa6

            cmp BYTE PTR [RDI+1],10
            je .L_407ae0
.L_407aa6:

            mov QWORD PTR [RDX],1
            add RAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ab8:

            add RDI,1
            add RAX,1
            jmp .L_407a79
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ac8:

            mov QWORD PTR [RDX],0
            mov RAX,-1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ae0:

            mov QWORD PTR [RDX],2
            add RAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407af0:

            mov QWORD PTR [RDX],0
            mov RAX,RSI
            ret 
.L_407afb:

            nop
            nop
            nop
            nop
            nop
.L_407b00:

            push R13
            lea RAX,QWORD PTR [RIP+.L_443ed8]
            push R12
            push RBP
            push RBX
            mov ESI,1
            mov RBP,RDI
            sub RSP,8
.L_407b19:

            mov QWORD PTR [RDI+88],RAX
            lea RAX,QWORD PTR [RIP+.L_4081f0]
            mov DWORD PTR [RDI+96],7
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_407bf0]
            mov QWORD PTR [RDI+64],RAX
            mov EDI,48
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            mov EDI,1024
            mov R12,RAX
            call malloc@PLT

            test RBX,RBX
            mov R13,RAX
            sete DL
            test R12,R12
            sete AL
            or DL,AL
            jne .L_407bb0

            test R13,R13
            je .L_407bb0

            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBX+8],R13
            xor EAX,EAX
            mov DWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+24],1024
            mov QWORD PTR [RBX+32],R12
            mov DWORD PTR [RBX+40],0
.L_407ba2:

            add RSP,8
.L_407ba6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407bb0:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_443f48]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov RDI,RBX
            call free@PLT

            mov RDI,R12
            call free@PLT

            mov RDI,R13
            call free@PLT

            mov EAX,4294967266
            jmp .L_407ba2
.L_407be6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407bf0:

            push RBX
            mov RBX,QWORD PTR [RDI+80]
            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+32]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_407c13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c20:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            mov R13,RDX
            mov R12,RCX
            sub RSP,24
.L_407c3a:

            mov RBX,QWORD PTR [RDX]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+8],R8
            test RBX,RBX
            jne .L_407d40

            mov QWORD PTR [R8],0
            xor EAX,EAX
.L_407c58:

            xor R9D,R9D
            jmp .L_407ca1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407c60:

            mov RDX,QWORD PTR [R13]
            mov R10,QWORD PTR [RSP+8]
            add RAX,RBP
            lea RDI,QWORD PTR [RAX+RBX*1]
            mov QWORD PTR [R15],RDX
            mov RDX,QWORD PTR [R13]
            mov QWORD PTR [R12],RDX
            mov RSI,QWORD PTR [R13]
            mov RDX,R10
            mov QWORD PTR [R14],RAX
            sub RSI,RBP
            mov QWORD PTR [R13],RSI
            sub RSI,RBX
            call .L_407a70

            add RBX,RAX
            test RAX,RAX
            cmovs RBX,RAX
            mov RAX,QWORD PTR [R10]
.L_407ca1:

            test RAX,RAX
            jne .L_407d2a

            test R9D,R9D
            mov RDX,QWORD PTR [R13]
            jne .L_407d2a

            cmp RDX,RBX
            jne .L_407d2a

            cmp QWORD PTR [R15],131071
            ja .L_407d2a

            mov RAX,QWORD PTR [R12]
            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RAX+1023]
            mov RBP,RAX
            add RAX,160
            sub RBP,RDX
            and ESI,4294966272
            lea RDX,QWORD PTR [RSI+RSI*1]
            cmp RAX,RSI
            cmova RSI,RDX
            mov RDX,R13
            call .L_404a00

            xor R9D,R9D
            test RAX,RAX
            mov QWORD PTR [R14],RAX
            jne .L_407c60

            mov RSI,QWORD PTR [R13]
            cmp QWORD PTR [R12],RSI
            jge .L_407d28

            mov RDI,QWORD PTR [RSP]
            mov RDX,R13
            call .L_404a00

            mov R9D,1
            jmp .L_407c60
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407d28:

            xor EBX,EBX
.L_407d2a:

            add RSP,24
.L_407d2e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407d40:

            mov R11,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14]
            mov RSI,RBX
            mov RDX,R11
            call .L_407a70

            mov RBX,RAX
            mov RAX,QWORD PTR [R11]
            jmp .L_407c58
.L_407d5e:

            nop
            nop
.L_407d60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov ESI,1
            sub RSP,72
.L_407d79:

            lea R12,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RDX,R12
            call .L_404a00

            test RAX,RAX
            mov QWORD PTR [RSP+16],RAX
            je .L_407ff8

            mov RAX,QWORD PTR [RSP+24]
            mov EBX,20
            lea R15,QWORD PTR [RSP+48]
            lea R14,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RAX
            jmp .L_407e13
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407dd8:

            cmp RCX,17
            jle .L_407df8

            movabs RDI,7017221121634690402
            cmp QWORD PTR [RDX],RDI
            je .L_408020

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407df8:

            xor EBX,EBX
            cmp QWORD PTR [RSP+48],131071
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RAX
            ja .L_407ff8
.L_407e13:

            mov RSI,QWORD PTR [RSP]
            mov R9,R15
            mov R8,R14
            mov RCX,R13
            mov RDX,R12
            mov RDI,RBP
            call .L_407c20

            test RAX,RAX
            js .L_407ff8

            mov RDX,QWORD PTR [RSP+40]
            test RDX,RDX
            je .L_407ff8

            mov RCX,RAX
            mov RDI,QWORD PTR [RSP+24]
            sub RCX,RDX
            mov RDX,QWORD PTR [RSP+16]
            sub RDI,RAX
            cmp RCX,10
            lea RSI,QWORD PTR [RDX+RAX*1]
            mov RAX,RDI
            jle .L_407df8

            cmp DWORD PTR [RDX],1768383842
            jne .L_407dd8

            cmp WORD PTR [RDX+4],8302
            mov EDI,6
            mov R10D,6
            jne .L_407dd8
.L_407e85:

            movzx ECX,BYTE PTR [RDX+RDI*1]
            sub ECX,48
            cmp CL,7
            ja .L_407df8

            movzx ECX,BYTE PTR [RDX+RDI*1+1]
            sub ECX,48
            cmp CL,7
            ja .L_407df8

            movzx ECX,BYTE PTR [RDX+RDI*1+2]
            sub ECX,48
            cmp CL,7
            ja .L_407df8

            cmp BYTE PTR [RDX+RDI*1+3],32
            jne .L_407df8

            test RAX,RAX
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RAX
            je .L_407ff8

            mov RSI,QWORD PTR [RSP]
            mov R9,R15
            mov R8,R14
            mov RCX,R13
            mov RDX,R12
            mov RDI,RBP
            mov DWORD PTR [RSP+12],R10D
            call .L_407c20

            test RAX,RAX
            js .L_407ff8

            mov RCX,QWORD PTR [RSP+40]
            test RCX,RCX
            je .L_407ff8

            mov RSI,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+12]
            sub RSI,RAX
            cmp R10D,6
            mov QWORD PTR [RSP+24],RSI
            je .L_408047

            cmp R10D,13
            jne .L_407ff8

            mov RDX,RAX
            mov RDI,QWORD PTR [RSP+16]
            sub RDX,RCX
            test RDX,RDX
            jle .L_4080ed

            lea RDX,QWORD PTR [RDI+1]
            lea R8,QWORD PTR [RIP+.L_4441a0]
            mov QWORD PTR [RSP+16],RDX
            movzx EDI,BYTE PTR [RDI]
            cmp BYTE PTR [R8+RDI*1],0
            je .L_407ff8

            sub RAX,1
            sub RAX,RCX
            jmp .L_407f82
.L_407f6a:

            add RDX,1
            sub RAX,1
            mov QWORD PTR [RSP+16],RDX
            movzx EDI,BYTE PTR [RDX-1]
            cmp BYTE PTR [R8+RDI*1],0
            je .L_407ff8
.L_407f82:

            test RAX,RAX
            jg .L_407f6a
.L_407f87:

            add RDX,RCX
            cmp RSI,4
            mov QWORD PTR [RSP+16],RDX
            jle .L_4080da

            cmp DWORD PTR [RDX],1027423549
            je .L_408109
.L_407fa5:

            cmp RSI,5
            je .L_407fb7

            cmp DWORD PTR [RDX],1027423549
            je .L_4080f5
.L_407fb7:

            movzx EAX,BYTE PTR [RDX]
            lea RDX,QWORD PTR [RIP+.L_4441a0]
            cmp BYTE PTR [RDX+RAX*1],0
            je .L_407ff8
.L_407fc7:

            lea EAX,DWORD PTR [RBX+30]
            jmp .L_407ffa
.L_407fcc:

            sub RAX,RCX
            sub RAX,1
            mov RAX,QWORD PTR [RSP+16]
            je .L_408115
.L_407fde:

            add RAX,RCX
            test RSI,RSI
            mov QWORD PTR [RSP+16],RAX
            je .L_407ff8

            movzx EAX,BYTE PTR [RAX]
            cmp BYTE PTR [R8+RAX*1],0
            jne .L_407fc7

            nop
            nop
            nop
.L_407ff8:

            xor EAX,EAX
.L_407ffa:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4080e8

            add RSP,72
.L_408012:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408020:

            cmp DWORD PTR [RDX+8],875980147
            jne .L_407df8

            cmp BYTE PTR [RDX+12],32
            jne .L_407df8

            mov EDI,13
            mov R10D,13
            jmp .L_407e85
.L_408047:

            mov R9,QWORD PTR [RSP+16]
            lea R8,QWORD PTR [RIP+.L_4442a0]
            movzx EDX,BYTE PTR [R9]
            cmp BYTE PTR [R8+RDX*1],0
            je .L_407ff8

            lea RDX,QWORD PTR [R9+1]
            mov QWORD PTR [RSP+16],RDX
            movzx EDX,BYTE PTR [R9]
            sub EDX,32
            and EDX,63
            cmp EDX,45
            jg .L_407ff8

            sub RAX,1
            movsxd RDI,EDX
            mov R10,RAX
            sub R10,RCX
            cmp RDI,R10
            jg .L_407ff8

            test EDX,EDX
            je .L_407fcc

            lea RDI,QWORD PTR [R9+2]
            mov QWORD PTR [RSP+16],RDI
            movzx R9D,BYTE PTR [R9+1]
            cmp BYTE PTR [R8+R9*1],0
            je .L_407ff8

            sub EDX,1
            add RDX,RDI
.L_4080b3:

            sub RAX,1
            cmp RDI,RDX
            je .L_407fcc

            add RDI,1
            mov QWORD PTR [RSP+16],RDI
            movzx R9D,BYTE PTR [RDI-1]
            cmp BYTE PTR [R8+R9*1],0
            jne .L_4080b3

            jmp .L_407ff8
.L_4080da:

            test RSI,RSI
            jg .L_407fb7

            jmp .L_407ff8
.L_4080e8:

            call __stack_chk_fail@PLT
.L_4080ed:

            mov RDX,RDI
            jmp .L_407f87
.L_4080f5:

            cmp WORD PTR [RDX+4],2573
            jne .L_407fb7
.L_408101:

            lea EAX,DWORD PTR [RBX+40]
            jmp .L_407ffa
.L_408109:

            cmp BYTE PTR [RDX+4],10
            jne .L_407fa5

            jmp .L_408101
.L_408115:

            movzx EDI,BYTE PTR [RAX]
            cmp BYTE PTR [R8+RDI*1],0
            mov RDX,RDI
            jne .L_40812e

            sub EDX,97
            cmp DL,25
            ja .L_407fde
.L_40812e:

            add RAX,1
            jmp .L_407fde
.L_408137:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408140:

            push R13
            push R12
            xor EAX,EAX
            push RBP
            push RBX
            sub RSP,8
.L_40814c:

            mov RBX,QWORD PTR [RSI+24]
            cmp RBX,RDX
            jae .L_4081aa

            nop
            nop
            nop
.L_408158:

            lea RAX,QWORD PTR [RBX+RBX*1]
            lea RCX,QWORD PTR [RBX+1024]
            cmp RBX,32767
            cmova RAX,RCX
            cmp RDX,RAX
            mov RBX,RAX
            ja .L_408158

            mov R12,RDI
            mov RDI,RAX
            mov RBP,RSI
            call malloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_4081c5

            movsxd RDX,DWORD PTR [RBP+16]
            mov R12,QWORD PTR [RBP+8]
            test EDX,EDX
            jne .L_4081b8
.L_408198:

            mov RDI,R12
            call free@PLT

            mov QWORD PTR [RBP+8],R13
            mov QWORD PTR [RBP+24],RBX
            xor EAX,EAX
.L_4081aa:

            add RSP,8
.L_4081ae:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4081b8:

            mov RSI,R12
            mov RDI,RAX
            call memmove@PLT

            jmp .L_408198
.L_4081c5:

            mov RDI,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_443f48]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4081aa
.L_4081e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4081f0:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_4441a0]
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_443fa0]
            push RBP
            push RBX
            sub RSP,104
.L_40820c:

            mov RAX,QWORD PTR [RDI+80]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+56],RSI
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+48],RAX
.L_408239:

            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+48]
            mov ESI,1
            mov RDI,QWORD PTR [RAX+16]
            call .L_404a00

            test RAX,RAX
            mov RCX,RAX
            je .L_408850

            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+40],RAX
.L_408267:

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX+40],4
            mov R14,QWORD PTR [RAX+32]
            je .L_40898b

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+40]
            movsxd RAX,DWORD PTR [RAX+16]
            test EAX,EAX
            jne .L_4087c0
.L_408290:

            test RSI,RSI
            jle .L_4089a0

            lea R10,QWORD PTR [RSP+80]
            xor EBP,EBP
            xor EBX,EBX
            mov R9,RCX
            mov QWORD PTR [RSP+16],R10
            mov R10,QWORD PTR [RSP+24]
            nop
.L_4082b0:

            mov RDX,QWORD PTR [RSP+16]
            sub RSI,RBX
            mov RDI,R9
            call .L_407a70

            test RAX,RAX
            js .L_408878

            mov RDX,QWORD PTR [RSP+80]
            mov ECX,DWORD PTR [R10+40]
            test RDX,RDX
            jne .L_408348

            cmp ECX,2
            jne .L_4088b9
.L_4082e0:

            mov RDI,RAX
            sub RDI,RDX
            cmp RDI,3
            jne .L_4082f8

            cmp WORD PTR [R9],28261
            je .L_4086b0
.L_4082f8:

            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_443efd]
            mov ESI,4294967295
            mov RDI,QWORD PTR [RAX+24]
            xor EAX,EAX
            call .L_432bc0
.L_408314:

            mov RBP,-30
.L_40831b:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4089fb

            add RSP,104
.L_408336:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408348:

            cmp ECX,2
            je .L_4082e0

            cmp ECX,3
            je .L_408478

            cmp ECX,1
            je .L_408410

            lea RCX,QWORD PTR [RBP+RAX*1]
            cmp RCX,131071
            jg .L_408959

            mov RDI,RAX
            sub RDI,RDX
            cmp RDI,10
            mov RDX,RDI
            jle .L_4083b0

            cmp DWORD PTR [R9],1768383842
            je .L_408740
.L_40838d:

            cmp RDX,17
            jle .L_4083b0

            movabs RDI,7017221121634690402
            cmp QWORD PTR [R9],RDI
            je .L_408820

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4083b0:

            mov RSI,QWORD PTR [RSP+72]
            add RBX,RAX
            add R9,RAX
            cmp RSI,RBX
            jg .L_4082b0

            mov RAX,QWORD PTR [RSP+32]
            mov R10,RBX
            mov RDI,QWORD PTR [RAX+16]
.L_4083d0:

            mov RBX,QWORD PTR [RSP+40]
            mov RAX,RSI
            mov RCX,R10
            sub RAX,RBX
            sub RCX,RAX
            cmp RBX,RSI
            cmovl R10,RCX
.L_4083e8:

            mov RSI,R10
            call .L_404a50

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RDI],RAX
            add QWORD PTR [RBX],RBP
            jmp .L_40831b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408410:

            lea RCX,QWORD PTR [RBP+RAX*2]
            cmp RCX,65536
            jg .L_408939

            movzx ECX,BYTE PTR [R9]
            mov RDI,RAX
            sub RDI,RDX
            mov RDX,RDI
            lea RDI,QWORD PTR [RIP+.L_4442a0]
            cmp BYTE PTR [RDI+RCX*1],0
            mov R11,RCX
            je .L_4082f8

            test RDX,RDX
            jle .L_4082f8

            sub R11D,32
            and R11D,63
            cmp RDX,R11
            jle .L_4082f8

            test R11,R11
            jne .L_408590

            mov DWORD PTR [R10+40],2
            jmp .L_4083b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408478:

            lea RCX,QWORD PTR [RBP+RAX*2]
            cmp RCX,65536
            jg .L_408939

            mov RDI,RAX
            sub RDI,RDX
            cmp RDI,2
            jle .L_4084b0

            cmp BYTE PTR [R9],61
            jne .L_4084b0

            cmp BYTE PTR [R9+1],61
            je .L_408720

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084b0:

            mov RCX,R9
            mov QWORD PTR [RSP+8],RAX
.L_4084b8:

            test RDI,RDI
            lea RSI,QWORD PTR [RDI-2]
            jle .L_40894f

            movzx R8D,BYTE PTR [RCX]
            cmp BYTE PTR [R15+R8*1],0
            mov RDX,R8
            je .L_4086d0

            movzx R11D,BYTE PTR [RCX+1]
            cmp BYTE PTR [R15+R11*1],0
            je .L_4086d0

            mov EDX,DWORD PTR [R13+R8*4]
            lea R12,QWORD PTR [RCX+2]
            shl EDX,18
            mov R8D,EDX
            mov EDX,DWORD PTR [R13+R11*4]
            shl EDX,12
            or EDX,R8D
            lea R8,QWORD PTR [R14+1]
            mov R11D,EDX
            sar R11D,16
            test RSI,RSI
            mov BYTE PTR [R14],R11B
            lea R11,QWORD PTR [RBP+1]
            jle .L_408588

            movzx ESI,BYTE PTR [RCX+2]
            cmp SIL,61
            je .L_4087b0

            cmp BYTE PTR [R15+RSI*1],0
            je .L_4082f8

            mov ESI,DWORD PTR [R13+RSI*4]
            lea R8,QWORD PTR [RBP+2]
            lea R11,QWORD PTR [RCX+3]
            shl ESI,6
            or EDX,ESI
            lea RSI,QWORD PTR [R14+2]
            cmp RDI,3
            mov BYTE PTR [RSI-1],DH
            jne .L_4086e8

            mov RAX,QWORD PTR [RSP+8]
            xor EDI,EDI
            mov RBP,R8
            mov R14,RSI
            mov RCX,R11
.L_408564:

            mov RSI,RDI
            mov R11,RBP
            mov R8,R14
            mov R12,RCX
.L_408570:

            test RSI,RSI
            jne .L_408a12

            mov RBP,R11
            mov R14,R8
            jmp .L_4083b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408588:

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_408570
          .byte 0x90
.L_408590:

            movzx EDX,BYTE PTR [R9+1]
            cmp BYTE PTR [RDI+RDX*1],0
            mov RSI,RDX
            je .L_4082f8

            movzx ECX,BYTE PTR [R9+2]
            cmp BYTE PTR [RDI+RCX*1],0
            mov RDX,RCX
            je .L_4082f8

            lea RDI,QWORD PTR [R14+R11*1-1]
            lea R8,QWORD PTR [R14+R11*1]
            lea RCX,QWORD PTR [R9+1]
            lea R11,QWORD PTR [R14+R11*1-2]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40866d
.L_4085d0:

            movzx R12D,BYTE PTR [RCX+2]
            lea RAX,QWORD PTR [RIP+.L_4442a0]
            cmp BYTE PTR [RAX+R12*1],0
            mov RSI,R12
            je .L_4082f8

            sub ESI,32
            shl ESI,6
            and ESI,4032
            or EDX,ESI
            cmp R11,R14
            movzx EAX,DH
            mov BYTE PTR [R14+1],AL
            je .L_408a00

            movzx R12D,BYTE PTR [RCX+3]
            lea RAX,QWORD PTR [RIP+.L_4442a0]
            cmp BYTE PTR [RAX+R12*1],0
            mov RSI,R12
            je .L_4082f8

            sub ESI,32
            add R14,3
            add RCX,4
            and ESI,63
            add RBP,3
            or EDX,ESI
            cmp R14,R8
            mov BYTE PTR [R14-1],DL
            je .L_408981

            movzx EDX,BYTE PTR [RCX]
            lea RAX,QWORD PTR [RIP+.L_4442a0]
            cmp BYTE PTR [RAX+RDX*1],0
            mov RSI,RDX
            je .L_4082f8

            movzx R12D,BYTE PTR [RCX+1]
            cmp BYTE PTR [RAX+R12*1],0
            mov RDX,R12
            je .L_4082f8
.L_40866d:

            sub ESI,32
            sub EDX,32
            shl ESI,18
            shl EDX,12
            and ESI,16515072
            and EDX,258048
            or EDX,ESI
            mov ESI,EDX
            sar ESI,16
            cmp R14,RDI
            mov BYTE PTR [R14],SIL
            jne .L_4085d0

            mov RAX,QWORD PTR [RSP+8]
            add R14,1
            add RBP,1
            jmp .L_4083b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4086b0:

            cmp BYTE PTR [R9+2],100
            jne .L_4082f8

            mov DWORD PTR [R10+40],0
            jmp .L_4083b0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4086d0:

            mov RAX,QWORD PTR [RSP+8]
.L_4086d5:

            cmp DL,61
            je .L_4083b0

            jmp .L_4082f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4086e8:

            movzx R11D,BYTE PTR [RCX+3]
            cmp R11B,61
            je .L_4089b3

            cmp BYTE PTR [R15+R11*1],0
            je .L_4082f8

            or EDX,DWORD PTR [R13+R11*4]
            add RCX,4
            add RBP,3
            sub RDI,4
            add R14,3
            mov BYTE PTR [R14-1],DL
            jmp .L_4084b8
.L_408720:

            cmp BYTE PTR [R9+2],61
            jne .L_4084b0

            mov DWORD PTR [R10+40],0
            jmp .L_4083b0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408740:

            cmp WORD PTR [R9+4],8302
            mov ECX,6
            mov ESI,6
            jne .L_40838d
.L_408757:

            movzx EDI,BYTE PTR [R9+RCX*1]
            lea EDX,DWORD PTR [RDI-48]
            cmp DL,7
            ja .L_4083b0

            movzx EDI,BYTE PTR [R9+RCX*1+1]
            lea EDX,DWORD PTR [RDI-48]
            cmp DL,7
            ja .L_4083b0

            movzx EDI,BYTE PTR [R9+RCX*1+2]
            lea EDX,DWORD PTR [RDI-48]
            cmp DL,7
            ja .L_4083b0

            cmp BYTE PTR [R9+RCX*1+3],32
            jne .L_4083b0

            xor EDX,EDX
            cmp RSI,6
            setne DL
            lea EDX,DWORD PTR [RDX+RDX*1+1]
            mov DWORD PTR [R10+40],EDX
            jmp .L_4083b0
          .byte 0x66
          .byte 0x90
.L_4087b0:

            mov RAX,QWORD PTR [RSP+8]
            mov RBP,R11
            mov R14,R8
            jmp .L_4083b0
.L_4087c0:

            lea RDX,QWORD PTR [RAX+RSI*1]
            mov RAX,QWORD PTR [RSP+32]
            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+8],RCX
            lea RDI,QWORD PTR [RAX+24]
            mov RSI,RBX
            call .L_408140

            test EAX,EAX
            jne .L_408314

            movsxd RDI,DWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+8]
            add RDI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,RCX
            call memcpy@PLT

            movsxd RSI,DWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RBX+8]
            add RSI,QWORD PTR [RSP+72]
            mov DWORD PTR [RBX+16],0
            mov QWORD PTR [RSP+72],RSI
            jmp .L_408290
          .byte 0x90
.L_408820:

            cmp DWORD PTR [R9+8],875980147
            jne .L_4083b0

            cmp BYTE PTR [R9+12],32
            jne .L_4083b0

            mov ECX,13
            mov ESI,13
            jmp .L_408757
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408850:

            cmp QWORD PTR [RSP+72],0
            js .L_408314

            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+40],0
            jmp .L_408267
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408878:

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+40]
            test EDX,EDX
            jne .L_4082f8

            cmp QWORD PTR [RAX],0
            jg .L_408897

            test RBP,RBP
            je .L_4082f8
.L_408897:

            mov RAX,QWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP+72]
            mov DWORD PTR [RAX+40],4
            mov RAX,QWORD PTR [RSP+32]
            mov RSI,R10
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_4083d0
.L_4088b9:

            test RBP,RBP
            mov R12,RAX
            mov RCX,R9
            jne .L_4088d0

            cmp QWORD PTR [RSP+40],0
            jle .L_4089c3
.L_4088d0:

            mov RAX,QWORD PTR [RSP+32]
            mov R14,QWORD PTR [RSP+24]
            mov RDX,R12
            mov QWORD PTR [RSP+8],RCX
            lea RDI,QWORD PTR [RAX+24]
            mov RSI,R14
            call .L_408140

            test EAX,EAX
            jne .L_408314

            mov RDI,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RSP+8]
            cmp RDI,RCX
            je .L_40890f

            mov RDX,R12
            mov RSI,RCX
            call memmove@PLT
.L_40890f:

            mov RAX,QWORD PTR [RSP+24]
            test RBP,RBP
            mov DWORD PTR [RAX+16],R12D
            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX+16]
            jne .L_4089eb

            mov RSI,QWORD PTR [RSP+40]
            call .L_404a50

            jmp .L_408239
.L_408939:

            mov RAX,QWORD PTR [RSP+32]
            mov R10,RBX
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_4083d0
.L_40894f:

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_408564
.L_408959:

            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_443f2e]
            mov ESI,84
            mov RBP,-30
            mov RDI,QWORD PTR [RAX+24]
            xor EAX,EAX
            call .L_432bc0

            jmp .L_40831b
.L_408981:

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4083b0
.L_40898b:

            mov RAX,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            xor EBP,EBP
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_4083e8
.L_4089a0:

            mov RAX,QWORD PTR [RSP+32]
            xor EBP,EBP
            xor R10D,R10D
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_4083d0
.L_4089b3:

            mov RAX,QWORD PTR [RSP+8]
            mov RBP,R8
            mov R14,RSI
            jmp .L_4083b0
.L_4089c3:

            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_443f1a]
            mov ESI,84
            mov RBP,-30
            mov RDI,QWORD PTR [RAX+24]
            xor EAX,EAX
            call .L_432bc0

            jmp .L_40831b
.L_4089eb:

            mov R10,RBX
            mov RSI,QWORD PTR [RSP+72]
            add R10,R12
            jmp .L_4083d0
.L_4089fb:

            call __stack_chk_fail@PLT
.L_408a00:

            mov RAX,QWORD PTR [RSP+8]
            add R14,2
            add RBP,2
            jmp .L_4083b0
.L_408a12:

            movzx EDX,BYTE PTR [R12]
            mov RBP,R11
            mov R14,R8
            jmp .L_4086d5
.L_408a22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408a30:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_443f70]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_408a49:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_408ac8

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_408ac8

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_443ed8]
            lea RDI,QWORD PTR [RIP+.L_407b00]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_407d60]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_408aae:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_408acf

            add RSP,16
.L_408ac2:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408ac8:

            mov EAX,4294967266
            jmp .L_408aae
.L_408acf:

            call __stack_chk_fail@PLT
.L_408ad4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408ae0:

            jmp .L_408a30
.L_408ae5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408af0:

            push RBX
            mov RBX,QWORD PTR [RDI+80]
            mov RDI,RBX
            call lzma_end@PLT

            mov RDI,QWORD PTR [RBX+136]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_408b15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408b20:

            sub RSP,24
.L_408b24:

            mov RDI,RSI
            mov ESI,14
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_408bb8

            movzx ECX,BYTE PTR [RDX]
            cmp CL,224
            ja .L_408bb8

            sub ECX,93
            cmp CL,2
            setb CL
            movzx ECX,CL
            shl ECX,3
            cmp QWORD PTR [RDX+5],-1
            jne .L_408b6f

            add ECX,64
.L_408b6f:

            mov EDX,DWORD PTR [RDX+1]
            cmp EDX,524288
            je .L_408bb0

            jbe .L_408bd8

            cmp EDX,8388608
            je .L_408bb0

            jbe .L_408c40

            cmp EDX,33554432
            je .L_408bb0

            jbe .L_408c68

            cmp EDX,67108864
            je .L_408bb0

            cmp EDX,134217728
            jne .L_408bfa

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408bb0:

            lea EAX,DWORD PTR [RCX+32]
            nop
            nop
            nop
            nop
            nop
.L_408bb8:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_408c75

            add RSP,24
.L_408bd0:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408bd8:

            cmp EDX,32768
            je .L_408bb0

            ja .L_408c20

            cmp EDX,8192
            je .L_408bb0

            cmp EDX,16384
            je .L_408bb0

            cmp EDX,4096
            je .L_408bb0
.L_408bfa:

            lea ESI,DWORD PTR [RDX-3145728]
            xor EAX,EAX
            cmp ESI,62914560
            ja .L_408bb8

            and EDX,1048575
            jne .L_408c1c

            cmp ECX,72
            mov EAX,104
            je .L_408bb8
.L_408c1c:

            xor EAX,EAX
            jmp .L_408bb8
.L_408c20:

            cmp EDX,131072
            je .L_408bb0

            cmp EDX,262144
            je .L_408bb0

            cmp EDX,65536
            jne .L_408bfa

            jmp .L_408bb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408c40:

            cmp EDX,2097152
            je .L_408bb0

            cmp EDX,4194304
            je .L_408bb0

            cmp EDX,1048576
            jne .L_408bfa

            jmp .L_408bb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408c68:

            cmp EDX,16777216
            jne .L_408bfa

            jmp .L_408bb0
.L_408c75:

            call __stack_chk_fail@PLT
.L_408c7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408c80:

            sub RSP,24
.L_408c84:

            mov ESI,6
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_408cb9

            cmp DWORD PTR [RDX],1346984524
            jne .L_408cb9

            cmp BYTE PTR [RDX+4],1
            jbe .L_408cd0
.L_408cb9:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_408ce4

            add RSP,24
.L_408ccd:

            ret 
          .byte 0x66
          .byte 0x90
.L_408cd0:

            movzx EAX,BYTE PTR [RDX+5]
            and EAX,31
            sub EAX,12
            cmp EAX,16
            sbb EAX,EAX
            and EAX,48
            jmp .L_408cb9
.L_408ce4:

            call __stack_chk_fail@PLT
.L_408ce9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408cf0:

            mov RDI,RSI
            jmp .L_408c80
.L_408cf5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408d00:

            sub RSP,24
.L_408d04:

            mov RDI,RSI
            mov ESI,6
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a00

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_408d38

            cmp DWORD PTR [RDX],1484404733
            je .L_408d50
.L_408d36:

            xor EAX,EAX
.L_408d38:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_408d5e

            add RSP,24
.L_408d4c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408d50:

            cmp WORD PTR [RDX+4],90
            mov EAX,48
            jne .L_408d36

            jmp .L_408d38
.L_408d5e:

            call __stack_chk_fail@PLT
.L_408d63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408d70:

            cmp ESI,10
            ja .L_408e50

            lea RDX,QWORD PTR [RIP+.L_4444a8]
            mov ESI,ESI
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d90:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_4445b8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408db0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408db8:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_4444d8]
            mov ESI,12
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0x66
          .byte 0x90
.L_408dd0:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_444508]
            mov ESI,12
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408df0:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_444530]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e10:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_444560]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e30:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_444588]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e50:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_4445e8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
.L_408e66:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408e70:

            push R12
            push RBP
            mov ESI,1
            push RBX
.L_408e79:

            mov RBP,RDI
            mov EDI,184
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            test RBX,RBX
            mov R12,RAX
            je .L_408f5e

            test RAX,RAX
            je .L_408f5e

            mov QWORD PTR [RBX+136],RAX
            lea RAX,QWORD PTR [RIP+.L_409020]
            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBX+144],65536
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_408af0]
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+24],R12
            mov QWORD PTR [RBX+32],65536
            mov QWORD PTR [RBP+64],RAX
            mov EAX,DWORD PTR [RBP+96]
            mov DWORD PTR [RBX+164],0
            cmp EAX,9
            je .L_408f50

            cmp EAX,6
            mov BYTE PTR [RBX+161],1
            je .L_408f30

            mov RSI,-1
            mov RDI,RBX
            call lzma_alone_decoder@PLT
.L_408f1d:

            test EAX,EAX
            jne .L_408f8c
.L_408f21:

            pop RBX
.L_408f22:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408f30:

            mov EDX,8
            mov RSI,-1
            mov RDI,RBX
            call lzma_stream_decoder@PLT

            jmp .L_408f1d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408f50:

            mov BYTE PTR [RBX+161],0
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_408f5e:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_444618]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov EAX,4294967266
            jmp .L_408f21
.L_408f8c:

            lea RDI,QWORD PTR [RBP+24]
            mov ESI,EAX
            call .L_408d70

            mov RDI,QWORD PTR [RBX+136]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov QWORD PTR [RBP+80],0
            mov EAX,4294967266
            jmp .L_408f21
.L_408fbd:

            nop
            nop
            nop
.L_408fc0:

            lea RAX,QWORD PTR [RIP+.L_447c93]
            mov DWORD PTR [RDI+96],6
            mov QWORD PTR [RDI+88],RAX
            jmp .L_408e70
.L_408fd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408fe0:

            lea RAX,QWORD PTR [RIP+.L_447c80]
            mov DWORD PTR [RDI+96],5
            mov QWORD PTR [RDI+88],RAX
            jmp .L_408e70
.L_408ff7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409000:

            lea RAX,QWORD PTR [RIP+.L_4446d9]
            mov DWORD PTR [RDI+96],9
            mov QWORD PTR [RDI+88],RAX
            jmp .L_408e70
.L_409017:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409020:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_40902e:

            mov R13,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov RAX,QWORD PTR [R13+136]
            mov QWORD PTR [R13+24],RAX
            mov RAX,QWORD PTR [R13+144]
            test RAX,RAX
            mov QWORD PTR [R13+32],RAX
            je .L_4093d0

            cmp BYTE PTR [R13+160],0
            jne .L_4093d0

            lea RAX,QWORD PTR [RSP+40]
            mov RBX,RDI
            movabs R15,4611686018427387905
            mov R14,-1
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+83]
            mov QWORD PTR [RSP+16],RAX
.L_40909c:

            cmp BYTE PTR [R13+161],0
            mov RDI,QWORD PTR [RBX+16]
            jne .L_4091a6

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,6
            mov RBP,QWORD PTR [RBX+80]
            call .L_404a00

            test RAX,RAX
            je .L_409373

            movzx EDX,BYTE PTR [RAX+4]
            mov BYTE PTR [RSP+83],93
            mov BYTE PTR [RBP+162],DL
            movzx EDX,BYTE PTR [RAX+5]
            mov ECX,EDX
            and ECX,31
            movzx EAX,CL
            sub EAX,12
            cmp EAX,15
            ja .L_409373

            mov EAX,1
            shl EAX,CL
            cmp CL,12
            jbe .L_40910d

            mov ECX,EAX
            shr DL,5
            shr ECX,4
            movzx EDX,DL
            imul EDX,ECX
            sub EAX,EDX
.L_40910d:

            mov RDI,QWORD PTR [RBX+16]
            mov EDX,EAX
            mov BYTE PTR [RSP+84],AL
            shr EDX,16
            mov BYTE PTR [RSP+85],AH
            mov ESI,6
            shr EAX,24
            mov BYTE PTR [RSP+86],DL
            lea R12,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+87],AL
            call .L_404a50

            mov RDX,QWORD PTR [RSP+16]
            xor ESI,ESI
            mov QWORD PTR [RBP+168],6
            mov ECX,5
            mov RDI,R12
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],R14
            mov QWORD PTR [RSP+72],0
            call lzma_properties_decode@PLT

            test EAX,EAX
            jne .L_409368

            mov RDI,RBP
            mov RSI,R12
            call lzma_raw_decoder@PLT

            mov RDI,QWORD PTR [RSP+56]
            mov EBP,EAX
            call free@PLT

            test EBP,EBP
            jne .L_4093e0

            mov BYTE PTR [R13+161],1
            mov RDI,QWORD PTR [RBX+16]
.L_4091a6:

            lea RDX,QWORD PTR [RSP+32]
            mov ESI,1
            call .L_404a00

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP+32]
            je .L_4093a0
.L_4091c7:

            cmp RAX,1
            mov QWORD PTR [R13+8],RAX
            mov RDI,R13
            sbb ESI,ESI
            and ESI,3
            call lzma_code@PLT

            test EAX,EAX
            je .L_4091f1

            cmp EAX,1
            jne .L_409368

            mov BYTE PTR [R13+160],1
.L_4091f1:

            mov RSI,QWORD PTR [RSP+32]
            sub RSI,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RBX+16]
            call .L_404a50

            mov RAX,QWORD PTR [R13+168]
            sub RAX,QWORD PTR [R13+8]
            add RAX,QWORD PTR [RSP+32]
            cmp QWORD PTR [R13+32],0
            mov QWORD PTR [R13+168],RAX
            je .L_40922f

            cmp BYTE PTR [R13+160],0
            je .L_40909c
.L_40922f:

            mov RAX,QWORD PTR [R13+136]
            mov RBP,QWORD PTR [R13+24]
            sub RBP,RAX
            add QWORD PTR [R13+152],RBP
            add QWORD PTR [R13+176],RBP
            test RBP,RBP
            je .L_4093d2

            cmp DWORD PTR [RBX+96],9
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RCX],RAX
            jne .L_40937a

            mov EDX,DWORD PTR [R13+164]
            mov RDI,QWORD PTR [R13+136]
            mov RSI,RBP
            call lzma_crc32@PLT

            cmp BYTE PTR [R13+160],0
            mov DWORD PTR [R13+164],EAX
            je .L_40937a

            mov R13,QWORD PTR [RBX+80]
            mov RDI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RSP+40]
            cmp BYTE PTR [R13+162],1
            sbb R14,R14
            and R14,-8
            add R14,20
            cmp BYTE PTR [R13+162],1
            mov RSI,R14
            sbb R12D,R12D
            and R12D,4294967288
            add R12D,20
            call .L_404a00

            test RAX,RAX
            je .L_4093f4

            movsxd RSI,R12D
            cmp RSI,QWORD PTR [RSP+40]
            jg .L_409400

            mov ECX,DWORD PTR [RAX]
            cmp DWORD PTR [R13+164],ECX
            jne .L_409447

            mov RCX,QWORD PTR [RAX+4]
            cmp QWORD PTR [R13+176],RCX
            jne .L_409426

            cmp BYTE PTR [R13+162],1
            jne .L_40931e

            add R14,QWORD PTR [R13+168]
            cmp R14,QWORD PTR [RAX+12]
            jne .L_409468
.L_40931e:

            mov RDI,QWORD PTR [RBX+16]
            call .L_404a50

            mov RDI,QWORD PTR [RBX+16]
            call .L_408c80

            test EAX,EAX
            je .L_40937a

            xor EAX,EAX
            mov DWORD PTR [R13+164],0
            mov QWORD PTR [R13+176],0
            mov QWORD PTR [R13+168],0
            mov WORD PTR [R13+160],AX
            jmp .L_40937a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409368:

            lea RDI,QWORD PTR [RBX+24]
            mov ESI,EAX
            call .L_408d70
.L_409373:

            mov RBP,-30
.L_40937a:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_409421

            add RSP,104
.L_409395:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4093a0:

            test RAX,RAX
            jns .L_4091c7

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_4446de]
            mov ESI,4294967295
            xor EAX,EAX
            mov RBP,-30
            call .L_432bc0

            jmp .L_40937a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4093d0:

            xor EBP,EBP
.L_4093d2:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],0
            jmp .L_40937a
.L_4093e0:

            lea RDI,QWORD PTR [RBX+24]
            mov ESI,EBP
            mov RBP,-30
            call .L_408d70

            jmp .L_40937a
.L_4093f4:

            cmp QWORD PTR [RSP+40],0
            js .L_409373
.L_409400:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_444648]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_432bc0

            jmp .L_40937a
.L_409421:

            call __stack_chk_fail@PLT
.L_409426:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_444700]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_432bc0

            jmp .L_40937a
.L_409447:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_4446ee]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_432bc0

            jmp .L_40937a
.L_409468:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_44471e]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_432bc0

            jmp .L_40937a
.L_409489:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409490:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_444670]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_4094a9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_409528

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_409528

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_447c93]
            lea RDI,QWORD PTR [RIP+.L_408fc0]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_408d00]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40950e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40952f

            add RSP,16
.L_409522:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409528:

            mov EAX,4294967266
            jmp .L_40950e
.L_40952f:

            call __stack_chk_fail@PLT
.L_409534:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409540:

            jmp .L_409490
.L_409545:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409550:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_444690]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_409569:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_4095e8

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_4095e8

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_447c80]
            lea RDI,QWORD PTR [RIP+.L_408fe0]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_408b20]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_4095ce:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4095ef

            add RSP,16
.L_4095e2:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4095e8:

            mov EAX,4294967266
            jmp .L_4095ce
.L_4095ef:

            call __stack_chk_fail@PLT
.L_4095f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409600:

            jmp .L_409550
.L_409605:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409610:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_4446b8]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_409629:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_436df0

            cmp EAX,-30
            je .L_4096a8

            mov RSI,RSP
            mov RDI,RBX
            call .L_404950

            test EAX,EAX
            jne .L_4096a8

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_4446d9]
            lea RDI,QWORD PTR [RIP+.L_409000]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_408cf0]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40968e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4096af

            add RSP,16
.L_4096a2:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4096a8:

            mov EAX,4294967266
            jmp .L_40968e
.L_4096af:

            call __stack_chk_fail@PLT
.L_4096b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4096c0:

            jmp .L_409610
.L_4096c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4096d0:

            push RBX
.L_4096d1:

            lea RCX,QWORD PTR [RIP+.L_444738]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_409761

            mov RDI,RBX
            call .L_40a280

            mov RDI,RBX
            call .L_410620

            mov RDI,RBX
            call .L_410750

            mov RDI,RBX
            call .L_418140

            mov RDI,RBX
            call .L_41b0c0

            mov RDI,RBX
            call .L_4232f0

            mov RDI,RBX
            call .L_429090

            mov RDI,RBX
            call .L_424050

            mov RDI,RBX
            call .L_4431c0

            mov RDI,RBX
            call .L_40ee00

            mov RDI,RBX
            call .L_41f280

            mov RDI,RBX
            call .L_4144d0

            mov RDI,RBX
            call .L_42d1d0

            mov RDI,RBX
            call .L_432ba0

            xor EAX,EAX
.L_409761:

            pop RBX
.L_409762:

            ret 
.L_409763:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409770:

            movzx EAX,BYTE PTR [RDI]
            cmp AL,32
            je .L_40977f

            cmp AL,9
            jne .L_409810
.L_40977f:

            sub ESI,1
            jmp .L_409794
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409788:

            sub ESI,1
            cmp ESI,-1
            je .L_409838
.L_409794:

            add RDI,1
            movzx EAX,BYTE PTR [RDI]
            cmp AL,32
            je .L_409788

            cmp AL,9
            je .L_409788

            movsx EDX,AL
            sub EDX,48
            cmp AL,47
            jle .L_409830

            cmp EDX,9
            ja .L_409830

            test ESI,ESI
            lea EAX,DWORD PTR [RSI-1]
            je .L_409830
.L_4097bd:

            mov ESI,EAX
            xor EAX,EAX
            lea R8,QWORD PTR [RDI+RSI*1+1]
            movabs RSI,1844674407370955161
.L_4097d0:

            lea RAX,QWORD PTR [RAX+RAX*4]
            add RDI,1
            lea RAX,QWORD PTR [RDX+RAX*2]
            movsx EDX,BYTE PTR [RDI]
            mov ECX,EDX
            sub EDX,48
            sub ECX,48
            cmp CL,9
            ja .L_409832

            cmp RDI,R8
            je .L_409858

            cmp RAX,RSI
            ja .L_409800

            cmp EDX,5
            jbe .L_4097d0

            cmp RAX,RSI
            jne .L_4097d0
.L_409800:

            mov RAX,-1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409810:

            movsx EDX,AL
            sub EDX,48
            cmp AL,47
            jle .L_409830

            cmp EDX,9
            lea EAX,DWORD PTR [RSI-1]
            setbe CL
            test CL,CL
            jne .L_4097bd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409830:

            xor EAX,EAX
.L_409832:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409838:

            movsx EDX,AL
            sub EDX,48
            cmp AL,47
            jle .L_409830

            cmp EDX,9
            mov EAX,4294967294
            jbe .L_4097bd

            xor EAX,EAX
            jmp .L_409832
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409858:

            ret 
.L_40985a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_409860:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBP+32]
            test RDI,RDI
            je .L_409881

            call free@PLT
.L_409881:

            mov RDI,RBP
            call free@PLT

            mov RAX,QWORD PTR [RBX+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_4098a0:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+24]
            add RSI,QWORD PTR [RBX]
            add RSI,QWORD PTR [RBX+8]
            call .L_404a20

            test RAX,RAX
            js .L_4098e0

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            mov QWORD PTR [RBX+24],0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4098e0:

            mov EAX,4294967266
            pop RBX
            ret 
.L_4098e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4098f0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RDI
            mov R13,RCX
            sub RSP,16
.L_409908:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+8]
            test RSI,RSI
            jne .L_4099e0
.L_40992f:

            cmp QWORD PTR [RBX],0
            jle .L_4099a0

            mov RDX,RSP
            mov ESI,1
            mov RDI,RBP
            call .L_4049d0

            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            je .L_409a29

            js .L_409a0e

            cmp QWORD PTR [RBX],RAX
            cmovle RAX,QWORD PTR [RBX]
            mov QWORD PTR [R12],RAX
            mov RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            mov QWORD PTR [R13],RDX
            add QWORD PTR [RBX+16],RAX
            sub QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_40997b:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_409a47

            add RSP,16
.L_409993:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4099a0:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,RBP
            call .L_404a20

            test RAX,RAX
            js .L_409a20

            mov RCX,QWORD PTR [RBX+24]
            sub RCX,RAX
            test RCX,RCX
            mov QWORD PTR [RBX+24],RCX
            jne .L_4099f8
.L_4099c1:

            mov QWORD PTR [R14],0
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [R13],RAX
            mov EAX,1
            jmp .L_40997b
          .byte 0x90
.L_4099e0:

            call .L_404a20

            mov QWORD PTR [RBX+8],0
            jmp .L_40992f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4099f8:

            lea RDX,QWORD PTR [RIP+.L_444820]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_409a0e:

            mov EAX,4294967266
            jmp .L_40997b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409a20:

            cmp QWORD PTR [RBX+24],0
            jne .L_409a0e

            jmp .L_4099c1
.L_409a29:

            lea RDX,QWORD PTR [RIP+.L_444758]
            mov ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40997b
.L_409a47:

            call __stack_chk_fail@PLT
.L_409a4c:

            nop
            nop
            nop
            nop
.L_409a50:

            sub RSP,8
            xor EDX,EDX
            mov ESI,8
            call .L_4049d0

            test RAX,RAX
            je .L_409a84

            movabs RDX,738142165265366049
            cmp QWORD PTR [RAX],RDX
            mov EAX,4294967295
            mov EDX,64
            cmove EAX,EDX
.L_409a7f:

            add RSP,8
            ret 
.L_409a84:

            mov EAX,4294967295
            jmp .L_409a7f
.L_409a8b:

            nop
            nop
            nop
            nop
            nop
.L_409a90:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_409a97:

            lea RDI,QWORD PTR [RDX+16]
            mov RBX,RSI
            mov ESI,12
            mov R12,RDX
            call .L_409770

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBX
            call .L_4392c0

            lea RDI,QWORD PTR [R12+28]
            mov ESI,6
            call .L_409770

            mov RDI,RBX
            mov ESI,EAX
            call .L_439670

            lea RDI,QWORD PTR [R12+34]
            mov ESI,6
            call .L_409770

            mov RDI,RBX
            mov ESI,EAX
            call .L_438cc0

            movzx R8D,BYTE PTR [R12+40]
            lea RAX,QWORD PTR [R12+40]
            cmp R8B,32
            je .L_409b05

            cmp R8B,9
            jne .L_409c10
.L_409b05:

            add R12,48
            mov ESI,7
            mov RDI,R12
            jmp .L_409b24
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409b18:

            sub ESI,1
            cmp RAX,R12
            je .L_409bd8
.L_409b24:

            add RAX,1
            movzx R8D,BYTE PTR [RAX]
            cmp R8B,32
            je .L_409b18

            cmp R8B,9
            je .L_409b18

            movsx ECX,R8B
            sub R8D,48
            sub ECX,48
            cmp R8B,7
            ja .L_409c00

            test ESI,ESI
            lea EDX,DWORD PTR [RSI-1]
            je .L_409b97
.L_409b54:

            lea RDX,QWORD PTR [RAX+RDX*1+1]
            xor ESI,ESI
            movabs R8,2305843009213693951
            jmp .L_409b7e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409b70:

            cmp RAX,RDX
            je .L_409b97

            cmp RSI,R8
            ja .L_409c08
.L_409b7e:

            add RAX,1
            lea RSI,QWORD PTR [RCX+RSI*8]
            movsx ECX,BYTE PTR [RAX]
            mov EDI,ECX
            sub ECX,48
            sub EDI,48
            cmp DIL,7
            jbe .L_409b70
.L_409b97:

            mov RDI,RBX
            call .L_4392b0

            mov RDI,R12
            mov ESI,10
            call .L_409770

            mov R12,RAX
            and EAX,1
            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],RAX
            mov RSI,R12
            mov RDI,RBX
            call .L_439490

            mov QWORD PTR [RBP],R12
            xor EAX,EAX
            pop RBX
.L_409bd0:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409bd8:

            mov EDX,4294967295
.L_409bdd:

            movsx ECX,R8B
            sub ECX,48
            cmp R8B,47
            jle .L_409c00

            cmp ECX,7
            mov RAX,RDI
            setbe SIL
            sub EDX,1
            test SIL,SIL
            jne .L_409b54
.L_409c00:

            xor ESI,ESI
            jmp .L_409b97
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409c08:

            mov ESI,4294967295
            jmp .L_409b97
          .byte 0x90
.L_409c10:

            mov RDI,RAX
            mov EDX,8
            add R12,48
            jmp .L_409bdd
.L_409c1e:

            nop
            nop
.L_409c20:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,40
.L_409c34:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R13,QWORD PTR [RAX]
            cmp BYTE PTR [R13+48],0
            je .L_409e08
.L_409c59:

            xor EDX,EDX
            mov ESI,60
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            mov EBX,1
            je .L_409de0

            lea RSI,QWORD PTR [RAX+58]
            lea RDI,QWORD PTR [RIP+.L_44476d]
            mov ECX,2

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a1c2

            mov RBP,RSP
            mov EDX,16
            mov RSI,R15
            mov RDI,RBP
            call strncpy@PLT

            mov EAX,DWORD PTR [R12+16]
            mov BYTE PTR [RSP+16],0
            cmp EAX,458752
            je .L_409ee0

            cmp EAX,458753
            je .L_409f1d

            cmp EAX,458754
            je .L_40a1a9
.L_409cd6:

            lea RAX,QWORD PTR [RIP+.L_4460bd]
            mov QWORD PTR [R12+24],RAX
.L_409ce2:

            lea RAX,QWORD PTR [RBP+15]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409cf0:

            cmp BYTE PTR [RAX],32
            jne .L_409e28

            mov BYTE PTR [RAX],0
            sub RAX,1
            cmp RAX,RBP
            jae .L_409cf0
.L_409d05:

            lea RDX,QWORD PTR [RIP+.L_444870]
.L_409d0c:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967266
            jmp .L_409ec5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409d28:

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_409a90

            lea RDI,QWORD PTR [R15+3]
            mov ESI,13
            call .L_409770

            cmp RAX,1048576
            mov RBP,RAX
            ja .L_40a1eb

            mov RSI,QWORD PTR [R13]
            cmp RSI,RAX
            jl .L_40a1eb

            sub RSI,RAX
            mov RDI,R14
            mov QWORD PTR [R13],RSI
            call .L_439490

            mov ESI,60
            mov RDI,R12
            call .L_404a20

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_40a236

            lea RDI,QWORD PTR [RBP+1]
            call malloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_40a216

            mov RDX,RBP
            mov RSI,R15
            mov RDI,RAX
            call strncpy@PLT

            mov RSI,RBP
            mov RDI,R12
            mov BYTE PTR [R13+RBP*1],0
            call .L_404a20

            mov RDI,R14
            mov RSI,R13
            call .L_439380

            mov RDI,R13
            call free@PLT

            nop
            nop
            nop
            nop
.L_409de0:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40a274

            add RSP,40
.L_409dfa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409e08:

            mov ESI,8
            call .L_404a20

            mov BYTE PTR [R13+48],1
            mov DWORD PTR [R12+16],458752
            jmp .L_409c59
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409e28:

            cmp BYTE PTR [RSP],47
            jne .L_409f30
.L_409e32:

            cmp RAX,RBP
            jb .L_409d05

            lea RDI,QWORD PTR [RIP+.L_44766a]
            mov ECX,3
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_409f80

            cmp BYTE PTR [RSP],47
            je .L_40a100
.L_409e67:

            lea RDI,QWORD PTR [RIP+.L_444770]
            mov ECX,3
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_409d28

            lea RDX,QWORD PTR [RIP+.L_44766b]
            mov RSI,RBP
            mov ECX,2
            mov RDI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov RSI,RBP
            mov RDI,R14
            seta AL
            sbb AL,0
            test AL,AL
            je .L_409f50
.L_409eb0:

            call .L_439380

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_409a90

            mov EBX,EAX
.L_409ec5:

            mov ESI,60
            mov RDI,R12
            call .L_404a20

            jmp .L_409de0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409ee0:

            lea RDI,QWORD PTR [RIP+.L_444770]
            mov ECX,3
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a1a0

            mov ESI,47
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            je .L_40a178

            mov DWORD PTR [R12+16],458753
.L_409f1d:

            lea RAX,QWORD PTR [RIP+.L_44477e]
            mov QWORD PTR [R12+24],RAX
            jmp .L_409ce2
          .byte 0x66
          .byte 0x90
.L_409f30:

            cmp RAX,RBP
            jbe .L_409e32

            cmp BYTE PTR [RAX],47
            jne .L_409e32

            mov BYTE PTR [RAX],0
            jmp .L_409e32
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409f50:

            mov RSI,RDX
            call .L_439380

            mov RSI,R14
            mov RDI,R13
            mov RDX,R15
            call .L_409a90

            mov ESI,32768
            mov RDI,R14
            mov EBX,EAX
            call .L_438800

            jmp .L_409ec5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409f80:

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_409a90

            mov RSI,RBP
            mov RDI,R14
            call .L_439380

            mov ESI,32768
            mov RDI,R14
            call .L_438800

            lea RDI,QWORD PTR [R15+48]
            mov ESI,10
            call .L_409770

            cmp RAX,1073741824
            mov RBP,RAX
            ja .L_40a20a

            test RAX,RAX
            je .L_40a201

            cmp QWORD PTR [R13+32],0
            jne .L_40a1e2

            mov RDI,RAX
            call malloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_40a254

            mov ESI,60
            mov RDI,R12
            mov QWORD PTR [R13+32],RAX
            mov QWORD PTR [R13+40],RBP
            call .L_404a20

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            je .L_40a1f7

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,R15
            call memcpy@PLT

            mov RSI,RBP
            mov RDI,R12
            call .L_404a20

            xor ESI,ESI
            mov RDI,R14
            mov QWORD PTR [R13],0
            call .L_439490

            mov RAX,QWORD PTR [R12+2472]
            mov RBP,QWORD PTR [RAX]
            mov R8,QWORD PTR [RBP+40]
            mov RSI,QWORD PTR [RBP+32]
            lea RDI,QWORD PTR [R8-1]
            mov RAX,RSI
            lea RCX,QWORD PTR [RSI+RDI*1]
            cmp RSI,RCX
            jb .L_40a07c

            jmp .L_40a1ba
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a070:

            lea RCX,QWORD PTR [RSI+RDI*1]
            mov RAX,RDX
            cmp RCX,RDX
            jbe .L_40a0a6
.L_40a07c:

            cmp BYTE PTR [RAX],47
            lea RDX,QWORD PTR [RAX+1]
            jne .L_40a070

            cmp BYTE PTR [RAX+1],10
            mov BYTE PTR [RAX],0
            jne .L_40a0c0

            mov BYTE PTR [RAX+1],0
            mov RSI,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RAX+2]
            mov RAX,RDX
            lea RCX,QWORD PTR [RSI+RDI*1]
            cmp RCX,RDX
            ja .L_40a07c
.L_40a0a6:

            add RSI,R8
            cmp RDX,RSI
            je .L_40a0f8

            movzx EAX,BYTE PTR [RDX]
            cmp AL,96
            je .L_40a0f8

            cmp AL,10
            je .L_40a0f8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a0c0:

            lea RDX,QWORD PTR [RIP+.L_4447a5]
            mov ESI,22
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            mov RDI,QWORD PTR [RBP+32]
            call free@PLT

            mov QWORD PTR [RBP+32],0
            jmp .L_409de0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a0f8:

            mov BYTE PTR [RCX],0
            jmp .L_409de0
.L_40a100:

            movzx EAX,BYTE PTR [RSP+1]
            sub EAX,48
            cmp AL,9
            ja .L_409e67

            lea RDI,QWORD PTR [R15+1]
            mov ESI,15
            call .L_409770

            mov RDX,QWORD PTR [R13+32]
            test RDX,RDX
            je .L_40a138

            cmp RAX,QWORD PTR [R13+40]
            lea RSI,QWORD PTR [RDX+RAX*1]
            mov RDI,R14
            jb .L_409eb0
.L_40a138:

            lea RDX,QWORD PTR [RIP+.L_4448e0]
            xor EAX,EAX
            mov ESI,22
            mov RDI,R12
            mov EBX,4294967266
            call .L_432bc0

            mov RSI,RBP
            mov RDI,R14
            call .L_439380

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_409a90

            jmp .L_409ec5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a178:

            lea RDI,QWORD PTR [RIP+.L_444774]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_409cd6

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a1a0:

            mov DWORD PTR [R12+16],458754
.L_40a1a9:

            lea RAX,QWORD PTR [RIP+.L_4447ff]
            mov QWORD PTR [R12+24],RAX
            jmp .L_409ce2
.L_40a1ba:

            mov RDX,RSI
            jmp .L_40a0a6
.L_40a1c2:

            lea RDX,QWORD PTR [RIP+.L_444850]
.L_40a1c9:

            mov ESI,22
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967266
            jmp .L_409ec5
.L_40a1e2:

            lea RDX,QWORD PTR [RIP+.L_444890]
            jmp .L_40a1c9
.L_40a1eb:

            lea RDX,QWORD PTR [RIP+.L_4447ba]
            jmp .L_409d0c
.L_40a1f7:

            mov EBX,4294967266
            jmp .L_409de0
.L_40a201:

            lea RDX,QWORD PTR [RIP+.L_4447a5]
            jmp .L_40a1c9
.L_40a20a:

            lea RDX,QWORD PTR [RIP+.L_44478c]
            jmp .L_409d0c
.L_40a216:

            lea RDX,QWORD PTR [RIP+.L_4447e3]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_409de0
.L_40a236:

            lea RDX,QWORD PTR [RIP+.L_4447ce]
            or ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_409de0
.L_40a254:

            lea RDX,QWORD PTR [RIP+.L_4448b8]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_409ec5
.L_40a274:

            call __stack_chk_fail@PLT
.L_40a279:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a280:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_444918]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_436df0

            cmp EAX,-30
            je .L_40a31c

            mov ESI,56
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_40a323

            mov QWORD PTR [RAX+32],0
            lea RAX,QWORD PTR [RIP+.L_409860]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_409c20]
            lea RCX,QWORD PTR [RIP+.L_409a50]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4098a0]
            push 0
            lea RDX,QWORD PTR [RIP+.L_4460bd]
            xor R8D,R8D
            mov RSI,RBX
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4098f0]
            mov RDI,RBP
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_40a31c

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_40a31c:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_40a323:

            lea RDX,QWORD PTR [RIP+.L_444808]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40a31c
.L_40a340:

            mov EAX,ESI
            shr EAX,2
            test EAX,EAX
            je .L_40a363

            sub EAX,1
            mov RCX,RDI
            lea RAX,QWORD PTR [RDI+RAX*4+4]
            nop
            nop
            nop
            nop
.L_40a358:

            xor EDX,DWORD PTR [RCX]
            add RCX,4
            cmp RAX,RCX
            jne .L_40a358
.L_40a363:

            mov RAX,RSI
            and ESI,3
            and RAX,-4
            add RDI,RAX
            cmp RSI,2
            je .L_40a3c0

            cmp RSI,3
            je .L_40a398

            cmp RSI,1
            je .L_40a388

            mov EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a388:

            movzx EAX,BYTE PTR [RDI]
            xor ECX,ECX
            or EAX,ECX
            xor EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a398:

            movzx ECX,BYTE PTR [RDI]
            lea RSI,QWORD PTR [RDI+1]
            shl ECX,16
.L_40a3a2:

            movzx EAX,BYTE PTR [RSI]
            lea RDI,QWORD PTR [RSI+1]
            shl EAX,8
            or ECX,EAX
            movzx EAX,BYTE PTR [RDI]
            or EAX,ECX
            xor EAX,EDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a3c0:

            mov RSI,RDI
            xor ECX,ECX
            jmp .L_40a3a2
.L_40a3c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a3d0:

            push R15
            push R14
            mov EDX,1
            push R13
            push R12
            mov ECX,32768
            push RBP
            push RBX
            xor R10D,R10D
            sub RSP,184
.L_40a3ee:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            lea R8,QWORD PTR [RSP+16]
            lea R9,QWORD PTR [RSP+96]
            nop
            nop
            nop
            nop
            nop
.L_40a410:

            mov ESI,DWORD PTR [RDI+RDX*4+4]
            mov DWORD PTR [R8+RDX*4],EAX
            mov DWORD PTR [R9+RDX*4],ECX
            test ESI,ESI
            je .L_40a428

            imul ESI,ECX
            mov R10D,EDX
            add EAX,ESI
.L_40a428:

            add RDX,1
            sar ECX,1
            cmp RDX,17
            jne .L_40a410

            and EAX,65535
            jne .L_40a550

            cmp DWORD PTR [RDI+88],R10D
            jl .L_40a550

            cmp R10D,15
            mov DWORD PTR [RDI+80],R10D
            jg .L_40a489

            mov ECX,16
            sub ECX,R10D
            test R10D,R10D
            je .L_40a489

            lea EDX,DWORD PTR [R10-1]
            lea RSI,QWORD PTR [RDX*4+8]
            mov EDX,4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a478:

            sar DWORD PTR [R8+RDX*1],CL
            sar DWORD PTR [R9+RDX*1],CL
            add RDX,4
            cmp RDX,RSI
            jne .L_40a478
.L_40a489:

            cmp R10D,10
            mov RBX,QWORD PTR [RDI+104]
            jg .L_40a648
.L_40a497:

            mov R8D,DWORD PTR [RDI]
            mov DWORD PTR [RDI+84],EAX
            mov R12,QWORD PTR [RDI+72]
            mov DWORD PTR [RDI+92],0
            test R8D,R8D
            jle .L_40a5aa

            lea ECX,DWORD PTR [RAX-1]
            mov EBP,1
            lea EDX,DWORD PTR [R8-1]
            mov R11,R12
            shl EBP,CL
            lea RCX,QWORD PTR [RBX-2]
            lea R13,QWORD PTR [R12+RDX*1+1]
            mov QWORD PTR [RSP+8],RCX
            mov ECX,EAX
.L_40a4d2:

            movzx EDX,BYTE PTR [R11]
            test DL,DL
            je .L_40a59d

            movsxd RAX,EDX
            cmp EDX,10
            mov R14D,DWORD PTR [RSP+RAX*4+16]
            mov R9D,DWORD PTR [RSP+RAX*4+96]
            lea ESI,DWORD PTR [R14+R9*1]
            mov DWORD PTR [RSP+RAX*4+16],ESI
            jle .L_40a540

            mov EAX,R14D
            sar EAX,CL
            cdqe 
            lea R9,QWORD PTR [RBX+RAX*2]
            movzx EAX,WORD PTR [R9]
            test AX,AX
            jne .L_40a5b8

            movsxd RSI,DWORD PTR [RDI+92]
            lea EAX,DWORD PTR [RSI+R8*1]
            lea R10D,DWORD PTR [RSI+1]
            cmp R10D,DWORD PTR [RDI+96]
            mov WORD PTR [R9],AX
            mov RAX,QWORD PTR [RDI+112]
            mov DWORD PTR [RDI+92],R10D
            lea R9,QWORD PTR [RAX+RSI*4]
            jg .L_40a550

            mov DWORD PTR [R9],0
            jmp .L_40a5d5
          .byte 0x66
          .byte 0x90
.L_40a540:

            cmp ESI,1024
            jle .L_40a6ac

            nop
            nop
            nop
            nop
.L_40a550:

            xor EAX,EAX
.L_40a552:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40a730

            add RSP,184
.L_40a570:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a580:

            movzx ESI,SI
            test ESI,R14D
            je .L_40a707

            cmp WORD PTR [R9],0
            jne .L_40a550

            mov EAX,R11D
            sub EAX,R12D
            mov WORD PTR [R9],AX
.L_40a59d:

            add R11,1
            cmp R13,R11
            jne .L_40a4d2
.L_40a5aa:

            mov EAX,1
            jmp .L_40a552
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a5b8:

            cmp EAX,R8D
            jl .L_40a550

            mov ESI,DWORD PTR [RDI+92]
            add ESI,R8D
            cmp EAX,ESI
            jge .L_40a550

            sub EAX,R8D
            movsxd RSI,EAX
            mov RAX,QWORD PTR [RDI+112]
            lea R9,QWORD PTR [RAX+RSI*4]
.L_40a5d5:

            sub EDX,11
            mov ESI,EBP
            jne .L_40a622

            jmp .L_40a580
          .byte 0x66
          .byte 0x90
.L_40a5e0:

            movzx R10D,WORD PTR [R9]
            cmp R10D,R8D
            jge .L_40a6f8

            movsxd R10,DWORD PTR [RDI+92]
            lea R15D,DWORD PTR [R10+R8*1]
            mov WORD PTR [R9],R15W
.L_40a5f9:

            lea R15D,DWORD PTR [R10+1]
            cmp R15D,DWORD PTR [RDI+96]
            lea R9,QWORD PTR [RAX+R10*4]
            mov DWORD PTR [RDI+92],R15D
            jg .L_40a550

            mov DWORD PTR [R9],0
.L_40a616:

            shr SI,1
            sub EDX,1
            je .L_40a580
.L_40a622:

            movzx R10D,SI
            test R10D,R14D
            jne .L_40a5e0

            movzx R10D,WORD PTR [R9+2]
            cmp R10D,R8D
            jge .L_40a6f8

            movsxd R10,DWORD PTR [RDI+92]
            lea R15D,DWORD PTR [R10+R8*1]
            mov WORD PTR [R9+2],R15W
            jmp .L_40a5f9
.L_40a648:

            lea EAX,DWORD PTR [R10-10]
            mov EDX,4
            mov ECX,EAX
            nop
            nop
            nop
            nop
            nop
.L_40a658:

            sar DWORD PTR [R8+RDX*1],CL
            sar DWORD PTR [R9+RDX*1],CL
            add RDX,4
            cmp RDX,44
            jne .L_40a658

            mov EAX,ECX
            lea RCX,QWORD PTR [RBX+2048]
            mov EDX,DWORD PTR [RSP+136]
            imul EDX,DWORD PTR [RDI+44]
            add EDX,DWORD PTR [RSP+56]
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBX+RDX*2]
            cmp RDX,RCX
            jae .L_40a497

            nop
            nop
            nop
            nop
            nop
            nop
.L_40a698:

            add RDX,2
            xor ESI,ESI
            cmp RDX,RCX
            mov WORD PTR [RDX-2],SI
            jb .L_40a698

            jmp .L_40a497
.L_40a6ac:

            movsxd RDX,R14D
            add RDX,RDX
            sub R9D,1
            js .L_40a59d

            movsxd R10,R9D
            mov R9D,R9D
            mov ESI,R11D
            add R10,R10
            add R9,R9
            sub ESI,R12D
            lea RAX,QWORD PTR [RDX+R10*1]
            add RDX,QWORD PTR [RSP+8]
            add RAX,RBX
            add RDX,R10
            sub RDX,R9
.L_40a6e0:

            mov WORD PTR [RAX],SI
            sub RAX,2
            cmp RDX,RAX
            jne .L_40a6e0

            jmp .L_40a59d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a6f8:

            sub R10D,R8D
            movsxd R10,R10D
            lea R9,QWORD PTR [RAX+R10*4]
            jmp .L_40a616
.L_40a707:

            cmp WORD PTR [R9+2],0
            jne .L_40a550

            mov EAX,R11D
            add R11,1
            sub EAX,R12D
            cmp R13,R11
            mov WORD PTR [R9+2],AX
            jne .L_40a4d2

            jmp .L_40a5aa
.L_40a730:

            call __stack_chk_fail@PLT
.L_40a735:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a740:

            mov R9,QWORD PTR [RDI+112]
            mov EAX,DWORD PTR [RDI+84]
            mov ECX,DWORD PTR [RDI]
.L_40a749:

            cmp ECX,EDX
            jg .L_40a773
.L_40a74d:

            sub EAX,1
            sub EDX,ECX
            lea R8D,DWORD PTR [RAX+1]
            test R8D,R8D
            jle .L_40a790

            cmp DWORD PTR [RDI+92],EDX
            jle .L_40a790

            movsxd RDX,EDX
            bt ESI,EAX
            lea RDX,QWORD PTR [R9+RDX*4]
            jae .L_40a780

            movzx EDX,WORD PTR [RDX]
            cmp ECX,EDX
            jle .L_40a74d
.L_40a773:

            mov EAX,EDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a780:

            movzx EDX,WORD PTR [RDX+2]
            jmp .L_40a749
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a790:

            xor EAX,EAX
            ret 
.L_40a793:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a7a0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+72]
            call free@PLT

            mov RDI,QWORD PTR [RBX+104]
            call free@PLT

            mov RDI,QWORD PTR [RBX+112]
            pop RBX
            jmp free@PLT
.L_40a7c0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40a7d1:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov R12,QWORD PTR [RBP+56]
            test R12,R12
            je .L_40a988

            xor EAX,EAX
            cmp WORD PTR [R12+10],0
            jne .L_40a94d

            mov RBX,QWORD PTR [RBP+40]
            mov EAX,DWORD PTR [RBX+88]
.L_40a7fe:

            movzx ECX,WORD PTR [RBX+4]
            cmp ECX,EAX
            jle .L_40a960

            add EAX,1
            test BYTE PTR [RBP+84],4
            mov DWORD PTR [RBX+88],EAX
            lea RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBP+56],RAX
            mov DWORD PTR [RBX+64],0
            mov DWORD PTR [RBX+72],0
            mov QWORD PTR [RBX+80],0
            jne .L_40a9d8

            mov R12D,8
            mov R13D,8
.L_40a844:

            xor EDX,EDX
            mov RSI,R12
            mov RDI,R14
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_40aa79

            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [RBX+24],EAX
            movzx EDX,WORD PTR [R15+4]
            mov WORD PTR [RBX+28],DX
            mov WORD PTR [RBX+30],DX
            lea ECX,DWORD PTR [RDX-1]
            movzx EAX,WORD PTR [R15+6]
            mov QWORD PTR [RBX+36],0
            cmp CX,38911
            mov DWORD PTR [RBX+44],0
            mov WORD PTR [RBX+32],AX
            mov WORD PTR [RBX+34],AX
            ja .L_40aa20

            cmp AX,32768
            ja .L_40aa20

            test AX,AX
            jne .L_40a8b7

            mov RCX,QWORD PTR [RBP+48]
            cmp WORD PTR [RCX+16],-2
            jb .L_40aa20
.L_40a8b7:

            mov RCX,QWORD PTR [RBP+40]
            movzx ESI,WORD PTR [RCX+4]
            cmp DWORD PTR [RCX+88],ESI
            jge .L_40a8ce

            cmp AX,32768
            jne .L_40aa20
.L_40a8ce:

            cmp WORD PTR [RCX+6],0
            jne .L_40a8de

            cmp AX,DX
            jne .L_40aa20
.L_40a8de:

            cmp QWORD PTR [RBX+48],R12
            mov RAX,QWORD PTR [RBX+56]
            jae .L_40a909

            mov RDI,RAX
            call free@PLT

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+56],RAX
            je .L_40aa99

            mov QWORD PTR [RBX+48],R12
.L_40a909:

            mov RDX,QWORD PTR [R15]
            lea RDI,QWORD PTR [RAX+8]
            mov RSI,R15
            movsxd R13,R13D
            and RDI,-8
            mov QWORD PTR [RAX],RDX
            mov EDX,R12D
            mov RCX,QWORD PTR [R15+RDX*1-8]
            mov QWORD PTR [RAX+RDX*1-8],RCX
            sub RAX,RDI
            lea ECX,DWORD PTR [R12+RAX*1]
            sub RSI,RAX
            shr ECX,3
            mov ECX,ECX

            rep movsq 

            mov RSI,R13
            mov RDI,R14
            call .L_404a20

            add QWORD PTR [RBP+64],R13
            xor EAX,EAX
.L_40a94d:

            add RSP,8
.L_40a951:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a960:

            test CX,CX
            je .L_40a9f0

            mov QWORD PTR [R12+4],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a988:

            mov RBX,QWORD PTR [RBP+40]
            mov R9,QWORD PTR [RBP+64]
            mov R8D,DWORD PTR [RBX]
            mov DWORD PTR [RBX+88],0
            mov RSI,R8
            sub RSI,R9
            js .L_40aa40

            mov EAX,0
            je .L_40a7fe

            call .L_404a20

            test RAX,RAX
            js .L_40aa82

            mov RBX,QWORD PTR [RBP+40]
            mov EAX,DWORD PTR [RBX]
            mov QWORD PTR [RBP+64],RAX
            mov EAX,DWORD PTR [RBX+88]
            jmp .L_40a7fe
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9d8:

            movzx R13D,BYTE PTR [RBP+93]
            add R13D,8
            movsxd R12,R13D
            jmp .L_40a844
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9f0:

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBP+56],RAX
            xor EAX,EAX
            movups XMMWORD PTR [RBX+24],XMM0
            movups XMMWORD PTR [RBX+40],XMM0
            movups XMMWORD PTR [RBX+56],XMM0
            movups XMMWORD PTR [RBX+72],XMM0
            add RSP,8
.L_40aa12:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40aa20:

            lea RDX,QWORD PTR [RIP+.L_444c2d]
.L_40aa27:

            xor EAX,EAX
            mov ESI,84
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40a94d
.L_40aa40:

            mov RAX,QWORD PTR [RBP+48]
            movzx EAX,WORD PTR [RAX+16]
            cmp AX,-2
            je .L_40aa90

            ja .L_40aa8c

            cmp AX,-3
            je .L_40aa8c

            movzx ECX,AX
.L_40aa59:

            lea RDX,QWORD PTR [RIP+.L_444938]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40a94d
.L_40aa79:

            lea RDX,QWORD PTR [RIP+.L_444c18]
            jmp .L_40aa27
.L_40aa82:

            mov EAX,4294967266
            jmp .L_40a94d
.L_40aa8c:

            xor ECX,ECX
            jmp .L_40aa59
.L_40aa90:

            movzx EAX,WORD PTR [RBP+80]
            lea ECX,DWORD PTR [RAX-1]
            jmp .L_40aa59
.L_40aa99:

            lea RDX,QWORD PTR [RIP+.L_444970]
            mov ESI,12
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40a94d
.L_40aab7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40aac0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
.L_40aac7:

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+72]
            mov RBP,RSI
            test RDI,RDI
            je .L_40aade

            cmp DWORD PTR [RBX],ESI
            je .L_40ab80
.L_40aade:

            call free@PLT

            mov ESI,1
            mov RDI,RBP
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+72],RAX
            je .L_40ab78

            mov DWORD PTR [RBX],EBP
.L_40aafb:

            cmp QWORD PTR [RBX+104],0
            je .L_40ab20
.L_40ab02:

            cmp QWORD PTR [RBX+112],0
            jne .L_40ab0f

            cmp R12D,10
            jg .L_40ab50
.L_40ab0f:

            xor EAX,EAX
.L_40ab11:

            pop RBX
.L_40ab12:

            pop RBP
            pop R12
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ab20:

            mov ECX,R12D
            mov EDI,2
            mov EAX,2048
            shl RDI,CL
            cmp R12D,10
            cmovge RDI,RAX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+104],RAX
            je .L_40ab78

            mov DWORD PTR [RBX+88],R12D
            jmp .L_40ab02
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ab50:

            lea ECX,DWORD PTR [R12-6]
            mov EDI,1
            shl EDI,CL
            mov DWORD PTR [RBX+96],EDI
            movsxd RDI,EDI
            shl RDI,2
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+112],RAX
            jne .L_40ab0f

            nop
            nop
            nop
            nop
.L_40ab78:

            mov EAX,4294967266
            jmp .L_40ab11
          .byte 0x90
.L_40ab80:

            mov RDX,RSI
            xor ESI,ESI
            call memset@PLT

            jmp .L_40aafb
.L_40ab8f:

            nop
.L_40ab90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40ab9e:

            mov RAX,QWORD PTR [RDI+2472]
            mov R13,QWORD PTR [RAX]
            mov RAX,QWORD PTR [R13+40]
            mov RBX,QWORD PTR [R13+56]
            cmp WORD PTR [RAX+6],0
            movzx EDX,WORD PTR [RBX+14]
            mov R12,QWORD PTR [RBX+16]
            jne .L_40ac00

            cmp RSI,R12
            mov RAX,R12
            cmovle RAX,RSI
            sub WORD PTR [RBX+10],AX
            sub RSI,RAX
            add EDX,EAX
            sub R12,RAX
            test RAX,RAX
            mov RBP,RSI
            mov R14D,EAX
            mov WORD PTR [RBX+14],DX
            mov QWORD PTR [RBX+16],R12
            jne .L_40adf0
.L_40abec:

            add RSP,8
.L_40abf0:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40ac00:

            movzx EAX,WORD PTR [RBX+12]
            movzx ECX,DX
            mov RBP,RSI
            sub EAX,ECX
            test EAX,EAX
            jle .L_40ac26

            cdqe 
            cmp RSI,RAX
            cmovle RAX,RSI
            sub WORD PTR [RBX+10],AX
            add EDX,EAX
            sub RBP,RAX
            mov WORD PTR [RBX+14],DX
.L_40ac26:

            test R12,R12
            je .L_40abec

            mov QWORD PTR [RBX+16],0
            mov R14D,R12D
.L_40ac36:

            mov ECX,DWORD PTR [RBX]
            test ECX,ECX
            je .L_40acab

            mov RDX,QWORD PTR [RBX+56]
            test RDX,RDX
            je .L_40acab

            mov EAX,DWORD PTR [RBX+48]
            mov RCX,R12
            test EAX,EAX
            je .L_40ad78

            movsxd RSI,EAX
            add RSI,RBX
            cmp EAX,3
            jle .L_40ac71

            jmp .L_40ad6c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ac68:

            add RSI,1
            test RCX,RCX
            je .L_40aca3
.L_40ac71:

            add RDX,1
            add EAX,1
            sub RCX,1
            mov DWORD PTR [RBX+48],EAX
            movzx R8D,BYTE PTR [RDX-1]
            cmp EAX,4
            mov BYTE PTR [RSI+44],R8B
            jne .L_40ac68
.L_40ac8d:

            mov EAX,DWORD PTR [RBX+44]
            xor DWORD PTR [RBX+40],EAX
            test RCX,RCX
            mov DWORD PTR [RBX+48],0
            jne .L_40ad78
.L_40aca3:

            mov QWORD PTR [RBX+56],0
.L_40acab:

            mov RSI,R12
            mov R15,RDI
            call .L_404a20

            add QWORD PTR [R13+64],R12
            sub WORD PTR [RBX+6],R14W
            jne .L_40abec

            mov RAX,QWORD PTR [R15+2472]
            mov R11,QWORD PTR [RAX]
            mov R10,QWORD PTR [R11+56]
            mov R8D,DWORD PTR [R10]
            test R8D,R8D
            je .L_40abec

            movsxd RSI,DWORD PTR [R10+48]
            mov EDX,DWORD PTR [R10+40]
            test ESI,ESI
            je .L_40ad02

            lea RDI,QWORD PTR [R10+44]
            call .L_40a340

            mov EDX,EAX
            mov DWORD PTR [R10+40],EAX
            mov DWORD PTR [R10+48],0
.L_40ad02:

            test BYTE PTR [R11+84],4
            mov ESI,4
            je .L_40ad17

            movzx EAX,BYTE PTR [R11+93]
            lea RSI,QWORD PTR [RAX+4]
.L_40ad17:

            mov RAX,QWORD PTR [R10+32]
            lea RDI,QWORD PTR [RAX+4]
            call .L_40a340

            cmp R8D,EAX
            mov DWORD PTR [R10+40],EAX
            je .L_40abec

            mov RDX,QWORD PTR [R11+40]
            sub RSP,8
.L_40ad39:

            mov R9D,EAX
            mov ESI,84
            xor EAX,EAX
            mov RDI,R15
            mov RBP,-25
            mov ECX,DWORD PTR [RDX+88]
            movzx EDX,WORD PTR [R10+4]
            sub ECX,1
            push RDX
            lea RDX,QWORD PTR [RIP+.L_444998]
            call .L_432bc0

            pop RAX
            pop RDX
            jmp .L_40abec
.L_40ad6c:

            cmp EAX,4
            je .L_40ac8d

            nop
            nop
            nop
.L_40ad78:

            mov R9D,ECX
            and R9D,3
            movsxd R10,R9D
            cmp R10,RCX
            je .L_40adb6

            mov RAX,RCX
            mov ESI,DWORD PTR [RBX+40]
            sub RAX,R10
            shr EAX,2
            test EAX,EAX
            je .L_40adb3

            sub EAX,1
            lea R8,QWORD PTR [RDX+RAX*4+4]
            mov RAX,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ada8:

            xor ESI,DWORD PTR [RAX]
            add RAX,4
            cmp RAX,R8
            jne .L_40ada8
.L_40adb3:

            mov DWORD PTR [RBX+40],ESI
.L_40adb6:

            test R9D,R9D
            jne .L_40adc8
.L_40adbb:

            mov DWORD PTR [RBX+48],R9D
            jmp .L_40aca3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40adc8:

            sub RCX,R10
            lea RSI,QWORD PTR [RBX+44]
            xor EAX,EAX
            add RDX,RCX
.L_40add4:

            mov ECX,EAX
            add EAX,1
            movzx R8D,BYTE PTR [RDX+RCX*1]
            cmp EAX,R9D
            mov BYTE PTR [RSI+RCX*1],R8B
            jb .L_40add4

            jmp .L_40adbb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40adf0:

            mov R12,RAX
            jmp .L_40ac36
.L_40adf8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae00:

            mov R9D,64
            sub R9D,DWORD PTR [RDX+8]
            mov EAX,R9D
            sar EAX,4
            cmp EAX,3
            je .L_40ae68
.L_40ae15:

            cmp EAX,4
            je .L_40aef0

            test EAX,EAX
            je .L_40aee0

            mov RCX,QWORD PTR [RSI]
.L_40ae29:

            cmp RCX,1
            jle .L_40af78

            mov R8,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDX]
            sub R9D,16
            sub RCX,2
            movzx R10D,WORD PTR [R8]
            shl RAX,16
            add R8,2
            or RAX,R10
            mov QWORD PTR [RDX],RAX
            mov EAX,R9D
            mov QWORD PTR [RDI],R8
            sar EAX,4
            mov QWORD PTR [RSI],RCX
            add DWORD PTR [RDX+8],16
            cmp EAX,3
            jne .L_40ae15
.L_40ae68:

            mov RCX,QWORD PTR [RSI]
            cmp RCX,5
            jle .L_40ae29

            mov R8,QWORD PTR [RDI]
            sub RCX,6
            movzx EAX,BYTE PTR [R8+1]
            movzx R9D,BYTE PTR [R8]
            add R8,6
            shl R9,32
            shl RAX,40
            or RAX,R9
            movzx R9D,BYTE PTR [R8-2]
            or RAX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,24
            or RAX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,16
            or RAX,R9
            movzx R9D,BYTE PTR [R8-1]
            shl R9D,8
            or RAX,R9
            mov R9,QWORD PTR [RDX]
            shl R9,48
            or RAX,R9
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RDI],R8
            mov EAX,1
            mov QWORD PTR [RSI],RCX
            add DWORD PTR [RDX+8],48
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aee0:

            mov EAX,1
.L_40aee5:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aef0:

            mov RCX,QWORD PTR [RSI]
            cmp RCX,7
            jle .L_40ae29

            mov R8,QWORD PTR [RDI]
            sub RCX,8
            movzx EAX,BYTE PTR [R8+1]
            movzx R9D,BYTE PTR [R8]
            add R8,8
            shl R9,48
            shl RAX,56
            or RAX,R9
            movzx R9D,BYTE PTR [R8-2]
            or RAX,R9
            movzx R9D,BYTE PTR [R8-5]
            shl R9,40
            or RAX,R9
            movzx R9D,BYTE PTR [R8-6]
            shl R9,32
            or RAX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,24
            or RAX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,16
            or RAX,R9
            movzx R9D,BYTE PTR [R8-1]
            shl R9D,8
            or RAX,R9
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RDI],R8
            mov EAX,1
            mov QWORD PTR [RSI],RCX
            add DWORD PTR [RDX+8],64
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af78:

            mov EAX,0
            jne .L_40aee5

            mov RCX,QWORD PTR [RDI]
            lea R8,QWORD PTR [RCX+1]
            mov QWORD PTR [RDI],R8
            movzx ECX,BYTE PTR [RCX]
            mov BYTE PTR [RDX+12],CL
            mov QWORD PTR [RSI],0
            mov BYTE PTR [RDX+13],1
            ret 
.L_40af9f:

            nop
.L_40afa0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_40afa8:

            mov R11,QWORD PTR [RDI+48]
            mov R14D,DWORD PTR [R11+600]
            lea RBP,QWORD PTR [R11+104]
            test R14D,R14D
            je .L_40b078
.L_40afc0:

            cmp R14D,DWORD PTR [R11+480]
            jge .L_40b060

            mov RBX,RDI
            mov ECX,DWORD PTR [R11+112]
            movsxd R13,R14D
            lea R12,QWORD PTR [RDI+8]
            jmp .L_40b029
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40afe0:

            mov RAX,QWORD PTR [R11+104]
            sub ECX,4
            mov RDX,QWORD PTR [R11+552]
            add R14D,1
            shr RAX,CL
            and EAX,15
            mov BYTE PTR [RDX+R13*1],AL
            mov RAX,QWORD PTR [R11+552]
            movzx EAX,BYTE PTR [RAX+R13*1]
            add R13,1
            add DWORD PTR [R11+RAX*4+484],1
            mov EAX,DWORD PTR [R11+112]
            cmp DWORD PTR [R11+480],R14D
            lea ECX,DWORD PTR [RAX-4]
            mov DWORD PTR [R11+112],ECX
            jle .L_40b060
.L_40b029:

            cmp ECX,3
            jg .L_40afe0

            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_40ae00

            test EAX,EAX
            mov ECX,DWORD PTR [R11+112]
            jne .L_40afe0

            cmp ECX,3
            jg .L_40afe0

            mov DWORD PTR [R11+600],R14D
            pop RBX
.L_40b051:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b060:

            mov DWORD PTR [R11+600],R14D
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b078:

            pxor XMM0,XMM0
            mov DWORD PTR [R11+548],0
            movups XMMWORD PTR [R11+484],XMM0
            movups XMMWORD PTR [R11+500],XMM0
            movups XMMWORD PTR [R11+516],XMM0
            movups XMMWORD PTR [R11+532],XMM0
            jmp .L_40afc0
.L_40b0ac:

            nop
            nop
            nop
            nop
.L_40b0b0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_40b0bd:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBX+96]
            test RDI,RDI
            je .L_40b102

            cmp WORD PTR [RBX+80],0
            je .L_40b0fd

            xor R12D,R12D
            xor EBP,EBP
            nop
            nop
            nop
            nop
.L_40b0e0:

            mov RDI,QWORD PTR [RDI+R12*1+56]
            add EBP,1
            add R12,96
            call free@PLT

            movzx EAX,WORD PTR [RBX+80]
            mov RDI,QWORD PTR [RBX+96]
            cmp EAX,EBP
            jg .L_40b0e0
.L_40b0fd:

            call free@PLT
.L_40b102:

            mov RDI,QWORD PTR [RBX+104]
            test RDI,RDI
            je .L_40b142

            cmp WORD PTR [RBX+82],0
            je .L_40b13d

            xor R12D,R12D
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b120:

            lea RDI,QWORD PTR [RDI+R12*1+24]
            add EBP,1
            add R12,48
            call .L_42e240

            movzx EAX,WORD PTR [RBX+82]
            mov RDI,QWORD PTR [RBX+104]
            cmp EAX,EBP
            jg .L_40b120
.L_40b13d:

            call free@PLT
.L_40b142:

            cmp BYTE PTR [RBX+384],0
            je .L_40b157

            lea RDI,QWORD PTR [RBX+272]
            call inflateEnd@PLT
.L_40b157:

            mov RAX,QWORD PTR [RBX+440]
            test RAX,RAX
            je .L_40b1dc

            mov RDI,QWORD PTR [RAX+16]
            call free@PLT

            mov RAX,QWORD PTR [RBX+440]
            mov RDI,QWORD PTR [RAX+96]
            call free@PLT

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+120]
            call .L_40a7a0

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+480]
            call .L_40a7a0

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+360]
            call .L_40a7a0

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+240]
            call .L_40a7a0

            mov RDI,QWORD PTR [RBX+440]
            call free@PLT

            mov QWORD PTR [RBX+440],0
.L_40b1dc:

            lea RDI,QWORD PTR [RBX+120]
            call .L_42e270

            mov RDI,QWORD PTR [RBX+160]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [R13+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_40b20b:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40b214:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b220:

            movzx EDX,BYTE PTR [RDI+4]
            cmp DL,70
            je .L_40b270

            jg .L_40b240

            test DL,DL
            je .L_40b260

            cmp DL,67
            mov EAX,2
            jne .L_40b254
.L_40b239:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b240:

            cmp DL,77
            mov EAX,4
            je .L_40b239

            cmp DL,83
            mov EAX,3
            je .L_40b239
.L_40b254:

            mov EAX,5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b260:

            xor EAX,EAX
            cmp QWORD PTR [RDI],1178817357
            setne AL
            lea EAX,DWORD PTR [RAX+RAX*4]
            ret 
.L_40b270:

            mov EAX,1
            ret 
.L_40b276:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b280:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_40b28a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,64
            jg .L_40b370

            xor EDX,EDX
            mov ESI,8
            mov RBP,RDI
            call .L_4049d0

            test RAX,RAX
            mov RDX,RAX
            je .L_40b370

            cmp QWORD PTR [RDX],1178817357
            mov EAX,64
            je .L_40b2d3

            xor EAX,EAX
            cmp BYTE PTR [RDX],77
            je .L_40b2f8
.L_40b2d3:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40b397

            add RSP,24
.L_40b2eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b2f8:

            cmp BYTE PTR [RDX+1],90
            jne .L_40b2d3

            mov R12D,4096
            xor EBX,EBX
            mov R13,RSP
.L_40b309:

            lea RSI,QWORD PTR [RBX+R12*1]
            mov RDX,R13
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            mov R8,RAX
            je .L_40b360

            mov RSI,QWORD PTR [RSP]
            add RBX,RAX
            add RSI,RAX
            lea RAX,QWORD PTR [RBX+8]
            cmp RSI,RAX
            ja .L_40b346

            jmp .L_40b380
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b338:

            cdqe 
            add RBX,RAX
            lea RAX,QWORD PTR [RBX+8]
            cmp RSI,RAX
            jbe .L_40b380
.L_40b346:

            mov RDI,RBX
            call .L_40b220

            test EAX,EAX
            jne .L_40b338

            mov EAX,64
            jmp .L_40b2d3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b360:

            sar R12,1
            cmp R12,127
            jg .L_40b309

            xor EAX,EAX
            jmp .L_40b2d3
.L_40b370:

            mov EAX,4294967295
            jmp .L_40b2d3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b380:

            sub RBX,R8
            cmp RBX,131071
            jle .L_40b309

            xor EAX,EAX
            jmp .L_40b2d3
.L_40b397:

            call __stack_chk_fail@PLT
.L_40b39c:

            nop
            nop
            nop
            nop
.L_40b3a0:

            push R15
            push R14
            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_40b3b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+16],RSI
            mov RBX,QWORD PTR [RAX]
            cmp BYTE PTR [RBX+144],0
            je .L_40b560
.L_40b3e0:

            movsxd RAX,DWORD PTR [RBX+112]
            movzx EDX,WORD PTR [RBX+82]
            cmp EAX,EDX
            jge .L_40b528

            lea R13,QWORD PTR [RAX+RAX*2]
            lea EDX,DWORD PTR [RAX+1]
            xor EDI,EDI
            mov WORD PTR [RBX+146],DI
            mov QWORD PTR [RBX+24],0
            shl R13,4
            add R13,QWORD PTR [RBX+104]
            mov DWORD PTR [RBX+112],EDX
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+16],0
            mov RCX,QWORD PTR [RBX+40]
            mov RAX,QWORD PTR [RBX+96]
            movzx EDX,WORD PTR [R13+16]
            mov QWORD PTR [RBX+48],R13
            cmp DX,-2
            je .L_40bbb8

            ja .L_40b451

            cmp DX,-3
            je .L_40b451

            lea RDX,QWORD PTR [RDX+RDX*2]
            shl RDX,5
            add RAX,RDX
.L_40b451:

            mov QWORD PTR [RBX+40],RAX
.L_40b455:

            cmp RCX,RAX
            je .L_40b462

            mov QWORD PTR [RBX+56],0
.L_40b462:

            movsx R9D,BYTE PTR [R13+18]
            test R9B,R9B
            js .L_40baa8

            mov R14,QWORD PTR [RBX+184]
            test R14,R14
            je .L_40be80
.L_40b480:

            mov RDX,QWORD PTR [R13+32]
            mov RSI,QWORD PTR [R13+24]
            test RDX,RDX
            je .L_40baf0

            not R9D
            xor EDI,EDI
            xor EAX,EAX
            shr R9D,31
            jmp .L_40b4b4
          .byte 0x66
          .byte 0x90
.L_40b4a0:

            test CL,CL
            mov EDI,0
            cmovs EDI,R9D
            add RAX,1
            cmp RAX,RDX
            jae .L_40b4da
.L_40b4b4:

            lea R8,QWORD PTR [RSI+RAX*1]
            movzx ECX,BYTE PTR [R8]
            cmp CL,92
            jne .L_40b4a0

            test EDI,EDI
            jne .L_40b4da

            mov BYTE PTR [R8],47
            mov RDX,QWORD PTR [R13+32]
            add RAX,1
            mov RSI,QWORD PTR [R13+24]
            cmp RAX,RDX
            jb .L_40b4b4
.L_40b4da:

            cmp RAX,RDX
            je .L_40baf0

            mov RDI,QWORD PTR [RSP+16]
            mov RCX,R14
            call .L_4393f0

            test EAX,EAX
            je .L_40bd40

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_40bd0f
.L_40b506:

            lea RDX,QWORD PTR [RIP+.L_444a18]
.L_40b50d:

            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            mov R12D,4294967266
            jmp .L_40b535
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b528:

            mov BYTE PTR [RBX+145],1
            mov R12D,1
.L_40b535:

            mov RBX,QWORD PTR [RSP+104]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40bfb9

            add RSP,120
.L_40b550:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b560:

            cmp QWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+16],786432
            je .L_40bdb8
.L_40b572:

            xor EDX,EDX
            mov ESI,42
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_40ba68

            mov RDX,QWORD PTR [RBP+2472]
            mov R12,QWORD PTR [RDX]
            cmp BYTE PTR [R12+144],0
            je .L_40b9c8
.L_40b5a3:

            mov QWORD PTR [R12+64],0
            cmp BYTE PTR [RAX],77
            jne .L_40bee3

            cmp BYTE PTR [RAX+1],83
            jne .L_40bee3

            cmp BYTE PTR [RAX+2],67
            jne .L_40bee3

            cmp BYTE PTR [RAX+3],70
            jne .L_40bee3

            mov EDX,DWORD PTR [RAX+8]
            mov DWORD PTR [R12+72],EDX
            mov EDX,DWORD PTR [RAX+16]
            mov DWORD PTR [R12+76],EDX
            movzx EDX,BYTE PTR [RAX+24]
            mov BYTE PTR [R12+91],DL
            movzx EDX,BYTE PTR [RAX+25]
            mov BYTE PTR [R12+90],DL
            movzx EDX,WORD PTR [RAX+26]
            test DX,DX
            mov WORD PTR [R12+80],DX
            je .L_40b9a3

            movzx EDX,WORD PTR [RAX+28]
            test DX,DX
            mov WORD PTR [R12+82],DX
            je .L_40b9a3

            movzx EDX,WORD PTR [RAX+30]
            mov WORD PTR [R12+84],DX
            movzx ECX,WORD PTR [RAX+32]
            test DL,4
            mov WORD PTR [R12+86],CX
            movzx ECX,WORD PTR [RAX+34]
            mov WORD PTR [R12+88],CX
            jne .L_40ba78

            mov BYTE PTR [R12+92],0
            mov R13D,36
.L_40b64e:

            test DL,1
            jne .L_40bdd0
.L_40b657:

            and EDX,2
            je .L_40b701

            lea RSI,QWORD PTR [R13+256]
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_40ba68

            xor EDX,EDX
            add RAX,R13
            jmp .L_40b699
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b688:

            add RDX,1
            cmp RDX,256
            je .L_40b9a3
.L_40b699:

            cmp BYTE PTR [RAX+RDX*1],0
            lea R14,QWORD PTR [R13+RDX*1]
            jne .L_40b688

            test RDX,RDX
            je .L_40b9a3

            lea RSI,QWORD PTR [R14+257]
            xor EDX,EDX
            mov RDI,RBP
            lea R15,QWORD PTR [R14+1]
            call .L_4049d0

            test RAX,RAX
            je .L_40ba68

            xor EDX,EDX
            add RAX,R14
            jmp .L_40b6e9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b6d8:

            add RDX,1
            cmp RDX,256
            je .L_40b9a3
.L_40b6e9:

            cmp BYTE PTR [RAX+RDX*1+1],0
            lea R13,QWORD PTR [R15+RDX*1]
            jne .L_40b6d8

            test RDX,RDX
            je .L_40b9a3

            add R13,1
.L_40b701:

            mov RSI,R13
            mov RDI,RBP
            call .L_404a20

            add QWORD PTR [R12+64],R13
            movzx R13D,WORD PTR [R12+80]
            mov ESI,96
            mov RDI,R13
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+96],RAX
            je .L_40bf87

            test BYTE PTR [R12+84],4
            mov ESI,8
            je .L_40b749

            movzx ESI,BYTE PTR [R12+92]
            add RSI,8
.L_40b749:

            imul RSI,R13
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_40ba68

            movzx ECX,WORD PTR [R12+80]
            test CX,CX
            je .L_40bf4a

            movzx EDI,WORD PTR [R12+84]
            sub ECX,1
            mov RDX,QWORD PTR [R12+96]
            lea RCX,QWORD PTR [RCX+RCX*2]
            xor ESI,ESI
            xor R14D,R14D
            lea R10,QWORD PTR [RIP+.L_444c5d]
            lea R9,QWORD PTR [RIP+.L_65aa80]
            shl RCX,5
            and EDI,4
            lea R8,QWORD PTR [RDX+RCX*1+96]
            jmp .L_40b7e5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b7a8:

            and ECX,15
            mov RCX,QWORD PTR [R9+RCX*8]
            mov QWORD PTR [RDX+16],RCX
.L_40b7b3:

            add RAX,8
            add R14,8
            test DI,DI
            je .L_40b7cc

            movzx ECX,BYTE PTR [R12+92]
            add RAX,RCX
            add R14,RCX
.L_40b7cc:

            cmp ESI,R13D
            jae .L_40b9a3

            mov BYTE PTR [RDX+92],0
            add RDX,96
            mov ESI,R13D
            cmp RDX,R8
            je .L_40b818
.L_40b7e5:

            mov R13D,DWORD PTR [RAX]
            mov DWORD PTR [RDX],R13D
            movzx ECX,WORD PTR [RAX+4]
            mov WORD PTR [RDX+4],CX
            movzx ECX,WORD PTR [RAX+6]
            and ECX,15
            mov WORD PTR [RDX+6],CX
            movzx R11D,BYTE PTR [RAX+7]
            cmp CX,3
            mov WORD PTR [RDX+8],R11W
            jbe .L_40b7a8

            mov QWORD PTR [RDX+16],R10
            jmp .L_40b7b3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b818:

            mov RSI,R14
.L_40b81b:

            mov RDI,RBP
            call .L_404a20

            mov ECX,DWORD PTR [R12+76]
            add R14,QWORD PTR [R12+64]
            mov R15,RCX
            mov QWORD PTR [R12+64],R14
            sub R15,R14
            js .L_40bf97

            jne .L_40bec1
.L_40b844:

            movzx EDI,WORD PTR [R12+82]
            mov ESI,48
            mov R14,RDI
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+104],RAX
            je .L_40bf87

            test R14W,R14W
            je .L_40bf67

            lea RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+44],4294967295
            mov DWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+8],RSI
.L_40b892:

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,RBP
            lea R14,QWORD PTR [RAX+RSI*1]
            mov ESI,16
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_40ba68

            mov EAX,DWORD PTR [RAX]
            mov RDX,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            mov DWORD PTR [R14],EAX
            mov EAX,DWORD PTR [R15+4]
            mov DWORD PTR [R14+4],EAX
            movzx EAX,WORD PTR [R15+8]
            mov WORD PTR [R14+16],AX
            movzx EAX,WORD PTR [R15+10]
            movzx ECX,WORD PTR [R15+12]
            movups XMMWORD PTR [RDX+24],XMM0
            mov ESI,EAX
            mov EDI,EAX
            sar EAX,5
            and EAX,15
            sar EDI,9
            and ESI,31
            sub EAX,1
            add EDI,80
            movups XMMWORD PTR [RDX+40],XMM0
            mov DWORD PTR [RSP+64],EAX
            mov EAX,ECX
            mov DWORD PTR [RSP+68],EDI
            sar EAX,11
            mov RDI,RDX
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            add ECX,ECX
            sar EAX,5
            and ECX,62
            mov DWORD PTR [RSP+60],ESI
            and EAX,63
            mov DWORD PTR [RSP+48],ECX
            mov DWORD PTR [RSP+80],4294967295
            mov DWORD PTR [RSP+52],EAX
            call mktime@PLT

            mov QWORD PTR [R14+8],RAX
            movzx EAX,WORD PTR [R15+14]
            mov ESI,16
            mov RDI,RBP
            mov R15D,256
            mov BYTE PTR [R14+18],AL
            call .L_404a20

            add QWORD PTR [R12+64],16
            jmp .L_40b96a
.L_40b960:

            sub R15,1
            je .L_40ba68
.L_40b96a:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R15
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_40b960

            mov RSI,QWORD PTR [RSP+48]
            xor ECX,ECX
            lea RDX,QWORD PTR [RSI-1]
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b990:

            cmp BYTE PTR [RAX+RCX*1],0
            je .L_40bbd8

            add RCX,1
            cmp RDX,RCX
            jae .L_40b990
.L_40b9a3:

            lea RDX,QWORD PTR [RIP+.L_444c65]
.L_40b9aa:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_40b9b9:

            mov R12D,4294967266
            jmp .L_40b535
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b9c8:

            cmp BYTE PTR [RAX],77
            jne .L_40b5a3

            cmp BYTE PTR [RAX+1],90
            jne .L_40b5a3

            lea R14,QWORD PTR [RSP+48]
            mov R13D,4096
.L_40b9e6:

            mov RSI,R13
            mov RDX,R14
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            mov RSI,RAX
            je .L_40bed6

            mov RCX,QWORD PTR [RSP+48]
            mov R8,RAX
            add RCX,RAX
            lea RAX,QWORD PTR [RAX+8]
            cmp RCX,RAX
            ja .L_40ba32

            jmp .L_40bf93
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ba20:

            cdqe 
            add RSI,RAX
            lea RAX,QWORD PTR [RSI+8]
            cmp RCX,RAX
            jbe .L_40bf57
.L_40ba32:

            mov RDI,RSI
            call .L_40b220

            test EAX,EAX
            jne .L_40ba20

            sub RSI,R8
            mov RDI,RBP
            call .L_404a20

            xor EDX,EDX
            mov ESI,42
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            jne .L_40b5a3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba68:

            lea RDX,QWORD PTR [RIP+.L_444c18]
            jmp .L_40b9aa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ba78:

            movzx R13D,WORD PTR [RAX+36]
            cmp R13W,60000
            ja .L_40b9a3

            movzx ECX,BYTE PTR [RAX+38]
            add R13,40
            mov BYTE PTR [R12+92],CL
            movzx EAX,BYTE PTR [RAX+39]
            mov BYTE PTR [R12+93],AL
            jmp .L_40b64e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40baa8:

            mov R14,QWORD PTR [RBX+200]
            test R14,R14
            jne .L_40b480

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            mov RDI,RBP
            call .L_431820

            test RAX,RAX
            mov R14,RAX
            mov QWORD PTR [RBX+200],RAX
            je .L_40b9b9
.L_40badf:

            movsx R9D,BYTE PTR [R13+18]
            jmp .L_40b480
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40baf0:

            mov RDI,QWORD PTR [RSP+16]
            mov RCX,R14
            call .L_4393f0

            test EAX,EAX
            jne .L_40bf10
.L_40bb05:

            mov R14,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [R13]
            mov RDI,R14
            call .L_439490

            test BYTE PTR [R13+18],1
            je .L_40bba0

            mov ESI,33133
            mov RDI,R14
            call .L_4392b0
.L_40bb2e:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R13+8]
            xor EDX,EDX
            call .L_4392c0

            mov EDI,DWORD PTR [R13]
            mov QWORD PTR [RBX],0
            test EDI,EDI
            mov QWORD PTR [RBX+8],RDI
            jne .L_40bb5d

            mov ECX,257
            mov WORD PTR [RBX+146],CX
.L_40bb5d:

            mov RAX,QWORD PTR [RBX+40]
            sub RSP,8
.L_40bb65:

            lea R13,QWORD PTR [RBX+208]
            lea RCX,QWORD PTR [RIP+.L_444c78]
            mov EDX,64
            mov ESI,1
            mov RDI,R13
            push QWORD PTR [RAX+16]
            movzx R9D,BYTE PTR [RBX+91]
            xor EAX,EAX
            movzx R8D,BYTE PTR [RBX+90]
            call __sprintf_chk@PLT

            mov QWORD PTR [RBP+24],R13
            pop RAX
            pop RDX
            jmp .L_40b535
          .byte 0x90
.L_40bba0:

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,33206
            call .L_4392b0

            jmp .L_40bb2e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bbb8:

            movzx EDX,WORD PTR [RBX+80]
            lea RDX,QWORD PTR [RDX+RDX*2]
            shl RDX,5
            lea RAX,QWORD PTR [RAX+RDX*1-96]
            mov QWORD PTR [RBX+40],RAX
            jmp .L_40b455
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bbd8:

            test RCX,RCX
            jle .L_40b9a3

            lea RDI,QWORD PTR [R14+24]
            mov RDX,RCX
            mov RSI,RAX
            mov QWORD PTR [R14+24],0
            mov QWORD PTR [R14+32],0
            mov QWORD PTR [R14+40],0
            mov QWORD PTR [RSP+32],RCX
            call .L_431240

            mov RCX,QWORD PTR [RSP+32]
            mov RDI,RBP
            add RCX,1
            mov RSI,RCX
            mov QWORD PTR [RSP+32],RCX
            call .L_404a20

            mov RCX,QWORD PTR [RSP+32]
            add QWORD PTR [R12+64],RCX
            mov ECX,DWORD PTR [R14]
            cmp ECX,2147450880
            ja .L_40b9a3

            mov EAX,DWORD PTR [R14+4]
            mov EDX,ECX
            mov RSI,RAX
            add RAX,RDX
            cmp RAX,2147450880
            jg .L_40b9a3

            movzx EAX,WORD PTR [R14+16]
            cmp AX,-2
            je .L_40bea0

            ja .L_40bcf0

            cmp AX,-3
            je .L_40bcfd

            cmp AX,WORD PTR [R12+80]
            jae .L_40b9a3

            movzx EDX,AX
.L_40bc85:

            cmp EDX,DWORD PTR [RSP+44]
            jl .L_40b9a3

            mov EAX,0
            cmovne R13D,EAX
            cmp ESI,R13D
            jne .L_40b9a3
.L_40bca1:

            test ECX,ECX
            lea R13D,DWORD PTR [RCX+RSI*1]
            je .L_40bcc4

            movsxd RAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,5
            add RAX,QWORD PTR [R12+96]
            cmp WORD PTR [RAX+4],0
            je .L_40b9a3
.L_40bcc4:

            add DWORD PTR [RSP+40],1
            movzx EAX,WORD PTR [R12+82]
            mov EDI,DWORD PTR [RSP+40]
            add QWORD PTR [RSP+24],48
            cmp EDI,EAX
            jge .L_40bf67

            mov RAX,QWORD PTR [R12+104]
            mov DWORD PTR [RSP+44],EDX
            jmp .L_40b892
          .byte 0x90
.L_40bcf0:

            cmp WORD PTR [R12+82],1
            jne .L_40b9a3
.L_40bcfd:

            mov R8D,DWORD PTR [RSP+40]
            test R8D,R8D
            jne .L_40b9a3

            xor EDX,EDX
            jmp .L_40bca1
.L_40bd0f:

            mov RDI,R14
            mov R12D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bd40:

            mov RDI,QWORD PTR [RSP+16]
            call .L_438250

            test RAX,RAX
            mov R14,RAX
            je .L_40bb05

            mov RDI,RAX
            mov QWORD PTR [RBX+128],0
            call wcslen@PLT

            lea RDI,QWORD PTR [RBX+120]
            mov RDX,RAX
            mov RSI,R14
            call .L_431280

            mov RDX,QWORD PTR [RBX+128]
            mov RSI,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_40bda4

            lea RDX,QWORD PTR [RSI+RDX*4]
            mov RAX,RSI
            nop
.L_40bd90:

            cmp DWORD PTR [RAX],92
            jne .L_40bd9b

            mov DWORD PTR [RAX],47
.L_40bd9b:

            add RAX,4
            cmp RAX,RDX
            jne .L_40bd90
.L_40bda4:

            mov RDI,QWORD PTR [RSP+16]
            call .L_439390

            jmp .L_40bb05
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bdb8:

            lea RAX,QWORD PTR [RIP+.L_444c3c]
            mov QWORD PTR [RDI+24],RAX
            jmp .L_40b572
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bdd0:

            lea RSI,QWORD PTR [R13+256]
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_40ba68

            xor EDX,EDX
            add RAX,R13
            jmp .L_40be09
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bdf8:

            add RDX,1
            cmp RDX,256
            je .L_40b9a3
.L_40be09:

            cmp BYTE PTR [RAX+RDX*1],0
            lea R14,QWORD PTR [R13+RDX*1]
            jne .L_40bdf8

            test RDX,RDX
            je .L_40b9a3

            lea RSI,QWORD PTR [R14+257]
            xor EDX,EDX
            mov RDI,RBP
            lea R15,QWORD PTR [R14+1]
            call .L_4049d0

            test RAX,RAX
            je .L_40ba68

            xor EDX,EDX
            add RAX,R14
            jmp .L_40be59
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40be48:

            add RDX,1
            cmp RDX,256
            je .L_40b9a3
.L_40be59:

            cmp BYTE PTR [RAX+RDX*1+1],0
            lea R13,QWORD PTR [R15+RDX*1]
            jne .L_40be48

            test RDX,RDX
            je .L_40b9a3

            add R13,1
            movzx EDX,WORD PTR [R12+84]
            jmp .L_40b657
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40be80:

            mov ESI,DWORD PTR [RBX+176]
            test ESI,ESI
            je .L_40beef

            mov R14,QWORD PTR [RBX+192]
            jmp .L_40b480
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bea0:

            movzx EAX,WORD PTR [R12+82]
            sub EAX,1
            cmp EAX,DWORD PTR [RSP+40]
            jne .L_40b9a3

            movzx EAX,WORD PTR [R12+80]
            lea EDX,DWORD PTR [RAX-1]
            jmp .L_40bc85
.L_40bec1:

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            add QWORD PTR [R12+64],R15
            jmp .L_40b844
.L_40bed6:

            sar R13,1
            cmp R13,127
            jg .L_40b9e6
.L_40bee3:

            lea RDX,QWORD PTR [RIP+.L_444c40]
            jmp .L_40b9aa
.L_40beef:

            mov RDI,RBP
            call .L_431850

            mov DWORD PTR [RBX+176],1
            mov R14,RAX
            mov QWORD PTR [RBX+192],RAX
            jmp .L_40badf
.L_40bf10:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_40b506

            mov RDI,R14
            mov R12D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_40bb05
.L_40bf4a:

            xor ESI,ESI
            xor R13D,R13D
            xor R14D,R14D
            jmp .L_40b81b
.L_40bf57:

            sub RSI,R8
.L_40bf5a:

            mov RDI,RBP
            call .L_404a20

            jmp .L_40b9e6
.L_40bf67:

            cmp WORD PTR [R12+88],0
            jne .L_40bfbe

            test BYTE PTR [R12+84],3
            jne .L_40bfbe

            xor R12D,R12D
.L_40bf7b:

            mov BYTE PTR [RBX+144],1
            jmp .L_40b3e0
.L_40bf87:

            lea RDX,QWORD PTR [RIP+.L_444970]
            jmp .L_40b50d
.L_40bf93:

            xor ESI,ESI
            jmp .L_40bf5a
.L_40bf97:

            lea RDX,QWORD PTR [RIP+.L_4449c8]
            mov R8,R14
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_40b535
.L_40bfb9:

            call __stack_chk_fail@PLT
.L_40bfbe:

            lea RDX,QWORD PTR [RIP+.L_4449f0]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967276
            call .L_432bc0

            jmp .L_40bf7b
.L_40bfdc:

            nop
            nop
            nop
            nop
.L_40bfe0:

            push RBP
            push RBX
            mov RAX,RDI
            sub RSP,8
.L_40bfe9:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov RBP,QWORD PTR [RCX]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_40c060

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_40c040

            cmp BYTE PTR [RDX],0
            je .L_40c040

            xor EDX,EDX
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBP+184],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_40c037:

            add RSP,8
.L_40c03b:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_40c040:

            lea RDX,QWORD PTR [RIP+.L_444a78]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_432bc0

            jmp .L_40c037
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c060:

            mov EBX,4294967276
            jmp .L_40c037
.L_40c067:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c070:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            sub RSP,40
.L_40c084:

            mov RBX,QWORD PTR [RDI+48]
            mov QWORD PTR [RSP+16],RDI
            mov R11D,DWORD PTR [RBX+600]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+8],RAX
            test R11D,R11D
            je .L_40c4a8
.L_40c0a6:

            cmp R13D,-1
            jne .L_40c0b0

            mov R13D,DWORD PTR [R15]
            nop
.L_40c0b0:

            cmp R11D,R13D
            jge .L_40c196
.L_40c0b9:

            mov EBP,DWORD PTR [RBX+112]
            mov R12D,DWORD PTR [RBX+560]
            mov DWORD PTR [RBX+600],R11D
            cmp EBP,R12D
            jl .L_40c1b8
.L_40c0d3:

            mov R10,QWORD PTR [RBX+104]
            mov ECX,EBP
            lea RDI,QWORD PTR [RIP+.L_444d80]
            sub ECX,R12D
            movsxd RAX,R12D
            mov RDX,QWORD PTR [RBX+584]
            lea R14,QWORD PTR [RBX+480]
            mov RSI,R10
            shr RSI,CL
            and ESI,DWORD PTR [RDI+RAX*4]
            mov ECX,DWORD PTR [RBX+564]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [RBX+480]
            jl .L_40c11d

            mov EDX,EAX
            mov RDI,R14
            call .L_40a740
.L_40c11d:

            cmp EAX,18
            mov R8,QWORD PTR [RBX+552]
            je .L_40c3a0

            cmp EAX,19
            je .L_40c270

            cmp EAX,17
            je .L_40c1f0

            movsxd RDX,EAX
            movsxd RCX,R11D
            add RCX,QWORD PTR [R15+72]
            movzx EDX,BYTE PTR [R8+RDX*1]
            sub EBP,EDX
            mov EDX,2021161081
            mov DWORD PTR [RBX+112],EBP
            movzx ESI,BYTE PTR [RCX]
            sub ESI,EAX
            add ESI,17
            mov EAX,ESI
            imul EDX
            mov EAX,ESI
            sar EAX,31
            sar EDX,3
            sub EDX,EAX
            mov EAX,EDX
            shl EAX,4
            add EDX,EAX
            sub ESI,EDX
            js .L_40c48d

            movsxd RAX,ESI
            add R11D,1
            add DWORD PTR [R15+RAX*4+4],1
            cmp R11D,R13D
            mov BYTE PTR [RCX],SIL
            jl .L_40c0b9
.L_40c196:

            mov EAX,1
.L_40c19b:

            mov DWORD PTR [RBX+600],R11D
            add RSP,40
.L_40c1a6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c1b8:

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40ae00

            test EAX,EAX
            mov EBP,DWORD PTR [RBX+112]
            mov R12D,DWORD PTR [RBX+560]
            jne .L_40c0d3

            cmp EBP,R12D
            jge .L_40c0d3

            jmp .L_40c19b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c1f0:

            movzx EDX,BYTE PTR [R8+17]
            lea EAX,DWORD PTR [RDX+3]
            cmp EAX,EBP
            jl .L_40c229

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40ae00

            test EAX,EAX
            je .L_40c440

            mov RAX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            mov R10,QWORD PTR [RBX+104]
            movzx EDX,BYTE PTR [RAX+17]
.L_40c229:

            sub EBP,EDX
            lea ECX,DWORD PTR [RBP-4]
            shr R10,CL
            and R10D,15
            add R10D,4
            lea EAX,DWORD PTR [R10+R11*1]
            cmp EAX,R13D
            jg .L_40c48a

            mov DWORD PTR [RBX+112],ECX
            xor EAX,EAX
            movsxd RCX,R11D
            nop
            nop
.L_40c250:

            mov RDX,QWORD PTR [R15+72]
            add R11D,1
            add RDX,RAX
            add RAX,1
            cmp R10D,EAX
            mov BYTE PTR [RDX+RCX*1],0
            jg .L_40c250

            jmp .L_40c0b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c270:

            movzx EDX,BYTE PTR [R8+19]
            lea EAX,DWORD PTR [R12+RDX*1+1]
            cmp EAX,EBP
            jle .L_40c2ba

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40ae00

            mov R8,QWORD PTR [RBX+552]
            test EAX,EAX
            mov EBP,DWORD PTR [RBX+112]
            movzx EDX,BYTE PTR [R8+19]
            jne .L_40c2b6

            mov ECX,DWORD PTR [RBX+560]
            lea ECX,DWORD PTR [RDX+RCX*1+1]
            cmp EBP,ECX
            jl .L_40c19b
.L_40c2b6:

            mov R10,QWORD PTR [RBX+104]
.L_40c2ba:

            mov EAX,EBP
            mov R12,R10
            sub EAX,EDX
            lea EBP,DWORD PTR [RAX-1]
            mov ECX,EBP
            shr R12,CL
            and R12D,1
            add R12D,4
            lea EDX,DWORD PTR [R12+R11*1]
            cmp EDX,R13D
            jg .L_40c4c8

            movsxd RAX,DWORD PTR [RBX+560]
            mov ECX,EBP
            lea RDI,QWORD PTR [RIP+.L_444d80]
            mov RSI,R10
            mov RDX,QWORD PTR [RBX+584]
            mov DWORD PTR [RBX+112],EBP
            sub ECX,EAX
            shr RSI,CL
            and ESI,DWORD PTR [RDI+RAX*4]
            mov ECX,DWORD PTR [RBX+564]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [RBX+480]
            jl .L_40c32d

            mov EDX,EAX
            mov RDI,R14
            mov QWORD PTR [RSP+24],R8
            call .L_40a740

            mov R8,QWORD PTR [RSP+24]
.L_40c32d:

            movsxd RDX,EAX
            mov RCX,QWORD PTR [R15+72]
            movsxd RSI,R11D
            movzx EDX,BYTE PTR [R8+RDX*1]
            sub EBP,EDX
            mov EDX,2021161081
            mov DWORD PTR [RBX+112],EBP
            movzx EDI,BYTE PTR [RCX+RSI*1]
            sub EDI,EAX
            add EDI,17
            mov EAX,EDI
            imul EDX
            mov EAX,EDI
            sar EAX,31
            sar EDX,3
            sub EDX,EAX
            mov EAX,EDX
            shl EAX,4
            add EDX,EAX
            sub EDI,EDX
            movsxd RDX,EDI
            js .L_40c48d

            mov EDI,EDX
            xor EAX,EAX
            jmp .L_40c37c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c378:

            mov RCX,QWORD PTR [R15+72]
.L_40c37c:

            add RCX,RSI
            add R11D,1
            mov BYTE PTR [RCX+RAX*1],DIL
            add RAX,1
            cmp R12D,EAX
            jg .L_40c378

            add DWORD PTR [R15+RDX*4+4],R12D
            jmp .L_40c0b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c3a0:

            movzx EDX,BYTE PTR [R8+18]
            lea EAX,DWORD PTR [RDX+4]
            cmp EAX,EBP
            jge .L_40c410
.L_40c3ac:

            sub EBP,EDX
            lea ECX,DWORD PTR [RBP-5]
            shr R10,CL
            and R10D,31
            add R10D,20
            lea EDX,DWORD PTR [R10+R11*1]
            cmp EDX,R13D
            jg .L_40c48a

            mov DWORD PTR [RBX+112],ECX
            movsxd RCX,R11D
            add RCX,QWORD PTR [R15+72]
            mov EAX,R10D
            mov R11D,EDX
            lea RDI,QWORD PTR [RCX+8]
            mov QWORD PTR [RCX],0
            mov QWORD PTR [RCX+RAX*1-8],0
            xor EAX,EAX
            and RDI,-8
            sub RCX,RDI
            add ECX,R10D
            shr ECX,3
            mov ECX,ECX

            rep stosq QWORD PTR [RDI]

            jmp .L_40c0b0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c410:

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40ae00

            test EAX,EAX
            je .L_40c468

            mov RAX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            mov R10,QWORD PTR [RBX+104]
            movzx EDX,BYTE PTR [RAX+18]
            jmp .L_40c3ac
          .byte 0x66
          .byte 0x90
.L_40c440:

            mov RDX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            movzx EDX,BYTE PTR [RDX+17]
            lea ECX,DWORD PTR [RDX+3]
            cmp ECX,EBP
            jge .L_40c19b

            mov R10,QWORD PTR [RBX+104]
            jmp .L_40c229
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c468:

            mov RDX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            movzx EDX,BYTE PTR [RDX+18]
            lea ECX,DWORD PTR [RDX+4]
            cmp ECX,EBP
            jge .L_40c19b

            mov R10,QWORD PTR [RBX+104]
            jmp .L_40c3ac
.L_40c48a:

            mov DWORD PTR [RBX+112],EBP
.L_40c48d:

            mov EAX,4294967295
.L_40c492:

            add RSP,40
.L_40c496:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c4a8:

            pxor XMM0,XMM0
            mov DWORD PTR [RSI+68],0
            movups XMMWORD PTR [RSI+4],XMM0
            movups XMMWORD PTR [RSI+20],XMM0
            movups XMMWORD PTR [RSI+36],XMM0
            movups XMMWORD PTR [RSI+52],XMM0
            jmp .L_40c0a6
.L_40c4c8:

            mov DWORD PTR [RBX+112],EAX
            mov EAX,4294967295
            jmp .L_40c492
.L_40c4d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c4e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,408
.L_40c4f1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+88],RDI
            mov QWORD PTR [RSP+192],RSI
            mov RBX,QWORD PTR [RAX]
            call .L_40a7c0

            test EAX,EAX
            js .L_40e0c5

            mov RDX,QWORD PTR [RBX+40]
            movzx EAX,WORD PTR [RDX+6]
            cmp AX,1
            je .L_40c833

            jb .L_40c78a

            cmp AX,3
            jne .L_40c804

            mov RAX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RAX+2472]
            mov RAX,QWORD PTR [RAX]
            cmp QWORD PTR [RAX+160],0
            mov RDX,QWORD PTR [RAX+56]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+144],RDX
            je .L_40e269
.L_40c578:

            mov RAX,QWORD PTR [RSP+144]
            movzx EBX,WORD PTR [RAX+12]
            movzx EAX,WORD PTR [RAX+8]
            cmp BX,AX
            je .L_40d1e0

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RCX+40]
            mov R12,QWORD PTR [RCX+440]
            cmp BYTE PTR [RDX+92],0
            je .L_40e0d9
.L_40c5ab:

            mov RSI,QWORD PTR [RSP+24]
            movzx EDX,BX
            mov DWORD PTR [R12+112],0
            cmp RDX,RAX
            mov BYTE PTR [R12+117],0
            mov QWORD PTR [RSI+432],RDX
            jge .L_40e4f9

            lea RCX,QWORD PTR [RSP+296]
            mov QWORD PTR [RSP+280],RCX
            jmp .L_40c64e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c5e8:

            cmp DWORD PTR [RSP+212],1
            ja .L_40e339

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+408]
.L_40c602:

            mov RAX,QWORD PTR [RSP+144]
            mov RCX,QWORD PTR [RSP+160]
            mov RDI,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+56],RCX
            call .L_40ab90

            test RAX,RAX
            js .L_40dbfe

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+432]
            mov RAX,QWORD PTR [RSP+144]
            movzx EAX,WORD PTR [RAX+8]
            cmp RDX,RAX
            jge .L_40e4f9
.L_40c64e:

            mov RSI,QWORD PTR [RSP+24]
            sub RAX,RDX
            mov RDI,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSI+160]
            mov QWORD PTR [RSI+424],RAX
            add RCX,RDX
            mov RDX,QWORD PTR [RSP+280]
            mov QWORD PTR [RSI+416],RCX
            mov ESI,1
            call .L_4049d0

            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            mov QWORD PTR [RSP+80],RAX
            jle .L_40e4e8

            mov RAX,QWORD PTR [RSP+144]
            movzx EAX,WORD PTR [RAX+6]
            cmp QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+176],RAX
            jle .L_40c6cb

            mov QWORD PTR [RSP+296],RAX
            mov QWORD PTR [RSP+80],RAX
.L_40c6cb:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+160]
            mov RDX,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [RAX+440]
            mov QWORD PTR [RAX+392],RSI
            mov QWORD PTR [RAX+400],RDX
            mov QWORD PTR [RAX+408],0
            mov EAX,DWORD PTR [RBP+604]
            test EAX,EAX
            mov DWORD PTR [RSP+212],EAX
            jne .L_40c5e8

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RBP+112]
            add RAX,400
            cmp BYTE PTR [RBP+117],0
            mov QWORD PTR [RSP+168],RAX
            mov EAX,64
            setne CL
            sub EAX,EDX
            cmp EAX,15
            setg AL
            test CL,AL
            je .L_40c74c

            cmp QWORD PTR [RSP+80],0
            jg .L_40e061
.L_40c74c:

            mov EBX,DWORD PTR [RBP]
            mov RAX,QWORD PTR [RSP+24]
            mov R12,RBP
            add RAX,392
            cmp EBX,17
            mov QWORD PTR [RSP+120],RAX
            jg .L_40d26d

            nop
            nop
            nop
            nop
            nop
.L_40c770:

            lea R11,QWORD PTR [R12+104]
.L_40c775:

            cmp EBX,17
            ja .L_40c775
.L_40c77a:

            lea RCX,QWORD PTR [RIP+.L_444d20]
            movsxd RAX,DWORD PTR [RCX+RBX*4]
            add RAX,RCX
            jmp RAX
.L_40c78a:

            mov RDI,QWORD PTR [RSP+88]
            mov R15,QWORD PTR [RSP+192]
            mov ESI,1
            mov RAX,QWORD PTR [RDI+2472]
            mov RDX,R15
            mov RAX,QWORD PTR [RAX]
            mov RBX,QWORD PTR [RAX+56]
            call .L_4049d0

            mov RDX,QWORD PTR [R15]
            test RDX,RDX
            jle .L_40e6a0

            movzx ECX,WORD PTR [RBX+10]
            cmp RDX,RCX
            jg .L_40ca28
.L_40c7cb:

            movzx ECX,WORD PTR [RBX+8]
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [RBX+56],RAX
            mov WORD PTR [RBX+12],CX
.L_40c7db:

            mov RDX,QWORD PTR [RSP+392]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40e85d

            add RSP,408
.L_40c7f9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40c804:

            mov RCX,QWORD PTR [RDX+16]
            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_444ba0]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-25
            xor EAX,EAX
            jmp .L_40c7db
.L_40c833:

            mov RAX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RAX+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+160],0
            mov R12,QWORD PTR [RBX+56]
            je .L_40e2a8
.L_40c854:

            movzx EBP,WORD PTR [R12+12]
            movzx R8D,WORD PTR [R12+8]
            cmp BP,R8W
            je .L_40d213

            mov RAX,QWORD PTR [RBX+40]
            cmp BYTE PTR [RAX+92],0
            jne .L_40c90b

            cmp BYTE PTR [RBX+384],0
            mov QWORD PTR [RBX+272],0
            lea RDI,QWORD PTR [RBX+272]
            mov DWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+296],0
            mov DWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+312],0
            jne .L_40e25f

            lea RDX,QWORD PTR [RIP+.L_443a68]
            mov ECX,112
            mov ESI,4294967281
            call inflateInit2_@PLT
.L_40c8e2:

            test EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_444ab0]
            mov ESI,4294967295
            jne .L_40dbf2

            mov RAX,QWORD PTR [RBX+40]
            mov BYTE PTR [RBX+384],1
            mov BYTE PTR [RAX+92],1
            movzx R8D,WORD PTR [R12+8]
.L_40c90b:

            movzx EAX,WORD PTR [R12+4]
            xor R13D,R13D
            movzx EDX,R8W
            cmp WORD PTR [R12+6],AX
            movzx EAX,BP
            mov R15,QWORD PTR [RSP+88]
            mov QWORD PTR [RBX+312],RAX
            lea RBP,QWORD PTR [RSP+304]
            sete R13B
            add R13D,R13D
            cmp RDX,RAX
            jbe .L_40dda0
.L_40c945:

            mov RDX,QWORD PTR [RBX+160]
            sub R8D,EAX
            mov ESI,1
            mov DWORD PTR [RBX+304],R8D
            mov RDI,R15
            add RDX,RAX
            mov QWORD PTR [RBX+296],RDX
            mov RDX,RBP
            call .L_4049d0

            mov RSI,QWORD PTR [RSP+304]
            mov R14,RAX
            test RSI,RSI
            jle .L_40e6a0

            movzx EAX,WORD PTR [R12+6]
            cmp RSI,RAX
            jle .L_40c99a

            mov QWORD PTR [RSP+304],RAX
            mov RSI,RAX
.L_40c99a:

            test R13D,R13D
            mov QWORD PTR [RBX+272],R14
            mov EDX,ESI
            mov DWORD PTR [RBX+280],ESI
            mov QWORD PTR [RBX+288],0
            jle .L_40dd50

            movsxd RAX,R13D
            movzx ECX,BYTE PTR [R14]
            cmp RAX,RSI
            jl .L_40dd14

            cmp R13D,2
            je .L_40dbcc

            cmp CL,75
            jne .L_40dbe6
.L_40c9e0:

            mov QWORD PTR [R12+16],RSI
            mov QWORD PTR [R12+56],R14
            mov RDI,R15
            call .L_40ab90

            test RAX,RAX
            js .L_40dbfe

            sub R13D,DWORD PTR [RSP+304]
.L_40ca03:

            movzx R8D,WORD PTR [R12+8]
            mov RAX,QWORD PTR [RBX+312]
            movzx EDX,R8W
            cmp RDX,RAX
            ja .L_40c945

            jmp .L_40dda0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ca28:

            mov RSI,QWORD PTR [RSP+192]
            mov RDX,RCX
            mov QWORD PTR [RSI],RCX
            jmp .L_40c7cb
.L_40ca3b:

            mov EAX,DWORD PTR [R12+120]
            lea EAX,DWORD PTR [RAX+RAX*2]
            cmp DWORD PTR [R12+112],EAX
            jge .L_40ca67

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40ae00

            test EAX,EAX
            je .L_40e2d0
.L_40ca67:

            mov EAX,DWORD PTR [R12+120]
            pxor XMM0,XMM0
            mov DWORD PTR [R12+188],0
            test EAX,EAX
            movups XMMWORD PTR [R12+124],XMM0
            movups XMMWORD PTR [R12+140],XMM0
            movups XMMWORD PTR [R12+156],XMM0
            movups XMMWORD PTR [R12+172],XMM0
            jle .L_40caee

            xor EDX,EDX
            mov EAX,DWORD PTR [R12+112]
            mov RSI,QWORD PTR [R12+192]
.L_40cab0:

            lea ECX,DWORD PTR [RAX-3]
            mov RAX,QWORD PTR [R12+104]
            shr RAX,CL
            lea ECX,DWORD PTR [RDX+1]
            and EAX,7
            mov BYTE PTR [RSI+RDX*1],AL
            mov RSI,QWORD PTR [R12+192]
            movzx EAX,BYTE PTR [RSI+RDX*1]
            add RDX,1
            add DWORD PTR [R12+RAX*4+124],1
            mov EAX,DWORD PTR [R12+112]
            sub EAX,3
            cmp DWORD PTR [R12+120],ECX
            mov DWORD PTR [R12+112],EAX
            jg .L_40cab0
.L_40caee:

            lea RDI,QWORD PTR [R12+120]
            call .L_40a3d0

            test EAX,EAX
            je .L_40e3de
.L_40cb00:

            mov DWORD PTR [R12+600],0
.L_40cb0c:

            mov RDI,QWORD PTR [RSP+120]
            call .L_40afa0

            test EAX,EAX
            jne .L_40cb60

            mov DWORD PTR [R12],12
.L_40cb22:

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+80]
            mov RSI,RAX
            sub RSI,QWORD PTR [RDX+400]
            add RSI,QWORD PTR [RDX+408]
            cmp QWORD PTR [RSP+176],RAX
            je .L_40e314

            mov QWORD PTR [RDX+408],RSI
            jmp .L_40c602
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cb60:

            lea RDI,QWORD PTR [R12+480]
            call .L_40a3d0

            test EAX,EAX
            je .L_40e3de

            mov DWORD PTR [R12+600],0
.L_40cb81:

            mov RDI,QWORD PTR [RSP+120]
            lea RSI,QWORD PTR [R12+360]
            mov EDX,256
            call .L_40c070

            test EAX,EAX
            js .L_40e3de

            jne .L_40cbaf

            mov DWORD PTR [R12],13
            jmp .L_40cb22
.L_40cbaf:

            mov DWORD PTR [R12+600],0
.L_40cbbb:

            mov RDI,QWORD PTR [RSP+120]
            call .L_40afa0

            test EAX,EAX
            jne .L_40cc06

            mov RCX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+80]
            mov DWORD PTR [R12],14
            mov RSI,RAX
            sub RSI,QWORD PTR [RCX+400]
            add RSI,QWORD PTR [RCX+408]
            cmp QWORD PTR [RSP+176],RAX
            je .L_40e314

            mov QWORD PTR [RCX+408],RSI
            jmp .L_40c602
.L_40cc06:

            lea RDI,QWORD PTR [R12+480]
            call .L_40a3d0

            test EAX,EAX
            je .L_40e3de

            mov DWORD PTR [R12+600],256
.L_40cc27:

            lea RBX,QWORD PTR [R12+360]
            mov RDI,QWORD PTR [RSP+120]
            mov EDX,4294967295
            mov RSI,RBX
            call .L_40c070

            test EAX,EAX
            js .L_40e3de

            jne .L_40cc88

            mov DWORD PTR [R12],15
.L_40cc53:

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+80]
            mov RSI,RDX
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            cmp QWORD PTR [RSP+176],RDX
            je .L_40e314
.L_40cc7c:

            mov QWORD PTR [RAX+408],RSI
            jmp .L_40c602
.L_40cc88:

            mov RDI,RBX
            call .L_40a3d0

            test EAX,EAX
            je .L_40e3de

            mov DWORD PTR [R12+600],0
.L_40cca4:

            mov RDI,QWORD PTR [RSP+120]
            call .L_40afa0

            test EAX,EAX
            jne .L_40ccbc

            mov DWORD PTR [R12],16
            jmp .L_40cc53
.L_40ccbc:

            lea RDI,QWORD PTR [R12+480]
            call .L_40a3d0

            test EAX,EAX
            je .L_40e3de

            mov DWORD PTR [R12+600],0
.L_40ccdd:

            lea RBX,QWORD PTR [R12+240]
            mov RDI,QWORD PTR [RSP+120]
            mov EDX,4294967295
            mov RSI,RBX
            call .L_40c070

            test EAX,EAX
            js .L_40e3de

            jne .L_40d23b

            mov DWORD PTR [R12],17
            jmp .L_40cc53
.L_40cd12:

            mov EAX,DWORD PTR [R12+76]
            test EAX,EAX
            mov DWORD PTR [R12+72],EAX
            js .L_40e3de

            mov DWORD PTR [R12],8
.L_40cd2c:

            mov RCX,QWORD PTR [R12+56]
            mov RDI,QWORD PTR [RSP+24]
            test RCX,RCX
            mov RAX,QWORD PTR [RDI+400]
            je .L_40cfc4

            mov RDX,QWORD PTR [RDI+424]
            test RDX,RDX
            jle .L_40e7a8

            test RAX,RAX
            jle .L_40cf89

            mov RBP,QWORD PTR [RSP+24]
            mov EBX,DWORD PTR [R12+24]
            mov RSI,QWORD PTR [RBP+392]
            mov RDI,QWORD PTR [RBP+416]
            jmp .L_40cd92
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cd80:

            test RDX,RDX
            jle .L_40da15

            test RAX,RAX
            jle .L_40cf89
.L_40cd92:

            mov R9D,DWORD PTR [R12+4]
            sub R9D,EBX
            cmp R9D,ECX
            mov EBX,R9D
            cmovg EBX,ECX
            movsxd R13,EBX
            cmp R13,RDX
            jle .L_40cdb0

            mov EBX,EDX
            mov R13,RDX
.L_40cdb0:

            cmp RAX,R13
            jge .L_40cdba

            mov EBX,EAX
            mov R13,RAX
.L_40cdba:

            movsxd R14,EBX
            mov RDX,R14
            call memcpy@PLT

            movsxd RDI,DWORD PTR [R12+24]
            mov RSI,QWORD PTR [RBP+392]
            mov RDX,R14
            add RDI,QWORD PTR [R12+16]
            call memcpy@PLT

            add EBX,DWORD PTR [R12+24]
            mov RCX,QWORD PTR [R12+56]
            mov RSI,QWORD PTR [RBP+392]
            mov RAX,QWORD PTR [RBP+400]
            mov RDI,QWORD PTR [RBP+416]
            mov RDX,QWORD PTR [RBP+424]
            and EBX,DWORD PTR [R12+8]
            sub RCX,R14
            add QWORD PTR [RBP+432],R13
            add RSI,R14
            sub RAX,R13
            add RDI,R14
            sub RDX,R13
            test RCX,RCX
            mov QWORD PTR [RBP+392],RSI
            mov QWORD PTR [RBP+400],RAX
            mov QWORD PTR [RBP+416],RDI
            mov QWORD PTR [RBP+424],RDX
            mov DWORD PTR [R12+24],EBX
            mov QWORD PTR [R12+56],RCX
            jne .L_40cd80

            jmp .L_40cfc4
.L_40ce53:

            mov ESI,DWORD PTR [R12+112]
            mov RDI,QWORD PTR [RSP+24]
.L_40ce5d:

            cmp ESI,31
            jle .L_40ced2
.L_40ce62:

            mov RAX,QWORD PTR [R12+104]
            lea ECX,DWORD PTR [RSI-16]
            mov RDX,RAX
            shr RDX,CL
            lea ECX,DWORD PTR [RSI-32]
            mov BYTE PTR [R12+76],DL
            shr DX,8
            shr RAX,CL
            mov BYTE PTR [R12+77],DL
            mov DWORD PTR [R12+112],ECX
            mov BYTE PTR [R12+78],AL
            shr AX,8
            mov BYTE PTR [R12+79],AL
.L_40ce97:

            mov EAX,DWORD PTR [R12]
            mov DWORD PTR [R12+80],0
            cmp EAX,5
            je .L_40e042

            cmp EAX,6
            je .L_40e221

            cmp EAX,7
            je .L_40cd12

            cmp EAX,8
            je .L_40cd2c
.L_40cec8:

            mov ESI,DWORD PTR [R12+112]
            cmp ESI,31
            jg .L_40ce62
.L_40ced2:

            cmp ESI,15
            jle .L_40de7f

            mov RAX,QWORD PTR [R12+104]
            lea ECX,DWORD PTR [RSI-16]
            mov DWORD PTR [R12+80],2
            mov DWORD PTR [R12+112],ECX
            shr RAX,CL
            mov BYTE PTR [R12+76],AL
            shr AX,8
            cmp BYTE PTR [R12+117],0
            mov BYTE PTR [R12+77],AL
            mov EAX,2
            je .L_40de78

            movzx EAX,BYTE PTR [R12+116]
            mov DWORD PTR [R12+80],3
            mov EDX,3
            mov BYTE PTR [R12+117],0
            mov BYTE PTR [R12+78],AL
.L_40cf32:

            mov RAX,QWORD PTR [RDI+400]
            test RAX,RAX
            jle .L_40cf89

            mov RCX,QWORD PTR [RDI+392]
            movsxd RSI,EDX
            add RSI,R12
            nop
            nop
            nop
            nop
            nop
.L_40cf50:

            add RCX,1
            add EDX,1
            sub RAX,1
            mov QWORD PTR [RDI+392],RCX
            mov DWORD PTR [R12+80],EDX
            cmp EDX,4
            movzx R8D,BYTE PTR [RCX-1]
            mov BYTE PTR [RSI+76],R8B
            mov QWORD PTR [RDI+400],RAX
            je .L_40ce97

            add RSI,1
            test RAX,RAX
            jne .L_40cf50
.L_40cf89:

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,RDX
            sub RSI,RAX
            mov RAX,QWORD PTR [RSP+24]
            add RSI,QWORD PTR [RAX+408]
            cmp QWORD PTR [RSP+176],RDX
            jne .L_40cc7c

            jmp .L_40e314
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cfb8:

            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX+400]
.L_40cfc4:

            test BYTE PTR [R12+48],1
            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RCX+408]
            je .L_40cff9

            test RAX,RAX
            jle .L_40e5f0

            mov RDX,QWORD PTR [RSP+24]
            sub RAX,1
            add QWORD PTR [RDX+392],1
            mov QWORD PTR [RDX+400],RAX
.L_40cff9:

            mov RCX,QWORD PTR [RSP+80]
            mov DWORD PTR [R12],2
            sub RCX,RAX
            add RSI,RCX
.L_40d00c:

            mov RAX,QWORD PTR [RSP+24]
            jmp .L_40cc7c
.L_40d016:

            movzx EDX,BYTE PTR [R12+40]
            mov EAX,DWORD PTR [R12+112]
.L_40d021:

            test DL,DL
            je .L_40d056

            cmp EAX,31
            jle .L_40e5b5
.L_40d02e:

            mov RDX,QWORD PTR [R12+104]
            lea ECX,DWORD PTR [RAX-16]
            sub EAX,32
            mov DWORD PTR [R12+112],EAX
            mov RSI,RDX
            shr RSI,CL
            mov ECX,EAX
            shr RDX,CL
            shl ESI,16
            movzx EDX,DX
            or EDX,ESI
            mov DWORD PTR [R12+36],EDX
.L_40d056:

            cmp EAX,2
            jle .L_40d1a0
.L_40d05f:

            lea ECX,DWORD PTR [RAX-3]
            mov RAX,QWORD PTR [R12+104]
            mov DWORD PTR [R12+112],ECX
            shr RAX,CL
            and EAX,7
            mov BYTE PTR [R12+41],AL
            sub EAX,1
            cmp AL,2
            ja .L_40e3de

            cmp ECX,23
            jle .L_40d128
.L_40d08b:

            mov RDX,QWORD PTR [R12+104]
            lea ESI,DWORD PTR [RCX-24]
            sub ECX,8
            mov DWORD PTR [R12+112],ESI
            mov RAX,RDX
            shr RAX,CL
            mov ECX,ESI
            shr RDX,CL
            movzx EAX,AL
            shl RAX,16
            movzx EDX,DX
            or RAX,RDX
            test RAX,RAX
            mov QWORD PTR [R12+48],RAX
            je .L_40e3de

            mov QWORD PTR [R12+56],RAX
            movzx EAX,BYTE PTR [R12+41]
            cmp AL,3
            je .L_40d165

            cmp AL,1
            je .L_40ddfa

            mov DWORD PTR [R12],10
            mov EBX,10
            jmp .L_40c77a
.L_40d0ee:

            mov EAX,DWORD PTR [R12+112]
            test EAX,EAX
            jle .L_40e629
.L_40d0fb:

            mov RDX,QWORD PTR [R12+104]
            sub EAX,1
            mov ECX,EAX
            mov DWORD PTR [R12+112],EAX
            shr RDX,CL
            and EDX,1
            mov BYTE PTR [R12+40],DL
            jmp .L_40d021
.L_40d11a:

            mov ECX,DWORD PTR [R12+112]
            cmp ECX,23
            jg .L_40d08b
.L_40d128:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40ae00

            test EAX,EAX
            mov ECX,DWORD PTR [R12+112]
            jne .L_40d08b

            cmp ECX,23
            jg .L_40d08b

            mov DWORD PTR [R12],3
            jmp .L_40cc53
.L_40d160:

            mov ESI,DWORD PTR [R12+112]
.L_40d165:

            test SIL,15
            je .L_40e0af

            and ESI,4294967280
            mov DWORD PTR [R12+112],ESI
.L_40d177:

            mov DWORD PTR [R12+80],0
            mov DWORD PTR [R12],5
            mov RDI,QWORD PTR [RSP+24]
            jmp .L_40ce5d
.L_40d192:

            mov EAX,DWORD PTR [R12+112]
            cmp EAX,2
            jg .L_40d05f
.L_40d1a0:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40ae00

            test EAX,EAX
            mov EAX,DWORD PTR [R12+112]
            jne .L_40d05f

            cmp EAX,2
            jg .L_40d05f

            mov DWORD PTR [R12],2
            jmp .L_40e2eb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d1e0:

            mov RAX,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+192]
            movzx EAX,WORD PTR [RAX+14]
            mov RCX,RAX
            add RAX,QWORD PTR [RDX+160]
            movzx EDX,BX
            sub EDX,ECX
            movsxd RDX,EDX
            mov QWORD PTR [RDI],RDX
            jmp .L_40c7db
.L_40d213:

            movzx EAX,WORD PTR [R12+14]
            movzx EDX,BP
            mov RCX,RAX
            add RAX,QWORD PTR [RBX+160]
            sub EDX,ECX
            mov RCX,QWORD PTR [RSP+192]
            movsxd RDX,EDX
            mov QWORD PTR [RCX],RDX
            jmp .L_40c7db
.L_40d23b:

            mov RDI,RBX
            call .L_40a3d0

            test EAX,EAX
            je .L_40e3de

            mov DWORD PTR [R12],18
            cmp DWORD PTR [RBP],17
            mov RAX,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RAX+440]
            jle .L_40e218

            mov EBX,DWORD PTR [R12]
.L_40d26d:

            mov RAX,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [R12+240]
            lea RDX,QWORD PTR [R12+120]
            movdqu XMM0,XMMWORD PTR [R12+104]
            mov R9,R12
            mov QWORD PTR [RSP+272],RSI
            mov RSI,QWORD PTR [R12+96]
            mov RCX,QWORD PTR [RAX+424]
            mov RBP,QWORD PTR [RAX+416]
            movaps XMMWORD PTR [RSP+304],XMM0
            mov QWORD PTR [RSP+264],RDX
            lea RDX,QWORD PTR [R12+360]
            mov QWORD PTR [RSP+200],RSI
            lea RAX,QWORD PTR [RBP+RCX*1]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+184],RCX
            mov ECX,DWORD PTR [R12+8]
            mov QWORD PTR [RSP+104],RDX
            mov R8D,DWORD PTR [R12+32]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [R12+192]
            mov R15D,DWORD PTR [R12+28]
            mov R11D,DWORD PTR [R12+24]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [R12+312]
            mov QWORD PTR [RSP+256],RAX
            mov RAX,QWORD PTR [R12+432]
            mov QWORD PTR [RSP+224],RAX
            mov RAX,QWORD PTR [R12+56]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [R12+200]
            mov DWORD PTR [RSP+220],EAX
            mov EAX,DWORD PTR [R12+320]
            mov DWORD PTR [RSP+244],EAX
            movsxd RAX,DWORD PTR [R12+440]
            mov DWORD PTR [RSP+240],EAX
            mov DWORD PTR [RSP+96],ECX
            mov ESI,DWORD PTR [R12+84]
            mov EDX,DWORD PTR [R12+4]
            mov ECX,DWORD PTR [R12+92]
            mov QWORD PTR [RSP+232],RAX
            mov DWORD PTR [RSP+128],ESI
            mov ESI,DWORD PTR [R12+64]
            mov DWORD PTR [RSP+20],EDX
            mov EDX,DWORD PTR [R12+88]
            mov DWORD PTR [RSP+132],ECX
            mov ECX,DWORD PTR [R12+68]
            mov DWORD PTR [RSP+100],ESI
            movzx ESI,BYTE PTR [R12+41]
            mov DWORD PTR [RSP+112],EDX
            mov EDX,DWORD PTR [R12+72]
            mov DWORD PTR [RSP+116],ECX
            lea RCX,QWORD PTR [RSP+304]
            mov DWORD PTR [RSP+208],EDX
            mov BYTE PTR [RSP+219],SIL
            mov QWORD PTR [RSP+152],RCX
.L_40d3d2:

            lea EAX,DWORD PTR [RBX-18]
.L_40d3d5:

            cmp EAX,4
            ja .L_40d3d5

            lea RCX,QWORD PTR [RIP+.L_444d68]
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_40d3ea:

            sub EAX,256
            mov R9,R15
            mov R8D,DWORD PTR [RSP+40]
            mov ECX,EAX
            mov R15D,DWORD PTR [RSP+32]
            sar EAX,3
            and ECX,7
            mov QWORD PTR [RSP+8],RBX
            mov DWORD PTR [RSP+112],EAX
            mov DWORD PTR [RSP+128],ECX
.L_40d414:

            cmp DWORD PTR [RSP+128],7
            je .L_40db39

            mov EAX,DWORD PTR [RSP+128]
            lea R8D,DWORD PTR [RAX+2]
.L_40d42d:

            movsxd RAX,R8D
            cmp RAX,QWORD PTR [RSP+8]
            ja .L_40e017

            mov EAX,DWORD PTR [RSP+112]
            cmp EAX,1
            je .L_40dc45

            cmp EAX,2
            je .L_40dc23

            test EAX,EAX
            je .L_40dc14

            movsxd RAX,DWORD PTR [RSP+112]
            mov RDX,QWORD PTR [RSP+200]
            mov EAX,DWORD PTR [RDX+RAX*8+4]
            mov DWORD PTR [RSP+132],EAX
.L_40d471:

            cmp BYTE PTR [RSP+219],2
            mov EAX,DWORD PTR [RSP+312]
            jne .L_40da30

            mov ESI,DWORD PTR [RSP+132]
            cmp ESI,2
            jle .L_40da30

            lea EBX,DWORD PTR [RSI-3]
            cmp EBX,EAX
            jg .L_40de0c
.L_40d4a1:

            mov RDX,QWORD PTR [RSP+304]
            mov R10D,EAX
            lea RSI,QWORD PTR [RIP+.L_444d80]
            sub R10D,EBX
            mov ECX,R10D
            mov R15,RDX
            shr R15,CL
            movsxd RCX,EBX
            and R15D,DWORD PTR [RSI+RCX*4]
            mov ECX,DWORD PTR [RSP+220]
            lea R12D,DWORD PTR [RCX+RBX*1]
            shl R15D,3
            cmp R12D,EAX
            jle .L_40dab7

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40ae00

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+312]
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            jne .L_40daac

            cmp R12D,R10D
            jle .L_40daac

            mov RDX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDX
            jne .L_40e83a

            movsxd RAX,DWORD PTR [RSP+220]
            mov RSI,QWORD PTR [RSP+304]
            sub R10D,EBX
            mov RDX,QWORD PTR [R9+224]
            mov DWORD PTR [RSP+312],R10D
            mov ECX,EAX
            sub ECX,R10D
            shl RSI,CL
            lea RCX,QWORD PTR [RIP+.L_444d80]
            and ESI,DWORD PTR [RCX+RAX*4]
            mov ECX,DWORD PTR [R9+204]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+120]
            jl .L_40d5a4

            mov RDI,QWORD PTR [RSP+264]
            mov EDX,EAX
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40a740

            mov R9,QWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+32]
.L_40d5a4:

            mov RDI,QWORD PTR [RSP+248]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RDI+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+312],R10D
            js .L_40e017

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d5d0:

            add EAX,R15D
.L_40d5d3:

            movsxd RDX,DWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+200]
            mov R12,RBP
            mov EDX,DWORD PTR [RCX+RDX*8]
            lea R15D,DWORD PTR [RAX+RDX*1-2]
            mov EAX,DWORD PTR [RSP+116]
            mov DWORD PTR [RSP+208],EAX
            mov EAX,DWORD PTR [RSP+100]
            mov DWORD PTR [RSP+100],R15D
            mov DWORD PTR [RSP+116],EAX
            jmp .L_40d723
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d610:

            mov R10D,DWORD PTR [RSP+96]
            mov R12,RBP
.L_40d618:

            mov EAX,R15D
            mov EDI,R11D
            mov QWORD PTR [RSP+136],R9
            mov R11,QWORD PTR [RSP+72]
            mov R15D,R8D
            mov R9,QWORD PTR [RSP+64]
            jmp .L_40d6fe
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d640:

            sub EBX,EAX
            cmp EBX,R15D
            cmovg EBX,R15D
.L_40d649:

            movsxd R14,EBX
            add RBP,R14
            cmp R9,RBP
            ja .L_40d664

            mov R14,R9
            sub R14,R12
            mov EBX,R14D
            movsxd R14,R14D
            lea RBP,QWORD PTR [R12+R14*1]
.L_40d664:

            movsxd R13,EAX
            lea ECX,DWORD PTR [RAX+RBX*1]
            lea R8D,DWORD PTR [RDI+RBX*1]
            add R13,R11
            cmp EBX,7
            jle .L_40d8f0

            cmp EDI,ECX
            jg .L_40d687

            cmp EAX,R8D
            jle .L_40d930
.L_40d687:

            movsxd RDI,EDI
            mov RDX,R14
            mov RSI,R13
            add RDI,R11
            mov DWORD PTR [RSP+60],R10D
            mov QWORD PTR [RSP+48],R9
            mov DWORD PTR [RSP+56],R8D
            mov DWORD PTR [RSP+40],ECX
            mov QWORD PTR [RSP+32],R11
            call memcpy@PLT

            mov RDX,R14
            mov RSI,R13
            mov RDI,R12
            call memcpy@PLT

            mov R11,QWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+48]
            mov R10D,DWORD PTR [RSP+60]
.L_40d6d6:

            mov EAX,ECX
            mov EDI,R8D
            sub QWORD PTR [RSP+8],R14
            and EAX,R10D
            and EDI,R10D
            cmp R15D,EBX
            jle .L_40d938

            sub R15D,EBX
            cmp R9,RBP
            mov R12,RBP
            jbe .L_40d958
.L_40d6fe:

            cmp EAX,EDI
            mov EBX,DWORD PTR [RSP+20]
            jg .L_40d640

            sub EBX,EDI
            cmp EBX,R15D
            cmovg EBX,R15D
            jmp .L_40d649
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d720:

            mov R12,RBP
.L_40d723:

            mov EAX,R11D
            mov R10D,DWORD PTR [RSP+96]
            sub EAX,R15D
            mov R15D,EAX
            and R15D,R10D
            jmp .L_40d618
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d740:

            cmp QWORD PTR [RSP+8],0
            je .L_40e698

            cmp QWORD PTR [RSP+64],RBP
            jbe .L_40e690

            mov DWORD PTR [RSP+32],R15D
            mov DWORD PTR [RSP+56],EBX
            mov R15,R9
            mov R13,QWORD PTR [RSP+224]
            mov R12D,DWORD PTR [RSP+240]
            mov DWORD PTR [RSP+40],R8D
            mov RBX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP+232]
            jmp .L_40d826
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d790:

            mov RSI,QWORD PTR [RSP+304]
            lea RAX,QWORD PTR [RIP+.L_444d80]
            mov ECX,R10D
            sub ECX,R12D
            mov RDX,QWORD PTR [R15+464]
            shr RSI,CL
            and ESI,DWORD PTR [RAX+R14*4]
            mov ECX,DWORD PTR [R15+444]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R15+360]
            jl .L_40d7d7

            mov RDI,QWORD PTR [RSP+104]
            mov EDX,EAX
            call .L_40a740
.L_40d7d7:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R13+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+312],R10D
.L_40d7eb:

            cmp EAX,255
            jg .L_40d3ea

            mov RSI,QWORD PTR [RSP+72]
            movsxd RDX,R11D
            add RBP,1
            add R11D,1
            and R11D,DWORD PTR [RSP+96]
            sub RBX,1
            mov BYTE PTR [RSI+RDX*1],AL
            mov BYTE PTR [RBP-1],AL
            je .L_40dc61

            cmp QWORD PTR [RSP+64],RBP
            je .L_40dcf4
.L_40d826:

            mov R10D,DWORD PTR [RSP+312]
            cmp R12D,R10D
            jle .L_40d790

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            call .L_40ae00

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+312]
            jne .L_40d790

            cmp R12D,R10D
            jle .L_40d790

            mov RCX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RCX
            jne .L_40e73a

            mov RSI,QWORD PTR [RSP+304]
            lea RAX,QWORD PTR [RIP+.L_444d80]
            mov ECX,R12D
            sub ECX,R10D
            mov RDX,QWORD PTR [R15+464]
            shl RSI,CL
            and ESI,DWORD PTR [RAX+R14*4]
            mov ECX,DWORD PTR [R15+444]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R15+360]
            jl .L_40d8c4

            mov RDI,QWORD PTR [RSP+104]
            mov EDX,EAX
            call .L_40a740
.L_40d8c4:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R13+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+312],R10D
            jns .L_40d7eb

            mov R12,R15
            jmp .L_40e01a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d8f0:

            test EBX,EBX
            movsxd RDI,EDI
            jle .L_40d6d6
.L_40d8fb:

            lea ESI,DWORD PTR [RBX-1]
            xor EAX,EAX
            add RDI,R11
            add RSI,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d910:

            movzx EDX,BYTE PTR [R13+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            mov BYTE PTR [R12+RAX*1],DL
            add RAX,1
            cmp RSI,RAX
            jne .L_40d910

            jmp .L_40d6d6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d930:

            movsxd RDI,EDI
            jmp .L_40d8fb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d938:

            mov R8D,R15D
            mov R11D,EDI
            mov R15D,EAX
            mov R9,QWORD PTR [RSP+136]
            mov EBX,18
            jmp .L_40d3d2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d958:

            mov R12,QWORD PTR [RSP+136]
            mov R8D,R15D
            mov R11D,EDI
            mov R15D,EAX
            mov EBX,22
.L_40d96e:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+24]
            movdqa XMM0,XMMWORD PTR [RSP+304]
            mov DWORD PTR [R12+32],R8D
            mov DWORD PTR [R12+28],R15D
            mov QWORD PTR [R12+56],RAX
            mov EAX,DWORD PTR [RSP+128]
            movups XMMWORD PTR [R12+104],XMM0
            mov DWORD PTR [R12],EBX
            mov DWORD PTR [R12+24],R11D
            mov DWORD PTR [R12+84],EAX
            mov EAX,DWORD PTR [RSP+132]
            mov DWORD PTR [R12+92],EAX
            mov EAX,DWORD PTR [RSP+112]
            mov DWORD PTR [R12+88],EAX
            mov EAX,DWORD PTR [RSP+100]
            mov DWORD PTR [R12+64],EAX
            mov EAX,DWORD PTR [RSP+116]
            mov DWORD PTR [R12+68],EAX
            mov EAX,DWORD PTR [RSP+208]
            mov DWORD PTR [R12+72],EAX
            mov RAX,QWORD PTR [RSP+64]
            sub RAX,RBP
            mov QWORD PTR [RSI+424],RAX
.L_40d9ed:

            mov RSI,QWORD PTR [RSP+184]
            sub RSI,RAX
            mov RAX,RSI
            mov RSI,QWORD PTR [RSP+24]
            add QWORD PTR [RSI+416],RAX
            add QWORD PTR [RSI+432],RAX
            mov RAX,QWORD PTR [RSI+400]
.L_40da15:

            mov RDI,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP+24]
            sub RDI,RAX
            add QWORD PTR [RCX+408],RDI
            jmp .L_40c5e8
          .byte 0x66
          .byte 0x90
.L_40da30:

            cmp DWORD PTR [RSP+132],EAX
            jle .L_40da7f

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40ae00

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+312]
            jne .L_40da7f

            cmp DWORD PTR [RSP+132],EAX
            jg .L_40e842
.L_40da7f:

            movsxd RDX,DWORD PTR [RSP+132]
            lea RSI,QWORD PTR [RIP+.L_444d80]
            sub EAX,EDX
            mov ECX,EAX
            mov RAX,QWORD PTR [RSP+304]
            mov DWORD PTR [RSP+312],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RSI+RDX*4]
            jmp .L_40d5d3
.L_40daac:

            mov RDX,QWORD PTR [RSP+304]
            sub R10D,EBX
.L_40dab7:

            movsxd RAX,DWORD PTR [RSP+220]
            mov ECX,R10D
            mov DWORD PTR [RSP+312],R10D
            sub ECX,EAX
            shr RDX,CL
            lea RCX,QWORD PTR [RIP+.L_444d80]
            mov ESI,DWORD PTR [RCX+RAX*4]
            mov ECX,DWORD PTR [R9+204]
            and ESI,EDX
            mov RDX,QWORD PTR [R9+224]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+120]
            jl .L_40db1a

            mov RDI,QWORD PTR [RSP+264]
            mov EDX,EAX
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40a740

            mov R9,QWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+32]
.L_40db1a:

            mov RCX,QWORD PTR [RSP+248]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RCX+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+312],R10D
            jmp .L_40d5d0
.L_40db39:

            mov R10D,DWORD PTR [RSP+312]
            cmp DWORD PTR [RSP+244],R10D
            jg .L_40df40
.L_40db4f:

            movsxd RAX,DWORD PTR [RSP+244]
            mov RSI,QWORD PTR [RSP+304]
            lea RDX,QWORD PTR [RIP+.L_444d80]
            mov ECX,R10D
            sub ECX,EAX
            shr RSI,CL
            and ESI,DWORD PTR [RDX+RAX*4]
            mov ECX,DWORD PTR [R9+324]
            mov RDX,QWORD PTR [R9+344]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+240]
            jl .L_40dba9

            mov RDI,QWORD PTR [RSP+272]
            mov EDX,EAX
            mov QWORD PTR [RSP+32],R9
            call .L_40a740

            mov R9,QWORD PTR [RSP+32]
.L_40dba9:

            mov RCX,QWORD PTR [RSP+256]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RCX+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+312],R10D
.L_40dbc3:

            lea R8D,DWORD PTR [RAX+9]
            jmp .L_40d42d
.L_40dbcc:

            cmp CL,67
            jne .L_40dbe6

            cmp RSI,1
            jle .L_40c9e0

            cmp BYTE PTR [R14+1],75
            je .L_40c9e0
.L_40dbe6:

            lea RDX,QWORD PTR [RIP+.L_444ad8]
            mov ESI,4294967295
.L_40dbf2:

            mov RDI,QWORD PTR [RSP+88]
            xor EAX,EAX
            call .L_432bc0
.L_40dbfe:

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-30
            xor EAX,EAX
            jmp .L_40c7db
.L_40dc14:

            mov R15D,DWORD PTR [RSP+100]
            mov EBX,21
            jmp .L_40d3d2
.L_40dc23:

            mov R15D,DWORD PTR [RSP+208]
            mov EAX,DWORD PTR [RSP+100]
            mov EBX,21
            mov DWORD PTR [RSP+208],EAX
            mov DWORD PTR [RSP+100],R15D
            jmp .L_40d3d2
.L_40dc45:

            mov R15D,DWORD PTR [RSP+116]
            mov EAX,DWORD PTR [RSP+100]
            mov EBX,21
            mov DWORD PTR [RSP+116],EAX
            mov DWORD PTR [RSP+100],R15D
            jmp .L_40d3d2
.L_40dc61:

            mov R12,R15
            mov R8D,DWORD PTR [RSP+40]
            mov R15D,DWORD PTR [RSP+32]
.L_40dc6e:

            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [R12],2
            movdqa XMM0,XMMWORD PTR [RSP+304]
            mov RDX,QWORD PTR [RSP+24]
            mov QWORD PTR [R12+56],0
            mov DWORD PTR [R12+84],EAX
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R12+104],XMM0
            mov DWORD PTR [R12+32],R8D
            mov DWORD PTR [R12+28],R15D
            mov DWORD PTR [R12+88],EAX
            mov EAX,DWORD PTR [RSP+100]
            mov DWORD PTR [R12+24],R11D
            mov DWORD PTR [RSP+212],1
            mov DWORD PTR [R12+64],EAX
            mov EAX,DWORD PTR [RSP+116]
            mov DWORD PTR [R12+68],EAX
            mov EAX,DWORD PTR [RSP+208]
            mov DWORD PTR [R12+72],EAX
            mov RAX,QWORD PTR [RSP+64]
            sub RAX,RBP
            mov QWORD PTR [RDX+424],RAX
            jmp .L_40d9ed
.L_40dcf4:

            mov QWORD PTR [RSP+8],RBX
            mov R12,R15
            mov R8D,DWORD PTR [RSP+40]
            mov R15D,DWORD PTR [RSP+32]
            mov EBX,DWORD PTR [RSP+56]
            mov RBP,QWORD PTR [RSP+64]
            jmp .L_40d96e
.L_40dd14:

            cmp R13D,1
            je .L_40dbe6

            cmp CL,67
            jne .L_40dbe6

            cmp BYTE PTR [R14+1],75
            jne .L_40dbe6

            lea RCX,QWORD PTR [R14+RAX*1]
            sub EDX,R13D
            mov QWORD PTR [RBX+288],RAX
            mov DWORD PTR [RBX+280],EDX
            xor R13D,R13D
            mov QWORD PTR [RBX+272],RCX
.L_40dd50:

            lea RDI,QWORD PTR [RBX+272]
            xor ESI,ESI
            call inflate@PLT

            test EAX,EAX
            je .L_40df12

            cmp EAX,1
            jne .L_40deec

            mov RSI,QWORD PTR [RBX+288]
            mov RDI,QWORD PTR [RSP+88]
            mov QWORD PTR [R12+56],R14
            mov QWORD PTR [R12+16],RSI
            call .L_40ab90

            test RAX,RAX
            js .L_40dbfe

            movzx R8D,WORD PTR [R12+8]
            mov RAX,QWORD PTR [RBX+312]
.L_40dda0:

            cmp AX,R8W
            mov EBP,EAX
            jb .L_40e7ed

            movzx EAX,WORD PTR [R12+6]
            test AX,AX
            jne .L_40e755
.L_40ddbb:

            mov RAX,QWORD PTR [RBX+40]
            movzx EDX,WORD PTR [RAX+4]
            cmp DWORD PTR [RAX+88],EDX
            jl .L_40debc
.L_40ddcc:

            movzx EAX,WORD PTR [R12+14]
            movzx EDX,BP
            mov RCX,RAX
            add RAX,QWORD PTR [RBX+160]
            sub EDX,ECX
            mov RCX,QWORD PTR [RSP+192]
            movsxd RDX,EDX
            mov QWORD PTR [RCX],RDX
            mov WORD PTR [R12+12],BP
            jmp .L_40c7db
.L_40ddfa:

            mov DWORD PTR [R12],11
            mov EBX,11
            jmp .L_40c77a
.L_40de0c:

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40ae00

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+312]
            jne .L_40d4a1

            cmp EBX,EAX
            jle .L_40d4a1

            mov RDI,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDI
            mov R12,R9
            je .L_40e01a
.L_40de67:

            mov EBX,20
            jmp .L_40d96e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de78:

            mov EDX,EAX
            jmp .L_40cf32
.L_40de7f:

            movsxd RAX,DWORD PTR [R12+80]
            cmp EAX,3
            jg .L_40ce97

            cmp BYTE PTR [R12+117],0
            je .L_40de78

            movzx ECX,BYTE PTR [R12+116]
            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,4
            mov DWORD PTR [R12+80],EDX
            mov BYTE PTR [R12+RAX*1+76],CL
            mov BYTE PTR [R12+117],0
            jne .L_40cf32

            jmp .L_40ce97
.L_40debc:

            lea R13,QWORD PTR [RBX+272]
            mov RDI,R13
            call inflateReset@PLT

            test EAX,EAX
            jne .L_40deec

            movzx EDX,WORD PTR [R12+8]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,R13
            call inflateSetDictionary@PLT

            test EAX,EAX
            je .L_40ddcc
.L_40deec:

            cmp EAX,-4
            jne .L_40e240

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_444b28]
            mov ESI,12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_40dbfe
.L_40df12:

            mov RSI,QWORD PTR [RBX+288]
            mov RDI,R15
            mov QWORD PTR [R12+56],R14
            mov QWORD PTR [R12+16],RSI
            call .L_40ab90

            test RAX,RAX
            jns .L_40ca03

            jmp .L_40dbfe
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40df40:

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40ae00

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+312]
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            jne .L_40db4f

            movsxd RAX,DWORD PTR [RSP+244]
            cmp EAX,R10D
            jle .L_40db4f

            mov RDI,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDI
            jne .L_40e82d

            mov RSI,QWORD PTR [RSP+304]
            mov ECX,EAX
            lea RDX,QWORD PTR [RIP+.L_444d80]
            sub ECX,R10D
            shl RSI,CL
            and ESI,DWORD PTR [RDX+RAX*4]
            mov ECX,DWORD PTR [R9+324]
            mov RDX,QWORD PTR [R9+344]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+240]
            jl .L_40dff4

            mov RDI,QWORD PTR [RSP+272]
            mov EDX,EAX
            mov QWORD PTR [RSP+32],R9
            call .L_40a740

            mov R9,QWORD PTR [RSP+32]
.L_40dff4:

            mov RCX,QWORD PTR [RSP+256]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RCX+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+312],R10D
            jns .L_40dbc3
.L_40e017:

            mov R12,R9
.L_40e01a:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [R12+604],4294967271
            mov DWORD PTR [RSP+212],4294967271
            mov RAX,QWORD PTR [RAX+424]
            jmp .L_40d9ed
.L_40e042:

            mov EAX,DWORD PTR [R12+76]
            test EAX,EAX
            mov DWORD PTR [R12+64],EAX
            js .L_40e3de

            mov DWORD PTR [R12],6
            jmp .L_40cec8
.L_40e061:

            mov RAX,QWORD PTR [RBP+104]
            movzx ECX,BYTE PTR [RBP+116]
            add EDX,16
            shl RAX,16
            or RAX,RCX
            movzx ECX,BYTE PTR [RSI]
            shl ECX,8
            movsxd RCX,ECX
            or RAX,RCX
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBP+104],RAX
            lea RAX,QWORD PTR [RSI+1]
            mov QWORD PTR [RCX+392],RAX
            mov RAX,QWORD PTR [RSP+80]
            sub RAX,1
            mov QWORD PTR [RCX+400],RAX
            mov DWORD PTR [RBP+112],EDX
            mov BYTE PTR [RBP+117],0
            jmp .L_40c74c
.L_40e0af:

            cmp ESI,15
            jle .L_40e36e
.L_40e0b8:

            sub ESI,16
            mov DWORD PTR [R12+112],ESI
            jmp .L_40d177
.L_40e0c5:

            mov RDX,QWORD PTR [RSP+192]
            cdqe 
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            jmp .L_40c7db
.L_40e0d9:

            test R12,R12
            movzx R13D,WORD PTR [RDX+8]
            je .L_40e3a6
.L_40e0e7:

            lea EAX,DWORD PTR [R13-15]
            cmp EAX,6
            ja .L_40e81c

            lea RCX,QWORD PTR [RIP+.L_444e20]
            cdqe 
            mov RDI,QWORD PTR [R12+16]
            mov EDX,DWORD PTR [R12+4]
            mov DWORD PTR [R12+604],4294967266
            mov EBP,DWORD PTR [RCX+RAX*4]
            mov ECX,R13D
            mov EAX,1
            shl EAX,CL
            test RDI,RDI
            lea ECX,DWORD PTR [RAX-1]
            mov DWORD PTR [R12+4],EAX
            mov DWORD PTR [R12+8],ECX
            je .L_40e136

            cmp EDX,EAX
            je .L_40e184
.L_40e136:

            call free@PLT

            movsxd RDI,DWORD PTR [R12+4]
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+16],RAX
            je .L_40e3cd

            mov RDI,QWORD PTR [R12+96]
            call free@PLT

            movsxd RDI,EBP
            shl RDI,3
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+96],RAX
            je .L_40e3cd

            lea RDI,QWORD PTR [R12+360]
            call .L_40a7a0
.L_40e184:

            lea RSI,QWORD PTR [RSP+320]
            xor ECX,ECX
            mov EDX,1
            nop
            nop
            nop
            nop
            nop
.L_40e198:

            mov EAX,EDX
            shl EAX,CL
            mov DWORD PTR [RSI+RCX*4],EAX
            add RCX,1
            cmp RCX,18
            jne .L_40e198

            test EBP,EBP
            jle .L_40e3fe

            lea R8D,DWORD PTR [RBP-1]
            mov RDI,QWORD PTR [R12+96]
            xor ESI,ESI
            xor EDX,EDX
            xor EAX,EAX
            add R8,1
            jmp .L_40e1ed
.L_40e1c6:

            movsxd RCX,EAX
            add EDX,DWORD PTR [RSP+RCX*4+320]
            cmp EAX,16
            jle .L_40e7c3
.L_40e1d9:

            mov DWORD PTR [RDI+RSI*8],EDX
            mov DWORD PTR [RDI+RSI*8+4],EAX
            add RSI,1
            cmp R8,RSI
            je .L_40e3fe
.L_40e1ed:

            test EAX,EAX
            mov ECX,ESI
            jne .L_40e1c6
.L_40e1f3:

            test ECX,ECX
            mov EDX,ECX
            mov EAX,4294967294
            je .L_40e620
.L_40e202:

            add EAX,1
            sar EDX,1
            jne .L_40e202

            test EAX,EAX
            cmovs EAX,EDX
            mov EDX,ECX
            jmp .L_40e1d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e218:

            mov EBX,DWORD PTR [R12]
            jmp .L_40c770
.L_40e221:

            mov EAX,DWORD PTR [R12+76]
            test EAX,EAX
            mov DWORD PTR [R12+68],EAX
            js .L_40e3de

            mov DWORD PTR [R12],7
            jmp .L_40cec8
.L_40e240:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_444b50]
            mov ECX,EAX
            mov ESI,4294967295
            xor EAX,EAX
            call .L_432bc0

            jmp .L_40dbfe
.L_40e25f:

            call inflateReset@PLT

            jmp .L_40c8e2
.L_40e269:

            mov QWORD PTR [RAX+168],32768
            mov EDI,32768
            mov RBX,RAX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+160],RAX
            jne .L_40c578
.L_40e291:

            lea RDX,QWORD PTR [RIP+.L_444c92]
            mov ESI,12
            jmp .L_40dbf2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e2a8:

            mov QWORD PTR [RBX+168],32768
            mov EDI,32768
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+160],RAX
            jne .L_40c854

            jmp .L_40e291
          .byte 0x90
.L_40e2d0:

            mov EAX,DWORD PTR [R12+120]
            lea EAX,DWORD PTR [RAX+RAX*2]
            cmp DWORD PTR [R12+112],EAX
            jge .L_40ca67

            mov DWORD PTR [R12],10
.L_40e2eb:

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+80]
            mov RSI,RCX
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            cmp QWORD PTR [RSP+176],RCX
            jne .L_40cc7c
.L_40e314:

            mov R10,R12
.L_40e317:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [R10+604],4294967271
            mov DWORD PTR [RSP+212],4294967271
            mov QWORD PTR [RAX+408],RSI
.L_40e339:

            mov ECX,DWORD PTR [RSP+212]
            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_444cc3]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-30
            xor EAX,EAX
            jmp .L_40c7db
.L_40e36e:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40ae00

            test EAX,EAX
            mov ESI,DWORD PTR [R12+112]
            jne .L_40e0b8

            cmp ESI,15
            jg .L_40e0b8

            mov DWORD PTR [R12],4
            jmp .L_40e2eb
.L_40e3a6:

            mov ESI,608
            mov EDI,1
            call calloc@PLT

            mov R12,RAX
            mov RAX,QWORD PTR [RSP+24]
            test R12,R12
            mov QWORD PTR [RAX+440],R12
            jne .L_40e0e7
.L_40e3cd:

            lea RDX,QWORD PTR [RIP+.L_444b78]
            mov ESI,4294967295
            jmp .L_40dbf2
.L_40e3de:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov R10,R12
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            jmp .L_40e317
.L_40e3fe:

            movabs RAX,4294967297
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [R12+24],0
            mov DWORD PTR [R12],0
            mov QWORD PTR [R12+104],0
            mov EDX,8
            mov DWORD PTR [R12+112],0
            mov QWORD PTR [R12+64],RAX
            mov ESI,8
            mov DWORD PTR [R12+72],1
            call .L_40aac0

            test EAX,EAX
            jne .L_40e3cd

            lea RDI,QWORD PTR [R12+480]
            mov EDX,10
            mov ESI,20
            call .L_40aac0

            test EAX,EAX
            jne .L_40e3cd

            lea ESI,DWORD PTR [RBP*8+256]
            lea RDI,QWORD PTR [R12+360]
            mov EDX,16
            movsxd RSI,ESI
            call .L_40aac0

            test EAX,EAX
            jne .L_40e3cd

            lea RDI,QWORD PTR [R12+240]
            mov EDX,16
            mov ESI,249
            call .L_40aac0

            test EAX,EAX
            jne .L_40e3cd

            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [R12+604],0
            mov RAX,QWORD PTR [RDI+40]
            mov BYTE PTR [RAX+92],1
            mov RAX,QWORD PTR [RSP+144]
            mov R12,QWORD PTR [RDI+440]
            movzx EAX,WORD PTR [RAX+8]
            jmp .L_40c5ab
.L_40e4e8:

            lea RDX,QWORD PTR [RIP+.L_444cab]
            mov ESI,84
            jmp .L_40dbf2
.L_40e4f9:

            mov RAX,QWORD PTR [RSP+144]
            mov EBX,EDX
            movzx EAX,WORD PTR [RAX+6]
            test AX,AX
            je .L_40e557

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RSP+304]
            movzx ESI,AX
            call .L_4049d0

            cmp QWORD PTR [RSP+304],0
            jle .L_40e6a0

            mov RDX,QWORD PTR [RSP+144]
            mov RDI,QWORD PTR [RSP+88]
            movzx ESI,WORD PTR [RDX+6]
            mov QWORD PTR [RDX+56],RAX
            mov QWORD PTR [RDX+16],RSI
            call .L_40ab90

            test RAX,RAX
            js .L_40dbfe
.L_40e557:

            mov RSI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+144]
            mov R14,QWORD PTR [RSI+440]
            movzx EAX,WORD PTR [RAX+8]
            mov R12,QWORD PTR [RSI+160]
            cmp BYTE PTR [R14+40],0
            je .L_40e587

            cmp RAX,10
            ja .L_40e6b1
.L_40e587:

            mov RDI,QWORD PTR [RSP+144]
            movzx EDX,BX
            movzx EAX,WORD PTR [RDI+14]
            mov RCX,RAX
            add RAX,R12
            sub EDX,ECX
            mov RCX,QWORD PTR [RSP+192]
            movsxd RDX,EDX
            mov QWORD PTR [RCX],RDX
            mov WORD PTR [RDI+12],BX
            jmp .L_40c7db
.L_40e5b5:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40ae00

            test EAX,EAX
            mov EAX,DWORD PTR [R12+112]
            jne .L_40d02e

            cmp EAX,31
            jg .L_40d02e

            mov DWORD PTR [R12],1
            jmp .L_40cc53
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e5f0:

            mov RDI,QWORD PTR [RSP+80]
            mov DWORD PTR [R12],9
            mov RCX,RDI
            sub RCX,RAX
            add RSI,RCX
            cmp QWORD PTR [RSP+176],RDI
            jne .L_40d00c

            jmp .L_40e314
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e620:

            xor EAX,EAX
            mov EDX,ECX
            jmp .L_40e1d9
.L_40e629:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40ae00

            test EAX,EAX
            mov EAX,DWORD PTR [R12+112]
            jne .L_40d0fb

            test EAX,EAX
            jg .L_40d0fb

            mov RAX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RAX
            mov DWORD PTR [R12],0
            je .L_40e7ca

            mov RDI,QWORD PTR [RSP+24]
            sub RAX,QWORD PTR [RDI+400]
            mov RSI,QWORD PTR [RDI+408]
            add RSI,RAX
            mov QWORD PTR [RDI+408],RSI
            jmp .L_40c602
.L_40e690:

            mov R12,R9
            jmp .L_40d96e
.L_40e698:

            mov R12,R9
            jmp .L_40dc6e
.L_40e6a0:

            lea RDX,QWORD PTR [RIP+.L_444c18]
            mov ESI,84
            jmp .L_40dbf2
.L_40e6b1:

            lea R13,QWORD PTR [R12+RAX*1-10]
            cmp R12,R13
            jae .L_40e587

            mov RAX,QWORD PTR [RSI+40]
            mov RDI,R12
            mov EBP,DWORD PTR [RAX+88]
            sub EBP,1
            shl EBP,15
            jmp .L_40e714
.L_40e6d1:

            mov RSI,RAX
            mov ECX,DWORD PTR [RAX+1]
            sub RSI,R12
            add ESI,EBP
            mov EDX,ESI
            neg EDX
            cmp ECX,EDX
            jl .L_40e70b

            mov EDX,DWORD PTR [R14+36]
            cmp ECX,EDX
            jge .L_40e70b

            mov EDI,ECX
            add EDX,ECX
            sub EDI,ESI
            test ECX,ECX
            cmovns EDX,EDI
            mov ECX,EDX
            mov BYTE PTR [RAX+1],DL
            mov BYTE PTR [RAX+2],DH
            shr ECX,16
            shr EDX,24
            mov BYTE PTR [RAX+3],CL
            mov BYTE PTR [RAX+4],DL
.L_40e70b:

            lea RDI,QWORD PTR [RAX+5]
            cmp R13,RDI
            jbe .L_40e729
.L_40e714:

            mov RDX,R13
            mov ESI,232
            sub RDX,RDI
            call memchr@PLT

            test RAX,RAX
            jne .L_40e6d1
.L_40e729:

            mov RAX,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RAX+160]
            jmp .L_40e587
.L_40e73a:

            mov QWORD PTR [RSP+8],RBX
            mov R12,R15
            mov R8D,DWORD PTR [RSP+40]
            mov R15D,DWORD PTR [RSP+32]
            mov EBX,DWORD PTR [RSP+56]
            jmp .L_40d96e
.L_40e755:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RSP+304]
            movzx ESI,AX
            call .L_4049d0

            cmp QWORD PTR [RSP+304],0
            jle .L_40e6a0

            movzx ESI,WORD PTR [R12+6]
            mov RDI,QWORD PTR [RSP+88]
            mov QWORD PTR [R12+56],RAX
            mov QWORD PTR [R12+16],RSI
            call .L_40ab90

            test RAX,RAX
            jns .L_40ddbb

            jmp .L_40dbfe
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e7a8:

            mov RSI,QWORD PTR [RSP+80]
            sub RSI,RAX
            add RSI,QWORD PTR [RDI+408]
            mov QWORD PTR [RDI+408],RSI
            jmp .L_40c602
.L_40e7c3:

            mov ECX,EDX
            jmp .L_40e1f3
.L_40e7ca:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+176]
            mov R10,R12
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            jmp .L_40e317
.L_40e7ed:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_444b00]
            movzx ECX,AX
            or ESI,4294967295
            xor EAX,EAX
            call .L_432bc0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-30
            xor EAX,EAX
            jmp .L_40c7db
.L_40e81c:

            mov DWORD PTR [R12+604],4294967271
            jmp .L_40e3cd
.L_40e82d:

            mov R12,R9
            mov EBX,19
            jmp .L_40d96e
.L_40e83a:

            mov R12,R9
            jmp .L_40de67
.L_40e842:

            mov RDX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDX
            mov R12,R9
            jne .L_40de67

            jmp .L_40e01a
.L_40e85d:

            call __stack_chk_fail@PLT
.L_40e862:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e870:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_40e884:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R13,QWORD PTR [RAX]
            call .L_40ab90

            test RAX,RAX
            js .L_40ea07

            mov RBP,QWORD PTR [R13+56]
            je .L_40e93e

            movzx ESI,WORD PTR [RBP+4]
            test SI,SI
            je .L_40e9bc

            lea R12,QWORD PTR [RSP+16]
            mov R15,RAX
.L_40e8cb:

            movzx EAX,WORD PTR [RBP+10]
            movzx EDI,WORD PTR [RBP+12]
            cmp RAX,R15
            mov RCX,RAX
            jg .L_40e950

            sub R15,RAX
            test DI,DI
            jne .L_40e9e0

            mov RCX,QWORD PTR [R13+48]
            movzx ECX,WORD PTR [RCX+16]
            and ECX,4294967293
            cmp CX,-3
            jne .L_40e9e0

            mov RDI,RBX
            call .L_404a20

            movzx EAX,WORD PTR [RBP+4]
            xor EDX,EDX
            mov RDI,RBX
            add QWORD PTR [R13+64],RAX
            xor EAX,EAX
            mov WORD PTR [RBP+10],DX
            mov WORD PTR [RBP+6],AX
            call .L_40a7c0

            test EAX,EAX
            js .L_40ea56

            mov RBP,QWORD PTR [R13+56]
            cmp WORD PTR [RBP+8],0
            jne .L_40e9aa

            mov RAX,QWORD PTR [R13+48]
            cmp WORD PTR [RAX+16],-3
            jb .L_40e9aa
.L_40e93e:

            mov RAX,R14
            jmp .L_40ea0e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e950:

            test DI,DI
            je .L_40ea30
.L_40e959:

            mov QWORD PTR [RSP+8],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e968:

            mov RSI,R12
            mov RDI,RBX
            call .L_40c4e0

            mov RSI,QWORD PTR [RSP+16]
            test RSI,RSI
            jle .L_40ea07

            cmp RSI,R15
            jle .L_40e98e

            mov QWORD PTR [RSP+16],R15
            mov RSI,R15
.L_40e98e:

            mov RDI,RBX
            call .L_40ab90

            test RAX,RAX
            js .L_40ea07

            sub R15,QWORD PTR [RSP+16]
            test R15,R15
            jg .L_40e968

            mov R15,QWORD PTR [RSP+8]
.L_40e9aa:

            test R15,R15
            jle .L_40e93e

            movzx ESI,WORD PTR [RBP+4]
            test SI,SI
            jne .L_40e8cb
.L_40e9bc:

            lea RDX,QWORD PTR [RIP+.L_444c2d]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_432bc0

            mov RAX,-30
            jmp .L_40ea0e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e9e0:

            test RAX,RAX
            jne .L_40ea5f

            mov RDI,RBX
            call .L_40a7c0

            test EAX,EAX
            js .L_40ea56

            mov RBP,QWORD PTR [R13+56]
            cmp WORD PTR [RBP+8],0
            jne .L_40e9aa

            mov RAX,QWORD PTR [R13+48]
            cmp WORD PTR [RAX+16],-3
            jb .L_40e9aa
.L_40ea07:

            mov RAX,-30
.L_40ea0e:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40ea5a

            add RSP,40
.L_40ea22:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ea30:

            mov RAX,QWORD PTR [R13+48]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,4294967293
            cmp AX,-3
            jne .L_40e959

            sub ECX,R15D
            add WORD PTR [RBP+14],R15W
            mov WORD PTR [RBP+10],CX
            jmp .L_40e93e
.L_40ea56:

            cdqe 
            jmp .L_40ea0e
.L_40ea5a:

            call __stack_chk_fail@PLT
.L_40ea5f:

            mov QWORD PTR [RSP+8],R15
            mov R15,RAX
            jmp .L_40e968
.L_40ea6c:

            nop
            nop
            nop
            nop
.L_40ea70:

            push RBP
            push RBX
            sub RSP,8
.L_40ea76:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EAX,1
            cmp BYTE PTR [RBX+145],0
            jne .L_40eafc

            cmp BYTE PTR [RBX+148],0
            je .L_40eb08

            mov RSI,QWORD PTR [RBX+16]
            mov RBP,RDI
            test RSI,RSI
            jne .L_40eb30

            cmp QWORD PTR [RBX+56],0
            je .L_40eb50
.L_40eab2:

            xor EAX,EAX
            cmp BYTE PTR [RBX+147],0
            jne .L_40eafc

            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_40e870

            test RAX,RAX
            js .L_40eb5f

            mov RAX,QWORD PTR [RBX+40]
            cmp WORD PTR [RAX+6],0
            jne .L_40eaee

            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_40eaee

            mov QWORD PTR [RAX+16],0
.L_40eaee:

            mov EAX,257
            mov WORD PTR [RBX+146],AX
            xor EAX,EAX
.L_40eafc:

            add RSP,8
.L_40eb00:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40eb08:

            mov EDX,257
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX+8],0
            add QWORD PTR [RBX+152],RAX
            mov WORD PTR [RBX+146],DX
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_40eb30:

            call .L_40e870

            test EAX,EAX
            mov QWORD PTR [RBX+16],0
            jns .L_40eab2

            jmp .L_40eafc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eb50:

            call .L_40a7c0

            test EAX,EAX
            jns .L_40eab2

            jmp .L_40eafc
.L_40eb5f:

            mov EAX,4294967266
            jmp .L_40eafc
.L_40eb66:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40eb70:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            mov R13,RCX
            sub RSP,16
.L_40eb88:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+48]
            cmp WORD PTR [RAX+16],-3
            jae .L_40edb0

            cmp BYTE PTR [RBX+148],0
            je .L_40ec28

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_40ec6f
.L_40ebc7:

            test DWORD PTR [RBX+144],16776960
            je .L_40ec97
.L_40ebd7:

            cmp BYTE PTR [RBX+147],0
            jne .L_40ebe7

            mov BYTE PTR [RBX+147],1
.L_40ebe7:

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13],RAX
            mov QWORD PTR [R14],0
            mov EAX,1
            mov QWORD PTR [R12],0
.L_40ec02:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40edf4

            add RSP,16
.L_40ec1a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ec28:

            mov RSI,QWORD PTR [RBX+152]
            test RSI,RSI
            je .L_40ec5b

            cmp QWORD PTR [RBX+56],0
            je .L_40ed40
.L_40ec3f:

            mov RDI,RBP
            call .L_40e870

            test RAX,RAX
            js .L_40edea

            mov QWORD PTR [RBX+152],0
.L_40ec5b:

            mov RSI,QWORD PTR [RBX+16]
            mov BYTE PTR [RBX+148],1
            test RSI,RSI
            je .L_40ebc7
.L_40ec6f:

            mov RDI,RBP
            call .L_40e870

            test EAX,EAX
            mov QWORD PTR [RBX+16],0
            js .L_40ec02

            test DWORD PTR [RBX+144],16776960
            jne .L_40ebd7
.L_40ec97:

            mov RAX,QWORD PTR [RBP+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+8],0
            jne .L_40ecd0

            mov QWORD PTR [R12],0
            mov QWORD PTR [R14],0
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13],RAX
            mov BYTE PTR [RBX+146],1
            xor EAX,EAX
            jmp .L_40ec02
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ecd0:

            mov RSI,RSP
            mov RDI,RBP
            call .L_40c4e0

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R12],RAX
            cmp RDX,0
            jle .L_40ed60

            mov RAX,QWORD PTR [RBX+8]
            cmp RDX,RAX
            jle .L_40ecf9

            mov QWORD PTR [RSP],RAX
            mov RDX,RAX
.L_40ecf9:

            mov QWORD PTR [R14],RDX
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13],RAX
            add QWORD PTR [RBX],RDX
            sub QWORD PTR [RBX+8],RDX
            jne .L_40ed13

            mov BYTE PTR [RBX+146],1
.L_40ed13:

            mov RCX,QWORD PTR [RBX+40]
            xor EAX,EAX
            mov QWORD PTR [RBX+16],RDX
            cmp WORD PTR [RCX+6],0
            jne .L_40ec02

            mov RCX,QWORD PTR [RBX+56]
            cmp QWORD PTR [RCX+16],RDX
            jle .L_40ec02

            mov QWORD PTR [RCX+16],RDX
            jmp .L_40ec02
          .byte 0x90
.L_40ed40:

            call .L_40a7c0

            test EAX,EAX
            js .L_40ec02

            mov RSI,QWORD PTR [RBX+152]
            jmp .L_40ec3f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ed60:

            mov QWORD PTR [R12],0
            mov QWORD PTR [R14],0
            mov QWORD PTR [R13],0
            jne .L_40ed84

            mov RAX,QWORD PTR [RBX+56]
            cmp WORD PTR [RAX+8],0
            je .L_40ed8b
.L_40ed84:

            mov EAX,EDX
            jmp .L_40ec02
.L_40ed8b:

            lea RDX,QWORD PTR [RIP+.L_444c2d]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40ec02
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40edb0:

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RCX],0
            call .L_432ba0

            lea RDX,QWORD PTR [RIP+.L_444bc8]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_40ec02
.L_40edea:

            mov EAX,4294967266
            jmp .L_40ec02
.L_40edf4:

            call __stack_chk_fail@PLT
.L_40edf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ee00:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_444bf8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_40ee1a:

            call .L_436df0

            cmp EAX,-30
            je .L_40eec6

            mov ESI,448
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_40eecd

            lea RDI,QWORD PTR [RAX+120]
            mov ESI,256
            mov QWORD PTR [RAX+120],0
            mov QWORD PTR [RAX+128],0
            mov QWORD PTR [RAX+136],0
            call .L_42e3e0

            lea RAX,QWORD PTR [RIP+.L_40b0b0]
            push 0
.L_40ee78:

            push 0
            lea R9,QWORD PTR [RIP+.L_40b3a0]
            lea R8,QWORD PTR [RIP+.L_40bfe0]
            lea RCX,QWORD PTR [RIP+.L_40b280]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_40ea70]
            push 0
            lea RDX,QWORD PTR [RIP+.L_444cf9]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_40eb70]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_40eec6

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_40eec6:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40eecd:

            lea RDX,QWORD PTR [RIP+.L_444ce1]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40eec6
.L_40eeea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40eef0:

            lea EAX,DWORD PTR [RSI-1]
            lea RSI,QWORD PTR [RDI+RAX*1+1]
            xor EAX,EAX
            jmp .L_40ef19
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ef00:

            lea ECX,DWORD PTR [RDX-87]
.L_40ef03:

            shl RAX,4
            add RDI,1
            mov RDX,RAX
            movsxd RAX,ECX
            or RAX,RDX
            cmp RSI,RDI
            je .L_40ef50
.L_40ef19:

            movsx EDX,BYTE PTR [RDI]
            lea ECX,DWORD PTR [RDX-97]
            cmp CL,5
            jbe .L_40ef00

            lea ECX,DWORD PTR [RDX-65]
            cmp CL,5
            ja .L_40ef38

            movsx ECX,DL
            sub ECX,55
            jmp .L_40ef03
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ef38:

            lea ECX,DWORD PTR [RDX-48]
            cmp CL,9
            ja .L_40ef50

            movsx ECX,DL
            sub ECX,48
            jmp .L_40ef03
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef50:

            ret 
.L_40ef52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef60:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_40ef67:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBP+16]
            test RAX,RAX
            je .L_40efa6

            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef80:

            mov RDI,QWORD PTR [RAX+40]
            mov RBX,QWORD PTR [RAX]
            test RDI,RDI
            je .L_40ef91

            call free@PLT
.L_40ef91:

            mov RDI,QWORD PTR [RBP+16]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+16],RBX
            mov RAX,RBX
            jne .L_40ef80
.L_40efa6:

            mov RDI,RBP
            call free@PLT

            mov RAX,QWORD PTR [R12+2472]
            mov QWORD PTR [RAX],0
            xor EAX,EAX
            pop RBX
.L_40efc0:

            pop RBP
            pop R12
            ret 
.L_40efc4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40efd0:

            push RBP
            push RBX
            sub RSP,8
.L_40efd6:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RBX,QWORD PTR [RBP+48]
            add RBX,QWORD PTR [RBP+24]
            add RBX,QWORD PTR [RBP+32]
            mov RSI,RBX
            call .L_404a20

            cmp RAX,RBX
            jne .L_40f020

            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+48],0
            xor EAX,EAX
            mov QWORD PTR [RBP+32],0
.L_40f013:

            add RSP,8
.L_40f017:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f020:

            mov EAX,4294967266
            jmp .L_40f013
.L_40f027:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f030:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,24
.L_40f04a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            jne .L_40f120
.L_40f071:

            cmp QWORD PTR [RBX+24],0
            jle .L_40f0e0

            mov RDX,RSP
            mov ESI,1
            mov RDI,RBP
            call .L_4049d0

            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            jle .L_40f138

            cmp QWORD PTR [RBX+24],RAX
            cmovle RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [R12],RAX
            mov RDX,QWORD PTR [RBX+40]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [R13],RDX
            add QWORD PTR [RBX+40],RAX
            sub QWORD PTR [RBX+24],RAX
            xor EAX,EAX
.L_40f0bb:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40f142

            add RSP,24
.L_40f0cf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f0e0:

            mov R15,QWORD PTR [RBX+48]
            mov RDI,RBP
            mov RSI,R15
            call .L_404a20

            cmp R15,RAX
            jne .L_40f138

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [R14],0
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [R13],RAX
            mov EAX,1
            jmp .L_40f0bb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f120:

            call .L_404a20

            mov QWORD PTR [RBX+32],0
            jmp .L_40f071
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f138:

            mov EAX,4294967266
            jmp .L_40f0bb
.L_40f142:

            call __stack_chk_fail@PLT
.L_40f147:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f150:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
.L_40f158:

            xor EDX,EDX
            mov ESI,6
            mov RBX,QWORD PTR [RAX]
            call .L_4049d0

            test RAX,RAX
            je .L_40f262

            cmp DWORD PTR [RAX],925906736
            je .L_40f1e0
.L_40f178:

            cmp DWORD PTR [RAX],925906736
            je .L_40f200

            cmp DWORD PTR [RAX],925906736
            je .L_40f214
.L_40f190:

            cmp DWORD PTR [RAX],925906736
            je .L_40f238
.L_40f19c:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov ECX,EDX
            shl ECX,8
            add ECX,EAX
            cmp ECX,29127
            je .L_40f250

            shl EAX,8
            add EDX,EAX
            mov EAX,4294967276
            cmp EDX,29127
            jne .L_40f1d8

            lea RAX,QWORD PTR [RIP+.L_40f270]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,16
.L_40f1d8:

            pop RBX
.L_40f1d9:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f1e0:

            cmp WORD PTR [RAX+4],14128
            jne .L_40f178
.L_40f1e8:

            lea RAX,QWORD PTR [RIP+.L_40fed0]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f200:

            cmp WORD PTR [RAX+4],14130
            je .L_40f1e8

            cmp DWORD PTR [RAX],925906736
            jne .L_40f190
.L_40f214:

            cmp WORD PTR [RAX+4],12592
            jne .L_40f190
.L_40f220:

            lea RAX,QWORD PTR [RIP+.L_40f5d0]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f238:

            cmp WORD PTR [RAX+4],12848
            jne .L_40f19c

            jmp .L_40f220
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f250:

            lea RAX,QWORD PTR [RIP+.L_40f420]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,16
            pop RBX
            ret 
.L_40f262:

            mov EAX,4294967295
            pop RBX
            ret 
.L_40f269:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f270:

            push R15
            lea RAX,QWORD PTR [RIP+.L_444e68]
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov ESI,26
            xor EDX,EDX
            mov R13,RDI
            sub RSP,8
.L_40f295:

            mov DWORD PTR [RDI+16],65538
            mov QWORD PTR [RDI+24],RAX
            mov R15,RCX
            mov R14,R8
            call .L_4049d0

            test RAX,RAX
            je .L_40f404

            movzx ESI,BYTE PTR [RAX+3]
            mov RBX,RAX
            movzx EAX,BYTE PTR [RAX+2]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_4390e0

            movzx ESI,BYTE PTR [RBX+5]
            movzx EAX,BYTE PTR [RBX+4]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_438d70

            movzx ESI,BYTE PTR [RBX+7]
            movzx EAX,BYTE PTR [RBX+6]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_4392b0

            movzx ESI,BYTE PTR [RBX+9]
            movzx EAX,BYTE PTR [RBX+8]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_439670

            movzx ESI,BYTE PTR [RBX+11]
            movzx EAX,BYTE PTR [RBX+10]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_438cc0

            movzx ESI,BYTE PTR [RBX+13]
            movzx EAX,BYTE PTR [RBX+12]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_439350

            movzx ESI,BYTE PTR [RBX+15]
            movzx EAX,BYTE PTR [RBX+14]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_439430

            movzx ESI,BYTE PTR [RBX+16]
            xor EDX,EDX
            mov RDI,RBP
            shl ESI,16
            movsxd RAX,ESI
            movzx ESI,BYTE PTR [RBX+17]
            shl RSI,24
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+18]
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+19]
            shl EAX,8
            cdqe 
            add RSI,RAX
            call .L_4392c0

            movzx EAX,BYTE PTR [RBX+21]
            movzx EDX,BYTE PTR [RBX+20]
            mov RDI,RBP
            shl EAX,8
            add EAX,EDX
            movsxd RDX,EAX
            and EAX,1
            mov QWORD PTR [R15],RDX
            mov QWORD PTR [R14],RAX
            movzx ESI,BYTE PTR [RBX+22]
            shl ESI,16
            movsxd RAX,ESI
            movzx ESI,BYTE PTR [RBX+23]
            shl RSI,24
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+24]
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+25]
            shl EAX,8
            cdqe 
            add RSI,RAX
            mov QWORD PTR [R12+24],RSI
            call .L_439490

            mov RAX,QWORD PTR [R12+24]
            mov ESI,26
            mov RDI,R13
            and EAX,1
            mov QWORD PTR [R12+48],RAX
            call .L_404a20

            xor EAX,EAX
.L_40f3f5:

            add RSP,8
.L_40f3f9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f404:

            lea RDX,QWORD PTR [RIP+.L_444f38]
            xor EAX,EAX
            xor ESI,ESI
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40f3f5
.L_40f41e:

            nop
            nop
.L_40f420:

            push R15
            lea RAX,QWORD PTR [RIP+.L_444e84]
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov ESI,26
            xor EDX,EDX
            mov R13,RDI
            sub RSP,8
.L_40f445:

            mov DWORD PTR [RDI+16],65539
            mov QWORD PTR [RDI+24],RAX
            mov R15,RCX
            mov R14,R8
            call .L_4049d0

            test RAX,RAX
            je .L_40f5b2

            movzx ESI,BYTE PTR [RAX+2]
            mov RBX,RAX
            movzx EAX,BYTE PTR [RAX+3]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_4390e0

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_438d70

            movzx ESI,BYTE PTR [RBX+6]
            movzx EAX,BYTE PTR [RBX+7]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_4392b0

            movzx ESI,BYTE PTR [RBX+8]
            movzx EAX,BYTE PTR [RBX+9]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_439670

            movzx ESI,BYTE PTR [RBX+10]
            movzx EAX,BYTE PTR [RBX+11]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_438cc0

            movzx ESI,BYTE PTR [RBX+12]
            movzx EAX,BYTE PTR [RBX+13]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_439350

            movzx ESI,BYTE PTR [RBX+14]
            movzx EAX,BYTE PTR [RBX+15]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_439430

            movzx EAX,BYTE PTR [RBX+17]
            movzx ESI,BYTE PTR [RBX+16]
            xor EDX,EDX
            mov RDI,RBP
            shl EAX,16
            shl RSI,24
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+18]
            shl EAX,8
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+19]
            add RSI,RAX
            call .L_4392c0

            movzx EAX,BYTE PTR [RBX+20]
            movzx EDX,BYTE PTR [RBX+21]
            mov RDI,RBP
            shl EAX,8
            add EAX,EDX
            movsxd RDX,EAX
            and EAX,1
            mov QWORD PTR [R15],RDX
            mov QWORD PTR [R14],RAX
            movzx ESI,BYTE PTR [RBX+22]
            movzx EAX,BYTE PTR [RBX+23]
            shl RSI,24
            shl EAX,16
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+24]
            shl EAX,8
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+25]
            add RSI,RAX
            mov QWORD PTR [R12+24],RSI
            call .L_439490

            mov RAX,QWORD PTR [R12+24]
            mov ESI,26
            mov RDI,R13
            and EAX,1
            mov QWORD PTR [R12+48],RAX
            call .L_404a20

            xor EAX,EAX
.L_40f5a3:

            add RSP,8
.L_40f5a7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f5b2:

            lea RDX,QWORD PTR [RIP+.L_444f38]
            xor EAX,EAX
            xor ESI,ESI
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_40f5a3
.L_40f5cc:

            nop
            nop
            nop
            nop
.L_40f5d0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            xor EBP,EBP
            mov RBX,RDI
            sub RSP,40
.L_40f5e9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea R12,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+8],R8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f610:

            mov RDX,R12
            mov ESI,110
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_40f8f9

            mov R9,QWORD PTR [RSP+16]
            add R9,RAX
            cmp DWORD PTR [RAX],925906736
            je .L_40f8a8
.L_40f63d:

            mov RSI,RAX
.L_40f640:

            lea R8,QWORD PTR [RSI+110]
            cmp R9,R8
            jb .L_40f66e
.L_40f649:

            movzx EDX,BYTE PTR [RSI+5]
            cmp DL,48
            je .L_40f690

            jl .L_40f688

            cmp DL,50
            jg .L_40f688

            cmp DWORD PTR [RSI],925906736
            je .L_40f6a0
.L_40f661:

            add RSI,2
            lea R8,QWORD PTR [RSI+110]
            cmp R9,R8
            jae .L_40f649
.L_40f66e:

            sub RSI,RAX
            mov RDI,RBX
            mov R15,RSI
            add RBP,R15
            call .L_404a20

            jmp .L_40f610
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f688:

            add RSI,6
            jmp .L_40f640
          .byte 0x66
          .byte 0x90
.L_40f690:

            add RSI,1
            jmp .L_40f640
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f6a0:

            cmp BYTE PTR [RSI+4],48
            jne .L_40f661

            mov RCX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f6b0:

            movzx EDX,BYTE PTR [RCX]
            lea EDI,DWORD PTR [RDX-48]
            cmp DIL,9
            jbe .L_40f6c7

            and EDX,4294967263
            sub EDX,65
            cmp DL,5
            ja .L_40f661
.L_40f6c7:

            add RCX,1
            cmp RCX,R8
            jne .L_40f6b0

            sub RSI,RAX
            mov RDI,RBX
            mov R12,RSI
            call .L_404a20

            mov RCX,R12
            add RCX,RBP
            jne .L_40f94f
.L_40f6ea:

            xor R12D,R12D
.L_40f6ed:

            xor EDX,EDX
            mov ESI,110
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov RBP,RAX
            je .L_40f8f9

            cmp DWORD PTR [RAX],925906736
            je .L_40f904
.L_40f714:

            cmp DWORD PTR [RBP],925906736
            je .L_40f927
.L_40f721:

            lea RDI,QWORD PTR [RBP+62]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_439110

            lea RDI,QWORD PTR [RBP+70]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_439140

            lea RDI,QWORD PTR [RBP+6]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_438d70

            lea RDI,QWORD PTR [RBP+14]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov ESI,EAX
            call .L_4392b0

            lea RDI,QWORD PTR [RBP+22]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_439670

            lea RDI,QWORD PTR [RBP+30]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_438cc0

            lea RDI,QWORD PTR [RBP+38]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov ESI,EAX
            call .L_439350

            lea RDI,QWORD PTR [RBP+78]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_439450

            lea RDI,QWORD PTR [RBP+86]
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            call .L_439470

            lea RDI,QWORD PTR [RBP+46]
            mov ESI,8
            call .L_40eef0

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R13
            call .L_4392c0

            lea RDI,QWORD PTR [RBP+94]
            mov ESI,8
            call .L_40eef0

            mov RSI,QWORD PTR [RSP]
            mov EDX,2
            lea RDI,QWORD PTR [RBP+54]
            sub RDX,RAX
            mov QWORD PTR [RSI],RAX
            mov RSI,QWORD PTR [RSP+8]
            mov RAX,RDX
            and EAX,3
            mov QWORD PTR [RSI],RAX
            mov ESI,8
            call .L_40eef0

            mov RDI,R13
            mov RSI,RAX
            mov QWORD PTR [R14+24],RAX
            call .L_439490

            mov RAX,QWORD PTR [R14+24]
            mov ESI,110
            mov RDI,RBX
            neg RAX
            and EAX,3
            mov QWORD PTR [R14+48],RAX
            call .L_404a20
.L_40f87e:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40f94a

            add RSP,40
.L_40f899:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f8a8:

            cmp BYTE PTR [RAX+4],48
            jne .L_40f63d

            movzx ESI,BYTE PTR [RAX+5]
            lea EDX,DWORD PTR [RSI-49]
            mov RSI,RAX
            cmp DL,1
            ja .L_40f640

            lea RDI,QWORD PTR [RAX+110]
            mov RCX,RAX
            jmp .L_40f8dd
          .byte 0x66
          .byte 0x90
.L_40f8d0:

            add RCX,1
            cmp RCX,RDI
            je .L_40f6ea
.L_40f8dd:

            movzx EDX,BYTE PTR [RCX]
            lea ESI,DWORD PTR [RDX-48]
            cmp SIL,9
            jbe .L_40f8d0

            and EDX,4294967263
            sub EDX,65
            cmp DL,5
            jbe .L_40f8d0

            jmp .L_40f63d
.L_40f8f9:

            mov R12D,4294967266
            jmp .L_40f87e
.L_40f904:

            cmp WORD PTR [RAX+4],12592
            jne .L_40f714

            lea RAX,QWORD PTR [RIP+.L_444ea3]
            mov DWORD PTR [RBX+16],65540
            mov QWORD PTR [RBX+24],RAX
            jmp .L_40f721
.L_40f927:

            cmp WORD PTR [RBP+4],12848
            jne .L_40f721

            lea RAX,QWORD PTR [RIP+.L_444ec1]
            mov DWORD PTR [RBX+16],65541
            mov QWORD PTR [RBX+24],RAX
            jmp .L_40f721
.L_40f94a:

            call __stack_chk_fail@PLT
.L_40f94f:

            lea RDX,QWORD PTR [RIP+.L_444f68]
            xor ESI,ESI
            mov RDI,RBX
            xor EAX,EAX
            mov R12D,4294967276
            call .L_432bc0

            jmp .L_40f6ed
.L_40f96d:

            nop
            nop
            nop
.L_40f970:

            xor EAX,EAX
            cmp RSI,115
            jbe .L_40f97e

            cmp BYTE PTR [RDI+30],109
            je .L_40f980
.L_40f97e:

            ret 
.L_40f980:

            cmp BYTE PTR [RDI+85],110
            jne .L_40f97e

            cmp BYTE PTR [RDI+98],115
            jne .L_40f97e

            cmp BYTE PTR [RDI+115],58
            jne .L_40f97e

            lea RDX,QWORD PTR [RDI+6]
            lea RSI,QWORD PTR [RDI+30]
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f9a0:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_40f9b5

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            ja .L_40f9ee
.L_40f9b5:

            add RDX,1
            cmp RDX,RSI
            jne .L_40f9a0

            lea RDX,QWORD PTR [RDI+31]
            lea RSI,QWORD PTR [RDI+85]
            jmp .L_40f9d9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f9d0:

            add RDX,1
            cmp RDX,RSI
            je .L_40f9f1
.L_40f9d9:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_40f9d0

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            jbe .L_40f9d0
.L_40f9ee:

            xor EAX,EAX
            ret 
.L_40f9f1:

            lea RDX,QWORD PTR [RDI+86]
            lea RSI,QWORD PTR [RDI+98]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fa00:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_40fa15

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            ja .L_40f9ee
.L_40fa15:

            add RDX,1
            cmp RDX,RSI
            jne .L_40fa00

            lea RDX,QWORD PTR [RDI+99]
            add RDI,115
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fa30:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_40fa45

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            ja .L_40f9ee
.L_40fa45:

            add RDX,1
            cmp RDX,RDI
            jne .L_40fa30

            mov EAX,1
            ret 
.L_40fa54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fa60:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,56
.L_40fa74:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RBX,QWORD PTR [RBP+56]
            test RBX,RBX
            je .L_40fc60
.L_40fa9b:

            lea RCX,QWORD PTR [RSP+24]
            lea R8,QWORD PTR [RSP+32]
            mov RDX,R13
            mov RSI,RBP
            mov RDI,R12
            call QWORD PTR [RBP+8]

            cmp EAX,-20
            mov R14D,EAX
            jge .L_40fae0
.L_40fab9:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_40fe0a

            add RSP,56
.L_40fad4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_40fae0:

            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_40fd88

            mov RDX,QWORD PTR [RSP+24]
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R13
            call .L_4393f0

            test EAX,EAX
            je .L_40fb4c

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_40fde9

            mov RDI,RBX
            mov R14D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444f98]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_40fb4c:

            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [RSP+24]
            mov RDI,R12
            mov QWORD PTR [RBP+40],0
            call .L_404a20

            mov RDI,R13
            call .L_437b90

            cmp EAX,40960
            je .L_40fc78
.L_40fb79:

            cmp QWORD PTR [RSP+24],11
            jne .L_40fbb0

            lea RDI,QWORD PTR [RIP+.L_444edc]
            mov ECX,11
            mov RSI,R15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40fbb0

            mov RDI,R12
            mov R14D,1
            call .L_432ba0

            jmp .L_40fab9
          .byte 0x66
          .byte 0x90
.L_40fbb0:

            mov RDI,R13
            call .L_438160

            cmp EAX,1
            jbe .L_40fab9

            mov RDI,R13
            call .L_437aa0

            mov RDI,R13
            mov R15,RAX
            call .L_438110

            mov RCX,QWORD PTR [RBP+16]
            mov RDX,RAX
            test RCX,RCX
            je .L_40fdb0

            mov RBX,RCX
            jmp .L_40fbfc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fbf0:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_40fd08
.L_40fbfc:

            cmp R15,QWORD PTR [RBX+24]
            jne .L_40fbf0

            cmp RDX,QWORD PTR [RBX+32]
            jne .L_40fbf0

            mov RSI,QWORD PTR [RBX+40]
            mov RDI,R13
            call .L_438e30

            mov EAX,DWORD PTR [RBX+16]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBX+16],EAX
            jg .L_40fab9

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            test RDX,RDX
            je .L_40fc37

            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RBX]
.L_40fc37:

            test RAX,RAX
            je .L_40fc40

            mov QWORD PTR [RAX+8],RDX
.L_40fc40:

            cmp QWORD PTR [RBP+16],RBX
            je .L_40fde0
.L_40fc4a:

            mov RDI,QWORD PTR [RBX+40]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            jmp .L_40fab9
.L_40fc60:

            mov EAX,DWORD PTR [RBP+72]
            test EAX,EAX
            je .L_40fd98

            mov RBX,QWORD PTR [RBP+64]
            jmp .L_40fa9b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fc78:

            mov RSI,QWORD PTR [RBP+24]
            cmp RSI,1048576
            jg .L_40fdf2

            xor EDX,EDX
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_40fd88

            mov RDX,QWORD PTR [RBP+24]
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R13
            call .L_439630

            test EAX,EAX
            je .L_40fcea

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_40fdfe

            mov RDI,RBX
            mov R14D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_445040]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_40fcea:

            mov RSI,QWORD PTR [RBP+24]
            mov RDI,R12
            call .L_404a20

            mov QWORD PTR [RBP+24],0
            jmp .L_40fb79
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fd08:

            mov EDI,48
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov RDX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            je .L_40fd72

            mov QWORD PTR [RCX+8],RBX
.L_40fd30:

            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],0
            mov RDI,R13
            mov QWORD PTR [RBP+16],RBX
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+24],R15
            call .L_438160

            sub EAX,1
            mov RDI,R13
            mov DWORD PTR [RBX+16],EAX
            call .L_438170

            mov RDI,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+40],RAX
            jne .L_40fab9
.L_40fd72:

            lea RDX,QWORD PTR [RIP+.L_445078]
.L_40fd79:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_40fd88:

            mov R14D,4294967266
            jmp .L_40fab9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fd98:

            call .L_431850

            mov DWORD PTR [RBP+72],1
            mov RBX,RAX
            mov QWORD PTR [RBP+64],RAX
            jmp .L_40fa9b
.L_40fdb0:

            mov EDI,48
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RAX
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov RDX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            jne .L_40fd30

            jmp .L_40fd72
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fde0:

            mov QWORD PTR [RBP+16],RAX
            jmp .L_40fc4a
.L_40fde9:

            lea RDX,QWORD PTR [RIP+.L_444a18]
            jmp .L_40fd79
.L_40fdf2:

            lea RDX,QWORD PTR [RIP+.L_444fd0]
            jmp .L_40fd79
.L_40fdfe:

            lea RDX,QWORD PTR [RIP+.L_445018]
            jmp .L_40fd79
.L_40fe0a:

            call __stack_chk_fail@PLT
.L_40fe0f:

            nop
.L_40fe10:

            push RBP
            push RBX
            mov RAX,RDI
            mov R8,RSI
            sub RSP,8
.L_40fe1c:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_444ee7]
            mov RBP,QWORD PTR [RCX]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_40fe90

            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov ECX,11
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_40fec8

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_40fea8

            cmp BYTE PTR [RDX],0
            je .L_40fea8

            xor EDX,EDX
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBP+56],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_40fe85:

            add RSP,8
.L_40fe89:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_40fe90:

            xor EAX,EAX
            test RDX,RDX
            setne AL
            mov DWORD PTR [RBP+72],EAX
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fea8:

            lea RDX,QWORD PTR [RIP+.L_4450a0]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_432bc0

            jmp .L_40fe85
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fec8:

            mov EBX,4294967276
            jmp .L_40fe85
.L_40fecf:

            nop
.L_40fed0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            xor EBP,EBP
            mov RBX,RDI
            sub RSP,40
.L_40fee9:

            mov DWORD PTR [RDI+16],65537
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_444ef1]
            lea R13,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RDI+24],RAX
.L_40ff19:

            mov RDX,R13
            mov ESI,76
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R9,RAX
            je .L_4105d5

            cmp DWORD PTR [RAX],925906736
            mov RSI,QWORD PTR [RSP+16]
            lea R8,QWORD PTR [RAX+RSI*1]
            je .L_4103e0
.L_40ff4a:

            cmp DWORD PTR [R9],925906736
            je .L_41042c
.L_40ff57:

            mov R14,R9
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ff60:

            lea RCX,QWORD PTR [R14+76]
            cmp R8,RCX
            jb .L_40ff99
.L_40ff69:

            movzx EAX,BYTE PTR [R14+5]
            cmp AL,48
            je .L_40ffc0

            cmp AL,55
            jne .L_40ffb0

            cmp DWORD PTR [R14],925906736
            je .L_40ffd0
.L_40ff7f:

            cmp DWORD PTR [R14],925906736
            je .L_4103b0
.L_40ff8c:

            add R14,2
            lea RCX,QWORD PTR [R14+76]
            cmp R8,RCX
            jae .L_40ff69
.L_40ff99:

            sub R14,R9
            mov RDI,RBX
            mov RSI,R14
            add RBP,R14
            call .L_404a20

            jmp .L_40ff19
          .byte 0x90
.L_40ffb0:

            add R14,6
            jmp .L_40ff60
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ffc0:

            add R14,1
            jmp .L_40ff60
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ffd0:

            cmp WORD PTR [R14+4],14128
            jne .L_40ff7f

            movzx EAX,BYTE PTR [R14]
            lea RDX,QWORD PTR [R14+1]
            sub EAX,48
            cmp AL,7
            ja .L_40ff7f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fff0:

            movzx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp AL,7
            ja .L_40ff7f

            add RDX,1
            cmp RDX,RCX
            jne .L_40fff0
.L_410003:

            mov R13,R14
            mov RDI,RBX
            sub R13,R9
            mov RSI,R13
            call .L_404a20

            cmp BYTE PTR [R14+4],50
            lea RCX,QWORD PTR [R13+RBP*1]
            jne .L_410027

            mov DWORD PTR [RBX+16],65542
.L_410027:

            test RCX,RCX
            jne .L_4105ef
.L_410030:

            xor R14D,R14D
.L_410033:

            cmp DWORD PTR [RBX+16],65542
            je .L_410453

            xor EDX,EDX
            mov ESI,76
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov RBP,RAX
            je .L_4105d5

            movzx EAX,BYTE PTR [RAX+6]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_41009f

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+7]
            lea RDI,QWORD PTR [RBP+12]
            sub ESI,48
            movsxd RSI,ESI
.L_41007a:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_41009f

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_41007a
.L_41009f:

            mov RDI,R12
            call .L_4390e0

            movzx EAX,BYTE PTR [RBP+12]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4100eb

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+13]
            lea RDI,QWORD PTR [RBP+18]
            sub ESI,48
            movsxd RSI,ESI
.L_4100c6:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4100eb

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_4100c6
.L_4100eb:

            mov RDI,R12
            call .L_438d70

            movzx EAX,BYTE PTR [RBP+18]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410137

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+19]
            lea RDI,QWORD PTR [RBP+24]
            sub ESI,48
            movsxd RSI,ESI
.L_410112:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410137

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_410112
.L_410137:

            mov RDI,R12
            call .L_4392b0

            movzx EAX,BYTE PTR [RBP+24]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410183

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+25]
            lea RDI,QWORD PTR [RBP+30]
            sub ESI,48
            movsxd RSI,ESI
.L_41015e:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410183

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_41015e
.L_410183:

            mov RDI,R12
            call .L_439670

            movzx EAX,BYTE PTR [RBP+30]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4101cf

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+31]
            lea RDI,QWORD PTR [RBP+36]
            sub ESI,48
            movsxd RSI,ESI
.L_4101aa:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4101cf

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RDI
            jne .L_4101aa
.L_4101cf:

            mov RDI,R12
            call .L_438cc0

            movzx EAX,BYTE PTR [RBP+36]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_41021b

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+37]
            lea RDI,QWORD PTR [RBP+42]
            sub ESI,48
            movsxd RSI,ESI
.L_4101f6:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_41021b

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RDI
            jne .L_4101f6
.L_41021b:

            mov RDI,R12
            call .L_439350

            movzx EAX,BYTE PTR [RBP+42]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410267

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+43]
            lea RDI,QWORD PTR [RBP+48]
            sub ESI,48
            movsxd RSI,ESI
.L_410242:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410267

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RDI
            jne .L_410242
.L_410267:

            mov RDI,R12
            call .L_439430

            movzx EAX,BYTE PTR [RBP+48]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4102b4

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+49]
            lea RDI,QWORD PTR [RBP+59]
            sub ESI,48
            movsxd RSI,ESI
            nop
            nop
.L_410290:

            movsx EDX,BYTE PTR [RCX]
            lea EAX,DWORD PTR [RDX-48]
            cmp AL,7
            ja .L_4102b4

            lea RAX,QWORD PTR [RSI*8]
            sub EDX,48
            add RCX,1
            movsxd RSI,EDX
            or RSI,RAX
            cmp RCX,RDI
            jne .L_410290
.L_4102b4:

            xor EDX,EDX
            mov RDI,R12
            call .L_4392c0

            movsx EAX,BYTE PTR [RBP+59]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4105e8

            sub EAX,48
            lea RSI,QWORD PTR [RBP+60]
            lea RDI,QWORD PTR [RBP+65]
            movsxd RDX,EAX
.L_4102dc:

            movzx EAX,BYTE PTR [RSI]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            ja .L_4105e0

            lea RCX,QWORD PTR [RDX*8]
            movsx EDX,AL
            add RSI,1
            sub EDX,48
            movsxd RAX,EDX
            or RAX,RCX
            cmp RSI,RDI
            mov RDX,RAX
            jne .L_4102dc
.L_41030b:

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RAX],0
            movzx EAX,BYTE PTR [RBP+65]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410365

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+66]
            add RBP,76
            sub ESI,48
            movsxd RSI,ESI
            nop
            nop
            nop
.L_410340:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_410365

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RBP
            jne .L_410340
.L_410365:

            mov QWORD PTR [R15+24],RSI
            mov RDI,R12
            call .L_439490

            mov QWORD PTR [R15+48],0
            mov ESI,76
            mov RDI,RBX
            call .L_404a20
.L_410386:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_41060d

            add RSP,40
.L_4103a1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4103b0:

            cmp WORD PTR [R14+4],14130
            jne .L_40ff8c

            mov RSI,R8
            mov RDI,R14
            sub RSI,R14
            call .L_40f970

            test EAX,EAX
            je .L_40ff8c

            jmp .L_410003
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4103e0:

            cmp WORD PTR [RAX+4],14128
            jne .L_40ff4a

            movzx EAX,BYTE PTR [RAX]
            lea RDX,QWORD PTR [R9+1]
            lea RCX,QWORD PTR [R9+76]
            sub EAX,48
            cmp AL,7
            jbe .L_410415

            jmp .L_40ff4a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410408:

            add RDX,1
            cmp RCX,RDX
            je .L_410030
.L_410415:

            movzx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp AL,7
            jbe .L_410408

            cmp DWORD PTR [R9],925906736
            jne .L_40ff57
.L_41042c:

            cmp WORD PTR [R9+4],14130
            jne .L_40ff57

            mov RDI,R9
            xor R14D,R14D
            call .L_40f970

            test EAX,EAX
            je .L_40ff57

            mov DWORD PTR [RBX+16],65542
.L_410453:

            lea RAX,QWORD PTR [RIP+.L_444f0b]
            xor EDX,EDX
            mov ESI,116
            mov RDI,RBX
            mov QWORD PTR [RBX+24],RAX
            call .L_4049d0

            test RAX,RAX
            mov RBP,RAX
            je .L_4105d5

            lea RDI,QWORD PTR [RAX+6]
            mov ESI,8
            lea R13,QWORD PTR [RBP+37]
            call .L_40eef0

            mov RDI,R12
            mov RSI,RAX
            call .L_4390e0

            lea RDI,QWORD PTR [RBP+14]
            mov ESI,16
            call .L_40eef0

            mov RDI,R12
            mov RSI,RAX
            call .L_438d70

            movsx EAX,BYTE PTR [RBP+31]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_4104f8

            sub EAX,48
            lea RSI,QWORD PTR [RBP+32]
            lea R13,QWORD PTR [RBP+37]
            movsxd RDX,EAX
.L_4104cb:

            movzx EAX,BYTE PTR [RSI]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            ja .L_4104f6

            lea RCX,QWORD PTR [RDX*8]
            movsx EDX,AL
            add RSI,1
            sub EDX,48
            movsxd RAX,EDX
            or RAX,RCX
            cmp R13,RSI
            mov RDX,RAX
            jne .L_4104cb
.L_4104f6:

            mov ESI,EDX
.L_4104f8:

            mov RDI,R12
            call .L_4392b0

            mov RDI,R13
            mov ESI,8
            call .L_40eef0

            mov RDI,R12
            mov RSI,RAX
            call .L_439670

            lea RDI,QWORD PTR [RBP+45]
            mov ESI,8
            call .L_40eef0

            mov RDI,R12
            mov RSI,RAX
            call .L_438cc0

            lea RDI,QWORD PTR [RBP+53]
            mov ESI,8
            call .L_40eef0

            mov RDI,R12
            mov ESI,EAX
            call .L_439350

            lea RDI,QWORD PTR [RBP+61]
            mov ESI,8
            call .L_40eef0

            mov RDI,R12
            mov RSI,RAX
            call .L_439430

            lea RDI,QWORD PTR [RBP+69]
            mov ESI,16
            call .L_40eef0

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R12
            call .L_4392c0

            lea RDI,QWORD PTR [RBP+86]
            mov ESI,4
            call .L_40eef0

            mov RDI,QWORD PTR [RSP]
            mov ESI,16
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBP+99]
            mov QWORD PTR [RAX],0
            call .L_40eef0

            mov RDI,R12
            mov QWORD PTR [R15+24],RAX
            mov RSI,RAX
            call .L_439490

            mov QWORD PTR [R15+48],0
            mov ESI,116
            mov RDI,RBX
            call .L_404a20

            jmp .L_410386
.L_4105d5:

            mov R14D,4294967266
            jmp .L_410386
.L_4105e0:

            mov RAX,RDX
            jmp .L_41030b
.L_4105e8:

            xor EAX,EAX
            jmp .L_41030b
.L_4105ef:

            lea RDX,QWORD PTR [RIP+.L_444f68]
            xor ESI,ESI
            mov RDI,RBX
            xor EAX,EAX
            mov R14D,4294967276
            call .L_432bc0

            jmp .L_410033
.L_41060d:

            call __stack_chk_fail@PLT
.L_410612:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410620:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4450d8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_436df0

            cmp EAX,-30
            je .L_4106b8

            mov ESI,80
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4106bf

            mov DWORD PTR [RAX],320083222
            lea RAX,QWORD PTR [RIP+.L_40ef60]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_40fa60]
            lea R8,QWORD PTR [RIP+.L_40fe10]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_40efd0]
            push 0
            lea RCX,QWORD PTR [RIP+.L_40f150]
            lea RDX,QWORD PTR [RIP+.L_444f06]
            mov RSI,RBX
            push RAX
            lea RAX,QWORD PTR [RIP+.L_40f030]
            mov RDI,RBP
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_4106b8

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_4106b8:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4106bf:

            lea RDX,QWORD PTR [RIP+.L_444f1c]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4106b8
.L_4106dc:

            nop
            nop
            nop
            nop
.L_4106e0:

            lea RAX,QWORD PTR [RIP+.L_4450f9]
            mov DWORD PTR [RDI+16],393216
            mov QWORD PTR [RDI+24],RAX
            mov EAX,1
            ret 
.L_4106f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410700:

            mov EAX,1
            ret 
.L_410706:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410710:

            test ESI,ESI
            jg .L_410748

            xor EDX,EDX
            sub RSP,8
            mov ESI,1
            call .L_4049d0

            test RAX,RAX
            mov EDX,1
            jne .L_410738

            mov EAX,EDX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410738:

            mov EDX,4294967295
            add RSP,8
            mov EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410748:

            mov EDX,4294967295
            mov EAX,EDX
            ret 
.L_410750:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_445108]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_4107a2

            lea RAX,QWORD PTR [RIP+.L_410700]
            push 0
            lea R9,QWORD PTR [RIP+.L_4106e0]
            push 0
            lea RCX,QWORD PTR [RIP+.L_410710]
            push 0
            push 0
            push 0
            xor R8D,R8D
            push RAX
            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBX
            call .L_404810

            add RSP,48
.L_4107a2:

            pop RBX
            ret 
.L_4107a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4107b0:

            xor EAX,EAX
            ret 
.L_4107b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4107c0:

            mov R8D,DWORD PTR [RDI+12]
            test R8D,R8D
            jle .L_410862

            mov RCX,QWORD PTR [RDI]
            sub R8D,1
            movsxd RDX,R8D
            cmp R8D,1
            mov RDX,QWORD PTR [RCX+RDX*8]
            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [RDI+12],R8D
            mov R11,QWORD PTR [RDX+40]
            mov QWORD PTR [RCX],RDX
            jle .L_41085a

            mov EDI,1
            xor ESI,ESI
            xor R9D,R9D
            jmp .L_41083f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410800:

            movsxd R9,EDX
            mov R9,QWORD PTR [RCX+R9*8]
            mov R9,QWORD PTR [R9+40]
            cmp R10,R9
            jbe .L_410853

            mov R10,R9
            cmp R10,R11
            jae .L_41085a
.L_410818:

            lea RDI,QWORD PTR [RCX+RSI*8]
            movsxd RSI,EDX
            lea RSI,QWORD PTR [RCX+RSI*8]
            mov R9,QWORD PTR [RDI]
            mov R10,QWORD PTR [RSI]
            mov QWORD PTR [RDI],R10
            mov QWORD PTR [RSI],R9
            lea R9D,DWORD PTR [RDX+RDX*1]
            movsxd RSI,EDX
            lea EDI,DWORD PTR [R9+1]
            cmp R8D,EDI
            jle .L_410860
.L_41083f:

            movsxd RDX,EDI
            mov RDX,QWORD PTR [RCX+RDX*8]
            mov R10,QWORD PTR [RDX+40]
            lea EDX,DWORD PTR [R9+2]
            cmp R8D,EDX
            jg .L_410800
.L_410853:

            cmp R10,R11
            mov EDX,EDI
            jb .L_410818
.L_41085a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410860:

            ret 
.L_410862:

            xor EAX,EAX
            ret 
.L_410865:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410870:

            mov ECX,ECX
            mov EDX,EDX
            sub RSP,8
            add RSI,RDX
            add RDI,528
            mov RDX,RCX
            call memcmp@PLT

            test EAX,EAX
            sete AL
            add RSP,8
            movzx EAX,AL
            ret 
.L_410897:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4108a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RCX
            sub RSP,24
.L_4108b7:

            movsxd RAX,DWORD PTR [RSI+12]
            mov R14D,DWORD PTR [RSI+8]
            cmp EAX,R14D
            jge .L_410930

            mov RBX,QWORD PTR [RSI]
.L_4108c7:

            lea EDX,DWORD PTR [RAX+1]
            test EAX,EAX
            mov QWORD PTR [RBP+40],R12
            mov DWORD PTR [R13+12],EDX
            jle .L_410913

            lea EDX,DWORD PTR [RAX-1]
            sar EDX,1
            movsxd RCX,EDX
            mov RDI,QWORD PTR [RBX+RCX*8]
            cmp R12,QWORD PTR [RDI+40]
            jb .L_41090b

            jmp .L_4109b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4108f0:

            lea ESI,DWORD PTR [RDX-1]
            sar ESI,1
            movsxd RAX,ESI
            mov RDI,QWORD PTR [RBX+RAX*8]
            movsxd RAX,EDX
            cmp R12,QWORD PTR [RDI+40]
            jae .L_4109b2

            mov EDX,ESI
.L_41090b:

            test EDX,EDX
            mov QWORD PTR [RBX+RAX*8],RDI
            jne .L_4108f0
.L_410913:

            mov QWORD PTR [RBX],RBP
            xor EAX,EAX
.L_410918:

            add RSP,24
.L_41091c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410930:

            cmp R14D,1023
            mov R8,RDI
            jle .L_4109a0

            lea R15D,DWORD PTR [R14+R14*1]
            cmp R14D,R15D
            jge .L_4109ca

            movsxd RDI,R15D
            shl RDI,3
.L_410950:

            mov QWORD PTR [RSP+8],R8
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov R8,QWORD PTR [RSP+8]
            je .L_4109ca

            mov RCX,QWORD PTR [R13]
            movsxd RDX,R14D
            mov RDI,RAX
            shl RDX,3
            mov RSI,RCX
            mov QWORD PTR [RSP+8],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RCX
            call free@PLT

            mov QWORD PTR [R13],RBX
            mov DWORD PTR [R13+8],R15D
            movsxd RAX,DWORD PTR [R13+12]
            jmp .L_4108c7
.L_4109a0:

            mov EDI,8192
            mov R15D,1024
            jmp .L_410950
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4109b0:

            mov EDX,EAX
.L_4109b2:

            movsxd RDX,EDX
            xor EAX,EAX
            mov QWORD PTR [RBX+RDX*8],RBP
            add RSP,24
.L_4109bf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4109ca:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R8
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_410918
.L_4109ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4109f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RCX
            sub RSP,56
.L_410a0a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+224]
            test RSI,RSI
            jne .L_410e00
.L_410a34:

            cmp QWORD PTR [RBX+216],0
            jle .L_410db0
.L_410a42:

            mov R15D,DWORD PTR [RBX+232]
            test R15D,R15D
            jne .L_410ae8

            lea RDX,QWORD PTR [RSP+32]
            mov ESI,1
            mov RDI,R13
            call .L_4049d0

            cmp QWORD PTR [RSP+32],0
            mov QWORD PTR [R14],RAX
            je .L_410fd8
.L_410a73:

            test RAX,RAX
            je .L_4110e2

            mov RDX,QWORD PTR [RSP+32]
            cmp QWORD PTR [RBX+216],RDX
            cmovle RDX,QWORD PTR [RBX+216]
            mov QWORD PTR [RBP],RDX
            mov RAX,QWORD PTR [RBX+208]
            mov QWORD PTR [R12],RAX
            add QWORD PTR [RBX+208],RDX
            sub QWORD PTR [RBX+216],RDX
            mov QWORD PTR [RBX+224],RDX
            add QWORD PTR [RBX+160],RDX
.L_410abb:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_4111de

            add RSP,56
.L_410ad6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410ae8:

            mov RAX,QWORD PTR [R13+2472]
            lea RDX,QWORD PTR [RSP+32]
            mov ESI,1
            mov RDI,R13
            mov RBX,QWORD PTR [RAX]
            call .L_4049d0

            mov RDX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP],RAX
            test RDX,RDX
            jle .L_41116d

            mov RAX,QWORD PTR [RBX+216]
            cmp RDX,RAX
            jle .L_410b2a

            mov QWORD PTR [RSP+32],RAX
            mov RDX,RAX
.L_410b2a:

            mov EDI,DWORD PTR [RBX+248]
            mov R15,RDX
            test EDI,EDI
            jne .L_410cdc

            mov ECX,DWORD PTR [RBX+236]
            mov RSI,QWORD PTR [RBX+240]
            mov EAX,1
            shl RAX,CL
            lea RAX,QWORD PTR [RSI+RAX*1-1]
            shr RAX,CL
            lea RSI,QWORD PTR [RAX*4+4]
            cmp RSI,QWORD PTR [RBX+320]
            jbe .L_410be1

            mov RDI,QWORD PTR [RBX+312]
            test RDI,RDI
            je .L_410b8e

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+8],RDX
            call free@PLT

            mov RSI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
.L_410b8e:

            mov RAX,RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],RSI
            and RAX,-1024
            lea RCX,QWORD PTR [RAX+1024]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+312],RAX
            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            je .L_4111bd

            mov QWORD PTR [RBX+320],RCX
            mov ECX,DWORD PTR [RBX+236]
.L_410be1:

            mov EAX,1
            mov QWORD PTR [RBX+328],RSI
            shl RAX,CL
            cmp RAX,QWORD PTR [RBX+264]
            mov RCX,RAX
            jbe .L_410c4d

            mov RDI,QWORD PTR [RBX+256]
            test RDI,RDI
            je .L_410c21

            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
            call free@PLT

            mov RCX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
.L_410c21:

            mov RDI,RCX
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP+8],RCX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+256],RAX
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            je .L_4111bd
.L_410c4d:

            mov QWORD PTR [RBX+264],RCX
            mov RCX,QWORD PTR [RBX+296]
            cmp RCX,15
            ja .L_410cb0

            mov EAX,16
            sub RAX,RCX
            lea RCX,QWORD PTR [RBX+RCX*1+276]
            cmp RDX,RAX
            cmovbe RAX,RDX
            cmp EAX,8
            jae .L_411050

            test AL,4
            jne .L_4110ed

            test EAX,EAX
            je .L_410c9f

            mov RDI,QWORD PTR [RSP]
            test AL,2
            movzx ESI,BYTE PTR [RDI]
            mov BYTE PTR [RCX],SIL
            jne .L_411158
.L_410c9f:

            add QWORD PTR [RBX+296],RAX
            add QWORD PTR [RSP],RAX
            sub RDX,RAX
            mov R15,RDX
.L_410cb0:

            mov ESI,DWORD PTR [RBX+304]
            test ESI,ESI
            jne .L_410e4a

            cmp QWORD PTR [RBX+296],16
            je .L_4110a8
.L_410ccc:

            mov ECX,DWORD PTR [RBX+248]
            xor EDX,EDX
            test ECX,ECX
            je .L_410d5d
.L_410cdc:

            mov EAX,DWORD PTR [RBX+352]
            test EAX,EAX
            je .L_410ed0

            mov RDI,QWORD PTR [RBX+256]
            mov RDX,QWORD PTR [RBX+264]
            lea RCX,QWORD PTR [RBX+360]
.L_410cff:

            mov RSI,QWORD PTR [RSP]
            mov QWORD PTR [RBX+384],RDI
            mov RDI,RCX
            mov DWORD PTR [RBX+392],EDX
            mov QWORD PTR [RBX+360],RSI
            mov ESI,EAX
            cmp R15,RSI
            cmovbe EAX,R15D
            xor ESI,ESI
            mov DWORD PTR [RBX+368],EAX
            call inflate@PLT

            cmp EAX,1
            ja .L_411179

            mov EAX,DWORD PTR [RBX+392]
            mov RDX,QWORD PTR [RBX+264]
            sub RDX,RAX
            mov RAX,QWORD PTR [RBX+360]
            sub RAX,QWORD PTR [RSP]
            sub DWORD PTR [RBX+352],EAX
            sub R15,RAX
.L_410d5d:

            mov RCX,QWORD PTR [RBX+256]
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [R14],RCX
            mov QWORD PTR [RBP],RDX
            mov RCX,QWORD PTR [RBX+208]
            sub RAX,R15
            xor R15D,R15D
            mov QWORD PTR [R12],RCX
            add DWORD PTR [RBX+272],EAX
            add QWORD PTR [RBX+208],RDX
            sub QWORD PTR [RBX+216],RAX
            add QWORD PTR [RBX+160],RAX
            add QWORD PTR [RBX+224],RAX
            jmp .L_410abb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410db0:

            mov RAX,QWORD PTR [RBX+480]
            test RAX,RAX
            je .L_411000

            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            mov QWORD PTR [RBX+480],RAX
            je .L_411000

            mov R9,QWORD PTR [RBX+160]
            mov RSI,QWORD PTR [RAX]
            cmp R9,RSI
            jb .L_410fa8

            ja .L_411116
.L_410ded:

            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+216],RAX
            jmp .L_410a42
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e00:

            call .L_404a20

            mov QWORD PTR [RBX+224],0
            jmp .L_410a34
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410e18:

            cmp BYTE PTR [RBX+288],4
            jne .L_4110cc

            movzx EAX,BYTE PTR [RBX+289]
            cmp EAX,DWORD PTR [RBX+236]
            jne .L_4110cc

            test DL,DL
            jne .L_4110cc

            mov DWORD PTR [RBX+304],1
.L_410e4a:

            mov RDI,QWORD PTR [RBX+336]
            mov RAX,QWORD PTR [RBX+328]
            cmp RDI,RAX
            jae .L_410ccc

            sub RAX,RDI
            mov RSI,QWORD PTR [RSP]
            cmp RAX,R15
            cmova RAX,R15
            add RDI,QWORD PTR [RBX+312]
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RAX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+336]
            add QWORD PTR [RSP],RCX
            add RAX,RCX
            sub R15,RCX
            cmp RAX,QWORD PTR [RBX+328]
            mov QWORD PTR [RBX+336],RAX
            jne .L_410ccc

            mov QWORD PTR [RBX+344],0
            mov DWORD PTR [RBX+352],0
            mov DWORD PTR [RBX+248],1
            nop
            nop
            nop
            nop
.L_410ed0:

            mov RDX,QWORD PTR [RBX+344]
            lea RSI,QWORD PTR [RDX+4]
            cmp RSI,QWORD PTR [RBX+328]
            jae .L_411104

            mov RDI,QWORD PTR [RBX+312]
            mov EAX,DWORD PTR [RBX+272]
            add RAX,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [RDI+RDX*1]
            sub RAX,R15
            cmp R9,RAX
            jne .L_41110d

            mov EAX,DWORD PTR [RDI+RDX*1+4]
            cmp R9D,EAX
            ja .L_411104

            sub EAX,R9D
            mov QWORD PTR [RBX+344],RSI
            lea RCX,QWORD PTR [RBX+360]
            mov DWORD PTR [RBX+352],EAX
            mov EAX,DWORD PTR [RBX+472]
            test EAX,EAX
            je .L_411028

            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call inflateReset@PLT

            mov RCX,QWORD PTR [RSP+8]
.L_410f4e:

            test EAX,EAX
            jne .L_41119c

            mov EAX,DWORD PTR [RBX+352]
            mov DWORD PTR [RBX+472],1
            mov QWORD PTR [RBX+376],0
            mov QWORD PTR [RBX+400],0
            mov RDX,QWORD PTR [RBX+264]
            mov RDI,QWORD PTR [RBX+256]
            test EAX,EAX
            jne .L_410cff

            xor ESI,ESI
            call memset@PLT

            mov RDX,QWORD PTR [RBX+264]
            jmp .L_410d5d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410fa8:

            sub RSI,R9
            mov RDI,R13
            call .L_404a20

            test RAX,RAX
            mov R15D,EAX
            js .L_410abb

            mov RAX,QWORD PTR [RBX+480]
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+160],RDX
            jmp .L_410ded
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410fd8:

            lea RDX,QWORD PTR [RIP+.L_4447ce]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_432bc0

            mov RAX,QWORD PTR [R14]
            jmp .L_410a73
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411000:

            mov QWORD PTR [R14],0
            mov QWORD PTR [RBP],0
            mov R15D,1
            mov RAX,QWORD PTR [RBX+208]
            mov QWORD PTR [R12],RAX
            jmp .L_410abb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411028:

            lea RSI,QWORD PTR [RIP+.L_443a68]
            mov RDI,RCX
            mov EDX,112
            mov QWORD PTR [RSP+8],RCX
            call inflateInit_@PLT

            mov RCX,QWORD PTR [RSP+8]
            jmp .L_410f4e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411050:

            mov R11,QWORD PTR [RSP]
            mov RSI,QWORD PTR [R11]
            mov QWORD PTR [RCX],RSI
            mov ESI,EAX
            mov RDI,QWORD PTR [R11+RSI*1-8]
            mov QWORD PTR [RCX+RSI*1-8],RDI
            lea RSI,QWORD PTR [RCX+8]
            and RSI,-8
            sub RCX,RSI
            sub R11,RCX
            add ECX,EAX
            and ECX,4294967288
            mov R9,R11
            cmp ECX,8
            jb .L_410c9f

            and ECX,4294967288
            xor EDI,EDI
.L_41108a:

            mov R8D,EDI
            add EDI,8
            mov R10,QWORD PTR [R9+R8*1]
            cmp EDI,ECX
            mov QWORD PTR [RSI+R8*1],R10
            jb .L_41108a

            jmp .L_410c9f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4110a8:

            mov RAX,QWORD PTR [RBX+276]
            cmp QWORD PTR [RIP+.L_4457b8],RAX
            mov EAX,DWORD PTR [RBX+284]
            setne DL
            cmp RAX,QWORD PTR [RBX+240]
            je .L_410e18
.L_4110cc:

            lea RDX,QWORD PTR [RIP+.L_445153]
.L_4110d3:

            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0
.L_4110e2:

            mov R15D,4294967266
            jmp .L_410abb
.L_4110ed:

            mov RDI,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RDI]
            mov DWORD PTR [RCX],ESI
            mov ESI,EAX
            mov EDI,DWORD PTR [RDI+RSI*1-4]
            mov DWORD PTR [RCX+RSI*1-4],EDI
            jmp .L_410c9f
.L_411104:

            lea RDX,QWORD PTR [RIP+.L_44516c]
            jmp .L_4110d3
.L_41110d:

            lea RDX,QWORD PTR [RIP+.L_445368]
            jmp .L_4110d3
.L_411116:

            mov RCX,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_445310]
            mov R8,RSI
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            mov R15D,4294967276
            call .L_432bc0

            mov QWORD PTR [R14],0
            mov QWORD PTR [RBP],0
            mov RAX,QWORD PTR [RBX+208]
            mov QWORD PTR [R12],RAX
            jmp .L_410abb
.L_411158:

            mov RDI,QWORD PTR [RSP]
            mov ESI,EAX
            movzx EDI,WORD PTR [RDI+RSI*1-2]
            mov WORD PTR [RCX+RSI*1-2],DI
            jmp .L_410c9f
.L_41116d:

            lea RDX,QWORD PTR [RIP+.L_445138]
            jmp .L_4110d3
.L_411179:

            lea RDX,QWORD PTR [RIP+.L_4453c0]
            mov ECX,EAX
            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_410abb
.L_41119c:

            lea RDX,QWORD PTR [RIP+.L_445398]
            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_410abb
.L_4111bd:

            lea RDX,QWORD PTR [RIP+.L_445340]
            mov ESI,12
            mov RDI,R13
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_410abb
.L_4111de:

            call __stack_chk_fail@PLT
.L_4111e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4111f0:

            mov RAX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_44518a]
            mov ECX,7
            mov R8,RSI

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov R9,QWORD PTR [RAX]
            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            jne .L_411298

            test RDX,RDX
            je .L_41128c

            lea RDI,QWORD PTR [RIP+.L_445191]
            mov ECX,4
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_41128c

            lea RDI,QWORD PTR [RIP+.L_445195]
            mov ECX,7
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_41128c

            lea RDI,QWORD PTR [RIP+.L_44519c]
            mov ECX,8
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_41128c

            lea RDI,QWORD PTR [RIP+.L_44605b]
            mov RSI,RDX
            mov ECX,2

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_4112f0
.L_41128c:

            mov DWORD PTR [R9+4],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411298:

            lea RDI,QWORD PTR [RIP+.L_4451a4]
            mov ECX,10
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4112c8
.L_4112b2:

            xor EAX,EAX
            test RDX,RDX
            setne AL
            mov DWORD PTR [R9+8],EAX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4112c8:

            lea RDI,QWORD PTR [RIP+.L_4451ae]
            mov ECX,10
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4112b2

            mov EAX,4294967276
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4112f0:

            mov DWORD PTR [R9+4],1
            ret 
.L_4112f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411300:

            cmp EDX,1001
            je .L_411390

            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
            mov RSI,QWORD PTR [RSI+8]
            test RSI,RSI
            je .L_41132b

            cmp QWORD PTR [RSI+176],0
            jne .L_411368
.L_41132b:

            cmp QWORD PTR [RBX+176],0
            je .L_411350

            lea RSI,QWORD PTR [RBX+168]
            mov RDI,RBP
            call .L_42e3c0
.L_411344:

            mov RAX,QWORD PTR [RBP]
.L_411348:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_411350:

            lea RSI,QWORD PTR [RIP+.L_4451bf]
            mov RDI,RBP
            call .L_4312c0

            jmp .L_411344
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411368:

            add EDX,1
            call .L_411300

            test RAX,RAX
            je .L_411386

            lea RSI,QWORD PTR [RIP+.L_44766b]
            mov RDI,RBP
            call .L_4312c0

            jmp .L_41132b
.L_411386:

            xor EAX,EAX
            jmp .L_411348
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411390:

            xor EAX,EAX
            ret 
.L_411393:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4113a0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            push RBX
.L_4113ab:

            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            mov RBP,QWORD PTR [R12+104]
            test RBP,RBP
            je .L_411419

            nop
.L_4113c0:

            lea RDI,QWORD PTR [RBP+168]
            mov R13,QWORD PTR [RBP]
            call .L_42e240

            lea RDI,QWORD PTR [RBP+216]
            call .L_42e240

            mov RDI,QWORD PTR [RBP+192]
            call free@PLT

            mov RDI,QWORD PTR [RBP+272]
            test RDI,RDI
            je .L_411409

            nop
            nop
            nop
            nop
.L_4113f8:

            mov RBX,QWORD PTR [RDI+16]
            call free@PLT

            test RBX,RBX
            mov RDI,RBX
            jne .L_4113f8
.L_411409:

            mov RDI,RBP
            mov RBP,R13
            call free@PLT

            test R13,R13
            jne .L_4113c0
.L_411419:

            mov RDI,QWORD PTR [R12+56]
            call free@PLT

            lea RDI,QWORD PTR [R12+16]
            call .L_42e240

            lea RDI,QWORD PTR [R12+80]
            call .L_42e240

            mov RDI,QWORD PTR [R12+112]
            test RDI,RDI
            je .L_411446

            call free@PLT
.L_411446:

            mov RDI,QWORD PTR [R12+256]
            call free@PLT

            mov RDI,QWORD PTR [R12+312]
            call free@PLT

            mov EAX,DWORD PTR [R12+472]
            test EAX,EAX
            jne .L_4114b0
.L_41146c:

            xor EBX,EBX
.L_41146e:

            mov RDI,QWORD PTR [R12+496]
            call free@PLT

            mov RDI,QWORD PTR [R12+512]
            call free@PLT

            mov RDI,R12
            call free@PLT

            mov RAX,QWORD PTR [R14+2472]
            mov QWORD PTR [RAX],0
            mov EAX,EBX
            pop RBX
.L_4114a1:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4114b0:

            lea RDI,QWORD PTR [R12+360]
            call inflateEnd@PLT

            test EAX,EAX
            je .L_41146c

            lea RDX,QWORD PTR [RIP+.L_4453e8]
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_41146e
.L_4114de:

            nop
            nop
.L_4114e0:

            xor EAX,EAX
            cmp BYTE PTR [RSI],2
            je .L_4114f0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4114f0:

            push RBP
            push RBX
            mov ECX,8
            mov EDX,72
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_411506:

            call .L_410870

            test EAX,EAX
            je .L_41154c

            mov ECX,1
            mov EDX,882
            mov RSI,RBP
            mov RDI,RBX
            call .L_410870

            test EAX,EAX
            je .L_41154c

            mov ECX,653
            mov EDX,1395
            mov RSI,RBP
            mov RDI,RBX
            call .L_410870

            test EAX,EAX
            je .L_41154c

            xor EAX,EAX
            cmp BYTE PTR [RBP+881],1
            je .L_411558
.L_41154c:

            add RSP,8
.L_411550:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411558:

            cmp WORD PTR [RBP+128],0
            je .L_41154c

            mov EDX,DWORD PTR [RBP+80]
            cmp EDX,20
            jle .L_41154c

            mov EAX,DWORD PTR [RBP+140]
            cmp EAX,17
            jle .L_41158d

            cmp EDX,EAX
            jle .L_41158d

            mov EAX,DWORD PTR [RBP+148]
            bswap EAX
            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,16
            jbe .L_41158d

            cmp EDX,EAX
            jg .L_411591
.L_41158d:

            xor EAX,EAX
            jmp .L_41154c
.L_411591:

            cmp BYTE PTR [RBP+156],34
            mov EAX,0
            mov EDX,48
            cmove EAX,EDX
            jmp .L_41154c
.L_4115a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4115b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4115be:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,48
            jg .L_411a10

            mov RAX,QWORD PTR [RDI+2472]
            mov RDX,RSP
            mov ESI,49152
            mov R12,QWORD PTR [RAX]
            call .L_4049d0

            test RAX,RAX
            je .L_411a10

            mov RDX,QWORD PTR [RSP]
            lea RBX,QWORD PTR [RAX+32768]
            lea RCX,QWORD PTR [RDX-32768]
            cmp RCX,2048
            mov QWORD PTR [RSP],RCX
            jle .L_411649

            movzx EAX,BYTE PTR [RAX+32768]
            lea ECX,DWORD PTR [RAX-4]
            cmp CL,250
            jbe .L_411649

            lea RBP,QWORD PTR [RDX-34816]
            sub RDX,34817
            and RDX,-2048
            mov R14,RBP
            sub R14,RDX
.L_411640:

            cmp DWORD PTR [RBX+1],808469571
            je .L_411670
.L_411649:

            xor EAX,EAX
.L_41164b:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_411a24

            add RSP,24
.L_411663:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_411670:

            cmp BYTE PTR [RBX+5],49
            jne .L_411649

            cmp AL,1
            je .L_4116e8

            nop
            nop
            nop
            nop
            nop
            nop
.L_411680:

            mov EAX,DWORD PTR [R12+196]
            test EAX,EAX
            je .L_411920
.L_411690:

            movzx R13D,BYTE PTR [RBX]
            test R13B,R13B
            jne .L_411818

            cmp BYTE PTR [RBX+6],1
            je .L_4116b6
.L_4116a3:

            mov RSI,RBX
            mov RDI,R12
            call .L_4114e0

            test EAX,EAX
            je .L_4119b8
.L_4116b6:

            add RBX,2048
            cmp RBP,R14
            mov QWORD PTR [RSP],RBP
            je .L_411649

            movzx EAX,BYTE PTR [RBX]
            sub RBP,2048
            lea EDX,DWORD PTR [RAX-4]
            cmp DL,250
            ja .L_411640

            jmp .L_411649
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4116e8:

            cmp BYTE PTR [RBX+6],1
            jne .L_411680

            cmp BYTE PTR [RBX+7],0
            jne .L_411680

            mov ECX,8
            mov EDX,72
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_411680

            mov ECX,32
            mov EDX,88
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_411680

            movzx R13D,WORD PTR [RBX+128]
            test R13,R13
            je .L_411680

            movsxd R15,DWORD PTR [RBX+80]
            cmp R15D,20
            jle .L_411680

            cmp BYTE PTR [RBX+881],1
            jne .L_411680

            mov EAX,DWORD PTR [RBX+140]
            cmp EAX,17
            jle .L_411680

            cmp R15D,EAX
            jle .L_411680

            mov EAX,DWORD PTR [RBX+148]
            bswap EAX
            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,16
            jbe .L_411680

            cmp R15D,EAX
            jle .L_411680

            test BYTE PTR [RBX+882],223
            jne .L_411680

            mov ECX,653
            mov EDX,1395
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_411680

            cmp BYTE PTR [RBX+156],34
            jne .L_411680

            cmp DWORD PTR [R12+188],0
            jne .L_4116b6

            mov QWORD PTR [R12+168],R13
            mov DWORD PTR [R12+184],R15D
            imul R13,R15
            mov QWORD PTR [R12+176],R13
            mov EAX,DWORD PTR [RBX+158]
            mov DWORD PTR [R12+188],EAX
            mov EAX,DWORD PTR [RBX+166]
            mov DWORD PTR [R12+192],EAX
            jmp .L_4116b6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411818:

            cmp R13B,2
            jne .L_411a29

            cmp BYTE PTR [RBX+6],2
            jne .L_4116a3

            cmp BYTE PTR [RBX+7],0
            jne .L_4116a3

            mov ECX,8
            mov EDX,72
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_4116a3

            mov ECX,32
            mov EDX,88
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_4116a3

            cmp WORD PTR [RBX+128],0
            je .L_4116a3

            mov EAX,DWORD PTR [RBX+80]
            cmp EAX,20
            jle .L_4116a3

            cmp BYTE PTR [RBX+881],2
            jne .L_4116a3

            mov EDX,DWORD PTR [RBX+140]
            cmp EDX,17
            jle .L_4116a3

            cmp EAX,EDX
            jle .L_4116a3

            mov EDX,DWORD PTR [RBX+148]
            bswap EDX
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,16
            jbe .L_4116a3

            cmp EAX,EDX
            jle .L_4116a3

            mov ECX,1
            mov EDX,882
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_4116a3

            mov ECX,653
            mov EDX,1395
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_4116a3

            cmp BYTE PTR [RBX+156],34
            jne .L_4116a3

            jmp .L_4116b6
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411920:

            mov RSI,RBX
            mov RDI,R12
            call .L_4114e0

            test EAX,EAX
            je .L_411690

            cmp BYTE PTR [RBX+88],37
            jne .L_411690

            cmp BYTE PTR [RBX+89],47
            jne .L_411690

            movzx EAX,BYTE PTR [RBX+90]
            cmp AL,64
            je .L_411a02

            cmp AL,67
            je .L_411a1a

            cmp AL,69
            jne .L_411690

            mov EAX,3
.L_411968:

            mov BYTE PTR [R12+42],AL
            movsxd RAX,DWORD PTR [RBX+80]
            movzx EDX,WORD PTR [RBX+128]
            mov DWORD PTR [R12+184],EAX
            imul RAX,RDX
            mov QWORD PTR [R12+168],RDX
            mov QWORD PTR [R12+176],RAX
            mov EAX,DWORD PTR [RBX+158]
            mov DWORD PTR [R12+196],EAX
            mov EAX,DWORD PTR [RBX+166]
            mov DWORD PTR [R12+200],EAX
            jmp .L_4116b6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4119b8:

            cmp R13B,255
            jne .L_411649

            cmp BYTE PTR [RBX+6],1
            jne .L_411649

            mov ECX,2041
            mov EDX,7
            mov RSI,RBX
            mov RDI,R12
            call .L_410870

            test EAX,EAX
            je .L_411649

            cmp DWORD PTR [R12+188],16
            mov EAX,48
            jle .L_411649

            jmp .L_41164b
.L_411a02:

            mov EAX,1
            jmp .L_411968
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411a10:

            mov EAX,4294967295
            jmp .L_41164b
.L_411a1a:

            mov EAX,2
            jmp .L_411968
.L_411a24:

            call __stack_chk_fail@PLT
.L_411a29:

            mov RSI,RBX
            mov RDI,R12
            call .L_4114e0

            test EAX,EAX
            jne .L_4116b6

            cmp R13B,3
            jne .L_4119b8

            cmp BYTE PTR [RBX+6],1
            jne .L_411649

            cmp BYTE PTR [RBX+7],0
            jne .L_411649

            mov EAX,DWORD PTR [RBX+72]
            cmp EAX,16
            jle .L_411649

            cmp EAX,DWORD PTR [R12+184]
            jge .L_411649

            mov EDX,DWORD PTR [RBX+76]
            bswap EDX
            cmp EAX,EDX
            jne .L_411649

            jmp .L_4116b6
.L_411a86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411a90:

            sub RSP,72
.L_411a94:

            mov RDX,RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+3]
            mov RDI,RSP
            movzx ESI,BYTE PTR [RDX+4]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [RDX+1]
            movups XMMWORD PTR [RSP+24],XMM0
            mov DWORD PTR [RSP+8],ECX
            mov DWORD PTR [RSP+4],ESI
            movups XMMWORD PTR [RDI+40],XMM0
            sub EAX,1
            mov DWORD PTR [RSP+16],EAX
            movzx EAX,BYTE PTR [RDX+2]
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [RDX+5]
            mov DWORD PTR [RSP],EAX
            movsx EAX,BYTE PTR [RDX+6]
            lea EDX,DWORD PTR [RAX+47]
            cmp EDX,98
            ja .L_411b1d

            lea EDX,DWORD PTR [RAX+3]
            test EAX,EAX
            cmovns EDX,EAX
            sar EDX,2
            sub ECX,EDX
            cdq 
            shr EDX,30
            mov DWORD PTR [RSP+8],ECX
            add EAX,EDX
            and EAX,3
            sub EAX,EDX
            mov EDX,EAX
            shl EDX,4
            sub EAX,EDX
            add EAX,ESI
            mov DWORD PTR [RSP+4],EAX
.L_411b1d:

            call timegm@PLT

            mov EDX,0
            cmp RAX,-1
            cmove RAX,RDX
            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            jne .L_411b44

            add RSP,72
.L_411b43:

            ret 
.L_411b44:

            call __stack_chk_fail@PLT
.L_411b49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411b50:

            mov RAX,RDI
            sub RSP,72
.L_411b57:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            mov RDI,RSP
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RSI
            xor ESI,ESI
            pxor XMM0,XMM0
            sub EDX,48
            sub ECX,48
            imul ECX,ECX,100
            imul EDX,EDX,1000
            movups XMMWORD PTR [RSP+24],XMM0
            add EDX,ECX
            movups XMMWORD PTR [RDI+40],XMM0
            movzx ECX,BYTE PTR [RAX+2]
            lea ECX,DWORD PTR [RCX+RCX*4-240]
            lea ECX,DWORD PTR [RDX+RCX*2]
            movzx EDX,BYTE PTR [RAX+3]
            lea EDX,DWORD PTR [RCX+RDX*1-1948]
            mov DWORD PTR [RSP+20],EDX
            movzx EDX,BYTE PTR [RAX+4]
            lea ECX,DWORD PTR [RDX+RDX*4-240]
            movzx EDX,BYTE PTR [RAX+5]
            lea EDX,DWORD PTR [RDX+RCX*2-48]
            mov DWORD PTR [RSP+16],EDX
            movzx EDX,BYTE PTR [RAX+6]
            lea ECX,DWORD PTR [RDX+RDX*4-240]
            movzx EDX,BYTE PTR [RAX+7]
            lea EDX,DWORD PTR [RDX+RCX*2-48]
            mov DWORD PTR [RSP+12],EDX
            movzx EDX,BYTE PTR [RAX+8]
            lea ECX,DWORD PTR [RDX+RDX*4-240]
            movzx EDX,BYTE PTR [RAX+9]
            lea EDX,DWORD PTR [RDX+RCX*2-48]
            movzx ECX,BYTE PTR [RAX+10]
            mov DWORD PTR [RSP+8],EDX
            lea ESI,DWORD PTR [RCX+RCX*4-240]
            movzx ECX,BYTE PTR [RAX+11]
            lea ESI,DWORD PTR [RCX+RSI*2-48]
            movzx ECX,BYTE PTR [RAX+12]
            mov DWORD PTR [RSP+4],ESI
            lea R8D,DWORD PTR [RCX+RCX*4-240]
            movzx ECX,BYTE PTR [RAX+13]
            movsx EAX,BYTE PTR [RAX+16]
            lea ECX,DWORD PTR [RCX+R8*2-48]
            mov DWORD PTR [RSP],ECX
            lea ECX,DWORD PTR [RAX+47]
            cmp ECX,98
            ja .L_411c55

            lea ECX,DWORD PTR [RAX+3]
            test EAX,EAX
            cmovns ECX,EAX
            sar ECX,2
            sub EDX,ECX
            mov DWORD PTR [RSP+8],EDX
            cdq 
            shr EDX,30
            add EAX,EDX
            and EAX,3
            sub EAX,EDX
            mov EDX,EAX
            shl EDX,4
            sub EAX,EDX
            add EAX,ESI
            mov DWORD PTR [RSP+4],EAX
.L_411c55:

            call timegm@PLT

            mov EDX,0
            cmp RAX,-1
            cmove RAX,RDX
            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            jne .L_411c7c

            add RSP,72
.L_411c7b:

            ret 
.L_411c7c:

            call __stack_chk_fail@PLT
.L_411c81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c90:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            lea RSI,QWORD PTR [RDX+4]
            push RBP
            push RBX
            sub RSP,56
.L_411ca5:

            mov RAX,QWORD PTR [RDI+2472]
            cmp RCX,RSI
            mov RBP,QWORD PTR [RAX]
            jb .L_411d80

            movzx EAX,BYTE PTR [RDX]
            mov RBX,RDX
            lea EDX,DWORD PTR [RAX-65]
            cmp DL,25
            ja .L_411d80

            movzx EDX,BYTE PTR [RBX+1]
            mov R9,RDI
            lea EDI,DWORD PTR [RDX-65]
            cmp DIL,25
            ja .L_411d80

            movzx R12D,BYTE PTR [RBX+2]
            cmp R12B,3
            jbe .L_411d80

            movzx EDI,R12B
            add RDI,RBX
            cmp RCX,RDI
            jb .L_411d80

            lea R8,QWORD PTR [RIP+.L_4456d0]
            mov R13,RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411d10:

            sub EAX,67
            lea EDI,DWORD PTR [R12-4]
            movzx ECX,BYTE PTR [RBX+3]
            cmp AL,23
            ja .L_411d40

            movzx EAX,AL
            movsxd RAX,DWORD PTR [R8+RAX*4]
            add RAX,R8
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411d30:

            cmp DL,70
            jne .L_411d40

            cmp ECX,1
            je .L_4123e0

            nop
            nop
.L_411d40:

            movzx EAX,BYTE PTR [RBX+2]
            add RBX,RAX
            lea RSI,QWORD PTR [RBX+4]
            cmp RSI,R13
            ja .L_411d80

            movzx EAX,BYTE PTR [RBX]
            lea EDX,DWORD PTR [RAX-65]
            cmp DL,25
            ja .L_411d80

            movzx EDX,BYTE PTR [RBX+1]
            lea ECX,DWORD PTR [RDX-65]
            cmp CL,25
            ja .L_411d80

            movzx R12D,BYTE PTR [RBX+2]
            cmp R12B,3
            jbe .L_411d80

            movzx ECX,R12B
            add RCX,RBX
            cmp R13,RCX
            jae .L_411d10

            nop
            nop
.L_411d80:

            xor EAX,EAX
.L_411d82:

            add RSP,56
.L_411d86:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411d98:

            cmp ECX,1
            jne .L_411d40

            cmp DL,70
            jne .L_411d40

            test EDI,EDI
            je .L_411ed8

            movzx EDX,BYTE PTR [RBX+4]
            lea R15,QWORD PTR [RBX+5]
            lea ESI,DWORD PTR [R12-5]
            mov EAX,EDX
            mov R10D,EDX
            mov EDI,EDX
            and EDI,4
            and EAX,1
            and R10D,2
            test DL,DL
            mov BYTE PTR [RSP],DIL
            js .L_41261a

            test AL,AL
            je .L_411e26

            cmp ESI,6
            jle .L_411ed8

            mov RDI,R15
            mov DWORD PTR [R14+88],1
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R8
            mov BYTE PTR [RSP+16],R10B
            lea R15,QWORD PTR [RBX+12]
            mov BYTE PTR [RSP+8],DL
            call .L_411a90

            movzx R10D,BYTE PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+8]
            lea ESI,DWORD PTR [R12-12]
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+96],RAX
.L_411e26:

            test R10B,R10B
            je .L_411e6c

            cmp ESI,6
            mov BYTE PTR [RSP+32],DL
            mov DWORD PTR [RSP+24],ESI
            jle .L_411ed8

            mov RDI,R15
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            call .L_411a90

            mov ESI,DWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [RSP+32]
            add R15,7
            mov R9,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+104],RAX
            sub ESI,7
.L_411e6c:

            cmp BYTE PTR [RSP],0
            je .L_411ead

            cmp ESI,6
            mov BYTE PTR [RSP+24],DL
            mov DWORD PTR [RSP+16],ESI
            jle .L_411ed8

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_411a90

            mov ESI,DWORD PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+24]
            add R15,7
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+112],RAX
            sub ESI,7
.L_411ead:

            and EDX,8
            je .L_411ed8

            cmp ESI,6
            jle .L_411ed8

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_411a90

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+120],RAX
            nop
            nop
            nop
.L_411ed8:

            mov BYTE PTR [RBP+40],1
            jmp .L_411d40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411ee8:

            cmp DL,76
            je .L_4121e0

            cmp DL,84
            jne .L_411d40

            test EDI,EDI
            jne .L_411d40

            cmp ECX,1
            jne .L_411d40

            xor EAX,EAX
            mov WORD PTR [RBP+40],AX
            xor EAX,EAX
            jmp .L_411d82
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411f20:

            cmp ECX,1
            jne .L_411d40

            cmp DL,69
            jne .L_411d40

            mov BYTE PTR [R14+74],1
            mov BYTE PTR [RBP+40],1
            jmp .L_411d40
.L_411f40:

            cmp ECX,1
            sete AL
            cmp DL,78
            je .L_412158

            cmp DL,88
            jne .L_411d40

            test AL,AL
            je .L_411d40

            cmp EDI,7
            jle .L_411ed8

            lea R10,QWORD PTR [RSI+3]
            xor ECX,ECX
            mov EDX,1
.L_411f74:

            movzx EAX,BYTE PTR [RSI]
            add RSI,1
            imul EAX,EDX
            shl EDX,8
            add ECX,EAX
            cmp RSI,R10
            jne .L_411f74

            movzx EAX,BYTE PTR [RSI]
            imul EDX,EAX
            add ECX,EDX
            cmp EDI,15
            mov DWORD PTR [R14+136],ECX
            jle .L_411ed8

            lea RAX,QWORD PTR [RBX+12]
            lea R10,QWORD PTR [RBX+15]
            xor ESI,ESI
            mov ECX,1
.L_411faf:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RAX,R10
            jne .L_411faf

            movzx EAX,BYTE PTR [RAX]
            imul ECX,EAX
            add ESI,ECX
            cmp EDI,23
            mov DWORD PTR [R14+160],ESI
            jle .L_411ed8

            lea RAX,QWORD PTR [RBX+20]
            lea R10,QWORD PTR [RBX+23]
            xor ESI,ESI
            mov ECX,1
.L_411fea:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RAX,R10
            jne .L_411fea

            movzx EAX,BYTE PTR [RAX]
            imul ECX,EAX
            add ESI,ECX
            cmp EDI,31
            mov DWORD PTR [R14+140],ESI
            jle .L_411ed8

            lea RAX,QWORD PTR [RBX+28]
            lea R10,QWORD PTR [RBX+31]
            xor ESI,ESI
            mov ECX,1
.L_412025:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp R10,RAX
            jne .L_412025

            movzx EAX,BYTE PTR [R10]
            imul ECX,EAX
            add ESI,ECX
            cmp EDI,39
            mov DWORD PTR [R14+144],ESI
            jle .L_411ed8

            lea RAX,QWORD PTR [RBX+36]
            lea RDI,QWORD PTR [RBX+39]
            xor ESI,ESI
            mov ECX,1
.L_412061:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RDI,RAX
            jne .L_412061

            movzx EAX,BYTE PTR [RDI]
            imul ECX,EAX
            lea EAX,DWORD PTR [RSI+RCX*1]
            mov QWORD PTR [R14+152],RAX
            jmp .L_411ed8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412090:

            cmp ECX,1
            jne .L_411d40

            cmp DL,77
            jne .L_411d40

            cmp BYTE PTR [R14+208],0
            jne .L_4120b7

            mov QWORD PTR [R14+176],0
.L_4120b7:

            test EDI,EDI
            mov BYTE PTR [R14+208],0
            je .L_411ed8

            movzx EAX,BYTE PTR [RBX+4]
            cmp AL,1
            je .L_41278d

            jb .L_412756

            cmp AL,2
            je .L_41272c

            cmp AL,4
            jne .L_411ed8

            lea RDI,QWORD PTR [R14+168]
            lea RSI,QWORD PTR [RIP+.L_4451be]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4312c0

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            jmp .L_411ed8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412118:

            cmp DL,69
            je .L_4122a8

            cmp DL,76
            jne .L_411d40

            cmp ECX,1
            jne .L_411d40

            cmp EDI,8
            jne .L_411d40

            mov EAX,DWORD PTR [RBX+4]
            imul RAX,QWORD PTR [RBP+168]
            mov QWORD PTR [R14+80],RAX
            mov BYTE PTR [RBP+40],1
            jmp .L_411d40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412158:

            cmp EDI,16
            jne .L_411d40

            test AL,AL
            je .L_411d40

            lea RDI,QWORD PTR [RSI+3]
            xor ECX,ECX
            mov EDX,1
.L_412174:

            movzx EAX,BYTE PTR [RSI]
            add RSI,1
            imul EAX,EDX
            shl EDX,8
            add ECX,EAX
            cmp RDI,RSI
            jne .L_412174

            movzx EAX,BYTE PTR [RDI]
            lea RDI,QWORD PTR [RBX+15]
            xor ESI,ESI
            imul EDX,EAX
            lea RAX,QWORD PTR [RBX+12]
            lea R10D,DWORD PTR [RDX+RCX*1]
            mov ECX,1
            shl R10,32
            mov QWORD PTR [R14+128],R10
.L_4121ac:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RDI,RAX
            jne .L_4121ac

            movzx EAX,BYTE PTR [RDI]
            imul ECX,EAX
            lea EAX,DWORD PTR [RCX+RSI*1]
            or R10,RAX
            mov QWORD PTR [R14+128],R10
            mov BYTE PTR [RBP+40],1
            jmp .L_411d40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4121e0:

            cmp ECX,1
            jne .L_411d40

            cmp BYTE PTR [R14+240],0
            jne .L_412492
.L_4121f7:

            mov QWORD PTR [R14+224],0
.L_412202:

            test EDI,EDI
            mov BYTE PTR [R14+240],0
            je .L_411ed8

            movzx EAX,BYTE PTR [RBX+4]
            test AL,AL
            je .L_41222a

            cmp AL,1
            jne .L_411ed8

            mov BYTE PTR [R14+240],1
.L_41222a:

            sub R12D,5
            lea RCX,QWORD PTR [RBX+5]
            cmp R12D,1
            jle .L_411ed8

            lea RAX,QWORD PTR [R14+216]
            lea RSI,QWORD PTR [RIP+.L_443a67]
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+8],RBP
            mov EBX,R12D
            mov QWORD PTR [RSP+16],R9
            mov R12,RAX
            mov QWORD PTR [RSP+32],R13
            nop
            nop
            nop
            nop
.L_412268:

            movzx R13D,BYTE PTR [RCX]
            mov RDI,R12
            mov QWORD PTR [RSP],R8
            lea R15,QWORD PTR [RCX+2]
            movzx EBP,BYTE PTR [RCX+1]
            sub EBX,2
            call .L_4312c0

            mov R8,QWORD PTR [RSP]
            cmp R13B,32
            ja .L_4124da

            lea RDI,QWORD PTR [RIP+.L_445730]
            movzx EDX,R13B
            movsxd RAX,DWORD PTR [RDI+RDX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4122a8:

            cmp ECX,1
            jne .L_411d40

            cmp EDI,24
            jne .L_411d40

            mov RSI,QWORD PTR [R9+2472]
            mov EAX,DWORD PTR [RBX+12]
            movsxd RCX,DWORD PTR [RBX+4]
            mov R12,QWORD PTR [RSI]
            mov ESI,DWORD PTR [R14+136]
            mov DWORD PTR [R14+64],EAX
            mov EDX,DWORD PTR [RBX+20]
            mov RDI,QWORD PTR [R12+168]
            and ESI,61440
            mov DWORD PTR [R14+68],EDX
            imul RCX,RDI
            cmp ESI,32768
            je .L_4125de
.L_4122fb:

            cmp RCX,QWORD PTR [R12+160]
            jb .L_4125e8

            add RAX,RDX
            cmp RDI,RAX
            jb .L_4125e8

            add RAX,RCX
            cmp RAX,QWORD PTR [R12+176]
            ja .L_4125e8

            movsxd RDX,DWORD PTR [R12+64]
            mov EAX,DWORD PTR [R12+68]
            cmp EDX,EAX
            jl .L_412428

            cmp EAX,15
            jle .L_412608

            lea EDI,DWORD PTR [RAX+RAX*1]
            cmp EAX,EDI
            mov DWORD PTR [RSP+32],EDI
            jge .L_4127cc

            movsxd RDI,EDI
.L_412353:

            mov ESI,16
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov DWORD PTR [RSP],EDX
            call calloc@PLT

            test RAX,RAX
            mov R15,RAX
            mov R9,QWORD PTR [RSP+24]
            je .L_4127cc

            mov RSI,QWORD PTR [R12+56]
            movsxd RDX,DWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            test RSI,RSI
            je .L_4123cf

            shl RDX,4
            mov RDI,RAX
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP],RCX
            call memcpy@PLT

            mov RDI,QWORD PTR [R12+56]
            call free@PLT

            movsxd RDX,DWORD PTR [R12+64]
            mov R9,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
.L_4123cf:

            mov EAX,DWORD PTR [RSP+32]
            mov QWORD PTR [R12+56],R15
            mov DWORD PTR [R12+68],EAX
            jmp .L_41242d
          .byte 0x90
.L_4123e0:

            cmp BYTE PTR [RBX+4],112
            jne .L_411d40

            cmp BYTE PTR [RBX+5],122
            jne .L_411d40

            cmp EDI,12
            jne .L_411d40

            mov DWORD PTR [R14+244],1
            movzx EAX,BYTE PTR [RBX+7]
            mov DWORD PTR [R14+248],EAX
            mov EAX,DWORD PTR [RBX+8]
            mov QWORD PTR [R14+256],RAX
            jmp .L_411d40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412428:

            mov R15,QWORD PTR [R12+56]
.L_41242d:

            lea EAX,DWORD PTR [RDX+1]
            test EDX,EDX
            mov DWORD PTR [R12+64],EAX
            jle .L_412486

            lea ESI,DWORD PTR [RDX-1]
            sar ESI,1
            movsxd RAX,ESI
            shl RAX,4
            add RAX,R15
            cmp QWORD PTR [RAX],RCX
            ja .L_412475

            jmp .L_4125cd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412458:

            lea EDI,DWORD PTR [RSI-1]
            movsxd RDX,ESI
            sar EDI,1
            movsxd RAX,EDI
            shl RAX,4
            add RAX,R15
            cmp RCX,QWORD PTR [RAX]
            jae .L_4125cf

            mov ESI,EDI
.L_412475:

            movdqu XMM0,XMMWORD PTR [RAX]
            shl RDX,4
            test ESI,ESI
            movups XMMWORD PTR [R15+RDX*1],XMM0
            jne .L_412458
.L_412486:

            mov QWORD PTR [R15],RCX
            mov QWORD PTR [R15+8],R14
            jmp .L_411d40
.L_412492:

            cmp QWORD PTR [R14+224],0
            jne .L_412202

            jmp .L_4121f7
.L_4124a5:

            lea RSI,QWORD PTR [RIP+.L_4451c6]
            mov QWORD PTR [RSP],R8
.L_4124b0:

            mov RDI,R12
            movzx R13D,BPL
            call .L_4312c0

            mov R8,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RIP+.L_44766b]
            movzx ECX,BPL
.L_4124cb:

            sub EBX,R13D
            add RCX,R15
            cmp EBX,1
            jg .L_412268
.L_4124da:

            mov RBP,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+24]
            mov R13,QWORD PTR [RSP+32]
            jmp .L_411ed8
.L_4124f3:

            mov QWORD PTR [RSP],R8
            mov QWORD PTR [R14+224],0
            lea RSI,QWORD PTR [RIP+.L_4451c1]
            jmp .L_4124b0
.L_41250b:

            lea RSI,QWORD PTR [RIP+.L_44766b]
            mov RDI,R12
            mov QWORD PTR [RSP],R8
            movzx R13D,BPL
            call .L_4312c0

            movzx ECX,BPL
            lea RSI,QWORD PTR [RIP+.L_443a67]
            mov R8,QWORD PTR [RSP]
            jmp .L_4124cb
.L_412533:

            mov QWORD PTR [RSP],R8
            lea RSI,QWORD PTR [RIP+.L_4451be]
            jmp .L_4124b0
.L_412543:

            mov QWORD PTR [RSP],R8
            lea RSI,QWORD PTR [RIP+.L_4451bf]
            jmp .L_4124b0
.L_412553:

            movzx R13D,BPL
            cmp EBX,R13D
            jl .L_4124da

            movzx ECX,BPL
            mov RSI,R15
            mov RDI,R12
            mov RDX,RCX
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP],RCX
            call .L_431240

            lea RSI,QWORD PTR [RIP+.L_44766b]
            mov RCX,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_4124cb
.L_412590:

            movzx R13D,BPL
            cmp EBX,R13D
            jl .L_4124da

            movzx ECX,BPL
            mov RSI,R15
            mov RDI,R12
            mov RDX,RCX
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP],RCX
            call .L_431240

            lea RSI,QWORD PTR [RIP+.L_443a67]
            mov RCX,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_4124cb
.L_4125cd:

            mov ESI,EDX
.L_4125cf:

            movsxd RSI,ESI
            shl RSI,4
            add R15,RSI
            jmp .L_412486
.L_4125de:

            cmp RCX,QWORD PTR [R14+48]
            jb .L_4122fb
.L_4125e8:

            lea RDX,QWORD PTR [RIP+.L_445410]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R9
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_411d82
.L_412608:

            mov EDI,16
            mov DWORD PTR [RSP+32],16
            jmp .L_412353
.L_41261a:

            test AL,AL
            je .L_41266c

            cmp ESI,16
            jle .L_411ed8

            mov RDI,R15
            mov DWORD PTR [R14+88],1
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R8
            mov BYTE PTR [RSP+16],R10B
            lea R15,QWORD PTR [RBX+22]
            mov BYTE PTR [RSP+8],DL
            call .L_411b50

            movzx R10D,BYTE PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+8]
            lea ESI,DWORD PTR [R12-22]
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+96],RAX
.L_41266c:

            test R10B,R10B
            je .L_4126b2

            cmp ESI,16
            mov BYTE PTR [RSP+32],DL
            mov DWORD PTR [RSP+24],ESI
            jle .L_411ed8

            mov RDI,R15
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            call .L_411b50

            mov ESI,DWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [RSP+32]
            add R15,17
            mov R9,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+104],RAX
            sub ESI,17
.L_4126b2:

            cmp BYTE PTR [RSP],0
            je .L_4126f7

            cmp ESI,16
            mov BYTE PTR [RSP+24],DL
            mov DWORD PTR [RSP+16],ESI
            jle .L_411ed8

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_411b50

            mov ESI,DWORD PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+24]
            add R15,17
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+112],RAX
            sub ESI,17
.L_4126f7:

            and EDX,8
            je .L_411ed8

            cmp ESI,16
            jle .L_411ed8

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_411b50

            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+120],RAX
            mov R9,QWORD PTR [RSP+8]
            jmp .L_411ed8
.L_41272c:

            lea RDI,QWORD PTR [R14+168]
            lea RSI,QWORD PTR [RIP+.L_4451bf]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4312c0

            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_411ed8
.L_412756:

            cmp EDI,1
            je .L_411ed8

            sub R12D,5
            lea RSI,QWORD PTR [RBX+5]
            lea RDI,QWORD PTR [R14+168]
            movsxd RDX,R12D
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_431240

            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_411ed8
.L_41278d:

            cmp EDI,1
            je .L_411ed8

            sub R12D,5
            lea RSI,QWORD PTR [RBX+5]
            lea RDI,QWORD PTR [R14+168]
            movsxd RDX,R12D
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_431240

            mov BYTE PTR [R14+208],1
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_411ed8
.L_4127cc:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R9
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_411d82
.L_4127ec:

            nop
            nop
            nop
            nop
.L_4127f0:

            push R15
            push R14
            mov R10,RDI
            push R13
            push R12
            mov ECX,1
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RDX
            xor ESI,ESI
            sub RSP,56
.L_41280e:

            mov RAX,QWORD PTR [RDI+2472]
            movzx R14D,BYTE PTR [RDX+32]
            movzx R9D,BYTE PTR [RDX]
            mov R15D,DWORD PTR [RDX+2]
            lea RDI,QWORD PTR [RDX+13]
            mov R13,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RDX+10]
            mov BYTE PTR [RSP+8],R14B
.L_412832:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RAX,RDI
            jne .L_412832

            movzx EAX,BYTE PTR [RBP+13]
            lea RDX,QWORD PTR [RIP+.L_445440]
            imul ECX,EAX
            add ECX,ESI
            cmp R9,33
            jbe .L_412ba0

            lea RAX,QWORD PTR [R9-33]
            cmp RAX,R14
            jb .L_412cd8

            test R14,R14
            je .L_412cd8

            test R15D,R15D
            jle .L_412bc0

            mov RSI,QWORD PTR [R13+168]
            xor EDX,EDX
            movsxd RDI,R15D
            lea RAX,QWORD PTR [RSI+RCX*1-1]
            div RSI
            mov EDX,DWORD PTR [R13+184]
            add RAX,RDI
            cmp RAX,RDX
            ja .L_412c80
.L_4128a6:

            imul RSI,RDI
            test R12,R12
            mov RDX,RSI
            je .L_4128db

            cmp RSI,QWORD PTR [R12+48]
            je .L_412af0

            mov RAX,R12
            jmp .L_4128d2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4128c8:

            cmp QWORD PTR [RAX+48],RDX
            je .L_412af0
.L_4128d2:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            jne .L_4128c8
.L_4128db:

            mov ESI,304
            mov EDI,1
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],RDX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+16],R9
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov R9,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            je .L_412f03

            lea RDI,QWORD PTR [RBP+18]
            mov QWORD PTR [RAX+8],R12
            mov QWORD PTR [RAX+48],RDX
            mov QWORD PTR [RAX+56],RCX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],R9
            call .L_411a90

            mov QWORD PTR [RBX+104],RAX
            mov QWORD PTR [RBX+112],RAX
            lea R8,QWORD PTR [RBP+33]
            mov QWORD PTR [RBX+120],RAX
            lea RAX,QWORD PTR [RBX+288]
            mov QWORD PTR [RBX+288],0
            mov R9,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX+296],RAX
            cmp BYTE PTR [R13+42],0
            jne .L_412be0

            cmp R14,2
            jbe .L_412d10

            cmp BYTE PTR [R8+R14*1-2],59
            lea RSI,QWORD PTR [R14-2]
            lea RDX,QWORD PTR [R14-1]
            movzx ECX,BYTE PTR [R8+R14*1-1]
            mov RAX,R14
            je .L_412ef2
.L_4129a2:

            cmp CL,46
            cmovne RDX,RAX
.L_4129a9:

            lea RDI,QWORD PTR [RBX+168]
            mov RSI,R8
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RSP+32],R10
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            call .L_431240

            mov R10,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
.L_4129e1:

            movsx EAX,BYTE PTR [RBP+25]
            mov R11D,EAX
            and R11D,2
            cmp R11B,1
            sbb EDX,EDX
            shr EAX,31
            and EDX,16192
            mov DWORD PTR [RBX+264],EAX
            add EDX,16832
            cmp QWORD PTR [RBX+56],0
            mov DWORD PTR [RBX+136],EDX
            jne .L_412c90

            test R15D,R15D
            js .L_412c90

            mov RAX,-1
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+48],RAX
.L_412a33:

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            je .L_412a6f

            movzx R15D,BYTE PTR [RSP+8]
            lea RCX,QWORD PTR [RBP+R9*1]
            not R15D
            and R15D,1
            add R14,R15
            add R14,R8
            test R12,R12
            je .L_412da0
.L_412a5c:

            cmp BYTE PTR [R13+41],0
            jne .L_412ee8

            mov DWORD PTR [R13+8],0
.L_412a6f:

            test R12,R12
            mov DWORD PTR [RBX+160],1
            movzx EAX,BYTE PTR [R13+40]
            je .L_412ce8

            test R11B,R11B
            je .L_412ca0

            mov EDX,DWORD PTR [R12+32]
            test AL,AL
            lea ECX,DWORD PTR [RDX+1]
            mov DWORD PTR [R12+32],ECX
            je .L_412ada

            cmp QWORD PTR [R12+8],0
            je .L_412e69
.L_412aad:

            cmp BYTE PTR [RBX+74],0
            je .L_412b1a
.L_412ab3:

            cmp BYTE PTR [R12+72],0
            je .L_412cfa

            cmp QWORD PTR [RBX+80],0
            lea RDX,QWORD PTR [RIP+.L_445226]
            jne .L_412ba0

            test R11B,R11B
            je .L_412cfa
.L_412ada:

            mov RAX,QWORD PTR [R13+104]
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [R13+104],RBX
            jmp .L_412b08
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412af0:

            lea RDX,QWORD PTR [RIP+.L_4454b8]
            mov ESI,84
            mov RDI,R10
            xor EAX,EAX
            xor EBX,EBX
            call .L_432bc0
.L_412b08:

            add RSP,56
.L_412b0c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_412b1a:

            cmp BYTE PTR [R12+72],0
            jne .L_412cca

            test R11B,R11B
            je .L_412b40

            cmp WORD PTR [R12+74],0
            je .L_412b40

            mov BYTE PTR [RBX+75],1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412b40:

            mov RDX,QWORD PTR [RBX+80]
            test RDX,RDX
            je .L_412ada

            cmp QWORD PTR [R12+8],0
            je .L_412b90

            test R11B,R11B
            jne .L_412b90

            add DWORD PTR [R12+32],1
            lea RAX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+48],RAX
            mov RAX,R12
            nop
            nop
.L_412b70:

            cmp QWORD PTR [RAX+48],RDX
            je .L_412b90

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            jne .L_412b70

            cmp BYTE PTR [R12+72],0
            je .L_412ada

            nop
            nop
            nop
            nop
            nop
.L_412b90:

            lea RDX,QWORD PTR [RIP+.L_445242]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ba0:

            mov ESI,4294967295
            mov RDI,R10
            xor EAX,EAX
            call .L_432bc0

            xor EBX,EBX
            jmp .L_412b08
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412bc0:

            test RCX,RCX
            je .L_412bce

            test R15D,R15D
            js .L_412c80
.L_412bce:

            movsxd RDI,R15D
            mov RSI,QWORD PTR [R13+168]
            jmp .L_4128a6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412be0:

            cmp R14,206
            ja .L_412d38

            mov RDX,R14
            and RDX,-2
            cmp RDX,4
            ja .L_412f5b
.L_412bfe:

            mov RDI,RDX
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+192],RAX
            mov RDX,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            je .L_412f31

            cmp EDX,8
            mov ECX,EDX
            jae .L_412d78

            test DL,4
            jne .L_412f1e

            test ECX,ECX
            je .L_412c70

            movzx ESI,BYTE PTR [RBP+33]
            test CL,2
            mov BYTE PTR [RAX],SIL
            je .L_412c70

            movzx ESI,WORD PTR [R8+RCX*1-2]
            mov WORD PTR [RAX+RCX*1-2],SI
            nop
            nop
            nop
.L_412c70:

            mov QWORD PTR [RBX+200],RDX
            jmp .L_4129e1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412c80:

            lea RDX,QWORD PTR [RIP+.L_445490]
            jmp .L_412ba0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412c90:

            mov EAX,R15D
            mov QWORD PTR [RBX+152],RAX
            jmp .L_412a33
          .byte 0x90
.L_412ca0:

            test AL,AL
            je .L_412ada

            cmp QWORD PTR [R12+8],0
            jne .L_412aad

            cmp BYTE PTR [RBX+74],0
            jne .L_412ab3

            cmp BYTE PTR [R12+72],0
            je .L_412b40
.L_412cca:

            mov BYTE PTR [RBX+73],0
            jmp .L_412b40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412cd8:

            lea RDX,QWORD PTR [RIP+.L_445468]
            jmp .L_412ba0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412ce8:

            test AL,AL
            je .L_412ada

            cmp BYTE PTR [RBX+74],0
            je .L_412e59
.L_412cfa:

            lea RDX,QWORD PTR [RIP+.L_445211]
            jmp .L_412ba0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d10:

            mov RDX,R14
.L_412d13:

            cmp RDX,1
            je .L_4129a9

            lea RSI,QWORD PTR [RDX-1]
            movzx ECX,BYTE PTR [RBP+RDX*1+32]
            mov RAX,RDX
            mov RDX,RSI
            jmp .L_4129a2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d38:

            mov EAX,202
            mov EDX,206
.L_412d42:

            cmp BYTE PTR [RBP+RAX*1+33],0
            jne .L_412bfe

            cmp BYTE PTR [R8+RDX*1-3],59
            jne .L_412bfe

            cmp BYTE PTR [R8+RDX*1-2],0
            jne .L_412bfe

            cmp BYTE PTR [R8+RDX*1-1],49
            cmove RDX,RAX
            jmp .L_412bfe
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412d78:

            mov ECX,EDX
            mov RDI,RAX
            mov RSI,QWORD PTR [R8+RCX*1-8]
            mov QWORD PTR [RAX+RCX*1-8],RSI
            lea ECX,DWORD PTR [RDX-1]
            mov RSI,R8
            shr ECX,3

            rep movsq 

            jmp .L_412c70
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412da0:

            mov RAX,RCX
            sub RAX,R14
            cmp RAX,6
            jle .L_412a5c

            cmp DWORD PTR [R14],17256531
            jne .L_412a5c

            cmp WORD PTR [R14+4],61374
            jne .L_412a5c

            movzx EDX,BYTE PTR [R14+6]
            mov BYTE PTR [R13+41],1
            add R14,7
            mov BYTE PTR [R13+43],DL
            nop
            nop
            nop
            nop
.L_412de0:

            add RDX,R14
            mov RDI,R10
            mov BYTE PTR [RBX+208],0
            mov BYTE PTR [RBX+240],0
            mov RSI,RBX
            mov BYTE PTR [RSP+16],R11B
            mov QWORD PTR [RSP+8],R10
            call .L_411c90

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            movzx R11D,BYTE PTR [RSP+16]
            jne .L_412f4c

            cmp QWORD PTR [RBX+56],0
            je .L_412a6f

            mov EAX,DWORD PTR [RBX+136]
            and EAX,61440
            cmp EAX,40960
            jne .L_412a6f

            mov RAX,-1
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+48],RAX
            jmp .L_412a6f
.L_412e59:

            cmp QWORD PTR [RBX+80],0
            je .L_412ada

            jmp .L_412b90
.L_412e69:

            cmp QWORD PTR [R13+48],0
            jne .L_412aad

            mov RAX,QWORD PTR [RBX+168]
            test RAX,RAX
            je .L_412aad

            lea RDI,QWORD PTR [RIP+.L_445208]
            mov ECX,9
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_412ebd

            lea RDI,QWORD PTR [RIP+.L_445207]
            mov RSI,RAX
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_412aad
.L_412ebd:

            cmp QWORD PTR [RBX+80],0
            mov EAX,257
            mov QWORD PTR [R13+48],RBX
            mov WORD PTR [RBX+72],AX
            mov BYTE PTR [RBX+74],0
            mov DWORD PTR [R12+32],EDX
            jne .L_412b90

            jmp .L_412ada
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412ee8:

            movzx EDX,BYTE PTR [R13+43]
            jmp .L_412de0
.L_412ef2:

            cmp CL,49
            jne .L_4129a2

            mov RDX,RSI
            jmp .L_412d13
.L_412f03:

            lea RDX,QWORD PTR [RIP+.L_4451cf]
            mov ESI,12
            mov RDI,R10
            xor EAX,EAX
            call .L_432bc0

            jmp .L_412b08
.L_412f1e:

            mov ESI,DWORD PTR [RBP+33]
            mov DWORD PTR [RAX],ESI
            mov ESI,DWORD PTR [R8+RCX*1-4]
            mov DWORD PTR [RAX+RCX*1-4],ESI
            jmp .L_412c70
.L_412f31:

            lea RDX,QWORD PTR [RIP+.L_4451e8]
            mov ESI,12
            mov RDI,R10
            xor EBX,EBX
            call .L_432bc0

            jmp .L_412b08
.L_412f4c:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_412b08
.L_412f5b:

            lea RAX,QWORD PTR [RDX-4]
            jmp .L_412d42
.L_412f64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412f70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,120
.L_412f81:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSP+24],RDX
            test RAX,RAX
            je .L_412ff0

            mov RDX,QWORD PTR [RAX+16]
            test RDX,RDX
            mov QWORD PTR [RSI+128],RDX
            je .L_412fe0
.L_412fb2:

            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_412fbc:

            mov RBX,QWORD PTR [RSP+104]
            xor RBX,QWORD PTR FS:[40]
            jne .L_413b4c

            add RSP,120
.L_412fd4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_412fe0:

            lea RDX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSI+136],RDX
            jmp .L_412fb2
.L_412ff0:

            lea RAX,QWORD PTR [RSI+112]
            mov R13,RDI
            mov QWORD PTR [RSP+40],RAX
            lea RAX,QWORD PTR [RSI+144]
            mov QWORD PTR [RSP+64],RAX
.L_413008:

            mov RDI,QWORD PTR [RSP+40]
            call .L_4107c0

            mov R15,RAX
            mov RAX,QWORD PTR [RSP+24]
            test R15,R15
            mov QWORD PTR [RAX],R15
            je .L_4139a0

            mov R8,QWORD PTR [R15+80]
            test R8,R8
            jne .L_4135e8

            mov EDX,DWORD PTR [R15+136]
            and EDX,61440
            cmp EDX,16384
            jne .L_413480

            mov RAX,QWORD PTR [R13+2472]
            mov RAX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+224]
            mov QWORD PTR [RSP+16],RAX
            test RSI,RSI
            jne .L_413670
.L_41306b:

            mov RAX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R15+48]
            mov R8,QWORD PTR [RAX+160]
            cmp R8,RSI
            ja .L_413adb

            mov RAX,QWORD PTR [R15+56]
            mov RBX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSI+RAX*1]
            cmp RDX,QWORD PTR [RBX+176]
            ja .L_413b05

            cmp R8,RSI
            jb .L_413530
.L_4130a7:

            mov RSI,QWORD PTR [RSP+16]
            xor EDX,EDX
            mov RDI,R13
            mov RCX,QWORD PTR [RSI+168]
            lea RAX,QWORD PTR [RAX+RCX*1-1]
            div RCX
            xor EDX,EDX
            imul RAX,RCX
            mov RSI,RAX
            mov QWORD PTR [RSP+48],RAX
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_413b2c

            mov RAX,QWORD PTR [RSP+48]
            mov RBX,QWORD PTR [RSP+16]
            add QWORD PTR [RBX+160],RAX
            test RAX,RAX
            je .L_4132af

            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RBX+112]
            xor R12D,R12D
            mov QWORD PTR [RSP],R15
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+72],RBP
.L_413113:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+168]
            mov QWORD PTR [RSP+32],RAX
            lea RBX,QWORD PTR [R14+RAX*1]
            movzx EAX,BYTE PTR [R14]
            test AL,AL
            je .L_413293

            cmp RBX,R14
            jbe .L_413293

            add RAX,R14
            cmp RBX,RAX
            jb .L_413293

            mov R15,R12
            jmp .L_413212
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413158:

            mov RSI,QWORD PTR [RSP]
            mov RDX,R14
            mov RDI,R13
            call .L_4127f0

            test RAX,RAX
            mov R12,RAX
            je .L_413516

            cmp QWORD PTR [RAX+80],0
            jne .L_413230

            mov EBP,DWORD PTR [RAX+264]
            test EBP,EBP
            jne .L_413258

            test R15,R15
            je .L_413230
.L_413195:

            mov EDI,24
            call malloc@PLT

            test RAX,RAX
            je .L_413502

            mov RCX,QWORD PTR [R12+48]
            mov RSI,QWORD PTR [R12+56]
            mov RDI,QWORD PTR [R15+280]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX],RCX
            mov QWORD PTR [RAX+8],RSI
            mov QWORD PTR [RDI],RAX
            add RAX,16
            cmp R12,R15
            mov QWORD PTR [R15+280],RAX
            je .L_413288

            add QWORD PTR [R15+56],RSI
            mov EAX,0
            test EBP,EBP
            cmove R15,RAX
.L_4131ee:

            movzx EAX,BYTE PTR [R14]
            add R14,RAX
            movzx EAX,BYTE PTR [R14]
            test AL,AL
            je .L_413290

            cmp RBX,R14
            jbe .L_413290

            add RAX,R14
            cmp RBX,RAX
            jb .L_413290
.L_413212:

            cmp BYTE PTR [R14+32],1
            jne .L_413158

            cmp BYTE PTR [R14+33],1
            ja .L_413158

            jmp .L_4131ee
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413230:

            mov RCX,QWORD PTR [R12+48]
            mov RDX,R12
.L_413238:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_4108a0

            test EAX,EAX
            je .L_4131ee
.L_413249:

            mov EAX,4294967266
            jmp .L_412fbc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413258:

            test R15,R15
            jne .L_413195

            mov QWORD PTR [RAX+272],0
            lea RAX,QWORD PTR [RAX+272]
            mov R15,R12
            mov QWORD PTR [R12+280],RAX
            jmp .L_413195
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413288:

            mov RDX,R15
            jmp .L_413238
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413290:

            mov R12,R15
.L_413293:

            mov R14,RBX
            mov RBX,QWORD PTR [RSP+32]
            sub QWORD PTR [RSP+56],RBX
            jne .L_413113

            mov R15,QWORD PTR [RSP]
            mov RBP,QWORD PTR [RSP+72]
.L_4132af:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_404a20

            mov R12,QWORD PTR [RSP+16]
            mov R8D,DWORD PTR [R12+64]
            mov RBX,QWORD PTR [R12+168]
            test R8D,R8D
            je .L_41374a

            mov RAX,QWORD PTR [R12+56]
            mov RAX,QWORD PTR [RAX]
            cmp QWORD PTR [R12+160],RAX
            jne .L_41374a

            mov QWORD PTR [RSP],R15
            mov QWORD PTR [RSP+8],RBP
.L_4132f6:

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,R13
            call .L_4049d0

            test RAX,RAX
            mov RBP,RAX
            je .L_413b2c

            mov R9,QWORD PTR [R12+56]
            nop
            nop
            nop
            nop
.L_413318:

            mov RSI,QWORD PTR [R9+8]
            mov EDX,DWORD PTR [RSI+64]
            mov ECX,DWORD PTR [RSI+68]
            lea EAX,DWORD PTR [RDX+RCX*1]
            cmp RBX,RAX
            jb .L_413aad

            mov R10D,DWORD PTR [R12+64]
            add RDX,RBP
            add RCX,RDX
            test R10D,R10D
            jle .L_413840

            sub R10D,1
            movsxd RAX,R10D
            mov DWORD PTR [R12+64],R10D
            shl RAX,4
            cmp R10D,1
            movdqu XMM0,XMMWORD PTR [R9+RAX*1]
            movq R15,XMM0
            movups XMMWORD PTR [R9],XMM0
            jle .L_413840

            mov R11D,1
            xor R14D,R14D
            xor EAX,EAX
            jmp .L_4133d6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413380:

            movsxd R14,R8D
            shl R14,4
            mov R14,QWORD PTR [R9+R14*1]
            cmp RDI,R14
            jbe .L_4133ea

            mov RDI,R14
.L_413393:

            cmp R15,RDI
            jbe .L_413840

            shl RAX,4
            movsxd RDI,R8D
            add RAX,R9
            shl RDI,4
            mov R14,QWORD PTR [RAX]
            add RDI,R9
            mov R11,QWORD PTR [RAX+8]
            movdqu XMM0,XMMWORD PTR [RDI]
            movups XMMWORD PTR [RAX],XMM0
            mov QWORD PTR [RDI],R14
            lea R14D,DWORD PTR [R8+R8*1]
            mov QWORD PTR [RDI+8],R11
            movsxd RAX,R8D
            lea R11D,DWORD PTR [R14+1]
            cmp R10D,R11D
            jle .L_413840
.L_4133d6:

            lea R8D,DWORD PTR [R14+2]
            movsxd RDI,R11D
            shl RDI,4
            cmp R10D,R8D
            mov RDI,QWORD PTR [R9+RDI*1]
            jg .L_413380
.L_4133ea:

            mov R8D,R11D
            jmp .L_413393
          .byte 0x90
.L_4133f0:

            mov RDX,QWORD PTR [RAX+8]
            sub DWORD PTR [RDX+32],1
            mov RDX,QWORD PTR [R15+8]
            mov BYTE PTR [RAX+74],0
            mov QWORD PTR [RAX+8],RDX
            cmp BYTE PTR [RDX+75],0
            jne .L_4137f5

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+136]
            mov R15,RAX
            mov QWORD PTR [RSI],RAX
            mov RCX,QWORD PTR [RAX+288]
            and EDX,61440
            test RCX,RCX
            je .L_413480

            lea RDI,QWORD PTR [RAX+288]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413440:

            mov RSI,QWORD PTR [RCX+24]
            test RSI,RSI
            mov QWORD PTR [RAX+288],RSI
            je .L_4138b8
.L_413454:

            mov RSI,QWORD PTR [RBP+136]
            mov QWORD PTR [RCX+16],0
            mov QWORD PTR [RSI],RCX
            add RCX,16
            mov QWORD PTR [RBP+136],RCX
            mov RCX,QWORD PTR [RAX+288]
            test RCX,RCX
            jne .L_413440

            mov R15,RAX
.L_413480:

            xor EAX,EAX
            cmp EDX,32768
            jne .L_412fbc

            nop
            nop
.L_413490:

            mov R12,QWORD PTR [R15+152]
            cmp R12,-1
            je .L_412fbc

            mov ECX,DWORD PTR [RBP+124]
            lea R13,QWORD PTR [RBP+128]
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RBP+128],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RBP+136],R13
            mov QWORD PTR [RSP+88],RAX
            test ECX,ECX
            jle .L_4134ed

            mov RAX,QWORD PTR [RBP+112]
            mov RAX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+152]
            cmp RAX,-1
            je .L_41355d

            cmp R12,RAX
            je .L_41355d
.L_4134ed:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],R15
            xor EAX,EAX
            test R15,R15
            sete AL
            jmp .L_412fbc
.L_413502:

            lea RDX,QWORD PTR [RIP+.L_445257]
            mov ESI,12
            mov RDI,R13
            call .L_432bc0
.L_413516:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_404a20

            mov EAX,4294967266
            jmp .L_412fbc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413530:

            sub RSI,R8
            mov RDI,R13
            call .L_404a20

            test RAX,RAX
            js .L_413742

            mov RAX,QWORD PTR [R15+48]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSI+160],RAX
            mov RAX,QWORD PTR [R15+56]
            jmp .L_4130a7
.L_41355d:

            mov RDX,R12
            xor EBX,EBX
            mov RAX,R15
            mov R14,QWORD PTR [RSP+40]
            jmp .L_4135c3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413570:

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [RAX+16],0
            add EBX,1
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RBP+136],RCX
.L_41358c:

            mov RDI,R14
            call .L_4107c0

            mov EDX,DWORD PTR [RBP+124]
            test EDX,EDX
            jle .L_41368d

            mov RDX,QWORD PTR [RBP+112]
            mov RDX,QWORD PTR [RDX]
            mov RDX,QWORD PTR [RDX+152]
            cmp R12,RDX
            je .L_4135bc

            cmp RDX,-1
            jne .L_41368d
.L_4135bc:

            mov RDX,QWORD PTR [RAX+152]
.L_4135c3:

            cmp RDX,-1
            lea RCX,QWORD PTR [RAX+16]
            jne .L_413570

            mov RDX,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RSP+88],RCX
            jmp .L_41358c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4135e8:

            xor EDX,EDX
            jmp .L_413623

            nop
            nop
            nop
            nop
.L_4135f0:

            cmp RDX,RAX
            je .L_413650
.L_4135f5:

            test RDX,RDX
            cmove RDX,RAX
            cmp R8,QWORD PTR [RAX+48]
            je .L_4133f0

            mov RCX,QWORD PTR [RBP+152]
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RCX],RAX
            add RAX,24
            mov QWORD PTR [RBP+152],RAX
.L_413623:

            mov RAX,QWORD PTR [RBP+144]
            test RAX,RAX
            je .L_4135f0

            mov RCX,QWORD PTR [RAX+24]
            test RCX,RCX
            mov QWORD PTR [RBP+144],RCX
            jne .L_4135f0

            mov RBX,QWORD PTR [RSP+64]
            cmp RDX,RAX
            mov QWORD PTR [RBP+152],RBX
            jne .L_4135f5
.L_413650:

            mov EDX,DWORD PTR [R15+136]
            and EDX,61440
.L_41365d:

            xor EAX,EAX
            cmp EDX,32768
            jne .L_412fbc

            jmp .L_413490
.L_413670:

            mov RDI,R13
            call .L_404a20

            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+224],0
            jmp .L_41306b
.L_41368d:

            test EBX,EBX
            mov R15,RAX
            je .L_4134ed

            cmp QWORD PTR [R15+152],-1
            lea RAX,QWORD PTR [RAX+16]
            je .L_41396a

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [R15+16],0
            add EBX,1
            mov QWORD PTR [RDX],R15
            mov QWORD PTR [RBP+136],RAX
.L_4136c6:

            mov RDX,QWORD PTR [RBP+128]
            mov RCX,QWORD PTR [RSP+80]
            test RDX,RDX
            je .L_413acd

            mov RAX,RDX
            nop
            nop
.L_4136e0:

            mov DWORD PTR [RAX+160],EBX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            jne .L_4136e0

            test RCX,RCX
            je .L_413716
.L_4136f4:

            mov RAX,QWORD PTR [RSP+88]
.L_4136f9:

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RBP+136],RAX
.L_41370a:

            mov RDX,QWORD PTR [RBP+128]
            test RDX,RDX
            je .L_41372d
.L_413716:

            mov RAX,QWORD PTR [RDX+16]
            test RAX,RAX
            mov QWORD PTR [RBP+128],RAX
            jne .L_41372d

            mov QWORD PTR [RBP+136],R13
.L_41372d:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],RDX
            xor EAX,EAX
            test RDX,RDX
            sete AL
            jmp .L_412fbc
.L_413742:

            test EAX,EAX
            jne .L_412fbc
.L_41374a:

            cmp BYTE PTR [R15+72],0
            je .L_413770

            cmp BYTE PTR [R15+73],0
            jne .L_413008

            mov EDX,DWORD PTR [R15+136]
            and EDX,61440
            jmp .L_41365d
          .byte 0x66
          .byte 0x90
.L_413770:

            cmp BYTE PTR [R15+74],0
            je .L_4137a0

            mov RAX,QWORD PTR [RBP+152]
            mov QWORD PTR [R15+24],0
            mov QWORD PTR [RAX],R15
            add R15,24
            mov QWORD PTR [RBP+152],R15
            jmp .L_413008
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4137a0:

            cmp BYTE PTR [R15+75],0
            je .L_413650

            mov RAX,QWORD PTR [R15+8]
            test RAX,RAX
            jne .L_4137cd

            jmp .L_413650
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4137c0:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_413650
.L_4137cd:

            cmp BYTE PTR [RAX+74],0
            je .L_4137c0

            mov RDX,QWORD PTR [RAX+296]
            mov QWORD PTR [R15+24],0
            mov QWORD PTR [RDX],R15
            add R15,24
            mov QWORD PTR [RAX+296],R15
            jmp .L_413008
.L_4137f5:

            mov BYTE PTR [RAX+75],1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413800:

            cmp BYTE PTR [RDX+74],0
            jne .L_4138c4

            mov RDX,QWORD PTR [RDX+8]
            test RDX,RDX
            jne .L_413800

            nop
            nop
            nop
            nop
            nop
.L_413818:

            mov RCX,QWORD PTR [RBP+160]
            lea RDX,QWORD PTR [RIP+.L_445578]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_412fbc
          .byte 0x90
.L_413840:

            mov RDI,R13
            call .L_411c90

            test EAX,EAX
            jne .L_413249

            mov EDI,DWORD PTR [R12+64]
            test EDI,EDI
            je .L_41386f

            mov R9,QWORD PTR [R12+56]
            mov RAX,QWORD PTR [R12+160]
            cmp QWORD PTR [R9],RAX
            je .L_413318
.L_41386f:

            mov RSI,RBX
            mov RDI,R13
            call .L_404a20

            mov RAX,QWORD PTR [R12+160]
            mov ESI,DWORD PTR [R12+64]
            add RAX,RBX
            test ESI,ESI
            mov QWORD PTR [R12+160],RAX
            je .L_4138a4

            mov RDX,QWORD PTR [R12+56]
            cmp RAX,QWORD PTR [RDX]
            je .L_4132f6
.L_4138a4:

            mov R15,QWORD PTR [RSP]
            mov RBP,QWORD PTR [RSP+8]
            jmp .L_41374a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4138b8:

            mov QWORD PTR [RAX+296],RDI
            jmp .L_413454
.L_4138c4:

            mov RCX,QWORD PTR [RDX+296]
            mov QWORD PTR [RAX+24],0
            lea RDI,QWORD PTR [RAX+288]
            mov QWORD PTR [RCX],RAX
            lea RCX,QWORD PTR [RAX+24]
            mov QWORD PTR [RDX+296],RCX
            mov RCX,QWORD PTR [RAX+288]
            test RCX,RCX
            je .L_413008

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413900:

            mov RDX,QWORD PTR [RCX+24]
            test RDX,RDX
            mov QWORD PTR [RAX+288],RDX
            je .L_413961
.L_413910:

            mov RDX,QWORD PTR [RCX+8]
            test RDX,RDX
            jne .L_41392d

            jmp .L_413818
          .byte 0x66
          .byte 0x90
.L_413920:

            mov RDX,QWORD PTR [RDX+8]
            test RDX,RDX
            je .L_413818
.L_41392d:

            cmp BYTE PTR [RDX+74],0
            je .L_413920

            mov RSI,QWORD PTR [RDX+296]
            mov QWORD PTR [RCX+24],0
            mov QWORD PTR [RSI],RCX
            add RCX,24
            mov QWORD PTR [RDX+296],RCX
            mov RCX,QWORD PTR [RAX+288]
            test RCX,RCX
            jne .L_413900

            jmp .L_413008
.L_413961:

            mov QWORD PTR [RAX+296],RDI
            jmp .L_413910
.L_41396a:

            mov RDX,QWORD PTR [RSP+88]
            cmp EBX,1
            mov QWORD PTR [R15+16],0
            mov QWORD PTR [RDX],R15
            mov QWORD PTR [RSP+88],RAX
            jne .L_4136c6

            mov RCX,QWORD PTR [RSP+80]
            test RCX,RCX
            jne .L_4136f9

            jmp .L_41370a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4139a0:

            mov RDX,QWORD PTR [RBP+144]
            test RDX,RDX
            je .L_413a71

            mov RAX,QWORD PTR [RBP+48]
            test RAX,RAX
            je .L_4139e3

            cmp BYTE PTR [RAX+73],0
            je .L_4139e3

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RDX],RAX
            mov RDX,QWORD PTR [RBP+144]
            add RAX,16
            mov QWORD PTR [RBP+136],RAX
.L_4139e3:

            lea RDI,QWORD PTR [RBP+144]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4139f0:

            test RDX,RDX
            je .L_413a71

            mov RCX,QWORD PTR [RDX+24]
            test RCX,RCX
            mov QWORD PTR [RBP+144],RCX
            je .L_413aa1
.L_413a09:

            mov RAX,QWORD PTR [RDX+288]
            lea RSI,QWORD PTR [RDX+288]
            test RAX,RAX
            je .L_413a99

            nop
            nop
            nop
            nop
.L_413a20:

            mov RCX,QWORD PTR [RAX+24]
            test RCX,RCX
            mov QWORD PTR [RDX+288],RCX
            je .L_413a68
.L_413a30:

            mov RCX,QWORD PTR [RBP+136]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RCX],RAX
            add RAX,16
            mov QWORD PTR [RBP+136],RAX
            mov RAX,QWORD PTR [RDX+288]
            test RAX,RAX
            jne .L_413a20

            mov RDX,QWORD PTR [RBP+144]
            jmp .L_4139f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413a68:

            mov QWORD PTR [RDX+296],RSI
            jmp .L_413a30
.L_413a71:

            cmp QWORD PTR [RBP+128],0
            mov EAX,1
            je .L_412fbc

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,RBP
            mov RDI,R13
            call .L_412f70

            jmp .L_412fbc
.L_413a99:

            mov RDX,RCX
            jmp .L_4139f0
.L_413aa1:

            mov QWORD PTR [RBP+152],RDI
            jmp .L_413a09
.L_413aad:

            lea RDX,QWORD PTR [RIP+.L_445272]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_412fbc
.L_413acd:

            test RCX,RCX
            jne .L_4136f4

            jmp .L_41372d
.L_413adb:

            mov RCX,QWORD PTR [R15+168]
            lea RDX,QWORD PTR [RIP+.L_4454e0]
            mov R9,RSI
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_412fbc
.L_413b05:

            mov RCX,QWORD PTR [R15+168]
            lea RDX,QWORD PTR [RIP+.L_445510]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_412fbc
.L_413b2c:

            lea RDX,QWORD PTR [RIP+.L_445538]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_412fbc
.L_413b4c:

            call __stack_chk_fail@PLT
.L_413b51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413b60:

            push R12
            push RBP
            mov RBP,RDX
            push RBX
.L_413b67:

            mov RDX,QWORD PTR [RDX+8]
            mov R12,RDI
            mov RBX,RSI
            test RDX,RDX
            je .L_413b80

            cmp QWORD PTR [RDX+200],0
            jne .L_413be8
.L_413b80:

            mov RDI,QWORD PTR [RBX]
.L_413b83:

            mov RDX,QWORD PTR [RBP+200]
            test RDX,RDX
            je .L_413bc0

            lea RAX,QWORD PTR [RDX+RDI*1]
            cmp RAX,1024
            ja .L_413c18

            mov RSI,QWORD PTR [RBP+192]
            add RDI,R12
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP+200]
            add QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_413bb6:

            pop RBX
.L_413bb7:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413bc0:

            lea RAX,QWORD PTR [RDI+2]
            cmp RAX,1024
            ja .L_413c18

            mov BYTE PTR [R12+RDI*1],0
            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [R12+RAX*1+1],46
            xor EAX,EAX
            add QWORD PTR [RBX],2
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413be8:

            call .L_413b60

            test EAX,EAX
            jne .L_413c18

            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [R12+RAX*1],0
            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [R12+RAX*1+1],47
            mov RAX,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RAX+2]
            mov QWORD PTR [RBX],RDI
            jmp .L_413b83
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413c18:

            mov EAX,4294967295
            jmp .L_413bb6
.L_413c1f:

            nop
.L_413c20:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_413c34:

            mov R8D,DWORD PTR [RDI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            test R8D,R8D
            mov RBX,QWORD PTR [RAX]
            jne .L_413c69

            lea RAX,QWORD PTR [RIP+.L_44528b]
            mov DWORD PTR [RDI+16],262144
            mov QWORD PTR [RDI+24],RAX
.L_413c69:

            cmp QWORD PTR [RBX+160],0
            jne .L_413d30

            mov EDI,DWORD PTR [RBX+4]
            lea R14,QWORD PTR [RBX+188]
            movsxd RSI,DWORD PTR [RBX+188]
            test EDI,EDI
            jne .L_414040

            mov BYTE PTR [RBX+42],0
            mov R15,R14
.L_413c97:

            shl RSI,11
            mov RDI,RBP
            call .L_404a20

            test RAX,RAX
            js .L_414070

            mov ESI,DWORD PTR [R15+4]
            xor EDX,EDX
            mov QWORD PTR [RBX+160],RAX
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_414438

            movzx R13D,BYTE PTR [RBX+42]
            xor ESI,ESI
            mov BYTE PTR [RBX+42],0
            mov RDX,RAX
            mov RDI,RBP
            call .L_4127f0

            test RAX,RAX
            je .L_414148

            cmp R14,R15
            mov BYTE PTR [RBX+42],R13B
            je .L_414158
.L_413cf6:

            mov RCX,QWORD PTR [RAX+48]
            lea RSI,QWORD PTR [RBX+112]
            mov RDX,RAX
            mov RDI,RBP
            call .L_4108a0

            test EAX,EAX
            jne .L_414148

            cmp BYTE PTR [RBX+40],0
            je .L_413d30

            lea RAX,QWORD PTR [RIP+.L_4455f8]
            mov DWORD PTR [RBP+16],262145
            mov QWORD PTR [RBP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413d30:

            mov RDX,RSP
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP],0
            call .L_412f70

            test EAX,EAX
            mov R13D,EAX
            jne .L_414010

            mov R14,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RBX+224]
            cmp QWORD PTR [R14+56],0
            jne .L_414080

            mov RAX,QWORD PTR [RBX+160]
            test RSI,RSI
            mov QWORD PTR [R14+48],RAX
            jne .L_414170
.L_413d7b:

            cmp BYTE PTR [RBX+42],0
            je .L_4140c6
.L_413d85:

            cmp QWORD PTR [RBX+488],0
            je .L_414390
.L_413d93:

            cmp QWORD PTR [RBX+496],0
            je .L_4143c0
.L_413da1:

            cmp QWORD PTR [RBX+512],0
            je .L_414118
.L_413daf:

            mov RDI,QWORD PTR [RBX+496]
            mov RDX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+504]
            mov QWORD PTR [RBX+504],0
            call .L_413b60

            test EAX,EAX
            jne .L_414417

            mov RCX,QWORD PTR [RBX+488]
            mov RDX,QWORD PTR [RBX+504]
            mov RDI,R12
            mov RSI,QWORD PTR [RBX+496]
            call .L_4393f0

            test EAX,EAX
            mov R13D,EAX
            je .L_413e36

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_414459

            mov RDI,QWORD PTR [RBX+488]
            mov R13D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_413e36:

            mov RDX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RDX+56]
            mov QWORD PTR [RBX+208],0
            mov QWORD PTR [RBX+216],RAX
            add RAX,QWORD PTR [RDX+48]
            cmp RAX,QWORD PTR [RBX+176]
            ja .L_4143e0

            mov ESI,DWORD PTR [RDX+136]
            mov RDI,R12
            call .L_4392b0

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+140]
            call .L_439670

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+144]
            call .L_438cc0

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+160]
            call .L_439350

            mov RAX,QWORD PTR [RSP]
            mov ECX,DWORD PTR [RAX+88]
            test ECX,ECX
            jne .L_414100

            mov RDI,R12
            call .L_439020
.L_413ebc:

            mov RAX,QWORD PTR [RSP]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+104]
            call .L_4392c0

            mov RAX,QWORD PTR [RSP]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+120]
            call .L_439050

            mov RAX,QWORD PTR [RSP]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+112]
            call .L_438f30

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+128]
            call .L_439430

            mov RSI,QWORD PTR [RBX+216]
            mov RDI,R12
            call .L_439490

            mov RDX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RDX+216]
            test RSI,RSI
            je .L_413f30

            mov RDI,R12
            call .L_439570

            mov RDX,QWORD PTR [RSP]
.L_413f30:

            mov RAX,QWORD PTR [RDX+152]
            cmp RAX,-1
            je .L_413f47

            cmp RAX,QWORD PTR [RBX+72]
            je .L_4142b0
.L_413f47:

            mov EAX,DWORD PTR [RDX+136]
            and EAX,61440
            cmp EAX,16384
            je .L_413f6a

            mov RSI,QWORD PTR [RDX+48]
            cmp RSI,QWORD PTR [RBX+160]
            jb .L_414320
.L_413f6a:

            mov EAX,DWORD PTR [RDX+244]
            test EAX,EAX
            mov DWORD PTR [RBX+232],EAX
            jne .L_414250
.L_413f7e:

            cmp BYTE PTR [RBX+42],0
            mov RAX,QWORD PTR [RDX+152]
            mov QWORD PTR [RBX+72],RAX
            jne .L_414220

            mov RBP,QWORD PTR [RBX+16]
            xor EDX,EDX
            mov QWORD PTR [RBX+88],0
            test RBP,RBP
            je .L_413fb1

            mov RDI,RBP
            call strlen@PLT

            mov RDX,RAX
.L_413fb1:

            lea RDI,QWORD PTR [RBX+80]
            mov RSI,RBP
            call .L_431240
.L_413fbd:

            mov RAX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RAX+272]
            test RAX,RAX
            mov QWORD PTR [RBX+480],RAX
            je .L_413fdf

            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+216],RAX
.L_413fdf:

            mov RDI,R12
            call .L_437b90

            cmp EAX,16384
            jne .L_414010

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+32]
            add ESI,2
            call .L_439350

            mov QWORD PTR [RBX+216],0
            nop
            nop
            nop
            nop
            nop
.L_414010:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_4144a8

            add RSP,24
.L_41402b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414040:

            cmp BYTE PTR [RBX+42],0
            je .L_4144b9

            mov EAX,DWORD PTR [RBX+196]
            mov R15,R14
            cmp EAX,ESI
            jge .L_413c97

            lea R15,QWORD PTR [RBX+196]
            movsxd RSI,EAX
            jmp .L_413c97
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414070:

            test EAX,EAX
            mov R13D,EAX
            jne .L_414010

            jmp .L_413d30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414080:

            test RSI,RSI
            jne .L_414170

            mov RAX,QWORD PTR [RBX+160]
            mov RSI,QWORD PTR [R14+48]
            cmp RAX,RSI
            jae .L_413d7b
.L_41409d:

            sub RSI,RAX
            mov RDI,RBP
            call .L_404a20

            test RAX,RAX
            js .L_414378

            cmp BYTE PTR [RBX+42],0
            mov RAX,QWORD PTR [R14+48]
            mov QWORD PTR [RBX+160],RAX
            jne .L_413d85
.L_4140c6:

            mov RSI,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+16]
            xor EDX,EDX
            call .L_411300

            test RAX,RAX
            je .L_414417

            mov QWORD PTR [RBX+24],0
            mov RSI,RAX
            mov RDI,R12
            call .L_439360

            jmp .L_413e36
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414100:

            mov RSI,QWORD PTR [RAX+96]
            xor EDX,EDX
            mov RDI,R12
            call .L_438fc0

            jmp .L_413ebc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414118:

            mov EDI,1024
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+512],RAX
            jne .L_413daf
.L_414132:

            lea RDX,QWORD PTR [RIP+.L_44529c]
.L_414139:

            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_414148:

            mov R13D,4294967266
            jmp .L_414010
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414158:

            movzx EDX,BYTE PTR [RBX+40]
            test DL,DL
            je .L_4141a0

            test R13B,R13B
            je .L_4141a0

            mov BYTE PTR [RBX+42],0
            jmp .L_413cf6
          .byte 0x66
          .byte 0x90
.L_414170:

            mov RDI,RBP
            call .L_404a20

            mov RAX,QWORD PTR [RBX+160]
            mov RSI,QWORD PTR [R14+48]
            mov QWORD PTR [RBX+224],0
            cmp RAX,RSI
            jb .L_41409d

            jmp .L_413d7b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4141a0:

            test DL,DL
            jne .L_413cf6

            test R13B,R13B
            je .L_413cf6

            movsxd RSI,DWORD PTR [RBX+196]
            mov RDI,RBP
            shl RSI,11
            sub RSI,QWORD PTR [RBX+160]
            call .L_404a20

            test RAX,RAX
            js .L_414070

            add QWORD PTR [RBX+160],RAX
            mov ESI,DWORD PTR [RBX+200]
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_414438

            xor ESI,ESI
            mov BYTE PTR [RBX+42],0
            mov RDX,RAX
            mov RDI,RBP
            call .L_4127f0

            test RAX,RAX
            je .L_414148

            mov BYTE PTR [RBX+42],R13B
            jmp .L_413cf6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414220:

            mov RDI,QWORD PTR [RBX+512]
            mov RSI,QWORD PTR [RBX+496]
            mov RDX,QWORD PTR [RBX+504]
            call memcpy@PLT

            mov RAX,QWORD PTR [RBX+504]
            mov QWORD PTR [RBX+520],RAX
            jmp .L_413fbd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414250:

            mov EAX,DWORD PTR [RDX+248]
            mov RSI,QWORD PTR [RDX+256]
            mov RDI,R12
            mov DWORD PTR [RBX+248],0
            mov DWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+296],0
            mov DWORD PTR [RBX+304],0
            mov DWORD PTR [RBX+236],EAX
            mov QWORD PTR [RBX+240],RSI
            mov QWORD PTR [RBX+336],0
            call .L_439490

            mov RDX,QWORD PTR [RSP]
            jmp .L_413f7e
          .byte 0x90
.L_4142b0:

            cmp BYTE PTR [RBX+42],0
            je .L_414350

            mov RCX,QWORD PTR [RBX+488]
            mov RDX,QWORD PTR [RBX+520]
            mov RDI,R12
            mov RSI,QWORD PTR [RBX+512]
            call .L_438ef0

            test EAX,EAX
            je .L_41435c

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4144ad

            mov RDI,QWORD PTR [RBX+488]
            mov R13D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_445640]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_41435c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414320:

            xor EDX,EDX
            mov RDI,RBP
            call .L_404dc0

            mov RDX,QWORD PTR [RSP]
            mov R9,QWORD PTR [RDX+48]
            cmp R9,RAX
            jne .L_414465

            mov QWORD PTR [RBX+160],R9
            jmp .L_413f6a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414350:

            mov RSI,QWORD PTR [RBX+80]
            mov RDI,R12
            call .L_438db0
.L_41435c:

            mov RDI,R12
            call .L_4394b0

            mov QWORD PTR [RBX+216],0
            jmp .L_414010
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414378:

            test EAX,EAX
            je .L_413d7b

            mov R13D,EAX
            jmp .L_414010
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414390:

            lea RSI,QWORD PTR [RIP+.L_445293]
            mov EDX,1
            mov RDI,RBP
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBX+488],RAX
            jne .L_413d93

            jmp .L_414148
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4143c0:

            mov EDI,1024
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+496],RAX
            jne .L_413da1

            jmp .L_414132
          .byte 0x90
.L_4143e0:

            mov RDI,R12
            mov R13D,4294967276
            call .L_438170

            lea RDX,QWORD PTR [RIP+.L_445620]
            mov RCX,RAX
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            mov QWORD PTR [RBX+216],0
            jmp .L_414010
.L_414417:

            lea RDX,QWORD PTR [RIP+.L_4452a6]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_414010
.L_414438:

            lea RDX,QWORD PTR [RIP+.L_445538]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_414010
.L_414459:

            lea RDX,QWORD PTR [RIP+.L_4452bb]
            jmp .L_414139
.L_414465:

            mov RCX,QWORD PTR [RDX+152]
            mov R8,QWORD PTR [RBX+16]
            sub RSP,8
.L_414474:

            lea RDX,QWORD PTR [RIP+.L_445678]
            push QWORD PTR [RBX+160]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            mov R13D,4294967276
            call .L_432bc0

            mov QWORD PTR [RBX+216],0
            pop RAX
            pop RDX
            jmp .L_414010
.L_4144a8:

            call __stack_chk_fail@PLT
.L_4144ad:

            lea RDX,QWORD PTR [RIP+.L_4452d2]
            jmp .L_414139
.L_4144b9:

            mov R15,R14
            jmp .L_413c97
.L_4144c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4144d0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4456a8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_436df0

            cmp EAX,-30
            je .L_4145b6

            mov ESI,2576
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4145bd

            mov QWORD PTR [RAX+128],0
            lea RAX,QWORD PTR [RAX+128]
            push 0
            push 0
.L_414529:

            lea R9,QWORD PTR [RIP+.L_413c20]
            lea R8,QWORD PTR [RIP+.L_4111f0]
            mov QWORD PTR [RBX+136],RAX
            lea RAX,QWORD PTR [RBX+144]
            lea RCX,QWORD PTR [RIP+.L_4115b0]
            lea RDX,QWORD PTR [RIP+.L_445305]
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RBX+152],RAX
            movabs RAX,6817879648
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RIP+.L_4113a0]
            mov DWORD PTR [RBX+8],1
            push RAX
.L_414587:

            lea RAX,QWORD PTR [RIP+.L_4107b0]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4109f0]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_4145b6

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_4145b6:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_4145bd:

            lea RDX,QWORD PTR [RIP+.L_4452e9]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4145b6
.L_4145da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4145e0:

            movzx ECX,BYTE PTR [RDI+5]
            lea EAX,DWORD PTR [RCX-45]
            cmp AL,77
            ja .L_414670

            lea RDX,QWORD PTR [RIP+.L_4457c0]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414608:

            mov EAX,1
.L_41460d:

            ret 
          .byte 0x90
.L_414610:

            cmp BYTE PTR [RDI],0
            mov EAX,4
            je .L_41460d

            cmp BYTE PTR [RDI+2],45
            jne .L_41460d

            cmp BYTE PTR [RDI+3],108
            jne .L_41460d

            cmp BYTE PTR [RDI+6],45
            jne .L_41460d

            movzx EDX,BYTE PTR [RDI+4]
            cmp DL,104
            je .L_414676

            cmp DL,122
            jne .L_41460d

            cmp BYTE PTR [RDI+20],0
            jne .L_41460d

            lea EDX,DWORD PTR [RCX-52]
            cmp DL,1
            jbe .L_41464d

            cmp CL,115
            jne .L_41460d
.L_41464d:

            xor EAX,EAX
            ret 
.L_414650:

            mov EAX,3
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414660:

            mov EAX,2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414670:

            mov EAX,4
            ret 
.L_414676:

            cmp CL,115
            je .L_41460d

            movzx EDX,BYTE PTR [RDI+20]
            xor EAX,EAX
            test DL,DL
            je .L_41460d

            cmp DL,3
            mov EAX,4
            ja .L_41460d

            xor EAX,EAX
            cmp BYTE PTR [RDI+19],32
            setne AL
            shl RAX,2
            ret 
.L_4146a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4146b0:

            mov R9,QWORD PTR [RDI+120]
            mov EAX,DWORD PTR [RDI+92]
            mov ECX,DWORD PTR [RDI+4]
.L_4146ba:

            cmp ECX,EDX
            jg .L_4146e4
.L_4146be:

            sub EAX,1
            sub EDX,ECX
            lea R8D,DWORD PTR [RAX+1]
            test R8D,R8D
            jle .L_414700

            cmp DWORD PTR [RDI+100],EDX
            jle .L_414700

            movsxd RDX,EDX
            bt ESI,EAX
            lea RDX,QWORD PTR [R9+RDX*4]
            jae .L_4146f0

            movzx EDX,WORD PTR [RDX]
            cmp ECX,EDX
            jle .L_4146be
.L_4146e4:

            mov EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4146f0:

            movzx EDX,WORD PTR [RDX+2]
            jmp .L_4146ba
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414700:

            xor EAX,EAX
            ret 
.L_414703:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414710:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov EAX,1
            cmp BYTE PTR [RBX+293],0
            jne .L_414743

            test BYTE PTR [RBX+64],8
            je .L_41473c

            movzx ECX,WORD PTR [RBX+24]
            cmp WORD PTR [RBX+194],CX
            jne .L_414748
.L_41473c:

            mov BYTE PTR [RBX+293],1
.L_414743:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414748:

            lea RDX,QWORD PTR [RIP+.L_445d68]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,4294967276
            mov BYTE PTR [RBX+293],1
            jmp .L_414743
.L_414769:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414770:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_4147c8
.L_41478a:

            xor R12D,R12D
            cmp BYTE PTR [RBX+293],0
            je .L_4147a0
.L_414796:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4147a0:

            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_404a20

            test RAX,RAX
            js .L_4147d7

            mov EAX,257
            mov WORD PTR [RBX+292],AX
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4147c8:

            call .L_404a20

            mov QWORD PTR [RBX+16],0
            jmp .L_41478a
.L_4147d7:

            mov R12D,4294967266
            jmp .L_414796
.L_4147df:

            nop
.L_4147e0:

            push R15
            push R14
            mov EDX,32768
            push R13
            push R12
            xor ESI,ESI
            push RBP
            push RBX
            mov RBX,RDI
            xor R9D,R9D
            sub RSP,184
.L_4147fe:

            lea R8,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+96]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            mov EAX,1
.L_414820:

            mov ECX,DWORD PTR [RBX+RAX*4+12]
            mov DWORD PTR [R8+RAX*4],ESI
            mov DWORD PTR [RDI+RAX*4],EDX
            test ECX,ECX
            je .L_414837

            imul ECX,EDX
            mov R9D,EAX
            add ESI,ECX
.L_414837:

            add RAX,1
            sar EDX,1
            cmp RAX,17
            jne .L_414820

            cmp ESI,65536
            je .L_414880
.L_41484b:

            xor EAX,EAX
.L_41484d:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            jne .L_414bf0

            add RSP,184
.L_41486b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414880:

            cmp DWORD PTR [RBX+96],R9D
            jl .L_41484b

            cmp R9D,15
            mov DWORD PTR [RBX+88],R9D
            jg .L_4148c0

            mov ECX,16
            sub ECX,R9D
            test R9D,R9D
            je .L_4148c0

            lea EAX,DWORD PTR [R9-1]
            lea RDX,QWORD PTR [RAX*4+8]
            mov EAX,4
            nop
            nop
.L_4148b0:

            sar DWORD PTR [R8+RAX*1],CL
            sar DWORD PTR [RDI+RAX*1],CL
            add RAX,4
            cmp RAX,RDX
            jne .L_4148b0
.L_4148c0:

            xor R12D,R12D
            cmp R9D,10
            mov R14,QWORD PTR [RBX+112]
            jg .L_414a77
.L_4148d1:

            mov EBP,DWORD PTR [RBX+4]
            mov DWORD PTR [RBX+92],R12D
            mov R15,QWORD PTR [RBX+80]
            mov DWORD PTR [RBX+100],0
            test EBP,EBP
            jle .L_414a6d

            lea EAX,DWORD PTR [RBP-1]
            lea ECX,DWORD PTR [R12-1]
            mov R8D,1
            mov R13,R15
            lea R9,QWORD PTR [R15+RAX*1+1]
            shl R8D,CL
.L_414904:

            movzx EAX,BYTE PTR [R13]
            test AL,AL
            je .L_414a60

            movsxd RDX,EAX
            cmp EAX,10
            movsxd RDI,DWORD PTR [RSP+RDX*4+16]
            mov ECX,DWORD PTR [RSP+RDX*4+96]
            lea ESI,DWORD PTR [RDI+RCX*1]
            mov DWORD PTR [RSP+RDX*4+16],ESI
            jle .L_4149e8

            mov ECX,R12D
            mov EDX,EDI
            sar EDX,CL
            movsxd RDX,EDX
            lea RCX,QWORD PTR [R14+RDX*2]
            movzx EDX,WORD PTR [RCX]
            test DX,DX
            jne .L_414b0c

            movsxd RDX,DWORD PTR [RBX+100]
            mov R10,QWORD PTR [RBX+120]
            lea ESI,DWORD PTR [RDX+RBP*1]
            mov WORD PTR [RCX],SI
            lea ESI,DWORD PTR [RDX+1]
            cmp ESI,DWORD PTR [RBX+104]
            lea RCX,QWORD PTR [R10+RDX*4]
            mov DWORD PTR [RBX+100],ESI
            jg .L_41484b

            mov DWORD PTR [RCX],0
.L_41496e:

            sub EAX,11
            mov EDX,R8D
            jne .L_4149bf

            jmp .L_414aed
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414980:

            movzx ESI,WORD PTR [RCX]
            cmp ESI,EBP
            jge .L_414ad8

            movsxd RSI,DWORD PTR [RBX+100]
            lea R11D,DWORD PTR [RSI+RBP*1]
            mov WORD PTR [RCX],R11W
.L_414997:

            lea R11D,DWORD PTR [RSI+1]
            cmp R11D,DWORD PTR [RBX+104]
            lea RCX,QWORD PTR [R10+RSI*4]
            mov DWORD PTR [RBX+100],R11D
            jg .L_41484b

            shr DX,1
            sub EAX,1
            mov DWORD PTR [RCX],0
            je .L_414aed
.L_4149bf:

            movzx ESI,DX
            test ESI,EDI
            jne .L_414980

            movzx ESI,WORD PTR [RCX+2]
            cmp ESI,EBP
            jge .L_414ad8

            movsxd RSI,DWORD PTR [RBX+100]
            lea R11D,DWORD PTR [RSI+RBP*1]
            mov WORD PTR [RCX+2],R11W
            jmp .L_414997
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4149e8:

            cmp ESI,1024
            jg .L_41484b

            cmp ECX,7
            lea RDI,QWORD PTR [R14+RDI*2]
            jle .L_414b4d

            lea EDX,DWORD PTR [RCX-8]
            mov EAX,R13D
            sub EAX,R15D
            movsxd R10,EDX
            add R10,R10
            cmp EDX,7
            lea RSI,QWORD PTR [RDI+R10*1]
            mov WORD PTR [RSI],AX
            mov WORD PTR [RSI+2],AX
            mov WORD PTR [RSI+4],AX
            mov WORD PTR [RSI+6],AX
            mov WORD PTR [RSI+8],AX
            mov WORD PTR [RSI+10],AX
            mov WORD PTR [RSI+12],AX
            mov WORD PTR [RSI+14],AX
            jg .L_414b8d
.L_414a3c:

            test EDX,EDX
            je .L_414a60

            movsxd RDX,EDX
            mov QWORD PTR [RSP+8],R9
            mov DWORD PTR [RSP+4],R8D
            add RDX,RDX
            call memcpy@PLT

            mov R8D,DWORD PTR [RSP+4]
            mov R9,QWORD PTR [RSP+8]
            nop
.L_414a60:

            add R13,1
            cmp R9,R13
            jne .L_414904
.L_414a6d:

            mov EAX,1
            jmp .L_41484d
.L_414a77:

            lea R12D,DWORD PTR [R9-10]
            mov EAX,4
.L_414a80:

            mov ECX,R12D
            sar DWORD PTR [R8+RAX*1],CL
            sar DWORD PTR [RDI+RAX*1],CL
            add RAX,4
            cmp RAX,44
            jne .L_414a80

            lea RDX,QWORD PTR [R14+2048]
            mov EAX,DWORD PTR [RSP+136]
            imul EAX,DWORD PTR [RBX+52]
            add EAX,DWORD PTR [RSP+56]
            lea RAX,QWORD PTR [R14+RAX*2]
            cmp RAX,RDX
            jae .L_4148d1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ac0:

            add RAX,2
            xor ECX,ECX
            cmp RAX,RDX
            mov WORD PTR [RAX-2],CX
            jb .L_414ac0

            jmp .L_4148d1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414ad8:

            sub ESI,EBP
            shr DX,1
            sub EAX,1
            movsxd RSI,ESI
            lea RCX,QWORD PTR [R10+RSI*4]
            jne .L_4149bf
.L_414aed:

            movzx EDX,DX
            test EDX,EDI
            je .L_414b33

            cmp WORD PTR [RCX],0
            jne .L_41484b

            mov EAX,R13D
            sub EAX,R15D
            mov WORD PTR [RCX],AX
            jmp .L_414a60
.L_414b0c:

            cmp EDX,EBP
            jl .L_41484b

            mov ECX,DWORD PTR [RBX+100]
            add ECX,EBP
            cmp EDX,ECX
            jge .L_41484b

            mov R10,QWORD PTR [RBX+120]
            sub EDX,EBP
            movsxd RDX,EDX
            lea RCX,QWORD PTR [R10+RDX*4]
            jmp .L_41496e
.L_414b33:

            cmp WORD PTR [RCX+2],0
            jne .L_41484b

            mov EAX,R13D
            sub EAX,R15D
            mov WORD PTR [RCX+2],AX
            jmp .L_414a60
.L_414b4d:

            mov EDX,R13D
            movsxd RAX,ECX
            sub EDX,R15D
            cmp ECX,1
            jle .L_414b71
.L_414b5b:

            mov WORD PTR [RDI+RAX*2-2],DX
            mov WORD PTR [RDI+RAX*2-4],DX
            sub RAX,2
            cmp EAX,1
            jg .L_414b5b

            and ECX,1
.L_414b71:

            test ECX,ECX
            je .L_414a60

            lea EAX,DWORD PTR [RCX-1]
            mov EDX,R13D
            sub EDX,R15D
            cdqe 
            mov WORD PTR [RDI+RAX*2],DX
            jmp .L_414a60
.L_414b8d:

            lea EDX,DWORD PTR [RCX-16]
            lea RAX,QWORD PTR [RDI+R10*1-16]
            movdqu XMM0,XMMWORD PTR [RSI]
            cmp EDX,15
            movups XMMWORD PTR [RAX],XMM0
            jle .L_414be8

            lea EDX,DWORD PTR [RCX-32]
            lea RSI,QWORD PTR [RDI+R10*1-48]
            lea RCX,QWORD PTR [RDI+R10*1-80]
            mov R11D,EDX
            shr R11D,4
            mov R10D,R11D
            shl R10,5
            sub RCX,R10
.L_414bbf:

            movdqu XMM0,XMMWORD PTR [RAX]
            sub RSI,32
            movups XMMWORD PTR [RSI+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RSI+48],XMM0
            cmp RCX,RSI
            jne .L_414bbf

            shl R11D,4
            mov RSI,RAX
            sub EDX,R11D
            jmp .L_414a3c
.L_414be8:

            mov RSI,RAX
            jmp .L_414a3c
.L_414bf0:

            call __stack_chk_fail@PLT
.L_414bf5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414c00:

            mov ECX,64
            sub ECX,DWORD PTR [RDX+8]
.L_414c08:

            mov EAX,DWORD PTR [RSI]
            mov R8D,ECX
            sar R8D,3
            cmp R8D,EAX
            jg .L_414c50

            cmp R8D,6
            je .L_414d08

            jle .L_414c80

            cmp R8D,7
            je .L_414c90

            cmp R8D,8
            jne .L_414c50

            mov RCX,QWORD PTR [RDI]
            sub EAX,8
            mov R8,QWORD PTR [RCX]
            add RCX,8
            bswap R8
            mov QWORD PTR [RDX],R8
            mov QWORD PTR [RDI],RCX
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            add DWORD PTR [RDX+8],64
            ret 
.L_414c50:

            test EAX,EAX
            je .L_414c8a

            mov R8,QWORD PTR [RDI]
            mov R9,QWORD PTR [RDX]
            sub EAX,1
            sub ECX,8
            lea R10,QWORD PTR [R8+1]
            shl R9,8
            mov QWORD PTR [RDI],R10
            movzx R8D,BYTE PTR [R8]
            or R8,R9
            mov QWORD PTR [RDX],R8
            mov DWORD PTR [RSI],EAX
            add DWORD PTR [RDX+8],8
            jmp .L_414c08
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414c80:

            test R8D,R8D
            jne .L_414c50

            mov EAX,1
.L_414c8a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414c90:

            mov R8,QWORD PTR [RDI]
            sub EAX,7
            movzx ECX,BYTE PTR [R8]
            movzx R9D,BYTE PTR [R8+1]
            add R8,7
            shl R9,40
            shl RCX,48
            or RCX,R9
            movzx R9D,BYTE PTR [R8-1]
            or RCX,R9
            movzx R9D,BYTE PTR [R8-5]
            shl R9,32
            or RCX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,24
            or RCX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,16
            or RCX,R9
            movzx R9D,BYTE PTR [R8-2]
            shl R9D,8
            or RCX,R9
            mov R9,QWORD PTR [RDX]
            shl R9,56
            or RCX,R9
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDI],R8
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            add DWORD PTR [RDX+8],56
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414d08:

            mov R8,QWORD PTR [RDI]
            sub EAX,6
            movzx ECX,BYTE PTR [R8]
            movzx R9D,BYTE PTR [R8+1]
            add R8,6
            shl R9,32
            shl RCX,40
            or RCX,R9
            movzx R9D,BYTE PTR [R8-1]
            or RCX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,24
            or RCX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,16
            or RCX,R9
            movzx R9D,BYTE PTR [R8-2]
            shl R9D,8
            or RCX,R9
            mov R9,QWORD PTR [RDX]
            shl R9,48
            or RCX,R9
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDI],R8
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            add DWORD PTR [RDX+8],48
            ret 
.L_414d6e:

            nop
            nop
.L_414d70:

            cmp ESI,EDX
            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_414d7c:

            mov R13,QWORD PTR [RDI+48]
            jge .L_414e8c

            movsxd R15,ESI
            lea RBP,QWORD PTR [R13+40]
            mov R11D,EDX
            mov R14,R15
            mov RBX,RDI
            lea R12,QWORD PTR [RIP+.L_445940]
            jmp .L_414dc8
          .byte 0x90
.L_414da0:

            movzx EAX,AX
            mov DWORD PTR [R13+48],ECX
.L_414da7:

            mov RDX,QWORD PTR [R13+264]
            add R14D,1
            mov BYTE PTR [RDX+R15*1],AL
            add R15,1
            add DWORD PTR [R13+RAX*4+196],1
            cmp R11D,R14D
            je .L_414e2c
.L_414dc8:

            mov EDX,DWORD PTR [R13+48]
            cmp EDX,2
            jle .L_414e10
.L_414dd1:

            mov RSI,QWORD PTR [R13+40]
            lea ECX,DWORD PTR [RDX-3]
            mov RAX,RSI
            shr RAX,CL
            and EAX,7
            cmp AX,7
            jne .L_414da0

            cmp EDX,12
            jle .L_414e40
.L_414dec:

            lea ECX,DWORD PTR [RDX-13]
            shr RSI,CL
            and ESI,1023
            movsx RAX,BYTE PTR [R12+RSI*1]
            test EAX,EAX
            je .L_414e78

            lea ECX,DWORD PTR [RAX-3]
            sub EDX,ECX
            mov DWORD PTR [R13+48],EDX
            jmp .L_414da7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414e10:

            lea RSI,QWORD PTR [RBX+8]
            mov RDX,RBP
            mov RDI,RBX
            call .L_414c00

            test EAX,EAX
            mov EDX,DWORD PTR [R13+48]
            jne .L_414dd1

            cmp EDX,2
            jg .L_414dd1
.L_414e2c:

            pop RBX
.L_414e2d:

            mov EAX,R14D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414e40:

            lea RSI,QWORD PTR [RBX+8]
            mov RDX,RBP
            mov RDI,RBX
            call .L_414c00

            test EAX,EAX
            je .L_414e60

            mov RSI,QWORD PTR [R13+40]
            mov EDX,DWORD PTR [R13+48]
            jmp .L_414dec
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414e60:

            mov EDX,DWORD PTR [R13+48]
            cmp EDX,12
            jle .L_414e2c

            mov RSI,QWORD PTR [R13+40]
            jmp .L_414dec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414e78:

            mov R14D,4294967295
            pop RBX
            mov EAX,R14D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414e8c:

            mov R14D,ESI
            jmp .L_414e2c
.L_414e91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ea0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_414eaa:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,30
            jg .L_414fa0

            xor EDX,EDX
            mov ESI,22
            mov RBP,RDI
            call .L_4049d0

            test RAX,RAX
            mov RSI,RAX
            je .L_414fa0

            mov RDI,RAX
            call .L_4145e0

            test RAX,RAX
            mov EDX,30
            je .L_414ef7

            xor EDX,EDX
            cmp BYTE PTR [RSI],77
            je .L_414f20
.L_414ef7:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_414fc7

            add RSP,24
.L_414f11:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414f20:

            cmp BYTE PTR [RSI+1],90
            jne .L_414ef7

            mov R12D,4096
            xor EBX,EBX
            mov R13,RSP
.L_414f31:

            lea RSI,QWORD PTR [RBX+R12*1]
            mov RDX,R13
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            mov R9,RAX
            je .L_414f88

            mov R8,QWORD PTR [RSP]
            add RBX,RAX
            add R8,RAX
            lea RAX,QWORD PTR [RBX+22]
            cmp R8,RAX
            ja .L_414f6c

            jmp .L_414fb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414f60:

            add RBX,RAX
            lea RAX,QWORD PTR [RBX+22]
            cmp R8,RAX
            jbe .L_414fb0
.L_414f6c:

            mov RDI,RBX
            call .L_4145e0

            test RAX,RAX
            jne .L_414f60

            mov EDX,30
            jmp .L_414ef7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414f88:

            sar R12,1
            cmp R12,24
            jg .L_414f31

            xor EDX,EDX
            jmp .L_414ef7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414fa0:

            mov EDX,4294967295
            jmp .L_414ef7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414fb0:

            sub RBX,R9
            cmp RBX,20479
            jle .L_414f31

            xor EDX,EDX
            jmp .L_414ef7
.L_414fc7:

            call __stack_chk_fail@PLT
.L_414fcc:

            nop
            nop
            nop
            nop
.L_414fd0:

            test SIL,1
            mov EAX,EDI
            je .L_414ff6

            xor DIL,BYTE PTR [RSI]
            lea RCX,QWORD PTR [RIP+.L_65b7c0]
            shr AX,8
            sub RDX,1
            add RSI,1
            movzx EDI,DIL
            xor AX,WORD PTR [RCX+RDI*2]
.L_414ff6:

            cmp RDX,7
            jbe .L_41507b

            lea RCX,QWORD PTR [RDX-8]
            shr RCX,3
            lea RDI,QWORD PTR [RSI+RCX*8+8]
            lea RCX,QWORD PTR [RIP+.L_65b7c0]
.L_415010:

            xor AX,WORD PTR [RSI]
            add RSI,8
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            xor AX,WORD PTR [RSI-6]
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            xor AX,WORD PTR [RSI-4]
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            xor AX,WORD PTR [RSI-2]
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            cmp RSI,RDI
            jne .L_415010

            and EDX,7
.L_41507b:

            test RDX,RDX
            je .L_4150ab

            lea RCX,QWORD PTR [RIP+.L_65b7c0]
            add RDX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
.L_415090:

            add RSI,1
            mov EDI,EAX
            xor AL,BYTE PTR [RSI-1]
            shr DI,8
            movzx EAX,AL
            xor DI,WORD PTR [RCX+RAX*2]
            cmp RSI,RDX
            mov EAX,EDI
            jne .L_415090
.L_4150ab:

            ret 
.L_4150ad:

            nop
            nop
            nop
.L_4150b0:

            sub RSP,72
.L_4150b4:

            movzx EDX,WORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI+2]
            pxor XMM0,XMM0
            mov RDI,RSP
            movups XMMWORD PTR [RSP+24],XMM0
            mov ECX,EAX
            mov ESI,EAX
            sar EAX,5
            and EAX,15
            sar ESI,9
            and ECX,31
            sub EAX,1
            add ESI,80
            mov DWORD PTR [RSP+16],EAX
            mov EAX,EDX
            mov DWORD PTR [RSP+12],ECX
            sar EAX,11
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+32],4294967295
            mov DWORD PTR [RSP+8],EAX
            mov EAX,EDX
            add EDX,EDX
            movups XMMWORD PTR [RDI+40],XMM0
            sar EAX,5
            and EDX,62
            and EAX,63
            mov DWORD PTR [RSP+4],EAX
            mov DWORD PTR [RSP],EDX
            call mktime@PLT

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41513c

            add RSP,72
.L_41513b:

            ret 
.L_41513c:

            call __stack_chk_fail@PLT
.L_415141:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415150:

            push RBP
            push RBX
            mov RAX,RDI
            sub RSP,8
.L_415159:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov RBP,QWORD PTR [RCX]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_4151d0

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_4151b0

            cmp BYTE PTR [RDX],0
            je .L_4151b0

            xor EDX,EDX
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBP+208],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_4151a7:

            add RSP,8
.L_4151ab:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_4151b0:

            lea RDX,QWORD PTR [RIP+.L_445eb8]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_432bc0

            jmp .L_4151a7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4151d0:

            mov EBX,4294967276
            jmp .L_4151a7
.L_4151d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4151e0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            cmp QWORD PTR [RDI+80],0
            je .L_415238
.L_4151f3:

            cmp QWORD PTR [RBX+112],0
            je .L_415218
.L_4151fa:

            cmp QWORD PTR [RBX+120],0
            je .L_415250
.L_415201:

            mov DWORD PTR [RBX],EBP
            mov DWORD PTR [RBX+96],16
            xor EAX,EAX
.L_41520c:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415218:

            mov EDI,2048
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+112],RAX
            jne .L_4151fa
.L_41522b:

            mov EAX,4294967266
            jmp .L_41520c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415238:

            mov RDI,RSI
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+80],RAX
            jne .L_4151f3

            jmp .L_41522b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415250:

            mov DWORD PTR [RBX+104],1024
            mov EDI,4096
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+120],RAX
            jne .L_415201

            jmp .L_41522b
.L_41526c:

            nop
            nop
            nop
            nop
.L_415270:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_415277:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+408]
            test RAX,RAX
            je .L_415309

            mov RDI,QWORD PTR [RAX+16]
            call free@PLT

            mov R12,QWORD PTR [RBX+408]
            mov RDI,QWORD PTR [R12+136]
            call free@PLT

            mov RDI,QWORD PTR [R12+168]
            call free@PLT

            mov RDI,QWORD PTR [R12+176]
            call free@PLT

            mov R12,QWORD PTR [RBX+408]
            mov RDI,QWORD PTR [R12+264]
            call free@PLT

            mov RDI,QWORD PTR [R12+296]
            call free@PLT

            mov RDI,QWORD PTR [R12+304]
            call free@PLT

            mov RDI,QWORD PTR [RBX+408]
            call free@PLT

            mov QWORD PTR [RBX+408],0
.L_415309:

            lea RDI,QWORD PTR [RBX+216]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+240]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+144]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+168]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+264]
            call .L_42e270

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            xor EAX,EAX
            pop RBX
.L_41535e:

            pop RBP
            pop R12
            ret 
.L_415362:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415370:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,232
.L_415381:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+56],RSI
            mov QWORD PTR [RSP+32],RDI
            mov RBX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+64],RDX
            mov QWORD PTR [RSP+72],RCX
            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_4156e0

            cmp BYTE PTR [RBX+292],0
            jne .L_4156fa
.L_4153cc:

            mov RAX,QWORD PTR [RSP+32]
            cmp BYTE PTR [RBX+294],0
            mov RAX,QWORD PTR [RAX+2472]
            mov R14,QWORD PTR [RAX]
            jne .L_415450

            cmp QWORD PTR [R14+8],0
            jne .L_416470

            mov RAX,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+72]
            xor R8D,R8D
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [R14]
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [R14+292],1
.L_41541d:

            mov RBX,QWORD PTR [RSP+216]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R8D
            jne .L_416a2a

            add RSP,232
.L_41543e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415450:

            cmp BYTE PTR [R14+291],0
            jne .L_4155f0

            mov RBX,QWORD PTR [R14+408]
            test RBX,RBX
            je .L_416895
.L_41546e:

            mov DWORD PTR [RBX+340],4294967271
            cmp BYTE PTR [R14+41],108
            jne .L_4154a0

            cmp BYTE PTR [R14+42],104
            jne .L_4154a0

            movzx EAX,BYTE PTR [R14+43]
            cmp AL,54
            je .L_415501

            cmp AL,55
            je .L_41688b

            cmp AL,53
            mov EBP,13
            je .L_415506
.L_4154a0:

            mov RAX,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_445ef0]
            mov ESI,84
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+64]
            mov RDI,RBX
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX],0
            movsx R8D,BYTE PTR [R14+42]
            xor EAX,EAX
            movsx ECX,BYTE PTR [R14+41]
            movsx R9D,BYTE PTR [R14+43]
            call .L_432bc0

            mov RDI,RBX
            call .L_414770

            mov R8D,4294967276
            jmp .L_41541d
.L_415501:

            mov EBP,15
.L_415506:

            movabs RAX,562945658585088
            mov DWORD PTR [RBX+340],4294967266
            mov QWORD PTR [RBX+4],RAX
            mov RAX,QWORD PTR [RBX+16]
            test RAX,RAX
            je .L_416809
.L_41552b:

            mov ECX,EBP
            mov EDX,1
            mov ESI,32
            shl EDX,CL
            sub RAX,RDX
            lea RDI,QWORD PTR [RAX+131072]
            call memset@PLT

            lea EAX,DWORD PTR [RBP+1]
            sub EBP,15
            lea RDI,QWORD PTR [RBX+56]
            mov DWORD PTR [RBX+24],0
            mov DWORD PTR [RBX],0
            mov ESI,510
            mov DWORD PTR [RBX+316],EAX
            xor EAX,EAX
            cmp EBP,2
            setb AL
            mov QWORD PTR [RBX+40],0
            mov DWORD PTR [RBX+48],0
            add EAX,4
            mov DWORD PTR [RBX+320],EAX
            movabs RAX,21474836499
            mov QWORD PTR [RBX+324],RAX
            call .L_4151e0

            test EAX,EAX
            jne .L_416820

            lea RDI,QWORD PTR [RBX+184]
            mov DWORD PTR [RBX+64],9
            mov ESI,19
            call .L_4151e0

            test EAX,EAX
            jne .L_416820

            mov DWORD PTR [RBX+340],0
            mov BYTE PTR [R14+291],1
            mov DWORD PTR [R14+392],0
            mov QWORD PTR [R14+400],0
.L_4155f0:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+184]
            mov ESI,1
            call .L_4049d0

            mov QWORD PTR [R14+360],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            mov QWORD PTR [RSP+96],RAX
            jle .L_41697d

            mov RAX,QWORD PTR [R14+8]
            cmp QWORD PTR [RSP+96],RAX
            mov QWORD PTR [RSP+88],RAX
            jle .L_415641

            mov QWORD PTR [RSP+184],RAX
            mov QWORD PTR [RSP+96],RAX
.L_415641:

            mov RAX,QWORD PTR [RSP+96]
            mov RBP,QWORD PTR [R14+408]
            mov QWORD PTR [R14+376],0
            mov DWORD PTR [R14+392],0
            mov DWORD PTR [RSP+136],EAX
            mov DWORD PTR [R14+368],EAX
            mov EAX,DWORD PTR [RBP+340]
            mov QWORD PTR [RSP+104],RBP
            test EAX,EAX
            mov DWORD PTR [RSP+140],EAX
            jne .L_415d68

            lea RAX,QWORD PTR [R14+360]
            lea R15,QWORD PTR [RIP+.L_445d40]
            mov QWORD PTR [RSP+16],R14
            mov R9D,DWORD PTR [RBP]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RSP+104]
            cmp DWORD PTR [RAX],8
            jg .L_415a7a
.L_4156c5:

            lea R13,QWORD PTR [RBP+40]
            lea RBX,QWORD PTR [RIP+.L_4458f8]
.L_4156d0:

            cmp R9D,9
            ja .L_4156d0
.L_4156d6:

            movsxd RAX,DWORD PTR [RBX+R9*4]
            add RAX,RBX
            jmp RAX
          .byte 0x90
.L_4156e0:

            call .L_404a20

            cmp BYTE PTR [RBX+292],0
            mov QWORD PTR [RBX+16],0
            je .L_4153cc
.L_4156fa:

            mov RAX,QWORD PTR [RBX]
            mov RBX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RAX],0
            call .L_414710

            mov R8D,EAX
            jmp .L_41541d
          .byte 0x90
.L_415730:

            cmp DWORD PTR [RBP+56],EAX
            jl .L_415f80

            pxor XMM0,XMM0
            mov DWORD PTR [RBP+336],0
            mov DWORD PTR [RBP+132],0
            movups XMMWORD PTR [RBP+68],XMM0
            movups XMMWORD PTR [RBP+84],XMM0
            movups XMMWORD PTR [RBP+100],XMM0
            movups XMMWORD PTR [RBP+116],XMM0
.L_415761:

            mov R12D,DWORD PTR [RBP+336]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415770:

            cmp R12D,DWORD PTR [RBP+60]
            jge .L_415817
.L_41577a:

            movsxd RAX,DWORD PTR [RBP+272]
            mov R10D,DWORD PTR [RBP+48]
            cmp R10D,EAX
            jl .L_416000
.L_41578e:

            mov R11,QWORD PTR [RBP+40]
            mov ECX,R10D
            mov RDX,QWORD PTR [RBP+296]
            sub ECX,EAX
            mov RSI,R11
            shr RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+276]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            mov EDX,DWORD PTR [RBP+188]
            test EDX,EDX
            je .L_4157d6

            cmp EAX,EDX
            jl .L_4157d6

            lea RDI,QWORD PTR [RBP+184]
            mov EDX,EAX
            call .L_4146b0
.L_4157d6:

            cmp EAX,2
            mov RDX,QWORD PTR [RBP+264]
            jle .L_415fd0

            movsxd RSI,EAX
            movsxd RCX,R12D
            sub EAX,2
            movzx EDX,BYTE PTR [RDX+RSI*1]
            add R12D,1
            sub R10D,EDX
            mov DWORD PTR [RBP+48],R10D
            add DWORD PTR [RBP+RSI*4+60],1
            mov RSI,QWORD PTR [RBP+136]
            mov BYTE PTR [RSI+RCX*1],AL
            cmp R12D,DWORD PTR [RBP+60]
            jl .L_41577a
.L_415817:

            jg .L_415f80

            lea RDI,QWORD PTR [RBP+56]
            call .L_4147e0

            test EAX,EAX
            je .L_415f80
.L_41582e:

            mov EAX,DWORD PTR [RBP+316]
            mov DWORD PTR [RBP+332],1
            mov R9D,1
            mov DWORD PTR [RBP],1
            mov DWORD PTR [RBP+184],EAX
            mov EAX,DWORD PTR [RBP+320]
            mov DWORD PTR [RBP+192],EAX
            jmp .L_4156d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415868:

            movsxd RDX,DWORD PTR [RBP+64]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_416500
.L_415877:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            mov DWORD PTR [RBP+48],ECX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EAX,AX
            mov DWORD PTR [RBP+60],EAX
.L_41588e:

            test EAX,EAX
            jne .L_415730

            movsxd RDX,DWORD PTR [RBP+64]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_416588
.L_4158a5:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EDX,AX
            cmp EDX,DWORD PTR [RBP+56]
            jge .L_415f80

            mov RDX,QWORD PTR [RBP+168]
            mov R9D,8
            mov WORD PTR [RDX],AX
            mov RDX,QWORD PTR [RBP+136]
            movzx EAX,AX
            mov QWORD PTR [RBP+144],0
            mov BYTE PTR [RDX+RAX*1],0
            mov DWORD PTR [RBP],8
            mov EAX,DWORD PTR [RBP+64]
            sub DWORD PTR [RBP+48],EAX
            jmp .L_4156d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415900:

            mov ECX,DWORD PTR [RBP+184]
            cmp ECX,EAX
            jl .L_415f80

            pxor XMM0,XMM0
            cmp EAX,2
            mov DWORD PTR [RBP+336],0
            mov DWORD PTR [RBP+260],0
            movups XMMWORD PTR [RBP+196],XMM0
            movups XMMWORD PTR [RBP+212],XMM0
            movups XMMWORD PTR [RBP+228],XMM0
            movups XMMWORD PTR [RBP+244],XMM0
            jle .L_416378

            cmp ECX,DWORD PTR [RBP+316]
            je .L_416378
.L_415957:

            mov ESI,DWORD PTR [RBP+336]
            mov RDI,QWORD PTR [RSP+8]
            mov EDX,3
            call .L_414d70

            cmp EAX,2
            mov DWORD PTR [RBP+336],EAX
            jle .L_416918

            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,1
            jle .L_416620
.L_415987:

            mov RSI,QWORD PTR [RBP+40]
            mov EDX,DWORD PTR [RBP+188]
            sub ECX,2
            mov DWORD PTR [RBP+48],ECX
            shr RSI,CL
            lea EAX,DWORD PTR [RDX-2]
            and ESI,3
            cmp ESI,EAX
            jge .L_415f80

            test ESI,ESI
            jle .L_416881

            lea ECX,DWORD PTR [RSI-1]
            mov EAX,3
            add RCX,4
            nop
            nop
            nop
            nop
.L_4159c0:

            mov RDX,QWORD PTR [RBP+264]
            mov BYTE PTR [RDX+RAX*1],0
            add RAX,1
            cmp RCX,RAX
            jne .L_4159c0

            mov EDX,DWORD PTR [RBP+188]
            add ESI,3
.L_4159dd:

            mov DWORD PTR [RBP+336],ESI
.L_4159e3:

            mov RDI,QWORD PTR [RSP+8]
            call .L_414d70

            cmp EAX,DWORD PTR [RBP+188]
            mov DWORD PTR [RBP+336],EAX
            jl .L_4168c0

            lea RDI,QWORD PTR [RBP+184]
            call .L_4147e0

            test EAX,EAX
            je .L_415f80

            mov EDX,DWORD PTR [RBP+332]
            test EDX,EDX
            je .L_415868
.L_415a21:

            mov DWORD PTR [RBP],9
            mov R9D,9
            jmp .L_4156d6
.L_415a33:

            movdqa XMM0,XMMWORD PTR [RSP+192]
            mov DWORD PTR [RBP],0
            mov DWORD PTR [RBP+312],0
            movups XMMWORD PTR [RBP+40],XMM0
            mov DWORD PTR [RBP+24],R13D
            mov DWORD PTR [RBP+28],0
.L_415a5c:

            mov RAX,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RAX+408]
            mov RAX,QWORD PTR [RSP+104]
            cmp DWORD PTR [RAX],8
            mov R9D,DWORD PTR [RBP]
            jle .L_4156c5
.L_415a7a:

            lea RAX,QWORD PTR [RBP+56]
            movdqu XMM0,XMMWORD PTR [RBP+40]
            mov EDI,DWORD PTR [RBP+272]
            mov EBX,DWORD PTR [RBP+32]
            mov QWORD PTR [RSP+112],RAX
            lea RAX,QWORD PTR [RBP+184]
            mov R11D,DWORD PTR [RBP+28]
            movaps XMMWORD PTR [RSP+192],XMM0
            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RBP+136]
            mov R13D,DWORD PTR [RBP+24]
            mov R12D,DWORD PTR [RBP+4]
            mov DWORD PTR [RSP+124],EDI
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RBP+264]
            mov QWORD PTR [RSP+144],RAX
            mov EAX,DWORD PTR [RBP+312]
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSP+120],EAX
            movsxd RAX,DWORD PTR [RBP+144]
            mov DWORD PTR [RSP+168],EAX
            mov QWORD PTR [RSP+40],RAX
.L_415b03:

            cmp R9D,10
            je .L_41616b

            jle .L_416390

            cmp R9D,11
            je .L_416468

            cmp R9D,12
            jne .L_415b03

            mov QWORD PTR [RSP+48],RBP
            mov R9D,R13D
            mov EBP,EBX
            mov EBX,R12D
            mov R12D,R13D
            jmp .L_415b96
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415b38:

            sub R14D,R11D
            cmp R14D,EBP
            cmovg R14D,EBP
.L_415b42:

            mov RAX,QWORD PTR [RSP+24]
            lea R13D,DWORD PTR [R11+R14*1]
            movsxd RDI,R9D
            movsxd RSI,R11D
            add R12D,R14D
            add RDI,RAX
            add RSI,RAX
            cmp R9D,R13D
            jg .L_415b68

            cmp R11D,R12D
            jle .L_416260
.L_415b68:

            movsxd RDX,R14D
            call memcpy@PLT
.L_415b70:

            cmp EBX,R12D
            je .L_4162c8
.L_415b79:

            cmp EBP,R14D
            mov R9D,9
            jle .L_415de8

            mov R11D,DWORD PTR [RSP+120]
            sub EBP,R14D
            mov R9D,R12D
            and R11D,R13D
.L_415b96:

            cmp R11D,R12D
            mov R14D,EBX
            jg .L_415b38

            sub R14D,R12D
            cmp R14D,EBP
            cmovg R14D,EBP
            jmp .L_415b42
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415bb0:

            mov ESI,DWORD PTR [RBP+336]
            mov EDX,DWORD PTR [RBP+188]
            jmp .L_4159e3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415bc8:

            mov EAX,DWORD PTR [RBP+60]
            jmp .L_41588e
.L_415bd0:

            mov EAX,DWORD PTR [RBP+188]
.L_415bd6:

            test EAX,EAX
            jne .L_415900

            movsxd RDX,DWORD PTR [RBP+192]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_4166a0
.L_415bf0:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EDX,AX
            cmp EDX,DWORD PTR [RBP+184]
            jge .L_415f80

            mov RDX,QWORD PTR [RBP+296]
            mov WORD PTR [RDX],AX
            mov RDX,QWORD PTR [RBP+264]
            movzx EAX,AX
            mov QWORD PTR [RBP+272],0
            mov BYTE PTR [RDX+RAX*1],0
            mov ECX,DWORD PTR [RBP+332]
            mov EAX,DWORD PTR [RBP+192]
            sub DWORD PTR [RBP+48],EAX
            test ECX,ECX
            jne .L_415a21

            mov DWORD PTR [RBP],5
            mov R9D,5
            jmp .L_4156d6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c60:

            movsxd RDX,DWORD PTR [RBP+192]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_415ce2
.L_415c6e:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            mov DWORD PTR [RBP+48],ECX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EAX,AX
            mov DWORD PTR [RBP+188],EAX
            jmp .L_415bd6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415c90:

            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,15
            jle .L_4167e0
.L_415c9c:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,16
            shr RAX,CL
            movzx EDX,AX
            test AX,AX
            mov DWORD PTR [RBP+312],EDX
            je .L_415f80

            movsxd RDX,DWORD PTR [RBP+328]
            mov EAX,DWORD PTR [RBP+324]
            mov DWORD PTR [RBP+48],ECX
            mov DWORD PTR [RBP+332],0
            mov DWORD PTR [RBP+184],EAX
            cmp ECX,EDX
            mov DWORD PTR [RBP+192],EDX
            jge .L_415c6e
.L_415ce2:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+192]
            jne .L_415c6e

            cmp ECX,EDX
            jge .L_415c6e

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_415f85

            mov DWORD PTR [RBP],1
.L_415d4b:

            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [R14+376],RDX
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415d68:

            cmp DWORD PTR [RSP+140],1
            jne .L_415fa6

            xor R8D,R8D
            xor EDX,EDX
.L_415d7b:

            mov BYTE PTR [R14+292],1
            nop
            nop
            nop
            nop
            nop
.L_415d88:

            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [R14+16],RDX
            sub RAX,RDX
            test R8D,R8D
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [R14]
            je .L_4167a0

            movsxd R9,R8D
.L_415da7:

            mov RBX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [R14+384]
            mov RDX,R9
            movzx EDI,WORD PTR [R14+24]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],R9
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RAX],RSI
            call .L_414fd0

            xor R8D,R8D
            mov WORD PTR [R14+24],AX
            add QWORD PTR [R14],R9
            jmp .L_41541d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415de8:

            mov RBP,QWORD PTR [RSP+48]
            mov R13D,R12D
            mov R12D,EBX
.L_415df3:

            mov EAX,DWORD PTR [RSP+80]
            test EAX,EAX
            je .L_415a33

            mov RAX,QWORD PTR [RSP+16]
            movsxd R11,R13D
            mov EBX,DWORD PTR [RSP+80]
            mov DWORD PTR [RSP+48],R12D
            add R11,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+172],R9D
            mov R12D,DWORD PTR [RSP+168]
            lea R14,QWORD PTR [RAX+368]
            mov QWORD PTR [RSP+80],R14
            mov R14,QWORD PTR [RSP+152]
            jmp .L_415ec9
          .byte 0x66
          .byte 0x90
.L_415e40:

            mov RAX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+192]
            mov ECX,R10D
            sub ECX,R12D
            mov RDX,QWORD PTR [RBP+168]
            shr RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+148]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            mov EDX,DWORD PTR [RBP+60]
            cmp EAX,EDX
            jl .L_415e8a

            test EDX,EDX
            je .L_415e8a

            mov RDI,QWORD PTR [RSP+112]
            mov EDX,EAX
            call .L_4146b0
.L_415e8a:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R14+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+200],R10D
.L_415e9d:

            sub EBX,1
            cmp EAX,255
            jg .L_41615c

            add R13D,1
            cmp DWORD PTR [RSP+48],R13D
            mov BYTE PTR [R11],AL
            jle .L_416843

            add R11,1
            test EBX,EBX
            je .L_415a33
.L_415ec9:

            mov R10D,DWORD PTR [RSP+200]
            cmp R12D,R10D
            jle .L_415e40

            mov RDX,QWORD PTR [RSP+128]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+8]
            call .L_414c00

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+200]
            jne .L_415e40

            cmp R12D,R10D
            jle .L_415e40

            mov RDI,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+88],RDI
            jne .L_416958

            mov RAX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+192]
            mov ECX,R12D
            sub ECX,R10D
            mov RDX,QWORD PTR [RBP+168]
            shl RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+148]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            mov EDX,DWORD PTR [RBP+60]
            test EDX,EDX
            je .L_415f64

            cmp EAX,EDX
            jl .L_415f64

            mov RDI,QWORD PTR [RSP+112]
            mov EDX,EAX
            call .L_4146b0
.L_415f64:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R14+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+200],R10D
            jns .L_415e9d
.L_415f80:

            mov R14,QWORD PTR [RSP+16]
.L_415f85:

            mov EAX,DWORD PTR [RSP+136]
            sub EAX,DWORD PTR [R14+368]
            mov DWORD PTR [RBP+340],4294967271
            cdqe 
            add QWORD PTR [R14+376],RAX
.L_415fa6:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_445d93]
            mov ESI,4294967295
            xor EAX,EAX
            call .L_432bc0

            mov R8D,4294967271
            jmp .L_41541d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415fd0:

            test EAX,EAX
            jne .L_416090

            movzx EAX,BYTE PTR [RDX]
            mov RDX,QWORD PTR [RBP+136]
            sub R10D,EAX
            movsxd RAX,R12D
            add R12D,1
            mov DWORD PTR [RBP+48],R10D
            mov BYTE PTR [RDX+RAX*1],0
            jmp .L_415770
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416000:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov R10D,DWORD PTR [RBP+48]
            movsxd RAX,DWORD PTR [RBP+272]
            jne .L_41578e

            cmp R10D,EAX
            jge .L_41578e
.L_416035:

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_415f85

            mov DWORD PTR [RBP+336],R12D
            mov DWORD PTR [RBP],7
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0x66
          .byte 0x90
.L_416090:

            movsxd RCX,EAX
            xor R14D,R14D
            cmp EAX,1
            movzx EAX,BYTE PTR [RDX+RCX*1]
            setne R14B
            lea R14D,DWORD PTR [R14+R14*4+4]
            lea EDX,DWORD PTR [RAX+R14*1]
            cmp EDX,R10D
            jg .L_416110
.L_4160af:

            mov ECX,R10D
            sub ECX,EAX
            movsxd RAX,R14D
            sub ECX,R14D
            shr R11,CL
            and R11W,WORD PTR [R15+RAX*2]
            mov DWORD PTR [RBP+48],ECX
            cmp R14D,4
            mov EAX,20
            mov ECX,3
            cmove EAX,ECX
            movzx EDX,R11W
            add EDX,EAX
            lea R14D,DWORD PTR [R12+RDX*1]
            cmp R14D,DWORD PTR [RBP+60]
            jg .L_415f80

            movsxd RDI,R12D
            add RDI,QWORD PTR [RBP+136]
            movsxd RDX,EDX
            xor ESI,ESI
            mov R12D,R14D
            call memset@PLT

            jmp .L_415770
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416110:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            mov QWORD PTR [RSP+24],RCX
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            mov RCX,QWORD PTR [RSP+24]
            test EAX,EAX
            mov RAX,QWORD PTR [RBP+264]
            mov R10D,DWORD PTR [RBP+48]
            movzx EAX,BYTE PTR [RAX+RCX*1]
            jne .L_416153

            lea EDX,DWORD PTR [R14+RAX*1]
            cmp R10D,EDX
            jl .L_416035
.L_416153:

            mov R11,QWORD PTR [RBP+40]
            jmp .L_4160af
.L_41615c:

            mov R12D,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP+80],EBX
            lea EBX,DWORD PTR [RAX-253]
.L_41616b:

            mov R10D,DWORD PTR [RSP+200]
            cmp DWORD PTR [RSP+124],R10D
            jg .L_4163a0
.L_41617e:

            movsxd RAX,DWORD PTR [RSP+124]
            mov RSI,QWORD PTR [RSP+192]
            mov ECX,R10D
            mov RDX,QWORD PTR [RBP+296]
            sub ECX,EAX
            shr RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+276]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx R11D,WORD PTR [RDX+RAX*2]
            mov EAX,DWORD PTR [RBP+188]
            cmp R11D,EAX
            jl .L_4161d3

            test EAX,EAX
            je .L_4161d3

            mov RDI,QWORD PTR [RSP+160]
            mov EDX,R11D
            call .L_4146b0

            mov R11D,EAX
.L_4161d3:

            mov RDI,QWORD PTR [RSP+144]
            movsxd RAX,R11D
            mov R9D,R13D
            movzx EAX,BYTE PTR [RDI+RAX*1]
            sub R10D,EAX
            mov DWORD PTR [RSP+200],R10D
.L_4161f0:

            cmp R11D,1
            jle .L_41623c

            mov EDX,DWORD PTR [RSP+200]
            lea R14D,DWORD PTR [R11-1]
            cmp R14D,EDX
            jg .L_416728
.L_41620a:

            mov R11,QWORD PTR [RSP+192]
            sub EDX,R14D
            movsxd RAX,R14D
            mov ECX,EDX
            mov DWORD PTR [RSP+200],EDX
            shr R11,CL
            and R11W,WORD PTR [R15+RAX*2]
            mov ECX,R14D
            movzx EAX,R11W
            mov R11D,1
            shl R11D,CL
            add R11D,EAX
.L_41623c:

            mov EAX,R13D
            mov QWORD PTR [RSP+48],RBP
            mov EBP,EBX
            sub EAX,R11D
            mov EBX,R12D
            mov R12D,R13D
            mov R11D,EAX
            sub R11D,1
            and R11D,DWORD PTR [RSP+120]
            jmp .L_415b96
.L_416260:

            cmp R14D,1
            jle .L_416610

            lea R11D,DWORD PTR [R14-2]
            lea RAX,QWORD PTR [RSI+1]
            lea RDX,QWORD PTR [RDI+1]
            shr R11D,1
            mov R9D,R11D
            lea R9,QWORD PTR [RSI+R9*2+3]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416288:

            movzx ECX,BYTE PTR [RAX-1]
            add RAX,2
            add RDX,2
            mov BYTE PTR [RDX-3],CL
            movzx ECX,BYTE PTR [RAX-2]
            mov BYTE PTR [RDX-2],CL
            cmp R9,RAX
            jne .L_416288

            lea EAX,DWORD PTR [R11+R11*1+2]
.L_4162a8:

            cmp EAX,R14D
            jge .L_415b70

            cdqe 
            cmp EBX,R12D
            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            jne .L_415b79

            nop
            nop
            nop
            nop
            nop
.L_4162c8:

            mov ECX,R14D
            mov R14,QWORD PTR [RSP+16]
            movsxd R9,EBX
            mov EBX,EBP
            mov R10D,R13D
            mov R8,R9
            mov RBP,QWORD PTR [RSP+48]
            mov R12D,9
            mov RAX,QWORD PTR [R14+408]
            mov RAX,QWORD PTR [RAX+16]
            add QWORD PTR [R14+400],R9
            cmp EBX,ECX
            mov DWORD PTR [R14+392],R9D
            mov QWORD PTR [R14+384],RAX
            jle .L_416320

            and R10D,DWORD PTR [RSP+120]
            mov EAX,EBX
            mov R12D,12
            sub EAX,ECX
            mov DWORD PTR [RBP+32],EAX
            mov DWORD PTR [RBP+28],R10D
.L_416320:

            mov EAX,DWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+192]
            mov DWORD PTR [RBP],R12D
            mov DWORD PTR [RBP+312],EAX
            mov EAX,DWORD PTR [RSP+140]
            movups XMMWORD PTR [RBP+40],XMM0
            mov DWORD PTR [RBP+24],EAX
            mov EAX,DWORD PTR [RSP+136]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            mov RDX,RAX
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416378:

            mov DWORD PTR [RBP],4
            mov R9D,4
            jmp .L_4156d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416390:

            cmp R9D,9
            je .L_415df3

            jmp .L_415b03
          .byte 0x90
.L_4163a0:

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+200]
            jne .L_41617e

            cmp DWORD PTR [RSP+124],R10D
            jle .L_41617e

            mov RDI,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+88],RDI
            jne .L_416a57

            movsxd RAX,DWORD PTR [RSP+124]
            mov RSI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RBP+296]
            mov ECX,EAX
            sub ECX,R10D
            shl RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+276]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx R11D,WORD PTR [RDX+RAX*2]
            mov EAX,DWORD PTR [RBP+188]
            test EAX,EAX
            je .L_41643e

            cmp R11D,EAX
            jl .L_41643e

            mov RDI,QWORD PTR [RSP+160]
            mov EDX,R11D
            call .L_4146b0

            mov R11D,EAX
.L_41643e:

            mov RDI,QWORD PTR [RSP+144]
            movsxd RAX,R11D
            movzx EAX,BYTE PTR [RDI+RAX*1]
            sub R10D,EAX
            test R10D,R10D
            mov DWORD PTR [RSP+200],R10D
            js .L_415f80

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416468:

            mov R9D,R13D
            jmp .L_4161f0
.L_416470:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+192]
            mov ESI,1
            call .L_4049d0

            mov R9,QWORD PTR [RSP+192]
            mov RBX,QWORD PTR [RSP+56]
            test R9,R9
            mov QWORD PTR [RBX],RAX
            jle .L_416a2f

            mov RDX,QWORD PTR [R14+8]
            cmp R9,RDX
            jle .L_4164b4

            mov QWORD PTR [RSP+192],RDX
            mov R9,RDX
.L_4164b4:

            test R9,R9
            movzx EDI,WORD PTR [R14+24]
            je .L_4164cb

            mov RDX,R9
            mov RSI,RAX
            call .L_414fd0

            mov EDI,EAX
.L_4164cb:

            mov RAX,QWORD PTR [RSP+64]
            mov WORD PTR [R14+24],DI
            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX],R9
            mov RAX,QWORD PTR [R14]
            mov QWORD PTR [RBX],RAX
            add QWORD PTR [R14],R9
            sub QWORD PTR [R14+8],R9
            jne .L_4164f4

            mov BYTE PTR [R14+292],1
.L_4164f4:

            mov QWORD PTR [R14+16],R9
            xor R8D,R8D
            jmp .L_41541d
.L_416500:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+64]
            jne .L_415877

            cmp ECX,EDX
            jge .L_415877

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_415f85

            mov DWORD PTR [RBP],5
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416588:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+64]
            jne .L_4158a5

            cmp ECX,EDX
            jge .L_4158a5

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_415f85

            mov DWORD PTR [RBP],6
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416610:

            xor EAX,EAX
            jmp .L_4162a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416620:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            jne .L_415987

            cmp ECX,1
            jg .L_415987

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_415f85
.L_41667c:

            mov RAX,QWORD PTR [R14+8]
            mov DWORD PTR [RBP],3
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [R14+376],RDX
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0x90
.L_4166a0:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+192]
            jne .L_415bf0

            cmp ECX,EDX
            jge .L_415bf0

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_415f85

            mov DWORD PTR [RBP],2
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416728:

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+48],R9D
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            mov EDX,DWORD PTR [RSP+200]
            mov R9D,DWORD PTR [RSP+48]
            jne .L_41620a

            cmp R14D,EDX
            jle .L_41620a

            mov RDI,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+88],RDI
            mov R14,QWORD PTR [RSP+16]
            je .L_415f85

            mov DWORD PTR [RBP+32],EBX
            mov DWORD PTR [RBP+28],R11D
            mov R12D,11
            mov R8D,DWORD PTR [R14+392]
            mov DWORD PTR [RSP+140],R13D
            jmp .L_416320
          .byte 0x66
          .byte 0x90
.L_4167a0:

            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RAX],0
            cmp BYTE PTR [R14+292],0
            je .L_41541d

            mov RDI,QWORD PTR [RSP+32]
            call .L_414710

            mov R8D,EAX
            jmp .L_41541d
.L_4167e0:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_414c00

            test EAX,EAX
            je .L_4169a0

            mov ECX,DWORD PTR [RBP+48]
            jmp .L_415c9c
.L_416809:

            mov EDI,131072
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            jne .L_41552b
.L_416820:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_445f20]
            mov ESI,12
            xor EAX,EAX
            call .L_432bc0

            mov R8D,4294967266
            jmp .L_41541d
.L_416843:

            mov R14,QWORD PTR [RSP+16]
            movsxd R9,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP+80],EBX
            mov R12D,DWORD PTR [RSP+172]
            mov RAX,QWORD PTR [R14+408]
            mov R8,R9
            mov RAX,QWORD PTR [RAX+16]
            mov DWORD PTR [R14+392],R9D
            add QWORD PTR [R14+400],R9
            mov QWORD PTR [R14+384],RAX
            jmp .L_416320
.L_416881:

            mov ESI,3
            jmp .L_4159dd
.L_41688b:

            mov EBP,16
            jmp .L_415506
.L_416895:

            mov ESI,344
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov QWORD PTR [R14+408],RAX
            jne .L_41546e

            jmp .L_416820
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4168c0:

            mov R14,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+96]
            sub EDX,DWORD PTR [R14+368]
            movsxd RDX,EDX
            add RDX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RDI
            je .L_415f85

            test EAX,EAX
            js .L_415f85

            mov RAX,QWORD PTR [R14+8]
            mov DWORD PTR [RBP],4
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [R14+376],RDX
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d88
.L_416918:

            mov R14,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+96]
            sub EDX,DWORD PTR [R14+368]
            movsxd RDX,EDX
            add RDX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RDI
            je .L_415f85

            test EAX,EAX
            jns .L_41667c

            jmp .L_415f85
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416958:

            mov R14,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+80],EBX
            mov R12D,DWORD PTR [RSP+172]
            mov DWORD PTR [RSP+140],R13D
            mov R8D,DWORD PTR [R14+392]
            jmp .L_416320
.L_41697d:

            lea RDX,QWORD PTR [RIP+.L_445d7b]
.L_416984:

            mov RDI,QWORD PTR [RSP+32]
            mov ESI,84
            xor EAX,EAX
            call .L_432bc0

            mov R8D,4294967266
            jmp .L_41541d
.L_4169a0:

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            jne .L_415d4b

            cmp DWORD PTR [RBP+48],7
            jg .L_415f85

            mov R8D,DWORD PTR [RBP+24]
            test R8D,R8D
            jle .L_416a3b

            mov RAX,QWORD PTR [R14+408]
            movsxd R9,R8D
            mov RAX,QWORD PTR [RAX+16]
            mov DWORD PTR [R14+392],R8D
            add QWORD PTR [R14+400],R9
            mov QWORD PTR [R14+384],RAX
            mov RAX,QWORD PTR [R14+8]
            mov DWORD PTR [RBP+24],0
            mov QWORD PTR [R14+376],RDX
            sub RAX,RDX
            mov QWORD PTR [R14+16],RDX
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [R14]
            jmp .L_415da7
.L_416a2a:

            call __stack_chk_fail@PLT
.L_416a2f:

            lea RDX,QWORD PTR [RIP+.L_445da0]
            jmp .L_416984
.L_416a3b:

            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_415d7b
.L_416a57:

            mov R14,QWORD PTR [RSP+16]
            mov DWORD PTR [RBP+32],EBX
            mov R12D,10
            mov DWORD PTR [RSP+140],R13D
            mov R8D,DWORD PTR [R14+392]
            jmp .L_416320
.L_416a79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a80:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            movsxd RBX,ECX
            mov RBP,RDI
            mov R14,RBX
            mov R12,R9
            sub RSP,72
.L_416a9d:

            mov QWORD PTR [R9],RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP],R8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416ac0:

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_417180

            cmp R14D,2
            je .L_416c10

            mov R15D,DWORD PTR [RAX]
            test R15,R15
            je .L_416c1d
.L_416aec:

            mov RAX,QWORD PTR [R12]
            add RAX,R15
            cmp RAX,QWORD PTR [RSP]
            ja .L_416d78

            cmp RBX,R15
            jae .L_416d78

            xor EDX,EDX
            mov RSI,R15
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            mov R10,RAX
            je .L_417180

            lea R11D,DWORD PTR [R14+1]
            mov RCX,R15
            add QWORD PTR [R12],R15
            movzx R9D,BYTE PTR [RAX+RBX*1]
            lea R8,QWORD PTR [RAX+RBX*1+1]
            movsxd R11,R11D
            sub RCX,R11
            test R13,R13
            je .L_416b6d

            test R9B,R9B
            je .L_416b6d

            movzx EDI,WORD PTR [R13]
            mov RDX,R15
            mov RSI,RAX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            call .L_414fd0

            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov WORD PTR [R13],AX
.L_416b6d:

            cmp R9B,70
            je .L_416f00

            jbe .L_416bc0

            cmp R9B,83
            je .L_417100

            ja .L_416c50

            cmp R9B,81
            je .L_416f90

            ja .L_4170c0

            cmp R9B,80
            jne .L_416bb0

            cmp RCX,2
            je .L_417160

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416bb0:

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            jmp .L_416ac0
.L_416bc0:

            cmp R9B,2
            je .L_416cf0

            jbe .L_416c98

            cmp R9B,65
            je .L_417000

            cmp R9B,66
            je .L_416fd0

            cmp R9B,64
            jne .L_416bb0

            cmp RCX,2
            jne .L_416bb0

            movzx EAX,WORD PTR [R8]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,R15
            mov RDI,RBP
            mov BYTE PTR [RDX+288],AL
            call .L_404a20

            jmp .L_416ac0
          .byte 0x90
.L_416c10:

            movzx R15D,WORD PTR [RAX]
            test R15,R15
            jne .L_416aec
.L_416c1d:

            test R13,R13
            je .L_416c37

            movzx EDI,WORD PTR [R13]
            mov RDX,RBX
            mov RSI,RAX
            call .L_414fd0

            mov WORD PTR [R13],AX
.L_416c37:

            mov RSI,RBX
            mov RDI,RBP
            call .L_404a20

            xor EAX,EAX
            jmp .L_416d93
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c50:

            cmp R9B,127
            je .L_416ea0

            cmp R9B,255
            je .L_416e48

            cmp R9B,84
            jne .L_416bb0

            cmp RCX,4
            jne .L_416bb0

            mov ESI,DWORD PTR [R8]
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov QWORD PTR [RAX+88],RSI
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416c98:

            test R9B,R9B
            je .L_416dc0

            cmp R9B,1
            jne .L_416bb0

            test RCX,RCX
            je .L_417140

            cmp BYTE PTR [R8],0
            je .L_416d78

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R8
            mov RDX,RCX
            lea RDI,QWORD PTR [RAX+240]
            mov QWORD PTR [RAX+248],0
            call .L_431240

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            jmp .L_416ac0
.L_416cf0:

            test RCX,RCX
            je .L_416d78

            cmp BYTE PTR [R8],0
            je .L_416d78

            mov RDI,QWORD PTR [RSP+24]
            mov RDX,RCX
            mov RSI,R8
            mov QWORD PTR [RDI+224],0
            add RDI,216
            call .L_431240

            mov RDI,QWORD PTR [RSP+24]
            cmp QWORD PTR [RDI+224],0
            je .L_4171ab

            mov RSI,QWORD PTR [RDI+216]
            xor EDX,EDX
            xor EAX,EAX
            nop
.L_416d40:

            add RAX,RSI
            cmp BYTE PTR [RAX],255
            jne .L_416d52

            mov BYTE PTR [RAX],47
            mov RSI,QWORD PTR [RDI+216]
.L_416d52:

            mov RCX,QWORD PTR [RDI+224]
            lea EAX,DWORD PTR [RDX+1]
            mov RDX,RAX
            cmp RAX,RCX
            jb .L_416d40

            sub RCX,1
.L_416d68:

            cmp BYTE PTR [RSI+RCX*1],47
            je .L_416bb0

            nop
            nop
            nop
            nop
            nop
            nop
.L_416d78:

            lea RDX,QWORD PTR [RIP+.L_445dd2]
.L_416d7f:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_416d8e:

            mov EAX,4294967266
.L_416d93:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4172c1

            add RSP,72
.L_416dab:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416dc0:

            cmp RCX,1
            mov QWORD PTR [RSP+8],RCX
            jbe .L_416bb0

            movzx EAX,WORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            test R13,R13
            mov QWORD PTR [RSP+16],R8
            mov WORD PTR [RSI+192],AX
            je .L_416bb0

            movzx EDI,WORD PTR [R13]
            mov RDX,R11
            mov RSI,R10
            call .L_414fd0

            lea RSI,QWORD PTR [RIP+.L_445920]
            mov EDX,2
            mov WORD PTR [R13],AX
            movzx EDI,AX
            call .L_414fd0

            mov RCX,QWORD PTR [RSP+8]
            mov WORD PTR [R13],AX
            mov RDX,RCX
            sub RDX,2
            jne .L_417190

            mov WORD PTR [R13],AX
.L_416e32:

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            jmp .L_416ac0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416e48:

            cmp RCX,20
            jne .L_416bb0

            mov EAX,DWORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov DWORD PTR [RSI+120],EAX
            mov EDX,DWORD PTR [R8+4]
            mov RAX,RSI
            mov QWORD PTR [RSI+136],RDX
            mov ESI,DWORD PTR [R8+8]
            mov QWORD PTR [RAX+128],RSI
            mov EDX,DWORD PTR [R8+12]
            mov QWORD PTR [RAX+72],RDX
            mov ESI,DWORD PTR [R8+16]
            or DWORD PTR [RAX+64],7
            mov QWORD PTR [RAX+104],RSI
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416ea0:

            cmp RCX,16
            jne .L_416bb0

            movzx EAX,WORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov BYTE PTR [RSI+288],AL
            movzx EAX,WORD PTR [R8+2]
            mov DWORD PTR [RSI+120],EAX
            movzx EAX,WORD PTR [R8+4]
            mov QWORD PTR [RSI+136],RAX
            movzx EAX,WORD PTR [R8+6]
            mov QWORD PTR [RSI+128],RAX
            mov EDX,DWORD PTR [R8+8]
            mov RAX,RSI
            mov QWORD PTR [RSI+72],RDX
            mov ESI,DWORD PTR [R8+12]
            or DWORD PTR [RAX+64],7
            mov QWORD PTR [RAX+104],RSI
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0
.L_416f00:

            cmp RCX,4
            jne .L_416bb0

            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+48],0
            mov EDX,DWORD PTR [R8]
            lea RSI,QWORD PTR [RIP+.L_447012]
            mov QWORD PTR [RSP+8],RAX
            cmp EDX,65001
            jne .L_41721f
.L_416f45:

            mov EDX,1
            mov RDI,RBP
            call .L_431820

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSI+200],RAX
            call .L_42e240

            mov RSI,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSI+200],0
            je .L_416d8e

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            jmp .L_416ac0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416f90:

            cmp RCX,4
            jne .L_416bb0

            movzx EAX,WORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov QWORD PTR [RSI+136],RAX
            movzx EAX,WORD PTR [R8+2]
            mov QWORD PTR [RSI+128],RAX
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416fd0:

            cmp RCX,16
            jne .L_416bb0

            mov RAX,QWORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov QWORD PTR [RSI+48],RAX
            mov RAX,QWORD PTR [R8+8]
            mov QWORD PTR [RSI+56],RAX
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0
          .byte 0x66
          .byte 0x90
.L_417000:

            cmp RCX,24
            jne .L_416bb0

            mov RAX,QWORD PTR [RSP+24]
            movabs RDX,116444735999999999
            lea RSI,QWORD PTR [RAX+80]
            mov RAX,QWORD PTR [R8]
            cmp RAX,RDX
            ja .L_4171c3

            xor EDX,EDX
            test RSI,RSI
            je .L_41703d

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+80],0
.L_41703d:

            mov RAX,QWORD PTR [RSP+24]
            movabs RSI,116444735999999999
            mov QWORD PTR [RAX+72],RDX
            mov RAX,QWORD PTR [R8+8]
            cmp RAX,RSI
            ja .L_41727b

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+96],0
            xor EAX,EAX
.L_41706c:

            mov RSI,QWORD PTR [RSP+24]
            movabs RDX,116444735999999999
            mov QWORD PTR [RSI+88],RAX
            mov RAX,QWORD PTR [R8+16]
            cmp RAX,RDX
            ja .L_41723a

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+112],0
            xor EAX,EAX
.L_41709b:

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            or DWORD PTR [RSI+64],3
            mov QWORD PTR [RSI+104],RAX
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4170c0:

            test RCX,RCX
            je .L_416bb0

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R8
            mov RDX,RCX
            lea RDI,QWORD PTR [RAX+168]
            mov QWORD PTR [RAX+176],0
            call .L_431240

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            jmp .L_416ac0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417100:

            test RCX,RCX
            je .L_416bb0

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R8
            mov RDX,RCX
            lea RDI,QWORD PTR [RAX+144]
            mov QWORD PTR [RAX+152],0
            call .L_431240

            mov RSI,R15
            mov RDI,RBP
            call .L_404a20

            jmp .L_416ac0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417140:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R15
            mov RDI,RBP
            mov QWORD PTR [RAX+248],0
            call .L_404a20

            jmp .L_416ac0
.L_417160:

            mov RSI,QWORD PTR [RSP+24]
            movzx EAX,WORD PTR [R8]
            mov RDI,RBP
            or DWORD PTR [RSI+64],4
            mov DWORD PTR [RSI+120],EAX
            mov RSI,R15
            call .L_404a20

            jmp .L_416ac0
.L_417180:

            lea RDX,QWORD PTR [RIP+.L_445db8]
            jmp .L_416d7f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417190:

            mov R8,QWORD PTR [RSP+16]
            movzx EDI,AX
            lea RSI,QWORD PTR [R8+2]
            call .L_414fd0

            mov WORD PTR [R13],AX
            jmp .L_416e32
.L_4171ab:

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,-1
            mov RSI,QWORD PTR [RAX+216]
            jmp .L_416d68
.L_4171c3:

            movabs RDX,-116444736000000000
            test RSI,RSI
            lea RCX,QWORD PTR [RAX+RDX*1]
            je .L_417209

            movabs RAX,-2972493582642298179
            mul RCX
            shr RDX,23
            imul RAX,RDX,10000000
            mov RDX,RCX
            sub RDX,RAX
            lea RAX,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RDX+80],RAX
.L_417209:

            movabs RAX,-2972493582642298179
            mul RCX
            shr RDX,23
            jmp .L_41703d
.L_41721f:

            lea RSI,QWORD PTR [RIP+.L_445dcd]
            mov RDI,RAX
            xor EAX,EAX
            call .L_4326f0

            mov RSI,QWORD PTR [RSP+32]
            jmp .L_416f45
.L_41723a:

            movabs RDX,-116444736000000000
            lea RCX,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RCX
            shr RDX,23
            imul RAX,RDX,10000000
            sub RCX,RAX
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RSI+112],RAX
            mov RAX,RDX
            jmp .L_41709b
.L_41727b:

            movabs RSI,-116444736000000000
            lea RCX,QWORD PTR [RAX+RSI*1]
            movabs RAX,-2972493582642298179
            mov RSI,QWORD PTR [RSP+24]
            mul RCX
            shr RDX,23
            imul RAX,RDX,10000000
            sub RCX,RAX
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RSI+96],RAX
            mov RAX,RDX
            jmp .L_41706c
.L_4172c1:

            call __stack_chk_fail@PLT
.L_4172c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4172d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_4172e1:

            mov EDI,DWORD PTR [RIP+.L_65b7a0]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RSI
            test EDI,EDI
            jne .L_41737e

            lea RDI,QWORD PTR [RIP+.L_65b7c0]
            mov DWORD PTR [RIP+.L_65b7a0],1
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
.L_417318:

            mov EDX,R8D
            mov ESI,8
.L_417320:

            mov ECX,EDX
            shr DX,1
            and ECX,1
            lea EAX,DWORD PTR [RCX*4]
            add EAX,ECX
            shl EAX,13
            add EAX,ECX
            xor EDX,EAX
            sub ESI,1
            jne .L_417320

            mov WORD PTR [RDI+R8*2],DX
            add R8,1
            cmp R8,256
            jne .L_417318

            lea RDX,QWORD PTR [RIP+.L_65b7c0]
            lea RSI,QWORD PTR [RDX+512]
            nop
            nop
            nop
.L_417360:

            movzx EAX,WORD PTR [RDX]
            add RDX,2
            movzx ECX,AL
            shr AX,8
            xor AX,WORD PTR [RDI+RCX*2]
            mov WORD PTR [RDX+510],AX
            cmp RDX,RSI
            jne .L_417360
.L_41737e:

            cmp QWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+16],720896
            je .L_4178d9
.L_417390:

            mov RAX,QWORD PTR [RBX+2472]
            xor ESI,ESI
            xor EDX,EDX
            mov RDI,RBX
            mov RBP,QWORD PTR [RAX]
            mov WORD PTR [RBP+291],SI
            mov BYTE PTR [RBP+293],0
            mov ESI,22
            mov QWORD PTR [RBP+16],0
            call .L_4049d0

            test RAX,RAX
            mov R12,RAX
            je .L_4178e9

            cmp BYTE PTR [RBP+289],0
            movzx EAX,BYTE PTR [RAX]
            jne .L_4173e1

            cmp AL,77
            je .L_417920
.L_4173e1:

            test AL,AL
            jne .L_417411
.L_4173e5:

            mov R13D,1
.L_4173eb:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_4180b7

            add RSP,104
.L_417406:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_417411:

            mov RDI,R12
            call .L_4145e0

            test RAX,RAX
            jne .L_4180bc

            mov BYTE PTR [RBP+289],1
            mov QWORD PTR [RBP+32],0
            movzx EAX,BYTE PTR [R12+20]
            mov BYTE PTR [RBP+40],AL
            movzx EAX,BYTE PTR [R12+3]
            mov BYTE PTR [RBP+41],AL
            movzx EAX,BYTE PTR [R12+4]
            mov BYTE PTR [RBP+42],AL
            movzx EAX,BYTE PTR [R12+5]
            cmp WORD PTR [RBP+41],26732
            mov BYTE PTR [RBP+43],AL
            lea RAX,QWORD PTR [RBP+41]
            je .L_417ac0
.L_417465:

            mov BYTE PTR [RBP+290],0
            xor EDX,EDX
.L_41746e:

            cmp WORD PTR [RBP+41],26732
            je .L_417adb
.L_41747a:

            cmp WORD PTR [RBP+41],31340
            je .L_417e70
.L_417486:

            mov BYTE PTR [RBP+294],1
.L_41748d:

            cmp DL,1
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],0
            sbb EAX,EAX
            mov DWORD PTR [RBP+64],0
            mov QWORD PTR [RBP+72],0
            and EAX,4294967223
            mov QWORD PTR [RBP+80],0
            mov QWORD PTR [RBP+88],0
            add EAX,511
            mov QWORD PTR [RBP+96],0
            mov QWORD PTR [RBP+104],0
            mov DWORD PTR [RBP+120],EAX
            mov RAX,QWORD PTR [RBP+208]
            mov QWORD PTR [RBP+112],0
            mov QWORD PTR [RBP+128],0
            mov QWORD PTR [RBP+136],0
            mov QWORD PTR [RBP+224],0
            mov QWORD PTR [RBP+248],0
            mov BYTE PTR [RBP+288],0
            mov QWORD PTR [RBP+200],RAX
            movzx R13D,BYTE PTR [R12+20]
            cmp R13B,1
            je .L_417c5d

            jb .L_417af1

            cmp R13B,2
            je .L_4179c8

            cmp R13B,3
            jne .L_417c11

            xor EDX,EDX
            mov ESI,28
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_418098

            cmp WORD PTR [RAX],4
            jne .L_417d03

            mov EDI,DWORD PTR [RAX+24]
            mov QWORD PTR [RBP+32],RDI
            mov RDX,RDI
            mov EDI,DWORD PTR [RAX+7]
            mov QWORD PTR [RBP+48],RDI
            mov EDI,DWORD PTR [RAX+11]
            mov QWORD PTR [RBP+56],RDI
            mov EDI,DWORD PTR [RAX+15]
            mov QWORD PTR [RBP+88],RDI
            movzx ECX,WORD PTR [RAX+21]
            or DWORD PTR [RBP+64],8
            cmp EDX,31
            mov WORD PTR [RBP+194],CX
            jbe .L_417d03

            mov EDX,28
            xor EDI,EDI
            mov RSI,RAX
            call .L_414fd0

            mov ESI,28
            mov RDI,RBX
            mov WORD PTR [RSP+32],AX
            call .L_404a20

            mov RAX,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+64]
            mov ECX,4
            mov RSI,RBP
            mov RDI,RBX
            lea R8,QWORD PTR [RAX-28]
            call .L_416a80

            cmp EAX,-20
            mov R13D,EAX
            jl .L_4173eb
.L_4175f7:

            movzx EAX,WORD PTR [RSP+32]
            cmp WORD PTR [RBP+192],AX
            jne .L_41808c
.L_417609:

            cmp R13D,-20
            jl .L_4173eb
.L_417613:

            cmp BYTE PTR [RBP+290],0
            jne .L_41762a

            cmp QWORD PTR [RBP+248],0
            je .L_41790a
.L_41762a:

            lea R15,QWORD PTR [RBP+216]
            lea RSI,QWORD PTR [RBP+240]
            lea R14,QWORD PTR [RSP+64]
            mov RDI,R15
            call .L_42e3c0

            mov RSI,R15
            mov RDI,R14
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            call .L_42e3c0

            mov EAX,DWORD PTR [RBP+120]
            mov EDX,EAX
            and EDX,61440
            cmp EDX,40960
            je .L_417e80

            and AH,15
            cmp BYTE PTR [RBP+290],1
            sbb EDX,EDX
            and EDX,16384
            add EDX,16384
            or EAX,EDX
            mov DWORD PTR [RBP+120],EAX
.L_4176ba:

            test BYTE PTR [RBP+64],4
            jne .L_4176d0

            test BYTE PTR [RBP+288],1
            je .L_4176d0

            and DWORD PTR [RBP+120],4294967149
.L_4176d0:

            mov RCX,QWORD PTR [RBP+200]
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            call .L_4393f0

            test EAX,EAX
            je .L_417727

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_418083

            mov RDI,QWORD PTR [RBP+200]
            mov R13D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0
.L_417727:

            mov RDI,R14
            call .L_42e240

            mov RDX,QWORD PTR [RSP+40]
            test RDX,RDX
            je .L_417c01

            mov RCX,QWORD PTR [RBP+200]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP]
            call .L_439630

            test EAX,EAX
            je .L_41778f

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_418062

            mov RDI,QWORD PTR [RBP+200]
            mov R13D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_445640]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0
.L_41778f:

            lea RDI,QWORD PTR [RSP+32]
            call .L_42e240

            cmp BYTE PTR [R12+20],0
            je .L_417f62
.L_4177a5:

            mov R15,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RBP+120]
            mov RDI,R15
            call .L_4392b0

            mov RSI,QWORD PTR [RBP+128]
            mov RDI,R15
            call .L_439670

            mov RSI,QWORD PTR [RBP+136]
            mov RDI,R15
            call .L_438cc0

            cmp QWORD PTR [RBP+152],0
            jne .L_417f4d
.L_4177e0:

            cmp QWORD PTR [RBP+176],0
            jne .L_417f38
.L_4177ee:

            test BYTE PTR [RBP+64],1
            je .L_417c44

            mov R15,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RBP+80]
            mov RSI,QWORD PTR [RBP+72]
            mov RDI,R15
            call .L_438fc0

            mov RDX,QWORD PTR [RBP+80]
            mov RSI,QWORD PTR [RBP+72]
            mov RDI,R15
            call .L_439050
.L_41781c:

            mov R15,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RBP+96]
            mov RSI,QWORD PTR [RBP+88]
            mov RDI,R15
            call .L_4392c0

            test BYTE PTR [RBP+64],2
            je .L_417c36

            mov RDX,QWORD PTR [RBP+112]
            mov RSI,QWORD PTR [RBP+104]
            mov RDI,R15
            call .L_438f30
.L_41784a:

            cmp BYTE PTR [RBP+290],0
            jne .L_417865

            mov RDI,QWORD PTR [RSP]
            call .L_4384b0

            test RAX,RAX
            je .L_418050
.L_417865:

            mov RDI,QWORD PTR [RSP]
            call .L_4394b0
.L_41786e:

            xor ECX,ECX
            cmp BYTE PTR [RBP+290],0
            mov RAX,QWORD PTR [RBP+48]
            mov QWORD PTR [RBP],0
            mov WORD PTR [RBP+24],CX
            mov QWORD PTR [RBP+8],RAX
            jne .L_417892

            test RAX,RAX
            jne .L_417899
.L_417892:

            mov BYTE PTR [RBP+292],1
.L_417899:

            movsx EAX,BYTE PTR [RBP+43]
            sub RSP,8
.L_4178a1:

            lea R12,QWORD PTR [RBP+295]
            lea RCX,QWORD PTR [RIP+.L_445e8e]
            mov EDX,64
            mov ESI,1
            mov RDI,R12
            push RAX
            movsx R9D,BYTE PTR [RBP+42]
            xor EAX,EAX
            movsx R8D,BYTE PTR [RBP+41]
            call __sprintf_chk@PLT

            mov QWORD PTR [RBX+24],R12
            pop RAX
            pop RDX
            jmp .L_4173eb
.L_4178d9:

            lea RAX,QWORD PTR [RIP+.L_445dee]
            mov QWORD PTR [RBX+24],RAX
            jmp .L_417390
.L_4178e9:

            xor EDX,EDX
            mov ESI,1
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_4173e5

            cmp BYTE PTR [RAX],0
            je .L_4173e5
.L_41790a:

            lea RDX,QWORD PTR [RIP+.L_445db8]
            jmp .L_417d0a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417920:

            cmp BYTE PTR [R12+1],90
            jne .L_417411

            lea R14,QWORD PTR [RSP+64]
            mov R12D,4096
.L_417937:

            mov RDX,R14
            mov RSI,R12
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R8,RAX
            je .L_417f18

            mov R9,QWORD PTR [RSP+64]
            cmp R9,21
            jle .L_417f25

            add R9,RAX
            lea RAX,QWORD PTR [RAX+22]
            mov RSI,R8
            cmp R9,RAX
            ja .L_417988

            jmp .L_417f08
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417978:

            add RSI,RAX
            lea RAX,QWORD PTR [RSI+22]
            cmp R9,RAX
            jbe .L_417f08
.L_417988:

            mov RDI,RSI
            call .L_4145e0

            test RAX,RAX
            jne .L_417978

            sub RSI,R8
            mov RDI,RBX
            call .L_404a20

            xor EDX,EDX
            mov ESI,1
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R12,RAX
            je .L_41790a

            movzx EAX,BYTE PTR [RAX]
            jmp .L_4173e1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4179c8:

            xor EDX,EDX
            mov ESI,24
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_41790a

            movzx ECX,WORD PTR [RAX]
            mov QWORD PTR [RBP+32],RCX
            mov EDI,DWORD PTR [RAX+7]
            mov RDX,RCX
            mov QWORD PTR [RBP+48],RDI
            mov EDI,DWORD PTR [RAX+11]
            mov QWORD PTR [RBP+56],RDI
            mov EDI,DWORD PTR [RAX+15]
            mov QWORD PTR [RBP+88],RDI
            movzx ECX,WORD PTR [RAX+21]
            or DWORD PTR [RBP+64],8
            cmp DX,23
            mov WORD PTR [RBP+194],CX
            jbe .L_418130

            mov EDX,24
            xor EDI,EDI
            mov RSI,RAX
            call .L_414fd0

            mov ESI,24
            mov RDI,RBX
            mov WORD PTR [RSP+32],AX
            call .L_404a20

            mov RAX,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+64]
            mov ECX,2
            mov RSI,RBP
            mov RDI,RBX
            lea R8,QWORD PTR [RAX-24]
            call .L_416a80

            cmp EAX,-20
            mov R13D,EAX
            jl .L_4173eb

            mov R14D,4294967272
            sub R14D,DWORD PTR [RSP+64]
            add R14D,DWORD PTR [RBP+32]
            test R14D,R14D
            jle .L_4175f7

            movsxd R14,R14D
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,R14
            call .L_4049d0

            test RAX,RAX
            je .L_41790a

            movzx EDI,WORD PTR [RSP+32]
            mov RDX,R14
            mov RSI,RAX
            call .L_414fd0

            mov RSI,R14
            mov RDI,RBX
            mov WORD PTR [RSP+32],AX
            call .L_404a20

            jmp .L_4175f7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417ac0:

            cmp BYTE PTR [RAX+2],100
            jne .L_417465

            mov BYTE PTR [RBP+290],1
            mov EDX,1
            jmp .L_41746e
.L_417adb:

            cmp BYTE PTR [RAX+2],48
            jne .L_41747a
.L_417ae5:

            mov BYTE PTR [RBP+294],0
            jmp .L_41748d
.L_417af1:

            xor EDX,EDX
            mov ESI,24
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_41790a

            movzx EAX,BYTE PTR [RAX]
            lea RDI,QWORD PTR [R14+15]
            add RAX,2
            mov QWORD PTR [RBP+32],RAX
            movzx EAX,BYTE PTR [R14+1]
            mov BYTE PTR [RSP+16],AL
            mov EAX,DWORD PTR [R14+7]
            mov QWORD PTR [RBP+48],RAX
            mov EAX,DWORD PTR [R14+11]
            mov QWORD PTR [RBP+56],RAX
            call .L_4150b0

            mov RSI,QWORD PTR [RBP+32]
            mov QWORD PTR [RBP+88],RAX
            movzx EAX,BYTE PTR [R14+21]
            lea R15D,DWORD PTR [RSI-24]
            sub R15D,EAX
            cmp EAX,221
            mov BYTE PTR [RSP+8],AL
            mov DWORD PTR [RSP+28],EAX
            jg .L_417b65

            test R15D,R15D
            jns .L_417e00
.L_417b65:

            cmp R15D,-2
            jne .L_417d03

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_41790a

            movzx EDX,BYTE PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+22]
            lea RDI,QWORD PTR [RBP+240]
            mov QWORD PTR [RBP+248],0
            call .L_431240

            mov RSI,QWORD PTR [RBP+32]
            lea RAX,QWORD PTR [R14+2]
            cmp RSI,2
            je .L_417be6
.L_417bb3:

            lea RDX,QWORD PTR [R14+RSI*1]
.L_417bb7:

            add RAX,1
            add R13B,BYTE PTR [RAX-1]
            cmp RAX,RDX
            jne .L_417bb7
.L_417bc4:

            test R15D,R15D
            jle .L_417be6

            mov EAX,DWORD PTR [RSP+28]
            add EAX,22
            cdqe 
            lea RAX,QWORD PTR [R14+RAX*1+2]
            cmp BYTE PTR [RAX],85
            jne .L_417be6

            cmp R15D,12
            je .L_418103
.L_417be6:

            mov RDI,RBX
            call .L_404a20

            cmp BYTE PTR [RSP+16],R13B
            jne .L_417dd8

            xor R13D,R13D
            jmp .L_417613
.L_417c01:

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_4394f0

            jmp .L_41778f
.L_417c11:

            lea RDX,QWORD PTR [RIP+.L_445f50]
            movzx ECX,R13B
            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_4173eb
.L_417c36:

            mov RDI,QWORD PTR [RSP]
            call .L_438f90

            jmp .L_41784a
.L_417c44:

            mov R15,QWORD PTR [RSP]
            mov RDI,R15
            call .L_439020

            mov RDI,R15
            call .L_4390b0

            jmp .L_41781c
.L_417c5d:

            xor EDX,EDX
            mov ESI,27
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R13,RAX
            je .L_41790a

            movzx EAX,BYTE PTR [RAX]
            lea RDI,QWORD PTR [R13+15]
            add RAX,2
            mov QWORD PTR [RBP+32],RAX
            movzx EAX,BYTE PTR [R13+1]
            mov BYTE PTR [RSP+8],AL
            mov EAX,DWORD PTR [R13+7]
            mov QWORD PTR [RBP+48],RAX
            mov EAX,DWORD PTR [R13+11]
            mov QWORD PTR [RBP+56],RAX
            call .L_4150b0

            mov RSI,QWORD PTR [RBP+32]
            mov QWORD PTR [RBP+88],RAX
            movzx R14D,BYTE PTR [R13+21]
            lea EAX,DWORD PTR [RSI-27]
            cmp EAX,R14D
            mov R15,R14
            js .L_417d03

            cmp R14D,230
            jg .L_417d03

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R13,RAX
            je .L_41790a

            test R14D,R14D
            je .L_417d24

            cmp BYTE PTR [RAX+22],255
            je .L_417d03

            lea EDX,DWORD PTR [R14-1]
            lea RAX,QWORD PTR [RAX+23]
            lea RDX,QWORD PTR [R13+RDX*1+23]
.L_417cf4:

            cmp RAX,RDX
            je .L_417d24

            add RAX,1
            cmp BYTE PTR [RAX-1],255
            jne .L_417cf4
.L_417d03:

            lea RDX,QWORD PTR [RIP+.L_445e24]
.L_417d0a:

            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0

            mov R13D,4294967266
            jmp .L_4173eb
.L_417d24:

            lea RSI,QWORD PTR [R13+22]
            lea RDI,QWORD PTR [RBP+240]
            mov RDX,R15
            mov QWORD PTR [RBP+248],0
            call .L_431240

            movzx EAX,WORD PTR [R13+R15*1+22]
            or DWORD PTR [RBP+64],8
            lea RDX,QWORD PTR [R13+2]
            mov WORD PTR [RBP+194],AX
            mov RAX,QWORD PTR [RBP+32]
            mov RSI,RAX
            sub RSI,2
            je .L_4180fb

            add RAX,R13
            xor R15D,R15D
.L_417d6e:

            add RDX,1
            add R15B,BYTE PTR [RDX-1]
            cmp RDX,RAX
            jne .L_417d6e
.L_417d7b:

            mov RDI,RBX
            call .L_404a20

            mov RAX,QWORD PTR [RBP+48]
            lea R9,QWORD PTR [RSP+64]
            xor EDX,EDX
            mov ECX,2
            mov RSI,RBP
            mov RDI,RBX
            lea R8,QWORD PTR [RAX+2]
            call .L_416a80

            cmp EAX,-20
            mov R13D,EAX
            jl .L_4173eb

            test EAX,EAX
            mov EAX,0
            cmovg R13D,EAX
            mov EAX,2
            sub RAX,QWORD PTR [RSP+64]
            add QWORD PTR [RBP+48],RAX
            js .L_417d03

            cmp BYTE PTR [RSP+8],R15B
            je .L_417609
.L_417dd8:

            lea RDX,QWORD PTR [RIP+.L_445e37]
            or ESI,4294967295
            mov RDI,RBX
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_4173eb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417e00:

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_41790a

            movzx R8D,BYTE PTR [RSP+8]
            lea RSI,QWORD PTR [R14+22]
            lea RDI,QWORD PTR [RBP+240]
            mov QWORD PTR [RBP+248],0
            mov RDX,R8
            mov QWORD PTR [RSP+8],R8
            call .L_431240

            mov R8,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RBP+32]
            movzx EAX,WORD PTR [R14+R8*1+22]
            or DWORD PTR [RBP+64],8
            cmp RSI,2
            mov WORD PTR [RBP+194],AX
            lea RAX,QWORD PTR [R14+2]
            jne .L_417bb3

            jmp .L_417bc4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417e70:

            cmp BYTE PTR [RAX+2],52
            jne .L_417486

            jmp .L_417ae5
          .byte 0x90
.L_417e80:

            mov RDI,QWORD PTR [RSP+64]
            mov ESI,124
            call strchr@PLT

            test RAX,RAX
            je .L_4180c8

            lea RSI,QWORD PTR [RAX+1]
            or R9,-1
            xor R15D,R15D
            mov QWORD PTR [RSP+16],RAX
            mov RCX,R9
            mov QWORD PTR [RSP+8],R9
            mov RDI,RSI
            mov EAX,R15D

            repne scasb AL,BYTE PTR [RDI]

            lea RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov RDX,RCX
            not RDX
            add RDX,R9
            call .L_431240

            mov R8,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+8]
            mov EAX,R15D
            mov BYTE PTR [R8],0
            mov RDI,QWORD PTR [RSP+64]
            mov RCX,R9

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            sub RAX,1
            mov QWORD PTR [RSP+72],RAX
            jmp .L_4176ba
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417f08:

            sub RSI,R8
            mov RDI,RBX
            call .L_404a20

            jmp .L_417937
.L_417f18:

            sar R12,1
            cmp R12,24
            jg .L_417937
.L_417f25:

            lea RDX,QWORD PTR [RIP+.L_445df2]
            jmp .L_417d0a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417f38:

            mov RSI,QWORD PTR [RBP+168]
            mov RDI,QWORD PTR [RSP]
            call .L_438cd0

            jmp .L_4177ee
.L_417f4d:

            mov RSI,QWORD PTR [RBP+144]
            mov RDI,QWORD PTR [RSP]
            call .L_439680

            jmp .L_4177e0
.L_417f62:

            mov RDI,QWORD PTR [RSP]
            call .L_438250

            test RAX,RAX
            mov R12,RAX
            je .L_417fcd

            mov RDI,RAX
            mov QWORD PTR [RBP+272],0
            call wcslen@PLT

            lea RDI,QWORD PTR [RBP+264]
            mov RDX,RAX
            mov RSI,R12
            call .L_431280

            mov RDX,QWORD PTR [RBP+272]
            mov RSI,QWORD PTR [RBP+264]
            test RDX,RDX
            je .L_417fc4

            lea RDX,QWORD PTR [RSI+RDX*4]
            mov RAX,RSI
.L_417fb2:

            cmp DWORD PTR [RAX],92
            je .L_41803d
.L_417fbb:

            add RAX,4
            cmp RAX,RDX
            jne .L_417fb2
.L_417fc4:

            mov RDI,QWORD PTR [RSP]
            call .L_439390
.L_417fcd:

            mov RDI,QWORD PTR [RSP]
            call .L_4385b0

            test RAX,RAX
            mov R12,RAX
            je .L_4177a5

            mov RDI,RAX
            mov QWORD PTR [RBP+272],0
            call wcslen@PLT

            lea RDI,QWORD PTR [RBP+264]
            mov RDX,RAX
            mov RSI,R12
            call .L_431280

            mov RDX,QWORD PTR [RBP+272]
            mov RSI,QWORD PTR [RBP+264]
            test RDX,RDX
            je .L_41802f

            lea RDX,QWORD PTR [RSI+RDX*4]
            mov RAX,RSI
.L_418021:

            cmp DWORD PTR [RAX],92
            je .L_418048
.L_418026:

            add RAX,4
            cmp RAX,RDX
            jne .L_418021
.L_41802f:

            mov RDI,QWORD PTR [RSP]
            call .L_439580

            jmp .L_4177a5
.L_41803d:

            mov DWORD PTR [RAX],47
            jmp .L_417fbb
.L_418048:

            mov DWORD PTR [RAX],47
            jmp .L_418026
.L_418050:

            mov RSI,QWORD PTR [RBP+56]
            mov RDI,QWORD PTR [RSP]
            call .L_439490

            jmp .L_41786e
.L_418062:

            lea RDX,QWORD PTR [RIP+.L_445018]
.L_418069:

            mov ESI,12
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0

            mov R13D,4294967266
            jmp .L_4173eb
.L_418083:

            lea RDX,QWORD PTR [RIP+.L_444a18]
            jmp .L_418069
.L_41808c:

            lea RDX,QWORD PTR [RIP+.L_445e64]
            jmp .L_417d0a
.L_418098:

            lea RDX,QWORD PTR [RIP+.L_445db8]
            mov ESI,84
            mov RDI,RBX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_4173eb
.L_4180b7:

            call __stack_chk_fail@PLT
.L_4180bc:

            lea RDX,QWORD PTR [RIP+.L_445e0f]
            jmp .L_417d0a
.L_4180c8:

            lea RDX,QWORD PTR [RIP+.L_445e79]
            mov ESI,84
            xor EAX,EAX
            mov RDI,RBX
            mov R13D,4294967271
            call .L_432bc0

            mov RDI,R14
            call .L_42e240

            lea RDI,QWORD PTR [RSP+32]
            call .L_42e240

            jmp .L_4173eb
.L_4180fb:

            xor R15D,R15D
            jmp .L_417d7b
.L_418103:

            mov EDI,DWORD PTR [RAX+2]
            mov QWORD PTR [RBP+88],RDI
            movzx EDX,WORD PTR [RAX+6]
            mov DWORD PTR [RBP+120],EDX
            movzx EDX,WORD PTR [RAX+8]
            mov QWORD PTR [RBP+128],RDX
            movzx EAX,WORD PTR [RAX+10]
            or DWORD PTR [RBP+64],4
            mov QWORD PTR [RBP+136],RAX
            jmp .L_417be6
.L_418130:

            lea RDX,QWORD PTR [RIP+.L_445e4c]
            jmp .L_417d0a
.L_41813c:

            nop
            nop
            nop
            nop
.L_418140:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_445f70]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_41815a:

            call .L_436df0

            cmp EAX,-30
            je .L_4181f7

            mov ESI,416
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4181fe

            mov QWORD PTR [RAX+264],0
            mov QWORD PTR [RAX+272],0
            lea R9,QWORD PTR [RIP+.L_4172d0]
            mov QWORD PTR [RAX+280],0
            lea RAX,QWORD PTR [RIP+.L_415270]
            push 0
.L_4181b0:

            push 0
            lea R8,QWORD PTR [RIP+.L_415150]
            lea RCX,QWORD PTR [RIP+.L_414ea0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_414770]
            push 0
            lea RDX,QWORD PTR [RIP+.L_445dee]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_415370]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_4181f7

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_4181f7:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4181fe:

            lea RDX,QWORD PTR [RIP+.L_445e9b]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4181f7
.L_41821b:

            nop
            nop
            nop
            nop
            nop
.L_418220:

            xor EAX,EAX
            test RDX,RDX
            movzx R8D,BYTE PTR [RSI]
            jle .L_418288

            movzx ECX,BYTE PTR [RDI]
            test CL,CL
            je .L_418288

            test R8B,R8B
            je .L_418290

            add RDX,RDI
            cmp CL,R8B
            mov R9,RDI
            je .L_41824b
.L_418242:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418248:

            mov RSI,R8
.L_41824b:

            add R9,1
            lea R8,QWORD PTR [RSI+1]
            mov EAX,R9D
            sub EAX,EDI
            cmp R9,RDX
            je .L_418280

            movzx ECX,BYTE PTR [R9]
            test CL,CL
            je .L_418280

            movzx ESI,BYTE PTR [R8]
            test SIL,SIL
            je .L_4182c9

            cmp CL,SIL
            je .L_418248
.L_418273:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418280:

            movzx R8D,BYTE PTR [RSI+1]
            mov RDI,R9
.L_418288:

            test R8B,R8B
            jne .L_418273

            movzx ECX,BYTE PTR [RDI]
.L_418290:

            cmp CL,61
            jbe .L_4182b0

            cmp CL,92
            jne .L_418273

            movzx EDX,BYTE PTR [RDI+1]
            cmp DL,10
            je .L_418242

            cmp DL,13
            mov EDX,0
            cmovne EAX,EDX
            ret 
          .byte 0x90
.L_4182b0:

            movabs RDX,2305843013508670976
            shr RDX,CL
            and EDX,1
            mov EDX,0
            cmove EAX,EDX
            ret 
.L_4182c9:

            mov RDI,R9
            jmp .L_418290
.L_4182ce:

            nop
            nop
.L_4182d0:

            test RSI,RSI
            jle .L_41856b

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
.L_4182e6:

            movzx R12D,BYTE PTR [RDI]
            test R12B,R12B
            je .L_418572

            lea RBX,QWORD PTR [RIP+.L_4461a0]
            lea R15,QWORD PTR [RIP+.L_65b580]
            mov R14,RSI
            mov EBP,EDX
            mov R11D,ECX
            xor R10D,R10D
            nop
            nop
            nop
            nop
.L_418310:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_418318:

            cmp R12B,32
            je .L_418324

            cmp R12B,9
            jne .L_418338
.L_418324:

            add R13,1
            sub R14,1
            movzx R12D,BYTE PTR [R13]
            mov EAX,1
            jne .L_418318
.L_418338:

            cmp R12B,10
            je .L_418446

            cmp R12B,13
            je .L_418446

            cmp R12B,92
            je .L_4184d8
.L_418356:

            or EAX,R11D
            je .L_418440

            test R11D,R11D
            je .L_41836d

            test R14,R14
            je .L_418446
.L_41836d:

            test EBP,EBP
            je .L_41838b

            lea RSI,QWORD PTR [RIP+.L_44665f]
            mov RDX,R14
            mov RDI,R13
            call .L_418220

            test EAX,EAX
            jg .L_418553
.L_41838b:

            sub R12D,99
            cmp R12B,18
            ja .L_418440

            movzx R12D,R12B
            movsxd RAX,DWORD PTR [RBX+R12*4]
            add RAX,RBX
            jmp RAX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4183b0:

            mov R12,R15
            nop
            nop
            nop
            nop
            nop
.L_4183b8:

            mov RSI,QWORD PTR [R12]
            test RSI,RSI
            je .L_418440
.L_4183c1:

            add R12,8
            jmp .L_4183de
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4183d0:

            add R12,8
            mov RSI,QWORD PTR [R12-8]
            test RSI,RSI
            je .L_418440
.L_4183de:

            mov RDX,R14
            mov RDI,R13
            call .L_418220

            test EAX,EAX
            jle .L_4183d0

            cdqe 
            add R10D,1
            add R13,RAX
            sub R14,RAX
            cmp BYTE PTR [R13],61
            je .L_4184f8

            test R14,R14
            jle .L_418446
.L_418409:

            movzx R12D,BYTE PTR [R13]
            test R12B,R12B
            jne .L_418310

            pop RBX
.L_418418:

            mov EAX,R10D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418428:

            lea R12,QWORD PTR [RIP+.L_65b5a0]
            mov RSI,QWORD PTR [R12]
            test RSI,RSI
            jne .L_4183c1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418440:

            mov R10D,4294967295
.L_418446:

            pop RBX
            mov EAX,R10D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418458:

            lea R12,QWORD PTR [RIP+.L_65b440]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418468:

            lea R12,QWORD PTR [RIP+.L_65b460]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418478:

            lea R12,QWORD PTR [RIP+.L_65b480]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418488:

            lea R12,QWORD PTR [RIP+.L_65b4e0]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418498:

            lea R12,QWORD PTR [RIP+.L_65b500]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4184a8:

            lea R12,QWORD PTR [RIP+.L_65b520]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4184b8:

            lea R12,QWORD PTR [RIP+.L_65b540]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4184c8:

            lea R12,QWORD PTR [RIP+.L_65b560]
            jmp .L_4183b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4184d8:

            movzx EDX,BYTE PTR [R13+1]
            cmp DL,10
            je .L_418446

            cmp DL,13
            jne .L_418356

            jmp .L_418446
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4184f8:

            sub R14,1
            lea RAX,QWORD PTR [R13+1]
            test R14,R14
            jle .L_41855b

            movzx EDX,BYTE PTR [R13+1]
            cmp DL,9
            je .L_418543

            cmp DL,32
            jne .L_418525

            jmp .L_418543
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418520:

            cmp DL,32
            je .L_41853b
.L_418525:

            add RAX,1
            sub R14,1
            je .L_418446

            movzx EDX,BYTE PTR [RAX]
            cmp DL,9
            jne .L_418520
.L_41853b:

            mov R13,RAX
            jmp .L_418409
.L_418543:

            test EBP,EBP
            je .L_418440

            mov R13,RAX
            jmp .L_418409
.L_418553:

            mov R10D,EBP
            jmp .L_418446
.L_41855b:

            test EBP,EBP
            mov EAX,4294967295
            cmove R10D,EAX
            jmp .L_418446
.L_41856b:

            xor R10D,R10D
            mov EAX,R10D
            ret 
.L_418572:

            xor R10D,R10D
            jmp .L_418446
.L_41857a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418580:

            mov RSI,QWORD PTR [RDI]
            movsx EDX,BYTE PTR [RSI]
            mov EAX,EDX
            sub EDX,48
            sub EAX,48
            cmp AL,7
            ja .L_4185db

            add RSI,1
            xor EAX,EAX
            movabs R8,1152921504606846975
            jmp .L_4185b1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4185a8:

            add RSI,1
            cmp RAX,R8
            jg .L_4185d0
.L_4185b1:

            movsxd RDX,EDX
            mov QWORD PTR [RDI],RSI
            lea RAX,QWORD PTR [RDX+RAX*8]
            movsx EDX,BYTE PTR [RSI]
            mov ECX,EDX
            sub EDX,48
            sub ECX,48
            cmp CL,7
            jbe .L_4185a8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4185d0:

            movabs RAX,9223372036854775807
            ret 
.L_4185db:

            xor EAX,EAX
            ret 
.L_4185de:

            nop
            nop
.L_4185e0:

            mov RSI,QWORD PTR [RDI]
            movzx EAX,BYTE PTR [RSI]
            cmp AL,45
            je .L_418680

            movsx EDX,AL
            sub EAX,48
            sub EDX,48
            cmp AL,9
            ja .L_4186b0

            mov R10D,1
            mov R9D,7
.L_41860b:

            xor EAX,EAX
            movsxd RDX,EDX
            movabs R8,922337203685477580
            nop
            nop
            nop
            nop
            nop
            nop
.L_418620:

            lea RAX,QWORD PTR [RAX+RAX*4]
            add RSI,1
            mov QWORD PTR [RDI],RSI
            lea RAX,QWORD PTR [RDX+RAX*2]
            movsx EDX,BYTE PTR [RSI]
            mov ECX,EDX
            sub EDX,48
            sub ECX,48
            cmp CL,9
            ja .L_418670

            cmp RAX,R8
            jg .L_41864e

            movsxd RDX,EDX
            jne .L_418620

            cmp RDX,R9
            jle .L_418620
.L_41864e:

            cmp R10D,-1
            movabs RDX,-9223372036854775808
            movabs RAX,9223372036854775807
            cmove RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418670:

            cmp R10D,-1
            je .L_4186ac

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418680:

            lea RCX,QWORD PTR [RSI+1]
            mov R10D,4294967295
            mov R9D,8
            mov QWORD PTR [RDI],RCX
            movsx EDX,BYTE PTR [RSI+1]
            mov RSI,RCX
            mov EAX,EDX
            sub EDX,48
            sub EAX,48
            cmp AL,9
            jbe .L_41860b

            xor EAX,EAX
.L_4186ac:

            neg RAX
            ret 
.L_4186b0:

            xor EAX,EAX
            ret 
.L_4186b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4186c0:

            mov RAX,QWORD PTR [RDI]
            cmp BYTE PTR [RAX],48
            jne .L_418778

            movzx EDX,BYTE PTR [RAX+1]
            and EDX,4294967263
            cmp DL,88
            je .L_4186e0

            jmp .L_418580
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4186e0:

            lea RDX,QWORD PTR [RAX+2]
            mov QWORD PTR [RDI],RDX
            movzx ECX,BYTE PTR [RAX+2]
            cmp CL,45
            je .L_418780

            mov R10D,1
            mov R9D,15
            movabs R8,576460752303423487
.L_41870a:

            lea EAX,DWORD PTR [RCX-48]
            movsx EDX,CL
            cmp AL,9
            ja .L_418808

            sub EDX,48
.L_41871b:

            xor EAX,EAX
            mov R11D,4294967295
.L_418723:

            cmp EDX,15
            ja .L_418762
.L_418728:

            cmp RAX,R8
            jg .L_4187c9

            movsxd RDX,EDX
            je .L_4187c0
.L_41873a:

            shl RAX,4
            add RAX,RDX
            mov RDX,QWORD PTR [RDI]
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RDI],RCX
            movsx EDX,BYTE PTR [RDX+1]
            lea ESI,DWORD PTR [RDX-48]
            mov ECX,EDX
            cmp SIL,9
            ja .L_4187a8

            sub EDX,48
            cmp EDX,15
            jbe .L_418728
.L_418762:

            mov RDX,RAX
            neg RDX
            cmp R10D,-1
            cmove RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418778:

            jmp .L_4185e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418780:

            lea RDX,QWORD PTR [RAX+3]
            mov R10D,4294967295
            xor R9D,R9D
            movabs R8,576460752303423488
            mov QWORD PTR [RDI],RDX
            movzx ECX,BYTE PTR [RAX+3]
            jmp .L_41870a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4187a8:

            lea ESI,DWORD PTR [RDX-97]
            cmp SIL,5
            ja .L_4187f0

            sub EDX,97
            jmp .L_418723
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4187c0:

            cmp R9,RDX
            jge .L_41873a
.L_4187c9:

            cmp R10D,-1
            movabs RDX,9223372036854775807
            movabs RAX,-9223372036854775808
            cmovne RAX,RDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4187f0:

            sub ECX,65
            sub EDX,65
            cmp CL,6
            cmovae EDX,R11D
            jmp .L_418723
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418808:

            lea EAX,DWORD PTR [RCX-97]
            cmp AL,5
            ja .L_418820

            sub EDX,97
            jmp .L_41871b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418820:

            sub ECX,65
            sub EDX,65
            mov EAX,4294967295
            cmp CL,6
            cmovae EDX,EAX
            jmp .L_41871b
.L_418836:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418840:

            test RDI,RDI
            je .L_418878

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            nop
            nop
.L_418850:

            mov RDI,QWORD PTR [RBX+8]
            mov RBP,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            mov RBX,RBP
            call free@PLT

            test RBP,RBP
            jne .L_418850

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418878:

            ret 
.L_41887a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418880:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_41888d:

            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            mov RBX,QWORD PTR [R12+64]
            test RBX,RBX
            je .L_4188cd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4188a8:

            mov RDI,QWORD PTR [RBX+16]
            mov RBP,QWORD PTR [RBX]
            call free@PLT

            mov RDI,QWORD PTR [RBX+8]
            call .L_418840

            mov RDI,RBX
            mov RBX,RBP
            call free@PLT

            test RBP,RBP
            jne .L_4188a8
.L_4188cd:

            mov RDI,R12
            call .L_42e240

            lea RDI,QWORD PTR [R12+8272]
            call .L_42e240

            lea RDI,QWORD PTR [R12+8296]
            call .L_42e240

            mov RDI,QWORD PTR [R12+8320]
            call .L_43a0e0

            mov RDI,QWORD PTR [R12+32]
            call free@PLT

            mov RDI,R12
            call free@PLT

            mov RAX,QWORD PTR [R13+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_418920:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_418929:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418930:

            push RBX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EDI,DWORD PTR [RBX+48]
            test EDI,EDI
            js .L_41894e

            call close@PLT

            mov DWORD PTR [RBX+48],4294967295
.L_41894e:

            xor EAX,EAX
            pop RBX
            ret 
.L_418952:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418960:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41896a:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov R13D,DWORD PTR [RBX+48]
            test R13D,R13D
            js .L_418a00

            mov RAX,QWORD PTR [RBX+32]
            mov R12,RDX
            mov RBP,RDI
            test RAX,RAX
            je .L_418a28
.L_418994:

            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RBX+40]
            mov EDI,R13D
            mov RSI,QWORD PTR [RBX+32]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RBX+8328]
            sub RAX,QWORD PTR [RBX+40]
            mov RDX,QWORD PTR [RBX+24]
            cmp RDX,RAX
            cmovg RDX,RAX
            call read@PLT

            test RAX,RAX
            js .L_418a77

            je .L_4189e0

            add QWORD PTR [RBX+40],RAX
            mov QWORD PTR [R12],RAX
            xor EAX,EAX
.L_4189d5:

            add RSP,24
.L_4189d9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4189e0:

            mov QWORD PTR [R12],0
            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418a00:

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RCX],0
            mov EAX,1
            mov QWORD PTR [RDX],0
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418a28:

            mov QWORD PTR [RBX+24],65536
            mov EDI,65536
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RSI
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            mov RSI,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            jne .L_418994

            lea RDX,QWORD PTR [RIP+.L_443dae]
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4189d5
.L_418a77:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_445f90]
            xor EAX,EAX
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_4189d5
.L_418a99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418aa0:

            test RSI,RSI
            mov RDX,RDI
            mov R8,RSI
            je .L_418ac5

            lea RDI,QWORD PTR [RIP+.L_4451bf]
            mov ECX,2
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_418b08
.L_418ac5:

            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_418b14
.L_418acc:

            test R8,R8
            lea R10,QWORD PTR [RIP+.L_4461ec]
            mov RCX,RDX
            setne R9B
.L_418add:

            cmp AL,47
            lea RSI,QWORD PTR [RDX+1]
            jne .L_418b20

            test R9B,R9B
            je .L_418b20

            mov BYTE PTR [R8+24],1
            mov RDX,RSI
.L_418af2:

            add RCX,1
            mov BYTE PTR [RCX-1],AL
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            jne .L_418add

            jmp .L_418b17
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418b08:

            mov BYTE PTR [R8+24],1
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            jne .L_418acc
.L_418b14:

            mov RCX,RDX
.L_418b17:

            mov BYTE PTR [RCX],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418b20:

            cmp AL,92
            jne .L_418cb0

            movzx R11D,BYTE PTR [RDX+1]
            lea EDI,DWORD PTR [R11-48]
            cmp DIL,70
            ja .L_418cb0

            push RBX
.L_418b3c:

            nop
            nop
            nop
            nop
.L_418b40:

            movzx EDI,DIL
            movsxd RDI,DWORD PTR [R10+RDI*4]
            add RDI,R10
            jmp RDI
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418b50:

            movzx EDI,BYTE PTR [RDX+2]
            lea EBX,DWORD PTR [RDI-48]
            cmp BL,7
            jbe .L_418c60
.L_418b60:

            mov RDX,RSI
.L_418b63:

            add RCX,1
            mov BYTE PTR [RCX-1],AL
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_418b9c
.L_418b71:

            cmp AL,47
            lea RSI,QWORD PTR [RDX+1]
            jne .L_418c90

            test R9B,R9B
            je .L_418c90

            add RCX,1
            mov RDX,RSI
            mov BYTE PTR [R8+24],1
            mov BYTE PTR [RCX-1],AL
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            jne .L_418b71
.L_418b9c:

            mov BYTE PTR [RCX],0
            pop RBX
.L_418ba0:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418ba8:

            add RDX,2
            mov EAX,11
            jmp .L_418b63
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418bb8:

            add RDX,2
            mov EAX,9
            jmp .L_418b63
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418bc8:

            add RDX,2
            mov EAX,32
            jmp .L_418b63
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418bd8:

            add RDX,2
            mov EAX,13
            jmp .L_418b63
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418be8:

            add RDX,2
            mov EAX,10
            jmp .L_418b63
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418c00:

            add RDX,2
            mov EAX,12
            jmp .L_418b63
          .byte 0x66
          .byte 0x90
.L_418c10:

            add RDX,2
            mov EAX,8
            jmp .L_418b63
          .byte 0x66
          .byte 0x90
.L_418c20:

            add RDX,2
            mov EAX,7
            jmp .L_418b63
          .byte 0x66
          .byte 0x90
.L_418c30:

            add RDX,2
            mov EAX,R11D
            jmp .L_418b63
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418c40:

            movzx EDI,BYTE PTR [RDX+2]
            lea EBX,DWORD PTR [RDI-48]
            cmp BL,7
            jbe .L_418c60

            add RDX,2
            xor EAX,EAX
            jmp .L_418b63
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418c60:

            movzx EBX,BYTE PTR [RDX+3]
            sub EBX,48
            cmp BL,7
            ja .L_418b60

            mov EAX,R11D
            lea EDI,DWORD PTR [RDI*8-128]
            add RDX,4
            shl EAX,6
            or EAX,EBX
            or EAX,EDI
            jmp .L_418b63
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418c90:

            cmp AL,92
            jne .L_418b60

            movzx R11D,BYTE PTR [RDX+1]
            lea EDI,DWORD PTR [R11-48]
            cmp DIL,70
            jbe .L_418b40

            jmp .L_418b60
.L_418cb0:

            mov RDX,RSI
            jmp .L_418af2
.L_418cb8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418cc0:

            mov RAX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_445f9b]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov R8,QWORD PTR [RAX]
            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            jne .L_418d10

            test RDX,RDX
            je .L_418d00

            cmp BYTE PTR [RDX],0
            je .L_418d00

            mov BYTE PTR [R8+8336],1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418d00:

            mov BYTE PTR [R8+8336],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418d10:

            mov EAX,4294967276
            ret 
.L_418d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418d20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_418d2e:

            mov RBX,QWORD PTR [RDI]
            test RBX,RBX
            je .L_418d79

            mov RBP,RDX
            mov R12,RSI
            mov R14,RDI
            xor R13D,R13D
            jmp .L_418d4b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418d48:

            mov RBX,RAX
.L_418d4b:

            mov R15,QWORD PTR [RBX+8]
            mov RDX,RBP
            mov RSI,R12
            mov RDI,R15
            call strncmp@PLT

            test EAX,EAX
            jne .L_418d6e

            movzx EAX,BYTE PTR [R15+RBP*1]
            test AL,AL
            je .L_418d90

            cmp AL,61
            je .L_418d90
.L_418d6e:

            mov RAX,QWORD PTR [RBX]
            mov R13,RBX
            test RAX,RAX
            jne .L_418d48
.L_418d79:

            add RSP,8
.L_418d7d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418d90:

            test R13,R13
            mov RAX,QWORD PTR [RBX]
            je .L_418dc0

            mov QWORD PTR [R13],RAX
.L_418d9c:

            mov RDI,R15
            call free@PLT

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp free@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418dc0:

            mov QWORD PTR [R14],RAX
            jmp .L_418d9c
.L_418dc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418dd0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EDI,16
            push RBX
.L_418de0:

            mov R12,RSI
            mov R13,RDX
            mov RBP,RCX
            call malloc@PLT

            test RAX,RAX
            je .L_418e38

            lea RDI,QWORD PTR [RBP+1]
            mov RBX,RAX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_418e30

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov BYTE PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [R12],RBX
            mov QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_418e27:

            pop RBX
.L_418e28:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418e30:

            mov RDI,RBX
            call free@PLT
.L_418e38:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_443dae]
            xor EAX,EAX
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_418e27
.L_418e57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RDX
            sub RSP,72
.L_418e74:

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RSP],RSI
            mov ESI,44
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],0
            call strchr@PLT

            test RAX,RAX
            je .L_418f90

            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+8]
            mov RBX,RAX
            lea R15,QWORD PTR [RAX+1]
            call .L_43ac70

            test RAX,RAX
            mov R14,RAX
            je .L_419018

            test R15,R15
            je .L_419000

            cmp BYTE PTR [RBX+1],0
            mov R13D,1
            lea R12,QWORD PTR [RSP+16]
            je .L_419000
.L_418eef:

            lea RSI,QWORD PTR [RIP+.L_445fd9]
            mov RDI,R15
            call strcspn@PLT

            lea RBX,QWORD PTR [R15+RAX*1]
            cmp BYTE PTR [RBX],0
            je .L_418f0e

            mov BYTE PTR [RBX],0
            add RBX,1
.L_418f0e:

            mov QWORD PTR [RSP+16],R15
            cmp BYTE PTR [R15],0
            je .L_418ff0

            cmp R13,4
            je .L_418f50

            mov RDI,R12
            call .L_4186c0

            test RBX,RBX
            mov EDI,R13D
            lea RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+R13*8+24],RAX
            je .L_418fa8

            add R13,1
            cmp BYTE PTR [RBX],0
            je .L_418fa8

            mov R15,RBX
            jmp .L_418eef
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f50:

            lea RDX,QWORD PTR [RIP+.L_445fc6]
.L_418f57:

            mov RDI,QWORD PTR [RSP]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            mov EAX,4294967276
.L_418f6c:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_419026

            add RSP,72
.L_418f84:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_418f90:

            lea RDI,QWORD PTR [RSP+8]
            call .L_4186c0
.L_418f9a:

            mov QWORD PTR [RBP],RAX
            xor EAX,EAX
            jmp .L_418f6c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418fa8:

            cmp EDI,1
            mov QWORD PTR [RSP+16],0
            je .L_419009

            lea RDX,QWORD PTR [RSP+24]
            call R14

            mov RCX,QWORD PTR [RSP+24]
            test RCX,RCX
            je .L_418f9a

            lea RDX,QWORD PTR [RIP+.L_447bff]
.L_418fcf:

            mov RDI,QWORD PTR [RSP]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_418f6c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418ff0:

            lea RDX,QWORD PTR [RIP+.L_445fb7]
            jmp .L_418f57
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419000:

            mov QWORD PTR [RSP+16],0
.L_419009:

            lea RDX,QWORD PTR [RIP+.L_445fdb]
            jmp .L_418f57
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419018:

            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_445fa3]
            jmp .L_418fcf
.L_419026:

            call __stack_chk_fail@PLT
.L_41902b:

            nop
            nop
            nop
            nop
            nop
.L_419030:

            push R15
            push R14
            mov R15,R8
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_419041:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RCX,RCX
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+16],RDX
            je .L_4191f0

            xor R12D,R12D
            lea R14,QWORD PTR [RIP+.L_445ff0]
            lea R13,QWORD PTR [RIP+.L_445ff9]
            mov RBP,RCX
            mov R9,R8
            mov R15D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
.L_419088:

            mov R12,QWORD PTR [RBP+8]
            cmp BYTE PTR [R12],0
            je .L_4191a8

            mov ECX,9
            mov RSI,R12
            mov RDI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_419208

            mov ECX,9
            mov RSI,R12
            mov RDI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_419218

            lea RDI,QWORD PTR [RIP+.L_445195]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            mov ESI,61
            mov RDI,R12
            mov QWORD PTR [RSP+24],R9
            call strchr@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+56],RAX
            mov R9,QWORD PTR [RSP+24]
            je .L_419a2d

            mov BYTE PTR [RAX],0
            mov RDX,QWORD PTR [RSP+56]
            lea R8,QWORD PTR [RDX+1]
            mov QWORD PTR [RSP+56],R8
            movzx EAX,BYTE PTR [R12]
            sub EAX,99
            cmp AL,18
            ja .L_419717

            lea RCX,QWORD PTR [RIP+.L_446308]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_41914a:

            lea RDI,QWORD PTR [RIP+.L_4504a2]
            mov ECX,8
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_419908

            lea RDI,QWORD PTR [RIP+.L_446020]
            mov ECX,9
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_419908

            lea RDI,QWORD PTR [RIP+.L_447a56]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_419596

            nop
            nop
            nop
            nop
.L_4191a8:

            xor EBX,EBX
.L_4191aa:

            mov RBP,QWORD PTR [RBP]
            cmp R15D,EBX
            cmovg R15D,EBX
            test RBP,RBP
            jne .L_419088

            mov R12D,R15D
            mov R15,R9
            test R12D,R12D
            je .L_4191f0
.L_4191c9:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_419a72

            add RSP,88
.L_4191e4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4191f0:

            mov EAX,DWORD PTR [R15]
            test AH,1
            je .L_419a0a

            xor R12D,R12D
            jmp .L_4191c9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419208:

            or DWORD PTR [R9],4096
            jmp .L_4191aa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419218:

            or DWORD PTR [R9],2048
            jmp .L_4191aa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419228:

            lea RDI,QWORD PTR [RIP+.L_446f91]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_4196f8
.L_41924a:

            lea RDI,QWORD PTR [RIP+.L_446029]
            mov ECX,4
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41996d

            lea RDI,QWORD PTR [RIP+.L_44602d]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_419746
.L_41928e:

            lea RDI,QWORD PTR [RIP+.L_446033]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_4196d3
.L_4192b0:

            lea RDI,QWORD PTR [RIP+.L_447ca7]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41967a
.L_4192d2:

            lea RDI,QWORD PTR [RIP+.L_446039]
            mov ECX,4
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_44603d]
            mov ECX,10
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_446047]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_419363

            movzx EAX,BYTE PTR [RDX+1]
            sub EAX,48
            cmp AL,9
            ja .L_419a94

            or DWORD PTR [R9],64
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_418580

            mov RDI,QWORD PTR [RSP]
            mov ESI,EAX
            call .L_439400

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419363:

            lea RDI,QWORD PTR [RIP+.L_446fb4]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_419765
.L_419385:

            lea RDI,QWORD PTR [RIP+.L_44604c]
            mov ECX,10
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_419695

            lea RDI,QWORD PTR [RIP+.L_446056]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_44605d]
            mov ECX,13
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8
.L_4193df:

            lea RDI,QWORD PTR [RIP+.L_44606a]
            mov ECX,5
            mov RSI,R12
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+24],RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_44606f]
            mov ECX,11
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_44607a]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_446081]
            mov ECX,13
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_44608e]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_446095]
            mov ECX,13
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_4460a2]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RSI,QWORD PTR [RIP+.L_4460a9]
            mov RDI,R12
            mov QWORD PTR [RSP+40],R9
            call strcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+40]
            je .L_4191a8

            lea RSI,QWORD PTR [RIP+.L_4447c9]
            mov RDI,R12
            call strcmp@PLT

            test EAX,EAX
            mov EBX,EAX
            mov R9,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+32]
            jne .L_4195f6

            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_4185e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_439490

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419530:

            lea RDI,QWORD PTR [RIP+.L_4460c5]
            mov ECX,4
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_419996

            lea RDI,QWORD PTR [RIP+.L_4460c9]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_419717

            or DWORD PTR [R9],1024
            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_4396a0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419596:

            lea RDI,QWORD PTR [RIP+.L_44604f]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_419228

            or DWORD PTR [R9],1
            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+64]
            mov RDX,R8
            mov QWORD PTR [RSP+24],R9
            call .L_418e60

            test EAX,EAX
            mov EBX,EAX
            mov R9,QWORD PTR [RSP+24]
            jne .L_4191aa

            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            call .L_439430

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_4195f6:

            lea RDI,QWORD PTR [RIP+.L_4460b6]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4191a8

            lea RDI,QWORD PTR [RIP+.L_447651]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_4199c2

            lea RDI,QWORD PTR [RIP+.L_447df2]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_419530

            movzx EAX,BYTE PTR [RDX+1]
            sub EAX,98
            cmp AL,10
            ja .L_4198c6

            lea RDX,QWORD PTR [RIP+.L_446354]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_41967a:

            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_439570

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419695:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+64]
            mov RDX,R8
            mov QWORD PTR [RSP+24],R9
            call .L_418e60

            test EAX,EAX
            mov EBX,EAX
            mov R9,QWORD PTR [RSP+24]
            jne .L_4191aa

            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            call .L_4390e0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_4196d3:

            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_4185e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_438d70

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_4196f8:

            or DWORD PTR [R9],2
            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_438850

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419717:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_4460cf]
            mov RCX,R12
            mov ESI,84
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R9
            mov EBX,4294967276
            call .L_432bc0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419746:

            or DWORD PTR [R9],8
            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_438cf0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419765:

            or DWORD PTR [R9],32
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_4185e0

            mov RDI,QWORD PTR [RSP]
            mov ESI,EAX
            call .L_439350

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_41978d:

            lea RDI,QWORD PTR [RIP+.L_447ca7]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4198c6

            mov RDI,QWORD PTR [RSP]
            mov ESI,40960
            mov QWORD PTR [RSP+24],R9
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
.L_4197c3:

            or DWORD PTR [R9],256
            jmp .L_4191aa
.L_4197cf:

            lea RDI,QWORD PTR [RIP+.L_4460c0]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_419a77

            lea RDI,QWORD PTR [RIP+.L_44666b]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41978d

            mov RDI,QWORD PTR [RSP]
            mov ESI,32768
            mov QWORD PTR [RSP+24],R9
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4197c3
.L_419821:

            lea RDI,QWORD PTR [RIP+.L_447dab]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4197cf

            mov RDI,QWORD PTR [RSP]
            mov ESI,16384
            mov QWORD PTR [RSP+24],R9
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4197c3
.L_419858:

            lea RDI,QWORD PTR [RIP+.L_4460bb]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_419821

            mov RDI,QWORD PTR [RSP]
            mov ESI,8192
            mov QWORD PTR [RSP+24],R9
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4197c3
.L_41988f:

            lea RDI,QWORD PTR [RIP+.L_4436c2]
            mov ECX,6
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_419858

            mov RDI,QWORD PTR [RSP]
            mov ESI,24576
            mov QWORD PTR [RSP+24],R9
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4197c3
.L_4198c6:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_4464a0]
            mov RCX,R8
            mov ESI,84
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R9
            mov EBX,4294967276
            call .L_432bc0

            mov RDI,QWORD PTR [RSP]
            mov ESI,32768
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419908:

            xor ESI,ESI
            mov RDI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_418aa0

            mov RBX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+16]
            xor EDX,EDX
            mov R9,QWORD PTR [RSP+24]
            test RBX,RBX
            mov QWORD PTR [RAX+8304],0
            je .L_419948

            mov RDI,RBX
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov RDX,RAX
.L_419948:

            mov RAX,QWORD PTR [RSP+16]
            mov RSI,RBX
            mov QWORD PTR [RSP+24],R9
            xor EBX,EBX
            lea RDI,QWORD PTR [RAX+8296]
            call .L_431240

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_41996d:

            or DWORD PTR [R9],4
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_4185e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_438cc0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419996:

            or DWORD PTR [R9],512
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_4185e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_439670

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_4199c2:

            or DWORD PTR [R9],16
            lea R12,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            mov RDI,R12
            call .L_4185e0

            mov RCX,QWORD PTR [RSP+56]
            mov R11,RAX
            xor EAX,EAX
            mov R9,QWORD PTR [RSP+24]
            cmp BYTE PTR [RCX],46
            je .L_419a5a
.L_4199ec:

            mov RDI,QWORD PTR [RSP]
            mov RDX,RAX
            mov RSI,R11
            mov QWORD PTR [RSP+24],R9
            call .L_4392c0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419a0a:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_4464d0]
            mov ESI,84
            xor EAX,EAX
            mov R12D,4294967276
            call .L_432bc0

            jmp .L_4191c9
.L_419a2d:

            movsx R8D,BYTE PTR [R12]
            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_446002]
            mov RCX,R12
            mov ESI,84
            mov EBX,4294967276
            call .L_432bc0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419a5a:

            add RCX,1
            mov QWORD PTR [RSP+56],RCX
            call .L_4185e0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4199ec
.L_419a72:

            call __stack_chk_fail@PLT
.L_419a77:

            mov RDI,QWORD PTR [RSP]
            mov ESI,4096
            mov QWORD PTR [RSP+24],R9
            call .L_438800

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4197c3
.L_419a94:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_446480]
            mov RCX,R8
            mov ESI,84
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R9
            mov EBX,4294967276
            call .L_432bc0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_4191aa
.L_419ac3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419ad0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_419ae1:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RBX
            xor EBX,EBX
            test RSI,RSI
            mov QWORD PTR [RSP+8],RSI
            je .L_419b01

            mov DWORD PTR [RSI],0
.L_419b01:

            lea R14,QWORD PTR [RSP+32]
            mov ESI,1
            mov RDI,R13
            mov RDX,R14
            call .L_4049d0

            test RAX,RAX
            mov RBX,RAX
            je .L_41a121

            mov RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+16],0
            mov DWORD PTR [RSP],0
            mov DWORD PTR [RSP+4],0
            mov RBP,RAX
.L_419b41:

            xor R15D,R15D
            cmp RAX,0
            jne .L_419e08

            nop
            nop
.L_419b50:

            lea RSI,QWORD PTR [RBP+1023]
            lea RDX,QWORD PTR [RBP+160]
            mov R12,RBP
            sub R12,RAX
            mov RDI,R13
            and ESI,4294966272
            lea RAX,QWORD PTR [RSI+RSI*1]
            cmp RSI,RDX
            mov RDX,R14
            cmovb RSI,RAX
            call .L_4049d0

            xor R8D,R8D
            test RAX,RAX
            je .L_419cb8
.L_419b8c:

            mov RBP,QWORD PTR [RSP+32]
            lea RBX,QWORD PTR [RAX+R12*1]
            lea RSI,QWORD PTR [RBX+R15*1]
            mov RAX,RBP
            sub RAX,R12
            mov RCX,RAX
            mov QWORD PTR [RSP+32],RAX
            sub RCX,R15
            cmp RCX,0
            jle .L_419ce0

            xor EDI,EDI
.L_419bb6:

            movzx EDX,BYTE PTR [RSI]
            cmp DL,10
            je .L_419c23

            cmp DL,13
            je .L_419c10

            test DL,DL
            je .L_419d00

            add RDI,1
            add RSI,1
            cmp RCX,RDI
            jne .L_419bb6

            test R8D,R8D
            mov R15,RAX
            mov EDX,1
            je .L_419cf1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419bf0:

            test R15,R15
            jle .L_419f9b
.L_419bf9:

            cmp DWORD PTR [RSP+4],2
            jg .L_419c8b
.L_419c04:

            xor EAX,EAX
            jmp .L_419e4d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419c10:

            sub RCX,RDI
            cmp RCX,1
            jle .L_419c23

            cmp BYTE PTR [RSI+1],10
            je .L_419d18
.L_419c23:

            lea R15,QWORD PTR [R15+RDI*1+1]
            mov R12D,1
.L_419c2e:

            test R15,R15
            jle .L_419f9b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419c40:

            mov ECX,DWORD PTR [RSP]
            test ECX,ECX
            je .L_419d33

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R15
            mov RDI,RBX
            call .L_4182d0

            test EAX,EAX
            jle .L_419bf9

            mov RAX,R15
            sub RAX,R12
            cmp BYTE PTR [RBX+RAX*1-1],92
            je .L_419e77

            cmp DWORD PTR [RSP],1
            jne .L_419e70

            add DWORD PTR [RSP+4],1
            mov EAX,DWORD PTR [RSP+4]
            cmp EAX,2
            jle .L_419e70
.L_419c8b:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_419e48

            cmp DWORD PTR [RSP+16],1
            jne .L_419e48

            mov DWORD PTR [RAX],1
            mov EAX,32
            jmp .L_419e4d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419cb8:

            mov RSI,QWORD PTR [RSP+32]
            cmp RSI,RBP
            jle .L_419f98

            mov RDX,R14
            mov RDI,R13
            call .L_4049d0

            mov R8D,1
            jmp .L_419b8c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419ce0:

            jne .L_419d07

            cmp RAX,R15
            sete DL
.L_419ce8:

            test R8D,R8D
            jne .L_419bf0
.L_419cf1:

            test DL,DL
            jne .L_419b50

            jmp .L_419bf0
          .byte 0x66
          .byte 0x90
.L_419d00:

            mov RCX,-1
.L_419d07:

            cmp RAX,RCX
            mov R15,RCX
            sete DL
            jmp .L_419ce8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419d18:

            lea R15,QWORD PTR [R15+RDI*1+2]
            mov R12D,2
            jmp .L_419c2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419d30:

            mov RBX,RDX
.L_419d33:

            movzx EAX,BYTE PTR [RBX]
            cmp AL,32
            je .L_419d3e

            cmp AL,9
            jne .L_419d55
.L_419d3e:

            sub QWORD PTR [RSP+32],1
            sub R15,1
            lea RDX,QWORD PTR [RBX+1]
            jne .L_419d30

            movzx EAX,BYTE PTR [RBX+1]
            mov RBX,RDX
.L_419d55:

            cmp AL,35
            mov EDX,EAX
            jbe .L_419e90

            cmp AL,47
            jne .L_419ea0

            lea RDI,QWORD PTR [RIP+.L_4460e6]
            mov ECX,4
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            mov DWORD PTR [RSP],EAX
            je .L_41a089

            lea RDI,QWORD PTR [RIP+.L_4460eb]
            mov ECX,6
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            mov DWORD PTR [RSP],EAX
            jne .L_419f9b

            lea RSI,QWORD PTR [R15-6]
            lea RDI,QWORD PTR [RBX+6]
            xor ECX,ECX
            mov EDX,1
            call .L_4182d0

            test EAX,EAX
            jle .L_419f9b
.L_419dcb:

            mov RDX,R15
            sub RDX,R12
            movzx EAX,BYTE PTR [RBX+RDX*1-1]
            add RBX,R15
            cmp AL,92
            mov EAX,2
            mov ECX,EAX
            cmovne ECX,DWORD PTR [RSP]
            mov DWORD PTR [RSP],ECX
.L_419de9:

            mov RAX,QWORD PTR [RSP+32]
            sub RAX,R15
            xor R15D,R15D
            cmp RAX,0
            mov QWORD PTR [RSP+32],RAX
            je .L_419b50

            nop
            nop
            nop
            nop
            nop
.L_419e08:

            jle .L_419e3a

            mov RCX,RBX
            xor R8D,R8D
.L_419e10:

            movzx EDX,BYTE PTR [RCX]
            cmp DL,10
            je .L_419f85

            cmp DL,13
            je .L_419f68

            test DL,DL
            je .L_419fc0

            add R8,1
            add RCX,1
            cmp RAX,R8
            jne .L_419e10
.L_419e3a:

            mov R15,RAX
            jmp .L_419b50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419e48:

            mov EAX,32
.L_419e4d:

            mov RBX,QWORD PTR [RSP+40]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41a12b

            add RSP,56
.L_419e65:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_419e70:

            mov DWORD PTR [RSP],0
.L_419e77:

            mov RAX,QWORD PTR [RSP+32]
            add RBX,R15
            sub RAX,R15
            mov QWORD PTR [RSP+32],RAX
            jmp .L_419b41
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419e90:

            movabs RCX,34359747584
            bt RCX,RAX
            jb .L_419e77
.L_419ea0:

            lea R9,QWORD PTR [RBX+R15*1]
            cmp RBX,R9
            jae .L_419feb

            lea RDI,QWORD PTR [RIP+.L_446380]
            cmp BYTE PTR [RDI+RAX*1],0
            je .L_41a117

            mov RDI,RBX
            jmp .L_419edf
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419ec8:

            movzx EAX,BYTE PTR [RDI]
            lea RCX,QWORD PTR [RIP+.L_446380]
            cmp BYTE PTR [RCX+RAX*1],0
            mov RDX,RAX
            je .L_419fc9
.L_419edf:

            add RDI,1
            cmp R9,RDI
            jne .L_419ec8

            xor R10D,R10D
            xor ESI,ESI
.L_419eed:

            xor EDX,EDX
            mov ECX,R10D
            mov QWORD PTR [RSP+24],R9
            mov DWORD PTR [RSP+20],R10D
            call .L_4182d0

            test EAX,EAX
            js .L_419f9b

            mov EDX,DWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+20]
            mov R9,QWORD PTR [RSP+24]
            test EDX,EDX
            jne .L_41a0c2

            test R10D,R10D
            mov DWORD PTR [RSP+16],R10D
            jne .L_419f48

            test EAX,EAX
            setne AL
            movzx EAX,AL
            neg EAX
            mov DWORD PTR [RSP+16],EAX
.L_419f37:

            mov RAX,R15
            sub RAX,R12
            cmp BYTE PTR [RBX+RAX*1-1],92
            je .L_41a0f0
.L_419f48:

            add DWORD PTR [RSP+4],1
            mov EAX,DWORD PTR [RSP+4]
            cmp EAX,2
            jg .L_419c8b

            mov RBX,R9
            jmp .L_419de9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419f68:

            sub RAX,R8
            cmp RAX,1
            jle .L_419f85

            cmp BYTE PTR [RCX+1],10
            lea R15,QWORD PTR [R8+2]
            mov R12D,2
            je .L_419c40
.L_419f85:

            lea R15,QWORD PTR [R8+1]
            mov R12D,1
            jmp .L_419c40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419f98:

            xor R15D,R15D
.L_419f9b:

            mov EAX,DWORD PTR [RSP+4]
            cmp EAX,2
            jg .L_419c8b

            test EAX,EAX
            jle .L_419c04

            test R15,R15
            je .L_419c8b

            xor EAX,EAX
            jmp .L_419e4d
.L_419fc0:

            mov R15,-1
            jmp .L_419f9b
.L_419fc9:

            mov EAX,1
.L_419fce:

            cmp DL,32
            ja .L_419feb

            movabs RCX,4294977024
            bt RCX,RDX
            jae .L_419feb

            test EAX,EAX
            jne .L_41a109
.L_419feb:

            mov RDI,R15
            sub RDI,R12
            add RDI,RBX
            lea RAX,QWORD PTR [RDI-2]
            cmp RBX,RAX
            ja .L_41a0b0
.L_41a001:

            cmp BYTE PTR [RDI-1],92
            je .L_419f9b

            xor ESI,ESI
            mov RAX,RDI
            mov R10D,1
            jmp .L_41a03c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a018:

            cmp DL,9
            je .L_41a054

            movzx EAX,BYTE PTR [RCX]
            lea R11,QWORD PTR [RIP+.L_446380]
            cmp BYTE PTR [R11+RAX*1],0
            je .L_419f9b

            cmp DL,47
            mov RAX,RCX
            cmove ESI,R10D
.L_41a03c:

            lea RCX,QWORD PTR [RAX-1]
            mov R11D,EDI
            sub R11D,EAX
            cmp RBX,RCX
            ja .L_41a054

            movzx EDX,BYTE PTR [RAX-1]
            cmp DL,32
            jne .L_41a018
.L_41a054:

            test R11D,R11D
            je .L_419f9b

            and ESI,1
            je .L_419f9b

            cmp BYTE PTR [RAX],47
            je .L_419f9b

            mov RSI,R15
            movsxd R11,R11D
            mov RDI,RBX
            sub RSI,R12
            mov R10D,1
            sub RSI,R11
            jmp .L_419eed
.L_41a089:

            lea RSI,QWORD PTR [R15-4]
            lea RDI,QWORD PTR [RBX+4]
            xor ECX,ECX
            xor EDX,EDX
            call .L_4182d0

            test EAX,EAX
            jg .L_419dcb

            jmp .L_419f9b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a0b0:

            lea RAX,QWORD PTR [RDI-1]
            cmp RBX,RAX
            jbe .L_41a001

            jmp .L_419f9b
.L_41a0c2:

            cmp DWORD PTR [RSP+16],1
            je .L_41a0d7

            test R10D,R10D
            je .L_419f37

            jmp .L_419f48
.L_41a0d7:

            test R10D,R10D
            jne .L_41a0ff

            test EAX,EAX
            je .L_419f37

            jmp .L_419f9b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a0f0:

            mov RBX,R9
            mov DWORD PTR [RSP],1
            jmp .L_419de9
.L_41a0ff:

            mov DWORD PTR [RSP+16],R10D
            jmp .L_419f48
.L_41a109:

            mov RSI,R9
            xor R10D,R10D
            sub RSI,RDI
            jmp .L_419eed
.L_41a117:

            xor EAX,EAX
            mov RDI,RBX
            jmp .L_419fce
.L_41a121:

            mov EAX,4294967295
            jmp .L_419e4d
.L_41a12b:

            call __stack_chk_fail@PLT
.L_41a130:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,248
.L_41a144:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+232],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+32],RSI
            mov RBX,QWORD PTR [RAX]
            mov EDI,DWORD PTR [RBX+48]
            test EDI,EDI
            js .L_41a179

            call close@PLT

            mov DWORD PTR [RBX+48],4294967295
.L_41a179:

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41a8cb
.L_41a18b:

            mov EAX,DWORD PTR [RBX+52]
            mov R13,QWORD PTR [RBX+72]
            lea R12,QWORD PTR [RIP+.L_4451be]
            mov DWORD PTR [R14+16],EAX
            mov RAX,QWORD PTR [RBX+56]
            test R13,R13
            mov QWORD PTR [R14+24],RAX
            je .L_41a6a8

            lea RAX,QWORD PTR [RSP+60]
            mov QWORD PTR [RSP],R14
            mov R15,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RBX+8272]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41a20a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a1e0:

            mov BYTE PTR [R13+25],1
            mov RAX,QWORD PTR [RBX+8280]
            test RAX,RAX
            jne .L_41a538
.L_41a1f5:

            mov R13,QWORD PTR [RBX+72]
.L_41a1f9:

            mov R13,QWORD PTR [R13]
            test R13,R13
            mov QWORD PTR [RBX+72],R13
            je .L_41a6a8
.L_41a20a:

            mov RSI,QWORD PTR [R13+16]
            mov ECX,3
            mov RDI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41a1e0

            cmp BYTE PTR [R13+25],0
            jne .L_41a1f9

            mov QWORD PTR [RSP+64],R15
            mov ESI,32768
            mov RDI,R15
            mov BYTE PTR [R13+25],1
            call .L_438800

            mov RDI,QWORD PTR [RSP+64]
            xor ESI,ESI
            call .L_439490

            mov RCX,QWORD PTR [R13+8]
            mov R8,QWORD PTR [RSP+8]
            mov RDX,RBX
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [RBX+8304],0
            mov DWORD PTR [RSP+60],0
            call .L_419030

            cmp BYTE PTR [R13+24],0
            mov EBP,EAX
            jne .L_41a610

            mov R14,QWORD PTR [RBX+8280]
            test R14,R14
            jne .L_41a6d0
.L_41a295:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+16]
            call .L_4312c0

            mov RSI,QWORD PTR [RBX+8272]
            mov RDI,QWORD PTR [RSP+64]
            call .L_439380

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,16384
            je .L_41a2cc

            mov QWORD PTR [RBX+8280],R14
.L_41a2cc:

            mov R10,QWORD PTR [RSP+64]
.L_41a2d1:

            cmp BYTE PTR [RBX+8336],0
            je .L_41a4ef

            cmp QWORD PTR [RBX+8304],0
            mov DWORD PTR [RBX+48],4294967295
            je .L_41a6b8

            mov R13,QWORD PTR [RBX+8296]
.L_41a2fa:

            mov RDI,R10
            call .L_437b90

            cmp EAX,32768
            je .L_41a578

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,16384
            je .L_41a578

            mov ESI,DWORD PTR [RBX+48]
.L_41a325:

            test ESI,ESI
            js .L_41a5e0
.L_41a32d:

            mov RDX,QWORD PTR [RSP+24]
            mov EDI,1
            call __fxstat@PLT

            cmp EAX,-1
            je .L_41a885
.L_41a345:

            mov EAX,DWORD PTR [RSP+104]
            mov EDX,EAX
            and EDX,61440
            cmp EDX,32768
            je .L_41a702

            cmp EDX,40960
            je .L_41a72f
.L_41a369:

            mov EDX,EAX
            and EDX,49152
            cmp EDX,49152
            je .L_41a75c
.L_41a37d:

            and EAX,61440
            cmp EAX,8192
            je .L_41a785
.L_41a38d:

            cmp EAX,24576
            je .L_41a7aa
.L_41a398:

            cmp EAX,16384
            je .L_41a7cf
.L_41a3a3:

            cmp EAX,4096
            je .L_41a7f4
.L_41a3ae:

            mov EDI,DWORD PTR [RBX+48]
            test EDI,EDI
            jns .L_41a6e6

            mov DWORD PTR [RBX+48],4294967295
            test BYTE PTR [RSP+61],8
            jne .L_41a1f5
.L_41a3cb:

            test EBP,EBP
            mov R14,QWORD PTR [RSP]
            jne .L_41a506

            mov RDI,QWORD PTR [RSP+64]
            mov EBP,4294967276
            call .L_438170

            lea RDX,QWORD PTR [RIP+.L_446500]
            mov RCX,RAX
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            call .L_432bc0

            jmp .L_41a506
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a408:

            mov ESI,DWORD PTR [RSP+112]
            call .L_438cc0

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
            test AH,6
            je .L_41a424

            test AH,16
            je .L_41a436
.L_41a424:

            mov ESI,DWORD PTR [RSP+108]
            call .L_439670

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41a436:

            mov EDX,EAX
            and EDX,4112
            cmp EDX,16
            je .L_41a461

            mov RDX,QWORD PTR [RSP+176]
            mov RSI,QWORD PTR [RSP+168]
            call .L_4392c0

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41a461:

            mov EDX,EAX
            and EDX,4128
            cmp EDX,32
            je .L_41a480

            mov ESI,DWORD PTR [RSP+96]
            call .L_439350

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41a480:

            mov EDX,EAX
            and EDX,4160
            cmp EDX,64
            je .L_41a49f

            mov ESI,DWORD PTR [RSP+104]
            call .L_439400

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41a49f:

            and EAX,4224
            add EAX,-128
            je .L_41a4bb

            mov RSI,QWORD PTR [RSP+128]
            call .L_439490

            mov RDI,QWORD PTR [RSP+64]
.L_41a4bb:

            mov RSI,QWORD PTR [RSP+88]
            call .L_438d70

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+64]
            call .L_4390e0

            mov RDI,QWORD PTR [RBX+8320]
            lea RDX,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            call .L_43a130

            mov R10,QWORD PTR [RSP+64]
.L_41a4ef:

            mov RDI,R10
            call .L_4383c0

            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+8328],RAX
.L_41a506:

            mov RCX,QWORD PTR [RSP+232]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41b065

            add RSP,248
.L_41a526:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a538:

            mov RDX,QWORD PTR [RBX+8272]
            lea RAX,QWORD PTR [RDX+RAX*1-1]
            cmp RDX,RAX
            jbe .L_41a559

            jmp .L_41a562
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a550:

            sub RAX,1
            cmp RDX,RAX
            ja .L_41a562
.L_41a559:

            cmp BYTE PTR [RAX],47
            jne .L_41a550

            sub RAX,1
.L_41a562:

            sub RAX,RDX
            add RAX,1
            mov QWORD PTR [RBX+8280],RAX
            jmp .L_41a1f5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a578:

            mov ESI,524288
            mov RDI,R13
            xor EAX,EAX
            call open@PLT

            mov DWORD PTR [RBX+48],EAX
            mov EDI,EAX
            call .L_432e30

            mov ESI,DWORD PTR [RBX+48]
            cmp ESI,-1
            jne .L_41a325

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            cmp ESI,2
            jne .L_41a5b3

            cmp QWORD PTR [RBX+8304],0
            je .L_41a5e0
.L_41a5b3:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_446155]
            xor EAX,EAX
            mov RCX,R13
            mov EBP,4294967276
            call .L_432bc0

            mov ESI,DWORD PTR [RBX+48]
            test ESI,ESI
            jns .L_41a32d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a5e0:

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,R13
            mov EDI,1
            call __lxstat@PLT

            cmp EAX,-1
            jne .L_41a345

            test BYTE PTR [RSP+61],8
            jne .L_41a1f5
.L_41a606:

            mov R10,QWORD PTR [RSP+64]
            jmp .L_41a4ef
.L_41a610:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            call .L_439380

            mov R14,QWORD PTR [R13+32]
            mov R10,QWORD PTR [RSP+64]
            test R14,R14
            jne .L_41a645

            jmp .L_41a2d1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a638:

            mov R14,QWORD PTR [R14+32]
            test R14,R14
            je .L_41a2d1
.L_41a645:

            cmp BYTE PTR [R14+24],0
            je .L_41a638

            cmp BYTE PTR [R14+25],0
            jne .L_41a638

            mov EAX,DWORD PTR [R14+28]
            cmp DWORD PTR [R13+28],EAX
            jne .L_41a638

            mov RSI,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+32],R10
            call strcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+32]
            jne .L_41a638

            mov RCX,QWORD PTR [R14+8]
            mov R8,QWORD PTR [RSP+8]
            mov RSI,R10
            mov RDI,QWORD PTR [RSP]
            mov BYTE PTR [R14+25],1
            mov RDX,RBX
            call .L_419030

            cmp EBP,EAX
            mov R10,QWORD PTR [RSP+64]
            cmovg EBP,EAX
            jmp .L_41a638
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a6a8:

            mov EBP,1
            jmp .L_41a506
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a6b8:

            mov RDI,R10
            call .L_438170

            mov R10,QWORD PTR [RSP+64]
            mov R13,RAX
            jmp .L_41a2fa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a6d0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_44766b]
            call .L_4312c0

            jmp .L_41a295
.L_41a6e6:

            call close@PLT

            mov DWORD PTR [RBX+48],4294967295
            test BYTE PTR [RSP+61],8
            je .L_41a3cb

            jmp .L_41a1f5
.L_41a702:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,32768
            je .L_41a810

            mov EAX,DWORD PTR [RSP+104]
            mov EDX,EAX
            and EDX,61440
            cmp EDX,40960
            jne .L_41a369
.L_41a72f:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,40960
            je .L_41a810

            mov EAX,DWORD PTR [RSP+104]
            mov EDX,EAX
            and EDX,49152
            cmp EDX,49152
            jne .L_41a37d
.L_41a75c:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,49152
            je .L_41a810

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,8192
            jne .L_41a38d
.L_41a785:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,8192
            je .L_41a810

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,24576
            jne .L_41a398
.L_41a7aa:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,24576
            je .L_41a810

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,16384
            jne .L_41a3a3
.L_41a7cf:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,16384
            je .L_41a810

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,4096
            jne .L_41a3ae
.L_41a7f4:

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,4096
            jne .L_41a3ae

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a810:

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,EAX
            and EDX,4097
            cmp EDX,1
            je .L_41a866

            call .L_437b90

            cmp EAX,8192
            je .L_41a84e

            mov RDI,QWORD PTR [RSP+64]
            call .L_437b90

            cmp EAX,24576
            je .L_41a84e

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41a866
.L_41a84e:

            mov RDI,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+120]
            call .L_439430

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41a866:

            test AL,12
            je .L_41a408

            test AH,16
            jne .L_41a408

            test AH,6
            jne .L_41a436

            jmp .L_41a424
.L_41a885:

            mov DWORD PTR [RSP+32],EAX
            mov EBP,4294967276
            call __errno_location@PLT

            mov RDI,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_446163]
            xor EAX,EAX
            mov RCX,R13
            call .L_432bc0

            mov EDI,DWORD PTR [RBX+48]
            call close@PLT

            mov R8D,DWORD PTR [RSP+32]
            mov DWORD PTR [RBX+48],R8D
            test BYTE PTR [RSP+61],8
            je .L_41a606

            jmp .L_41a1f5
.L_41a8cb:

            call .L_43a020

            test RAX,RAX
            mov QWORD PTR [RBX+8320],RAX
            je .L_41ad97

            mov RDI,RAX
            mov ESI,524288
            call .L_43a070

            lea RAX,QWORD PTR [RIP+.L_446177]
            lea RSI,QWORD PTR [RSP+60]
            mov DWORD PTR [RBX+52],524288
            mov RDI,R14
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RSP+64],0
            call .L_419ad0

            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a930:

            mov QWORD PTR [RSP],0
            xor R15D,R15D
.L_41a93b:

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,1
            mov RDI,R14
            call .L_4049d0

            test RAX,RAX
            mov RBP,RAX
            je .L_41afb4

            mov R12,QWORD PTR [RSP+72]
            test R12,R12
            js .L_41ad8d

            mov RDX,R12
            mov ESI,10
            mov RDI,RAX
            call memchr@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_41a98e

            mov R12,RAX
            sub R12,RBP
            add R12,1
            mov QWORD PTR [RSP+72],R12
.L_41a98e:

            add R12,R15
            cmp R12,65535
            jg .L_41ad77

            lea RSI,QWORD PTR [R12+1]
            mov RDI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_41af5c

            mov RDI,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,RBP
            add RDI,R15
            call memcpy@PLT

            mov RSI,QWORD PTR [RSP+72]
            mov RDI,R14
            call .L_404a20

            mov RSI,QWORD PTR [RSP+72]
            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP]
            add RSI,R15
            mov BYTE PTR [RAX+RSI*1],0
            mov R8,QWORD PTR [RBX]
            mov R15,RSI
            add RDX,R8
            movzx EAX,BYTE PTR [RDX]
            nop
            nop
            nop
            nop
            nop
.L_41a9f8:

            test AL,AL
            je .L_41aa20
.L_41a9fc:

            cmp AL,10
            je .L_41aa70

            cmp AL,35
            je .L_41aa38

            cmp AL,92
            movzx ECX,BYTE PTR [RDX+1]
            je .L_41aa50

            mov EAX,ECX
            add RDX,1
            test AL,AL
            jne .L_41a9fc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aa20:

            mov RBP,RDX
            nop
            nop
            nop
            nop
            nop
.L_41aa28:

            sub RBP,R8
            mov QWORD PTR [RSP],RBP
            jmp .L_41a93b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41aa38:

            test R13,R13
            je .L_41aa20

            movzx EAX,BYTE PTR [RDX+1]
            add RDX,1
            jmp .L_41a9f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aa50:

            cmp CL,10
            je .L_41ada1

            test CL,CL
            lea RBP,QWORD PTR [RDX+1]
            je .L_41aa28

            movzx EAX,BYTE PTR [RDX+2]
            add RDX,2
            jmp .L_41a9f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41aa70:

            test RSI,RSI
            je .L_41afb4

            js .L_41b044

            movzx EAX,BYTE PTR [R8]
            cmp AL,9
            je .L_41aa90

            cmp AL,32
            jne .L_41aaa4

            nop
            nop
            nop
            nop
            nop
.L_41aa90:

            add R8,1
            movzx EAX,BYTE PTR [R8]
            sub R15,1
            cmp AL,32
            je .L_41aa90

            cmp AL,9
            je .L_41aa90
.L_41aaa4:

            cmp AL,35
            jbe .L_41ab70

            cmp AL,47
            jne .L_41ab80

            lea RDI,QWORD PTR [RIP+.L_4460e6]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41adb6

            movzx EAX,BYTE PTR [R8+4]
            cmp AL,32
            je .L_41aae3

            cmp AL,9
            jne .L_41afd3
.L_41aae3:

            lea R12,QWORD PTR [R8+4]
            lea R13,QWORD PTR [RSP+64]
            jmp .L_41ab45
          .byte 0x66
          .byte 0x90
.L_41aaf0:

            lea RSI,QWORD PTR [RIP+.L_44611e]
            mov RDI,RBP
            call strcspn@PLT

            mov ESI,61
            lea R12,QWORD PTR [RBP+RAX*1]
            mov RDI,RBP
            mov R15,RAX
            call strchr@PLT

            mov RDX,RAX
            mov RSI,RBP
            mov RDI,R13
            sub RDX,RBP
            cmp R12,RAX
            cmovb RDX,R15
            call .L_418d20

            mov RCX,R15
            mov RDX,RBP
            mov RSI,R13
            mov RDI,R14
            call .L_418dd0

            test EAX,EAX
            jne .L_41ad66
.L_41ab45:

            lea RSI,QWORD PTR [RIP+.L_44611e]
            mov RDI,R12
            call strspn@PLT

            lea RBP,QWORD PTR [R12+RAX*1]
            cmp BYTE PTR [RBP],0
            jne .L_41aaf0

            nop
            nop
.L_41ab60:

            add QWORD PTR [RSP+16],1
            jmp .L_41a930
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ab70:

            movabs RDX,34359747585
            bt RDX,RAX
            jb .L_41ab60
.L_41ab80:

            mov EDI,40
            mov QWORD PTR [RSP],R8
            mov EBP,DWORD PTR [RSP+60]
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            mov R8,QWORD PTR [RSP]
            je .L_41b002

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            xor EAX,EAX
            cmp QWORD PTR [RSP+24],0
            mov WORD PTR [R12+24],AX
            mov DWORD PTR [R12+28],0
            mov QWORD PTR [R12+32],0
            je .L_41af98

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],R12
.L_41abe7:

            test EBP,EBP
            mov RDI,R15
            je .L_41af14

            test R15,R15
            jg .L_41ac1d

            jmp .L_41afcb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ac00:

            movabs RCX,4294977024
            bt RCX,RAX
            jae .L_41ac2a

            sub RDI,1
            mov R15,RDI
            je .L_41afaa
.L_41ac1d:

            movzx EAX,BYTE PTR [R8+R15*1-1]
            mov RDI,R15
            cmp AL,32
            jbe .L_41ac00
.L_41ac2a:

            lea RDX,QWORD PTR [R8+1]
            mov RBP,R8
            lea RAX,QWORD PTR [RDX+R15*1]
.L_41ac35:

            movzx ECX,BYTE PTR [RDX-1]
            cmp CL,32
            ja .L_41ac55

            movabs RSI,4294977024
            shr RSI,CL
            mov RCX,RSI
            and ECX,1
            cmovne RBP,RDX
.L_41ac55:

            add RDX,1
            cmp RAX,RDX
            jne .L_41ac35
.L_41ac5e:

            lea R15,QWORD PTR [R8+RDI*1]
            mov QWORD PTR [RSP+24],RBP
            mov R13,R8
            mov R9,R15
            sub R9,RBP
.L_41ac70:

            lea RDI,QWORD PTR [R9+1]
            mov QWORD PTR [RSP],R9
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+16],RAX
            mov R9,QWORD PTR [RSP]
            je .L_41b002

            mov RDX,R9
            mov RSI,RBP
            mov RDI,RAX
            mov QWORD PTR [RSP],R9
            call memcpy@PLT

            mov R9,QWORD PTR [RSP]
            mov RDI,RAX
            mov RSI,R12
            mov BYTE PTR [RAX+R9*1],0
            call .L_418aa0

            mov RCX,QWORD PTR [R12+16]
            xor EAX,EAX
.L_41acbc:

            movsx EDX,BYTE PTR [RCX]
            test DL,DL
            je .L_41ace7
.L_41acc3:

            shl EAX,4
            add RCX,1
            add EAX,EDX
            mov EDX,EAX
            and EDX,4026531840
            je .L_41acbc

            shr EDX,24
            xor EAX,EDX
            movsx EDX,BYTE PTR [RCX]
            and EAX,268435455
            test DL,DL
            jne .L_41acc3
.L_41ace7:

            mov DWORD PTR [R12+28],EAX
            and EAX,1023
            lea RAX,QWORD PTR [RBX+RAX*8]
            mov RDX,QWORD PTR [RAX+80]
            test RDX,RDX
            jne .L_41ad0b

            jmp .L_41afa1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ad08:

            mov RDX,RAX
.L_41ad0b:

            mov RAX,QWORD PTR [RDX+32]
            test RAX,RAX
            jne .L_41ad08

            mov QWORD PTR [RDX+32],R12
.L_41ad18:

            mov RBP,QWORD PTR [RSP+64]
            test RBP,RBP
            je .L_41ae77

            lea R15,QWORD PTR [R12+8]
            mov QWORD PTR [RSP],RBX
            jmp .L_41ad45
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ad38:

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            je .L_41ae73
.L_41ad45:

            mov RBX,QWORD PTR [RBP+8]
            mov RDI,RBX
            call strlen@PLT

            mov RDX,RBX
            mov RCX,RAX
            mov RSI,R15
            mov RDI,R14
            call .L_418dd0

            test EAX,EAX
            je .L_41ad38
.L_41ad66:

            mov EBP,EAX
.L_41ad68:

            mov RDI,QWORD PTR [RSP+64]
            call .L_418840

            jmp .L_41a506
.L_41ad77:

            lea RDX,QWORD PTR [RIP+.L_4460f2]
            mov ESI,84
            mov RDI,R14
            xor EAX,EAX
            call .L_432bc0
.L_41ad8d:

            mov RDI,QWORD PTR [RSP+64]
            call .L_418840
.L_41ad97:

            mov EBP,4294967266
            jmp .L_41a506
.L_41ada1:

            mov BYTE PTR [R8+RSI*1-2],0
            lea R15,QWORD PTR [RSI-2]
            mov R8,QWORD PTR [RBX]
            mov RBP,RDX
            jmp .L_41aa28
.L_41adb6:

            lea RDI,QWORD PTR [RIP+.L_4460eb]
            mov ECX,6
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41afd3

            movzx EAX,BYTE PTR [R8+6]
            cmp AL,32
            je .L_41ade5

            cmp AL,9
            jne .L_41afd3
.L_41ade5:

            lea R13,QWORD PTR [R8+6]
            mov ESI,61
            mov RDI,R13
            call strchr@PLT

            test RAX,RAX
            jne .L_41b024

            lea RBP,QWORD PTR [RIP+.L_44611e]
            lea R12,QWORD PTR [RSP+64]
            jmp .L_41ae53
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ae10:

            mov RSI,RBP
            mov RDI,R13
            call strcspn@PLT

            cmp RAX,3
            mov R15,RAX
            jne .L_41ae42

            lea RDI,QWORD PTR [RIP+.L_44665f]
            mov ECX,3
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41af44
.L_41ae42:

            mov RDX,R15
            mov RSI,R13
            mov RDI,R12
            call .L_418d20
.L_41ae50:

            add R13,R15
.L_41ae53:

            mov RDI,R13
            mov RSI,RBP
            call strspn@PLT

            add R13,RAX
            cmp BYTE PTR [R13],0
            jne .L_41ae10

            add QWORD PTR [RSP+16],1
            jmp .L_41a930
.L_41ae73:

            mov RBX,QWORD PTR [RSP]
.L_41ae77:

            mov QWORD PTR [RSP],RBX
            lea R15,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+40],R12
            mov RBX,QWORD PTR [RSP+24]
            jmp .L_41aebf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ae90:

            cmp R13,RAX
            jb .L_41af0f

            sub RAX,R12
            mov RDX,RAX
.L_41ae9b:

            mov RSI,R12
            mov RDI,R15
            call .L_418d20

            mov RCX,RBP
            mov RDX,R12
            mov RSI,R15
            mov RDI,R14
            call .L_418dd0

            test EAX,EAX
            jne .L_41ad66
.L_41aebf:

            lea RSI,QWORD PTR [RIP+.L_44611e]
            mov RDI,R13
            call strspn@PLT

            lea R12,QWORD PTR [R13+RAX*1]
            cmp BYTE PTR [R12],0
            je .L_41af7f

            cmp R12,RBX
            jae .L_41af7f

            lea RSI,QWORD PTR [RIP+.L_44611e]
            mov RDI,R12
            call strcspn@PLT

            mov ESI,61
            mov RDI,R12
            mov RBP,RAX
            lea R13,QWORD PTR [R12+RAX*1]
            call strchr@PLT

            test RAX,RAX
            jne .L_41ae90
.L_41af0f:

            mov RDX,RBP
            jmp .L_41ae9b
.L_41af14:

            lea RSI,QWORD PTR [RIP+.L_44611e]
            mov RDI,R8
            mov QWORD PTR [RSP],R8
            call strcspn@PLT

            mov R8,QWORD PTR [RSP]
            mov R9,RAX
            lea R13,QWORD PTR [R8+RAX*1]
            mov RBP,R8
            lea RAX,QWORD PTR [R13+R15*1]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_41ac70
.L_41af44:

            mov RDI,QWORD PTR [RSP+64]
            call .L_418840

            mov QWORD PTR [RSP+64],0
            jmp .L_41ae50
.L_41af5c:

            lea RDX,QWORD PTR [RIP+.L_446100]
            mov RDI,R14
            mov ESI,12
            call .L_432bc0

            mov RDI,QWORD PTR [RSP+64]
            call .L_418840

            jmp .L_41ad97
.L_41af7f:

            mov R12,QWORD PTR [RSP+40]
            mov RBX,QWORD PTR [RSP]
            add QWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+24],R12
            jmp .L_41a930
.L_41af98:

            mov QWORD PTR [RBX+64],R12
            jmp .L_41abe7
.L_41afa1:

            mov QWORD PTR [RAX+80],R12
            jmp .L_41ad18
.L_41afaa:

            mov RBP,R8
            xor EDI,EDI
            jmp .L_41ac5e
.L_41afb4:

            mov RAX,QWORD PTR [RBX+64]
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RBX+72],RAX
            call .L_418840

            jmp .L_41a18b
.L_41afcb:

            mov RBP,R8
            jmp .L_41ac5e
.L_41afd3:

            mov RCX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_446140]
            mov ESI,84
            mov RDI,R14
            xor EAX,EAX
            mov EBP,4294967266
            call .L_432bc0

            mov RDI,QWORD PTR [RSP+64]
            call .L_418840

            jmp .L_41a506
.L_41b002:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_443dae]
            mov RDI,R14
            xor EAX,EAX
            mov EBP,4294967266
            call .L_432bc0

            jmp .L_41ad68
.L_41b024:

            lea RDX,QWORD PTR [RIP+.L_446123]
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            mov EBP,4294967266
            call .L_432bc0

            jmp .L_41ad68
.L_41b044:

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RSI
            call .L_418840

            mov RSI,QWORD PTR [RSP]
            test ESI,ESI
            mov EBP,ESI
            je .L_41a18b

            jmp .L_41a506
.L_41b065:

            call __stack_chk_fail@PLT
.L_41b06a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b070:

            push RBX
            xor EDX,EDX
            mov ESI,6
            mov RBX,RDI
            call .L_4049d0

            test RAX,RAX
            je .L_41b0af

            cmp DWORD PTR [RAX],1920232739
            je .L_41b0a0
.L_41b08d:

            mov RDI,RBX
            xor ESI,ESI
            pop RBX
            jmp .L_419ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b0a0:

            cmp WORD PTR [RAX+4],25957
            jne .L_41b08d

            mov EAX,48
            pop RBX
            ret 
.L_41b0af:

            mov EAX,4294967295
            pop RBX
            ret 
.L_41b0b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b0c0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_446530]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_436df0

            cmp EAX,-30
            je .L_41b159

            mov ESI,8344
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41b160

            mov DWORD PTR [RAX+48],4294967295
            lea RAX,QWORD PTR [RIP+.L_418880]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_41a130]
            lea R8,QWORD PTR [RIP+.L_418cc0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_418930]
            push 0
            lea RCX,QWORD PTR [RIP+.L_41b070]
            lea RDX,QWORD PTR [RIP+.L_446177]
            mov RSI,RBX
            push RAX
            lea RAX,QWORD PTR [RIP+.L_418960]
            mov RDI,RBP
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_41b159

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_41b159:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_41b160:

            lea RDX,QWORD PTR [RIP+.L_44617d]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_41b159
.L_41b17d:

            nop
            nop
            nop
.L_41b180:

            mov EAX,3
            ret 
.L_41b186:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b190:

            test RDI,RDI
            je .L_41b1b0

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_41b1b0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_41b1b0

            mov EAX,DWORD PTR [RAX+20240]
            ret 
.L_41b1b0:

            mov EAX,4294967295
            ret 
.L_41b1b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b1c0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41b1d1:

            mov RAX,QWORD PTR [RSI]
            test RAX,RAX
            je .L_41b2f0

            test EDX,EDX
            js .L_41b2d0

            cmp DWORD PTR [RSI+8],EDX
            mov R13,RSI
            jle .L_41b2d0

            movsxd RBP,EDX
            mov RBX,RCX
            mov ECX,R9D
            shl RBP,3
            sub ECX,R8D
            mov R12D,1
            add RAX,RBP
            shl R12D,CL
            mov R14D,R9D
            mov ESI,DWORD PTR [RAX]
            cmp ESI,DWORD PTR [RAX+4]
            je .L_41b240

            cmp R9D,R8D
            lea R11D,DWORD PTR [R8+1]
            jne .L_41b270

            mov DWORD PTR [RBX],R11D
            mov DWORD PTR [RBX+4],EDX
.L_41b226:

            xor EAX,EAX
.L_41b228:

            add RSP,24
.L_41b22c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b240:

            test R12D,R12D
            jle .L_41b226

            lea EAX,DWORD PTR [R12-1]
            mov RCX,RBX
            lea RAX,QWORD PTR [RBX+RAX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b258:

            mov DWORD PTR [RCX],R8D
            mov DWORD PTR [RCX+4],ESI
            add RCX,8
            cmp RAX,RCX
            jne .L_41b258

            jmp .L_41b226
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b270:

            mov R8D,R11D
            mov RCX,RBX
            mov EDX,ESI
            mov RSI,R13
            mov DWORD PTR [RSP+12],R11D
            call .L_41b1c0

            mov DWORD PTR [RSP+8],EAX
            mov EAX,R12D
            mov R11D,DWORD PTR [RSP+12]
            shr EAX,31
            mov R9D,R14D
            mov RSI,R13
            add R12D,EAX
            mov RAX,QWORD PTR [R13]
            mov RDI,R15
            sar R12D,1
            mov R8D,R11D
            movsxd R12,R12D
            mov EDX,DWORD PTR [RAX+RBP*1+4]
            lea RCX,QWORD PTR [RBX+R12*8]
            call .L_41b1c0

            or EAX,DWORD PTR [RSP+8]
            add RSP,24
.L_41b2c2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b2d0:

            lea RDX,QWORD PTR [RIP+.L_446718]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_41b228
.L_41b2f0:

            lea RDX,QWORD PTR [RIP+.L_446552]
            mov ESI,84
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_41b228
.L_41b30b:

            nop
            nop
            nop
            nop
            nop
.L_41b310:

            mov RDI,RSI
            jmp free@PLT
.L_41b318:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b320:

            mov RDI,RSI
            jmp malloc@PLT
.L_41b328:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b330:

            push RBP
            push RBX
            sub RSP,8
            movsxd RDX,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI]
            cmp DWORD PTR [RDI+12],EDX
            je .L_41b360
.L_41b342:

            movabs RCX,-4294967297
            mov QWORD PTR [RAX+RDX*8],RCX
            mov EAX,1
.L_41b355:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b360:

            test EDX,EDX
            jle .L_41b390

            lea EBX,DWORD PTR [RDX+RDX*1]
            movsxd RSI,EBX
            shl RSI,3
.L_41b36e:

            mov RBP,RDI
            mov RDI,RAX
            call realloc@PLT

            test RAX,RAX
            je .L_41b39c

            mov QWORD PTR [RBP],RAX
            mov DWORD PTR [RBP+12],EBX
            movsxd RDX,DWORD PTR [RBP+8]
            jmp .L_41b342
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b390:

            mov ESI,2048
            mov EBX,256
            jmp .L_41b36e
.L_41b39c:

            mov EAX,4294967295
            jmp .L_41b355
.L_41b3a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b3b0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov RBP,RSI
            sub RSP,16
.L_41b3c5:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+224],0
            je .L_41b4e0
.L_41b3dd:

            mov EAX,DWORD PTR [RBX+848]
            and EDX,EAX
            add EAX,1
            lea ECX,DWORD PTR [R12+RDX*1]
            cmp ECX,EAX
            jle .L_41b4b0

            cmp R12D,EAX
            jg .L_41b528

            sub EAX,EDX
            mov R13D,EAX
            js .L_41b528

            mov RSI,QWORD PTR [RBX+840]
            movsxd RDX,EDX
            mov EDI,DWORD PTR [RBX+212]
            add RDI,QWORD PTR [RBX+224]
            add RSI,RDX
            cmp R12D,EAX
            jg .L_41b460

            movsxd RDX,R12D
            call memcpy@PLT
.L_41b42f:

            mov ECX,DWORD PTR [RBX+212]
            add ECX,R12D
            cmp ECX,DWORD PTR [RBX+216]
            mov DWORD PTR [RBX+212],ECX
            jae .L_41b490

            mov QWORD PTR [RBP],0
            xor EAX,EAX
.L_41b450:

            add RSP,16
.L_41b454:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b460:

            movsxd RDX,EAX
            call memcpy@PLT

            mov EDI,R13D
            add EDI,DWORD PTR [RBX+212]
            mov EDX,R12D
            add RDI,QWORD PTR [RBX+224]
            mov RSI,QWORD PTR [RBX+840]
            sub EDX,R13D
            movsxd RDX,EDX
            call memcpy@PLT

            jmp .L_41b42f
          .byte 0x90
.L_41b490:

            mov RAX,QWORD PTR [RBX+224]
            mov QWORD PTR [RBP],RAX
            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b4b0:

            mov EDI,DWORD PTR [RBX+212]
            movsxd RSI,EDX
            add RSI,QWORD PTR [RBX+840]
            add RDI,QWORD PTR [RBX+224]
            movsxd RAX,R12D
            mov RDX,RAX
            call memcpy@PLT

            jmp .L_41b42f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b4e0:

            mov EDI,DWORD PTR [RBX+216]
            mov QWORD PTR [RSP+8],RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+224],RAX
            mov RDX,QWORD PTR [RSP+8]
            jne .L_41b3dd

            lea RDX,QWORD PTR [RIP+.L_446748]
            mov ESI,12
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_41b450
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b528:

            lea RDX,QWORD PTR [RIP+.L_446570]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_41b450
.L_41b548:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b550:

            sub RSP,72
.L_41b554:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,EDI
            mov DWORD PTR [RSP+32],4294967295
            and EAX,31
            add EAX,EAX
            mov DWORD PTR [RSP],EAX
            mov EAX,EDI
            sar EAX,5
            and EAX,63
            mov DWORD PTR [RSP+4],EAX
            mov EAX,EDI
            sar EAX,11
            and EAX,31
            mov DWORD PTR [RSP+8],EAX
            mov EAX,EDI
            sar EAX,16
            and EAX,31
            mov DWORD PTR [RSP+12],EAX
            mov EAX,EDI
            shr EDI,25
            sar EAX,21
            add EDI,80
            and EAX,15
            mov DWORD PTR [RSP+20],EDI
            mov RDI,RSP
            sub EAX,1
            mov DWORD PTR [RSP+16],EAX
            call mktime@PLT

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            jne .L_41b5d0

            add RSP,72
.L_41b5cf:

            ret 
.L_41b5d0:

            call __stack_chk_fail@PLT
.L_41b5d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5e0:

            push RBX

            mov RBX,QWORD PTR [RDI]
            mov RDI,QWORD PTR [RBX+272]
            call free@PLT

            mov RDI,QWORD PTR [RBX+312]
            call free@PLT

            mov RDI,QWORD PTR [RBX+352]
            call free@PLT

            mov RDI,QWORD PTR [RBX+392]
            call free@PLT

            mov RDI,QWORD PTR [RBX+304]
            call free@PLT

            mov RDI,QWORD PTR [RBX+344]
            call free@PLT

            mov RDI,QWORD PTR [RBX+384]
            call free@PLT

            mov RDI,QWORD PTR [RBX+424]
            call free@PLT

            pxor XMM0,XMM0
            mov QWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+344],0
            mov QWORD PTR [RBX+384],0
            mov QWORD PTR [RBX+424],0
            movups XMMWORD PTR [RBX+272],XMM0
            movups XMMWORD PTR [RBX+288],XMM0
            movups XMMWORD PTR [RBX+312],XMM0
            movups XMMWORD PTR [RBX+328],XMM0
            movups XMMWORD PTR [RBX+352],XMM0
            movups XMMWORD PTR [RBX+368],XMM0
            movups XMMWORD PTR [RBX+392],XMM0
            movups XMMWORD PTR [RBX+408],XMM0
            pop RBX

            ret 
.L_41b6ae:

            nop
            nop
.L_41b6b0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41b6b9:

            mov RDI,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RDI]
            call .L_41b5e0

            mov RDI,QWORD PTR [RBX+72]
            call free@PLT

            mov RDI,QWORD PTR [RBX+80]
            call free@PLT

            mov RDI,QWORD PTR [RBX+256]
            call free@PLT

            mov RDI,QWORD PTR [RBX+224]
            call free@PLT

            mov RDI,QWORD PTR [RBX+840]
            call free@PLT

            lea RDI,QWORD PTR [RBX+920]
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            call QWORD PTR [RIP+.L_65ad50]

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_41b72c:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_41b731:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b740:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41b74a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,30
            jg .L_41b880

            xor EDX,EDX
            mov ESI,7
            mov RBP,RDI
            call .L_4049d0

            test RAX,RAX
            mov RDX,RAX
            je .L_41b880

            cmp DWORD PTR [RAX],561144146
            je .L_41b828
.L_41b78a:

            cmp BYTE PTR [RDX],77
            je .L_41b870
.L_41b793:

            xor EAX,EAX
            cmp DWORD PTR [RDX],1179403647
            jne .L_41b808
.L_41b79d:

            mov EBX,65536
            mov R13D,4096
            mov ESI,69632
            mov R12,RSP
.L_41b7b0:

            mov RDX,R12
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_41b840

            lea RDX,QWORD PTR [RAX+RBX*1]
            mov RSI,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RDX+7]
            add RSI,RAX
            cmp RSI,RCX
            ja .L_41b7ed

            jmp .L_41b850
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b7e0:

            add RDX,16
            lea RCX,QWORD PTR [RDX+7]
            cmp RSI,RCX
            jbe .L_41b850
.L_41b7ed:

            cmp DWORD PTR [RDX],561144146
            jne .L_41b7e0

            cmp WORD PTR [RDX+4],1818
            jne .L_41b7e0

            cmp BYTE PTR [RDX+6],0
            jne .L_41b7e0
.L_41b803:

            mov EAX,30
.L_41b808:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41b88a

            add RSP,24
.L_41b81c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b828:

            cmp WORD PTR [RAX+4],1818
            jne .L_41b78a

            cmp BYTE PTR [RAX+6],0
            jne .L_41b78a

            jmp .L_41b803
.L_41b840:

            sar R13,1
            cmp R13,63
            jg .L_41b856

            xor EAX,EAX
            jmp .L_41b808
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b850:

            mov RBX,RDX
            sub RBX,RAX
.L_41b856:

            lea RSI,QWORD PTR [R13+RBX*1]
            cmp RSI,131072
            jle .L_41b7b0

            xor EAX,EAX
            jmp .L_41b808
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b870:

            cmp BYTE PTR [RDX+1],90
            jne .L_41b793

            jmp .L_41b79d
          .byte 0x90
.L_41b880:

            mov EAX,4294967295
            jmp .L_41b808
.L_41b88a:

            call __stack_chk_fail@PLT
.L_41b88f:

            nop
.L_41b890:

            push RBP
            push RBX
            mov RAX,RDI
            sub RSP,8
.L_41b899:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov RBP,QWORD PTR [RCX]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41b910

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_41b8f0

            cmp BYTE PTR [RDX],0
            je .L_41b8f0

            xor EDX,EDX
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBP+20184],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_41b8e7:

            add RSP,8
.L_41b8eb:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_41b8f0:

            lea RDX,QWORD PTR [RIP+.L_446780]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_432bc0

            jmp .L_41b8e7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b910:

            mov EBX,4294967276
            jmp .L_41b8e7
.L_41b917:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b920:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDX
            sub RSP,56
.L_41b937:

            mov QWORD PTR [RSI+8],0
            mov QWORD PTR [RSP+40],RDI
            mov RDI,RSI
            call .L_41b330

            test EAX,EAX
            js .L_41baf0

            movabs RAX,-9223372034707292161
            mov DWORD PTR [R14+8],1
            mov DWORD PTR [RSP+28],R13D
            mov QWORD PTR [R14+16],RAX
            mov EAX,R13D
            mov QWORD PTR [RSP+32],0
            sub EAX,1
            xor R15D,R15D
            lea RAX,QWORD PTR [R12+RAX*1+1]
            mov QWORD PTR [RSP+16],RAX
.L_41b98b:

            mov EAX,DWORD PTR [RSP+32]
            mov R13,R12
            lea EBX,DWORD PTR [RAX+1]
            jmp .L_41b9af
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b9a0:

            add R13,1
            cmp QWORD PTR [RSP+16],R13
            je .L_41ba93
.L_41b9af:

            movzx EAX,BYTE PTR [R13]
            mov EBP,R13D
            sub EBP,R12D
            cmp EAX,EBX
            jne .L_41b9a0

            mov RDI,QWORD PTR [R14+32]
            call free@PLT

            cmp DWORD PTR [R14+20],EBX
            mov QWORD PTR [R14+32],0
            jge .L_41b9d9

            mov DWORD PTR [R14+20],EBX
.L_41b9d9:

            cmp DWORD PTR [R14+16],EBX
            jle .L_41b9e3

            mov DWORD PTR [R14+16],EBX
.L_41b9e3:

            mov ECX,DWORD PTR [RSP+32]
            mov RDI,QWORD PTR [R14]
            xor EAX,EAX
            jmp .L_41b9f8
          .byte 0x66
          .byte 0x90
.L_41b9f0:

            sub ECX,1
            cmp ECX,-1
            je .L_41ba6a
.L_41b9f8:

            lea R10,QWORD PTR [RAX*8]
            mov EDX,R15D
            sar EDX,CL
            lea RAX,QWORD PTR [RDI+R10*1]
            and EDX,1
            mov ESI,DWORD PTR [RAX+4]
            cmp DWORD PTR [RAX],ESI
            je .L_41bac0

            movsxd RDX,EDX
            movsxd RAX,DWORD PTR [RAX+RDX*4]
            test EAX,EAX
            jns .L_41b9f0

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP],R10
            call .L_41b330

            test EAX,EAX
            js .L_41baf0

            movsxd RAX,DWORD PTR [R14+8]
            mov RDX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP]
            lea EDI,DWORD PTR [RAX+1]
            sub ECX,1
            cmp ECX,-1
            mov DWORD PTR [R14+8],EDI
            mov RDI,QWORD PTR [R14]
            lea RDX,QWORD PTR [RDI+RDX*4]
            mov DWORD PTR [RDX+R10*1],EAX
            jne .L_41b9f8
.L_41ba6a:

            lea RAX,QWORD PTR [RDI+RAX*8]
            cmp DWORD PTR [RAX],-1
            jne .L_41bac0

            cmp DWORD PTR [RAX+4],-2
            jne .L_41bac0

            sub DWORD PTR [RSP+28],1
            mov DWORD PTR [RAX],EBP
            add R15D,1
            mov DWORD PTR [RAX+4],EBP
            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            jg .L_41b9a0
.L_41ba93:

            add QWORD PTR [RSP+32],1
            add R15D,R15D
            mov RAX,QWORD PTR [RSP+32]
            cmp RAX,15
            jne .L_41b98b

            add RSP,56
.L_41baaf:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bac0:

            mov RDI,QWORD PTR [RSP+40]
            lea RDX,QWORD PTR [RIP+.L_446582]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            add RSP,56
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41baf0:

            mov RDI,QWORD PTR [RSP+40]
            lea RDX,QWORD PTR [RIP+.L_4467b8]
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            add RSP,56
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41bb1c:

            nop
            nop
            nop
            nop
.L_41bb20:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,168
.L_41bb34:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+48],RSI
            mov DWORD PTR [RSP+20],EDX
            mov R15,QWORD PTR [RAX]
            mov RAX,QWORD PTR [R15+20184]
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_41c468
.L_41bb6f:

            xor EDX,EDX
            mov ESI,7
            mov RDI,R13
            call .L_4049d0

            test RAX,RAX
            je .L_41c758

            movzx ECX,WORD PTR [RAX+5]
            movzx EDX,WORD PTR [RAX+3]
            movzx EBP,WORD PTR [RAX]
            cmp CX,31
            mov RBX,RCX
            mov DWORD PTR [R15+24],EDX
            mov QWORD PTR [RSP+24],RCX
            jbe .L_41c7f0

            lea RSI,QWORD PTR [RAX+2]
            xor EDI,EDI
            mov EDX,5
            call crc32@PLT

            mov ESI,7
            mov RDI,R13
            mov R12,RAX
            call .L_404a20

            test BYTE PTR [R15+24],16
            jne .L_41c830

            movzx EAX,BX
            xor EDX,EDX
            mov BYTE PTR [R15+23],0
            sub RAX,7
            mov QWORD PTR [R15+32],0
            mov QWORD PTR [R15+40],0
            mov QWORD PTR [R15+48],0
            mov QWORD PTR [R15+128],0
            mov RSI,RAX
            mov QWORD PTR [R15+112],0
            mov QWORD PTR [R15+144],0
            mov RDI,R13
            mov DWORD PTR [R15+64],0
            mov QWORD PTR [R15+104],0
            mov QWORD PTR [R15+120],0
            mov QWORD PTR [R15+136],0
            mov QWORD PTR [R15+56],0
            mov QWORD PTR [R15+152],0
            mov QWORD PTR [RSP+8],RAX
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_41c758

            movzx EDX,BX
            mov RSI,RAX
            mov RDI,R12
            sub EDX,7
            call crc32@PLT

            cmp BP,AX
            lea RDX,QWORD PTR [RIP+.L_4465a3]
            jne .L_41c030

            mov RAX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [R14+21]
            mov EDI,DWORD PTR [R14+13]
            mov EBP,DWORD PTR [R14+9]
            movdqu XMM0,XMMWORD PTR [R14]
            add RAX,R14
            movzx EBX,WORD PTR [R14+19]
            mov DWORD PTR [RSP+60],ECX
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [R14+16]
            movaps XMMWORD PTR [RSP+112],XMM0
            mov QWORD PTR [RSP+128],RAX
            movzx EAX,BYTE PTR [R14+24]
            mov BYTE PTR [RSP+136],AL
            movzx EAX,BYTE PTR [R14+8]
            mov BYTE PTR [RSP+59],AL
            movzx EAX,BYTE PTR [R14+18]
            mov BYTE PTR [R15+23],AL
            call .L_41b550

            mov EDX,DWORD PTR [R15+24]
            mov QWORD PTR [R15+48],RAX
            mov EAX,EBP
            mov QWORD PTR [R15+8],RAX
            test DL,4
            jne .L_41c490
.L_41bcfb:

            and DH,1
            mov ECX,DWORD PTR [RSP+116]
            mov ESI,DWORD PTR [RSP+112]
            jne .L_41bff0

            mov EAX,ESI
            lea R9,QWORD PTR [R14+25]
            mov QWORD PTR [R15+40],RCX
            mov QWORD PTR [R15+32],RAX
.L_41bd1a:

            cmp BYTE PTR [RSP+20],122
            mov QWORD PTR [R15+168],RAX
            je .L_41c5a8
.L_41bd2c:

            lea R12,QWORD PTR [R9+RBX*1]
            cmp R12,QWORD PTR [RSP]
            movzx R14D,BX
            ja .L_41c83c

            lea EAX,DWORD PTR [R14+1]
            mov RBP,QWORD PTR [R15+72]
            lea EDX,DWORD PTR [RAX+RAX*1]
            cmp QWORD PTR [R15+96],RDX
            mov DWORD PTR [RSP+32],EAX
            mov DWORD PTR [RSP+64],EDX
            jae .L_41bd8a

            mov RSI,RDX
            mov RDI,RBP
            mov QWORD PTR [RSP+80],R9
            mov QWORD PTR [RSP+72],RDX
            call realloc@PLT

            test RAX,RAX
            mov RBP,RAX
            mov RDX,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+80]
            je .L_41c875

            mov QWORD PTR [R15+72],RAX
            mov QWORD PTR [R15+96],RDX
.L_41bd8a:

            mov RDX,RBX
            mov RSI,R9
            mov RDI,RBP
            mov QWORD PTR [RSP+72],R9
            call memcpy@PLT

            mov BYTE PTR [RBP+RBX*1],0
            test BYTE PTR [R15+25],2
            je .L_41beab

            mov RDI,RBP
            call strlen@PLT

            cmp RBX,RAX
            je .L_41c5f0

            mov R9,QWORD PTR [RSP+72]
            lea R12D,DWORD PTR [RAX+2]
            add EAX,1
            mov R8D,DWORD PTR [RSP+64]
            xor EBX,EBX
            xor EDI,EDI
            xor ESI,ESI
            movzx EAX,BYTE PTR [R9+RAX*1]
            sub R8D,2
            mov BYTE PTR [RSP+32],AL
.L_41bde2:

            cmp R12D,R14D
            jae .L_41be48
.L_41bde7:

            cmp EBX,R8D
            jae .L_41be48

            mov EDX,R12D
            test SIL,SIL
            lea R10,QWORD PTR [R9+RDX*1]
            je .L_41c078

            sub ESI,2
            movzx EAX,DIL
            movzx ECX,SIL
            sar EAX,CL
            and EAX,3
            cmp EAX,2
            je .L_41c0a4
.L_41be15:

            cmp EAX,3
            je .L_41c400

            cmp EAX,1
            mov EDX,EBX
            lea EAX,DWORD PTR [RBX+1]
            je .L_41c3e0

            mov BYTE PTR [RBP+RDX*1],0
            movzx EDX,BYTE PTR [R10]
            add R12D,1
            add EBX,2
            cmp R12D,R14D
            mov BYTE PTR [RBP+RAX*1],DL
            jb .L_41bde7

            nop
            nop
            nop
.L_41be48:

            cmp EBX,R8D
            ja .L_41c890

            mov EAX,EBX
            lea R14D,DWORD PTR [RBX+2]
            mov BYTE PTR [RBP+RAX*1],0
            lea EAX,DWORD PTR [RBX+1]
            mov BYTE PTR [RBP+RAX*1],0
            mov RAX,QWORD PTR [R15+20200]
            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_41c720
.L_41be79:

            mov RAX,RBP
            jmp .L_41be8f
          .byte 0x66
          .byte 0x90
.L_41be80:

            cmp WORD PTR [RAX],23552
            jne .L_41be8b

            mov BYTE PTR [RAX+1],47
.L_41be8b:

            add RAX,2
.L_41be8f:

            cmp WORD PTR [RAX],0
            jne .L_41be80

            lea EAX,DWORD PTR [RBX+3]
            add R12,R9
            mov DWORD PTR [RSP+32],EAX
            jmp .L_41bec7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bea8:

            mov BYTE PTR [RAX],47
.L_41beab:

            mov ESI,92
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            jne .L_41bea8

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
.L_41bec7:

            mov RCX,QWORD PTR [R15+80]
            mov EBX,DWORD PTR [RSP+32]
            test RCX,RCX
            je .L_41bede

            cmp QWORD PTR [R15+88],R14
            je .L_41c4d0
.L_41bede:

            mov RDI,RCX
            mov RSI,RBX
            call realloc@PLT

            mov RSI,QWORD PTR [R15+72]
            mov RDX,RBX
            mov RDI,RAX
            mov QWORD PTR [R15+80],RAX
            call memcpy@PLT

            mov RDI,QWORD PTR [R15+256]
            mov QWORD PTR [R15+88],R14
            call free@PLT

            mov ESI,24
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R15+256],RAX
            je .L_41c875

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,-1
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RAX],RCX
            movabs RAX,4294967296
            mov QWORD PTR [R15+264],RAX
            mov EAX,DWORD PTR [R15+24]
            test AH,4
            je .L_41bf76

            lea RDX,QWORD PTR [R12+8]
            cmp RDX,QWORD PTR [RSP]
            ja .L_41c7f0

            mov RCX,QWORD PTR [R12]
            mov R12,RDX
            mov QWORD PTR [R15+104],RCX
.L_41bf76:

            test AH,16
            je .L_41c0da

            lea RBX,QWORD PTR [R12+2]
            cmp QWORD PTR [RSP],RBX
            jb .L_41c7f0

            movzx EAX,WORD PTR [R12]
            mov QWORD PTR [RSP+72],RBP
            mov R12D,3
            mov QWORD PTR [RSP+80],R14
            mov DWORD PTR [RSP+24],EAX
            lea RAX,QWORD PTR [RSP+104]
            mov QWORD PTR [RSP+32],RAX
.L_41bfb1:

            mov EBP,DWORD PTR [RSP+24]
            lea ECX,DWORD PTR [R12*4]
            mov QWORD PTR [RSP+104],0
            shr EBP,CL
            mov EAX,EBP
            and EAX,8
            cmp R12D,3
            je .L_41c30f

            test EAX,EAX
            jne .L_41c328
.L_41bfdf:

            test R12D,R12D
            je .L_41c0d0
.L_41bfe8:

            sub R12D,1
            jmp .L_41bfb1
          .byte 0x66
          .byte 0x90
.L_41bff0:

            mov EAX,DWORD PTR [R14+25]
            mov EDX,DWORD PTR [R14+29]
            lea R9,QWORD PTR [R14+33]
            shl RDX,32
            shl RAX,32
            or RDX,RCX
            or RAX,RSI
            mov QWORD PTR [R15+40],RDX
            test RAX,RAX
            mov QWORD PTR [R15+32],RAX
            js .L_41c020

            test RDX,RDX
            jns .L_41bd1a
.L_41c020:

            lea RDX,QWORD PTR [RIP+.L_4465b4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c030:

            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            mov R9D,4294967266
.L_41c045:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R9D
            jne .L_41c8a5

            add RSP,168
.L_41c066:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c078:

            movzx EDI,BYTE PTR [R10]
            mov ECX,6
            lea EDX,DWORD PTR [R12+1]
            mov ESI,6
            mov R12,RDX
            lea R10,QWORD PTR [R9+RDX*1]
            movzx EAX,DIL
            sar EAX,CL
            and EAX,3
            cmp EAX,2
            jne .L_41be15
.L_41c0a4:

            movzx ECX,BYTE PTR [R9+RDX*1+1]
            mov EDX,EBX
            lea EAX,DWORD PTR [RBX+1]
            add R12D,2
            add EBX,2
            mov BYTE PTR [RBP+RDX*1],CL
            movzx EDX,BYTE PTR [R10]
            mov BYTE PTR [RBP+RAX*1],DL
            jmp .L_41bde2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c0d0:

            mov RBP,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+80]
.L_41c0da:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_404a20

            mov RAX,QWORD PTR [R13+1032]
            mov RDX,QWORD PTR [R15+256]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RDX+8],RAX
            add RAX,QWORD PTR [R15+32]
            mov QWORD PTR [RDX+16],RAX
            movzx EAX,BYTE PTR [RSP+59]
            test AL,AL
            js .L_41c570

            cmp AL,2
            jle .L_41c550

            cmp AL,5
            jg .L_41c570

            mov EAX,DWORD PTR [RSP+60]
            mov DWORD PTR [R15+64],EAX
.L_41c129:

            mov RDI,QWORD PTR [R15+224]
            mov QWORD PTR [R15+160],0
            mov QWORD PTR [R15+176],0
            mov QWORD PTR [R15+184],0
            mov QWORD PTR [R15+856],0
            mov QWORD PTR [R15+200],0
            mov DWORD PTR [R15+232],0
            mov QWORD PTR [R15+192],0
            mov DWORD PTR [R15+20216],0
            mov QWORD PTR [R15+20224],0
            mov QWORD PTR [R15+240],0
            mov BYTE PTR [R15+237],0
            mov BYTE PTR [R15+208],1
            mov BYTE PTR [R15+915],0
            mov BYTE PTR [R15+912],1
            call free@PLT

            lea RDI,QWORD PTR [R15+440]
            movabs RAX,562949953421312
            mov QWORD PTR [R15+224],0
            mov QWORD PTR [R15+212],RAX
            mov EAX,R15D
            mov QWORD PTR [R15+432],0
            and RDI,-8
            mov QWORD PTR [R15+828],0
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+836]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            lea RDI,QWORD PTR [R15+920]
            call QWORD PTR [RIP+.L_65ad50]

            xor EAX,EAX
            cmp BYTE PTR [RSP+20],122
            mov WORD PTR [R15+913],AX
            je .L_41c540

            mov RBX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [R15+56]
            mov RSI,QWORD PTR [R15+48]
            mov RDI,RBX
            call .L_4392c0

            mov RDX,QWORD PTR [R15+136]
            mov RSI,QWORD PTR [R15+128]
            mov RDI,RBX
            call .L_439050

            mov RDX,QWORD PTR [R15+120]
            mov RSI,QWORD PTR [R15+112]
            mov RDI,RBX
            call .L_438f30

            mov RSI,QWORD PTR [R15+40]
            mov RDI,RBX
            call .L_439490

            mov ESI,DWORD PTR [R15+64]
            mov RDI,RBX
            call .L_4392b0

            mov RCX,QWORD PTR [RSP+64]
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_4393f0

            test EAX,EAX
            mov R9D,EAX
            je .L_41c2e0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41c89c

            mov RDI,QWORD PTR [RSP+64]
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            mov R9D,4294967276
.L_41c2e0:

            mov EAX,DWORD PTR [R15+64]
            and EAX,61440
            cmp EAX,40960
            je .L_41c670
.L_41c2f4:

            cmp QWORD PTR [R15+168],0
            jne .L_41c045

            mov BYTE PTR [R15+237],1
            jmp .L_41c045
.L_41c30f:

            mov RDX,QWORD PTR [R15+48]
            test EAX,EAX
            mov QWORD PTR [RSP+104],RDX
            je .L_41bfe8

            test RDX,RDX
            jne .L_41c345

            nop
            nop
            nop
.L_41c328:

            lea R14,QWORD PTR [RBX+4]
            cmp QWORD PTR [RSP],R14
            jb .L_41c7f0

            mov EDI,DWORD PTR [RBX]
            mov RBX,R14
            call .L_41b550

            mov QWORD PTR [RSP+104],RAX
.L_41c345:

            mov R14D,EBP
            and R14D,3
            mov EAX,R14D
            add RAX,RBX
            cmp QWORD PTR [RSP],RAX
            jb .L_41c7f0

            test R14D,R14D
            je .L_41c38f

            lea EAX,DWORD PTR [R14-1]
            xor EDX,EDX
            lea RDI,QWORD PTR [RBX+RAX*1+1]
.L_41c36c:

            movsx EAX,BYTE PTR [RBX]
            shr EDX,8
            add RBX,1
            shl EAX,16
            or EDX,EAX
            cmp RDI,RBX
            jne .L_41c36c

            mov EDI,1801439851
            mov EAX,EDX
            mul EDI
            shr EDX,22
            mov R14D,EDX
.L_41c38f:

            mov RDI,QWORD PTR [RSP+32]
            call localtime@PLT

            mov R9D,DWORD PTR [RAX]
            and EBP,4
            lea EDX,DWORD PTR [R9+R14*1]
            jne .L_41c580

            mov RAX,QWORD PTR [RSP+104]
.L_41c3ae:

            cmp R12D,3
            je .L_41c868

            cmp R12D,2
            je .L_41c848

            cmp R12D,1
            je .L_41c85b

            mov QWORD PTR [R15+144],RAX
            mov QWORD PTR [R15+152],RDX
            jmp .L_41bfdf
          .byte 0x90
.L_41c3e0:

            movzx ECX,BYTE PTR [RSP+32]
            add R12D,1
            add EBX,2
            mov BYTE PTR [RBP+RDX*1],CL
            movzx EDX,BYTE PTR [R10]
            mov BYTE PTR [RBP+RAX*1],DL
            jmp .L_41bde2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c400:

            movzx EAX,BYTE PTR [R10]
            lea EDX,DWORD PTR [R12+1]
            test AL,AL
            js .L_41c630

            mov R12D,EDX
            xor R11D,R11D
            xor R10D,R10D
.L_41c41a:

            lea ECX,DWORD PTR [RBX+1]
            and EAX,127
            mov BYTE PTR [RSP+64],SIL
            add EAX,2
            add RCX,RBP
            jmp .L_41c435
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c430:

            cmp R8D,EBX
            jbe .L_41c457
.L_41c435:

            mov EDX,EBX
            add RCX,2
            mov BYTE PTR [RBP+RDX*1],R11B
            mov EDX,EBX
            add EBX,2
            shr EDX,1
            movzx ESI,BYTE PTR [R9+RDX*1]
            add ESI,R10D
            mov BYTE PTR [RCX-2],SIL
            sub AL,1
            jne .L_41c430
.L_41c457:

            movzx ESI,BYTE PTR [RSP+64]
            jmp .L_41bde2

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c468:

            mov EDX,DWORD PTR [R15+20168]
            test EDX,EDX
            je .L_41c648

            mov RAX,QWORD PTR [R15+20176]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_41bb6f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c490:

            mov RDI,QWORD PTR [RSP+48]
            mov ESI,1
            call .L_439710

            lea RDX,QWORD PTR [RIP+.L_446810]
            mov DWORD PTR [R15+20240],1
            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            mov EDX,DWORD PTR [R15+24]
            jmp .L_41bcfb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c4d0:

            mov RDI,QWORD PTR [R15+72]
            mov RSI,RCX
            mov RDX,RBX
            mov QWORD PTR [RSP+32],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+32]
            jne .L_41bede

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            mov DWORD PTR [RSP],EAX
            call .L_404a20

            mov EAX,DWORD PTR [R15+264]
            mov EDX,DWORD PTR [R15+268]
            mov R9D,DWORD PTR [RSP]
            add EAX,1
            cmp EAX,EDX
            mov DWORD PTR [R15+264],EAX
            jae .L_41c77c

            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [R15+256]
            lea RAX,QWORD PTR [RAX+RDX*8]
            cmp QWORD PTR [RAX+8],0
            js .L_41c7d4

            nop
.L_41c540:

            xor R9D,R9D
            jmp .L_41c045
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c550:

            mov EAX,DWORD PTR [RSP+60]
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            and EAX,16311
            add EAX,16877
            mov DWORD PTR [R15+64],EAX
            jmp .L_41c129
          .byte 0x90
.L_41c570:

            lea RDX,QWORD PTR [RIP+.L_446838]
            jmp .L_41c030
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c580:

            add R9D,1
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RDX
            mov DWORD PTR [RAX],R9D
            call mktime@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+104],RAX
            jmp .L_41c3ae
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c5a8:

            add QWORD PTR [RSP+24],RAX
            sub R9,R14
            xor EDX,EDX
            mov RCX,QWORD PTR [RSP+24]
            mov RDI,R13
            mov RBP,R9
            lea RAX,QWORD PTR [RCX-7]
            mov RSI,RAX
            mov R14,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_4049d0

            test RAX,RAX
            je .L_41c758

            mov RCX,R14
            lea R9,QWORD PTR [RAX+RBP*1]
            add RCX,RAX
            mov QWORD PTR [RSP],RCX
            jmp .L_41bd2c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c5f0:

            mov RAX,QWORD PTR [R15+20192]
            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            jne .L_41c613

            jmp .L_41c7fc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c610:

            mov BYTE PTR [RAX],47
.L_41c613:

            mov ESI,92
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            jne .L_41c610

            jmp .L_41bec7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c630:

            add R12D,2
            movzx R10D,BYTE PTR [R9+RDX*1]
            movzx R11D,BYTE PTR [RSP+32]
            jmp .L_41c41a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c648:

            call .L_431850

            mov DWORD PTR [R15+20168],1
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [R15+20176],RAX
            jmp .L_41bb6f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c670:

            mov R14,QWORD PTR [RSP+48]
            xor ESI,ESI
            mov QWORD PTR [R15+168],0
            mov DWORD PTR [RSP],R9D
            mov RDI,R14
            call .L_439490

            mov RAX,QWORD PTR [R13+2472]
            xor EDX,EDX
            mov RDI,R13
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+32]
            call .L_41d170

            test RAX,RAX
            je .L_41c758

            mov RDX,QWORD PTR [RBX+32]
            mov RCX,QWORD PTR [RSP+40]
            mov RSI,RAX
            mov RDI,R14
            call .L_439630

            test EAX,EAX
            mov R9D,DWORD PTR [RSP]
            je .L_41c763

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41c8aa

            mov RDI,QWORD PTR [RSP+40]
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_446888]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,R13
            call .L_404a20

            mov R9D,4294967276
            jmp .L_41c2f4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c720:

            lea RSI,QWORD PTR [RIP+.L_445293]
            mov EDX,1
            mov RDI,R13
            mov QWORD PTR [RSP+32],R9
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [R15+20200],RAX
            mov R9,QWORD PTR [RSP+32]
            jne .L_41be79

            nop
            nop
            nop
            nop
            nop
.L_41c758:

            mov R9D,4294967266
            jmp .L_41c045
.L_41c763:

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,R13
            mov DWORD PTR [RSP],R9D
            call .L_404a20

            mov R9D,DWORD PTR [RSP]
            jmp .L_41c2f4
.L_41c77c:

            lea EAX,DWORD PTR [RDX+1]
            mov RDI,QWORD PTR [R15+256]
            lea RSI,QWORD PTR [RAX+RAX*2]
            mov DWORD PTR [R15+268],EAX
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov QWORD PTR [R15+256],RAX
            je .L_41c875

            mov EDX,DWORD PTR [R15+264]
            mov RCX,QWORD PTR [RSP+24]
            mov R9D,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov RDX,-1
            mov QWORD PTR [RAX],RCX
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RDX
.L_41c7d4:

            mov RDX,QWORD PTR [R13+1032]
            mov RDX,QWORD PTR [RDX]
            mov QWORD PTR [RAX+8],RDX
            add RDX,QWORD PTR [R15+32]
            mov QWORD PTR [RAX+16],RDX
            jmp .L_41c045
          .byte 0x90
.L_41c7f0:

            lea RDX,QWORD PTR [RIP+.L_44658f]
            jmp .L_41c030
.L_41c7fc:

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            mov RDI,R13
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [R15+20192],RAX
            jne .L_41c613

            jmp .L_41c758
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c830:

            lea RDX,QWORD PTR [RIP+.L_4467e8]
            jmp .L_41c030
.L_41c83c:

            lea RDX,QWORD PTR [RIP+.L_4465cd]
            jmp .L_41c030
.L_41c848:

            mov QWORD PTR [R15+128],RAX
            mov QWORD PTR [R15+136],RDX
            jmp .L_41bfe8
.L_41c85b:

            mov QWORD PTR [R15+112],RAX
            mov QWORD PTR [R15+120],RDX
            jmp .L_41bfe8
.L_41c868:

            mov QWORD PTR [R15+48],RAX
            mov QWORD PTR [R15+56],RDX
            jmp .L_41bfe8
.L_41c875:

            lea RDX,QWORD PTR [RIP+.L_4465e3]
.L_41c87c:

            mov ESI,12
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            jmp .L_41c758
.L_41c890:

            lea RDX,QWORD PTR [RIP+.L_4465fd]
            jmp .L_41c030
.L_41c89c:

            lea RDX,QWORD PTR [RIP+.L_444a18]
            jmp .L_41c87c
.L_41c8a5:

            call __stack_chk_fail@PLT
.L_41c8aa:

            lea RDX,QWORD PTR [RIP+.L_446868]
            jmp .L_41c87c
.L_41c8b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c8c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41c8d1:

            mov DWORD PTR [RDI+16],851968
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI+24],0
            mov QWORD PTR [RSP+16],RSI
            je .L_41cc20
.L_41c8f8:

            mov RAX,QWORD PTR [RBX+2472]
            mov R12,QWORD PTR [RAX]
            cmp DWORD PTR [R12+20240],-1
            jne .L_41c919

            mov DWORD PTR [R12+20240],0
.L_41c919:

            xor EDX,EDX
            mov ESI,7
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_41cb48

            mov EDX,DWORD PTR [R12+248]
            test EDX,EDX
            je .L_41c9e0
.L_41c941:

            lea RAX,QWORD PTR [RSP+32]
            lea R14,QWORD PTR [RIP+.L_446a48]
            mov DWORD PTR [R12+248],1
            mov QWORD PTR [RSP+8],RAX
.L_41c95e:

            xor EDX,EDX
            mov ESI,7
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_41c9b2

            movzx R15D,BYTE PTR [RAX+2]
            lea EDX,DWORD PTR [R15-114]
            cmp DL,9
            ja .L_41cc60

            movzx EDX,DL
            movsxd RDX,DWORD PTR [R14+RDX*4]
            add RDX,R14
            jmp RDX
.L_41c990:

            cmp DWORD PTR [RAX],561144146
            je .L_41cc88
.L_41c99c:

            lea RDX,QWORD PTR [RIP+.L_44662f]
.L_41c9a3:

            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0
.L_41c9b2:

            mov EAX,4294967266
.L_41c9b7:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41cd3f

            add RSP,56
.L_41c9cf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c9e0:

            cmp BYTE PTR [RAX],77
            je .L_41ccd0
.L_41c9e9:

            cmp DWORD PTR [RAX],1179403647
            jne .L_41c941
.L_41c9f5:

            lea R13,QWORD PTR [RSP+32]
            xor EBP,EBP
            mov R14D,4096
            mov ESI,4096
.L_41ca07:

            mov RDX,R13
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_41cc30

            mov RCX,QWORD PTR [RSP+32]
            cmp RCX,63
            jle .L_41cc4c

            lea RDX,QWORD PTR [RAX+7]
            add RCX,RAX
            mov RSI,RAX
            cmp RCX,RDX
            ja .L_41ca51

            jmp .L_41cce0
          .byte 0x66
          .byte 0x90
.L_41ca40:

            add RAX,16
            lea RDX,QWORD PTR [RAX+7]
            cmp RCX,RDX
            jbe .L_41ccb0
.L_41ca51:

            cmp DWORD PTR [RAX],561144146
            jne .L_41ca40

            cmp WORD PTR [RAX+4],1818
            jne .L_41ca40

            cmp BYTE PTR [RAX+6],0
            jne .L_41ca40

            sub RAX,RSI
            mov RDI,RBX
            mov RSI,RAX
            call .L_404a20

            jmp .L_41c941
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ca80:

            movzx EBP,WORD PTR [RAX+5]
            movzx ECX,WORD PTR [RAX+3]
            cmp BP,6
            jbe .L_41cce4

            test CX,CX
            jns .L_41cabd

            cmp RBP,10
            jbe .L_41cce4

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_41c9b2

            mov EDX,DWORD PTR [RAX+7]
            add RBP,RDX
.L_41cabd:

            movzx EAX,WORD PTR [RAX]
            mov ESI,2
            mov RDI,RBX
            sub RBP,2
            xor R13D,R13D
            mov WORD PTR [RSP+30],AX
            call .L_404a20

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cae0:

            mov RDX,QWORD PTR [RSP+8]
            cmp RBP,32768
            mov ESI,32768
            cmovbe RSI,RBP
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_41c9b2

            mov EDX,DWORD PTR [RSP+32]
            mov RDI,R13
            mov RSI,RAX
            call crc32@PLT

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov R13,RAX
            call .L_404a20

            sub RBP,QWORD PTR [RSP+32]
            jne .L_41cae0

            cmp WORD PTR [RSP+30],R13W
            jne .L_41ccfc

            cmp R15B,123
            jne .L_41c95e

            nop
            nop
            nop
            nop
            nop
            nop
.L_41cb48:

            mov EAX,1
            jmp .L_41c9b7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cb58:

            movzx EDX,WORD PTR [RAX+3]
            mov DWORD PTR [R12],EDX
            movzx EBP,WORD PTR [RAX+5]
            cmp BP,12
            mov R13,RBP
            jbe .L_41ccf0

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_41c9b2

            movzx EAX,WORD PTR [RAX+7]
            mov WORD PTR [R12+16],AX
            mov EAX,DWORD PTR [R15+9]
            mov DWORD PTR [R12+18],EAX
            mov EAX,DWORD PTR [R12]
            test AH,2
            jne .L_41cc70
.L_41cbaa:

            test AL,128
            jne .L_41cd08

            movzx EDX,R13W
            lea RSI,QWORD PTR [R15+2]
            xor EDI,EDI
            sub EDX,2
            call crc32@PLT

            cmp WORD PTR [R15],AX
            jne .L_41ccfc

            mov RSI,RBP
            mov RDI,RBX
            call .L_404a20

            jmp .L_41c95e
          .byte 0x66
          .byte 0x90
.L_41cbe0:

            mov RSI,QWORD PTR [RSP+16]
            mov EDX,116
            mov RDI,RBX
            call .L_41bb20

            jmp .L_41c9b7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cc00:

            mov RSI,QWORD PTR [RSP+16]
            mov EDX,122
            mov RDI,RBX
            call .L_41bb20

            cmp EAX,-20
            jge .L_41c95e

            jmp .L_41c9b7
.L_41cc20:

            lea RAX,QWORD PTR [RIP+.L_44660e]
            mov QWORD PTR [RDI+24],RAX
            jmp .L_41c8f8
.L_41cc30:

            sar R14,1
            cmp R14,63
            jle .L_41cc4c
.L_41cc39:

            lea RAX,QWORD PTR [R14+RBP*1]
            mov RSI,R14
            cmp RAX,131072
            jbe .L_41ca07
.L_41cc4c:

            lea RDX,QWORD PTR [RIP+.L_446612]
            jmp .L_41c9a3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cc60:

            lea RDX,QWORD PTR [RIP+.L_446663]
            jmp .L_41c9a3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cc70:

            cmp RBP,13
            je .L_41ccf0

            movzx EDX,BYTE PTR [R15+13]
            mov BYTE PTR [R12+22],DL
            jmp .L_41cbaa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cc88:

            cmp WORD PTR [RAX+4],1818
            jne .L_41c99c

            cmp BYTE PTR [RAX+6],0
            jne .L_41c99c

            mov ESI,7
            mov RDI,RBX
            call .L_404a20

            jmp .L_41c95e
.L_41ccb0:

            sub RAX,RSI
            mov RSI,RAX
            add RBP,RAX
.L_41ccb9:

            mov RDI,RBX
            call .L_404a20

            jmp .L_41cc39
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ccd0:

            cmp BYTE PTR [RAX+1],90
            jne .L_41c9e9

            jmp .L_41c9f5
          .byte 0x90
.L_41cce0:

            xor ESI,ESI
            jmp .L_41ccb9
.L_41cce4:

            lea RDX,QWORD PTR [RIP+.L_446645]
            jmp .L_41c9a3
.L_41ccf0:

            lea RDX,QWORD PTR [RIP+.L_44658f]
            jmp .L_41c9a3
.L_41ccfc:

            lea RDX,QWORD PTR [RIP+.L_4465a3]
            jmp .L_41c9a3
.L_41cd08:

            mov R15,QWORD PTR [RSP+16]
            mov ESI,1
            mov RDI,R15
            call .L_439730

            mov ESI,1
            mov RDI,R15
            call .L_439710

            mov DWORD PTR [R12+20240],1
            lea RDX,QWORD PTR [RIP+.L_446810]
            jmp .L_41c9a3
.L_41cd3f:

            call __stack_chk_fail@PLT
.L_41cd44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd50:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_41cd5b:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            cmp BYTE PTR [RBP+23],48
            jne .L_41d093

            cmp EDX,1
            je .L_41d040

            cmp EDX,2
            je .L_41d010
.L_41cd81:

            test RSI,RSI
            js .L_41d09c

            mov RAX,QWORD PTR [RBP+40]
            cmp RAX,RSI
            jl .L_41cff8
.L_41cd97:

            mov RCX,QWORD PTR [RBP+256]
            mov EDI,DWORD PTR [RBP+264]
            mov RBX,QWORD PTR [RCX+8]
            add RBX,RSI
            test EDI,EDI
            je .L_41cdd1

            lea EDX,DWORD PTR [RDI-1]
            lea RAX,QWORD PTR [RCX+16]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RCX+RDX*8+40]
            nop
.L_41cdc0:

            add RBX,QWORD PTR [RAX+16]
            add RAX,24
            sub RBX,QWORD PTR [RAX-24]
            cmp RDX,RAX
            jne .L_41cdc0
.L_41cdd1:

            test BYTE PTR [RBP],1
            je .L_41ce72

            mov EAX,EDI
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov R8,QWORD PTR [RCX+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cdf0:

            lea RAX,QWORD PTR [RAX+RAX*2]
            cmp RBX,R8
            lea RAX,QWORD PTR [RCX+RAX*8]
            jge .L_41cf40

            test BYTE PTR [RBP+24],1
            je .L_41cf40

            test EDI,EDI
            je .L_41d08a

            lea EAX,DWORD PTR [RDI-1]
            mov RSI,R8
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RDI,RAX
            mov DWORD PTR [RBP+264],EAX
            lea RDX,QWORD PTR [RCX+RDX*8]
            sub RSI,QWORD PTR [RDX+16]
            mov R8,QWORD PTR [RDX+8]
            sub RBX,RSI
            cmp R8,RBX
            jg .L_41cdf0

            mov RSI,R8
            sub RSI,QWORD PTR [RDX]
            mov RDI,R12
            xor EDX,EDX
            call .L_404dc0

            test RAX,RAX
            js .L_41cf35

            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            call .L_41c8c0

            test EAX,EAX
            jne .L_41d068

            sub DWORD PTR [RBP+264],1
.L_41ce72:

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,R12
            call .L_404dc0

            test RAX,RAX
            js .L_41cf35

            mov ECX,DWORD PTR [RBP+264]
            mov R9,QWORD PTR [RBP+256]
            lea RSI,QWORD PTR [RCX+RCX*2]
            mov RDI,RCX
            shl RSI,3
            mov RDX,QWORD PTR [R9+RSI*1+16]
            sub RDX,RAX
            test ECX,ECX
            mov QWORD PTR [RBP+168],RDX
            je .L_41cef5

            sub EDI,1
            lea R8,QWORD PTR [R9+RSI*1-16]
            lea RDX,QWORD PTR [R9+RSI*1+8]
            lea RDI,QWORD PTR [RDI+RDI*2]
            lea RSI,QWORD PTR [RCX*4]
            shl RDI,3
            sub RCX,RSI
            sub R8,RDI
            shl RCX,3
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cee0:

            lea RSI,QWORD PTR [RCX+RDX*1]
            sub RAX,QWORD PTR [RDX]
            sub RDX,24
            add RAX,QWORD PTR [RDI+RSI*1+8]
            cmp R8,RDX
            jne .L_41cee0
.L_41cef5:

            sub RAX,QWORD PTR [R9+8]
            mov RDI,R12
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_404300

            mov RAX,QWORD PTR [RSP]
            cmp QWORD PTR [RBP+40],RAX
            mov QWORD PTR [RBP+160],0
            mov QWORD PTR [RBP+184],0
            je .L_41d050
.L_41cf2e:

            mov QWORD PTR [RBP+200],RAX
.L_41cf35:

            add RSP,16
.L_41cf39:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41cf40:

            mov RSI,QWORD PTR [RAX+16]
            cmp RSI,RBX
            jge .L_41ce72

            test BYTE PTR [RBP+24],2
            je .L_41ce72

            lea EDX,DWORD PTR [RDI+1]
            cmp EDX,DWORD PTR [RBP+268]
            mov DWORD PTR [RBP+264],EDX
            jae .L_41cf78

            mov EAX,EDX
            lea R8,QWORD PTR [RAX+RAX*2]
            lea R8,QWORD PTR [RCX+R8*8]
            cmp QWORD PTR [R8+16],RBX
            jl .L_41cfe0
.L_41cf78:

            mov DWORD PTR [RBP+264],EDI
            xor EDX,EDX
            mov RDI,R12
            call .L_404dc0

            test RAX,RAX
            js .L_41cf35

            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            call .L_41c8c0

            cdqe 
            cmp RAX,1
            je .L_41d020
.L_41cfa5:

            test RAX,RAX
            jne .L_41d068

            mov EAX,DWORD PTR [RBP+264]
            mov RCX,QWORD PTR [RBP+256]
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RDI,RAX
            mov R8,QWORD PTR [RCX+RDX*8+8]
            lea EDX,DWORD PTR [RAX-1]
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov RSI,R8
            sub RSI,QWORD PTR [RCX+RDX*8+16]
            add RBX,RSI
            jmp .L_41cdf0
          .byte 0x66
          .byte 0x90
.L_41cfe0:

            mov R8,QWORD PTR [R8+8]
            mov RDI,R8
            sub RDI,RSI
            add RBX,RDI
            mov EDI,EDX
            jmp .L_41cdf0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cff8:

            mov QWORD PTR [RBP+200],RSI
            mov RSI,RAX
            jmp .L_41cd97
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d010:

            add RSI,QWORD PTR [RBP+40]
            jmp .L_41cd81
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d020:

            mov BYTE PTR [RBP+252],1
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            call .L_41c8c0

            cdqe 
            jmp .L_41cfa5
          .byte 0x66
          .byte 0x90
.L_41d040:

            add RSI,QWORD PTR [RBP+200]
            jmp .L_41cd81
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d050:

            mov RDX,QWORD PTR [RBP+200]
            cmp RAX,RDX
            jge .L_41cf2e

            mov RAX,RDX
            jmp .L_41cf35
.L_41d068:

            lea RDX,QWORD PTR [RIP+.L_446670]
.L_41d06f:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R12
            call .L_432bc0

            mov RAX,-25
            jmp .L_41cf35
.L_41d08a:

            lea RDX,QWORD PTR [RIP+.L_4468c0]
            jmp .L_41d06f
.L_41d093:

            lea RDX,QWORD PTR [RIP+.L_4468f8]
            jmp .L_41d06f
.L_41d09c:

            mov RAX,-1
            jmp .L_41cf35
.L_41d0a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0b0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41d0b9:

            jmp .L_41d0eb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d0c0:

            test BYTE PTR [RBX],1
            je .L_41d158

            test BYTE PTR [RBX+24],2
            je .L_41d158

            mov RSI,QWORD PTR [RBP+160]
            mov RDI,RBP
            call .L_41c8c0

            cmp EAX,1
            je .L_41d140
.L_41d0e7:

            test EAX,EAX
            jne .L_41d132
.L_41d0eb:

            mov RAX,QWORD PTR [RBP+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+160]
            test RSI,RSI
            jle .L_41d114

            mov RDI,RBP
            call .L_404a20

            mov QWORD PTR [RBX+160],0
.L_41d114:

            mov RSI,QWORD PTR [RBX+168]
            test RSI,RSI
            jle .L_41d0c0

            mov RDI,RBP
            call .L_404a20

            test RAX,RAX
            jns .L_41d0c0

            mov EAX,4294967266
.L_41d132:

            add RSP,8
.L_41d136:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d140:

            mov RSI,QWORD PTR [RBP+160]
            mov RDI,RBP
            call .L_41c8c0

            jmp .L_41d0e7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d158:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_41d161:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d170:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDX
            mov RBX,RDI
            sub RSP,8
.L_41d183:

            jmp .L_41d190
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d188:

            test EAX,EAX
            jne .L_41d228
.L_41d190:

            mov RAX,QWORD PTR [RBX+2472]
            mov RDX,R12
            mov RSI,R13
            mov RDI,RBX
            mov RBP,QWORD PTR [RAX]
            call .L_4049d0

            test R12,R12
            je .L_41d22a

            cmp BYTE PTR [RBX+144],0
            mov RDX,QWORD PTR [R12]
            je .L_41d1cd

            mov RCX,QWORD PTR [RBX+152]
            cmp RCX,RDX
            jge .L_41d1cd

            mov QWORD PTR [R12],RCX
            mov RDX,RCX
.L_41d1cd:

            mov RCX,QWORD PTR [RBP+168]
            cmp RCX,RDX
            jge .L_41d1e0

            mov QWORD PTR [R12],RCX
            mov RDX,RCX
.L_41d1e0:

            test RDX,RDX
            js .L_41d228

            jne .L_41d22a

            test BYTE PTR [RBP],1
            je .L_41d22a

            test BYTE PTR [RBP+24],2
            je .L_41d22a

            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            call .L_41c8c0

            cmp EAX,1
            jne .L_41d188

            mov BYTE PTR [RBP+252],1
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            call .L_41c8c0

            test EAX,EAX
            je .L_41d190

            nop
            nop
            nop
.L_41d228:

            xor EAX,EAX
.L_41d22a:

            add RSP,8
.L_41d22e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41d235:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d240:

            push R14
            push R13
            mov R14,RDI
            push R12
            mov R12D,64
            push RBP
            push RBX
.L_41d251:

            sub R12D,DWORD PTR [RSI+8]
            mov RBX,RSI
            mov RAX,QWORD PTR [RDI+2472]
            lea R13,QWORD PTR [RSI+16]
            mov RBP,QWORD PTR [RAX]
            mov EAX,R12D
            sar EAX,3
            cmp EAX,6
            je .L_41d2e7
.L_41d271:

            jle .L_41d368

            cmp EAX,7
            je .L_41d3d0

            cmp EAX,8
            jne .L_41d460

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,7
            jg .L_41d469
.L_41d297:

            test RDX,RDX
            jle .L_41d380

            mov RAX,QWORD PTR [RBX+24]
.L_41d2a4:

            lea RSI,QWORD PTR [RAX+1]
            mov RCX,QWORD PTR [RBX]
            sub R12D,8
            sub RDX,1
            mov QWORD PTR [RBX+24],RSI
            movzx EAX,BYTE PTR [RAX]
            shl RCX,8
            add DWORD PTR [RBX+8],8
            mov QWORD PTR [RBX+16],RDX
            or RAX,RCX
            mov QWORD PTR [RBX],RAX
            mov EAX,R12D
            sar EAX,3
            add QWORD PTR [RBP+160],1
            sub QWORD PTR [RBP+168],1
            cmp EAX,6
            jne .L_41d271
.L_41d2e7:

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,5
            jle .L_41d297

            mov RCX,QWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX]
            sub RDX,6
            movzx ESI,BYTE PTR [RCX+5]
            shl RAX,48
            add RCX,6
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-6]
            shl RSI,40
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-5]
            shl RSI,32
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-4]
            shl ESI,24
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-3]
            shl ESI,16
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-2]
            mov QWORD PTR [RBX+24],RCX
            mov QWORD PTR [RBX+16],RDX
            add DWORD PTR [RBX+8],48
            shl ESI,8
            or RAX,RSI
            mov QWORD PTR [RBX],RAX
            add QWORD PTR [RBP+160],6
            mov EAX,1
            sub QWORD PTR [RBP+168],6
            jmp .L_41d375
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d368:

            test EAX,EAX
            jne .L_41d460

            mov EAX,1
.L_41d375:

            pop RBX
.L_41d376:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_41d380:

            mov RSI,QWORD PTR [RBP+160]
            test RSI,RSI
            jle .L_41d39f

            mov RDI,R14
            call .L_404a20

            mov QWORD PTR [RBP+160],0
.L_41d39f:

            mov RDX,R13
            mov ESI,1
            mov RDI,R14
            call .L_41d170

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_41d3c5

            mov RDX,QWORD PTR [RBX+16]
            test RDX,RDX
            jne .L_41d2a4
.L_41d3c5:

            xor EAX,EAX
            jmp .L_41d375
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d3d0:

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,6
            jle .L_41d297

            mov RCX,QWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX]
            sub RDX,7
            movzx ESI,BYTE PTR [RCX+6]
            shl RAX,56
            add RCX,7
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-7]
            shl RSI,48
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-6]
            shl RSI,40
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-5]
            shl RSI,32
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-4]
            shl ESI,24
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-3]
            shl ESI,16
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-2]
            mov QWORD PTR [RBX+24],RCX
            mov QWORD PTR [RBX+16],RDX
            add DWORD PTR [RBX+8],56
            shl ESI,8
            or RAX,RSI
            mov QWORD PTR [RBX],RAX
            add QWORD PTR [RBP+160],7
            mov EAX,1
            sub QWORD PTR [RBP+168],7
            jmp .L_41d375
.L_41d460:

            mov RDX,QWORD PTR [RBX+16]
            jmp .L_41d297
.L_41d469:

            mov RAX,QWORD PTR [RBX+24]
            sub RDX,8
            mov RCX,QWORD PTR [RAX]
            add RAX,8
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [RBX+24],RAX
            add DWORD PTR [RBX+8],64
            mov EAX,1
            bswap RCX
            mov QWORD PTR [RBX],RCX
            add QWORD PTR [RBP+160],8
            sub QWORD PTR [RBP+168],8
            jmp .L_41d375
.L_41d4a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d4b0:

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RBP+2472]
            mov RBX,QWORD PTR [RAX]
            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,7
            jle .L_41d4f0
.L_41d4ce:

            mov RAX,QWORD PTR [RBX+20208]
            sub ECX,8
            mov DWORD PTR [RBX+20216],ECX
            shr RAX,CL
.L_41d4e1:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d4f0:

            lea RSI,QWORD PTR [RBX+20208]
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41d4ce

            cmp ECX,7
            jg .L_41d4ce

            lea RDX,QWORD PTR [RIP+.L_44668e]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov BYTE PTR [RBX+208],0
            xor EAX,EAX
            jmp .L_41d4e1
.L_41d52f:

            nop
.L_41d530:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_41d53b:

            cmp QWORD PTR [RSI+32],0
            mov RBP,RSI
            je .L_41d630
.L_41d549:

            mov RAX,QWORD PTR [R12+2472]
            mov EDX,DWORD PTR [RBP+24]
            mov R13,QWORD PTR [RAX]
            mov EDI,DWORD PTR [R13+20216]
            lea RBX,QWORD PTR [R13+20208]
            cmp EDI,EDX
            jl .L_41d6a8
.L_41d56d:

            mov RSI,QWORD PTR [R13+20208]
            mov ECX,EDI
            lea R9,QWORD PTR [RIP+.L_446c20]
            sub ECX,EDX
            movsxd R8,EDX
            mov RAX,RSI
            shr RAX,CL
            and EAX,DWORD PTR [R9+R8*4]
            mov R8,QWORD PTR [RBP+32]
            lea RAX,QWORD PTR [R8+RAX*8]
            mov R8D,DWORD PTR [RAX]
            movsxd RAX,DWORD PTR [RAX+4]
            test R8D,R8D
            js .L_41d6f8

            cmp R8D,EDX
            jle .L_41d690

            mov DWORD PTR [R13+20216],ECX
            mov RDI,QWORD PTR [RBP]
            jmp .L_41d5df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d5c0:

            sub ECX,1
            mov RAX,RSI
            shr RAX,CL
            mov DWORD PTR [R13+20216],ECX
            and EAX,1
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            test EAX,EAX
            js .L_41d6f8
.L_41d5df:

            lea R14,QWORD PTR [RAX*8]
            lea RDX,QWORD PTR [RDI+R14*1]
            mov EAX,DWORD PTR [RDX]
            cmp EAX,DWORD PTR [RDX+4]
            je .L_41d683

            mov ECX,DWORD PTR [R13+20216]
            test ECX,ECX
            jg .L_41d5c0

            mov RSI,RBX
            mov RDI,R12
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [R13+20216]
            jne .L_41d61f

            test ECX,ECX
            jle .L_41d6cd
.L_41d61f:

            mov RDI,QWORD PTR [RBP]
            mov RSI,QWORD PTR [R13+20208]
            lea RDX,QWORD PTR [RDI+R14*1]
            jmp .L_41d5c0
.L_41d630:

            mov EBX,DWORD PTR [RSI+20]
            cmp EBX,DWORD PTR [RSI+16]
            jl .L_41d641

            cmp EBX,10
            jle .L_41d71c
.L_41d641:

            mov DWORD PTR [RBP+24],10
            mov ESI,8192
            mov EBX,10
.L_41d652:

            mov EDI,1
            call calloc@PLT

            xor R8D,R8D
            xor EDX,EDX
            mov QWORD PTR [RBP+32],RAX
            mov R9D,EBX
            mov RCX,RAX
            mov RSI,RBP
            mov RDI,R12
            call .L_41b1c0

            test EAX,EAX
            je .L_41d549

            mov EAX,4294967295
.L_41d683:

            pop RBX
.L_41d684:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d690:

            sub EDI,R8D
            mov DWORD PTR [R13+20216],EDI
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d6a8:

            mov RDI,R12
            mov RSI,RBX
            call .L_41d240

            test EAX,EAX
            mov EDI,DWORD PTR [R13+20216]
            mov EDX,DWORD PTR [RBP+24]
            jne .L_41d56d

            cmp EDI,EDX
            jge .L_41d56d
.L_41d6cd:

            lea RDX,QWORD PTR [RIP+.L_44668e]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R12
            call .L_432bc0

            mov BYTE PTR [R13+208],0
            mov EAX,4294967295
            jmp .L_41d683
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d6f8:

            lea RDX,QWORD PTR [RIP+.L_446928]
            mov RDI,R12
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            pop RBX
.L_41d70f:

            mov EAX,4294967295
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41d71c:

            mov DWORD PTR [RSI+24],EBX
            mov ECX,EBX
            mov ESI,8
            shl RSI,CL
            jmp .L_41d652
.L_41d72e:

            nop
            nop
.L_41d730:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,88
.L_41d741:

            mov RDI,QWORD PTR [RDI+2472]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RBX,QWORD PTR [RDI]
            call .L_41b5e0

            mov ECX,DWORD PTR [RBX+20216]
            lea R13,QWORD PTR [RBX+20208]
            and ECX,4294967288
            test ECX,ECX
            mov DWORD PTR [RBX+20216],ECX
            jle .L_41dd10
.L_41d77e:

            mov RAX,QWORD PTR [RBX+20208]
            sub ECX,1
            mov DWORD PTR [RBX+20216],ECX
            mov RDX,RAX
            mov RDI,RAX
            shr RDX,CL
            and EDX,1
            test DL,DL
            mov BYTE PTR [RBX+915],DL
            je .L_41d8f0

            cmp ECX,6
            jle .L_41dd40
.L_41d7b1:

            sub ECX,7
            mov R12,RAX
            shr R12,CL
            mov DWORD PTR [RBX+20216],ECX
            mov R14D,R12D
            and R14D,32
            je .L_41d7f0

            cmp ECX,7
            jle .L_41de40
.L_41d7d2:

            sub ECX,8
            mov RDX,RAX
            shr RDX,CL
            mov DWORD PTR [RBX+20216],ECX
            movzx EDX,DL
            add EDX,1
            shl EDX,20
            mov DWORD PTR [RBX+232],EDX
.L_41d7f0:

            test R12B,64
            je .L_41dc40

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,7
            jle .L_41de70
.L_41d809:

            sub ECX,8
            shr RAX,CL
            test R14B,R14B
            mov DWORD PTR [RBX+20216],ECX
            movzx EAX,AL
            mov DWORD PTR [RBX+948],EAX
            mov DWORD PTR [RBX+916],EAX
            je .L_41dc53
.L_41d82d:

            and R12D,31
            add R12D,1
            cmp R12D,16
            mov R13D,R12D
            jg .L_41ddb0

            cmp R12D,1
            je .L_41e104
.L_41d84c:

            lea R12,QWORD PTR [RBX+920]
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            lea R14,QWORD PTR [RBX+20104]
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad50]

            lea RAX,QWORD PTR [RIP+.L_41d4b0]
            mov RDI,R14
            mov QWORD PTR [RBX+20152],RBP
            mov QWORD PTR [RBX+20160],RAX
            call QWORD PTR [RIP+.L_65ad68]

            lea RAX,QWORD PTR [RBX+20152]
            mov RDI,R12
            mov QWORD PTR [RBX+20144],RAX
            call QWORD PTR [RIP+.L_65ad40]

            mov ESI,DWORD PTR [RBX+232]
            test ESI,ESI
            je .L_41e13a

            lea RDX,QWORD PTR [RIP+.L_65b5c0]
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad48]

            test EAX,EAX
            je .L_41e11b

            mov RDI,R14
            call QWORD PTR [RIP+.L_65ad78]

            test EAX,EAX
            je .L_41e0dc

            mov ESI,R13D
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad58]

            mov BYTE PTR [RBX+913],1
            jmp .L_41dc75
          .byte 0x66
          .byte 0x90
.L_41d8f0:

            test ECX,ECX
            jle .L_41ddf0
.L_41d8f8:

            lea ESI,DWORD PTR [RCX-1]
            bt RDI,RSI
            jae .L_41dea0
.L_41d905:

            pxor XMM0,XMM0
            mov DWORD PTR [RBX+20216],ESI
            mov DWORD PTR [RSP+64],0
            xor R14D,R14D
            lea R12,QWORD PTR [RSP+47]
            movaps XMMWORD PTR [RSP+48],XMM0
            jmp .L_41d943
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d930:

            cmp R15D,19
            jg .L_41d9d8
.L_41d93a:

            mov ESI,DWORD PTR [RBX+20216]
            mov R14D,R15D
.L_41d943:

            cmp ESI,3
            jle .L_41da50
.L_41d94c:

            mov RDX,QWORD PTR [RBX+20208]
            lea ECX,DWORD PTR [RSI-4]
            movsxd RSI,R14D
            lea R15D,DWORD PTR [R14+1]
            mov DWORD PTR [RBX+20216],ECX
            mov RAX,RDX
            shr RAX,CL
            and EAX,15
            cmp AL,15
            mov BYTE PTR [RSP+RSI*1+48],AL
            jne .L_41d930

            cmp ECX,3
            jle .L_41daa0
.L_41d97d:

            sub ECX,4
            shr RDX,CL
            mov DWORD PTR [RBX+20216],ECX
            and EDX,15
            je .L_41d930

            movzx EDX,DL
            add EDX,1
            cmp R14D,19
            jg .L_41dee0

            movsxd RAX,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d9a8:

            mov ECX,EAX
            mov R15D,EAX
            mov BYTE PTR [R12+RAX*1],0
            sub ECX,R14D
            cmp EDX,ECX
            setge SIL
            cmp EAX,19
            setle CL
            add RAX,1
            test SIL,CL
            jne .L_41d9a8

            cmp R15D,19
            jle .L_41d93a

            nop
            nop
            nop
            nop
.L_41d9d8:

            pxor XMM0,XMM0
            mov R12,RSP
            lea RDX,QWORD PTR [RSP+48]
            mov ECX,20
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RSP+32],0
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_41b920

            test EAX,EAX
            mov R14D,EAX
            je .L_41db05

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT
.L_41da24:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_41e10d

            add RSP,88
.L_41da3f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41da50:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ESI,DWORD PTR [RBX+20216]
            jne .L_41d94c

            cmp ESI,3
            jg .L_41d94c
.L_41da72:

            lea RDX,QWORD PTR [RIP+.L_44668e]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R14D,4294967266
            call .L_432bc0

            mov BYTE PTR [RBX+208],0
            jmp .L_41da24
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41daa0:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            je .L_41dac8

            mov RDX,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_41d97d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dac8:

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,3
            jle .L_41da72

            mov RDX,QWORD PTR [RBX+20208]
            jmp .L_41d97d
          .byte 0x90
.L_41dae0:

            movsxd RDX,R14D
            add R14D,1
            add AL,BYTE PTR [RBX+RDX*1+432]
            and EAX,15
            mov BYTE PTR [RBX+RDX*1+432],AL
.L_41daf8:

            cmp R14D,403
            jg .L_41dff8
.L_41db05:

            mov RSI,R12
            mov RDI,RBP
            call .L_41d530

            test EAX,EAX
            js .L_41dfd7

            cmp EAX,15
            jle .L_41dae0

            cmp EAX,17
            jg .L_41dbc0

            test R14D,R14D
            je .L_41e0a8

            cmp EAX,16
            mov ECX,DWORD PTR [RBX+20216]
            je .L_41df50

            cmp ECX,6
            jle .L_41de18
.L_41db47:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,7
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,127
            add ESI,11
.L_41db60:

            cmp R14D,403
            jg .L_41dff8

            lea EAX,DWORD PTR [R14+1]
            lea R9,QWORD PTR [RBX-2]
            lea RDX,QWORD PTR [RBX-1]
            cdqe 
            nop
            nop
            nop
            nop
            nop
.L_41db80:

            movzx ECX,BYTE PTR [R9+RAX*1+432]
            mov R8D,EAX
            mov BYTE PTR [RDX+RAX*1+432],CL
            mov ECX,EAX
            sub ECX,R14D
            cmp ESI,ECX
            setg DIL
            cmp EAX,403
            setle CL
            add RAX,1
            test DIL,CL
            jne .L_41db80

            mov R14D,R8D
            jmp .L_41daf8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dbc0:

            cmp EAX,18
            mov ECX,DWORD PTR [RBX+20216]
            je .L_41def0

            cmp ECX,6
            jle .L_41ddc0
.L_41dbd8:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,7
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,127
            add ESI,11
.L_41dbf1:

            cmp R14D,403
            jg .L_41dff8

            lea EAX,DWORD PTR [R14+1]
            lea RDX,QWORD PTR [RBX-1]
            cdqe 
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dc10:

            mov ECX,EAX
            mov R8D,EAX
            mov BYTE PTR [RDX+RAX*1+432],0
            sub ECX,R14D
            cmp ESI,ECX
            setg DIL
            cmp EAX,403
            setle CL
            add RAX,1
            test DIL,CL
            jne .L_41dc10

            mov R14D,R8D
            jmp .L_41daf8
          .byte 0x90
.L_41dc40:

            test R14B,R14B
            mov DWORD PTR [RBX+916],2
            jne .L_41d82d
.L_41dc53:

            cmp BYTE PTR [RBX+913],0
            je .L_41e112

            lea RDI,QWORD PTR [RBX+20104]
            call QWORD PTR [RIP+.L_65ad78]

            test EAX,EAX
            je .L_41e0dc
.L_41dc75:

            mov EAX,DWORD PTR [RBX+232]
            mov RDI,QWORD PTR [RBX+840]
            test EAX,EAX
            je .L_41dca0

            test RDI,RDI
            je .L_41dca0

            mov BYTE PTR [RBX+912],0
            xor R14D,R14D
            jmp .L_41da24
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dca0:

            mov RAX,QWORD PTR [RBX+40]
            cmp RAX,4194303
            jle .L_41dd68

            mov R13D,4194304
            mov R12D,4194304
.L_41dcbc:

            mov RSI,R13
            call realloc@PLT

            test RAX,RAX
            je .L_41e0e5

            mov QWORD PTR [RBX+840],RAX
            mov DWORD PTR [RBX+232],R12D
            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            xor R14D,R14D
            call memset@PLT

            mov EAX,DWORD PTR [RBX+232]
            mov BYTE PTR [RBX+912],0
            sub EAX,1
            mov DWORD PTR [RBX+848],EAX
            jmp .L_41da24
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dd10:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41d77e

            test ECX,ECX
            jg .L_41d77e

            jmp .L_41da72

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dd40:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            je .L_41df90

            mov RAX,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_41d7b1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41dd68:

            mov R12D,EAX
            shr R12D,1
            or R12D,EAX
            mov EAX,R12D
            shr EAX,2
            or R12D,EAX
            mov EAX,R12D
            shr EAX,4
            or R12D,EAX
            mov EAX,R12D
            shr EAX,8
            or R12D,EAX
            mov EAX,R12D
            shr EAX,16
            or R12D,EAX
            mov EAX,R12D
            shr EAX,1
            sub R12D,EAX
            lea R13D,DWORD PTR [R12+R12*1]
            mov R12,R13
            jmp .L_41dcbc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ddb0:

            lea R13D,DWORD PTR [R12+R12*2-32]
            jmp .L_41d84c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ddc0:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41dbd8

            cmp ECX,6
            jg .L_41dbd8

            jmp .L_41df0f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ddf0:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            je .L_41dfab

            mov RDI,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_41d8f8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41de18:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41db47

            cmp ECX,6
            jg .L_41db47

            jmp .L_41df0f
          .byte 0x90
.L_41de40:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            jne .L_41dfc5

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,7
            jle .L_41da72

            mov RAX,QWORD PTR [RBX+20208]
            jmp .L_41d7d2
          .byte 0x66
          .byte 0x90
.L_41de70:

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41de8e

            cmp ECX,7
            jle .L_41da72
.L_41de8e:

            mov RAX,QWORD PTR [RBX+20208]
            jmp .L_41d809
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dea0:

            lea RDI,QWORD PTR [RBX+440]
            mov EAX,EBX
            mov QWORD PTR [RBX+432],0
            mov QWORD PTR [RBX+828],0
            and RDI,-8
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+836]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_41d905
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dee0:

            mov R15D,R14D
            jmp .L_41d930
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41def0:

            cmp ECX,2
            jg .L_41df30

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41df30

            cmp ECX,2
            jg .L_41df30
.L_41df0f:

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            jmp .L_41da72
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41df30:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,3
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,7
            add ESI,3
            jmp .L_41dbf1
          .byte 0x66
          .byte 0x90
.L_41df50:

            cmp ECX,2
            jg .L_41df6f

            mov RSI,R13
            mov RDI,RBP
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_41df6f

            cmp ECX,2
            jle .L_41df0f
.L_41df6f:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,3
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,7
            add ESI,3
            jmp .L_41db60
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41df90:

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,6
            jle .L_41da72

            mov RAX,QWORD PTR [RBX+20208]
            jmp .L_41d7b1
.L_41dfab:

            mov ECX,DWORD PTR [RBX+20216]
            test ECX,ECX
            jle .L_41da72

            mov RDI,QWORD PTR [RBX+20208]
            jmp .L_41d8f8
.L_41dfc5:

            mov RAX,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_41d7d2
.L_41dfd7:

            mov RDI,QWORD PTR [RSP]
            mov R14D,4294967266
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            jmp .L_41da24
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41dff8:

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            lea RDX,QWORD PTR [RBX+432]
            lea RSI,QWORD PTR [RBX+272]
            mov ECX,299
            mov RDI,RBP
            call .L_41b920

            test EAX,EAX
            mov R14D,EAX
            jne .L_41da24

            lea RDX,QWORD PTR [RBX+731]
            lea RSI,QWORD PTR [RBX+312]
            mov ECX,60
            mov RDI,RBP
            call .L_41b920

            test EAX,EAX
            mov R14D,EAX
            jne .L_41da24

            lea RDX,QWORD PTR [RBX+791]
            lea RSI,QWORD PTR [RBX+352]
            mov ECX,17
            mov RDI,RBP
            call .L_41b920

            test EAX,EAX
            mov R14D,EAX
            jne .L_41da24

            lea RDX,QWORD PTR [RBX+808]
            lea RSI,QWORD PTR [RBX+392]
            mov ECX,28
            mov RDI,RBP
            call .L_41b920

            test EAX,EAX
            mov R14D,EAX
            je .L_41dc75

            jmp .L_41da24
.L_41e0a8:

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_446978]
.L_41e0c2:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            mov R14D,4294967266
            jmp .L_41da24
.L_41e0dc:

            lea RDX,QWORD PTR [RIP+.L_446950]
            jmp .L_41e0c2
.L_41e0e5:

            lea RDX,QWORD PTR [RIP+.L_446748]
            mov ESI,12
            mov RDI,RBP
            mov R14D,4294967266
            call .L_432bc0

            jmp .L_41da24
.L_41e104:

            lea RDX,QWORD PTR [RIP+.L_44668e]
            jmp .L_41e0c2
.L_41e10d:

            call __stack_chk_fail@PLT
.L_41e112:

            lea RDX,QWORD PTR [RIP+.L_4466c3]
            jmp .L_41e0c2
.L_41e11b:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            mov ESI,12
            mov RDI,RBP
            mov R14D,4294967266
            call .L_432bc0

            jmp .L_41da24
.L_41e13a:

            lea RDX,QWORD PTR [RIP+.L_4466a6]
            jmp .L_41e0c2
.L_41e146:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e150:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,104
.L_41e161:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
            mov R15,QWORD PTR [RAX]
            cmp DWORD PTR [R15+20240],-1
            jne .L_41e19e

            mov DWORD PTR [R15+20240],0
.L_41e19e:

            mov RSI,QWORD PTR [R15+160]
            test RSI,RSI
            jle .L_41e1bd

            mov RDI,R12
            call .L_404a20

            mov QWORD PTR [R15+160],0
.L_41e1bd:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RAX],0
            cmp BYTE PTR [R15+237],0
            jne .L_41e1df

            mov RAX,QWORD PTR [R15+40]
            cmp QWORD PTR [R15+200],RAX
            jl .L_41e238
.L_41e1df:

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+16]
            mov R14D,1
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [R15+184]
            mov QWORD PTR [RBX],RAX
            mov RDX,QWORD PTR [R15+40]
            cmp RAX,RDX
            jl .L_41e230
.L_41e209:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_41f204

            add RSP,104
.L_41e224:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41e230:

            mov QWORD PTR [RBX],RDX
            jmp .L_41e209
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e238:

            movzx EAX,BYTE PTR [R15+23]
            cmp AL,48
            je .L_41e368

            jl .L_41e590

            cmp AL,53
            jg .L_41e590

            mov QWORD PTR [RSP+40],R15
            mov QWORD PTR [RSP+24],R12
.L_41e25d:

            mov RAX,QWORD PTR [RSP+24]
            xor R14D,R14D
            mov RAX,QWORD PTR [RAX+2472]
            mov R15,QWORD PTR [RAX]
.L_41e26f:

            cmp BYTE PTR [R15+208],0
            je .L_41ef2e

            cmp BYTE PTR [R15+914],0
            jne .L_41ef3e

            mov EAX,DWORD PTR [R15+232]
            test EAX,EAX
            je .L_41e410

            mov RDX,QWORD PTR [R15+184]
            cmp RDX,QWORD PTR [R15+40]
            jge .L_41ef3e

            cmp BYTE PTR [R15+915],0
            jne .L_41e410

            mov RAX,QWORD PTR [R15+176]
            test RAX,RAX
            jle .L_41e410

            mov EBX,DWORD PTR [R15+216]
            sub EBX,DWORD PTR [R15+212]
            mov RBP,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            cmp RAX,RBX
            mov RSI,RBP
            cmovle RBX,RAX
            mov ECX,EBX
            call .L_41b3b0

            test EAX,EAX
            mov R14D,EAX
            jne .L_41e5ce

            mov RSI,QWORD PTR [RBP]
            add QWORD PTR [R15+184],RBX
            sub QWORD PTR [R15+176],RBX
            test RSI,RSI
            je .L_41e26f

            mov EAX,DWORD PTR [R15+216]
            mov RCX,QWORD PTR [RSP+8]
            mov DWORD PTR [R15+212],0
            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R15+192]
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RCX]
            add QWORD PTR [R15+192],RAX
            mov RDI,QWORD PTR [R15+240]
            mov RDX,QWORD PTR [RCX]
            call crc32@PLT

            mov QWORD PTR [R15+240],RAX
            jmp .L_41e209
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e368:

            mov RAX,QWORD PTR [R12+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+168],0
            jne .L_41e390

            test BYTE PTR [RBX],1
            je .L_41e5d8

            test BYTE PTR [RBX+24],2
            je .L_41e5d8
.L_41e390:

            lea RDX,QWORD PTR [RSP+80]
            mov ESI,1
            mov RDI,R12
            call .L_41d170

            mov RDX,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP]
            test RDX,RDX
            mov QWORD PTR [RCX],RAX
            jle .L_41f1e1

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RAX
            xor R14D,R14D
            mov QWORD PTR [RCX],RDX
            mov RCX,QWORD PTR [RBX+184]
            mov QWORD PTR [RDI],RCX
            add QWORD PTR [RBX+184],RDX
            add QWORD PTR [RBX+200],RDX
            mov RDI,QWORD PTR [RBX+240]
            sub QWORD PTR [RBX+168],RDX
            mov QWORD PTR [RBX+160],RDX
            call crc32@PLT

            mov QWORD PTR [RBX+240],RAX
            jmp .L_41e209
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e410:

            cmp QWORD PTR [R15+20232],0
            je .L_41e810
.L_41e41e:

            cmp BYTE PTR [R15+912],0
            jne .L_41e5b8
.L_41e42c:

            cmp BYTE PTR [R15+915],0
            je .L_41e8e0

            lea R12,QWORD PTR [R15+20104]
            lea RBP,QWORD PTR [R15+920]
            mov RBX,QWORD PTR [RIP+.L_65ad80]
            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            mov R13D,EAX
            js .L_41ef18

            cmp EAX,DWORD PTR [R15+916]
            jne .L_41e498

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_41ef18

            cmp EAX,5
            ja .L_41e498

            lea RDX,QWORD PTR [RIP+.L_446a70]
            mov EAX,EAX
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e498:

            mov RAX,QWORD PTR [R15+856]
            and EAX,DWORD PTR [R15+848]
            mov RDX,QWORD PTR [R15+840]
            cdqe 
            mov BYTE PTR [RDX+RAX*1],R13B
            mov RAX,QWORD PTR [R15+176]
            add QWORD PTR [R15+856],1
            lea RCX,QWORD PTR [RAX+1]
            mov QWORD PTR [R15+176],RCX
.L_41e4cd:

            mov EBX,DWORD PTR [R15+216]
            sub EBX,DWORD PTR [R15+212]
            mov RDX,QWORD PTR [R15+184]
            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            cmp RBX,RCX
            cmovge RBX,RCX
            mov ECX,EBX
            call .L_41b3b0

            test EAX,EAX
            mov R14D,EAX
            jne .L_41e5ce

            add QWORD PTR [R15+184],RBX
            sub QWORD PTR [R15+176],RBX
.L_41e512:

            mov RAX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RAX]
            test RSI,RSI
            je .L_41e26f

            mov R13,R15
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [R13+216]
            mov DWORD PTR [R13+212],0
            mov R15,QWORD PTR [RSP+40]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R13+192]
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RCX]
            add QWORD PTR [R13+192],RAX
            mov RDI,QWORD PTR [R13+240]
            mov RDX,QWORD PTR [RCX]
            call crc32@PLT

            mov QWORD PTR [R13+240],RAX
.L_41e573:

            test R14D,R14D
            je .L_41e209

            cmp R14D,-20
            jne .L_41e716

            jmp .L_41e209
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e590:

            lea RDX,QWORD PTR [RIP+.L_4469e8]
.L_41e597:

            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov R14D,4294967266
            jmp .L_41e209
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e5b8:

            mov RDI,QWORD PTR [RSP+24]
            call .L_41d730

            cmp EAX,-20
            mov R14D,EAX
            jge .L_41e42c
.L_41e5ce:

            mov R15,QWORD PTR [RSP+40]
            jmp .L_41e573
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e5d8:

            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RBX+184]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RBX+240]
            cmp QWORD PTR [RBX+8],RAX
            jne .L_41f15e

            mov BYTE PTR [RBX+237],1
            mov R14D,1
            jmp .L_41e209
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e620:

            mov R14D,16
            xor R13D,R13D
.L_41e629:

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_41ef18

            mov ECX,R14D
            sub R14D,8
            shl EAX,CL
            or R13D,EAX
            cmp R14D,-8
            jne .L_41e629

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_41ef18

            mov ECX,DWORD PTR [R15+848]
            mov EDX,DWORD PTR [R15+856]
            lea EBX,DWORD PTR [RAX+32]
            add R13D,2
            mov R12D,EBX
            and EDX,ECX
            mov EAX,EDX
            sub EAX,R13D
            and EAX,ECX
            jmp .L_41e6d9
          .byte 0x66
          .byte 0x90
.L_41e680:

            sub EBP,EDX
            cmp EBP,R12D
            cmovg EBP,R12D
.L_41e689:

            mov RSI,QWORD PTR [R15+840]
            lea R13D,DWORD PTR [RBP+RDX*1]
            movsxd RDI,EDX
            movsxd R8,EAX
            lea R14D,DWORD PTR [RBP+RAX*1]
            add RDI,RSI
            add RSI,R8
            cmp R13D,EAX
            jl .L_41e6b4

            cmp EDX,R14D
            jle .L_41e8a8
.L_41e6b4:

            movsxd RDX,EBP
            call memcpy@PLT

            mov ECX,DWORD PTR [R15+848]
.L_41e6c3:

            sub R12D,EBP
            mov EDX,R13D
            mov EAX,R14D
            and EDX,ECX
            and EAX,ECX
            test R12D,R12D
            jle .L_41e7f0
.L_41e6d9:

            cmp EDX,EAX
            lea EBP,DWORD PTR [RCX+1]
            jg .L_41e680

            sub EBP,EAX
            cmp EBP,R12D
            cmovg EBP,R12D
            jmp .L_41e689
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e6f0:

            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_4469a0]
            mov ESI,4294967295
            xor EAX,EAX
            mov R14D,4294967271
            mov R15,QWORD PTR [RSP+40]
            mov RDI,R12
            call .L_432bc0
.L_41e716:

            lea RDI,QWORD PTR [R15+920]
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            call QWORD PTR [RIP+.L_65ad50]

            jmp .L_41e209
          .byte 0x90
.L_41e730:

            mov BYTE PTR [R15+914],1
            jmp .L_41e512
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e740:

            mov BYTE PTR [R15+912],1
            jmp .L_41e25d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e750:

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_41ef18

            mov ECX,DWORD PTR [R15+848]
            mov EDX,DWORD PTR [R15+856]
            lea EBX,DWORD PTR [RAX+4]
            mov R12D,EBX
            and EDX,ECX
            lea EAX,DWORD PTR [RDX-1]
            and EAX,ECX
            jmp .L_41e7d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e780:

            sub EBP,EDX
            cmp EBP,R12D
            cmovg EBP,R12D
.L_41e789:

            mov RSI,QWORD PTR [R15+840]
            lea R13D,DWORD PTR [RBP+RDX*1]
            movsxd RDI,EDX
            movsxd R8,EAX
            lea R14D,DWORD PTR [RBP+RAX*1]
            add RDI,RSI
            add RSI,R8
            cmp R13D,EAX
            jl .L_41e7b4

            cmp EDX,R14D
            jle .L_41e870
.L_41e7b4:

            movsxd RDX,EBP
            call memcpy@PLT

            mov ECX,DWORD PTR [R15+848]
.L_41e7c3:

            sub R12D,EBP
            mov EDX,R13D
            mov EAX,R14D
            and EDX,ECX
            and EAX,ECX
            test R12D,R12D
            jle .L_41e7f0
.L_41e7d5:

            cmp EDX,EAX
            lea EBP,DWORD PTR [RCX+1]
            jg .L_41e780

            sub EBP,EAX
            cmp EBP,R12D
            cmovg EBP,R12D
            jmp .L_41e789
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e7f0:

            movsxd RCX,EBX
            add QWORD PTR [R15+856],RCX
            add RCX,QWORD PTR [R15+176]
            mov QWORD PTR [R15+176],RCX
            jmp .L_41e4cd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e810:

            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX+2472]
            mov RAX,QWORD PTR [RAX]
            cmp QWORD PTR [RAX+168],0
            jle .L_41e866

            mov RDI,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [R15+20224]
            mov ESI,1
            lea RBX,QWORD PTR [R15+20208]
            call .L_41d170

            test RAX,RAX
            mov QWORD PTR [R15+20232],RAX
            je .L_41f236

            mov R14D,DWORD PTR [R15+20216]
            test R14D,R14D
            je .L_41efa4
.L_41e866:

            xor R14D,R14D
            jmp .L_41e41e
          .byte 0x66
          .byte 0x90
.L_41e870:

            test EBP,EBP
            jle .L_41e7c3

            lea ECX,DWORD PTR [RBP-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e888:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            add RAX,1
            cmp RCX,RAX
            jne .L_41e888

            mov ECX,DWORD PTR [R15+848]
            jmp .L_41e7c3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e8a8:

            test EBP,EBP
            jle .L_41e6c3

            lea ECX,DWORD PTR [RBP-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e8c0:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            add RAX,1
            cmp RCX,RAX
            jne .L_41e8c0

            mov ECX,DWORD PTR [R15+848]
            jmp .L_41e6c3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e8e0:

            mov EBX,DWORD PTR [R15+232]
            mov RAX,QWORD PTR [R15+184]
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+64],RAX
            add RBX,RAX
            movabs RAX,9223372036854775807
            mov QWORD PTR [R15+904],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX+2472]
            mov R14,QWORD PTR [RAX]
            lea RAX,QWORD PTR [R14+20208]
            cmp QWORD PTR [R14+904],RBX
            mov RCX,QWORD PTR [R14+856]
            cmovle RBX,QWORD PTR [R14+904]
            mov QWORD PTR [RSP+56],RAX
            movzx EAX,BYTE PTR [R14+864]
            mov QWORD PTR [RSP+32],RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e950:

            test AL,AL
            jne .L_41eaa0
.L_41e958:

            lea RBP,QWORD PTR [R14+272]
.L_41e95f:

            cmp BYTE PTR [R14+915],0
            jne .L_41eab8

            cmp RCX,QWORD PTR [RSP+32]
            jge .L_41eab8

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,RBP
            call .L_41d530

            test EAX,EAX
            js .L_41ef2e

            cmp EAX,255
            mov BYTE PTR [R14+864],0
            jle .L_41eb10

            cmp EAX,256
            je .L_41eb50

            cmp EAX,257
            je .L_41e6f0

            cmp EAX,258
            je .L_41ec88

            cmp EAX,262
            mov EBX,EAX
            jle .L_41ee10

            cmp EAX,270
            jg .L_41ecb0

            lea EAX,DWORD PTR [RAX-263]
            lea RDX,QWORD PTR [RIP+.L_446bd8]
            cdqe 
            movzx EBP,BYTE PTR [RDX+RAX*1]
            lea RDX,QWORD PTR [RIP+.L_446bd0]
            movzx EBX,BYTE PTR [RDX+RAX*1]
            add EBP,1
            test BL,BL
            je .L_41ea4d

            mov ECX,DWORD PTR [R14+20216]
            cmp ECX,EBX
            jge .L_41ea2b

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            jne .L_41ea2b

            cmp EBX,ECX
            jg .L_41efdc
.L_41ea2b:

            mov RAX,QWORD PTR [R14+20208]
            lea RDX,QWORD PTR [RIP+.L_446c20]
            sub ECX,EBX
            movsxd RBX,EBX
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RDX+RBX*4]
            add EBP,EAX
.L_41ea4d:

            mov EAX,DWORD PTR [R14+884]
            mov RCX,QWORD PTR [R14+856]
            mov DWORD PTR [R14+888],EAX
            mov EAX,DWORD PTR [R14+880]
            mov DWORD PTR [R14+884],EAX
            mov EAX,DWORD PTR [R14+876]
            mov DWORD PTR [R14+876],EBP
            mov DWORD PTR [R14+880],EAX
            mov EAX,2
.L_41ea8a:

            mov DWORD PTR [R14+872],EBP
            mov DWORD PTR [R14+868],EAX
            mov BYTE PTR [R14+864],1
.L_41eaa0:

            mov EAX,DWORD PTR [R14+868]
            mov RBP,RAX
            add RAX,RCX
            cmp RAX,QWORD PTR [RSP+32]
            jle .L_41eba0
.L_41eab8:

            mov R15,QWORD PTR [RSP+48]
.L_41eabd:

            test RCX,RCX
            js .L_41f26b

            sub RCX,QWORD PTR [RSP+64]
            test RCX,RCX
            mov QWORD PTR [R15+176],RCX
            jne .L_41e4cd

            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_4469c0]
            nop
            nop
            nop
            nop
.L_41eaf0:

            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov R14D,4294967266
            jmp .L_41e716
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41eb10:

            mov EBX,EAX
            mov RAX,QWORD PTR [R14+856]
            and EAX,DWORD PTR [R14+848]
            mov RDX,QWORD PTR [R14+840]
            cdqe 
            mov BYTE PTR [RDX+RAX*1],BL
            mov RAX,QWORD PTR [R14+856]
            lea RCX,QWORD PTR [RAX+1]
            movzx EAX,BYTE PTR [R14+864]
            mov QWORD PTR [R14+856],RCX
            jmp .L_41e950
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41eb50:

            mov EAX,DWORD PTR [R14+20216]
            test EAX,EAX
            jle .L_41efb6
.L_41eb5f:

            mov RDX,QWORD PTR [R14+20208]
            sub EAX,1
            mov DWORD PTR [R14+20216],EAX
            bt RDX,RAX
            jae .L_41f16a

            mov RDI,QWORD PTR [RSP+24]
            call .L_41d730

            test EAX,EAX
            jne .L_41ef2e

            movzx EAX,BYTE PTR [R14+864]
            mov RCX,QWORD PTR [R14+856]
            jmp .L_41e950
.L_41eba0:

            mov R10D,DWORD PTR [R14+848]
            mov EDX,R10D
            and EDX,ECX
            mov EAX,EDX
            sub EAX,DWORD PTR [R14+872]
            and EAX,R10D
            test EBP,EBP
            jle .L_41ec67

            mov R13D,EBP
            jmp .L_41ec19
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ebc8:

            sub EBX,EDX
            cmp EBX,R13D
            cmovg EBX,R13D
.L_41ebd1:

            mov RSI,QWORD PTR [R14+840]
            lea R12D,DWORD PTR [RBX+RDX*1]
            movsxd RDI,EDX
            movsxd RCX,EAX
            lea R15D,DWORD PTR [RBX+RAX*1]
            add RDI,RSI
            add RSI,RCX
            cmp R12D,EAX
            jl .L_41ebf6

            cmp R15D,EDX
            jge .L_41ec30
.L_41ebf6:

            movsxd RDX,EBX
            call memcpy@PLT

            mov R10D,DWORD PTR [R14+848]
.L_41ec05:

            sub R13D,EBX
            mov EDX,R12D
            mov EAX,R15D
            and EDX,R10D
            and EAX,R10D
            test R13D,R13D
            jle .L_41ec60
.L_41ec19:

            cmp EAX,EDX
            lea EBX,DWORD PTR [R10+1]
            jl .L_41ebc8

            sub EBX,EAX
            cmp EBX,R13D
            cmovg EBX,R13D
            jmp .L_41ebd1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ec30:

            test EBX,EBX
            jle .L_41ec05

            lea ECX,DWORD PTR [RBX-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
.L_41ec40:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            add RAX,1
            cmp RCX,RAX
            jne .L_41ec40

            mov R10D,DWORD PTR [R14+848]
            jmp .L_41ec05
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ec60:

            mov RCX,QWORD PTR [R14+856]
.L_41ec67:

            movsxd RBP,EBP
            mov BYTE PTR [R14+864],0
            add RCX,RBP
            mov QWORD PTR [R14+856],RCX
            jmp .L_41e958
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ec88:

            mov EAX,DWORD PTR [R14+868]
            mov RCX,QWORD PTR [R14+856]
            test EAX,EAX
            je .L_41e95f

            mov EBP,DWORD PTR [R14+872]
            jmp .L_41ea8a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ecb0:

            cmp EAX,299
            jg .L_41f148

            lea EAX,DWORD PTR [RAX-271]
            lea RCX,QWORD PTR [RIP+.L_446c00]
            cdqe 
            movzx EBX,BYTE PTR [RCX+RAX*1]
            lea RCX,QWORD PTR [RIP+.L_446be0]
            movzx EBP,BYTE PTR [RCX+RAX*1]
            add EBX,3
            test BPL,BPL
            je .L_41ed12

            mov ECX,DWORD PTR [R14+20216]
            cmp ECX,EBP
            jl .L_41f08c
.L_41ecf0:

            mov RAX,QWORD PTR [R14+20208]
            lea RDX,QWORD PTR [RIP+.L_446c20]
            sub ECX,EBP
            movsxd RBP,EBP
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RDX+RBP*4]
            add EBX,EAX
.L_41ed12:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [R14+312]
            call .L_41d530

            cmp EAX,60
            ja .L_41f148

            lea RCX,QWORD PTR [RIP+.L_446ae0]
            movsxd RDX,EAX
            mov ECX,DWORD PTR [RCX+RDX*4]
            lea R8D,DWORD PTR [RCX+1]
            mov DWORD PTR [RSP+72],ECX
            lea RCX,QWORD PTR [RIP+.L_446aa0]
            movzx EDX,BYTE PTR [RCX+RDX*1]
            mov EBP,R8D
            test DL,DL
            je .L_41edbf

            cmp EAX,9
            jle .L_41f028

            cmp DL,4
            jbe .L_41ed9f

            mov EAX,DWORD PTR [R14+20216]
            lea EBP,DWORD PTR [RDX-4]
            cmp EAX,EBP
            jl .L_41f1ac
.L_41ed73:

            mov RDX,QWORD PTR [R14+20208]
            sub EAX,EBP
            movsxd RBP,EBP
            mov ECX,EAX
            mov DWORD PTR [R14+20216],EAX
            shr RDX,CL
            lea RCX,QWORD PTR [RIP+.L_446c20]
            mov EDI,DWORD PTR [RCX+RBP*4]
            and EDI,EDX
            mov EBP,EDI
            shl EBP,4
            add EBP,R8D
.L_41ed9f:

            mov EAX,DWORD PTR [R14+896]
            test EAX,EAX
            je .L_41f118

            add EBP,DWORD PTR [R14+892]
            sub EAX,1
            mov DWORD PTR [R14+896],EAX
.L_41edbf:

            cmp EBP,262143
            jle .L_41f010

            add EBX,1
.L_41edce:

            add EBX,1
.L_41edd1:

            mov EAX,DWORD PTR [R14+884]
            mov RCX,QWORD PTR [R14+856]
            mov DWORD PTR [R14+888],EAX
            mov EAX,DWORD PTR [R14+880]
            mov DWORD PTR [R14+884],EAX
            mov EAX,DWORD PTR [R14+876]
            mov DWORD PTR [R14+876],EBP
            mov DWORD PTR [R14+880],EAX
            mov EAX,EBX
            jmp .L_41ea8a
.L_41ee10:

            mov R15,QWORD PTR [RSP+24]
            lea R13D,DWORD PTR [RAX-259]
            lea RSI,QWORD PTR [R14+392]
            movsxd RAX,R13D
            mov RDI,R15
            mov EBP,DWORD PTR [R14+RAX*4+876]
            call .L_41d530

            cmp EAX,28
            ja .L_41f148

            lea RCX,QWORD PTR [RIP+.L_446c00]
            cdqe 
            movzx EDX,BYTE PTR [RCX+RAX*1]
            lea RCX,QWORD PTR [RIP+.L_446be0]
            movzx R8D,BYTE PTR [RCX+RAX*1]
            add EDX,2
            test R8B,R8B
            je .L_41eec3

            mov ECX,DWORD PTR [R14+20216]
            cmp ECX,R8D
            jge .L_41ee9f

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,R15
            mov DWORD PTR [RSP+76],R8D
            mov DWORD PTR [RSP+72],EDX
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            mov EDX,DWORD PTR [RSP+72]
            mov R8D,DWORD PTR [RSP+76]
            jne .L_41ee9f

            cmp R8D,ECX
            jg .L_41efdc
.L_41ee9f:

            mov RAX,QWORD PTR [R14+20208]
            lea RSI,QWORD PTR [RIP+.L_446c20]
            sub ECX,R8D
            movsxd R8,R8D
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RSI+R8*4]
            add EDX,EAX
.L_41eec3:

            test R13D,R13D
            je .L_41ef00

            sub EBX,260
            movsxd RCX,EBX
            mov EBX,EBX
            shl RCX,2
            lea RSI,QWORD PTR [R14+RCX*1-4]
            lea RAX,QWORD PTR [R14+RCX*1]
            lea RCX,QWORD PTR [RBX*4]
            sub RSI,RCX
.L_41eeeb:

            mov ECX,DWORD PTR [RAX+876]
            sub RAX,4
            mov DWORD PTR [RAX+884],ECX
            cmp RSI,RAX
            jne .L_41eeeb
.L_41ef00:

            mov DWORD PTR [R14+876],EBP
            mov EAX,EDX
            mov RCX,QWORD PTR [R14+856]
            jmp .L_41ea8a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ef18:

            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_4466e8]
            jmp .L_41eaf0
.L_41ef2e:

            mov R15,QWORD PTR [RSP+40]
            mov R14D,4294967266
            jmp .L_41e716
.L_41ef3e:

            mov R13,R15
            mov R12,QWORD PTR [RSP+24]
            mov R15,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [R13+212]
            test EAX,EAX
            jne .L_41f0c0

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [R13+184]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R13+240]
            cmp QWORD PTR [R13+8],RAX
            jne .L_41f25f

            mov BYTE PTR [R13+237],1
            mov R14D,1
            jmp .L_41e716
.L_41efa4:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,RBX
            call .L_41d240

            jmp .L_41e41e
.L_41efb6:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_41d240

            test EAX,EAX
            mov EAX,DWORD PTR [R14+20216]
            jne .L_41eb5f

            test EAX,EAX
            jg .L_41eb5f
.L_41efdc:

            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_44668e]
            mov ESI,84
            xor EAX,EAX
            mov R15,QWORD PTR [RSP+40]
            mov RDI,R12
            call .L_432bc0

            mov BYTE PTR [R14+208],0
            mov R14D,4294967266
            jmp .L_41e716
          .byte 0x90
.L_41f010:

            cmp EBP,8191
            jle .L_41edd1

            jmp .L_41edce
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f028:

            mov ECX,DWORD PTR [R14+20216]
            movzx EBP,DL
            cmp ECX,EBP
            jge .L_41f062

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+72],R8D
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            mov R8D,DWORD PTR [RSP+72]
            jne .L_41f062

            cmp EBP,ECX
            jg .L_41efdc
.L_41f062:

            lea RSI,QWORD PTR [RIP+.L_446c20]
            mov RAX,QWORD PTR [R14+20208]
            movsxd RDX,EBP
            sub ECX,EBP
            mov EBP,DWORD PTR [RSI+RDX*4]
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EBP,EAX
            add EBP,R8D
            jmp .L_41edbf
.L_41f08c:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_41d240

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            jne .L_41ecf0

            cmp EBP,ECX
            jle .L_41ecf0

            jmp .L_41efdc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f0c0:

            mov RSI,QWORD PTR [R13+224]
            mov RCX,QWORD PTR [RSP]
            xor R14D,R14D
            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RCX],RSI
            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R13+192]
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RCX]
            add QWORD PTR [R13+192],RAX
            mov RDI,QWORD PTR [R13+240]
            mov RDX,QWORD PTR [RCX]
            call crc32@PLT

            mov DWORD PTR [R13+212],0
            mov QWORD PTR [R13+240],RAX
            jmp .L_41e209
.L_41f118:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [R14+352]
            call .L_41d530

            test EAX,EAX
            js .L_41ef2e

            cmp EAX,16
            je .L_41f1ed

            add EBP,EAX
            mov DWORD PTR [R14+892],EAX
            jmp .L_41edbf
.L_41f148:

            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_446570]
            jmp .L_41eaf0
.L_41f15e:

            lea RDX,QWORD PTR [RIP+.L_4466d9]
            jmp .L_41e597
.L_41f16a:

            test EAX,EAX
            mov R15,QWORD PTR [RSP+48]
            mov BYTE PTR [R14+236],1
            jle .L_41f209
.L_41f17f:

            mov EAX,DWORD PTR [R14+20216]
            lea ECX,DWORD PTR [RAX-1]
            mov RAX,RDX
            shr RAX,CL
            mov DWORD PTR [R14+20216],ECX
            mov RCX,QWORD PTR [R14+856]
            and EAX,1
            mov BYTE PTR [R14+912],AL
            jmp .L_41eabd
.L_41f1ac:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+72],R8D
            call .L_41d240

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+72]
            mov EAX,DWORD PTR [R14+20216]
            jne .L_41ed73

            cmp EBP,EAX
            jle .L_41ed73

            jmp .L_41efdc
.L_41f1e1:

            lea RDX,QWORD PTR [RIP+.L_44668e]
            jmp .L_41e597
.L_41f1ed:

            mov DWORD PTR [R14+896],15
            add EBP,DWORD PTR [R14+892]
            jmp .L_41edbf
.L_41f204:

            call __stack_chk_fail@PLT
.L_41f209:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_41d240

            test EAX,EAX
            jne .L_41f22a

            cmp DWORD PTR [R14+20216],0
            jle .L_41efdc
.L_41f22a:

            mov RDX,QWORD PTR [R14+20208]
            jmp .L_41f17f
.L_41f236:

            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_44668e]
            mov ESI,84
            mov R15,QWORD PTR [RSP+40]
            mov R14D,4294967266
            mov RDI,R12
            call .L_432bc0

            jmp .L_41e716
.L_41f25f:

            lea RDX,QWORD PTR [RIP+.L_4466d9]
            jmp .L_41eaf0
.L_41f26b:

            mov R15,QWORD PTR [RSP+40]
            mov R14D,ECX
            jmp .L_41e573
.L_41f278:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f280:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_446a18]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
.L_41f29a:

            call .L_436df0

            cmp EAX,-30
            je .L_41f33c

            mov ESI,1
            mov EDI,20248
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41f343

            mov DWORD PTR [RAX+20240],4294967295
            lea RAX,QWORD PTR [RIP+.L_41b190]
            lea R9,QWORD PTR [RIP+.L_41c8c0]
            lea R8,QWORD PTR [RIP+.L_41b890]
            lea RCX,QWORD PTR [RIP+.L_41b740]
            lea RDX,QWORD PTR [RIP+.L_44670f]
            push RAX
.L_41f2f1:

            lea RAX,QWORD PTR [RIP+.L_41b180]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41b6b0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41cd50]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41d0b0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41e150]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_41f33c

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_41f33c:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_41f343:

            lea RDX,QWORD PTR [RIP+.L_4466f7]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_41f33c
.L_41f360:

            movzx EAX,BYTE PTR [RDI]
            mov R8,RDX
            mov R10D,1
            cmp AL,45
            jne .L_41f37f

            movzx EAX,BYTE PTR [RDI+1]
            mov R10,-1
            add RDI,1
.L_41f37f:

            sub EAX,48
            xor EDX,EDX
            movabs R9,922337203685477580
            cmp AL,9
            ja .L_41f3c6

            nop
            nop
            nop
            nop
            nop
            nop
.L_41f398:

            lea RCX,QWORD PTR [RDX+RDX*4]
            movzx EAX,AL
            add RDI,1
            lea RDX,QWORD PTR [RAX+RCX*2]
            movzx EAX,BYTE PTR [RDI]
            sub EAX,48
            cmp AL,9
            ja .L_41f428

            cmp RDX,R9
            jg .L_41f3bc

            jne .L_41f398

            cmp AL,7
            jbe .L_41f398
.L_41f3bc:

            mov RDX,R10
            shl RDX,63
            sub RDX,R10
.L_41f3c6:

            mov QWORD PTR [RSI],RDX
            mov QWORD PTR [R8],0
            cmp BYTE PTR [RDI],46
            je .L_41f3e0
.L_41f3d5:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f3e0:

            lea R9,QWORD PTR [RDI+9]
            mov EDX,100000000
            movabs RSI,-3689348814741910323
            nop
            nop
            nop
            nop
            nop
.L_41f3f8:

            add RDI,1
            movsx ECX,BYTE PTR [RDI]
            lea EAX,DWORD PTR [RCX-48]
            cmp AL,9
            ja .L_41f3d5

            sub ECX,48
            mov RAX,RDX
            movsxd RCX,ECX
            imul RCX,RDX
            mul RSI
            add QWORD PTR [R8],RCX
            shr RDX,3
            cmp RDI,R9
            jne .L_41f3f8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f428:

            imul RDX,R10
            mov QWORD PTR [RSI],RDX
            mov QWORD PTR [R8],0
            cmp BYTE PTR [RDI],46
            jne .L_41f3d5

            jmp .L_41f3e0
.L_41f43d:

            nop
            nop
            nop
.L_41f440:

            test RSI,RSI
            je .L_41f508

            movsx ECX,BYTE PTR [RDI]
            mov R10D,EDX
            cmp CL,9
            je .L_41f460

            cmp CL,32
            jne .L_41f47b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f460:

            add RDI,1
            sub RSI,1
            je .L_41f508

            movsx ECX,BYTE PTR [RDI]
            cmp CL,32
            je .L_41f460

            cmp CL,9
            je .L_41f460
.L_41f47b:

            cmp CL,45
            push R12
.L_41f480:

            movsxd R11,R10D
            push RBP
            push RBX
.L_41f485:

            je .L_41f520

            movabs R8,9223372036854775807
            mov EBX,1
            mov RAX,R8
            cqo 
            idiv R11
            mov R9,RAX
            mov RAX,R8
.L_41f4a8:

            sub ECX,48
            js .L_41f50b

            xor R8D,R8D
            cmp R10D,ECX
            jg .L_41f4ef

            jmp .L_41f50b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f4c0:

            imul R8,R11
            add RDI,1
            add R8,RCX
            movsx ECX,BYTE PTR [RDI]
            sub ECX,48
            mov EBP,ECX
            not EBP
            shr EBP,31
            sub RSI,1
            setne R12B
            test R12B,BPL
            je .L_41f510

            cmp R10D,ECX
            jle .L_41f510

            cmp R8,R9
            jg .L_41f4fc
.L_41f4ef:

            cmp R8,R9
            movsxd RCX,ECX
            jne .L_41f4c0

            cmp RCX,RDX
            jle .L_41f4c0
.L_41f4fc:

            pop RBX
.L_41f4fd:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f508:

            xor EAX,EAX
            ret 
.L_41f50b:

            xor R8D,R8D
            nop
            nop
.L_41f510:

            cmp EBX,-1
            jne .L_41f55b
.L_41f515:

            mov RAX,R8
            pop RBX
            neg RAX
            pop RBP
            pop R12
            ret 
.L_41f520:

            movabs R8,-9223372036854775808
            lea RBX,QWORD PTR [RDI+1]
            mov RAX,R8
            cqo 
            idiv R11
            neg RAX
            sub RSI,1
            mov R9,RAX
            je .L_41f556

            movsx ECX,BYTE PTR [RDI+1]
            mov RAX,R8
            mov RDI,RBX
            mov EBX,4294967295
            jmp .L_41f4a8
.L_41f556:

            xor R8D,R8D
            jmp .L_41f515
.L_41f55b:

            mov RAX,R8
            jmp .L_41f4fc
.L_41f560:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41f569:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBX+320]
            test RDI,RDI
            je .L_41f59b

            nop
.L_41f580:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RBX+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [RBX+320]
            test RDI,RDI
            jne .L_41f580
.L_41f59b:

            mov RDI,RBX
            mov QWORD PTR [RBX+328],0
            call .L_42e240

            lea RDI,QWORD PTR [RBX+24]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+48]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+72]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+96]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+120]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+240]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+216]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+192]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+168]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+144]
            call .L_42e240

            lea RDI,QWORD PTR [RBX+368]
            call .L_42e240

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_41f63d:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_41f642:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f650:

            push RBX
.L_41f651:

            mov RAX,QWORD PTR [RDI+2472]
            xor ESI,ESI
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+320]
            test RAX,RAX
            je .L_41f69d

            movabs R8,9223372036854775807
            nop
            nop
            nop
            nop
            nop
.L_41f678:

            mov EDX,DWORD PTR [RAX+24]
            test EDX,EDX
            jne .L_41f695

            mov RDX,QWORD PTR [RAX+16]
            mov RCX,R8
            sub RCX,RSI
            cmp RDX,RCX
            jge .L_41f728

            add RSI,RDX
.L_41f695:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_41f678
.L_41f69d:

            cmp QWORD PTR [RBX+272],RSI
            mov RAX,QWORD PTR [RBX+296]
            cmovle RSI,QWORD PTR [RBX+272]
            add RAX,QWORD PTR [RBX+288]
            add RSI,RAX
            call .L_404a20

            test RAX,RAX
            js .L_41f728

            mov RDI,QWORD PTR [RBX+320]
            mov QWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+296],0
            mov QWORD PTR [RBX+288],0
            test RDI,RDI
            je .L_41f713

            nop
            nop
            nop
            nop
.L_41f6f8:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RBX+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [RBX+320]
            test RDI,RDI
            jne .L_41f6f8
.L_41f713:

            mov QWORD PTR [RBX+328],0
            xor EAX,EAX
            pop RBX
.L_41f721:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f728:

            mov EAX,4294967266
            pop RBX
            ret 
.L_41f72f:

            nop
.L_41f730:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            mov R12,RDX
            sub RSP,24
.L_41f74a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R14,RSP
            mov R15,QWORD PTR [RAX]
            mov RDI,QWORD PTR [R15+320]
            nop
            nop
.L_41f770:

            test RDI,RDI
            je .L_41f850

            cmp QWORD PTR [RDI+16],0
            je .L_41f8c8

            mov RSI,QWORD PTR [R15+296]
            test RSI,RSI
            jne .L_41f85c
.L_41f794:

            cmp QWORD PTR [R15+272],0
            je .L_41f880

            mov RDX,R14
            mov ESI,1
            mov RDI,RBX
            call .L_4049d0

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            test RDX,RDX
            js .L_41f8fc

            test RAX,RAX
            je .L_41f8e8

            mov RAX,QWORD PTR [R15+272]
            cmp RDX,RAX
            jle .L_41f7df

            mov QWORD PTR [RSP],RAX
            mov RDX,RAX
.L_41f7df:

            mov RDI,QWORD PTR [R15+320]
            mov RAX,QWORD PTR [RDI+16]
            cmp RAX,RDX
            jge .L_41f7f6

            mov QWORD PTR [RSP],RAX
            mov RDX,RAX
.L_41f7f6:

            mov QWORD PTR [R12],RDX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [R13],RAX
            mov EAX,DWORD PTR [RDI+24]
            sub QWORD PTR [RDI+16],RDX
            add QWORD PTR [RDI+8],RDX
            mov QWORD PTR [R15+296],RDX
            sub QWORD PTR [R15+272],RDX
            test EAX,EAX
            jne .L_41f770

            nop
            nop
            nop
            nop
            nop
.L_41f828:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41f906

            add RSP,24
.L_41f840:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f850:

            mov RSI,QWORD PTR [R15+296]
            test RSI,RSI
            je .L_41f880
.L_41f85c:

            mov RDI,RBX
            call .L_404a20

            cmp QWORD PTR [R15+320],0
            mov QWORD PTR [R15+296],0
            jne .L_41f794

            nop
            nop
            nop
.L_41f880:

            mov RSI,QWORD PTR [R15+288]
            mov RDI,RBX
            call .L_404a20

            test RAX,RAX
            js .L_41f8fc

            mov QWORD PTR [R15+288],0
            mov QWORD PTR [RBP],0
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [R15+304]
            mov QWORD PTR [R13],RAX
            mov EAX,1
            jmp .L_41f828
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f8c8:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [R15+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [R15+320]
            jmp .L_41f770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f8e8:

            lea RDX,QWORD PTR [RIP+.L_446cb0]
            mov ESI,4294967295
            mov RDI,RBX
            call .L_432bc0
.L_41f8fc:

            mov EAX,4294967266
            jmp .L_41f828
.L_41f906:

            call __stack_chk_fail@PLT
.L_41f90b:

            nop
            nop
            nop
            nop
            nop
.L_41f910:

            push RBP
            push RBX
            mov R8,RDI
            mov RAX,RSI
            sub RSP,8
.L_41f91c:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_444ee7]
            mov RBP,QWORD PTR [RCX]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41f968

            xor EAX,EAX
            test RDX,RDX
            je .L_41f950

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_41f950:

            mov DWORD PTR [RBP+428],EAX
            mov DWORD PTR [RBP+424],EAX
.L_41f95c:

            add RSP,8
.L_41f960:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f968:

            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov ECX,11
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41f9c0

            test RDX,RDX
            mov RSI,RDX
            mov RDI,R8
            je .L_41fa40

            cmp BYTE PTR [RDX],0
            je .L_41fa40

            xor EDX,EDX
            call .L_431820

            mov QWORD PTR [RBP+392],RAX
            test RAX,RAX
            mov EAX,4294967266
            cmove EBX,EAX
            add RSP,8
.L_41f9bb:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_41f9c0:

            lea RDI,QWORD PTR [RIP+.L_446cc6]
            mov ECX,8
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41fa20

            lea RDI,QWORD PTR [RIP+.L_446cce]
            mov ECX,27
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41fa5d

            xor EAX,EAX
            test RDX,RDX
            je .L_41fa0b

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_41fa0b:

            mov DWORD PTR [RBP+436],EAX
            add RSP,8
.L_41fa15:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fa20:

            xor EAX,EAX
            test RDX,RDX
            je .L_41fa2f

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_41fa2f:

            mov DWORD PTR [RBP+432],EAX
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41fa40:

            lea RDX,QWORD PTR [RIP+.L_447050]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_432bc0

            jmp .L_41f95c
.L_41fa5d:

            mov EBX,4294967276
            jmp .L_41f95c
.L_41fa67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fa70:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            sub RSP,72
.L_41fa81:

            mov R12,QWORD PTR [RDX]
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+40],RDX
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41fb38
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fab8:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4049d0

            mov R14,QWORD PTR [RSP+48]
            mov RBX,RAX
            test R14,R14
            jle .L_41fcc8

            mov RDX,R14
            mov ESI,10
            mov RDI,RAX
            call memchr@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_41fb70

            lea RBP,QWORD PTR [RAX+1]
            sub RBP,RBX
            cmp R12,RBP
            mov QWORD PTR [RSP+48],RBP
            jl .L_41fc80

            mov QWORD PTR [R13],RBP
.L_41fb0d:

            test RBP,RBP
            jle .L_41fcc8

            mov RAX,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RAX]
            mov R12,RDX
            mov QWORD PTR [RSP+8],RDX
            sub R12,RBP
            mov QWORD PTR [RAX],R12
            movsx EDX,BYTE PTR [RBX]
            cmp DL,35
            jne .L_41fd00
.L_41fb38:

            mov RSI,QWORD PTR [R13]
            cmp R12,100
            mov EAX,100
            cmovg R12,RAX
            test RSI,RSI
            je .L_41fab8

            mov RDI,QWORD PTR [RSP]
            call .L_404a20

            mov QWORD PTR [R13],0
            jmp .L_41fab8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fb70:

            cmp R12,R14
            mov QWORD PTR [R13],R14
            jl .L_41fc80

            mov RAX,QWORD PTR [RSP+24]
            xor EBP,EBP
            add RAX,240
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41fc0a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fb98:

            mov R14,QWORD PTR [RSP+48]
            add R14,RBP
            test R15,R15
            mov RBP,R14
            jne .L_41fc6e
.L_41fbac:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4049d0

            mov RCX,QWORD PTR [RSP+48]
            mov RBX,RAX
            test RCX,RCX
            jle .L_41fcc8

            mov RDX,RCX
            mov ESI,10
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RCX
            call memchr@PLT

            test RAX,RAX
            mov R15,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_41fbfe

            lea RCX,QWORD PTR [RAX+1]
            sub RCX,RBX
            mov QWORD PTR [RSP+48],RCX
.L_41fbfe:

            add R14,RCX
            mov QWORD PTR [R13],RCX
            cmp R12,R14
            jl .L_41fc80
.L_41fc0a:

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R14
            call .L_42e2a0

            test RAX,RAX
            je .L_41fcd8

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBX
            mov RDI,QWORD PTR [RAX+240]
            add RDI,RBP
            call memcpy@PLT

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_41fb98

            mov RDI,QWORD PTR [RSP]
            call .L_404a20

            mov R14,QWORD PTR [RSP+48]
            mov QWORD PTR [R13],0
            add R14,RBP
            test R15,R15
            mov RBP,R14
            je .L_41fbac
.L_41fc6e:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RAX+240]
            jmp .L_41fb0d
          .byte 0x90
.L_41fc80:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4460f2]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            mov RAX,-30
.L_41fc9e:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41fd6f

            add RSP,72
.L_41fcb6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fcc8:

            mov RAX,-30
            jmp .L_41fc9e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fcd8:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_446100]
            mov ESI,12
            call .L_432bc0

            mov RAX,-30
            jmp .L_41fc9e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fd00:

            lea RCX,QWORD PTR [RBX+1]
            xor EAX,EAX
            add RBX,RBP
            movabs RDI,922337203685477580
            movabs R8,9223372036854775807
            jmp .L_41fd44
          .byte 0x90
.L_41fd20:

            sub EDX,48
            cmp EDX,7
            jle .L_41fd2d

            cmp RAX,RDI
            je .L_41fd5b
.L_41fd2d:

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            cmp RBX,RCX
            lea RAX,QWORD PTR [RDX+RAX*2]
            je .L_41fd63
.L_41fd3d:

            movsx EDX,BYTE PTR [RCX]
            add RCX,1
.L_41fd44:

            cmp DL,10
            je .L_41fc9e

            lea ESI,DWORD PTR [RDX-48]
            cmp SIL,9
            ja .L_41fd63

            cmp RAX,RDI
            jle .L_41fd20
.L_41fd5b:

            cmp RBX,RCX
            mov RAX,R8
            jne .L_41fd3d
.L_41fd63:

            mov RAX,-20
            jmp .L_41fc9e
.L_41fd6f:

            call __stack_chk_fail@PLT
.L_41fd74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fd80:

            movzx EDX,BYTE PTR [RDI]
            cmp DL,128
            sete CL
            cmp DL,255
            sete AL
            or CL,AL
            jne .L_41fd99

            xor EAX,EAX
            test DL,DL
            jne .L_41fda4
.L_41fd99:

            mov EAX,1
            ret 
          .byte 0x90
.L_41fda0:

            movzx EDX,BYTE PTR [RDI+RAX*1]
.L_41fda4:

            cmp DL,32
            jne .L_41fdc0

            add RAX,1
            cmp RSI,RAX
            jne .L_41fda0

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fdc0:

            cmp RSI,RAX
            jbe .L_41fd99

            lea ECX,DWORD PTR [RDX-48]
            cmp CL,7
            ja .L_41fde5

            nop
            nop
            nop
.L_41fdd0:

            add RAX,1
            cmp RSI,RAX
            je .L_41fd99

            movzx EDX,BYTE PTR [RDI+RAX*1]
            lea ECX,DWORD PTR [RDX-48]
            cmp CL,7
            jbe .L_41fdd0
.L_41fde5:

            and EDX,223
            jne .L_41fdff

            nop
            nop
            nop
.L_41fdf0:

            add RAX,1
            cmp RSI,RAX
            jbe .L_41fd99

            test BYTE PTR [RDI+RAX*1],223
            je .L_41fdf0
.L_41fdff:

            xor EAX,EAX
            ret 
.L_41fe02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fe10:

            movzx EDX,BYTE PTR [RDI]
            test DL,DL
            js .L_41fe28

            mov EDX,8
            jmp .L_41f440
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fe28:

            test DL,64
            mov ECX,EDX
            jne .L_41fea0

            and ECX,127
            xor EAX,EAX
            cmp RSI,8
            mov EDX,ECX
            je .L_41fe6f

            sub RSI,1
            test CL,CL
            jne .L_41feef

            xor EAX,EAX
.L_41fe4a:

            lea RSI,QWORD PTR [RDI+RSI*1-7]
            jmp .L_41fe5c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fe58:

            cmp DL,CL
            jne .L_41fec8
.L_41fe5c:

            add RDI,1
            movzx EDX,BYTE PTR [RDI]
            cmp RDI,RSI
            jne .L_41fe58

            mov ESI,EDX
            xor SIL,CL
            js .L_41fec8
.L_41fe6f:

            lea RSI,QWORD PTR [RDI+7]
            nop
            nop
            nop
            nop
            nop
.L_41fe78:

            shl RAX,8
            add RDI,1
            mov RCX,RAX
            movzx EAX,DL
            movzx EDX,BYTE PTR [RDI]
            or RAX,RCX
            cmp RDI,RSI
            jne .L_41fe78

            shl RAX,8
            mov RCX,RAX
            movzx EAX,DL
            or RAX,RCX
            ret 
          .byte 0x90
.L_41fea0:

            cmp RSI,8
            je .L_41fee3

            sub RSI,1
            cmp DL,255
            mov RAX,-1
            je .L_41fe4a

            movabs RAX,-9223372036854775808
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fec8:

            test CL,CL
            movabs RDX,-9223372036854775808
            movabs RAX,9223372036854775807
            cmovne RAX,RDX
            ret 
.L_41fee3:

            mov RAX,-1
            jmp .L_41fe6f
.L_41feef:

            movabs RAX,9223372036854775807
            ret 
.L_41fefa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff00:

            push R12
            mov R12,RDI
            lea RDI,QWORD PTR [RDI+148]
            push RBP
            push RBX
.L_41ff0e:

            lea RBX,QWORD PTR [R12+156]
            mov RAX,RDI
            mov RBP,R12
            nop
            nop
            nop
            nop
.L_41ff20:

            movzx EDX,BYTE PTR [RAX]
            test DL,223
            je .L_41ff34

            sub EDX,48
            cmp DL,7
            ja .L_41ffdc
.L_41ff34:

            add RAX,1
            cmp RBX,RAX
            jne .L_41ff20

            mov ESI,8
            call .L_41fe10

            mov R10,RAX
            lea RAX,QWORD PTR [R12+148]
            mov RCX,R12
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff60:

            movzx EDX,BYTE PTR [RCX]
            add RCX,1
            add ESI,EDX
            cmp RAX,RCX
            jne .L_41ff60

            lea R9,QWORD PTR [R12+512]
            add ESI,256
            mov R8,RBX
            mov RDX,RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff88:

            movzx EDI,BYTE PTR [RDX]
            add RDX,1
            add ESI,EDI
            cmp R9,RDX
            jne .L_41ff88

            cmp R10D,ESI
            mov EAX,1
            je .L_41ffd7

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ffa8:

            movsx EDI,BYTE PTR [RBP]
            add RBP,1
            add ESI,EDI
            cmp RCX,RBP
            jne .L_41ffa8

            lea ECX,DWORD PTR [RSI+256]
            nop
            nop
            nop
.L_41ffc0:

            movsx ESI,BYTE PTR [R8]
            add R8,1
            add ECX,ESI
            cmp RDX,R8
            jne .L_41ffc0

            xor EAX,EAX
            cmp R10D,ECX
            sete AL
.L_41ffd7:

            pop RBX
.L_41ffd8:

            pop RBP
            pop R12
            ret 
.L_41ffdc:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_41ffe3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fff0:

            push RBX
.L_41fff1:

            xor EDX,EDX
            mov ESI,512
            call .L_4049d0

            test RAX,RAX
            je .L_420187

            cmp BYTE PTR [RAX],0
            mov RBX,RAX
            jne .L_420033

            lea RAX,QWORD PTR [RAX+1]
            lea RDX,QWORD PTR [RBX+512]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420020:

            cmp RDX,RAX
            je .L_420180

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            je .L_420020
.L_420033:

            mov RDI,RBX
            call .L_41ff00

            test EAX,EAX
            je .L_420121

            cmp DWORD PTR [RBX+257],1635021685
            lea RAX,QWORD PTR [RBX+257]
            je .L_420150
.L_42005a:

            mov R8D,48
.L_420060:

            cmp DWORD PTR [RBX+257],1635021685
            je .L_420128
.L_420070:

            movzx EAX,BYTE PTR [RBX+156]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,9
            jbe .L_420094

            test AL,AL
            je .L_420094

            and EAX,4294967263
            lea EDX,DWORD PTR [RAX-65]
            xor EAX,EAX
            cmp DL,25
            ja .L_420121
.L_420094:

            lea RDI,QWORD PTR [RBX+100]
            mov ESI,8
            call .L_41fd80

            test EAX,EAX
            je .L_420121

            lea RDI,QWORD PTR [RBX+108]
            mov ESI,8
            call .L_41fd80

            test EAX,EAX
            je .L_420121

            lea RDI,QWORD PTR [RBX+116]
            mov ESI,8
            call .L_41fd80

            test EAX,EAX
            je .L_420121

            lea RDI,QWORD PTR [RBX+136]
            mov ESI,12
            call .L_41fd80

            test EAX,EAX
            je .L_420121

            lea RDI,QWORD PTR [RBX+124]
            mov ESI,12
            call .L_41fd80

            test EAX,EAX
            je .L_420121

            lea RDI,QWORD PTR [RBX+329]
            mov ESI,8
            call .L_41fd80

            test EAX,EAX
            je .L_420121

            lea RDI,QWORD PTR [RBX+337]
            mov ESI,8
            call .L_41fd80

            add R8D,2
            test EAX,EAX
            cmovne EAX,R8D
.L_420121:

            pop RBX
.L_420122:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420128:

            cmp WORD PTR [RAX+4],8306
            jne .L_420070

            cmp WORD PTR [RBX+263],32
            jne .L_420070

            add R8D,56
            jmp .L_420070
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420150:

            cmp WORD PTR [RAX+4],114
            jne .L_42005a

            cmp WORD PTR [RBX+263],12336
            mov R8D,48
            mov EDX,104
            cmove R8D,EDX
            jmp .L_420060
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420180:

            mov EAX,10
            pop RBX
.L_420186:

            ret 
.L_420187:

            mov EAX,4294967295
            pop RBX
            ret 
.L_42018e:

            nop
            nop
.L_420190:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov R13,RSI
            push RBX
.L_42019e:

            mov ESI,32
            mov EDI,1
            mov RBX,RDX
            mov R12,RCX
            mov RBP,R8
            call calloc@PLT

            test RAX,RAX
            je .L_420213

            mov RDX,QWORD PTR [RBX]
            test RDX,RDX
            je .L_4201f0

            mov QWORD PTR [RDX],RAX
.L_4201c6:

            test RBP,RBP
            mov QWORD PTR [RBX],RAX
            js .L_4201f6

            test R12,R12
            js .L_4201f6

            mov QWORD PTR [RAX+8],R12
            mov QWORD PTR [RAX+16],RBP
            xor EAX,EAX
.L_4201dd:

            pop RBX
.L_4201de:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4201f0:

            mov QWORD PTR [R13],RAX
            jmp .L_4201c6
.L_4201f6:

            lea RDX,QWORD PTR [RIP+.L_446cf0]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4201dd
.L_420213:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            mov ESI,12
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4201dd
.L_42022e:

            nop
            nop
.L_420230:

            lea EAX,DWORD PTR [RCX-1]
            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RSI+328]
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            push RBP
            push RBX
            mov R13,RDI
            mov RBP,RSI
            mov RBX,RDX
            lea R14,QWORD PTR [RDX+RAX*8]
            sub RSP,8
.L_42025a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_420260:

            cmp BYTE PTR [RBX],0
            je .L_4202a8

            lea RDI,QWORD PTR [RBX+12]
            mov ESI,12
            call .L_41fe10

            mov ESI,12
            mov RDI,RBX
            mov R15,RAX
            call .L_41fe10

            lea RSI,QWORD PTR [RBP+320]
            mov R8,R15
            mov RCX,RAX
            mov RDX,R12
            mov RDI,R13
            call .L_420190

            test EAX,EAX
            jne .L_4202c0

            add RBX,24
            cmp RBX,R14
            jne .L_420260
.L_4202a8:

            add RSP,8
.L_4202ac:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4202c0:

            add RSP,8
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4202d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4202e0:

            push R15
            push R14
            mov R9,RDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov R15,RCX
            mov EBX,R8D
            sub RSP,24
.L_4202fd:

            cmp R8D,512
            je .L_4203f0

            cmp R8D,15360
            je .L_4203a8

            cmp R8D,256
            je .L_420350

            lea RDX,QWORD PTR [RIP+.L_446d3e]
            mov ECX,R8D
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0
.L_42033b:

            add RSP,24
.L_42033f:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420350:

            lea R14,QWORD PTR [RIP+.L_446d0a]
.L_420357:

            mov RBP,QWORD PTR [R12]
            test RBP,RBP
            je .L_4203b8
.L_420360:

            mov RDI,R9
            call .L_439a10

            mov EDX,EBX
            mov RCX,RBP
            mov RSI,R15
            mov RDI,RAX
            call .L_436060

            test EAX,EAX
            mov EBX,EAX
            je .L_42033b

            cmp EAX,-30
            mov R8,R14
            je .L_4203fc

            lea RCX,QWORD PTR [RIP+.L_446d74]
            lea RDX,QWORD PTR [RIP+.L_446d6e]
            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            jmp .L_42033b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4203a8:

            mov RBP,QWORD PTR [R12]
            lea R14,QWORD PTR [RIP+.L_446d2f]
            test RBP,RBP
            jne .L_420360
.L_4203b8:

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            mov RDI,R13
            mov QWORD PTR [RSP+8],R9
            call .L_431820

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [R12],RAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_420360

            mov EBX,4294967266
            jmp .L_42033b
.L_4203f0:

            lea R14,QWORD PTR [RIP+.L_446d1c]
            jmp .L_420357
.L_4203fc:

            lea RCX,QWORD PTR [RIP+.L_446d53]
            lea RDX,QWORD PTR [RIP+.L_446d6e]
            mov ESI,12
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            jmp .L_42033b
.L_42041e:

            nop
            nop
.L_420420:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea RDI,QWORD PTR [RDX+124]
            mov RBP,RSI
            mov ESI,12
            mov R12,RCX
            sub RSP,8
.L_42043c:

            call .L_41fe10

            cmp RAX,1048576
            ja .L_4204c8

            lea RSI,QWORD PTR [RAX+1]
            mov RDI,RBP
            mov RBX,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_4204f7

            mov RSI,QWORD PTR [R12]
            test RSI,RSI
            jne .L_4204b8
.L_42046a:

            lea RSI,QWORD PTR [RBX+511]
            xor EDX,EDX
            mov RDI,R13
            and RSI,-512
            mov QWORD PTR [R12],RSI
            call .L_4049d0

            test RAX,RAX
            je .L_4204e8

            mov RDI,QWORD PTR [RBP]
            mov RDX,RBX
            mov RSI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP]
            mov BYTE PTR [RAX+RBX*1],0
            mov QWORD PTR [RBP+8],RBX
            xor EAX,EAX
.L_4204a8:

            add RSP,8
.L_4204ac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4204b8:

            mov RDI,R13
            call .L_404a20

            jmp .L_42046a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4204c8:

            lea RDX,QWORD PTR [RIP+.L_446d82]
            xor EAX,EAX
            mov ESI,22
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4204a8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4204e8:

            mov QWORD PTR [R12],0
            mov EAX,4294967266
            jmp .L_4204a8
.L_4204f7:

            lea RDX,QWORD PTR [RIP+.L_44529c]
            mov ESI,12
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4204a8
.L_420512:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420520:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_420568

            mov RDI,R12
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_447088]
            mov R8,RAX
            mov RCX,RBP
            mov RDI,RBX
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            pop RBX
            mov EAX,4294967276
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420568:

            lea RDX,QWORD PTR [RIP+.L_446d9b]
            mov RCX,RBP
            mov RDI,RBX
            xor EAX,EAX
            mov ESI,12
            call .L_432bc0

            pop RBX
            mov EAX,4294967266
            pop RBP
            pop R12
            ret 
.L_42058b:

            nop
            nop
            nop
            nop
            nop
.L_420590:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RDX
            mov RBX,RCX
            sub RSP,8
.L_4205a6:

            cmp BYTE PTR [RCX+157],0
            mov QWORD PTR [RSI+80],0
            jne .L_4206c0
.L_4205bb:

            lea RDI,QWORD PTR [RBX+100]
            mov ESI,8
            call .L_41fe10

            mov RDI,RBP
            mov ESI,EAX
            call .L_4392b0

            lea RDI,QWORD PTR [RBX+108]
            mov ESI,8
            call .L_41fe10

            mov RDI,RBP
            mov RSI,RAX
            call .L_439670

            lea RDI,QWORD PTR [RBX+116]
            mov ESI,8
            call .L_41fe10

            mov RDI,RBP
            mov RSI,RAX
            call .L_438cc0

            lea RDI,QWORD PTR [RBX+124]
            mov ESI,12
            call .L_41fe10

            test RAX,RAX
            mov QWORD PTR [R12+272],RAX
            js .L_4208b4

            movabs RDX,9223372036854775807
            cmp RAX,RDX
            je .L_420888

            mov RSI,RAX
            mov QWORD PTR [R12+304],RAX
            mov RDI,RBP
            call .L_439490

            lea RDI,QWORD PTR [RBX+136]
            mov ESI,12
            call .L_41fe10

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBP
            call .L_4392c0

            movzx EAX,BYTE PTR [RBX+156]
            sub EAX,48
            cmp AL,35
            ja .L_42069c

            lea RDX,QWORD PTR [RIP+.L_447388]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420690:

            mov DWORD PTR [R12+312],1
.L_42069c:

            mov ESI,32768
            mov RDI,RBP
            xor EBX,EBX
            call .L_438800
.L_4206ab:

            add RSP,8
.L_4206af:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4206c0:

            lea RSI,QWORD PTR [RCX+157]
            lea RDI,QWORD PTR [R12+72]
            mov EDX,100
            call .L_431240

            jmp .L_4205bb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4206e0:

            xor EBX,EBX
            jmp .L_4206ab
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4206e8:

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+80]
            mov RDI,RBP
            mov RSI,QWORD PTR [R12+72]
            call .L_438ef0

            test EAX,EAX
            mov EBX,EAX
            je .L_420726

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_4452e0]
            mov RDI,R13
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            je .L_4206ab
.L_420726:

            mov RDI,RBP
            call .L_4383c0

            test RAX,RAX
            jg .L_420870
.L_420737:

            mov RDI,RBP
            call .L_4383c0

            test RAX,RAX
            je .L_4206ab

            mov EAX,DWORD PTR [R13+16]
            cmp EAX,196610
            je .L_4206ab

            and EAX,4294967291
            cmp EAX,196608
            je .L_420777

            mov ESI,50
            mov RDI,R13
            call .L_41fff0

            cmp EAX,50
            jle .L_4206ab
.L_420777:

            xor ESI,ESI
            mov RDI,RBP
            call .L_439490

            mov QWORD PTR [R12+272],0
            jmp .L_4206ab
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420798:

            mov ESI,40960
            mov RDI,RBP
            call .L_438800

            xor ESI,ESI
            mov RDI,RBP
            call .L_439490

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+80]
            mov RDI,RBP
            mov RSI,QWORD PTR [R12+72]
            mov QWORD PTR [R12+272],0
            call .L_439630

            test EAX,EAX
            mov EBX,EAX
            je .L_4206ab

            mov RSI,QWORD PTR [R12+400]
            add RSP,8
.L_4207eb:

            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            lea RDX,QWORD PTR [RIP+.L_4452e0]
            jmp .L_420520
.L_420800:

            mov ESI,24576
.L_420805:

            mov RDI,RBP
            xor EBX,EBX
            call .L_438800

            mov RDI,RBP
            xor ESI,ESI
            call .L_439490

            mov QWORD PTR [R12+272],0
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420838:

            mov ESI,16384
            jmp .L_420805
          .byte 0x90
.L_420840:

            mov ESI,4096
            jmp .L_420805
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420850:

            mov ESI,16384
            mov RDI,RBP
            xor EBX,EBX
            call .L_438800

            jmp .L_4206ab
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420868:

            mov ESI,8192
            jmp .L_420805
          .byte 0x90
.L_420870:

            mov ESI,32768
            mov RDI,RBP
            call .L_438800

            jmp .L_420737
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420888:

            lea RDX,QWORD PTR [RIP+.L_446dd4]
            mov QWORD PTR [R12+272],0
.L_42089b:

            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967266
            jmp .L_4206ab
.L_4208b4:

            mov QWORD PTR [R12+272],0
            lea RDX,QWORD PTR [RIP+.L_446db8]
            jmp .L_42089b
.L_4208c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4208d0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov R13,RCX
            sub RSP,72
.L_4208ea:

            mov RSI,QWORD PTR [RCX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_4209e4
.L_420906:

            lea RDX,QWORD PTR [RSP+40]
            mov ESI,512
            mov RDI,RBP
            call .L_4049d0

            mov RBX,QWORD PTR [RSP+40]
            mov R15,RAX
            test RBX,RBX
            js .L_420a80

            je .L_420aba

            cmp RBX,511
            lea RDX,QWORD PTR [RIP+.L_446cb0]
            jle .L_420b0c

            mov QWORD PTR [R13],512
            cmp BYTE PTR [R15],0
            lea RAX,QWORD PTR [RAX+1]
            lea RDX,QWORD PTR [R15+512]
            jne .L_42096f

            nop
            nop
            nop
            nop
.L_420960:

            cmp RAX,RDX
            je .L_4209c8

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            je .L_420960
.L_42096f:

            mov RDI,R15
            call .L_41ff00

            test EAX,EAX
            je .L_421740

            mov EAX,DWORD PTR [R12+268]
            add EAX,1
            cmp EAX,32
            mov DWORD PTR [R12+268],EAX
            jg .L_421775

            movzx EAX,BYTE PTR [R15+156]
            sub EAX,65
            cmp AL,55
            ja .L_420d42

            lea RDX,QWORD PTR [RIP+.L_447418]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4209c8:

            cmp QWORD PTR [RBP+24],0
            je .L_420a00
.L_4209cf:

            mov EDX,DWORD PTR [R12+436]
            mov ESI,512
            test EDX,EDX
            je .L_420ac1
.L_4209e4:

            mov RDI,RBP
            call .L_404a20

            mov QWORD PTR [R13],0
            jmp .L_420906
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420a00:

            lea RAX,QWORD PTR [RIP+.L_446e21]
            mov DWORD PTR [RBP+16],196608
            mov QWORD PTR [RBP+24],RAX
            jmp .L_4209cf
.L_420a14:

            lea RAX,QWORD PTR [RIP+.L_446e43]
            mov DWORD PTR [RBP+16],196610
.L_420a22:

            mov QWORD PTR [RBP+24],RAX
            mov R8,R13
            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_421b20

            mov EBX,EAX
.L_420a3c:

            cmp EBX,-30
            je .L_420a7b
.L_420a41:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            jne .L_420fa1
.L_420a4e:

            mov EAX,DWORD PTR [R12+268]
            sub EAX,1
            cmp EBX,-20
            mov DWORD PTR [R12+268],EAX
            je .L_420e16

            test EBX,EBX
            je .L_420e16
.L_420a72:

            cmp EBX,1
            je .L_420fc9
.L_420a7b:

            mov EBX,4294967266
.L_420a80:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4217aa

            add RSP,72
.L_420a9a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_420aa5:

            mov ESI,512
            mov RDI,RBP
            call .L_404a20
.L_420ab2:

            mov RDI,RBP
            call .L_432ba0
.L_420aba:

            mov EBX,1
            jmp .L_420a80
.L_420ac1:

            mov RDI,RBP
            call .L_404a20

            xor EDX,EDX
            mov QWORD PTR [R13],0
            mov ESI,512
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_420ab2

            cmp BYTE PTR [RAX],0
            jne .L_420ab2

            lea RDX,QWORD PTR [RAX+1]
            add RAX,512
.L_420af4:

            cmp RDX,RAX
            je .L_420aa5

            add RDX,1
            cmp BYTE PTR [RDX-1],0
            je .L_420af4

            jmp .L_420ab2
.L_420b05:

            lea RDX,QWORD PTR [RIP+.L_4471f0]
.L_420b0c:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967266
            jmp .L_420a80
.L_420b25:

            lea RAX,QWORD PTR [RIP+.L_446e19]
            lea RDI,QWORD PTR [R15+124]
            mov ESI,12
            mov DWORD PTR [RBP+16],196610
            mov QWORD PTR [RBP+24],RAX
            call .L_41fe10

            mov RCX,R13
            mov RDX,R15
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RSP+8],RAX
            call .L_420420

            test EAX,EAX
            mov EBX,EAX
            jne .L_420a3c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4208d0

            test EAX,EAX
            je .L_421446

            cmp EAX,-20
            je .L_421446
.L_420b87:

            mov EBX,EAX
            jmp .L_420a3c
.L_420b8e:

            lea RSI,QWORD PTR [R12+144]
            mov RCX,R13
            mov RDX,R15
            mov RDI,RBP
            call .L_420420

            test EAX,EAX
            mov EBX,EAX
            jne .L_420a3c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4208d0

            test EAX,EAX
            je .L_420bc8

            cmp EAX,-20
            jne .L_420b87
.L_420bc8:

            mov RSI,QWORD PTR [R12+144]
            mov RDI,R14
            call .L_4391d0
.L_420bd8:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            jne .L_420fa1

            sub DWORD PTR [R12+268],1
            jne .L_421013

            cmp DWORD PTR [R12+432],0
            je .L_421013
.L_420c03:

            mov RDI,R14
            call .L_438250

            test RAX,RAX
            je .L_42162f

            mov ECX,DWORD PTR [RAX]
            mov RDX,RAX
            test ECX,ECX
            je .L_42100c
.L_420c21:

            mov ESI,DWORD PTR [RAX+4]
            add RAX,4
            cmp ECX,47
            je .L_420fe4

            test ESI,ESI
            je .L_421030

            mov ECX,ESI
            jmp .L_420c21
.L_420c3d:

            lea RSI,QWORD PTR [R12+168]
            mov RCX,R13
            mov RDX,R15
            mov RDI,RBP
            call .L_420420

            test EAX,EAX
            mov EBX,EAX
            jne .L_420a3c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4208d0

            test EAX,EAX
            mov EBX,EAX
            je .L_420c7d

            cmp EAX,-20
            jne .L_420a3c
.L_420c7d:

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+176]
            mov RDI,R14
            mov RSI,QWORD PTR [R12+168]
            call .L_4393f0

            test EAX,EAX
            je .L_420a3c

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_4452c9]
            mov RDI,RBP
            call .L_420520

            mov EBX,EAX
            jmp .L_420a3c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420cc8:

            mov DWORD PTR [RBP+16],196610
            lea RAX,QWORD PTR [RIP+.L_4471c0]
            jmp .L_420a22
.L_420cdb:

            lea RAX,QWORD PTR [RIP+.L_446e43]
            lea RSI,QWORD PTR [R12+216]
            mov DWORD PTR [RBP+16],196610
            mov RCX,R13
            mov RDX,R15
            mov RDI,RBP
            mov QWORD PTR [RBP+24],RAX
            call .L_420420

            test EAX,EAX
            mov EBX,EAX
            jne .L_420d1c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4208d0

            mov EBX,EAX
.L_420d1c:

            cmp EBX,1
            jne .L_420a3c

            jmp .L_420aba
.L_420d2a:

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4208d0

            mov EBX,EAX
            jmp .L_420a3c
.L_420d42:

            movabs RDX,9042874888123253
            cmp QWORD PTR [R15+257],RDX
            lea RAX,QWORD PTR [R15+257]
            je .L_4210b0

            cmp DWORD PTR [R15+257],1635021685
            je .L_4212d0
.L_420d71:

            lea RAX,QWORD PTR [RIP+.L_446e94]
            mov RCX,QWORD PTR [R12+400]
            mov DWORD PTR [RBP+16],196608
            mov EDX,100
            mov RSI,R15
            mov RDI,R14
            mov QWORD PTR [RBP+24],RAX
            call .L_4393f0

            test EAX,EAX
            mov EBX,EAX
            je .L_420dc3

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_4452c9]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            je .L_420a7b
.L_420dc3:

            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_420590

            cmp EAX,EBX
            cmovle EBX,EAX
            mov RAX,QWORD PTR [R12+272]
            neg RAX
            and EAX,511
            mov QWORD PTR [R12+288],RAX
            jmp .L_420a3c
.L_420df6:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            jne .L_420fa1

            mov EAX,DWORD PTR [R12+268]
            sub EAX,1
            mov DWORD PTR [R12+268],EAX
.L_420e16:

            test EAX,EAX
            jne .L_420e2a

            mov EAX,DWORD PTR [R12+432]
            test EAX,EAX
            jne .L_420c03
.L_420e2a:

            cmp BYTE PTR [R12+360],0
            je .L_420a80

            cmp QWORD PTR [R12+352],1
            jne .L_4216b6

            mov RDI,QWORD PTR [R12+320]
            lea RAX,QWORD PTR [R12+320]
            mov BYTE PTR [R12+360],0
            mov QWORD PTR [RSP+16],RAX
            test RDI,RDI
            je .L_420e88
.L_420e6b:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [R12+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [R12+320]
            test RDI,RDI
            jne .L_420e6b
.L_420e88:

            mov RAX,QWORD PTR [R12+272]
            lea R15,QWORD PTR [RSP+48]
            mov QWORD PTR [R12+328],0
            mov RCX,R13
            mov RSI,R12
            mov RDI,RBP
            mov RDX,R15
            mov QWORD PTR [RSP+48],RAX
            call .L_41fa70

            test EAX,EAX
            mov R14D,EAX
            js .L_420fb6

            lea RAX,QWORD PTR [R12+328]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_420f2f
.L_420ed1:

            mov RCX,R13
            mov RDX,R15
            mov RSI,R12
            mov RDI,RBP
            call .L_41fa70

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            js .L_420fb6

            mov RCX,R13
            mov RDX,R15
            mov RSI,R12
            mov RDI,RBP
            call .L_41fa70

            test RAX,RAX
            mov R8,RAX
            js .L_420fb6

            mov R9,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov RSI,QWORD PTR [RSP+16]
            mov RCX,R9
            call .L_420190

            test EAX,EAX
            jne .L_420fb6
.L_420f2f:

            sub R14D,1
            cmp R14D,-1
            jne .L_420ed1

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_420f52

            mov RDI,RBP
            call .L_404a20

            mov QWORD PTR [R13],0
.L_420f52:

            mov RAX,QWORD PTR [R12+272]
            sub RAX,QWORD PTR [RSP+48]
            mov RDI,RBP
            mov R13,RAX
            neg RAX
            and EAX,511
            mov R14,RAX
            mov RSI,RAX
            call .L_404a20

            cmp R14,RAX
            jne .L_420fb6

            lea RAX,QWORD PTR [R13+R14*1]
            sub QWORD PTR [R12+272],RAX
            test RAX,RAX
            js .L_42170d

            mov BYTE PTR [R12+360],0
            jmp .L_420a80
.L_420fa1:

            mov RDI,RBP
            call .L_404a20

            mov QWORD PTR [R13],0
            jmp .L_420a4e
.L_420fb6:

            add QWORD PTR [R12+272],30
            mov EBX,4294967266
            jmp .L_420a80
.L_420fc9:

            lea RDX,QWORD PTR [RIP+.L_446dec]
            mov ESI,22
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_420a7b
.L_420fe4:

            test ESI,ESI
            je .L_421030

            mov RDX,RAX
            mov ECX,ESI
            jmp .L_420c21
.L_420ff2:

            test SIL,SIL
            jne .L_421668
.L_420ffb:

            cmp BYTE PTR [RDX],46
            jne .L_42100c

            cmp BYTE PTR [RDX+1],95
            jne .L_42100c

            cmp BYTE PTR [RDX+2],0
            jne .L_421041
.L_42100c:

            xor EAX,EAX
.L_42100e:

            cmp EBX,EAX
            cmovg EBX,EAX
.L_421013:

            cmp EBX,-20
            je .L_420e2a

            test EBX,EBX
            je .L_420e2a

            jmp .L_420a72
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421030:

            cmp DWORD PTR [RDX],46
            jne .L_42100c

            cmp DWORD PTR [RDX+4],95
            jne .L_42100c

            cmp DWORD PTR [RDX+8],0
            je .L_42100c
.L_421041:

            mov RDI,R14
            call .L_4383c0

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBP
            mov R15,RAX
            call .L_4049d0

            test RAX,RAX
            je .L_4216fb

            mov RSI,RAX
            mov RDX,R15
            mov RDI,R14
            call .L_439780

            lea RSI,QWORD PTR [R15+511]
            and RSI,-512
            test RSI,RSI
            mov QWORD PTR [R13],RSI
            je .L_421097

            mov RDI,RBP
            call .L_404a20

            mov QWORD PTR [R13],0
.L_421097:

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4208d0

            jmp .L_42100e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4210b0:

            lea RAX,QWORD PTR [RIP+.L_446e60]
            mov DWORD PTR [RBP+16],196612
            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RBP+24],RAX
            call .L_420590

            cmp EAX,-30
            mov EBX,EAX
            je .L_420a7b

            mov RCX,QWORD PTR [R12+400]
            mov EDX,100
            mov RSI,R15
            mov RDI,R14
            call .L_4393f0

            test EAX,EAX
            je .L_42111c

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_4452c9]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            je .L_420a7b
.L_42111c:

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+265]
            mov EDX,32
            mov RDI,R14
            call .L_439750

            test EAX,EAX
            je .L_42115e

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_446e6f]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            je .L_420a7b
.L_42115e:

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+297]
            mov EDX,32
            mov RDI,R14
            call .L_438d60

            test EAX,EAX
            jne .L_421867
.L_421182:

            movzx EAX,BYTE PTR [R15+156]
            sub EAX,51
            cmp AL,1
            jbe .L_42182a

            xor ESI,ESI
            mov RDI,R14
            call .L_439430
.L_42119f:

            mov RAX,QWORD PTR [R12+272]
            lea RDI,QWORD PTR [R15+345]
            mov ESI,12
            neg RAX
            and EAX,511
            mov QWORD PTR [R12+288],RAX
            call .L_41fe10

            test RAX,RAX
            jg .L_421818
.L_4211d1:

            lea RDI,QWORD PTR [R15+357]
            mov ESI,12
            call .L_41fe10

            test RAX,RAX
            jg .L_421806
.L_4211eb:

            cmp BYTE PTR [R15+483],0
            jne .L_4217dd
.L_4211f9:

            cmp BYTE PTR [R15+386],0
            je .L_420a41

            lea RDX,QWORD PTR [R15+386]
            mov ECX,4
            mov RSI,R12
            mov RDI,RBP
            call .L_420230

            test EAX,EAX
            jne .L_420a7b

            cmp BYTE PTR [R15+482],0
            je .L_420a41

            lea R15,QWORD PTR [RSP+48]
            jmp .L_4212a8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421240:

            mov RDX,R15
            mov ESI,512
            mov RDI,RBP
            call .L_4049d0

            mov R8,RAX
            mov RAX,QWORD PTR [RSP+48]
            test RAX,RAX
            js .L_420a7b

            cmp RAX,511
            jle .L_420b05

            mov QWORD PTR [R13],512
            mov ECX,21
            mov RDX,R8
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RSP+8],R8
            call .L_420230

            test EAX,EAX
            jne .L_420a7b

            mov R8,QWORD PTR [RSP+8]
            cmp BYTE PTR [R8+504],0
            je .L_4217bb
.L_4212a8:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_421240

            mov RDI,RBP
            call .L_404a20

            mov QWORD PTR [R13],0
            jmp .L_421240
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4212d0:

            cmp BYTE PTR [RAX+4],114
            jne .L_420d71

            cmp DWORD PTR [RBP+16],196610
            je .L_4212f5

            lea RAX,QWORD PTR [RIP+.L_446e81]
            mov DWORD PTR [RBP+16],196609
            mov QWORD PTR [RBP+24],RAX
.L_4212f5:

            cmp BYTE PTR [R15+345],0
            lea RBX,QWORD PTR [R12+24]
            mov QWORD PTR [R12+32],0
            je .L_42133f

            lea RSI,QWORD PTR [R15+345]
            mov EDX,155
            mov RDI,RBX
            call .L_431240

            mov RDX,QWORD PTR [R12+24]
            mov RAX,QWORD PTR [R12+32]
            cmp BYTE PTR [RDX+RAX*1-1],47
            je .L_42133f

            mov ESI,47
            mov RDI,RBX
            call .L_4312e0
.L_42133f:

            mov RDI,RBX
            mov EDX,100
            mov RSI,R15
            call .L_431240

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+32]
            mov RDI,R14
            mov RSI,QWORD PTR [R12+24]
            call .L_4393f0

            test EAX,EAX
            mov EBX,EAX
            je .L_421391

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_4452c9]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            je .L_420a7b
.L_421391:

            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_420590

            cmp EAX,-30
            je .L_420a7b

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+265]
            cmp EAX,EBX
            mov EDX,32
            mov RDI,R14
            cmovle EBX,EAX
            call .L_439750

            test EAX,EAX
            je .L_4213f2

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_446e6f]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            je .L_420a7b
.L_4213f2:

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+297]
            mov EDX,32
            mov RDI,R14
            call .L_438d60

            test EAX,EAX
            jne .L_4216d4
.L_421416:

            movzx EAX,BYTE PTR [R15+156]
            sub EAX,51
            cmp AL,1
            jbe .L_421679
.L_421429:

            mov RAX,QWORD PTR [R12+272]
            neg RAX
            and EAX,511
            mov QWORD PTR [R12+288],RAX
            jmp .L_420a41
.L_421446:

            mov RCX,QWORD PTR [R12]
            movsx EAX,BYTE PTR [RCX]
            test AL,AL
            je .L_421720

            mov RDI,QWORD PTR [RSP+8]
            add RDI,RCX
            cmp RDI,RCX
            jbe .L_421720

            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_421714

            sub EAX,48
            mov R8,RCX
            cdqe 
            jmp .L_4214ac
.L_42147c:

            cmp RDI,RSI
            je .L_4215af

            lea R8D,DWORD PTR [RDX-48]
            cmp R8B,7
            ja .L_421714

            sub EDX,48
            mov R8,RSI
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*8]
            cmp RAX,16777215
            jg .L_4217af
.L_4214ac:

            movsx EDX,BYTE PTR [R8+1]
            lea RSI,QWORD PTR [R8+1]
            test DL,DL
            jne .L_42147c
.L_4214b9:

            mov EBX,EAX
            and EAX,4294705152
            cmp EAX,262144
            je .L_421622

            cmp EAX,786432
            mov DWORD PTR [RSP+16],15360
            jne .L_421720
.L_4214de:

            lea RBX,QWORD PTR [R8+2]
            cmp RDI,RBX
            jbe .L_421604

            mov RAX,RBX
            sub RAX,RCX
            mov RCX,QWORD PTR [RSP+8]
            sub RCX,RAX
            cmp BYTE PTR [RSI+1],0
            mov RAX,RCX
            je .L_4215b7

            add RAX,RBX
            mov R15,RBX
            cmp RAX,RBX
            ja .L_42151d

            jmp .L_421527
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421518:

            cmp RAX,R15
            je .L_421527
.L_42151d:

            add R15,1
            cmp BYTE PTR [R15],0
            jne .L_421518
.L_421527:

            cmp QWORD PTR [R12+408],0
            je .L_4215da
.L_421536:

            mov RDX,R15
            lea RDI,QWORD PTR [R12+368]
            mov RSI,RBX
            sub RDX,RBX
            mov QWORD PTR [R12+376],0
            call .L_431240

            mov RBX,QWORD PTR [R12+408]
            mov R15,QWORD PTR [R12+368]
            mov RDI,R14
            call .L_439a10

            mov EDX,DWORD PTR [RSP+16]
            mov RDI,RAX
            mov RCX,RBX
            mov RSI,R15
            call .L_436060

            test EAX,EAX
            mov EBX,EAX
            je .L_420df6

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4215bf

            lea RDX,QWORD PTR [RIP+.L_447190]
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_420a3c
.L_4215af:

            mov RSI,RDI
            jmp .L_4214b9
.L_4215b7:

            mov R15,RBX
            jmp .L_421527
.L_4215bf:

            lea RDX,QWORD PTR [RIP+.L_446e25]
            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_420a3c
.L_4215da:

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            mov RDI,RBP
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [R12+408],RAX
            jne .L_421536

            jmp .L_420a7b
.L_421604:

            lea RDX,QWORD PTR [RIP+.L_447160]
.L_42160b:

            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967276
            jmp .L_420bd8
.L_421622:

            mov DWORD PTR [RSP+16],256
            jmp .L_4214de
.L_42162f:

            mov RDI,R14
            call .L_438170

            test RAX,RAX
            je .L_42166f

            movzx ECX,BYTE PTR [RAX]
            mov RDX,RAX
            test CL,CL
            je .L_42100c
.L_42164a:

            movzx ESI,BYTE PTR [RAX+1]
            add RAX,1
            cmp CL,47
            je .L_420ff2

            test SIL,SIL
            je .L_420ffb

            mov ECX,ESI
            jmp .L_42164a
.L_421668:

            mov RDX,RAX
            mov ECX,ESI
            jmp .L_42164a
.L_42166f:

            mov EAX,4294967271
            jmp .L_42100e
.L_421679:

            lea RDI,QWORD PTR [R15+329]
            mov ESI,8
            call .L_41fe10

            mov RDI,R14
            mov RSI,RAX
            call .L_439450

            lea RDI,QWORD PTR [R15+337]
            mov ESI,8
            call .L_41fe10

            mov RDI,R14
            mov RSI,RAX
            call .L_439470

            jmp .L_421429
.L_4216b6:

            lea RDX,QWORD PTR [RIP+.L_447230]
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967276
            call .L_432bc0

            jmp .L_420a80
.L_4216d4:

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_446e75]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            jne .L_421416

            jmp .L_420a7b
.L_4216fb:

            mov QWORD PTR [R13],0
            mov EAX,4294967266
            jmp .L_42100e
.L_42170d:

            mov EBX,EAX
            jmp .L_420a80
.L_421714:

            lea RDX,QWORD PTR [RIP+.L_4470c0]
            jmp .L_42160b
.L_421720:

            lea RDX,QWORD PTR [RIP+.L_447128]
            mov ECX,EBX
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967276
            call .L_432bc0

            jmp .L_420bd8
.L_421740:

            mov ESI,512
            mov RDI,RBP
            mov EBX,4294967286
            call .L_404a20

            lea RDX,QWORD PTR [RIP+.L_446dec]
            mov QWORD PTR [R13],0
            mov ESI,22
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_420a80
.L_421775:

            mov ESI,512
            mov RDI,RBP
            mov EBX,4294967276
            call .L_404a20

            lea RDX,QWORD PTR [RIP+.L_446e00]
            mov QWORD PTR [R13],0
            mov ESI,22
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_420a80
.L_4217aa:

            call __stack_chk_fail@PLT
.L_4217af:

            lea RDX,QWORD PTR [RIP+.L_4470f0]
            jmp .L_42160b
.L_4217bb:

            mov RAX,QWORD PTR [R12+320]
            test RAX,RAX
            je .L_420a41

            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+280],RAX
            jmp .L_420a41
.L_4217dd:

            lea RDI,QWORD PTR [R15+483]
            mov ESI,12
            call .L_41fe10

            mov RDI,R14
            mov QWORD PTR [R12+304],RAX
            mov RSI,RAX
            call .L_439490

            jmp .L_4211f9
.L_421806:

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R14
            call .L_439050

            jmp .L_4211eb
.L_421818:

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R14
            call .L_438f30

            jmp .L_4211d1
.L_42182a:

            lea RDI,QWORD PTR [R15+329]
            mov ESI,8
            call .L_41fe10

            mov RDI,R14
            mov RSI,RAX
            call .L_439450

            lea RDI,QWORD PTR [R15+337]
            mov ESI,8
            call .L_41fe10

            mov RDI,R14
            mov RSI,RAX
            call .L_439470

            jmp .L_42119f
.L_421867:

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_446e75]
            mov RDI,RBP
            call .L_420520

            cmp EAX,-30
            mov EBX,EAX
            jne .L_421182

            jmp .L_420a7b
.L_42188e:

            nop
            nop
.L_421890:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RDI,R12
            sub RSP,16
.L_4218a5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RIP+.L_65bc44]
            mov QWORD PTR [RSP],0
            lea ESI,DWORD PTR [RAX+1]
            movsxd RSI,ESI
            call .L_4390e0

            mov EAX,DWORD PTR [RIP+.L_65bc40]
            mov RDI,R12
            lea ESI,DWORD PTR [RAX+1]
            mov DWORD PTR [RIP+.L_65bc40],ESI
            movsxd RSI,ESI
            call .L_438d70

            cmp DWORD PTR [RIP+.L_65bc40],65534
            jle .L_421905

            add DWORD PTR [RIP+.L_65bc44],1
            mov DWORD PTR [RIP+.L_65bc40],0
.L_421905:

            mov RAX,QWORD PTR [R13+2472]
            mov RBP,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBP+320]
            mov QWORD PTR [RBP+280],0
            test RDI,RDI
            je .L_42194b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421930:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RBP+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [RBP+320]
            test RDI,RDI
            jne .L_421930
.L_42194b:

            mov RAX,QWORD PTR [RBP+392]
            mov QWORD PTR [RBP+328],0
            mov QWORD PTR [RBP+304],-1
            test RAX,RAX
            mov QWORD PTR [RBP+400],RAX
            je .L_421aa8
.L_421978:

            mov RSI,RBP
            mov RCX,RSP
            mov RDX,R12
            mov RDI,R13
            call .L_4208d0

            mov RSI,QWORD PTR [RSP]
            mov R14D,EAX
            test RSI,RSI
            jne .L_421a50

            mov RBX,QWORD PTR [RBP+320]
            test RBX,RBX
            jne .L_4219b8

            jmp .L_421a70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4219b0:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_4219d7
.L_4219b8:

            mov EAX,DWORD PTR [RBX+24]
            test EAX,EAX
            jne .L_4219b0

            mov RDX,QWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RBX+8]
            mov RDI,R12
            call .L_43a3d0

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_4219b8
.L_4219d7:

            test R14D,R14D
            je .L_421a00
.L_4219dc:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_421b18

            add RSP,16
.L_4219f7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_421a00:

            mov RDI,R12
            call .L_437b90

            cmp EAX,32768
            jne .L_4219dc

            mov RDI,R12
            call .L_438250

            test RAX,RAX
            mov RBX,RAX
            je .L_421ae3

            mov RDI,RAX
            call wcslen@PLT

            test RAX,RAX
            je .L_4219dc

            cmp DWORD PTR [RBX+RAX*4-4],47
            jne .L_4219dc
.L_421a37:

            mov ESI,16384
            mov RDI,R12
            call .L_438800

            jmp .L_4219dc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421a50:

            mov RDI,R13
            call .L_404a20

            mov RBX,QWORD PTR [RBP+320]
            mov QWORD PTR [RSP],0
            test RBX,RBX
            jne .L_4219b8
.L_421a70:

            mov R8,QWORD PTR [RBP+272]
            lea RDX,QWORD PTR [RBP+328]
            lea RSI,QWORD PTR [RBP+320]
            xor ECX,ECX
            mov RDI,R13
            call .L_420190

            test EAX,EAX
            je .L_4219d7

            mov R14D,4294967266
            jmp .L_4219dc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421aa8:

            mov EDX,DWORD PTR [RBP+424]
            test EDX,EDX
            je .L_421ac8

            mov RAX,QWORD PTR [RBP+416]
.L_421ab9:

            mov QWORD PTR [RBP+400],RAX
            jmp .L_421978
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421ac8:

            mov RDI,R13
            call .L_431850

            mov DWORD PTR [RBP+424],1
            mov QWORD PTR [RBP+416],RAX
            jmp .L_421ab9
.L_421ae3:

            mov RDI,R12
            call .L_438170

            test RAX,RAX
            mov RBX,RAX
            je .L_4219dc

            mov RDI,RAX
            call strlen@PLT

            test RAX,RAX
            je .L_4219dc

            cmp BYTE PTR [RBX+RAX*1-1],47
            jne .L_4219dc

            jmp .L_421a37
.L_421b18:

            call __stack_chk_fail@PLT
.L_421b1d:

            nop
            nop
            nop
.L_421b20:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            add RSI,192
            mov RBX,R8
            sub RSP,104
.L_421b3e:

            mov QWORD PTR [RSP+8],RDX
            mov RDX,RCX
            mov RCX,R8
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_420420

            test EAX,EAX
            mov R13D,EAX
            je .L_421b90
.L_421b65:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_423065

            add RSP,104
.L_421b80:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421b90:

            mov RDX,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_4208d0

            test EAX,EAX
            mov R14D,EAX
            je .L_421bb8

            cmp EAX,-20
            je .L_421bb8

            mov R13D,EAX
            jmp .L_421b65
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421bb8:

            mov R9,QWORD PTR [RBP+200]
            mov R10,QWORD PTR [RBP+192]
            mov DWORD PTR [RBP+264],0
            mov QWORD PTR [RBP+128],0
            mov QWORD PTR [RBP+80],0
            mov QWORD PTR [RBP+32],0
            test R9,R9
            mov QWORD PTR [RBP+56],0
            mov QWORD PTR [RBP+104],0
            je .L_422ca0

            xor R11D,R11D
            mov DWORD PTR [RSP+56],R14D
            mov QWORD PTR [RSP+16],R12
            mov R14,RBP
            mov R12,R9
            mov RBP,R10
            mov R10D,R11D
.L_421c1d:

            mov RDX,R12
            mov R13,RBP
            xor EBX,EBX
            nop
            nop
            nop
.L_421c28:

            movsx EAX,BYTE PTR [R13]
            cmp AL,32
            je .L_421df8

            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            ja .L_421e08

            sub EAX,48
            lea RCX,QWORD PTR [RBX+RBX*4]
            cdqe 
            lea RBX,QWORD PTR [RAX+RCX*2]
            cmp RBX,999999
            ja .L_421e60

            add R13,1
            sub RDX,1
            jne .L_421c28
.L_421c65:

            cmp R12,RBX
            jb .L_4229d5

            test RBX,RBX
            je .L_4229d5

            lea R11,QWORD PTR [RBP+RBX*1-1]
            cmp BYTE PTR [R11],10
            jne .L_4229d5

            mov BYTE PTR [R11],0
            movzx EAX,BYTE PTR [R13]
            cmp AL,61
            je .L_422c09

            test AL,AL
            je .L_422bf0

            mov R15,R13
            jmp .L_421caf

            nop
            nop
            nop
            nop
.L_421ca8:

            cmp AL,61
            je .L_421cbc

            mov R15,RDX
.L_421caf:

            movzx EAX,BYTE PTR [R15+1]
            lea RDX,QWORD PTR [R15+1]
            test AL,AL
            jne .L_421ca8
.L_421cbc:

            test AL,AL
            je .L_422bf0

            mov BYTE PTR [RDX],0
            movzx EAX,BYTE PTR [R13]
            lea R9,QWORD PTR [RIP+.L_443a67]
            add R15,2
            cmovne R9,R15
            sub EAX,71
            cmp AL,46
            ja .L_421d00

            lea RDI,QWORD PTR [RIP+.L_4474f8]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_421cf5:

            mov R10D,R14D
            mov R14,RBX
            mov RBX,QWORD PTR [RSP+24]
.L_421d00:

            xor R8D,R8D
.L_421d03:

            cmp R10D,R8D
            cmovg R10D,R8D
            add RBP,RBX
            sub R12,RBX
            jne .L_421c1d

            mov RBP,R14
            mov R11D,R10D
            mov R12,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RBP+264]
            mov R14D,DWORD PTR [RSP+56]
            test EDX,EDX
            je .L_422c9d

            mov RBX,QWORD PTR [RBP+392]
.L_421d3b:

            mov RDX,QWORD PTR [RBP+128]
            test RDX,RDX
            jne .L_422c43
.L_421d4b:

            mov RDX,QWORD PTR [RBP+80]
            test RDX,RDX
            jne .L_422ced
.L_421d58:

            mov RDX,QWORD PTR [RBP+56]
            lea R13,QWORD PTR [RBP+48]
            test RDX,RDX
            jne .L_421d72

            mov RDX,QWORD PTR [RBP+32]
            test RDX,RDX
            je .L_421d95

            lea R13,QWORD PTR [RBP+24]
.L_421d72:

            mov RSI,QWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_4393f0

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            jne .L_422d6f
.L_421d95:

            mov RDX,QWORD PTR [RBP+104]
            test RDX,RDX
            je .L_421e31

            mov RSI,QWORD PTR [RBP+96]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_439750

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            je .L_421e31

            lea RDX,QWORD PTR [RIP+.L_446e6f]
            mov RSI,RBX
            mov RDI,R12
            call .L_420520

            cmp EAX,-30
            mov R11D,EAX
            je .L_421e31

            mov RSI,QWORD PTR [RBP+96]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+16],EAX
            call .L_4396a0

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_421e31
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421df8:

            add R13,1
            jmp .L_421c65
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421e08:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_447258]
.L_421e1c:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov R11D,4294967276
.L_421e31:

            mov RAX,QWORD PTR [RBP+272]
            cmp R14D,R11D
            cmovle R11D,R14D
            mov R13D,R11D
            neg RAX
            and EAX,511
            mov QWORD PTR [RBP+288],RAX
            jmp .L_421b65
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421e60:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_447288]
            jmp .L_421e1c
.L_421e76:

            lea RDI,QWORD PTR [RIP+.L_4447c9]
            mov ECX,5
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_421d00

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+32]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            cmp QWORD PTR [R14+304],0
            mov QWORD PTR [R14+272],RAX
            mov R10D,DWORD PTR [RSP+40]
            jns .L_421d00

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov DWORD PTR [RSP+32],R10D
            call .L_439490

            mov RAX,QWORD PTR [R14+272]
            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            mov QWORD PTR [R14+304],RAX
            jmp .L_421d03
.L_421f11:

            lea RDI,QWORD PTR [RIP+.L_4460c5]
            mov ECX,4
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_422b56

            lea RDI,QWORD PTR [RIP+.L_4460c9]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_421d00

            mov RDI,R9
            mov QWORD PTR [R14+104],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+96]
.L_421f80:

            mov R9,QWORD PTR [RSP+32]
            mov RDX,RAX
            mov RSI,R9
            call .L_431240

            mov R10D,DWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+24]
            jmp .L_421d03
.L_421f9f:

            lea RDI,QWORD PTR [RIP+.L_44701c]
            mov ECX,5
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_421d00

            mov RDI,R9
            mov QWORD PTR [R14+32],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+24]
            jmp .L_421f80
.L_421fea:

            lea RDI,QWORD PTR [RIP+.L_446f3f]
            mov ECX,24
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_422b17
.L_422008:

            movabs RDX,8247344779599168854
            movabs RAX,5280544583653149004
            xor RDX,QWORD PTR [R13+8]
            xor RAX,QWORD PTR [R13]
            or RDX,RAX
            jne .L_421d00

            cmp BYTE PTR [R13+16],46
            jne .L_421d00

            xor R8D,R8D
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov DWORD PTR [RSP+24],R8D
            call strlen@PLT

            cmp RAX,17
            mov R8D,DWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jbe .L_421d00

            add R13,17
            mov DWORD PTR [RSP+48],R10D
            mov DWORD PTR [RSP+32],R8D
            mov RDI,R13
            mov QWORD PTR [RSP+40],R9
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+1]
            call malloc@PLT

            test RAX,RAX
            mov R11,RAX
            mov QWORD PTR [RSP+24],RAX
            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+48]
            je .L_421d03

            mov R15D,4294967295
            mov R9,QWORD PTR [RSP+40]
            jmp .L_4220c2
.L_4220b7:

            add R13,1
            mov BYTE PTR [R11],AL
.L_4220be:

            add R11,1
.L_4220c2:

            movzx EAX,BYTE PTR [R13]
            test AL,AL
            je .L_422da6

            cmp AL,37
            jne .L_4220b7

            movsx ESI,BYTE PTR [R13+1]
            test SIL,SIL
            je .L_4220b7

            movsx EDX,BYTE PTR [R13+2]
            test DL,DL
            je .L_4220b7

            lea ECX,DWORD PTR [RSI-48]
            cmp ECX,9
            jbe .L_4220fd

            lea ECX,DWORD PTR [RSI-65]
            cmp ECX,5
            ja .L_4230f8

            lea ECX,DWORD PTR [RSI-55]
.L_4220fd:

            lea ESI,DWORD PTR [RDX-48]
            cmp ESI,9
            ja .L_4230b1

            mov EDX,ESI
.L_42210b:

            test ECX,ECX
            js .L_4220b7

            test EDX,EDX
            js .L_4220b7

            shl ECX,4
            add R13,3
            or EDX,ECX
            mov BYTE PTR [R11],DL
            jmp .L_4220be
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422128:

            lea RDI,QWORD PTR [RIP+.L_446ea4]
            mov ECX,10
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_422151

            mov ECX,DWORD PTR [R14+312]
            test ECX,ECX
            je .L_4231a3
.L_422151:

            lea RDI,QWORD PTR [RIP+.L_446eaf]
            mov ECX,21
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42218c

            mov QWORD PTR [R14+336],-1
            mov QWORD PTR [R14+344],-1
            mov QWORD PTR [R14+352],0
.L_42218c:

            lea RDI,QWORD PTR [RIP+.L_446ec4]
            mov ECX,18
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_422232

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov R8,QWORD PTR [R14+344]
            mov QWORD PTR [R14+336],RAX
            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            cmp R8,-1
            je .L_422232

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [R14+328]
            lea RSI,QWORD PTR [R14+320]
            mov RCX,RAX
            call .L_420190

            test EAX,EAX
            jne .L_422a20

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+336],-1
            mov QWORD PTR [R14+344],-1
.L_422232:

            lea RDI,QWORD PTR [RIP+.L_446ed6]
            mov ECX,20
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4222d8

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            cmp RAX,-1
            mov QWORD PTR [R14+344],RAX
            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            je .L_4222d8

            mov RCX,QWORD PTR [R14+336]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [R14+328]
            lea RSI,QWORD PTR [R14+320]
            mov R8,RAX
            call .L_420190

            test EAX,EAX
            jne .L_422a20

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+336],-1
            mov QWORD PTR [R14+344],-1
.L_4222d8:

            lea RDI,QWORD PTR [RIP+.L_446eea]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_422337

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+304],RAX
            mov RSI,RAX
            call .L_439490

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
.L_422337:

            lea RDI,QWORD PTR [RIP+.L_446efa]
            mov ECX,15
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_422a33
.L_422355:

            lea RDI,QWORD PTR [RIP+.L_446f09]
            mov ECX,17
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4223af

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov DWORD PTR [R14+352],EAX
            mov BYTE PTR [R14+360],1
.L_4223af:

            lea RDI,QWORD PTR [RIP+.L_446f1a]
            mov ECX,17
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_422409

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            mov DWORD PTR [R14+356],EAX
            mov BYTE PTR [R14+360],1
.L_422409:

            lea RDI,QWORD PTR [RIP+.L_447027]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42245b

            mov RDI,R9
            mov QWORD PTR [R14+56],0
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [R14+48]
            mov RDX,RAX
            mov RSI,R9
            call .L_431240

            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
.L_42245b:

            lea RDI,QWORD PTR [RIP+.L_446f2b]
            mov ECX,20
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_421d00

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+304],RAX
            mov RSI,RAX
            call .L_439490

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_421d03
.L_4224d0:

            lea RDI,QWORD PTR [RIP+.L_446029]
            mov ECX,4
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_422b9e

            lea RDI,QWORD PTR [RIP+.L_44602d]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_421d00

            mov RDI,R9
            mov QWORD PTR [R14+128],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+120]
            jmp .L_421f80
.L_422547:

            lea RDI,QWORD PTR [RIP+.L_446ff3]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_421d00

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_41f360

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_439050

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_4225ac:

            lea RDI,QWORD PTR [RIP+.L_447d59]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_421d00

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_41f360

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_438f30

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_422611:

            lea RDI,QWORD PTR [RIP+.L_446d0a]
            mov ECX,18
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4229ee

            lea RDI,QWORD PTR [RIP+.L_446d1c]
            mov ECX,19
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_422c2c

            lea RDI,QWORD PTR [RIP+.L_446d2f]
            mov ECX,15
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_422d47

            lea RDI,QWORD PTR [RIP+.L_446f69]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_422f59

            lea RDI,QWORD PTR [RIP+.L_446f79]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_422fb0

            lea RDI,QWORD PTR [RIP+.L_446f89]
            mov ECX,14
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_422ff8

            lea RSI,QWORD PTR [RIP+.L_446f97]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_42301e

            lea RSI,QWORD PTR [RIP+.L_446fa2]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_42306a

            lea RSI,QWORD PTR [RIP+.L_446fad]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_42315d

            lea RSI,QWORD PTR [RIP+.L_446fba]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_42310f

            lea RSI,QWORD PTR [RIP+.L_446fca]
            mov EDX,13
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strncmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_423203

            lea RSI,QWORD PTR [RIP+.L_446fe5]
            mov RDI,R13
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jne .L_421d00

            cmp BYTE PTR [R9],32
            jne .L_4231d8

            lea RAX,QWORD PTR [R14+328]
            xor ECX,ECX
            lea RDI,QWORD PTR [R9+1]
            mov QWORD PTR [RSP+24],RBX
            mov DWORD PTR [RSP+32],1
            mov RBX,R14
            mov QWORD PTR [RSP+40],RAX
            mov R15,RCX
            mov R14D,R10D
.L_422848:

            mov R13,RDI
            jmp .L_42285c
.L_42284d:

            sub EAX,48
            cmp AL,9
            ja .L_4231cd

            add R13,1
.L_42285c:

            movzx EAX,BYTE PTR [R13]
            test AL,223
            jne .L_42284d

            mov RSI,R13
            mov EDX,10
            sub RSI,RDI
            call .L_41f440

            test RAX,RAX
            mov R9,RAX
            js .L_4231cd

            cmp RAX,R15
            jg .L_4232a1
.L_42288a:

            cmp BYTE PTR [R13],0
            je .L_421cf5

            lea RDI,QWORD PTR [R13+1]
            xor DWORD PTR [RSP+32],1
            mov R15,R9
            jmp .L_422848
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4228a8:

            lea RDI,QWORD PTR [RIP+.L_447018]
            mov ECX,9
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_421d00

            mov RDI,R9
            mov QWORD PTR [R14+80],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+72]
            jmp .L_421f80
.L_4228f6:

            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov ECX,11
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_421d00

            lea RDI,QWORD PTR [RIP+.L_446ff9]
            mov ECX,7
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_422c1c

            lea RDI,QWORD PTR [RIP+.L_447000]
            mov ECX,24
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_421d00

            mov DWORD PTR [R14+264],0
            jmp .L_421d03
.L_422970:

            lea RDI,QWORD PTR [RIP+.L_447021]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_421d00

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_41f360

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_4392c0

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_4229d5:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_4472b0]
            jmp .L_421e1c
.L_4229ee:

            lea RSI,QWORD PTR [R14+408]
            mov DWORD PTR [RSP+24],R10D
            mov R8D,256
.L_422a00:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RCX,R9
            call .L_4202e0

            cmp EAX,-30
            mov R10D,DWORD PTR [RSP+24]
            jne .L_421d00
.L_422a20:

            mov RBP,R14
            mov R14D,DWORD PTR [RSP+56]
.L_422a28:

            mov R11D,4294967266
            jmp .L_421e31
.L_422a33:

            movabs RAX,4294967296
            mov QWORD PTR [RSP+32],RBX
            mov RDI,R9
            mov QWORD PTR [R14+352],RAX
            mov RBX,R14
            mov RCX,-1
            mov QWORD PTR [RSP+24],RBP
            mov R15D,R10D
            mov R14,R9
.L_422a61:

            movzx EAX,BYTE PTR [RDI]
            test AL,AL
            je .L_422ab2

            cmp AL,44
            je .L_422ab2

            sub EAX,48
            cmp AL,9
            ja .L_422a97

            mov RBP,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422a80:

            add RBP,1
            movzx EAX,BYTE PTR [RBP]
            test AL,AL
            je .L_422ab5

            cmp AL,44
            je .L_422ab5

            sub EAX,48
            cmp AL,9
            jbe .L_422a80
.L_422a97:

            mov R14,RBX
            mov RBP,QWORD PTR [RSP+24]
            mov R10D,R15D
            mov RBX,QWORD PTR [RSP+32]
            mov R8D,4294967276
            jmp .L_421d03
.L_422ab2:

            mov RBP,RDI
.L_422ab5:

            mov RSI,RBP
            mov EDX,10
            mov QWORD PTR [RSP+40],RCX
            sub RSI,RDI
            call .L_41f440

            mov RCX,QWORD PTR [RSP+40]
            mov R8,RAX
            cmp RCX,-1
            je .L_422d5e

            test RAX,RAX
            js .L_422a97

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RBX+328]
            lea RSI,QWORD PTR [RBX+320]
            call .L_420190

            test EAX,EAX
            jne .L_422a97

            mov RCX,-1
.L_422b04:

            cmp BYTE PTR [RBP],0
            je .L_423289

            lea RDI,QWORD PTR [RBP+1]
            jmp .L_422a61
.L_422b17:

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call .L_41f360

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_438fc0

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            jmp .L_422008
.L_422b56:

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_439670

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_421d03
.L_422b9e:

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_438cc0

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_421d03
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422bf0:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_4472e0]
            jmp .L_421e1c
.L_422c09:

            mov RBP,R14
            mov R11D,4294967295
            mov R14D,DWORD PTR [RSP+56]
            jmp .L_421e31
.L_422c1c:

            mov DWORD PTR [R14+264],1
            jmp .L_421d03
.L_422c2c:

            mov DWORD PTR [RSP+24],R10D
            lea RSI,QWORD PTR [R14+408]
            mov R8D,512
            jmp .L_422a00
.L_422c43:

            mov RSI,QWORD PTR [RBP+120]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_438d60

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            je .L_421d4b

            lea RDX,QWORD PTR [RIP+.L_446e75]
            mov RSI,RBX
            mov RDI,R12
            call .L_420520

            cmp EAX,-30
            mov DWORD PTR [RSP+16],EAX
            je .L_422a28

            mov RSI,QWORD PTR [RBP+120]
            mov RDI,QWORD PTR [RSP+8]
            call .L_438cf0

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_421d4b
.L_422c9d:

            mov R13D,R10D
.L_422ca0:

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            mov RDI,R12
            call .L_431820

            test RAX,RAX
            mov RBX,RAX
            je .L_422a28

            mov EAX,DWORD PTR [RBP+428]
            mov R11D,R13D
            test EAX,EAX
            je .L_421d3b

            mov ESI,1
            mov RDI,RBX
            mov DWORD PTR [RSP+16],R13D
            call .L_4318d0

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_421d3b
.L_422ced:

            mov RSI,QWORD PTR [RBP+72]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_439280

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            je .L_421d58

            lea RDX,QWORD PTR [RIP+.L_4452e0]
            mov RSI,RBX
            mov RDI,R12
            call .L_420520

            cmp EAX,-30
            mov DWORD PTR [RSP+16],EAX
            je .L_422a28

            mov RSI,QWORD PTR [RBP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_4391d0

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_421d58
.L_422d47:

            mov DWORD PTR [RSP+24],R10D
            lea RSI,QWORD PTR [R14+408]
            mov R8D,15360
            jmp .L_422a00
.L_422d5e:

            test RAX,RAX
            js .L_422a97

            mov RCX,RAX
            jmp .L_422b04
.L_422d6f:

            lea RDX,QWORD PTR [RIP+.L_4452c9]
            mov RSI,RBX
            mov RDI,R12
            call .L_420520

            cmp EAX,-30
            mov DWORD PTR [RSP+16],EAX
            je .L_422a28

            mov RSI,QWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            call .L_439380

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_421d95
.L_422da6:

            mov RDI,R9
            mov BYTE PTR [R11],0
            mov DWORD PTR [RSP+48],R10D
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+32],R9
            lea R15,QWORD PTR [RIP+.L_65bbc0]
            call strlen@PLT

            cmp BYTE PTR [RIP+.L_65bc02],1
            mov RSI,RAX
            mov R13,RAX
            mov R9,QWORD PTR [RSP+32]
            mov R8D,DWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+48]
            je .L_422e12

            mov EAX,4294967295
            mov ECX,128
            mov RDI,R15

            rep stosb BYTE PTR [RDI]

            lea RCX,QWORD PTR [RIP+.L_4475c0]
            xor EAX,EAX
            nop
            nop
.L_422e00:

            movzx EDX,BYTE PTR [RCX+RAX*1]
            mov BYTE PTR [R15+RDX*1],AL
            add RAX,1
            cmp RAX,64
            jne .L_422e00
.L_422e12:

            lea RDI,QWORD PTR [RSI+1]
            mov RAX,RSI
            mov DWORD PTR [RSP+60],R10D
            shr RAX,2
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+48],R9
            sub RDI,RAX
            mov QWORD PTR [RSP+32],RSI
            call malloc@PLT

            test RAX,RAX
            mov R11,RAX
            mov R8D,DWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+60]
            je .L_4230c1

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RAX
            mov R9,QWORD PTR [RSP+48]
            test RSI,RSI
            je .L_422ede
.L_422e61:

            xor ESI,ESI
            xor EDX,EDX
.L_422e65:

            cmp ESI,3
            jg .L_422ea9
.L_422e6a:

            test R13,R13
            je .L_422ea9

            movzx EAX,BYTE PTR [R9]
            cmp AL,61
            je .L_422f2c

            cmp AL,95
            je .L_422f2c

            lea ECX,DWORD PTR [RAX-32]
            add R9,1
            sub R13,1
            cmp CL,95
            ja .L_422e65

            movzx EAX,BYTE PTR [R15+RAX*1]
            cmp AL,255
            je .L_422e65

            shl EDX,6
            add ESI,1
            or EDX,EAX
            cmp ESI,3
            jle .L_422e6a
.L_422ea9:

            mov EAX,4
            sub EAX,ESI
            lea ECX,DWORD PTR [RAX+RAX*2]
            add ECX,ECX
            shl EDX,CL
            cmp ESI,3
            je .L_422f47

            cmp ESI,4
            je .L_422f54

            cmp ESI,2
            je .L_422f4a
.L_422ece:

            lea EAX,DWORD PTR [RSI+RSI*2]
            sar EAX,2
            cdqe 
            add RDI,RAX
            test R13,R13
            jne .L_422e61
.L_422ede:

            sub RDI,R11
            mov R15,QWORD PTR [RSP+24]
            mov RDX,R11
            mov RCX,RDI
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+48],R10D
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+32],R11
            mov RSI,R15
            call .L_43a600

            mov RDI,R15
            call free@PLT

            mov R11,QWORD PTR [RSP+32]
            mov RDI,R11
            call free@PLT

            mov R8D,DWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+48]
            jmp .L_421d03
.L_422f2c:

            mov EAX,4
            sub EAX,ESI
            lea ECX,DWORD PTR [RAX+RAX*2]
            add ECX,ECX
            shl EDX,CL
            cmp ESI,2
            je .L_422fa1

            cmp ESI,3
            jne .L_422ede

            xor R13D,R13D
.L_422f47:

            mov BYTE PTR [RDI+1],DH
.L_422f4a:

            sar EDX,16
            mov BYTE PTR [RDI],DL
            jmp .L_422ece
.L_422f54:

            mov BYTE PTR [RDI+2],DL
            jmp .L_422f47
.L_422f59:

            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            mov RDI,R9
            xor EAX,EAX
            or RCX,-1
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_439450

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_422fa1:

            sar EDX,16
            add RDI,1
            mov BYTE PTR [RDI-1],DL
            jmp .L_422ede
.L_422fb0:

            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            mov RDI,R9
            xor EAX,EAX
            or RCX,-1
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_439470

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_422ff8:

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_438850

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_42301e:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_4390e0

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_423065:

            call __stack_chk_fail@PLT
.L_42306a:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_438d70

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_4230b1:

            lea ESI,DWORD PTR [RDX-65]
            cmp ESI,5
            ja .L_4230e4

            sub EDX,55
            jmp .L_42210b
.L_4230c1:

            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            call free@PLT

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_421d03
.L_4230e4:

            lea ESI,DWORD PTR [RDX-97]
            cmp ESI,5
            ja .L_4220b7

            sub EDX,87
            jmp .L_42210b
.L_4230f8:

            lea EDI,DWORD PTR [RSI-97]
            mov ECX,R15D
            cmp EDI,5
            ja .L_4220fd

            lea ECX,DWORD PTR [RSI-87]
            jmp .L_4220fd
.L_42310f:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+304],RAX
            mov RSI,RAX
            call .L_439490

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_42315d:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_41f440

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,EAX
            call .L_439350

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_4231a3:

            mov R12,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_447300]
            or ESI,4294967295
            mov RBP,R14
            mov R14D,DWORD PTR [RSP+56]
            mov RDI,R12
            call .L_432bc0

            mov R11D,4294967266
            jmp .L_421e31
.L_4231cd:

            mov R10D,R14D
            mov R14,RBX
            mov RBX,QWORD PTR [RSP+24]
.L_4231d8:

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_446fd8]
            or ESI,4294967295
            xor EAX,EAX
            mov DWORD PTR [RSP+24],R10D
            call .L_432bc0

            mov R8D,4294967276
            mov R10D,DWORD PTR [RSP+24]
            jmp .L_421d03
.L_423203:

            or RCX,-1
            mov QWORD PTR [RSP+40],R9
            mov QWORD PTR [RSP+32],R11
            mov RDI,R13

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            sub RAX,1
            cmp RAX,13
            jbe .L_421d00

            lea RSI,QWORD PTR [RIP+.L_446fca]
            mov EDX,13
            mov RDI,R13
            mov DWORD PTR [RSP+24],R10D
            call memcmp@PLT

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            jne .L_421d00

            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R11
            lea RSI,QWORD PTR [R13+13]
            sub RCX,R15
            mov RDX,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],EAX
            call .L_43a600

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_421d03
.L_423289:

            mov R9,R14
            mov RBP,QWORD PTR [RSP+24]
            mov R14,RBX
            mov R10D,R15D
            mov RBX,QWORD PTR [RSP+32]
            jmp .L_422355
.L_4232a1:

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+16]
            mov R8,RAX
            lea RSI,QWORD PTR [RBX+320]
            sub R8,R15
            mov RCX,R15
            mov QWORD PTR [RSP+48],RAX
            call .L_420190

            test EAX,EAX
            jne .L_4232e1

            mov RAX,QWORD PTR [RBX+328]
            mov ESI,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+48]
            mov DWORD PTR [RAX+24],ESI
            jmp .L_42288a
.L_4232e1:

            mov R14D,DWORD PTR [RSP+56]
            mov RBP,RBX
            jmp .L_422a28
.L_4232ee:

            nop
            nop
.L_4232f0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_447328]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_436df0

            cmp EAX,-30
            je .L_423382

            mov ESI,440
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_423389

            lea RAX,QWORD PTR [RIP+.L_41f560]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_421890]
            lea R8,QWORD PTR [RIP+.L_41f910]
            lea RCX,QWORD PTR [RIP+.L_41fff0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41f650]
            push 0
            lea RDX,QWORD PTR [RIP+.L_446e21]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41f730]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_423382

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_423382:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_423389:

            lea RDX,QWORD PTR [RIP+.L_447037]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_423382
.L_4233a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4233b0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_447348]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_4233e0

            mov RDI,RBX
            pop RBX
            jmp .L_4232f0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4233e0:

            pop RBX
            ret 
.L_4233e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4233f0:

            movsx R8D,BYTE PTR [RDI]
            lea EAX,DWORD PTR [R8-48]
            cmp AL,9
            ja .L_423458

            push RBP
            mov R11,RDI
            push RBX
.L_423401:

            xor R9D,R9D
            mov EBX,EDX
            mov EBP,3435973837
            mov EDX,ECX
            nop
            nop
            nop
.L_423410:

            lea R10D,DWORD PTR [R9+R8*1-48]
            mov EAX,EDX
            add R11,1
            mul EBP
            lea R9D,DWORD PTR [R10+R10*4]
            add R9D,R9D
            shr EDX,3
            cmp R9D,ECX
            jg .L_42343c

            test EDX,EDX
            je .L_42343c

            movsx R8D,BYTE PTR [R11]
            lea EAX,DWORD PTR [R8-48]
            cmp AL,9
            jbe .L_423410
.L_42343c:

            cmp RDI,R11
            je .L_42346d

            cmp R10D,EBX
            jl .L_423465

            cmp ECX,R10D
            jl .L_423465
.L_42344b:

            mov EAX,R10D
            mov QWORD PTR [RSI],R11
            pop RBX
.L_423452:

            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423458:

            mov R10D,4294967295
            mov QWORD PTR [RSI],RDI
            mov EAX,R10D
            ret 
.L_423465:

            mov R10D,4294967294
            jmp .L_42344b
.L_42346d:

            or R10D,4294967295
            jmp .L_42344b
.L_423473:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423480:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+24],0
            je .L_4234a3

            mov RDI,QWORD PTR [RBX+32]
            call free@PLT
.L_4234a3:

            lea RDI,QWORD PTR [RBX+48]
            call .L_42e240

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_4234cb:

            nop
            nop
            nop
            nop
            nop
.L_4234d0:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX]
            lea RSI,QWORD PTR [RAX+4]
            call .L_404a20

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            pop RBX
            ret 
.L_4234fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_423500:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDX
            sub RSP,32
.L_42350e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RBX+8],RAX
            jb .L_423578
.L_423531:

            mov QWORD PTR [R12],0
            mov QWORD PTR [RBP],0
            mov RAX,QWORD PTR [RBX+8]
            add RAX,4
            mov QWORD PTR [RCX],RAX
            mov QWORD PTR [RBX+16],0
            mov EAX,1
.L_423559:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4235d4

            add RSP,32
.L_42356d:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423578:

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,1
            mov QWORD PTR [RSP+8],RCX
            call .L_4049d0

            mov RDX,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            test RDX,RDX
            js .L_4235c8

            je .L_423531

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            sub RSI,RDI
            mov QWORD PTR [RCX],RDI
            cmp RSI,RDX
            cmovae RSI,RDX
            mov QWORD PTR [RBP],RSI
            mov QWORD PTR [R12],RAX
            xor EAX,EAX
            add QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RBX+16],RSI
            jmp .L_423559
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4235c8:

            mov QWORD PTR [RBP],0
            mov EAX,EDX
            jmp .L_423559
.L_4235d4:

            call __stack_chk_fail@PLT
.L_4235d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4235e0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R15,RCX
            push RBP
            push RBX
            mov RBX,RSI
            mov R13,RDI
            sub RSP,24
.L_4235fa:

            movsx ESI,BYTE PTR [RDX]
            mov RDX,RBX
            mov QWORD PTR [RSP],RCX
            call memchr@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_4236da

            movsx EBP,BYTE PTR [RAX]
            lea R10,QWORD PTR [R14+R15*1]
            lea R8,QWORD PTR [R14+1]
            lea R12,QWORD PTR [RAX+1]
            add R13,RBX
            cmp R10,R8
            mov RBX,R12
            mov EAX,EBP
            jbe .L_4236f8

            cmp R13,R12
            jbe .L_4236f8

            mov R15D,EBP
            mov EDI,1
            jmp .L_423655
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423650:

            cmp R10,R8
            jbe .L_42367b
.L_423655:

            movsx EDX,BYTE PTR [RBX]
            movsx R11D,BYTE PTR [R8]
            mov ESI,EDX
            xor EBP,EDX
            xor R15D,R11D
            cmp SIL,R11B
            sete DL
            add RBX,1
            add R8,1
            movzx EDX,DL
            and EDI,EDX
            cmp R13,RBX
            ja .L_423650
.L_42367b:

            cmp R10,R8
            ja .L_4236f0

            test EDI,EDI
            jne .L_4236da

            cmp R13,RBX
            jbe .L_4236f0

            mov RDI,QWORD PTR [RSP]
            sub RDI,1
            mov QWORD PTR [RSP+8],RDI
            jmp .L_4236b2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4236a0:

            add RBX,1
            cmp R13,RBX
            je .L_4236f0

            movzx EAX,BYTE PTR [R12]
            add R12,1
.L_4236b2:

            xor AL,BYTE PTR [RBX]
            movsx EAX,AL
            xor EBP,EAX
            cmp EBP,R15D
            jne .L_4236a0

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,R12
            mov QWORD PTR [RSP],R12
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP]
            jne .L_4236a0
.L_4236da:

            add RSP,24
.L_4236de:

            mov RAX,RCX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4236f0:

            xor ECX,ECX
            jmp .L_4236da
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4236f8:

            cmp R10,R8
            mov EAX,0
            cmova RCX,RAX
            jmp .L_4236da
.L_423706:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423710:

            push R12
            push RBP
            push RBX
            sub RSP,16
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp DWORD PTR [RDI],1129464151
            je .L_423750
.L_423730:

            mov EBP,99999
.L_423735:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_4237c0

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
.L_423750:

            cmp BYTE PTR [RDI+4],47
            jne .L_423730

            cmp DWORD PTR [RDI+5],221261361
            lea RAX,QWORD PTR [RDI+5]
            je .L_4237b0
.L_423763:

            movsx R12D,BYTE PTR [RDI+5]
            mov EBP,999999
            lea EAX,DWORD PTR [R12-48]
            cmp AL,8
            ja .L_423735

            cmp BYTE PTR [RDI+6],46
            jne .L_423735

            lea RBX,QWORD PTR [RDI+7]
            mov RSI,RSP
            mov EDX,10
            mov RDI,RBX
            call strtol@PLT

            cmp RBX,QWORD PTR [RSP]
            jae .L_423735

            sub R12D,48
            lea RAX,QWORD PTR [RAX+RAX*4]
            imul R12D,R12D,10000
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea EBP,DWORD PTR [R12+RAX*4]
            jmp .L_423735
          .byte 0x90
.L_4237b0:

            cmp BYTE PTR [RAX+4],10
            mov EBP,10000
            jne .L_423763

            jmp .L_423735
.L_4237c0:

            call __stack_chk_fail@PLT
.L_4237c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4237d0:

            sub RSP,24
.L_4237d4:

            mov ESI,12
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4049d0

            test RAX,RAX
            je .L_423830

            cmp QWORD PTR [RSP],11
            jle .L_423830

            mov RDI,RAX
            call .L_423710

            sub EAX,1
            cmp EAX,9999
            ja .L_423830

            mov EAX,64
.L_423814:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_423837

            add RSP,24
.L_423828:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423830:

            mov EAX,4294967295
            jmp .L_423814
.L_423837:

            call __stack_chk_fail@PLT
.L_42383c:

            nop
            nop
            nop
            nop
.L_423840:

            push R12
            pxor XMM0,XMM0
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,80
.L_423852:

            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+64],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            call __ctype_b_loc@PLT

            mov RCX,QWORD PTR [RAX]
            mov RAX,RBX
            jmp .L_423895
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423890:

            mov QWORD PTR [RSP+8],RAX
.L_423895:

            mov RDI,RAX
            add RAX,1
            movzx EDX,BYTE PTR [RDI]
            test BYTE PTR [RCX+RDX*2+1],32
            jne .L_423890

            lea RBX,QWORD PTR [RSP+8]
            mov ECX,4095
            mov EDX,1583
            mov RSI,RBX
            call .L_4233f0

            test EAX,EAX
            mov DWORD PTR [RSP+36],EAX
            js .L_423a0e

            mov RAX,QWORD PTR [RSP+8]
            mov R12,-1
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],45
            jne .L_4239ee

            mov ECX,12
            mov EDX,1
            call .L_4233f0

            test EAX,EAX
            mov DWORD PTR [RSP+32],EAX
            js .L_4239e9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],45
            jne .L_4239ee

            mov ECX,31
            mov EDX,1
            call .L_4233f0

            test EAX,EAX
            mov DWORD PTR [RSP+28],EAX
            js .L_4239e9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],84
            jne .L_4239ee

            xor EDX,EDX
            mov ECX,23
            call .L_4233f0

            test EAX,EAX
            mov DWORD PTR [RSP+24],EAX
            js .L_4239e9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],58
            jne .L_4239ee

            xor EDX,EDX
            mov ECX,59
            call .L_4233f0

            test EAX,EAX
            mov DWORD PTR [RSP+20],EAX
            js .L_423a0e

            mov RAX,QWORD PTR [RSP+8]
            mov R12,-1
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],58
            jne .L_4239ee

            xor EDX,EDX
            mov ECX,60
            call .L_4233f0

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            js .L_4239e9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],90
            jne .L_4239ee

            lea RDI,QWORD PTR [RSP+16]
            sub DWORD PTR [RSP+36],1900
            sub DWORD PTR [RSP+32],1
            call timegm@PLT

            mov R12,RAX
.L_4239e9:

            mov RDI,QWORD PTR [RSP+8]
.L_4239ee:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP],RDI
            mov RAX,R12
            jne .L_423a1c

            add RSP,80
.L_423a09:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_423a0e:

            mov RDI,QWORD PTR [RSP+8]
            mov R12,-1
            jmp .L_4239ee
.L_423a1c:

            call __stack_chk_fail@PLT
.L_423a21:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423a30:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_423a41:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+56],RSI
            mov R12,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_423a70:

            mov RDX,QWORD PTR [RSP+32]
            mov ESI,12
            mov RDI,R15
            call .L_4049d0

            mov RSI,QWORD PTR [RSP+72]
            mov RBP,RAX
            test RSI,RSI
            js .L_423fa0

            test RAX,RAX
            je .L_423ff9

            lea RDX,QWORD PTR [RIP+.L_447738]
            mov ECX,4
            mov RDI,RAX
            call .L_4235e0

            test RAX,RAX
            je .L_423fa0

            add RAX,4
            mov RBX,RAX
            je .L_423fa0

            sub RAX,RBP
            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call .L_423710

            cmp EAX,10000
            mov R13D,EAX
            ja .L_424000

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_447720]
            mov ECX,17
            mov RDI,RBP
            mov QWORD PTR [RSP+80],0
            call .L_4235e0

            test RAX,RAX
            je .L_424010

            lea RSI,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+17]
            mov EDX,10
            mov QWORD PTR [RSP+16],RSI
            call strtol@PLT

            mov RDX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+8],RAX
            test RDX,RDX
            mov QWORD PTR [RSP+24],RDX
            je .L_424010

            call __ctype_b_loc@PLT

            mov RDX,QWORD PTR [RSP+24]
            mov R14,RAX
            mov RAX,QWORD PTR [RAX]
            movzx EDX,BYTE PTR [RDX]
            test BYTE PTR [RAX+RDX*2+1],32
            je .L_424010

            cmp QWORD PTR [RSP+8],0
            js .L_424010

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_447708]
            mov ECX,12
            mov RDI,RBP
            mov QWORD PTR [RSP+80],0
            call .L_4235e0

            test RAX,RAX
            je .L_42402d

            mov RSI,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RAX+12]
            call .L_423840

            mov RCX,RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RSP+80]
            test RAX,RAX
            je .L_42402d

            movzx EDX,BYTE PTR [RAX]
            mov RAX,QWORD PTR [R14]
            test BYTE PTR [RAX+RDX*2+1],32
            je .L_42402d

            cmp RCX,-1
            je .L_42402d

            cmp DWORD PTR [R12+40],R13D
            mov DWORD PTR [R15+16],983040
            je .L_423c0f

            mov EAX,R13D
            mov EDX,3518437209
            mov ECX,R13D
            mul EDX
            lea RDI,QWORD PTR [R12+48]
            lea RSI,QWORD PTR [RIP+.L_447656]
            shr EDX,13
            imul EAX,EDX,10000
            sub ECX,EAX
            xor EAX,EAX
            call .L_4326f0

            mov DWORD PTR [R12+40],R13D
.L_423c0f:

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4476f8]
            mov ECX,12
            mov RDI,RBP
            call .L_4235e0

            test RAX,RAX
            je .L_423cb0

            add RAX,12
            cmp RBX,RAX
            jbe .L_423c53

            mov RCX,QWORD PTR [R14]
            jmp .L_423c49
          .byte 0x66
          .byte 0x90
.L_423c40:

            add RAX,1
            cmp RBX,RAX
            je .L_423c53
.L_423c49:

            movzx EDX,BYTE PTR [RAX]
            test BYTE PTR [RCX+RDX*2+1],32
            jne .L_423c40
.L_423c53:

            lea RDX,QWORD PTR [RAX+8]
            cmp RBX,RDX
            jb .L_423cb0

            movabs RDI,7305808869231650162
            cmp QWORD PTR [RAX],RDI
            je .L_423d00

            movabs RDI,8027224784753549687
            cmp QWORD PTR [RAX],RDI
            je .L_423cb0

            movabs RDI,7022344802737087853
            cmp QWORD PTR [RAX],RDI
            je .L_423cb0

            cmp DWORD PTR [RAX],1970365810
            je .L_423f7f
.L_423c99:

            movabs RDI,7310308045059482994
            cmp QWORD PTR [RAX],RDI
            je .L_423fda

            nop
            nop
            nop
            nop
.L_423cb0:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12],RAX
.L_423cc2:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R15
            call .L_404a20
.L_423cce:

            mov RAX,QWORD PTR [R15+2472]
            mov RDI,R15
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX]
            lea RSI,QWORD PTR [RAX+4]
            call .L_404a20

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            jmp .L_423a70
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423d00:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+8],0
            mov DWORD PTR [RSP+52],3
            mov QWORD PTR [R12],RAX
.L_423d1a:

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4476e0]
            mov ECX,18
            mov RDI,RBP
            call .L_4235e0

            test RAX,RAX
            je .L_423cc2

            lea R8,QWORD PTR [RAX+18]
            cmp RBX,R8
            jbe .L_423d5c

            mov RDX,QWORD PTR [R14]
            jmp .L_423d51
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423d48:

            add R8,1
            cmp RBX,R8
            je .L_423d5c
.L_423d51:

            movzx EAX,BYTE PTR [R8]
            test BYTE PTR [RDX+RAX*2+1],32
            jne .L_423d48
.L_423d5c:

            mov RSI,RBX
            lea RDX,QWORD PTR [RIP+.L_447669]
            mov ECX,3
            sub RSI,R8
            mov RDI,R8
            mov QWORD PTR [RSP+40],R8
            call .L_4235e0

            test RAX,RAX
            mov R13,RAX
            je .L_423cc2

            sub RBX,RAX
            mov ESI,10
            mov RDI,RAX
            mov RDX,RBX
            call memchr@PLT

            test RAX,RAX
            je .L_423cc2

            lea RBX,QWORD PTR [R13+3]
            mov R8,QWORD PTR [RSP+40]
            cmp RAX,RBX
            jbe .L_423dd4

            mov RSI,QWORD PTR [R14]
            jmp .L_423dc9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423dc0:

            sub RAX,1
            cmp RBX,RAX
            je .L_423dd4
.L_423dc9:

            movzx EDX,BYTE PTR [RAX-1]
            test BYTE PTR [RSI+RDX*2+1],32
            jne .L_423dc0
.L_423dd4:

            cmp DWORD PTR [R8],1701603686
            jne .L_423f08
.L_423de1:

            mov R13,RAX
            sub R13,RBX
            je .L_423cc2

            cmp BYTE PTR [RAX-1],47
            je .L_423cc2

            lea RAX,QWORD PTR [R13+1]
            cmp RAX,QWORD PTR [R12+24]
            mov RDI,QWORD PTR [R12+32]
            ja .L_423f60
.L_423e0b:

            mov RSI,RBX
            mov RDX,R13
            call memcpy@PLT

            mov RAX,QWORD PTR [R12+32]
            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4476c0]
            mov ECX,16
            mov RDI,RBP
            mov BYTE PTR [RAX+R13*1],0
            mov RBX,QWORD PTR [R12+32]
            mov QWORD PTR [RSP+80],0
            call .L_4235e0

            test RAX,RAX
            je .L_424036

            mov RSI,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RAX+16]
            call .L_423840

            mov RBP,RAX
            mov RAX,QWORD PTR [RSP+80]
            test RAX,RAX
            je .L_424036

            movzx EDX,BYTE PTR [RAX]
            mov RAX,QWORD PTR [R14]
            test BYTE PTR [RAX+RDX*2+1],32
            je .L_424036

            cmp RBP,-1
            cmove RBP,QWORD PTR [RSP+24]
.L_423e89:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R15
            call .L_404a20

            mov EAX,DWORD PTR [RSP+52]
            cmp EAX,3
            je .L_423ea7

            cmp EAX,5
            jne .L_423cce
.L_423ea7:

            mov R14,QWORD PTR [RSP+56]
            mov ESI,32768
            mov RDI,R14
            call .L_438800

            mov RSI,RBX
            mov RDI,R14
            call .L_439380

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            call .L_439490

            mov ESI,420
            mov RDI,R14
            call .L_439400

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R14
            call .L_439050

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R14
            call .L_4392c0

            xor EAX,EAX
            jmp .L_423fbb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423f08:

            cmp DWORD PTR [R8],1886680168
            je .L_423f28

            cmp WORD PTR [R8],29798
            jne .L_423cc2

            cmp BYTE PTR [R8+2],112
            jne .L_423cc2
.L_423f28:

            cmp RAX,RBX
            jbe .L_423de1

            cmp BYTE PTR [R13+3],47
            lea RBX,QWORD PTR [R13+4]
            jne .L_423f56

            jmp .L_423de1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423f48:

            add RBX,1
            cmp BYTE PTR [RBX-1],47
            je .L_423de1
.L_423f56:

            cmp RAX,RBX
            ja .L_423f48

            jmp .L_423de1
.L_423f60:

            lea RSI,QWORD PTR [R13+64]
            and RSI,-64
            mov QWORD PTR [R12+24],RSI
            call realloc@PLT

            mov RDI,RAX
            mov QWORD PTR [R12+32],RAX
            jmp .L_423e0b
.L_423f7f:

            cmp WORD PTR [RAX+4],29541
            jne .L_423c99

            cmp BYTE PTR [RAX+6],116
            jne .L_423c99

            jmp .L_423cb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423fa0:

            lea RDX,QWORD PTR [RIP+.L_447606]
.L_423fa7:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
.L_423fbb:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_424040

            add RSP,104
.L_423fcf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_423fda:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+8],0
            mov DWORD PTR [RSP+52],5
            mov QWORD PTR [R12],RAX
            jmp .L_423d1a
.L_423ff9:

            mov EAX,1
            jmp .L_423fbb
.L_424000:

            lea RDX,QWORD PTR [RIP+.L_447618]
            jmp .L_423fa7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424010:

            lea RDX,QWORD PTR [RIP+.L_447633]
.L_424017:

            xor EAX,EAX
            mov ESI,22
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_423fbb
.L_42402d:

            lea RDX,QWORD PTR [RIP+.L_447646]
            jmp .L_424017
.L_424036:

            mov RBP,QWORD PTR [RSP+24]
            jmp .L_423e89
.L_424040:

            call __stack_chk_fail@PLT
.L_424045:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424050:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_447690]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_436df0

            cmp EAX,-30
            je .L_4240e4

            mov ESI,72
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4240eb

            lea RAX,QWORD PTR [RIP+.L_423480]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_423a30]
            lea RCX,QWORD PTR [RIP+.L_4237d0]
            lea RDX,QWORD PTR [RIP+.L_44768a]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4234d0]
            push 0
            xor R8D,R8D
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_423500]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_4240e4

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_4240e4:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_4240eb:

            lea RDX,QWORD PTR [RIP+.L_447671]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4240e4
.L_424108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424110:

            xor EAX,EAX
            ret 
.L_424113:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424120:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_424127:

            add RDI,152
            call .L_42e240

            lea RDI,QWORD PTR [R12+176]
            call .L_42e240

            lea RDI,QWORD PTR [R12+224]
            call .L_42e240

            lea RDI,QWORD PTR [R12+256]
            call .L_42e240

            lea RDI,QWORD PTR [R12+360]
            call .L_42e240

            mov RBX,QWORD PTR [R12+384]
            test RBX,RBX
            je .L_424194

            nop
            nop
            nop
            nop
.L_424178:

            mov RBP,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RBX+8]
            call .L_42e240

            mov RDI,RBX
            mov RBX,RBP
            call free@PLT

            test RBP,RBP
            jne .L_424178
.L_424194:

            pop RBX
.L_424195:

            mov RDI,R12
            pop RBP
            pop R12
            jmp free@PLT
.L_4241a0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4241ab:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov ESI,DWORD PTR [RBX+216]
            test ESI,ESI
            jne .L_4242d8
.L_4241c3:

            xor R13D,R13D
.L_4241c6:

            mov ECX,DWORD PTR [RBX+304]
            test ECX,ECX
            jne .L_4242a0
.L_4241d4:

            mov EDX,DWORD PTR [RBX+448]
            test EDX,EDX
            je .L_4241ea

            lea RDI,QWORD PTR [RBX+312]
            call lzma_end@PLT
.L_4241ea:

            mov RDI,QWORD PTR [RBX+544]
            test RDI,RDI
            je .L_424210

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424200:

            mov RBP,QWORD PTR [RDI]
            call free@PLT

            test RBP,RBP
            mov RDI,RBP
            jne .L_424200
.L_424210:

            mov EAX,DWORD PTR [RBX+532]
            test EAX,EAX
            jle .L_424269

            xor R14D,R14D
            xor EBP,EBP
            nop
.L_424220:

            mov RAX,QWORD PTR [RBX+520]
            add EBP,1
            mov RDI,QWORD PTR [RAX+R14*1]
            add R14,8
            call .L_424120

            cmp DWORD PTR [RBX+532],EBP
            jg .L_424220

            mov RBP,QWORD PTR [RBX+48]
            test RBP,RBP
            je .L_424272

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424250:

            mov RAX,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RBP+8]
            mov QWORD PTR [RBX+48],RAX
            call .L_42e240

            mov RDI,RBP
            call free@PLT
.L_424269:

            mov RBP,QWORD PTR [RBX+48]
            test RBP,RBP
            jne .L_424250
.L_424272:

            mov RDI,QWORD PTR [RBX+32]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [R12+2472]
            mov QWORD PTR [RAX],0
            mov EAX,R13D
            pop RBX
.L_424296:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_4242a0:

            lea RDI,QWORD PTR [RBX+224]
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            je .L_4241d4

            lea RDX,QWORD PTR [RIP+.L_447740]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_4241d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4242d8:

            lea RDI,QWORD PTR [RBX+104]
            call inflateEnd@PLT

            test EAX,EAX
            je .L_4241c3

            lea RDX,QWORD PTR [RIP+.L_4453e8]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_4241c6
.L_42430a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_424310:

            push RBP
            push RBX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EBP,DWORD PTR [RBX+24]
            test EBP,EBP
            je .L_424338

            mov EBP,1
.L_42432c:

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424338:

            mov RSI,QWORD PTR [RBX+576]
            add RSI,QWORD PTR [RBX+568]
            call .L_404a20

            test RAX,RAX
            js .L_424367

            add QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+576],0
            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
.L_424367:

            mov EBP,4294967266
            jmp .L_42432c
.L_42436e:

            nop
            nop
.L_424370:

            sub RSP,8
            xor EDX,EDX
            mov ESI,28
            call .L_4049d0

            test RAX,RAX
            je .L_4243bf

            mov RDX,RAX
            xor EAX,EAX
            cmp DWORD PTR [RDX],561144184
            je .L_4243a0
.L_424392:

            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4243a0:

            cmp WORD PTR [RDX+4],7168
            jne .L_424392

            cmp WORD PTR [RDX+6],256
            jne .L_424392

            mov EAX,DWORD PTR [RDX+24]
            bswap EAX
            cmp EAX,3
            sbb EAX,EAX
            and EAX,96
            jmp .L_424392
.L_4243bf:

            mov EAX,4294967295
            jmp .L_424392
.L_4243c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4243d0:

            push RBP
            push RBX
            sub RSP,8
.L_4243d6:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp DWORD PTR [RBX+40],77
            ja .L_424441

            mov EAX,DWORD PTR [RBX+40]
            lea RDX,QWORD PTR [RIP+.L_447e40]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424400:

            mov RBP,QWORD PTR [RBX+48]
            test RBP,RBP
            je .L_424441

            test RSI,RSI
            je .L_424441

            mov RDI,QWORD PTR [RBP+8]
            call strcmp@PLT

            test EAX,EAX
            jne .L_424441

            mov RAX,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RBP+8]
            mov QWORD PTR [RBX+48],RAX
            call .L_42e240

            mov RDI,RBP
            call free@PLT

            cmp QWORD PTR [RBX+48],0
            jne .L_424441

            mov EAX,DWORD PTR [RBX+44]
            mov DWORD PTR [RBX+40],EAX
.L_424441:

            add RSP,8
.L_424445:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424450:

            lea RDI,QWORD PTR [RIP+.L_447bb0]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
.L_424470:

            lea RDI,QWORD PTR [RIP+.L_447ba9]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
.L_424490:

            lea RDI,QWORD PTR [RIP+.L_447ba1]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
.L_4244b0:

            lea RDI,QWORD PTR [RIP+.L_447b9a]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4244e0:

            lea RDI,QWORD PTR [RIP+.L_447b90]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424510:

            lea RDI,QWORD PTR [RIP+.L_447b89]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424540:

            lea RDI,QWORD PTR [RIP+.L_447b7d]
            mov ECX,12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424570:

            lea RDI,QWORD PTR [RIP+.L_447b77]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4245a0:

            lea RDI,QWORD PTR [RIP+.L_447b6d]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4245d0:

            lea RDI,QWORD PTR [RIP+.L_447b61]
            mov ECX,12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424600:

            lea RDI,QWORD PTR [RIP+.L_447b63]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424630:

            lea RDI,QWORD PTR [RIP+.L_447b57]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424660:

            lea RDI,QWORD PTR [RIP+.L_447b4f]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424690:

            lea RDI,QWORD PTR [RIP+.L_447a90]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4246c0:

            lea RDI,QWORD PTR [RIP+.L_447b44]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4246f0:

            lea RDI,QWORD PTR [RIP+.L_447add]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424720:

            lea RDI,QWORD PTR [RIP+.L_447b38]
            mov ECX,12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424750:

            lea RDI,QWORD PTR [RIP+.L_447b2f]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424780:

            lea RDI,QWORD PTR [RIP+.L_447b26]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4247b0:

            lea RDI,QWORD PTR [RIP+.L_447b17]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],56
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4247e0:

            lea RDI,QWORD PTR [RIP+.L_447b12]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424810:

            lea RDI,QWORD PTR [RIP+.L_447b03]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424840:

            lea RDI,QWORD PTR [RIP+.L_447af4]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424870:

            lea RDI,QWORD PTR [RIP+.L_447ae7]
            mov ECX,13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4248a0:

            lea RDI,QWORD PTR [RIP+.L_447ad7]
            mov ECX,16

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4248d0:

            lea RDI,QWORD PTR [RIP+.L_447ac8]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424900:

            lea RDI,QWORD PTR [RIP+.L_447abb]
            mov ECX,13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424930:

            lea RDI,QWORD PTR [RIP+.L_447ab0]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424960:

            lea RDI,QWORD PTR [RIP+.L_447aa5]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424990:

            lea RDI,QWORD PTR [RIP+.L_447a97]
            mov ECX,14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4249c0:

            lea RDI,QWORD PTR [RIP+.L_447a8c]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],45
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4249f0:

            lea RDI,QWORD PTR [RIP+.L_446f91]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424a20:

            lea RDI,QWORD PTR [RIP+.L_447a7e]
            mov ECX,14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],41
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424a50:

            lea RDI,QWORD PTR [RIP+.L_446d15]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],41
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424a80:

            lea RDI,QWORD PTR [RIP+.L_446d27]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],41
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ab0:

            lea RDI,QWORD PTR [RIP+.L_447a7a]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ae0:

            lea RDI,QWORD PTR [RIP+.L_4451fb]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424b10:

            lea RDI,QWORD PTR [RIP+.L_447df2]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424b40:

            lea RDI,QWORD PTR [RIP+.L_447ca7]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424b70:

            lea RDI,QWORD PTR [RIP+.L_446033]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ba0:

            lea RDI,QWORD PTR [RIP+.L_447a71]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424bd0:

            lea RDI,QWORD PTR [RIP+.L_446f25]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],33
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424c00:

            lea RDI,QWORD PTR [RIP+.L_446f14]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],33
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424c30:

            lea RDI,QWORD PTR [RIP+.L_44604f]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424c60:

            lea RDI,QWORD PTR [RIP+.L_446047]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424c90:

            lea RDI,QWORD PTR [RIP+.L_4460c5]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424cc0:

            lea RDI,QWORD PTR [RIP+.L_447a6c]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424cf0:

            lea RDI,QWORD PTR [RIP+.L_446029]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424d20:

            lea RDI,QWORD PTR [RIP+.L_447a66]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424d50:

            lea RDI,QWORD PTR [RIP+.L_447d59]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424d80:

            lea RDI,QWORD PTR [RIP+.L_447021]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424db0:

            lea RDI,QWORD PTR [RIP+.L_446ff3]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424de0:

            lea RDI,QWORD PTR [RIP+.L_447a5f]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424e10:

            lea RDI,QWORD PTR [RIP+.L_4451fb]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424e40:

            lea RDI,QWORD PTR [RIP+.L_447a49]
            mov ECX,19

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424e70:

            lea RDI,QWORD PTR [RIP+.L_447a37]
            mov ECX,18

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ea0:

            lea RDI,QWORD PTR [RIP+.L_447a2e]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ed0:

            lea RDI,QWORD PTR [RIP+.L_4447c9]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f00:

            lea RDI,QWORD PTR [RIP+.L_450510]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f30:

            lea RDI,QWORD PTR [RIP+.L_44763f]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],16
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f60:

            lea RDI,QWORD PTR [RIP+.L_447a5c]
            mov ECX,3

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            mov QWORD PTR [RBX+512],0
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424f98:

            lea RDI,QWORD PTR [RIP+.L_4504a2]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x90
.L_424fc0:

            lea RDI,QWORD PTR [RIP+.L_447a49]
            mov ECX,19

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ff0:

            lea RDI,QWORD PTR [RIP+.L_447a37]
            mov ECX,18

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425020:

            lea RDI,QWORD PTR [RIP+.L_447a2e]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425050:

            lea RDI,QWORD PTR [RIP+.L_4447c9]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425080:

            lea RDI,QWORD PTR [RIP+.L_450510]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4250b0:

            lea RDI,QWORD PTR [RIP+.L_44763f]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],8
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4250e0:

            lea RDI,QWORD PTR [RIP+.L_445300]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],7
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425110:

            lea RDI,QWORD PTR [RIP+.L_44666b]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov RDX,QWORD PTR [RBX+504]
            mov RAX,QWORD PTR [RDX+16]
            test RAX,RAX
            je .L_425277

            mov EDX,DWORD PTR [RDX+288]
            and EDX,61440
            cmp EDX,16384
            jne .L_425157

            add DWORD PTR [RAX+24],1
.L_425157:

            mov QWORD PTR [RBX+504],RAX
            jmp .L_424441
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425168:

            lea RDI,QWORD PTR [RIP+.L_4447c9]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],4
            jmp .L_424441
          .byte 0x90
.L_425190:

            lea RDI,QWORD PTR [RIP+.L_450510]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],4
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251c0:

            lea RDI,QWORD PTR [RIP+.L_447a53]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],2
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251f0:

            lea RDI,QWORD PTR [RIP+.L_447a20]
            mov ECX,14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],2
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425220:

            lea RDI,QWORD PTR [RIP+.L_447a1c]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],1
            jmp .L_424441
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425250:

            lea RDI,QWORD PTR [RIP+.L_447a18]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424441

            mov DWORD PTR [RBX+40],0
            jmp .L_424441
.L_425277:

            mov QWORD PTR [RBX+504],0
            mov DWORD PTR [RBX+40],2
            jmp .L_424441
.L_42528e:

            nop
            nop
.L_425290:

            cmp ESI,1
            mov DWORD PTR [RDI],ESI
            je .L_4252b8

            cmp ESI,2
            jne .L_4252b0

            add RDI,8
            jmp QWORD PTR [RIP+.L_65ac80]
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4252b0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4252b8:

            add RDI,16
            jmp QWORD PTR [RIP+.L_65acb0]
.L_4252c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4252d0:

            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_4252f8

            cmp EAX,2
            jne .L_4252f0

            add RDI,8
            jmp QWORD PTR [RIP+.L_65ac88]
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4252f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4252f8:

            add RDI,16
            jmp QWORD PTR [RIP+.L_65acb8]
.L_425302:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425310:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,1
            push RBP
            push RBX
            mov R15,RDI
            mov R13,RCX
            mov R12,R8
            sub RSP,56
.L_42532f:

            mov QWORD PTR [RSP+8],RDX
            lea RDX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_4049d0

            mov RBX,QWORD PTR [RSP+32]
            test RBX,RBX
            js .L_4254f0

            je .L_4256ef

            cmp RBX,R12
            mov R10,RAX
            mov RBP,RBX
            jbe .L_425378

            mov RBX,R12
            mov QWORD PTR [RSP+32],R12
            mov RBP,R12
.L_425378:

            mov RDI,QWORD PTR [R14]
            mov RAX,QWORD PTR [R15+2472]
            mov QWORD PTR [R13],RBP
            test RDI,RDI
            mov R12,QWORD PTR [RAX]
            je .L_425428

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RAX]
            mov EAX,DWORD PTR [R12+96]
            cmp EAX,2
            je .L_42544c
.L_4253a8:

            ja .L_425518

            cmp EAX,1
            jne .L_4255f8

            mov QWORD PTR [R12+128],RDI
            lea RDI,QWORD PTR [R12+104]
            mov QWORD PTR [R12+104],R10
            mov DWORD PTR [R12+136],EDX
            xor ESI,ESI
            mov DWORD PTR [R12+112],EBX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],RDX
            call inflate@PLT

            cmp EAX,1
            mov RDX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            ja .L_4256fb

            mov EAX,DWORD PTR [R12+112]
            sub RBP,RAX
            mov EAX,DWORD PTR [R12+136]
            mov QWORD PTR [R13],RBP
.L_42540e:

            sub RDX,RAX
            mov RAX,QWORD PTR [RSP+8]
            mov R12,QWORD PTR [R14]
            mov RBP,RDX
            mov QWORD PTR [RAX],RDX
            jmp .L_4255be
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425428:

            mov RDI,QWORD PTR [R12+32]
            test RDI,RDI
            je .L_425690
.L_425436:

            mov EAX,DWORD PTR [R12+96]
            mov QWORD PTR [R14],RDI
            mov EDX,65536
            cmp EAX,2
            jne .L_4253a8
.L_42544c:

            mov DWORD PTR [R12+232],EBX
            lea RBX,QWORD PTR [R12+224]
            mov QWORD PTR [R12+224],R10
            mov QWORD PTR [R12+248],RDI
            mov DWORD PTR [R12+256],EDX
            mov RDI,RBX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],RDX
            call BZ2_bzDecompress@PLT

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            je .L_4254cd

            cmp EAX,4
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],R10
            jne .L_425630

            mov RDI,RBX
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            jne .L_42571d

            mov DWORD PTR [R12+304],0
.L_4254cd:

            mov EAX,DWORD PTR [R12+232]
            sub RBP,RAX
            mov EAX,DWORD PTR [R12+256]
            mov QWORD PTR [R13],RBP
            jmp .L_42540e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4254f0:

            mov EAX,EBX
.L_4254f2:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_425729

            add RSP,56
.L_42550a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425518:

            cmp EAX,4
            ja .L_4255f8

            lea RBX,QWORD PTR [R12+312]
            mov QWORD PTR [R12+312],R10
            mov QWORD PTR [R12+336],RDI
            mov QWORD PTR [R12+344],RDX
            xor ESI,ESI
            mov QWORD PTR [R12+320],RBP
            mov RDI,RBX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],RDX
            call lzma_code@PLT

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            je .L_42559c

            cmp EAX,1
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],R10
            jne .L_425650

            mov RDI,RBX
            call lzma_end@PLT

            mov R10,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            mov DWORD PTR [R12+448],0
.L_42559c:

            sub RBP,QWORD PTR [R12+320]
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13],RBP
            sub RDX,QWORD PTR [R12+344]
            mov R12,QWORD PTR [R14]
            mov RBP,RDX
            mov QWORD PTR [RAX],RDX
.L_4255be:

            mov RAX,QWORD PTR [R15+2472]
            mov RDX,QWORD PTR [R13]
            mov RSI,R10
            mov RBX,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RBX+456]
            call .L_4252d0

            lea RDI,QWORD PTR [RBX+480]
            mov RDX,RBP
            mov RSI,R12
            call .L_4252d0

            xor EAX,EAX
            jmp .L_4254f2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4255f8:

            cmp RDI,QWORD PTR [R12+32]
            je .L_4256d8

            cmp RBP,RDX
            mov RSI,R10
            mov QWORD PTR [RSP+16],R10
            cmova RBP,RDX
            mov RDX,RBP
            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13],RBP
            mov R12,QWORD PTR [R14]
            mov R10,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],RBP
            jmp .L_4255be
.L_425630:

            lea RDX,QWORD PTR [RIP+.L_443863]
.L_425637:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4254f2
.L_425650:

            cmp DWORD PTR [R12+592],4
            lea RDX,QWORD PTR [RIP+.L_447c93]
            lea RCX,QWORD PTR [RIP+.L_447c80]
            mov R8D,EAX
            mov ESI,4294967295
            mov RDI,R15
            cmove RCX,RDX
            lea RDX,QWORD PTR [RIP+.L_447bd0]
            xor EAX,EAX
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4254f2
          .byte 0x66
          .byte 0x90
.L_425690:

            mov EDI,65536
            mov QWORD PTR [RSP+16],R10
            call malloc@PLT

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [R12+32],RAX
            mov R10,QWORD PTR [RSP+16]
            jne .L_425436

            lea RDX,QWORD PTR [RIP+.L_447768]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4254f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4256d8:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R14],R10
            mov R12,R10
            mov QWORD PTR [R13],RBP
            mov QWORD PTR [RAX],RBP
            jmp .L_4255be
.L_4256ef:

            lea RDX,QWORD PTR [RIP+.L_447bb9]
            jmp .L_425637
.L_4256fb:

            lea RDX,QWORD PTR [RIP+.L_447790]
            mov ECX,EAX
            mov ESI,4294967295
            xor EAX,EAX
            mov RDI,R15
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4254f2
.L_42571d:

            lea RDX,QWORD PTR [RIP+.L_4438b0]
            jmp .L_425637
.L_425729:

            call __stack_chk_fail@PLT
.L_42572e:

            nop
            nop
.L_425730:

            push RBP
            push RBX
            sub RSP,40
.L_425736:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+16],0
            mov RBX,QWORD PTR [RAX]
            xor EAX,EAX
            mov R8,QWORD PTR [RBX+64]
            test R8,R8
            jne .L_425780
.L_425764:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4257c9

            add RSP,40
.L_425778:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425780:

            movsxd RDX,EDX
            lea RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RSP
            mov RBP,RDI
            call .L_425310

            test EAX,EAX
            jne .L_425764

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_404a20

            mov RAX,QWORD PTR [RSP+16]
            sub QWORD PTR [RBX+64],RAX
            add QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+8]
            add QWORD PTR [RBX+72],RAX
            jmp .L_425764
.L_4257c9:

            call __stack_chk_fail@PLT
.L_4257ce:

            nop
            nop
.L_4257d0:

            sub EDX,1
            cmp EDX,3
            ja .L_4257f0

            lea RDX,QWORD PTR [RIP+.L_447bec]
            mov RCX,RSI
            xor EAX,EAX
            mov ESI,4294967295
            jmp .L_432bc0
          .byte 0x66
          .byte 0x90
.L_4257f0:

            ret 
.L_4257f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425800:

            push R14
            push R13
            cmp ESI,4
            push R12
            push RBP
            mov R13,RDI
            push RBX
.L_42580e:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov DWORD PTR [RBX+96],ESI
            ja .L_425998

            mov R12D,EDX
            lea RDX,QWORD PTR [RIP+.L_447f78]
            mov ESI,ESI
            mov EBP,ECX
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425840:

            mov ECX,DWORD PTR [RBX+216]
            lea RDI,QWORD PTR [RBX+104]
            test ECX,ECX
            jne .L_4259f0

            lea RSI,QWORD PTR [RIP+.L_443a68]
            mov EDX,112
            call inflateInit_@PLT
.L_425863:

            test EAX,EAX
            jne .L_425b28

            mov RAX,QWORD PTR [R13+2472]
            mov DWORD PTR [RBX+216],1
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+144],0
            mov RBX,QWORD PTR [RAX]
.L_425892:

            lea RDI,QWORD PTR [RBX+456]
            mov ESI,R12D
            call .L_425290

            lea RDI,QWORD PTR [RBX+480]
            mov ESI,EBP
            call .L_425290

            xor EAX,EAX
.L_4258b1:

            pop RBX
.L_4258b2:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4258c0:

            mov EAX,DWORD PTR [RBX+448]
            lea R14,QWORD PTR [RBX+312]
            test EAX,EAX
            jne .L_425a20
.L_4258d5:

            cmp DWORD PTR [RBX+592],4
            je .L_425a00

            mov RSI,-1
            mov RDI,R14
            call lzma_alone_decoder@PLT
.L_4258f1:

            test EAX,EAX
            je .L_425a60

            cmp EAX,5
            je .L_425b08

            cmp EAX,8
            lea RDX,QWORD PTR [RIP+.L_447850]
            jne .L_425aa8
.L_425912:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4258b1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425930:

            mov EDX,DWORD PTR [RBX+304]
            lea R14,QWORD PTR [RBX+224]
            test EDX,EDX
            jne .L_425a40
.L_425945:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R14
            call BZ2_bzDecompressInit@PLT

            cmp EAX,-3
            je .L_425a90
.L_42595a:

            test EAX,EAX
            jne .L_425ab4

            mov RAX,QWORD PTR [R13+2472]
            mov DWORD PTR [RBX+304],1
            mov QWORD PTR [RBX+236],0
            mov QWORD PTR [RBX+260],0
            mov RBX,QWORD PTR [RAX]
            jmp .L_425892
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425998:

            mov EAX,DWORD PTR [RBX+592]
            lea RCX,QWORD PTR [RIP+.L_447c80]
            cmp EAX,3
            je .L_4259cb

            cmp EAX,4
            lea RCX,QWORD PTR [RIP+.L_447c93]
            je .L_4259cb

            cmp EAX,2
            lea RCX,QWORD PTR [RIP+.L_447c6c]
            lea RAX,QWORD PTR [RIP+.L_447c02]
            cmovne RCX,RAX
.L_4259cb:

            lea RDX,QWORD PTR [RIP+.L_4478d0]
            mov RDI,R13
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            pop RBX
.L_4259e2:

            mov EAX,4294967271
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_4259f0:

            call inflateReset@PLT

            jmp .L_425863
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425a00:

            mov EDX,8
            mov RSI,-1
            mov RDI,R14
            call lzma_stream_decoder@PLT

            jmp .L_4258f1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a20:

            mov RDI,R14
            call lzma_end@PLT

            mov DWORD PTR [RBX+448],0
            jmp .L_4258d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a40:

            mov RDI,R14
            call BZ2_bzDecompressEnd@PLT

            mov DWORD PTR [RBX+304],0
            jmp .L_425945
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a60:

            mov RAX,QWORD PTR [R13+2472]
            mov DWORD PTR [RBX+448],1
            mov QWORD PTR [RBX+328],0
            mov QWORD PTR [RBX+352],0
            mov RBX,QWORD PTR [RAX]
            jmp .L_425892
          .byte 0x90
.L_425a90:

            mov EDX,1
            xor ESI,ESI
            mov RDI,R14
            call BZ2_bzDecompressInit@PLT

            jmp .L_42595a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425aa8:

            lea RDX,QWORD PTR [RIP+.L_4478a0]
            jmp .L_425912
.L_425ab4:

            cmp EAX,-3
            je .L_425b34

            cmp EAX,-2
            mov ESI,4294967295
            lea RCX,QWORD PTR [RIP+.L_443812]
            je .L_425adf

            cmp EAX,-9
            lea RCX,QWORD PTR [RIP+.L_44382a]
            lea RAX,QWORD PTR [RIP+.L_447c02]
            cmovne RCX,RAX
.L_425adf:

            lea RDX,QWORD PTR [RIP+.L_4477d8]
            xor EAX,EAX
            mov RDI,R13
            call .L_432bc0

            mov DWORD PTR [RBX+304],0
            mov EAX,4294967266
            jmp .L_4258b1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425b08:

            lea RDX,QWORD PTR [RIP+.L_447808]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_4258b1
.L_425b28:

            lea RDX,QWORD PTR [RIP+.L_4477b0]
            jmp .L_425912
.L_425b34:

            mov ESI,12
            lea RCX,QWORD PTR [RIP+.L_44383f]
            jmp .L_425adf
.L_425b42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b50:

            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov RBX,RSI
            sub RSP,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_425bd8

            cmp EAX,2
            je .L_425ba0
.L_425b7a:

            xor EAX,EAX
.L_425b7c:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_425c28

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425ba0:

            add RDI,8
            mov RSI,RSP
            call QWORD PTR [RIP+.L_65ac90]

            cmp RBP,16
            jne .L_425c03

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            xor RDX,QWORD PTR [RSP]
            xor RAX,QWORD PTR [RSP+8]
            or RAX,RDX
            cmp RAX,1
            sbb EAX,EAX
            not EAX
            and EAX,4294967271
            jmp .L_425b7c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425bd8:

            mov R12,RSP
            add RDI,16
            mov RSI,R12
            call QWORD PTR [RIP+.L_65acc0]

            cmp RBP,20
            jne .L_425c03

            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBX+8]
            xor RAX,QWORD PTR [RSP]
            xor RDX,QWORD PTR [RSP+8]
            or RDX,RAX
            je .L_425c10
.L_425c03:

            mov EAX,4294967271
            jmp .L_425b7c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425c10:

            mov EAX,DWORD PTR [R12+16]
            cmp DWORD PTR [RBX+16],EAX
            je .L_425b7a

            mov EAX,4294967271
            jmp .L_425b7c
.L_425c28:

            call __stack_chk_fail@PLT
.L_425c2d:

            nop
            nop
            nop
.L_425c30:

            push R14
            push R13
            mov R14,R8
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RAX,QWORD PTR [RDI+2472]
            mov R13,RCX
            mov RBP,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RBP+456]
            call .L_425b50

            test EAX,EAX
            mov EBX,EAX
            je .L_425c80
.L_425c5d:

            lea RDX,QWORD PTR [RIP+.L_447c05]
            mov RDI,R12
            xor EAX,EAX
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_425c80:

            lea RDI,QWORD PTR [RBP+480]
            mov RDX,R14
            mov RSI,R13
            call .L_425b50

            test EAX,EAX
            mov EBX,EAX
            jne .L_425c5d

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_425ca3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425cb0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R15,RCX
            sub RSP,24
.L_425cca:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+576]
            test RSI,RSI
            jne .L_425df8
.L_425cf4:

            mov EDX,DWORD PTR [RBX+24]
            test EDX,EDX
            jne .L_425d07

            mov R8,QWORD PTR [RBX+568]
            test R8,R8
            jne .L_425d50
.L_425d07:

            mov R12D,1
.L_425d0d:

            mov QWORD PTR [R14],0
            mov QWORD PTR [R13],0
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [R15],RAX
.L_425d23:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_425e94

            add RSP,24
.L_425d3e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425d50:

            mov EAX,DWORD PTR [RBX+552]
            test EAX,EAX
            jne .L_425e10
.L_425d5e:

            mov QWORD PTR [R14],0
            mov RCX,RSP
            mov RDX,R13
            mov RSI,R14
            mov RDI,RBP
            call .L_425310

            test EAX,EAX
            mov R12D,EAX
            jne .L_425d0d

            mov RAX,QWORD PTR [RBX+560]
            mov RCX,QWORD PTR [RSP]
            mov QWORD PTR [R15],RAX
            mov RDX,QWORD PTR [R13]
            add RDX,QWORD PTR [RBX+560]
            mov QWORD PTR [RBX+560],RDX
            mov RAX,QWORD PTR [R13]
            add QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RBX+568]
            add QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+576],RCX
            sub RAX,RCX
            test RAX,RAX
            mov QWORD PTR [RBX+568],RAX
            jne .L_425d23

            cmp RDX,QWORD PTR [RBX+584]
            je .L_425e60

            lea RDX,QWORD PTR [RIP+.L_447c14]
            mov ESI,4294967295
            mov RDI,RBP
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_425d0d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425df8:

            call .L_404a20

            mov QWORD PTR [RBX+576],0
            jmp .L_425cf4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425e10:

            mov ECX,DWORD PTR [RBX+640]
            mov EDX,DWORD PTR [RBX+600]
            mov RDI,RBP
            mov ESI,DWORD PTR [RBX+592]
            call .L_425800

            test EAX,EAX
            mov R12D,EAX
            jne .L_425e50

            mov DWORD PTR [RBX+552],0
            mov R8,QWORD PTR [RBX+568]
            jmp .L_425d5e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425e50:

            mov QWORD PTR [RBX+568],0
            jmp .L_425d23
.L_425e60:

            mov RDX,QWORD PTR [RBX+608]
            mov R8,QWORD PTR [RBX+648]
            lea RCX,QWORD PTR [RBX+656]
            lea RSI,QWORD PTR [RBX+616]
            mov RDI,RBP
            call .L_425c30

            test EAX,EAX
            je .L_425d23

            mov R12D,EAX
            jmp .L_425d0d
.L_425e94:

            call __stack_chk_fail@PLT
.L_425e99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ea0:

            xor EAX,EAX
            test RDI,RDI
            mov RDX,RDI
            je .L_425f70

            lea R8,QWORD PTR [RIP+.L_447c2c]
            mov R9D,2
            mov R10D,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ec8:

            mov RSI,QWORD PTR [RDX+8]
            mov ECX,6
            mov RDI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_425f10

            mov RSI,QWORD PTR [RDX+16]
            movzx ECX,BYTE PTR [RSI]
            and ECX,4294967263
            cmp CL,83
            jne .L_425f20

            movzx ECX,BYTE PTR [RSI+1]
            and ECX,4294967263
            cmp CL,72
            jne .L_425f10

            movzx ECX,BYTE PTR [RSI+2]
            and ECX,4294967263
            cmp CL,65
            jne .L_425f10

            cmp BYTE PTR [RSI+3],49
            je .L_425f50

            nop
            nop
            nop
.L_425f10:

            mov RDX,QWORD PTR [RDX]
            test RDX,RDX
            jne .L_425ec8
.L_425f18:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425f20:

            cmp CL,77
            jne .L_425f10

            movzx ECX,BYTE PTR [RSI+1]
            and ECX,4294967263
            cmp CL,68
            jne .L_425f10

            cmp BYTE PTR [RSI+2],53
            jne .L_425f10

            cmp BYTE PTR [RSI+3],0
            mov RDX,QWORD PTR [RDX]
            cmove EAX,R9D
            test RDX,RDX
            jne .L_425ec8

            jmp .L_425f18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425f50:

            cmp BYTE PTR [RSI+4],0
            mov RDX,QWORD PTR [RDX]
            cmove EAX,R10D
            test RDX,RDX
            jne .L_425ec8

            jmp .L_425f18
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425f70:

            ret 
.L_425f72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425f80:

            test RDI,RDI
            je .L_4260c8

            push R13
            lea R8,QWORD PTR [RIP+.L_447c2c]
            push R12
            lea R9,QWORD PTR [RIP+.L_447c32]
            push RBP
            lea R10,QWORD PTR [RIP+.L_447c4b]
            push RBX
.L_425fa4:

            lea R11,QWORD PTR [RIP+.L_447c5e]
            lea RBX,QWORD PTR [RIP+.L_447c72]
            lea R12,QWORD PTR [RIP+.L_447c85]
            mov RDX,RDI
            xor EAX,EAX
            mov EBP,4
            nop
            nop
            nop
            nop
            nop
.L_425fc8:

            mov RSI,QWORD PTR [RDX+8]
            mov ECX,6
            mov RDI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_426030

            mov R13,QWORD PTR [RDX+16]
            mov ECX,25
            mov RDI,R9
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_426040

            mov ECX,19
            mov RSI,R13
            mov RDI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_426050

            mov ECX,20
            mov RSI,R13
            mov RDI,R11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_426068

            mov EAX,2
            nop
            nop
.L_426030:

            mov RDX,QWORD PTR [RDX]
            test RDX,RDX
            jne .L_425fc8
.L_426038:

            pop RBX
.L_426039:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_426040:

            mov RDX,QWORD PTR [RDX]
            xor EAX,EAX
            test RDX,RDX
            jne .L_425fc8

            jmp .L_426038
.L_426050:

            mov RDX,QWORD PTR [RDX]
            mov EAX,1
            test RDX,RDX
            jne .L_425fc8

            jmp .L_426038
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426068:

            mov ECX,19
            mov RSI,R13
            mov RDI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_426098

            mov RDX,QWORD PTR [RDX]
            mov EAX,3
            test RDX,RDX
            jne .L_425fc8

            jmp .L_426038
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426098:

            mov ECX,17
            mov RSI,R13
            mov RDI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov RDX,QWORD PTR [RDX]
            seta CL
            sbb CL,0
            test CL,CL
            cmove EAX,EBP
            test RDX,RDX
            jne .L_425fc8

            jmp .L_426038
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4260c8:

            xor EAX,EAX
            ret 
.L_4260cb:

            nop
            nop
            nop
            nop
            nop
.L_4260d0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EDI,32
            mov RBP,RSI
            mov R12,RDX
            sub RSP,8
.L_4260e8:

            call malloc@PLT

            test RAX,RAX
            je .L_42615f

            mov RBX,RAX
            mov RAX,QWORD PTR [RBP+48]
            xor EDX,EDX
            test R12,R12
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX],RAX
            je .L_426126

            mov RDI,R12
            call strlen@PLT

            mov RDX,RAX
.L_426126:

            lea RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            call .L_431240

            cmp QWORD PTR [RBP+48],0
            je .L_426150
.L_426139:

            mov QWORD PTR [RBP+48],RBX
            xor EAX,EAX
.L_42613f:

            add RSP,8
.L_426143:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426150:

            mov EAX,DWORD PTR [RBP+40]
            mov DWORD PTR [RBP+40],77
            mov DWORD PTR [RBP+44],EAX
            jmp .L_426139
.L_42615f:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R13
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42613f
.L_42617c:

            nop
            nop
            nop
            nop
.L_426180:

            pxor XMM0,XMM0
            sub RSP,72
.L_426188:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp RSI,20
            mov QWORD PTR [RSP+48],0
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            je .L_4261d0
.L_4261b5:

            xor EAX,EAX
.L_4261b7:

            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42635f

            add RSP,72
.L_4261cf:

            ret 
.L_4261d0:

            movsx EAX,BYTE PTR [RDI]
            sub EAX,48
            cmp EAX,9
            ja .L_4261b5

            lea RSI,QWORD PTR [RDI+4]
            mov RDX,RDI
            xor ECX,ECX
.L_4261e4:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RDX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp EAX,9
            ja .L_426202

            cmp RDX,RSI
            jne .L_4261e4
.L_426202:

            cmp RCX,1899
            jle .L_4261b5

            sub ECX,1900
            cmp BYTE PTR [RDI+4],45
            mov DWORD PTR [RSP+20],ECX
            jne .L_4261b5

            movsx EAX,BYTE PTR [RDI+5]
            sub EAX,48
            cmp EAX,9
            ja .L_4261b5

            movsx EDX,BYTE PTR [RDI+6]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_426240

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*2]
.L_426240:

            lea RDX,QWORD PTR [RAX-1]
            cmp RDX,11
            ja .L_4261b5

            sub EAX,1
            cmp BYTE PTR [RDI+7],45
            mov DWORD PTR [RSP+16],EAX
            jne .L_4261b5

            movsx EAX,BYTE PTR [RDI+8]
            sub EAX,48
            cmp EAX,9
            ja .L_4261b5

            movsx EDX,BYTE PTR [RDI+9]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_426288

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*2]
.L_426288:

            lea RDX,QWORD PTR [RAX-1]
            cmp RDX,30
            ja .L_4261b5

            cmp BYTE PTR [RDI+10],84
            mov DWORD PTR [RSP+12],EAX
            jne .L_4261b5

            movsx EAX,BYTE PTR [RDI+11]
            sub EAX,48
            cmp EAX,9
            ja .L_426364

            movsx EDX,BYTE PTR [RDI+12]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_4262d7

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*2]
            cmp RAX,23
            ja .L_4261b5
.L_4262d7:

            cmp BYTE PTR [RDI+13],58
            mov DWORD PTR [RSP+8],EAX
            jne .L_4261b5

            movsx EAX,BYTE PTR [RDI+14]
            sub EAX,48
            cmp EAX,9
            ja .L_42636f

            movsx EDX,BYTE PTR [RDI+15]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_426313

            imul RAX,RAX,10
            movsxd RDX,EDX
            add RAX,RDX
            cmp RAX,59
            ja .L_4261b5
.L_426313:

            cmp BYTE PTR [RDI+16],58
            mov DWORD PTR [RSP+4],EAX
            jne .L_4261b5

            movsx EAX,BYTE PTR [RDI+17]
            sub EAX,48
            cmp EAX,9
            ja .L_42636b

            movsx EDX,BYTE PTR [RDI+18]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_42634f

            imul RAX,RAX,10
            movsxd RDX,EDX
            add RAX,RDX
            cmp RAX,60
            ja .L_4261b5
.L_42634f:

            mov RDI,RSP
            mov DWORD PTR [RSP],EAX
            call timegm@PLT

            jmp .L_4261b7
.L_42635f:

            call __stack_chk_fail@PLT
.L_426364:

            xor EAX,EAX
            jmp .L_4262d7
.L_42636b:

            xor EAX,EAX
            jmp .L_42634f
.L_42636f:

            xor EAX,EAX
            jmp .L_426313
.L_426373:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426380:

            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            sub RSP,8
.L_42638d:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RBP+16]
            mov RCX,RDX
            sub RCX,RAX
            cmp RCX,RSI
            je .L_4263c9

            add RAX,RSI
            mov RBX,RDI
            sub RAX,RDX
            test RAX,RAX
            jle .L_4263e0

            mov RSI,RAX
            call .L_404a20

            test RAX,RAX
            js .L_426408

            add QWORD PTR [RBP],RAX
.L_4263c9:

            add RSP,8
.L_4263cd:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4263e0:

            xor EDX,EDX
            call .L_404dc0

            cmp RAX,-25
            mov R13,RAX
            je .L_426419

            mov QWORD PTR [RBP],RAX
            add RSP,8
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426408:

            add RSP,8
            mov R12D,EAX
            pop RBX
            mov EAX,R12D
            pop RBP
            pop R12
            pop R13
            ret 
.L_426419:

            lea RDX,QWORD PTR [RIP+.L_447c96]
            mov ESI,4294967295
            mov RDI,RBX
            xor EAX,EAX
            mov R12D,R13D
            call .L_432bc0

            jmp .L_4263c9
.L_426434:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426440:

            cmp RDX,1
            jbe .L_426500

            mov R8D,20
            jmp .L_42648c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426458:

            sub EAX,87
            shl EAX,4
.L_42645e:

            movzx ECX,BYTE PTR [RSI+1]
            lea R9D,DWORD PTR [RCX-97]
            cmp R9B,25
            ja .L_4264b3
.L_42646c:

            sub ECX,87
            or EAX,ECX
.L_426471:

            add RDI,1
            add RSI,2
            sub RDX,2
            sub R8,1
            mov BYTE PTR [RDI-1],AL
            je .L_4264e8

            cmp RDX,1
            jbe .L_4264e8
.L_42648c:

            movzx EAX,BYTE PTR [RSI]
            lea ECX,DWORD PTR [RAX-97]
            cmp CL,25
            jbe .L_426458

            lea ECX,DWORD PTR [RAX-65]
            cmp CL,25
            ja .L_4264c8

            movzx ECX,BYTE PTR [RSI+1]
            sub EAX,55
            shl EAX,4
            lea R9D,DWORD PTR [RCX-97]
            cmp R9B,25
            jbe .L_42646c
.L_4264b3:

            lea R9D,DWORD PTR [RCX-65]
            cmp R9B,25
            ja .L_4264d8

            sub ECX,55
            or EAX,ECX
            jmp .L_426471
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4264c8:

            sub EAX,48
            cmp AL,9
            ja .L_4264f8

            shl EAX,4
            jmp .L_42645e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4264d8:

            sub ECX,48
            cmp CL,9
            ja .L_4264f8

            or EAX,ECX
            jmp .L_426471
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4264e8:

            mov EAX,20
            sub RAX,R8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4264f8:

            mov RAX,-1
            ret 
.L_426500:

            xor EAX,EAX
            ret 
.L_426503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426510:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,296
.L_426524:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RBP+40]
            cmp EAX,5
            je .L_4265e8

            cmp EAX,6
            jne .L_4265c0

            movsx EAX,BYTE PTR [RSI]
            xor ECX,ECX
            movsxd RDX,EDX
            sub EAX,48
            cmp EAX,9
            ja .L_42658f

            test RDX,RDX
            jne .L_426576

            jmp .L_42658f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426570:

            sub RDX,1
            je .L_42658f
.L_426576:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426570
.L_42658f:

            mov QWORD PTR [RBP+88],RCX
.L_426593:

            mov RAX,QWORD PTR [RSP+280]
            xor RAX,QWORD PTR FS:[40]
            jne .L_426f8e

            add RSP,296
.L_4265b1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4265c0:

            mov R12,QWORD PTR [RBP+504]
            test R12,R12
            je .L_426593

            sub EAX,9
            cmp EAX,35
            ja .L_426593

            lea RCX,QWORD PTR [RIP+.L_447f8c]
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4265e8:

            movsx EAX,BYTE PTR [RSI]
            xor ECX,ECX
            movsxd RDX,EDX
            sub EAX,48
            cmp EAX,9
            ja .L_42661f

            test RDX,RDX
            jne .L_426606

            jmp .L_42661f
          .byte 0x90
.L_426600:

            sub RDX,1
            je .L_42661f
.L_426606:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426600
.L_42661f:

            mov QWORD PTR [RBP+80],RCX
            jmp .L_426593
.L_426628:

            mov RAX,QWORD PTR [R12+16]
            lea R13,QWORD PTR [R12+152]
            test RAX,RAX
            je .L_426678

            lea RSI,QWORD PTR [RAX+152]
            mov RDI,R13
            mov DWORD PTR [RSP+12],EDX
            call .L_42e3c0

            mov RAX,QWORD PTR [RBP+504]
            mov ESI,47
            lea RDI,QWORD PTR [RAX+152]
            call .L_4312e0

            mov R12,QWORD PTR [RBP+504]
            mov EDX,DWORD PTR [RSP+12]
            lea R13,QWORD PTR [R12+152]
.L_426678:

            mov EAX,DWORD PTR [RBP+56]
            or DWORD PTR [R12+28],2
            movsxd R12,EDX
            test EAX,EAX
            je .L_426f5c

            test R12,R12
            je .L_426593

            movzx EAX,BYTE PTR [RBX]
            lea RBP,QWORD PTR [RIP+.L_448160]
            mov ECX,DWORD PTR [RBP+RAX*4]
            test ECX,ECX
            js .L_426593

            movzx EAX,BYTE PTR [RBX+1]
            mov EAX,DWORD PTR [RBP+RAX*4]
            test EAX,EAX
            js .L_426593

            lea R14,QWORD PTR [RSP+16]
            xor ESI,ESI
            mov RDI,R14
            jmp .L_42675e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4266d0:

            movzx ECX,BYTE PTR [RBX+2]
            mov ECX,DWORD PTR [RBP+RCX*4]
            test ECX,ECX
            js .L_426f6f

            shl ECX,6
            lea RDX,QWORD PTR [RSI+2]
            or EAX,ECX
            cmp R12,3
            mov BYTE PTR [RDI+1],AH
            je .L_42677b

            movzx ECX,BYTE PTR [RBX+3]
            mov ECX,DWORD PTR [RBP+RCX*4]
            test ECX,ECX
            js .L_426f6f

            lea RDX,QWORD PTR [RSI+3]
            add RSI,6
            or EAX,ECX
            sub R12,4
            cmp RSI,255
            lea R15,QWORD PTR [RBX+4]
            lea R8,QWORD PTR [RDI+3]
            mov BYTE PTR [RDI+2],AL
            ja .L_426f93

            mov RSI,RDX
            mov RDI,R8
.L_426732:

            test R12,R12
            je .L_426f72

            movzx EAX,BYTE PTR [RBX+4]
            mov ECX,DWORD PTR [RBP+RAX*4]
            test ECX,ECX
            js .L_426f72

            movzx EAX,BYTE PTR [RBX+5]
            mov EAX,DWORD PTR [RBP+RAX*4]
            test EAX,EAX
            js .L_426f72

            mov RBX,R15
.L_42675e:

            shl ECX,18
            shl EAX,12
            or EAX,ECX
            mov EDX,EAX
            sar EDX,16
            cmp R12,2
            mov BYTE PTR [RDI],DL
            lea RDX,QWORD PTR [RSI+1]
            jne .L_4266d0
.L_42677b:

            lea RAX,QWORD PTR [RDX+3]
            cmp RAX,255
            jbe .L_426f6f

            mov RSI,R14
            mov RDI,R13
            call .L_431240

            jmp .L_426593
.L_42679b:

            movsxd RDX,EDX
            mov ECX,5
            lea RSI,QWORD PTR [RIP+.L_44666b]
            cmp RDX,5
            mov RDI,RBX
            cmovle RCX,RDX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4267e8

            cmp RDX,9
            mov ECX,9
            lea RSI,QWORD PTR [RIP+.L_447ca3]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4267fe
.L_4267e8:

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,128
            mov DWORD PTR [R12+288],EAX
.L_4267fe:

            cmp RDX,10
            mov ECX,10
            lea RSI,QWORD PTR [RIP+.L_447cac]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_426839

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,64
            mov DWORD PTR [R12+288],EAX
.L_426839:

            cmp RDX,8
            mov ECX,8
            lea RSI,QWORD PTR [RIP+.L_447cb6]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_426874

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,160
            mov DWORD PTR [R12+288],EAX
.L_426874:

            cmp RDX,18
            mov ECX,18
            lea RSI,QWORD PTR [RIP+.L_447cbe]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4268af

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,32
            mov DWORD PTR [R12+288],EAX
.L_4268af:

            cmp RDX,14
            mov ECX,14
            lea RSI,QWORD PTR [RIP+.L_447cd0]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4268ea

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,96
            mov DWORD PTR [R12+288],EAX
.L_4268ea:

            cmp RDX,7
            mov ECX,7
            lea RSI,QWORD PTR [RIP+.L_447cde]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_426925

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,192
            mov DWORD PTR [R12+288],EAX
.L_426925:

            cmp RDX,5
            mov ECX,5
            lea RSI,QWORD PTR [RIP+.L_4460c0]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_426960

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,16
            mov DWORD PTR [R12+288],EAX
.L_426960:

            or DWORD PTR [R12+28],128
            jmp .L_426593
.L_42696e:

            or DWORD PTR [R12+28],8
            movsxd RSI,EDX
            mov RDI,RBX
            call .L_426180

            mov QWORD PTR [R12+208],RAX
            jmp .L_426593
.L_42698c:

            or DWORD PTR [R12+28],8
            movsxd RSI,EDX
            mov RDI,RBX
            call .L_426180

            mov QWORD PTR [R12+200],RAX
            jmp .L_426593
.L_4269aa:

            mov RAX,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [RAX+152]
            mov QWORD PTR [RAX+160],0
            call .L_431240

            jmp .L_426593
.L_4269d9:

            mov RAX,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RAX+16],0
            call .L_431240

            jmp .L_426593
.L_426a02:

            mov R10,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [R10+128]
            call .L_426440

            mov QWORD PTR [R10+120],RAX
            jmp .L_426593
.L_426a2a:

            mov R10,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [R10+88]
            call .L_426440

            mov QWORD PTR [R10+80],RAX
            jmp .L_426593
.L_426a4f:

            or DWORD PTR [R12+28],8192
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RBX]
            mov RSI,QWORD PTR [RBP+512]
            sub EAX,48
            cmp EAX,9
            ja .L_426a9f

            test RDX,RDX
            jne .L_426a86

            jmp .L_426a9f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426a80:

            sub RDX,1
            je .L_426a9f
.L_426a86:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426a80
.L_426a9f:

            mov QWORD PTR [RSI+56],RCX
            jmp .L_426593
.L_426aa8:

            or DWORD PTR [R12+28],8192
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RBX]
            mov RSI,QWORD PTR [RBP+512]
            sub EAX,48
            cmp EAX,9
            ja .L_426aef

            test RDX,RDX
            jne .L_426ad6

            jmp .L_426aef
          .byte 0x90
.L_426ad0:

            sub RDX,1
            je .L_426aef
.L_426ad6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426ad0
.L_426aef:

            mov QWORD PTR [RSI+48],RCX
            jmp .L_426593
.L_426af8:

            or DWORD PTR [R12+28],8192
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RBX]
            mov RSI,QWORD PTR [RBP+512]
            sub EAX,48
            cmp EAX,9
            ja .L_426b3f

            test RDX,RDX
            jne .L_426b26

            jmp .L_426b3f
          .byte 0x90
.L_426b20:

            sub RDX,1
            je .L_426b3f
.L_426b26:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426b20
.L_426b3f:

            mov QWORD PTR [RSI+40],RCX
            jmp .L_426593
.L_426b48:

            lea RDI,QWORD PTR [R12+128]
            movsxd RDX,EDX
            call .L_426440

            mov QWORD PTR [R12+120],RAX
            jmp .L_426593
.L_426b62:

            lea RDI,QWORD PTR [R12+88]
            movsxd RDX,EDX
            call .L_426440

            mov QWORD PTR [R12+80],RAX
            jmp .L_426593
.L_426b79:

            or DWORD PTR [R12+28],1
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426bbf

            test RDX,RDX
            jne .L_426ba6

            jmp .L_426bbf
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426ba0:

            sub RDX,1
            je .L_426bbf
.L_426ba6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426ba0
.L_426bbf:

            mov QWORD PTR [R12+56],RCX
            jmp .L_426593
.L_426bc9:

            or DWORD PTR [R12+28],1
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426c0f

            test RDX,RDX
            jne .L_426bf6

            jmp .L_426c0f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426bf0:

            sub RDX,1
            je .L_426c0f
.L_426bf6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426bf0
.L_426c0f:

            mov QWORD PTR [R12+48],RCX
            jmp .L_426593
.L_426c19:

            or DWORD PTR [R12+28],1
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426c5f

            test RDX,RDX
            jne .L_426c46

            jmp .L_426c5f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426c40:

            sub RDX,1
            je .L_426c5f
.L_426c46:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426c40
.L_426c5f:

            mov QWORD PTR [R12+40],RCX
            jmp .L_426593
.L_426c69:

            or DWORD PTR [R12+28],16384
            jmp .L_426593
.L_426c77:

            or DWORD PTR [R12+28],1024
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426cbf

            test RDX,RDX
            jne .L_426ca6

            jmp .L_426cbf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426ca0:

            sub RDX,1
            je .L_426cbf
.L_426ca6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426ca0
.L_426cbf:

            mov QWORD PTR [R12+312],RCX
            jmp .L_426593
.L_426ccc:

            or DWORD PTR [R12+28],512
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426d0f

            test RDX,RDX
            jne .L_426cf6

            jmp .L_426d0f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426cf0:

            sub RDX,1
            je .L_426d0f
.L_426cf6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426cf0
.L_426d0f:

            mov QWORD PTR [R12+304],RCX
            jmp .L_426593
.L_426d1c:

            mov EDI,DWORD PTR [R12+288]
            movsxd RDX,EDX
            or DWORD PTR [R12+28],64
            and EDI,61440
            test RDX,RDX
            je .L_426d82

            movzx EAX,BYTE PTR [RSI]
            add RBX,RDX
            xor EDX,EDX
            lea RSI,QWORD PTR [RSI+1]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            jbe .L_426d5f

            jmp .L_426d82
          .byte 0x66
          .byte 0x90
.L_426d50:

            movzx EAX,BYTE PTR [RSI]
            add RSI,1
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            ja .L_426d7b
.L_426d5f:

            lea RCX,QWORD PTR [RDX*8]
            movsx EDX,AL
            sub EDX,48
            movsxd RAX,EDX
            or RAX,RCX
            cmp RBX,RSI
            mov RDX,RAX
            jne .L_426d50
.L_426d7b:

            mov EAX,EDX
            and AH,15
            or EDI,EAX
.L_426d82:

            mov DWORD PTR [R12+288],EDI
            jmp .L_426593
.L_426d8f:

            or DWORD PTR [R12+28],16
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426dcf

            test RDX,RDX
            jne .L_426db6

            jmp .L_426dcf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426db0:

            sub RDX,1
            je .L_426dcf
.L_426db6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426db0
.L_426dcf:

            mov QWORD PTR [R12+248],RCX
            jmp .L_426593
.L_426ddc:

            or DWORD PTR [R12+28],16
            lea RDI,QWORD PTR [R12+224]
            mov QWORD PTR [R12+232],0
            movsxd RDX,EDX
            call .L_431240

            jmp .L_426593
.L_426e03:

            or DWORD PTR [R12+28],32
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426e3f

            test RDX,RDX
            jne .L_426e26

            jmp .L_426e3f
.L_426e20:

            sub RDX,1
            je .L_426e3f
.L_426e26:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426e20
.L_426e3f:

            mov QWORD PTR [R12+280],RCX
            jmp .L_426593
.L_426e4c:

            or DWORD PTR [R12+28],32
            lea RDI,QWORD PTR [R12+256]
            mov QWORD PTR [R12+264],0
            movsxd RDX,EDX
            call .L_431240

            jmp .L_426593
.L_426e73:

            or DWORD PTR [R12+28],8
            movsxd RSI,EDX
            mov RDI,RBX
            call .L_426180

            mov QWORD PTR [R12+216],RAX
            jmp .L_426593
.L_426e91:

            or DWORD PTR [R12+28],2048
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426ed7

            test RDX,RDX
            jne .L_426ebe

            jmp .L_426ed7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426eb8:

            sub RDX,1
            je .L_426ed7
.L_426ebe:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426eb8
.L_426ed7:

            mov QWORD PTR [R12+320],RCX
            jmp .L_426593
.L_426ee4:

            or DWORD PTR [R12+28],4
            lea RDI,QWORD PTR [R12+176]
            mov QWORD PTR [R12+184],0
            movsxd RDX,EDX
            call .L_431240

            jmp .L_426593
.L_426f0b:

            or DWORD PTR [R12+28],256
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_426f4f

            test RDX,RDX
            jne .L_426f36

            jmp .L_426f4f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426f30:

            sub RDX,1
            je .L_426f4f
.L_426f36:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_426f30
.L_426f4f:

            mov QWORD PTR [R12+296],RCX
            jmp .L_426593
.L_426f5c:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,R13
            call .L_431240

            jmp .L_426593
.L_426f6f:

            mov RSI,RDX
.L_426f72:

            test RSI,RSI
            je .L_426593

            mov RDX,RSI
            mov RDI,R13
            mov RSI,R14
            call .L_431240

            jmp .L_426593
.L_426f8e:

            call __stack_chk_fail@PLT
.L_426f93:

            mov RSI,R14
            mov RDI,R13
            call .L_431240

            xor ESI,ESI
            mov RDI,R14
            jmp .L_426732
.L_426fa8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426fb0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,392
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            mov RBX,RDX
            sub RSP,8
.L_426fd1:

            call calloc@PLT

            test RAX,RAX
            je .L_4271f8

            mov R13,RAX
            mov RAX,QWORD PTR [R14+504]
            xor EDI,EDI
            mov DWORD PTR [R13+288],33279
            mov QWORD PTR [R13+16],RAX
            call time@PLT

            xor EDI,EDI
            mov QWORD PTR [R13+216],RAX
            call time@PLT

            mov R15,QWORD PTR [RBX]
            mov QWORD PTR [R13+208],RAX
            mov QWORD PTR [R14+504],R13
            mov QWORD PTR [R14+512],0
            test R15,R15
            je .L_4270bd

            lea RBX,QWORD PTR [RIP+.L_44602a]
            jmp .L_427048
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427040:

            mov R15,QWORD PTR [R15]
            test R15,R15
            je .L_4270bd
.L_427048:

            mov RSI,QWORD PTR [R15+8]
            mov ECX,3
            mov RDI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_427040

            mov R12,QWORD PTR [R15+16]
            mov RDI,R12
            call strlen@PLT

            movsx EDX,BYTE PTR [R12]
            sub EDX,48
            cmp EDX,9
            ja .L_4271d8

            test RAX,RAX
            je .L_4271d8

            add RAX,R12
            xor ECX,ECX
            jmp .L_427095
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427090:

            cmp R12,RAX
            je .L_4270b1
.L_427095:

            lea RCX,QWORD PTR [RCX+RCX*4]
            movsxd RDX,EDX
            add R12,1
            lea RCX,QWORD PTR [RDX+RCX*2]
            movsx EDX,BYTE PTR [R12]
            sub EDX,48
            cmp EDX,9
            jbe .L_427090
.L_4270b1:

            mov QWORD PTR [R13+32],RCX
.L_4270b5:

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_427048
.L_4270bd:

            movsxd RAX,DWORD PTR [R14+532]
            mov R12D,DWORD PTR [R14+528]
            mov DWORD PTR [R13+356],1
            cmp EAX,R12D
            jge .L_427150

            mov RBX,QWORD PTR [R14+520]
.L_4270e2:

            lea EDX,DWORD PTR [RAX+1]
            test EAX,EAX
            mov RDI,QWORD PTR [R13+32]
            mov DWORD PTR [R14+532],EDX
            jle .L_427133

            lea EDX,DWORD PTR [RAX-1]
            sar EDX,1
            movsxd RCX,EDX
            mov RSI,QWORD PTR [RBX+RCX*8]
            cmp RDI,QWORD PTR [RSI+32]
            jb .L_42712b

            jmp .L_4271b9

            nop
            nop
            nop
            nop
            nop
.L_427110:

            lea ECX,DWORD PTR [RDX-1]
            sar ECX,1
            movsxd RAX,ECX
            mov RSI,QWORD PTR [RBX+RAX*8]
            movsxd RAX,EDX
            cmp RDI,QWORD PTR [RSI+32]
            jae .L_4271bb

            mov EDX,ECX
.L_42712b:

            test EDX,EDX
            mov QWORD PTR [RBX+RAX*8],RSI
            jne .L_427110
.L_427133:

            mov QWORD PTR [RBX],R13
            xor EAX,EAX
.L_427138:

            add RSP,8
.L_42713c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427150:

            cmp R12D,1023
            jle .L_4271e8

            lea R15D,DWORD PTR [R12+R12*1]
            cmp R12D,R15D
            jge .L_4271f8

            movsxd RDI,R15D
            shl RDI,3
.L_427171:

            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4271f8

            mov RBP,QWORD PTR [R14+520]
            movsxd RDX,R12D
            mov RDI,RAX
            shl RDX,3
            mov RSI,RBP
            call memcpy@PLT

            mov RDI,RBP
            call free@PLT

            mov QWORD PTR [R14+520],RBX
            mov DWORD PTR [R14+528],R15D
            movsxd RAX,DWORD PTR [R14+532]
            jmp .L_4270e2
.L_4271b9:

            mov EDX,EAX
.L_4271bb:

            movsxd RDX,EDX
            xor EAX,EAX
            mov QWORD PTR [RBX+RDX*8],R13
            add RSP,8
.L_4271c8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4271d8:

            xor ECX,ECX
            mov QWORD PTR [R13+32],RCX
            jmp .L_4270b5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4271e8:

            mov EDI,8192
            mov R15D,1024
            jmp .L_427171
.L_4271f8:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_427138
.L_427218:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427220:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,136
.L_427234:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP],RSI
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX],0
            jne .L_427380

            cmp QWORD PTR [RBX+680],0
            mov QWORD PTR [RSP+8],RBX
            je .L_4277d0
.L_42726f:

            lea RAX,QWORD PTR [RSP+88]
            mov ESI,28
            mov RDI,R12
            mov RDX,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_4049d0

            mov R8,QWORD PTR [RSP+88]
            test R8,R8
            js .L_4277ba

            cmp R8,27
            jle .L_428548

            cmp DWORD PTR [RAX],561144184
            jne .L_428520

            movzx EDX,WORD PTR [RAX+6]
            rol DX,8
            cmp DX,1
            jne .L_428458

            mov RDX,QWORD PTR [RAX+8]
            mov R15,QWORD PTR [RSP+8]
            mov ESI,28
            mov RDI,R12
            bswap RDX
            mov QWORD PTR [R15+64],RDX
            mov RDX,QWORD PTR [RAX+16]
            mov EAX,DWORD PTR [RAX+24]
            bswap RDX
            bswap EAX
            mov QWORD PTR [RSP+40],RDX
            mov DWORD PTR [RSP+24],EAX
            call .L_404a20

            add QWORD PTR [R15],28
            mov QWORD PTR [R15+72],0
            mov ESI,28
            mov RDI,R12
            call .L_426380

            test EAX,EAX
            mov R15D,EAX
            je .L_427930

            nop
            nop
            nop
.L_427318:

            mov RBX,QWORD PTR [RSP+120]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_428705

            add RSP,136
.L_427336:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427348:

            test RDI,RDI
            mov QWORD PTR [RBX+504],RDI
            je .L_4277a8

            mov EAX,DWORD PTR [RDI+288]
            and EAX,61440
            cmp EAX,16384
            jne .L_427430

            cmp DWORD PTR [RDI+28],130
            jne .L_427430

            call .L_424120
.L_427380:

            mov ESI,DWORD PTR [RBX+532]
            test ESI,ESI
            jle .L_42779d

            mov RDX,QWORD PTR [RBX+520]
            lea R8D,DWORD PTR [RSI-1]
            movsxd RAX,R8D
            cmp R8D,1
            mov RAX,QWORD PTR [RDX+RAX*8]
            mov RDI,QWORD PTR [RDX]
            mov DWORD PTR [RBX+532],R8D
            mov R10,QWORD PTR [RAX+32]
            mov QWORD PTR [RDX],RAX
            jle .L_427348

            mov R11D,1
            xor ESI,ESI
            xor ECX,ECX
            jmp .L_42740e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4273c8:

            movsxd RSI,EAX
            mov RSI,QWORD PTR [RDX+RSI*8]
            mov RSI,QWORD PTR [RSI+32]
            cmp R9,RSI
            jbe .L_427421

            mov R9,RSI
.L_4273db:

            cmp R10,R9
            jbe .L_427348

            lea RSI,QWORD PTR [RDX+RCX*8]
            movsxd RCX,EAX
            lea RCX,QWORD PTR [RDX+RCX*8]
            mov R9,QWORD PTR [RSI]
            mov R11,QWORD PTR [RCX]
            mov QWORD PTR [RSI],R11
            lea ESI,DWORD PTR [RAX+RAX*1]
            mov QWORD PTR [RCX],R9
            movsxd RCX,EAX
            lea R11D,DWORD PTR [RSI+1]
            cmp R8D,R11D
            jle .L_427348
.L_42740e:

            movsxd RAX,R11D
            mov RAX,QWORD PTR [RDX+RAX*8]
            mov R9,QWORD PTR [RAX+32]
            lea EAX,DWORD PTR [RSI+2]
            cmp R8D,EAX
            jg .L_4273c8
.L_427421:

            mov EAX,R11D
            jmp .L_4273db
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427430:

            mov R15,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RDI+216]
            mov R13,RDI
            xor EDX,EDX
            mov RDI,R15
            call .L_438f30

            mov RSI,QWORD PTR [R13+200]
            xor EDX,EDX
            mov RDI,R15
            call .L_439050

            mov RSI,QWORD PTR [R13+208]
            xor EDX,EDX
            mov RDI,R15
            call .L_4392c0

            mov RSI,QWORD PTR [R13+280]
            mov RDI,R15
            call .L_438cc0

            mov RDX,QWORD PTR [R13+264]
            test RDX,RDX
            jne .L_427740
.L_427489:

            xor R15D,R15D
.L_42748c:

            mov R14,QWORD PTR [RSP]
            mov RSI,QWORD PTR [R13+248]
            mov RDI,R14
            call .L_439670

            mov RDX,QWORD PTR [R13+232]
            test RDX,RDX
            je .L_4274c9

            mov RCX,QWORD PTR [RBX+680]
            mov RSI,QWORD PTR [R13+224]
            mov RDI,R14
            call .L_439750

            test EAX,EAX
            jne .L_427806
.L_4274c9:

            mov R14,QWORD PTR [RSP]
            mov ESI,DWORD PTR [R13+288]
            mov RDI,R14
            call .L_4392b0

            mov RCX,QWORD PTR [RBX+680]
            mov RDX,QWORD PTR [R13+160]
            mov RDI,R14
            mov RSI,QWORD PTR [R13+152]
            call .L_4393f0

            test EAX,EAX
            je .L_427536

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_428437

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_427536:

            mov RDX,QWORD PTR [R13+184]
            test RDX,RDX
            jne .L_427859
.L_427546:

            mov EAX,DWORD PTR [R13+288]
            and EAX,61440
            cmp EAX,16384
            je .L_427844

            mov ESI,DWORD PTR [R13+356]
            mov RDI,QWORD PTR [RSP]
            call .L_439350
.L_42756d:

            mov RSI,QWORD PTR [R13+56]
            mov RDI,QWORD PTR [RSP]
            call .L_439490

            cmp QWORD PTR [R13+368],0
            jne .L_42791b
.L_427588:

            mov RSI,QWORD PTR [R13+320]
            mov RDI,QWORD PTR [RSP]
            call .L_438d90

            mov EAX,DWORD PTR [R13+28]
            test AH,1
            jne .L_427902
.L_4275a5:

            test AH,2
            jne .L_4278e9
.L_4275ae:

            test AH,4
            jne .L_4278b6

            cmp QWORD PTR [R13+336],0
            jne .L_4278d4
.L_4275c5:

            mov RDX,QWORD PTR [R13+56]
            mov RAX,QWORD PTR [R13+40]
            movdqu XMM0,XMMWORD PTR [R13+72]
            mov R14,QWORD PTR [R13+384]
            mov DWORD PTR [RBX+552],1
            mov QWORD PTR [RBX+584],RDX
            mov EDX,DWORD PTR [R13+64]
            movups XMMWORD PTR [RBX+600],XMM0
            test R14,R14
            mov QWORD PTR [RBX+560],0
            mov QWORD PTR [RBX+568],RAX
            movdqu XMM0,XMMWORD PTR [R13+88]
            mov DWORD PTR [RBX+592],EDX
            mov RDX,QWORD PTR [R13+104]
            movups XMMWORD PTR [RBX+616],XMM0
            movdqu XMM0,XMMWORD PTR [R13+112]
            mov QWORD PTR [RBX+632],RDX
            mov RDX,QWORD PTR [R13+144]
            movups XMMWORD PTR [RBX+640],XMM0
            movdqu XMM0,XMMWORD PTR [R13+128]
            mov QWORD PTR [RBX+672],RDX
            movups XMMWORD PTR [RBX+656],XMM0
            je .L_42847c

            lea RAX,QWORD PTR [RSP+96]
            lea RBP,QWORD PTR [RSP+88]
            lea R15,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+8],R13
            mov RBX,RAX
            mov R13,R14
            mov R14,QWORD PTR [RSP]
            jmp .L_427717
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427688:

            mov ECX,DWORD PTR [R13+112]
            mov EDX,DWORD PTR [R13+72]
            mov RDI,R12
            mov ESI,DWORD PTR [R13+64]
            call .L_425800

            test EAX,EAX
            jne .L_42772b

            mov R8,QWORD PTR [R13+40]
            mov RCX,RBX
            mov RDX,RBP
            mov RSI,R15
            mov RDI,R12
            mov QWORD PTR [RSP+80],0
            call .L_425310

            test EAX,EAX
            jne .L_42772b

            mov RAX,QWORD PTR [RSP+88]
            cmp QWORD PTR [R13+56],RAX
            jne .L_427b0d

            mov RDX,QWORD PTR [R13+80]
            mov R8,QWORD PTR [R13+120]
            lea RCX,QWORD PTR [R13+128]
            lea RSI,QWORD PTR [R13+88]
            mov RDI,R12
            call .L_425c30

            test EAX,EAX
            jne .L_42772b

            mov RSI,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [RSP+88]
            mov RDI,R14
            mov RDX,QWORD PTR [RSP+80]
            call .L_43a600

            mov R13,QWORD PTR [R13]
            test R13,R13
            je .L_427b33
.L_427717:

            mov RSI,QWORD PTR [R13+48]
            mov RDI,R12
            call .L_426380

            test EAX,EAX
            je .L_427688
.L_42772b:

            mov R13,QWORD PTR [RSP+8]
            mov R15D,EAX
.L_427733:

            mov RDI,R13
            call .L_424120

            jmp .L_427318
.L_427740:

            mov RCX,QWORD PTR [RBX+680]
            mov RSI,QWORD PTR [R13+256]
            mov RDI,QWORD PTR [RSP]
            call .L_438d60

            test EAX,EAX
            je .L_427489

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_428731

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_447968]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_42748c
.L_42779d:

            mov QWORD PTR [RBX+504],0
.L_4277a8:

            mov DWORD PTR [RBX+24],1
            mov R15D,1
            jmp .L_427318
.L_4277ba:

            test R8D,R8D
            mov R15D,R8D
            je .L_427380

            jmp .L_427318
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4277d0:

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBX+680],RAX
            je .L_42844d

            mov RAX,QWORD PTR [R12+2472]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_42726f
.L_427806:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_428dd7

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_4479c0]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_4274c9
.L_427844:

            mov EAX,DWORD PTR [R13+24]
            mov RDI,QWORD PTR [RSP]
            lea ESI,DWORD PTR [RAX+2]
            call .L_439350

            jmp .L_42756d
.L_427859:

            mov RCX,QWORD PTR [RBX+680]
            mov RSI,QWORD PTR [R13+176]
            mov RDI,QWORD PTR [RSP]
            call .L_439630

            test EAX,EAX
            je .L_427546

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_428dcb

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_445640]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_427546
.L_4278b6:

            mov RSI,QWORD PTR [R13+312]
            mov RDI,QWORD PTR [RSP]
            call .L_439140

            cmp QWORD PTR [R13+336],0
            je .L_4275c5
.L_4278d4:

            mov RSI,QWORD PTR [R13+328]
            mov RDI,QWORD PTR [RSP]
            call .L_438850

            jmp .L_4275c5
.L_4278e9:

            mov RSI,QWORD PTR [R13+304]
            mov RDI,QWORD PTR [RSP]
            call .L_439110

            mov EAX,DWORD PTR [R13+28]
            jmp .L_4275ae
.L_427902:

            mov RSI,QWORD PTR [R13+296]
            mov RDI,QWORD PTR [RSP]
            call .L_4390e0

            mov EAX,DWORD PTR [R13+28]
            jmp .L_4275a5
.L_42791b:

            mov RSI,QWORD PTR [R13+360]
            mov RDI,QWORD PTR [RSP]
            call .L_438db0

            jmp .L_427588
.L_427930:

            mov EDX,DWORD PTR [RSP+24]
            xor ECX,ECX
            mov ESI,1
            mov RDI,R12
            call .L_425800

            test EAX,EAX
            mov R15D,EAX
            jne .L_427318

            lea RSI,QWORD PTR [RIP+.L_424110]
            lea RDI,QWORD PTR [RIP+.L_425730]
            xor R9D,R9D
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,R12
            call xmlReaderForIO@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_42898e

            lea RSI,QWORD PTR [RIP+.L_4257d0]
            mov RDX,R12
            mov RDI,RAX
            call xmlTextReaderSetErrorHandler@PLT

            mov QWORD PTR [RSP+48],RBX
            nop
.L_427990:

            mov RDI,R13
            call xmlTextReaderRead@PLT

            cmp EAX,1
            jne .L_428308

            mov RDI,R13
            call xmlTextReaderNodeType@PLT

            mov RDI,R13
            mov R14D,EAX
            call xmlTextReaderConstLocalName@PLT

            cmp R14D,3
            mov RBP,RAX
            je .L_427b64

            cmp R14D,15
            je .L_427afd

            cmp R14D,1
            jne .L_427990

            mov RDI,R13
            call xmlTextReaderIsEmptyElement@PLT

            mov DWORD PTR [RSP+64],EAX
            lea RAX,QWORD PTR [RSP+96]
            mov RDI,R13
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+104],RAX
            call xmlTextReaderMoveToFirstAttribute@PLT

            cmp EAX,1
            mov R15D,EAX
            je .L_427a6f

            jmp .L_427bcc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427a10:

            mov RDI,R13
            call xmlTextReaderConstLocalName@PLT

            mov RDI,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R14+8],RAX
            je .L_427b92

            mov RDI,R13
            call xmlTextReaderConstValue@PLT

            mov RDI,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R14+16],RAX
            je .L_427b89

            mov RAX,QWORD PTR [RSP+104]
            mov QWORD PTR [R14],0
            mov RDI,R13
            mov QWORD PTR [RAX],R14
            mov QWORD PTR [RSP+104],R14
            call xmlTextReaderMoveToNextAttribute@PLT

            cmp EAX,1
            jne .L_427bc9
.L_427a6f:

            mov EDI,24
            call malloc@PLT

            test RAX,RAX
            mov R14,RAX
            jne .L_427a10
.L_427a81:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0
.L_427a9d:

            mov RBX,QWORD PTR [RSP+96]
            test RBX,RBX
            je .L_427318

            nop
            nop
            nop
            nop
            nop
.L_427ab0:

            mov RDI,QWORD PTR [RBX+8]
            mov R14,QWORD PTR [RBX]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,RBX
            mov RBX,R14
            call free@PLT

            test R14,R14
            jne .L_427ab0

            mov RAX,QWORD PTR [RSP+32]
            test R15D,R15D
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],RAX
            jne .L_427318
.L_427af1:

            mov EDX,DWORD PTR [RSP+64]
            test EDX,EDX
            je .L_427990
.L_427afd:

            mov RSI,RBP
            mov RDI,R12
            call .L_4243d0

            jmp .L_427990
.L_427b0d:

            lea RDX,QWORD PTR [RIP+.L_447c14]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R13,QWORD PTR [RSP+8]
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_427733
.L_427b33:

            mov RBX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+568]
.L_427b44:

            xor R15D,R15D
            test RAX,RAX
            je .L_427733

            mov RSI,QWORD PTR [R13+48]
            mov RDI,R12
            call .L_426380

            mov R15D,EAX
            jmp .L_427733
.L_427b64:

            mov RDI,R13
            call xmlTextReaderConstValue@PLT

            mov RBP,RAX
            mov RDI,RAX
            call strlen@PLT

            mov RSI,RBP
            mov EDX,EAX
            mov RDI,R12
            call .L_426510

            jmp .L_427990
.L_427b89:

            mov RDI,QWORD PTR [R14+8]
            call free@PLT
.L_427b92:

            mov RDI,R14
            call free@PLT
.L_427b9a:

            lea RDX,QWORD PTR [RIP+.L_44512a]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_427bb0:

            mov RBX,QWORD PTR [RSP+96]
            test RBX,RBX
            je .L_42844d

            mov R15D,4294967266
            jmp .L_427ab0
.L_427bc9:

            mov R15D,EAX
.L_427bcc:

            test R15D,R15D
            jne .L_427a9d

            mov RAX,QWORD PTR [R12+2472]
            mov R14,QWORD PTR [RAX]
            cmp DWORD PTR [R14+40],77
            mov DWORD PTR [R14+56],0
            ja .L_427c18

            mov EAX,DWORD PTR [R14+40]
            lea RBX,QWORD PTR [RIP+.L_44801c]
            movsxd RAX,DWORD PTR [RBX+RAX*4]
            add RAX,RBX
            jmp RAX
.L_427c03:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_4260d0

            test EAX,EAX
            mov R15D,EAX
            jne .L_427bb0
.L_427c18:

            mov RBX,QWORD PTR [RSP+96]
            test RBX,RBX
            jne .L_427ab0
.L_427c26:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],RAX
            jmp .L_427af1
.L_427c3e:

            lea RDI,QWORD PTR [RIP+.L_447a20]
            mov ECX,14
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4285c0

            lea RDI,QWORD PTR [RIP+.L_447a53]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4286b2

            lea RSI,QWORD PTR [RIP+.L_44666b]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42869a

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,R14
            mov RDI,R12
            call .L_426fb0

            test EAX,EAX
            jne .L_42868f

            mov DWORD PTR [R14+40],7
            jmp .L_427c18
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427cc0:

            lea RDI,QWORD PTR [RIP+.L_447a1c]
            mov ECX,4
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428676

            mov DWORD PTR [R14+40],2
            jmp .L_427c18
.L_427ceb:

            lea RDI,QWORD PTR [RIP+.L_447a18]
            mov ECX,4
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            jne .L_428676

            mov DWORD PTR [R14+40],1
            jmp .L_427c18
.L_427d1e:

            lea RDI,QWORD PTR [RIP+.L_447a7e]
            mov ECX,14
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42861d

            lea RDI,QWORD PTR [RIP+.L_446d27]
            mov ECX,8
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42865b

            lea RSI,QWORD PTR [RIP+.L_446d15]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_427c03

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],43
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0x90
.L_427da0:

            lea RDI,QWORD PTR [RIP+.L_447b17]
            mov ECX,15
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428588

            lea RBX,QWORD PTR [RIP+.L_447d3f]
            mov DWORD PTR [R14+40],57
.L_427dcd:

            mov RAX,QWORD PTR [R14+504]
            cmp QWORD PTR [RAX+336],0
            lea RDI,QWORD PTR [RAX+328]
            jne .L_427fb8
.L_427de9:

            mov RSI,RBX
            call .L_4312c0

            jmp .L_427c18
.L_427df6:

            lea RDI,QWORD PTR [RIP+.L_446f14]
            mov ECX,6
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_428640

            lea RDI,QWORD PTR [RIP+.L_446f25]
            mov ECX,6
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            jne .L_427c03

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],35
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427e60:

            lea RDI,QWORD PTR [RIP+.L_44763f]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_4285f0

            lea RDI,QWORD PTR [RIP+.L_450510]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_428d5f

            lea RSI,QWORD PTR [RIP+.L_4447c9]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428e10

            lea RSI,QWORD PTR [RIP+.L_447a2e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428de3

            lea RSI,QWORD PTR [RIP+.L_447a37]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428db0

            lea RSI,QWORD PTR [RIP+.L_447a49]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428d95

            lea RSI,QWORD PTR [RIP+.L_4451fb]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428d7a

            lea RSI,QWORD PTR [RIP+.L_447a5f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_427c03

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],24
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427f68:

            lea RDI,QWORD PTR [RIP+.L_447a8c]
            mov ECX,11
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428551

            lea RBX,QWORD PTR [RIP+.L_447ce5]
            mov DWORD PTR [R14+40],46
.L_427f95:

            mov RAX,QWORD PTR [R14+504]
            or DWORD PTR [RAX+28],4096
            cmp QWORD PTR [RAX+336],0
            lea RDI,QWORD PTR [RAX+328]
            je .L_427de9
.L_427fb8:

            mov ESI,44
            call .L_4312e0

            mov RDI,QWORD PTR [R14+504]
            add RDI,328
            jmp .L_427de9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427fd8:

            lea RDI,QWORD PTR [RIP+.L_44666b]
            mov ECX,5
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_428a82

            lea RDI,QWORD PTR [RIP+.L_445300]
            mov ECX,5
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_428c28

            lea RSI,QWORD PTR [RIP+.L_447a5c]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428b64

            lea RSI,QWORD PTR [RIP+.L_446ff3]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428b57

            lea RSI,QWORD PTR [RIP+.L_447021]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428b4a

            lea RSI,QWORD PTR [RIP+.L_447d59]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d52

            lea RSI,QWORD PTR [RIP+.L_447a66]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d45

            lea RSI,QWORD PTR [RIP+.L_446029]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d38

            lea RSI,QWORD PTR [RIP+.L_447a6c]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d2b

            lea RSI,QWORD PTR [RIP+.L_4460c5]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d1e

            lea RSI,QWORD PTR [RIP+.L_446047]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d11

            lea RSI,QWORD PTR [RIP+.L_44604f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428d04

            lea RSI,QWORD PTR [RIP+.L_447a71]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428cf7

            lea RSI,QWORD PTR [RIP+.L_446033]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428e49

            lea RSI,QWORD PTR [RIP+.L_447ca7]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_428e2b

            lea RSI,QWORD PTR [RIP+.L_447df2]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_4289bb

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],39
.L_428163:

            test RBX,RBX
            je .L_427c18

            mov RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_447ca7]
            call strcmp@PLT

            test EAX,EAX
            jne .L_4281be

            mov RDX,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_447de6]
            mov RDI,RDX
            mov QWORD PTR [RSP+56],RDX
            call strcmp@PLT

            test EAX,EAX
            mov RSI,QWORD PTR [R14+504]
            mov RDX,QWORD PTR [RSP+56]
            jne .L_428a9f

            mov RAX,QWORD PTR [R14+536]
            mov QWORD PTR [RSI+8],RAX
            mov QWORD PTR [R14+536],RSI
.L_4281be:

            mov RBX,QWORD PTR [RBX]
            jmp .L_428163
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4281c8:

            lea RDI,QWORD PTR [RIP+.L_450510]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_428610

            lea RDI,QWORD PTR [RIP+.L_4447c9]
            mov ECX,5
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42869a

            mov DWORD PTR [R14+40],6
            jmp .L_427c18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428218:

            lea RDI,QWORD PTR [RIP+.L_44763f]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_4285cd

            lea RDI,QWORD PTR [RIP+.L_450510]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_428f09

            lea RSI,QWORD PTR [RIP+.L_4447c9]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428eee

            lea RSI,QWORD PTR [RIP+.L_447a2e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428ec1

            lea RSI,QWORD PTR [RIP+.L_447a37]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428e94

            lea RSI,QWORD PTR [RIP+.L_447a49]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428e67

            lea RSI,QWORD PTR [RIP+.L_4504a2]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_427c03

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],15
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428308:

            mov RDI,R13
            mov DWORD PTR [RSP+32],EAX
            mov RBX,QWORD PTR [RSP+48]
            call xmlFreeTextReader@PLT

            call xmlCleanupParser@PLT

            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            jne .L_42844d

            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RDI+16],RAX
            mov RAX,RDI
            mov RDI,QWORD PTR [RSP+40]
            cmp QWORD PTR [RAX+72],RDI
            jne .L_4286e6

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            jne .L_428490
.L_428354:

            mov RAX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RAX+536]
            add RAX,544
            mov QWORD PTR [RSP+16],RAX
            test R14,R14
            je .L_4283c1

            mov QWORD PTR [RSP+24],RBX
.L_428375:

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RAX+544]
            test RDX,RDX
            je .L_4283b3

            mov EAX,DWORD PTR [RDX+8]
            mov RSI,QWORD PTR [R14+32]
            cmp RAX,RSI
            jne .L_4283ab

            jmp .L_42853b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4283a0:

            mov ECX,DWORD PTR [RAX+8]
            cmp RCX,RSI
            je .L_4283db

            mov RDX,RAX
.L_4283ab:

            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            jne .L_4283a0
.L_4283b3:

            mov R14,QWORD PTR [R14+8]
            test R14,R14
            jne .L_428375

            mov RBX,QWORD PTR [RSP+24]
.L_4283c1:

            lea RAX,QWORD PTR [RIP+.L_447a18]
            mov DWORD PTR [R12+16],655360
            mov QWORD PTR [R12+24],RAX
            jmp .L_427380
.L_4283db:

            mov R15,RDX
.L_4283de:

            mov EBX,DWORD PTR [RAX+12]
            lea EBP,DWORD PTR [RBX+1]
            mov RBX,QWORD PTR [RAX+16]
            mov DWORD PTR [R14+356],EBP
            test RBX,RBX
            je .L_428424

            lea R13,QWORD PTR [R14+152]
.L_4283fb:

            lea RDI,QWORD PTR [RBX+360]
            mov DWORD PTR [RBX+356],EBP
            mov QWORD PTR [RBX+368],0
            mov RSI,R13
            call .L_42e3c0

            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            jne .L_4283fb
.L_428424:

            mov RDI,QWORD PTR [R15]
            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [R15],RAX
            call free@PLT

            jmp .L_4283b3
.L_428437:

            lea RDX,QWORD PTR [RIP+.L_444a18]
.L_42843e:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_42844d:

            mov R15D,4294967266
            jmp .L_427318
.L_428458:

            movzx ECX,DX
            lea RDX,QWORD PTR [RIP+.L_447900]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_427318
.L_42847c:

            test R15D,R15D
            je .L_427b44

            jmp .L_427733
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428490:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+80]
            call .L_426380

            test EAX,EAX
            mov R15D,EAX
            jne .L_427318

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+88]
            call .L_4049d0

            mov R8,QWORD PTR [RSP+88]
            test R8,R8
            js .L_4277ba

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RDI+88]
            cmp RDX,R8
            ja .L_42899a

            xor R8D,R8D
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            call .L_425c30

            mov R14,QWORD PTR [RSP+8]
            mov EBP,EAX
            mov RDI,R12
            mov RSI,QWORD PTR [R14+88]
            call .L_404a20

            mov RAX,QWORD PTR [R14+88]
            add QWORD PTR [R14],RAX
            test EBP,EBP
            je .L_428354

            jmp .L_42844d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428520:

            lea RDX,QWORD PTR [RIP+.L_447dd1]
.L_428527:

            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_42844d
.L_42853b:

            mov R15,QWORD PTR [RSP+16]
            mov RAX,RDX
            jmp .L_4283de
.L_428548:

            lea RDX,QWORD PTR [RIP+.L_447db8]
            jmp .L_428527
.L_428551:

            lea RDI,QWORD PTR [RIP+.L_447a97]
            mov ECX,14
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42870a

            mov DWORD PTR [R14+40],47
            lea RBX,QWORD PTR [RIP+.L_447cec]
            jmp .L_427f95
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428588:

            lea RDI,QWORD PTR [RIP+.L_447b26]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4286bf

            mov DWORD PTR [R14+40],58
            lea RBX,QWORD PTR [RIP+.L_447d06]
            jmp .L_427dcd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4285c0:

            mov DWORD PTR [R14+40],3
            jmp .L_427c18
.L_4285cd:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],9
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4285f0:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],17
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428610:

            mov DWORD PTR [R14+40],5
            jmp .L_427c18
.L_42861d:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],44
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428640:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],34
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_42865b:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],42
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428676:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_4260d0

            test EAX,EAX
            mov R15D,EAX
            je .L_427c18
.L_42868f:

            mov R15D,4294967266
            jmp .L_427a9d
.L_42869a:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_4260d0

            test EAX,EAX
            je .L_427c18

            jmp .L_42868f
.L_4286b2:

            mov DWORD PTR [R14+40],4
            jmp .L_427c18
.L_4286bf:

            lea RSI,QWORD PTR [RIP+.L_447b2f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42873d

            mov DWORD PTR [R14+40],59
            lea RBX,QWORD PTR [RIP+.L_447d4e]
            jmp .L_427dcd
.L_4286e6:

            lea RDX,QWORD PTR [RIP+.L_447dfe]
            or ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_427318
.L_428705:

            call __stack_chk_fail@PLT
.L_42870a:

            lea RSI,QWORD PTR [RIP+.L_447aa5]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428764

            mov DWORD PTR [R14+40],48
            lea RBX,QWORD PTR [RIP+.L_447cf7]
            jmp .L_427f95
.L_428731:

            lea RDX,QWORD PTR [RIP+.L_447948]
            jmp .L_42843e
.L_42873d:

            lea RSI,QWORD PTR [RIP+.L_447b38]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42878b

            mov DWORD PTR [R14+40],60
            lea RBX,QWORD PTR [RIP+.L_447da3]
            jmp .L_427dcd
.L_428764:

            lea RSI,QWORD PTR [RIP+.L_447ab0]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_4287b2

            mov DWORD PTR [R14+40],49
            lea RBX,QWORD PTR [RIP+.L_447cff]
            jmp .L_427f95
.L_42878b:

            lea RSI,QWORD PTR [RIP+.L_447add]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_4287d9

            mov DWORD PTR [R14+40],61
            lea RBX,QWORD PTR [RIP+.L_447d19]
            jmp .L_427dcd
.L_4287b2:

            lea RSI,QWORD PTR [RIP+.L_447abb]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428800

            mov DWORD PTR [R14+40],50
            lea RBX,QWORD PTR [RIP+.L_447d06]
            jmp .L_427f95
.L_4287d9:

            lea RSI,QWORD PTR [RIP+.L_447b44]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428827

            mov DWORD PTR [R14+40],62
            lea RBX,QWORD PTR [RIP+.L_447d24]
            jmp .L_427dcd
.L_428800:

            lea RSI,QWORD PTR [RIP+.L_447ac8]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42884e

            mov DWORD PTR [R14+40],51
            lea RBX,QWORD PTR [RIP+.L_447d10]
            jmp .L_427f95
.L_428827:

            lea RSI,QWORD PTR [RIP+.L_447a90]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428875

            mov DWORD PTR [R14+40],63
            lea RBX,QWORD PTR [RIP+.L_447ce5]
            jmp .L_427dcd
.L_42884e:

            lea RSI,QWORD PTR [RIP+.L_447ad7]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42889c

            mov DWORD PTR [R14+40],52
            lea RBX,QWORD PTR [RIP+.L_447d19]
            jmp .L_427f95
.L_428875:

            lea RSI,QWORD PTR [RIP+.L_447b4f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_4288c3

            mov DWORD PTR [R14+40],64
            lea RBX,QWORD PTR [RIP+.L_447d57]
            jmp .L_427dcd
.L_42889c:

            lea RSI,QWORD PTR [RIP+.L_447ae7]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_4288ea

            mov DWORD PTR [R14+40],53
            lea RBX,QWORD PTR [RIP+.L_447d24]
            jmp .L_427f95
.L_4288c3:

            lea RSI,QWORD PTR [RIP+.L_447b57]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428911

            mov DWORD PTR [R14+40],65
            lea RBX,QWORD PTR [RIP+.L_447d5f]
            jmp .L_427dcd
.L_4288ea:

            lea RSI,QWORD PTR [RIP+.L_447af4]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428938

            mov DWORD PTR [R14+40],54
            lea RBX,QWORD PTR [RIP+.L_447d2c]
            jmp .L_427f95
.L_428911:

            lea RSI,QWORD PTR [RIP+.L_447b63]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428963

            mov DWORD PTR [R14+40],66
            lea RBX,QWORD PTR [RIP+.L_447d6b]
            jmp .L_427dcd
.L_428938:

            lea RSI,QWORD PTR [RIP+.L_447b03]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_427c03

            mov DWORD PTR [R14+40],55
            lea RBX,QWORD PTR [RIP+.L_447d36]
            jmp .L_427f95
.L_428963:

            lea RSI,QWORD PTR [RIP+.L_447b61]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428f24

            mov DWORD PTR [R14+40],67
            lea RBX,QWORD PTR [RIP+.L_447d69]
            jmp .L_427dcd
.L_42898e:

            lea RDX,QWORD PTR [RIP+.L_447920]
            jmp .L_42843e
.L_42899a:

            lea RDX,QWORD PTR [RIP+.L_447bb9]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_432bc0

            jmp .L_427318
.L_4289bb:

            lea RSI,QWORD PTR [RIP+.L_4451fb]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428a19

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],40
.L_4289db:

            test RBX,RBX
            je .L_427c18

            mov RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_447def]
            call strcmp@PLT

            test EAX,EAX
            jne .L_428a14

            mov RDI,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_447df7]
            call strcmp@PLT

            test EAX,EAX
            jne .L_428a14

            mov DWORD PTR [R14+56],1
.L_428a14:

            mov RBX,QWORD PTR [RBX]
            jmp .L_4289db
.L_428a19:

            lea RSI,QWORD PTR [RIP+.L_447a7a]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428afc

            lea RSI,QWORD PTR [RIP+.L_446f91]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_428ae1

            lea RSI,QWORD PTR [RIP+.L_447b12]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_427c03

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],56
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428a82:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,R14
            mov RDI,R12
            call .L_426fb0

            test EAX,EAX
            je .L_427c18

            jmp .L_42868f
.L_428a9f:

            xor EAX,EAX
            mov RDI,RDX
            or RCX,-1

            repne scasb AL,BYTE PTR [RDI]

            xor R8D,R8D
            mov RAX,RCX
            xor ECX,ECX
            not RAX
            lea RDI,QWORD PTR [RAX-1]
            movsx EAX,BYTE PTR [RDX]
            sub EAX,48
.L_428abf:

            cmp EAX,9
            ja .L_428b17

            cmp R8,RDI
            je .L_428b17

            imul RCX,RCX,10
            cdqe 
            add RCX,RAX
            movsx EAX,BYTE PTR [RDX+R8*1+1]
            add R8,1
            sub EAX,48
            jmp .L_428abf
.L_428ae1:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],45
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428afc:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],41
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428b17:

            test ECX,ECX
            mov R8D,ECX
            mov DWORD PTR [RSI+352],ECX
            je .L_4281be

            mov RDX,QWORD PTR [R14+544]
            mov RAX,RDX
.L_428b32:

            test RAX,RAX
            je .L_428c99

            cmp R8D,DWORD PTR [RAX+8]
            je .L_428c84

            mov RAX,QWORD PTR [RAX]
            jmp .L_428b32
.L_428b4a:

            mov DWORD PTR [R14+40],26
            jmp .L_427c18
.L_428b57:

            mov DWORD PTR [R14+40],25
            jmp .L_427c18
.L_428b64:

            mov ESI,176
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_427b9a

            mov R9,QWORD PTR [RSP+96]
            mov QWORD PTR [R14+512],RAX
            test R9,R9
            je .L_428c35

            lea R10,QWORD PTR [RIP+.L_44602a]
            xor EAX,EAX
            jmp .L_428bac
          .byte 0x90
.L_428ba0:

            mov R9,QWORD PTR [R9]
            test R9,R9
            je .L_428c35
.L_428bac:

            mov RSI,QWORD PTR [R9+8]
            mov ECX,3
            mov RDI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_428ba0

            mov RSI,QWORD PTR [R9+16]
            or RCX,-1
            movsx EDX,BYTE PTR [RSI]
            mov RDI,RSI

            repne scasb AL,BYTE PTR [RDI]

            not RCX
            sub EDX,48
            sub RCX,1
            cmp EDX,9
            ja .L_428cf0

            test RCX,RCX
            je .L_428cf0

            lea RDI,QWORD PTR [RSI+RCX*1]
            xor ECX,ECX
            jmp .L_428c05
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428c00:

            cmp RDI,RSI
            je .L_428c1f
.L_428c05:

            lea RCX,QWORD PTR [RCX+RCX*4]
            movsxd RDX,EDX
            add RSI,1
            lea RCX,QWORD PTR [RDX+RCX*2]
            movsx EDX,BYTE PTR [RSI]
            sub EDX,48
            cmp EDX,9
            jbe .L_428c00
.L_428c1f:

            mov QWORD PTR [R8+32],RCX
            jmp .L_428ba0
.L_428c28:

            mov DWORD PTR [R14+40],8
            jmp .L_427c18
.L_428c35:

            mov RAX,QWORD PTR [R14+504]
            lea RDX,QWORD PTR [RAX+384]
            mov RAX,QWORD PTR [RAX+384]
            test RAX,RAX
            je .L_428c71

            mov RCX,QWORD PTR [R8+32]
            cmp QWORD PTR [RAX+32],RCX
            jbe .L_428c66

            jmp .L_428c71
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428c60:

            cmp QWORD PTR [RAX+32],RCX
            ja .L_428c71
.L_428c66:

            mov RDX,RAX
            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_428c60
.L_428c71:

            mov QWORD PTR [R8],RAX
            mov QWORD PTR [RDX],R8
            mov DWORD PTR [R14+40],16
            jmp .L_427c18
.L_428c84:

            mov RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [RSI+8],RDX
            add DWORD PTR [RAX+12],1
            mov QWORD PTR [RAX+16],RSI
            jmp .L_4281be
.L_428c99:

            mov EDI,24
            mov QWORD PTR [RSP+72],RSI
            mov DWORD PTR [RSP+68],R8D
            mov QWORD PTR [RSP+56],RDX
            call malloc@PLT

            test RAX,RAX
            je .L_427a81

            mov RSI,QWORD PTR [RSP+72]
            mov R8D,DWORD PTR [RSP+68]
            mov RDX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSI+8],0
            mov DWORD PTR [RAX+8],R8D
            mov DWORD PTR [RAX+12],1
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [R14+544],RAX
            jmp .L_4281be
.L_428cf0:

            xor ECX,ECX
            jmp .L_428c1f
.L_428cf7:

            mov DWORD PTR [R14+40],36
            jmp .L_427c18
.L_428d04:

            mov DWORD PTR [R14+40],33
            jmp .L_427c18
.L_428d11:

            mov DWORD PTR [R14+40],32
            jmp .L_427c18
.L_428d1e:

            mov DWORD PTR [R14+40],31
            jmp .L_427c18
.L_428d2b:

            mov DWORD PTR [R14+40],30
            jmp .L_427c18
.L_428d38:

            mov DWORD PTR [R14+40],29
            jmp .L_427c18
.L_428d45:

            mov DWORD PTR [R14+40],28
            jmp .L_427c18
.L_428d52:

            mov DWORD PTR [R14+40],27
            jmp .L_427c18
.L_428d5f:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],18
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428d7a:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],23
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428d95:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],22
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428db0:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],21
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428dcb:

            lea RDX,QWORD PTR [RIP+.L_445018]
            jmp .L_42843e
.L_428dd7:

            lea RDX,QWORD PTR [RIP+.L_4479a0]
            jmp .L_42843e
.L_428de3:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],20
            mov RDI,RBX
            call .L_425f80

            mov RCX,QWORD PTR [R14+512]
            test RBX,RBX
            mov DWORD PTR [RCX+64],EAX
            jne .L_427ab0

            jmp .L_427c26
.L_428e10:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],19
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428e2b:

            mov RBX,QWORD PTR [RSP+96]
            xor R15D,R15D
            mov DWORD PTR [R14+40],38
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428e49:

            mov RBX,QWORD PTR [RSP+96]
            xor R15D,R15D
            mov DWORD PTR [R14+40],37
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428e67:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],14
            mov RDI,RBX
            call .L_425ea0

            mov RCX,QWORD PTR [R14+504]
            test RBX,RBX
            mov DWORD PTR [RCX+112],EAX
            jne .L_427ab0

            jmp .L_427c26
.L_428e94:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],13
            mov RDI,RBX
            call .L_425ea0

            mov RCX,QWORD PTR [R14+504]
            test RBX,RBX
            mov DWORD PTR [RCX+72],EAX
            jne .L_427ab0

            jmp .L_427c26
.L_428ec1:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],12
            mov RDI,RBX
            call .L_425f80

            mov RCX,QWORD PTR [R14+504]
            test RBX,RBX
            mov DWORD PTR [RCX+64],EAX
            jne .L_427ab0

            jmp .L_427c26
.L_428eee:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],11
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428f09:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],10
            test RBX,RBX
            jne .L_427ab0

            jmp .L_427c26
.L_428f24:

            lea RSI,QWORD PTR [RIP+.L_447b6d]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428f4b

            mov DWORD PTR [R14+40],68
            lea RBX,QWORD PTR [RIP+.L_447d74]
            jmp .L_427dcd
.L_428f4b:

            lea RSI,QWORD PTR [RIP+.L_447b77]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428f72

            mov DWORD PTR [R14+40],69
            lea RBX,QWORD PTR [RIP+.L_447d7c]
            jmp .L_427dcd
.L_428f72:

            lea RSI,QWORD PTR [RIP+.L_447b7d]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428f99

            mov DWORD PTR [R14+40],70
            lea RBX,QWORD PTR [RIP+.L_447d82]
            jmp .L_427dcd
.L_428f99:

            lea RSI,QWORD PTR [RIP+.L_447b89]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428fc0

            mov DWORD PTR [R14+40],71
            lea RBX,QWORD PTR [RIP+.L_447d8a]
            jmp .L_427dcd
.L_428fc0:

            lea RSI,QWORD PTR [RIP+.L_447b90]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_428fe7

            mov DWORD PTR [R14+40],72
            lea RBX,QWORD PTR [RIP+.L_447d91]
            jmp .L_427dcd
.L_428fe7:

            lea RSI,QWORD PTR [RIP+.L_447b9a]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42900e

            mov DWORD PTR [R14+40],73
            lea RBX,QWORD PTR [RIP+.L_447d99]
            jmp .L_427dcd
.L_42900e:

            lea RSI,QWORD PTR [RIP+.L_447ba1]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_429035

            mov DWORD PTR [R14+40],74
            lea RBX,QWORD PTR [RIP+.L_447da0]
            jmp .L_427dcd
.L_429035:

            lea RSI,QWORD PTR [RIP+.L_447ba9]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42905c

            mov DWORD PTR [R14+40],75
            lea RBX,QWORD PTR [RIP+.L_447da8]
            jmp .L_427dcd
.L_42905c:

            lea RSI,QWORD PTR [RIP+.L_447bb0]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_427c03

            mov DWORD PTR [R14+40],76
            lea RBX,QWORD PTR [RIP+.L_447daf]
            jmp .L_427dcd
.L_429087:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429090:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4479f8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_436df0

            cmp EAX,-30
            je .L_429124

            mov ESI,688
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_42912b

            lea RAX,QWORD PTR [RIP+.L_4241a0]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_427220]
            lea RCX,QWORD PTR [RIP+.L_424370]
            lea RDX,QWORD PTR [RIP+.L_447a18]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_424310]
            push 0
            xor R8D,R8D
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_425cb0]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_429124

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_429124:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_42912b:

            lea RDX,QWORD PTR [RIP+.L_447e1a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_429124
.L_429148:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429150:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_429154:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429160:

            xor EAX,EAX
            ret 
.L_429163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429170:

            test RDI,RDI
            je .L_429190

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_429190

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_429190

            mov EAX,DWORD PTR [RAX+48]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429190:

            mov EAX,4294967295
            ret 
.L_429196:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4291a0:

            mov EAX,3
            ret 
.L_4291a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4291b0:

            mov RAX,QWORD PTR [RSI+32]
            cmp QWORD PTR [RDI+32],RAX
            jg .L_4291c8

            setl AL
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4291c8:

            mov EAX,4294967295
            ret 
.L_4291ce:

            nop
            nop
.L_4291d0:

            mov EAX,1
            ret 
.L_4291d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4291e0:

            mov RAX,QWORD PTR [RDI+2472]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RAX+96],0
            xor EAX,EAX
            ret 
.L_4291f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429200:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_42920d:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            cmp BYTE PTR [RBP+288],0
            jne .L_4292e8
.L_429224:

            mov RDI,QWORD PTR [RBP+160]
            call free@PLT

            mov RBX,QWORD PTR [RBP+56]
            test RBX,RBX
            je .L_42925d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429240:

            mov R12,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [RBX+72]
            call .L_42e240

            mov RDI,RBX
            mov RBX,R12
            call free@PLT

            test R12,R12
            jne .L_429240
.L_42925d:

            mov RDI,QWORD PTR [RBP+336]
            call free@PLT

            cmp BYTE PTR [RBP+480],0
            je .L_42927f

            lea RDI,QWORD PTR [RBP+392]
            call QWORD PTR [RIP+.L_65ac58]
.L_42927f:

            cmp BYTE PTR [RBP+496],0
            je .L_429295

            lea RDI,QWORD PTR [RBP+488]
            call QWORD PTR [RIP+.L_65ad38]
.L_429295:

            mov RDI,QWORD PTR [RBP+528]
            call free@PLT

            mov RDI,QWORD PTR [RBP+536]
            call free@PLT

            mov RDI,QWORD PTR [RBP+544]
            call free@PLT

            mov RDI,RBP
            call .L_42e240

            mov RDI,RBP
            call free@PLT

            mov RAX,QWORD PTR [R13+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_4292db:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4292e8:

            lea RDI,QWORD PTR [RBP+176]
            call inflateEnd@PLT

            jmp .L_429224
.L_4292f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429300:

            sub RSP,8
            xor EDX,EDX
            mov ESI,4
            call .L_4049d0

            test RAX,RAX
            je .L_42936e

            mov RDX,RAX
            xor EAX,EAX
            cmp BYTE PTR [RDX],80
            je .L_429328
.L_42931f:

            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429328:

            cmp BYTE PTR [RDX+1],75
            jne .L_42931f

            movzx ECX,BYTE PTR [RDX+2]
            cmp CL,1
            je .L_429360

            cmp CL,3
            je .L_429350

            cmp CL,5
            jne .L_429375
.L_429341:

            cmp BYTE PTR [RDX+3],6
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42931f
          .byte 0x90
.L_429350:

            cmp BYTE PTR [RDX+3],4
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42931f
          .byte 0x66
          .byte 0x90
.L_429360:

            cmp BYTE PTR [RDX+3],2
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42931f
.L_42936e:

            mov EAX,4294967295
            jmp .L_42931f
.L_429375:

            cmp CL,6
            je .L_429341

            cmp CL,7
            jne .L_42938d

            cmp BYTE PTR [RDX+3],8
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42931f
.L_42938d:

            cmp CL,48
            jne .L_42931f

            cmp BYTE PTR [RDX+3],48
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42931f
.L_4293a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4293b0:

            push R13
            push R12
            xor EDX,EDX
            push RBP
            push RBX
            mov ESI,2
            mov RBX,RDI
            sub RSP,24
.L_4293c4:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            call .L_4049d0

            test RAX,RAX
            je .L_4294f0

            movzx EAX,WORD PTR [RAX]
            mov R12D,DWORD PTR [RBP+500]
            mov ESI,2
            mov RDI,RBX
            mov DWORD PTR [RBP+500],EAX
            call .L_404a20

            mov ESI,DWORD PTR [RBP+500]
            cmp ESI,R12D
            ja .L_429520
.L_429408:

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov RSI,RAX
            je .L_4294f0

            mov RDI,QWORD PTR [RBP+528]
            mov EDX,DWORD PTR [RBP+500]
            test RDI,RDI
            je .L_429548
.L_429434:

            call memcpy@PLT

            mov ESI,DWORD PTR [RBP+500]
            mov RDI,RBX
            call .L_404a20

            xor EDX,EDX
            mov ESI,14
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_4294f0

            mov R12D,DWORD PTR [RAX]
            lea EDX,DWORD PTR [R12-16]
            cmp EDX,262128
            ja .L_429598

            movzx ECX,WORD PTR [RAX+4]
            lea RDX,QWORD PTR [RIP+.L_448560]
            cmp CX,3
            jne .L_4294c8

            movzx ECX,WORD PTR [RAX+6]
            cmp CX,26128
            mov DWORD PTR [RBP+504],ECX
            ja .L_4295a8

            cmp CX,26126
            jae .L_4295c5

            cmp CX,26113
            jb .L_4294c1

            cmp CX,26115
            jbe .L_4295c5

            cmp CX,26121
            je .L_4295c5
.L_4294c1:

            lea RDX,QWORD PTR [RIP+.L_448590]
.L_4294c8:

            mov RDI,RBX
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            add RSP,24
.L_4294db:

            mov EAX,4294967271
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4294f0:

            lea RDX,QWORD PTR [RIP+.L_448b7b]
.L_4294f7:

            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_432bc0

            mov EAX,4294967266
.L_42950b:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429520:

            mov RDI,QWORD PTR [RBP+528]
            call free@PLT

            mov QWORD PTR [RBP+528],0
            mov ESI,DWORD PTR [RBP+500]
            jmp .L_429408
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429548:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+8],RAX
            call malloc@PLT

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP+528],RAX
            mov RDX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+8]
            jne .L_429434
.L_429575:

            lea RDX,QWORD PTR [RIP+.L_448bab]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBX
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42950b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429598:

            lea RDX,QWORD PTR [RIP+.L_448b93]
            jmp .L_4294f7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4295a8:

            cmp CX,26401
            ja .L_4297d0

            cmp CX,26400
            jae .L_4295c5

            cmp CX,26370
            jne .L_4294c1
.L_4295c5:

            movzx EDX,WORD PTR [RAX+8]
            mov DWORD PTR [RBP+508],EDX
            movzx ECX,WORD PTR [RAX+10]
            mov EDX,ECX
            mov DWORD PTR [RBP+512],ECX
            and DX,61440
            sub EDX,1
            cmp DX,2
            ja .L_4297c0

            test CX,45056
            je .L_4297c0

            movzx EAX,WORD PTR [RAX+12]
            mov R13D,DWORD PTR [RBP+516]
            mov ESI,14
            mov RDI,RBX
            mov DWORD PTR [RBP+516],EAX
            call .L_404a20

            mov EAX,DWORD PTR [RBP+516]
            test AL,15
            jne .L_429598

            lea EDX,DWORD PTR [RAX+16]
            cmp EDX,R12D
            ja .L_429598

            cmp EAX,-16
            je .L_429598

            cmp EAX,R13D
            ja .L_4297e0
.L_429642:

            mov ESI,EAX
            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov RSI,RAX
            je .L_4294f0

            mov RDI,QWORD PTR [RBP+536]
            mov EDX,DWORD PTR [RBP+516]
            test RDI,RDI
            je .L_429802
.L_429670:

            call memcpy@PLT

            mov ESI,DWORD PTR [RBP+516]
            mov RDI,RBX
            call .L_404a20

            xor EDX,EDX
            mov ESI,4
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_4294f0

            mov EAX,DWORD PTR [RAX]
            test EAX,EAX
            jne .L_429598

            mov ESI,4
            mov RDI,RBX
            call .L_404a20

            xor EDX,EDX
            mov ESI,2
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_4294f0

            movzx EAX,WORD PTR [RAX]
            mov R13D,DWORD PTR [RBP+520]
            mov ESI,2
            mov RDI,RBX
            mov DWORD PTR [RBP+520],EAX
            call .L_404a20

            mov EAX,DWORD PTR [RBP+520]
            test AL,15
            jne .L_429598

            mov EDX,DWORD PTR [RBP+516]
            add EDX,EAX
            lea ECX,DWORD PTR [RDX+16]
            cmp ECX,R12D
            ja .L_429598

            cmp EDX,-17
            ja .L_429598

            cmp EAX,R13D
            ja .L_429851
.L_42971b:

            mov ESI,DWORD PTR [RBP+520]
            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov R13,RAX
            je .L_4294f0

            cmp QWORD PTR [RBP+544],0
            mov R12D,DWORD PTR [RBP+520]
            je .L_429834
.L_42974c:

            mov RDI,QWORD PTR [RBP+544]
            mov RDX,R12
            mov RSI,R13
            call memcpy@PLT

            mov ESI,DWORD PTR [RBP+520]
            mov RDI,RBX
            call .L_404a20

            xor EDX,EDX
            mov ESI,4
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_4294f0

            mov EAX,DWORD PTR [RAX]
            mov ESI,4
            mov RDI,RBX
            mov DWORD PTR [RBP+524],EAX
            call .L_404a20

            lea RDX,QWORD PTR [RIP+.L_448b5d]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_42950b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4297c0:

            lea RDX,QWORD PTR [RIP+.L_448b41]
            jmp .L_4294c8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4297d0:

            cmp CX,26625
            je .L_4295c5

            jmp .L_4294c1
.L_4297e0:

            mov RDI,QWORD PTR [RBP+536]
            call free@PLT

            mov QWORD PTR [RBP+536],0
            mov EAX,DWORD PTR [RBP+516]
            jmp .L_429642
.L_429802:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+8],RAX
            call malloc@PLT

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP+536],RAX
            mov RDX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+8]
            jne .L_429670

            jmp .L_429575
.L_429834:

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+544],RAX
            jne .L_42974c

            jmp .L_429575
.L_429851:

            mov RDI,QWORD PTR [RBP+544]
            call free@PLT

            mov QWORD PTR [RBP+544],0
            jmp .L_42971b
.L_42986d:

            nop
            nop
            nop
.L_429870:

            push RBX
            mov RBX,RDI
            mov EDX,1
            sub RSP,32
.L_42987d:

            mov EDI,DWORD PTR [RDI]
            mov BYTE PTR [RSP+12],SIL
            lea RSI,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            not EDI
            call crc32@PLT

            not EAX
            mov EDI,DWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RSP+23]
            mov DWORD PTR [RBX],EAX
            movzx EAX,AL
            add EAX,DWORD PTR [RBX+4]
            mov EDX,1
            not EDI
            imul EAX,EAX,134775813
            add EAX,1
            mov DWORD PTR [RBX+4],EAX
            shr EAX,24
            mov BYTE PTR [RSP+23],AL
            call crc32@PLT

            not EAX
            mov DWORD PTR [RBX+8],EAX
            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4298ec

            add RSP,32
.L_4298ea:

            pop RBX
            ret 
.L_4298ec:

            call __stack_chk_fail@PLT
.L_4298f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429900:

            cmp RDX,R8
            cmovb R8D,EDX
            test R8D,R8D
            je .L_429970

            lea EAX,DWORD PTR [R8-1]
            push R13
            push R12
            push RBP
            push RBX
            mov R13,RDI
            lea RBX,QWORD PTR [RSI+RAX*1+1]
            mov RBP,RSI
            mov R12,RCX
            sub RSP,8
.L_429928:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429930:

            mov EAX,DWORD PTR [R13+8]
            mov RDI,R13
            add RBP,1
            add R12,1
            or EAX,2
            mov ESI,EAX
            xor ESI,1
            imul ESI,EAX
            shr ESI,8
            xor SIL,BYTE PTR [RBP-1]
            mov BYTE PTR [R12-1],SIL
            movzx ESI,SIL
            call .L_429870

            cmp RBX,RBP
            jne .L_429930

            add RSP,8
.L_429968:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_429970:

            ret 
.L_429972:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429980:

            jmp crc32@PLT
.L_429985:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429990:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_429999:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RDI,QWORD PTR [RAX]
            cmp BYTE PTR [RDI+496],0
            je .L_429a90

            mov RBX,RSI
            add RDI,488
            mov QWORD PTR [RSP+8],20
            lea RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+16]
            call QWORD PTR [RIP+.L_65ad30]

            test RBX,RBX
            je .L_429a50
.L_4299e8:

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+16],RAX
            je .L_429a40
.L_4299f2:

            mov EBX,1
.L_4299f7:

            mov ESI,10
            mov RDI,RBP
            call .L_404a20

            test EBX,EBX
            je .L_429a23

            lea RDX,QWORD PTR [RIP+.L_448bc8]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967276
            call .L_432bc0
.L_429a23:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_429a94

            add RSP,56
.L_429a39:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429a40:

            movzx EAX,WORD PTR [RBX+8]
            xor EBX,EBX
            cmp WORD PTR [RSP+24],AX
            jne .L_4299f2

            jmp .L_4299f7
          .byte 0x90
.L_429a50:

            xor EDX,EDX
            mov ESI,10
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            mov RBX,RAX
            jne .L_4299e8

            lea RDX,QWORD PTR [RIP+.L_448b7b]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_429a23
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429a90:

            xor EBX,EBX
            jmp .L_429a23
.L_429a94:

            call __stack_chk_fail@PLT
.L_429a99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429aa0:

            push R12
            push RBP
            mov R8,RDI
            push RBX
.L_429aa7:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_444ee7]
            mov RAX,RSI
            mov RBP,QWORD PTR [RCX]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_429bb0

            lea RDI,QWORD PTR [RIP+.L_444c87]
            mov ECX,11
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_429b50

            test RDX,RDX
            mov R12,RDX
            mov RDI,R8
            je .L_429c10

            cmp BYTE PTR [RDX],0
            je .L_429c10

            xor EDX,EDX
            mov RSI,R12
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [RBP+296],RAX
            je .L_429c37

            lea RDI,QWORD PTR [RIP+.L_447012]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_429b45

            mov QWORD PTR [RBP+312],RAX
.L_429b45:

            mov EAX,EBX
            pop RBX
.L_429b48:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429b50:

            lea RDI,QWORD PTR [RIP+.L_448be4]
            mov ECX,12
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_429bc8

            lea RDI,QWORD PTR [RIP+.L_446cc6]
            mov ECX,8
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_429c2d

            xor EAX,EAX
            test RDX,RDX
            je .L_429b9f

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_429b9f:

            mov DWORD PTR [RBP+324],EAX
            mov EAX,EBX
            pop RBX
.L_429ba8:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429bb0:

            xor EAX,EAX
            test RDX,RDX
            setne AL
            mov DWORD PTR [RBP+320],EAX
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429bc8:

            test RDX,RDX
            je .L_429bd2

            cmp BYTE PTR [RDX],0
            jne .L_429bf0
.L_429bd2:

            lea RAX,QWORD PTR [RIP+.L_429980]
            mov BYTE PTR [RBP+152],0
            mov QWORD PTR [RBP+144],RAX
            jmp .L_429b45
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429bf0:

            lea RAX,QWORD PTR [RIP+.L_429160]
            mov BYTE PTR [RBP+152],1
            mov QWORD PTR [RBP+144],RAX
            jmp .L_429b45
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429c10:

            lea RDX,QWORD PTR [RIP+.L_4485b8]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_432bc0

            jmp .L_429b45
.L_429c2d:

            mov EBX,4294967276
            jmp .L_429b45
.L_429c37:

            mov EBX,4294967266
            jmp .L_429b45
.L_429c41:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c50:

            mov RAX,RSI
            mov RSI,QWORD PTR [RDI+72]
            mov RDI,RAX
            jmp strcmp@PLT
.L_429c5f:

            nop
.L_429c60:

            mov RAX,QWORD PTR [RDI+72]
            mov RDI,QWORD PTR [RSI+72]
            mov RSI,RAX
            jmp strcmp@PLT
.L_429c70:

            push RBP
            push RBX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+336]
            test RAX,RAX
            je .L_429ca0
.L_429c8c:

            mov QWORD PTR [RBX+344],RAX
            xor EAX,EAX
.L_429c95:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429ca0:

            mov RBP,RDI
            mov QWORD PTR [RBX+352],262144
            mov EDI,262144
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+336],RAX
            jne .L_429c8c

            lea RDX,QWORD PTR [RIP+.L_448bab]
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_429c95
.L_429cdf:

            nop
.L_429ce0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,136
.L_429cf1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RAX,QWORD PTR [RAX]
            mov RDX,RAX
            mov QWORD PTR [RSP+16],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDX+480],0
            jne .L_429d70

            cmp BYTE PTR [RDX+496],0
            jne .L_429d70

            mov RAX,QWORD PTR [RDX+104]
            mov R12,RDI
            mov EAX,DWORD PTR [RAX+136]
            cmp EAX,2
            je .L_429fc0

            cmp EAX,3
            je .L_429da0

            cmp EAX,1
            je .L_429fa0
.L_429d4b:

            lea RDX,QWORD PTR [RIP+.L_448b93]
.L_429d52:

            xor EAX,EAX
            mov ESI,84
            mov RDI,R12
            call .L_432bc0

            mov EAX,4294967266
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429d70:

            mov RSI,QWORD PTR [RSP+120]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42a007

            add RSP,136
.L_429d8b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429da0:

            mov QWORD PTR [RSP+40],18
            mov R14D,16
            mov QWORD PTR [RSP+32],32
.L_429db8:

            mov RSI,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R13,RAX
            je .L_429ffb

            mov RAX,QWORD PTR [RSP+32]
            xor EBP,EBP
            lea RBX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RAX+RAX*1+2]
            lea RCX,QWORD PTR [RAX-2]
            mov QWORD PTR [RSP],RAX
            sub RAX,1
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+8],RCX
            jmp .L_429e0f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429e00:

            cmp EBP,10001
            je .L_429fdd

            add EBP,1
.L_429e0f:

            mov RDI,R12
            call .L_43d890

            test RAX,RAX
            mov R15,RAX
            je .L_429f60

            pxor XMM0,XMM0
            xor EAX,EAX
            mov RDI,R15
            mov WORD PTR [RBX+64],AX
            movaps XMMWORD PTR [RBX],XMM0
            movaps XMMWORD PTR [RBX+16],XMM0
            movaps XMMWORD PTR [RBX+32],XMM0
            movaps XMMWORD PTR [RBX+48],XMM0
            call strlen@PLT

            sub RSP,8
.L_429e48:

            mov RCX,R14
            mov RDX,R13
            push QWORD PTR [RSP+8]
            mov R9,RBX
            mov R8D,1000
            mov RSI,RAX
            mov RDI,R15
            call QWORD PTR [RIP+.L_65ac40]

            test EAX,EAX
            pop RDX
            pop RCX
            jne .L_429f90

            lea RAX,QWORD PTR [R13+R14*1]
            mov RCX,QWORD PTR [RSP+8]
            movzx ESI,BYTE PTR [RAX]
            cmp BYTE PTR [RSP+RCX*1+48],SIL
            jne .L_429e00

            mov RCX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+1]
            cmp BYTE PTR [RSP+RCX*1+48],AL
            jne .L_429e00

            mov R13,QWORD PTR [RSP+16]
            mov R15,QWORD PTR [RSP+32]
            mov RSI,RBX
            lea RBP,QWORD PTR [R13+392]
            mov RDX,R15
            mov RDI,RBP
            call QWORD PTR [RIP+.L_65ac48]

            test EAX,EAX
            jne .L_429f90

            mov RDX,R15
            lea RSI,QWORD PTR [RBX+R15*1]
            lea RDI,QWORD PTR [R13+488]
            call QWORD PTR [RIP+.L_65ad20]

            test EAX,EAX
            jne .L_429fe6

            mov RBX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+40]
            mov RDI,R12
            mov BYTE PTR [RBX+496],1
            mov BYTE PTR [RBX+480],1
            call .L_404a20

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP],RAX
            sub RAX,12
            sub RAX,R14
            test BYTE PTR [RDX+126],8
            mov QWORD PTR [RBX+112],RAX
            jne .L_429f26

            test RAX,RAX
            js .L_429d4b
.L_429f26:

            mov RCX,QWORD PTR [RSP+16]
            mov RDI,R12
            mov RAX,QWORD PTR [RCX+120]
            mov QWORD PTR [RCX+360],0
            lea RAX,QWORD PTR [R14+RAX*1+12]
            mov QWORD PTR [RCX+120],RAX
            movzx EAX,BYTE PTR [RDX+140]
            mov BYTE PTR [RDX+128],AL
            call .L_429c70

            jmp .L_429d70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429f60:

            lea RDX,QWORD PTR [RIP+.L_4485f0]
            lea RAX,QWORD PTR [RIP+.L_448bf0]
            test EBP,EBP
            cmovne RDX,RAX
.L_429f74:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R12
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_429d70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429f90:

            lea RDX,QWORD PTR [RIP+.L_448618]
            jmp .L_429f74
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429fa0:

            mov QWORD PTR [RSP+40],10
            mov R14D,8
            mov QWORD PTR [RSP+32],16
            jmp .L_429db8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429fc0:

            mov QWORD PTR [RSP+40],14
            mov R14D,12
            mov QWORD PTR [RSP+32],24
            jmp .L_429db8
.L_429fdd:

            lea RDX,QWORD PTR [RIP+.L_448650]
            jmp .L_429f74
.L_429fe6:

            mov RDI,RBP
            call QWORD PTR [RIP+.L_65ac58]

            lea RDX,QWORD PTR [RIP+.L_448670]
            jmp .L_429f74
.L_429ffb:

            lea RDX,QWORD PTR [RIP+.L_448b7b]
            jmp .L_429d52
.L_42a007:

            call __stack_chk_fail@PLT
.L_42a00c:

            nop
            nop
            nop
            nop
.L_42a010:

            sub RSP,72
.L_42a014:

            movzx EDX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+2]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+1]
            pxor XMM0,XMM0
            movups XMMWORD PTR [RSP+24],XMM0
            shl EAX,8
            mov DWORD PTR [RSP+32],4294967295
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+3]
            mov RDI,RSP
            movups XMMWORD PTR [RDI+40],XMM0
            shl EDX,8
            add EDX,ECX
            mov ECX,EDX
            sar ECX,9
            add ECX,80
            mov DWORD PTR [RSP+20],ECX
            mov ECX,EDX
            and EDX,31
            mov DWORD PTR [RSP+12],EDX
            mov EDX,EAX
            sar ECX,5
            sar EDX,11
            and ECX,15
            mov DWORD PTR [RSP+8],EDX
            mov EDX,EAX
            add EAX,EAX
            sar EDX,5
            sub ECX,1
            and EAX,62
            and EDX,63
            mov DWORD PTR [RSP+16],ECX
            mov DWORD PTR [RSP],EAX
            mov DWORD PTR [RSP+4],EDX
            call mktime@PLT

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42a0ae

            add RSP,72
.L_42a0ad:

            ret 
.L_42a0ae:

            call __stack_chk_fail@PLT
.L_42a0b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a0c0:

            xor EAX,EAX
            cmp BYTE PTR [RSI+153],0
            jne .L_42a130

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            lea RDI,QWORD PTR [RSI+176]
            sub RSP,8
            cmp BYTE PTR [RSI+288],0
            jne .L_42a120

            lea RDX,QWORD PTR [RIP+.L_443a68]
            mov ECX,112
            mov ESI,4294967281
            call inflateInit2_@PLT
.L_42a0fd:

            test EAX,EAX
            jne .L_42a132

            mov BYTE PTR [RBX+288],1
            mov BYTE PTR [RBX+153],1
.L_42a10f:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a120:

            call inflateReset@PLT

            jmp .L_42a0fd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a130:

            ret 
.L_42a132:

            lea RDX,QWORD PTR [RIP+.L_448690]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42a10f
.L_42a14f:

            nop
.L_42a150:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42a15a:

            mov RAX,QWORD PTR [RDI+2472]
            cmp ESI,32
            mov RBP,QWORD PTR [RAX]
            jg .L_42a280

            xor ESI,ESI
            mov EDX,2
            mov RBX,RDI
            call .L_404dc0

            test RAX,RAX
            jle .L_42a200

            cmp RAX,16384
            mov EDX,16384
            mov RDI,RBX
            cmovle RDX,RAX
            mov ESI,EDX
            mov R12,RDX
            mov EDX,2
            neg ESI
            movsxd RSI,ESI
            call .L_404dc0

            test RAX,RAX
            mov R13,RAX
            js .L_42a200

            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_42a200

            lea EDX,DWORD PTR [R12-22]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a1d0:

            test EDX,EDX
            jle .L_42a200
.L_42a1d4:

            movsxd RDI,EDX
            lea RSI,QWORD PTR [RAX+RDI*1]
            movzx ECX,BYTE PTR [RSI]
            cmp CL,6
            je .L_42a228

            jle .L_42a210

            cmp CL,75
            je .L_42a220

            cmp CL,80
            jne .L_42a1f7

            cmp DWORD PTR [RSI],101010256
            je .L_42a230
.L_42a1f7:

            sub EDX,4
            test EDX,EDX
            jg .L_42a1d4

            nop
            nop
.L_42a200:

            xor EAX,EAX
.L_42a202:

            add RSP,8
.L_42a206:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a210:

            cmp CL,5
            jne .L_42a1f7

            sub EDX,2
            jmp .L_42a1d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a220:

            sub EDX,1
            jmp .L_42a1d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a228:

            sub EDX,3
            jmp .L_42a1d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a230:

            cmp WORD PTR [RSI+4],0
            jne .L_42a1f7

            cmp WORD PTR [RSI+6],0
            jne .L_42a1f7

            movzx ECX,WORD PTR [RSI+8]
            cmp WORD PTR [RSI+10],CX
            jne .L_42a1f7

            mov ECX,DWORD PTR [RSI+16]
            lea R8,QWORD PTR [RDI+R13*1]
            mov R9D,ECX
            add R9D,DWORD PTR [RSI+12]
            cmp R8,R9
            jl .L_42a1f7

            cmp EDX,19
            mov QWORD PTR [RBP+24],RCX
            jle .L_42a271

            lea RAX,QWORD PTR [RAX+RDI*1-20]
            cmp DWORD PTR [RAX],117853008
            je .L_42a28a
.L_42a271:

            mov EAX,32
            jmp .L_42a202
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a280:

            mov EAX,4294967295
            jmp .L_42a202
.L_42a28a:

            mov EDX,DWORD PTR [RAX+4]
            test EDX,EDX
            jne .L_42a271

            cmp DWORD PTR [RAX+16],1
            jne .L_42a271

            lea RDI,QWORD PTR [RAX+8]
            call .L_429150

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBX
            call .L_404dc0

            test RAX,RAX
            js .L_42a271

            xor EDX,EDX
            mov ESI,56
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_42a271

            lea RDI,QWORD PTR [RAX+4]
            call .L_429150

            lea RSI,QWORD PTR [RAX+12]
            sub RAX,44
            cmp RAX,16328
            ja .L_42a271

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            mov RDX,RAX
            je .L_42a271

            cmp DWORD PTR [RAX+16],0
            jne .L_42a271

            cmp DWORD PTR [RAX+20],0
            jne .L_42a271

            lea RDI,QWORD PTR [RAX+24]
            call .L_429150

            lea RDI,QWORD PTR [RDX+32]
            mov RCX,RAX
            call .L_429150

            cmp RCX,RAX
            jne .L_42a271

            lea RDI,QWORD PTR [RDX+48]
            call .L_429150

            mov QWORD PTR [RBP+24],RAX
            jmp .L_42a271
.L_42a335:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a340:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42a34e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            xor EAX,EAX
            cmp BYTE PTR [R12+388],0
            jne .L_42a4a2

            mov RAX,QWORD PTR [R12+104]
            mov R14,RDI
            test BYTE PTR [RAX+126],8
            jne .L_42a396

            mov RCX,QWORD PTR [R12+112]
            cmp RCX,11
            jle .L_42a514
.L_42a396:

            xor EDX,EDX
            mov ESI,12
            mov RDI,R14
            call .L_4049d0

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_42a531

            lea RAX,QWORD PTR [RSP+28]
            mov RDI,R14
            xor R13D,R13D
            lea RBP,QWORD PTR [R12+376]
            mov QWORD PTR [RSP+8],RAX
            call .L_43d890

            test RAX,RAX
            mov R15,RAX
            je .L_42a479

            nop
            nop
            nop
            nop
            nop
.L_42a3e0:

            mov RDI,RAX
            call strlen@PLT

            movabs RCX,2541551403134113400
            test RAX,RAX
            mov DWORD PTR [R12+384],878082192
            mov QWORD PTR [R12+376],RCX
            je .L_42a426

            lea RBX,QWORD PTR [R15+RAX*1]
            nop
.L_42a410:

            add R15,1
            movzx ESI,BYTE PTR [R15-1]
            mov RDI,RBP
            call .L_429870

            cmp R15,RBX
            jne .L_42a410
.L_42a426:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            mov EDX,12
            mov R8D,12
            mov RDI,RBP
            call .L_429900

            mov RAX,QWORD PTR [R12+104]
            movzx EDX,BYTE PTR [RSP+39]
            cmp BYTE PTR [RAX+131],DL
            je .L_42a4c5

            cmp R13D,10001
            je .L_42a508

            mov RDI,R14
            add R13D,1
            call .L_43d890

            test RAX,RAX
            mov R15,RAX
            jne .L_42a3e0
.L_42a479:

            lea RDX,QWORD PTR [RIP+.L_448bf0]
            lea RAX,QWORD PTR [RIP+.L_4485f0]
            test R13D,R13D
            cmove RDX,RAX
.L_42a48e:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967271
.L_42a4a2:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42a54f

            add RSP,56
.L_42a4ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a4c5:

            mov ESI,12
            mov RDI,R14
            call .L_404a20

            mov RAX,QWORD PTR [R12+104]
            mov BYTE PTR [R12+388],1
            test BYTE PTR [RAX+126],8
            jne .L_42a4ec

            sub QWORD PTR [R12+112],12
.L_42a4ec:

            add QWORD PTR [R12+120],12
            mov QWORD PTR [R12+360],0
            mov RDI,R14
            call .L_429c70

            jmp .L_42a4a2
.L_42a508:

            lea RDX,QWORD PTR [RIP+.L_448650]
            jmp .L_42a48e
.L_42a514:

            lea RDX,QWORD PTR [RIP+.L_4486b8]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42a4a2
.L_42a531:

            lea RDX,QWORD PTR [RIP+.L_448b7b]
            mov ESI,84
            mov RDI,R14
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42a4a2
.L_42a54f:

            call __stack_chk_fail@PLT
.L_42a554:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a560:

            mov EAX,3
            ret 
.L_42a566:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a570:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42a57a:

            movzx EBP,WORD PTR [RSI+2]
            movzx R9D,WORD PTR [RSI]
            lea EAX,DWORD PTR [RBP+4]
            cmp RDX,RAX
            jb .L_42a900

            lea R8,QWORD PTR [RDX-4]
            mov EBX,EBP
            mov EAX,4
            xor R11D,R11D
            mov R12D,4294967295
            jmp .L_42a5f9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a5a8:

            cmp R9W,21589
            je .L_42a828

            cmp R9W,22613
            je .L_42a7e0

            cmp R9W,1
            je .L_42a7a8
.L_42a5cb:

            mov R9D,EBP
            nop
            nop
.L_42a5d0:

            add EAX,R9D
            cmp RAX,R8
            mov R11,RAX
            ja .L_42a658
.L_42a5db:

            movzx EBP,WORD PTR [RSI+RAX*1+2]
            movzx R9D,WORD PTR [RSI+RAX*1]
            lea EAX,DWORD PTR [R11+4]
            lea R10D,DWORD PTR [RBP+RAX*1]
            mov EBX,EBP
            cmp R10,RDX
            ja .L_42a905
.L_42a5f9:

            cmp R9W,27768
            je .L_42a730

            jbe .L_42a5a8

            cmp R9W,30837
            je .L_42a6c8

            cmp R9W,39169
            je .L_42a670

            cmp R9W,30805
            jne .L_42a5cb

            cmp BX,1
            mov R9D,EBP
            jbe .L_42a5d0

            mov R10D,EAX
            cmp BX,3
            movzx R11D,WORD PTR [RSI+R10*1]
            mov QWORD PTR [RCX+64],R11
            jbe .L_42a5d0

            movzx R10D,WORD PTR [RSI+R10*1+2]
            add EAX,R9D
            cmp RAX,R8
            mov R11,RAX
            mov QWORD PTR [RCX+56],R10
            jbe .L_42a5db

            nop
            nop
            nop
            nop
            nop
.L_42a658:

            cmp RAX,RDX
            jne .L_42aacd

            xor EAX,EAX
.L_42a663:

            add RSP,8
.L_42a667:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_42a670:

            lea R10D,DWORD PTR [R11+6]
            mov R9D,EBP
            cmp BYTE PTR [RSI+R10*1],65
            jne .L_42a5d0

            lea R10D,DWORD PTR [R11+7]
            cmp BYTE PTR [RSI+R10*1],69
            jne .L_42a5d0

            mov R10D,EAX
            movzx R10D,WORD PTR [RSI+R10*1]
            mov DWORD PTR [RCX+132],R10D
            lea R10D,DWORD PTR [R11+8]
            movsx R10D,BYTE PTR [RSI+R10*1]
            mov DWORD PTR [RCX+136],R10D
            lea R10D,DWORD PTR [R11+9]
            movzx R10D,BYTE PTR [RSI+R10*1]
            mov BYTE PTR [RCX+140],R10B
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a6c8:

            xor R9D,R9D
            test BX,BX
            je .L_42a5d0

            mov R10D,EAX
            mov R9D,EBP
            cmp BYTE PTR [RSI+R10*1],1
            jne .L_42a5d0

            cmp BX,3
            jbe .L_42aa48

            add R11D,5
            movzx R11D,BYTE PTR [RSI+R11*1]
            cmp R11D,2
            je .L_42aaa0

            cmp R11D,4
            lea R13D,DWORD PTR [R11+4]
            jne .L_42aa51

            cmp BX,5
            jbe .L_42aa51

            mov EBX,DWORD PTR [RSI+R10*1+2]
            mov R13D,8
            mov QWORD PTR [RCX+64],RBX
            jmp .L_42aa51
          .byte 0x66
          .byte 0x90
.L_42a730:

            xor R9D,R9D
            test BX,BX
            je .L_42a5d0

            movzx EBP,BYTE PTR [RSI+RAX*1]
            lea R9D,DWORD PTR [RBX-1]
            lea EAX,DWORD PTR [R11+5]
            test BPL,BPL
            js .L_42a76d

            jmp .L_42a950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a758:

            mov R10D,EAX
            sub R9D,1
            add EAX,1
            cmp BYTE PTR [RSI+R10*1],0
            jns .L_42a950
.L_42a76d:

            test R9W,R9W
            jne .L_42a758

            xor R9D,R9D
            test BPL,1
            jne .L_42a5d0

            test BPL,2
            jne .L_42a5d0

            and EBP,4
            jne .L_42a5d0

            nop
            nop
            nop
            nop
            nop
.L_42a798:

            movzx R9D,R9W
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a7a8:

            or BYTE PTR [RCX+130],1
            cmp QWORD PTR [RCX+48],R12
            je .L_42a8b0

            cmp QWORD PTR [RCX+40],R12
            je .L_42a8d3
.L_42a7c3:

            cmp QWORD PTR [RCX+32],R12
            jne .L_42a7d3
.L_42a7c9:

            cmp BX,7
            ja .L_42a930
.L_42a7d3:

            movzx R9D,BX
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a7e0:

            cmp BX,7
            mov R9D,EBP
            jbe .L_42a5d0

            mov R10D,EAX
            cmp BX,11
            mov R11D,DWORD PTR [RSI+R10*1]
            mov QWORD PTR [RCX+104],R11
            mov R11D,DWORD PTR [RSI+R10*1+4]
            mov QWORD PTR [RCX+96],R11
            jbe .L_42a5d0

            movzx R11D,WORD PTR [RSI+R10*1+8]
            mov QWORD PTR [RCX+64],R11
            movzx R10D,WORD PTR [RSI+R10*1+10]
            mov QWORD PTR [RCX+56],R10
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a828:

            movzx R10D,BYTE PTR [RSI+RAX*1]
            lea R9D,DWORD PTR [RBX-1]
            lea EAX,DWORD PTR [R11+5]
            test R10B,1
            je .L_42a855

            cmp R9W,3
            jbe .L_42a798

            mov EAX,DWORD PTR [RSI+RAX*1]
            lea R9D,DWORD PTR [RBX-5]
            mov QWORD PTR [RCX+96],RAX
            lea EAX,DWORD PTR [R11+9]
.L_42a855:

            test R10B,2
            jne .L_42a890
.L_42a85b:

            and R10D,4
            je .L_42a798

            cmp R9W,3
            jbe .L_42a798

            mov R10D,EAX
            sub R9D,4
            add EAX,4
            mov EBX,DWORD PTR [RSI+R10*1]
            movzx R9D,R9W
            mov QWORD PTR [RCX+112],RBX
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a890:

            cmp R9W,3
            jbe .L_42a798

            mov R11D,EAX
            sub R9D,4
            add EAX,4
            mov EBX,DWORD PTR [RSI+R11*1]
            mov QWORD PTR [RCX+104],RBX
            jmp .L_42a85b
          .byte 0x90
.L_42a8b0:

            cmp BX,7
            jbe .L_42a5cb

            sub EBX,8
            cmp QWORD PTR [RCX+40],R12
            mov RAX,QWORD PTR [RSI+RAX*1]
            mov QWORD PTR [RCX+48],RAX
            lea EAX,DWORD PTR [R11+12]
            jne .L_42a7c3
.L_42a8d3:

            cmp BX,7
            jbe .L_42a7d3

            mov R9D,EAX
            sub EBX,8
            add EAX,8
            cmp QWORD PTR [RCX+32],R12
            mov R9,QWORD PTR [RSI+R9*1]
            mov QWORD PTR [RCX+40],R9
            je .L_42a7c9

            jmp .L_42a7d3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a900:

            mov EAX,4
.L_42a905:

            mov R8D,EDX
            lea RDX,QWORD PTR [RIP+.L_4486f0]
            mov ECX,EBP
            sub R8D,EAX
            mov ESI,84
            xor EAX,EAX
            call .L_432bc0

            add RSP,8
.L_42a924:

            mov EAX,4294967271
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42a930:

            mov R9D,EAX
            add EAX,8
            mov R9,QWORD PTR [RSI+R9*1]
            mov QWORD PTR [RCX+32],R9
            lea R9D,DWORD PTR [RBX-8]
            movzx R9D,R9W
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a950:

            test BPL,1
            je .L_42a97c

            cmp R9W,1
            jbe .L_42a798

            mov R10D,EAX
            sub R9D,2
            add EAX,2
            movzx R10D,WORD PTR [RSI+R10*1]
            shr R10W,8
            mov BYTE PTR [RCX+129],R10B
.L_42a97c:

            test BPL,2
            je .L_42a994

            cmp R9W,1
            jbe .L_42a798

            add EAX,2
            sub R9D,2
.L_42a994:

            test BPL,4
            je .L_42a9f9

            cmp R9W,3
            jbe .L_42a798

            movzx R11D,BYTE PTR [RCX+129]
            mov R10D,EAX
            mov R10D,DWORD PTR [RSI+R10*1]
            cmp R11B,3
            je .L_42aab2

            test R11B,R11B
            jne .L_42aac0

            mov R11D,R10D
            and R11D,16
            cmp R11D,1
            sbb R11D,R11D
            and R11W,16311
            add R11W,16893
            and R10D,1
            mov WORD PTR [RCX+124],R11W
            je .L_42a9f2

            and WORD PTR [RCX+124],365
.L_42a9f2:

            add EAX,4
            sub R9D,4
.L_42a9f9:

            and EBP,8
            sete R10B
            cmp R9W,1
            setbe R11B
            or R10D,R11D
            test R10B,R10B
            jne .L_42a798

            mov R10D,EAX
            sub R9D,2
            add EAX,2
            movzx R10D,WORD PTR [RSI+R10*1]
            cmp R10W,R9W
            ja .L_42a798

            movzx R11D,R10W
            sub R9D,R10D
            add EAX,R11D
            movzx R9D,R9W
            jmp .L_42a5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42aa48:

            mov R13D,4
            xor R11D,R11D
.L_42aa51:

            cmp EBP,R13D
            jle .L_42a5d0

            lea EBX,DWORD PTR [RAX+R11*1+2]
            movzx EBX,BYTE PTR [RSI+RBX*1]
            cmp EBX,2
            je .L_42aa8e

            cmp EBX,4
            jne .L_42a5d0

            lea EBX,DWORD PTR [R11+6]
            cmp EBP,EBX
            jle .L_42a5d0

            add R10,RSI
            mov EBX,DWORD PTR [R11+R10*1+3]
            mov QWORD PTR [RCX+56],RBX
            jmp .L_42a5d0
.L_42aa8e:

            add R10,RSI
            movzx R10D,WORD PTR [R11+R10*1+3]
            mov QWORD PTR [RCX+56],R10
            jmp .L_42a5d0
.L_42aaa0:

            movzx EBX,WORD PTR [RSI+R10*1+2]
            mov R13D,6
            mov QWORD PTR [RCX+64],RBX
            jmp .L_42aa51
.L_42aab2:

            shr R10D,16
            mov WORD PTR [RCX+124],R10W
            jmp .L_42a9f2
.L_42aac0:

            xor R10D,R10D
            mov WORD PTR [RCX+124],R10W
            jmp .L_42a9f2
.L_42aacd:

            mov R8D,EDX
            lea RDX,QWORD PTR [RIP+.L_448730]
            mov ECX,EAX
            mov ESI,84
            xor EAX,EAX
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_42a663
.L_42aaef:

            nop
.L_42aaf0:

            push R15
            push R14
            xor ECX,ECX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            xor ESI,ESI
            mov R12,RDI
            xor EDI,EDI
            sub RSP,88
.L_42ab0d:

            mov RBX,QWORD PTR [RDX+104]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RBX+48]
            mov QWORD PTR [RSP+24],RAX
            mov EAX,DWORD PTR [RBX+120]
            mov WORD PTR [RDX+153],CX
            mov QWORD PTR [RDX+128],0
            mov QWORD PTR [RDX+120],0
            xor EDX,EDX
            mov DWORD PTR [RSP+44],EAX
            call QWORD PTR [RBP+144]

            cmp QWORD PTR [RBP+296],0
            mov QWORD PTR [RBP+136],RAX
            je .L_42b158
.L_42ab71:

            xor EDX,EDX
            mov ESI,30
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_42b3a3

            cmp DWORD PTR [RAX],67324752
            jne .L_42b409

            movzx EAX,BYTE PTR [RAX+4]
            mov BYTE PTR [RSP+43],AL
            movzx EAX,BYTE PTR [R14+5]
            mov BYTE PTR [RBX+129],AL
            movzx EAX,WORD PTR [R14+6]
            test AL,65
            mov WORD PTR [RBX+126],AX
            je .L_42abe2

            mov DWORD PTR [RBP+48],1
            mov ESI,1
            mov RDI,R13
            call .L_439710

            movzx EAX,WORD PTR [RBX+126]
            mov EDX,EAX
            and DX,8193
            cmp DX,8193
            je .L_42b230
.L_42abe2:

            and EAX,1
            lea RDI,QWORD PTR [R14+10]
            mov BYTE PTR [RBP+328],AL
            movzx EAX,WORD PTR [R14+8]
            mov BYTE PTR [RBX+128],AL
            call .L_42a010

            test BYTE PTR [RBX+126],8
            mov QWORD PTR [RBX+96],RAX
            mov EAX,DWORD PTR [R14+14]
            mov DWORD PTR [RBX+120],EAX
            jne .L_42ae20

            movzx EAX,BYTE PTR [R14+17]
            mov BYTE PTR [RBX+131],AL
.L_42ac1f:

            mov EAX,DWORD PTR [R14+18]
            mov ESI,30
            mov RDI,R12
            mov QWORD PTR [RBX+40],RAX
            mov EAX,DWORD PTR [R14+22]
            mov QWORD PTR [RBX+48],RAX
            movzx R15D,WORD PTR [R14+26]
            movzx EAX,WORD PTR [R14+28]
            mov QWORD PTR [RSP],R15
            mov WORD PTR [RSP+16],AX
            mov QWORD PTR [RSP+8],RAX
            call .L_404a20

            xor EDX,EDX
            mov RSI,R15
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_42b3a3

            test BYTE PTR [RBX+127],8
            je .L_42b018

            mov R15,QWORD PTR [RBP+312]
            test R15,R15
            je .L_42b2d0
.L_42ac87:

            mov RDX,QWORD PTR [RSP]
            mov RSI,R14
            mov RCX,R15
            mov RDI,R13
            call .L_4393f0

            test EAX,EAX
            mov R14D,EAX
            je .L_42acd5

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_42b415

            mov RDI,R15
            mov R14D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_42acd5:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R12
            call .L_404a20

            mov R15,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,R15
            call .L_4049d0

            test RAX,RAX
            je .L_42b3a3

            cmp WORD PTR [RSP+16],0
            je .L_42ad27

            cmp R15,3
            jbe .L_42b42d

            mov RCX,RBX
            mov RDX,R15
            mov RSI,RAX
            mov RDI,R12
            call .L_42a570

            test EAX,EAX
            jne .L_42b130
.L_42ad27:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R12
            call .L_404a20

            movzx EAX,WORD PTR [RBX+124]
            mov EDX,EAX
            and DX,61440
            cmp DX,4096
            je .L_42b140

            test AX,AX
            jne .L_42b278

            mov EAX,436
            mov WORD PTR [RBX+124],AX
.L_42ad5c:

            mov RDI,R13
            call .L_438250

            test RAX,RAX
            mov R15,RAX
            je .L_42ae30

            mov RDI,RAX
            call wcslen@PLT

            test RAX,RAX
            je .L_42ae60

            cmp DWORD PTR [R15+RAX*4-4],47
            jne .L_42ae60
.L_42ad8d:

            movzx EAX,WORD PTR [RBX+124]
            and AX,4095
            or AX,16457
            mov WORD PTR [RBX+124],AX
.L_42ad9d:

            mov RDI,R13
            call .L_438250

            test RAX,RAX
            mov R15,RAX
            je .L_42b320

            mov RDI,RAX
            call wcslen@PLT

            test RAX,RAX
            je .L_42ae7c

            cmp DWORD PTR [R15+RAX*4-4],47
            je .L_42ae7c

            lea RDX,QWORD PTR [RSP+48]
            mov RSI,R15
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call .L_4312d0

            mov RDX,QWORD PTR [RSP]
            mov ESI,47
            mov RDI,RDX
            call .L_431460

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_439390

            jmp .L_42ae7c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ae20:

            movzx EAX,BYTE PTR [R14+11]
            mov BYTE PTR [RBX+131],AL
            jmp .L_42ac1f
.L_42ae30:

            mov RDI,R13
            call .L_438170

            test RAX,RAX
            mov R15,RAX
            je .L_42ae60

            mov RDI,RAX
            call strlen@PLT

            test RAX,RAX
            je .L_42ae60

            cmp BYTE PTR [R15+RAX*1-1],47
            je .L_42ad8d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ae60:

            movzx EAX,WORD PTR [RBX+124]
            mov EDX,EAX
            and DX,61440
            je .L_42b220

            cmp DX,16384
            je .L_42ad9d
.L_42ae7c:

            test BYTE PTR [RBX+130],2
            je .L_42aec8

            mov EAX,DWORD PTR [RBX+120]
            and WORD PTR [RBX+126],65527
            test EAX,EAX
            jne .L_42b1e8

            mov EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RBX+120],EAX
.L_42ae9c:

            mov R8,QWORD PTR [RBX+40]
            mov RAX,QWORD PTR [RSP+32]
            test R8,R8
            jne .L_42b1b8

            mov QWORD PTR [RBX+40],RAX
.L_42aeb2:

            mov R8,QWORD PTR [RBX+48]
            mov RAX,QWORD PTR [RSP+24]
            test R8,R8
            jne .L_42b188

            mov QWORD PTR [RBX+48],RAX
.L_42aec8:

            movzx ESI,WORD PTR [RBX+124]
            mov RDI,R13
            call .L_4392b0

            mov RSI,QWORD PTR [RBX+64]
            mov RDI,R13
            call .L_439670

            mov RSI,QWORD PTR [RBX+56]
            mov RDI,R13
            call .L_438cc0

            mov RSI,QWORD PTR [RBX+96]
            xor EDX,EDX
            mov RDI,R13
            call .L_4392c0

            mov RSI,QWORD PTR [RBX+112]
            xor EDX,EDX
            mov RDI,R13
            call .L_439050

            mov RSI,QWORD PTR [RBX+104]
            xor EDX,EDX
            mov RDI,R13
            call .L_438f30

            mov RDX,QWORD PTR [RBP+104]
            movzx EAX,WORD PTR [RDX+124]
            and AX,61440
            cmp AX,40960
            je .L_42b048

            test BYTE PTR [RBX+126],8
            mov RSI,QWORD PTR [RBX+48]
            je .L_42af3f

            test RSI,RSI
            jle .L_42b290
.L_42af3f:

            mov RDI,R13
            call .L_439490
.L_42af47:

            movzx EAX,WORD PTR [RBX+126]
            mov RCX,QWORD PTR [RBX+40]
            mov RDX,QWORD PTR [RBP+104]
            mov QWORD PTR [RBP+112],RCX
            and EAX,8
            test AX,AX
            jne .L_42af70

            test RCX,RCX
            jg .L_42af70

            mov BYTE PTR [RBP+154],1
            nop
            nop
            nop
            nop
            nop
.L_42af70:

            movzx ESI,BYTE PTR [RDX+128]
            xor ECX,ECX
            lea RDX,QWORD PTR [RIP+.L_65aad0]
            xor EAX,EAX
            jmp .L_42af9a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42af88:

            add EAX,1
            cmp EAX,23
            je .L_42b038

            mov ECX,DWORD PTR [RDX]
            add RDX,16
.L_42af9a:

            cmp ESI,ECX
            jne .L_42af88

            cdqe 
            lea RDX,QWORD PTR [RIP+.L_65aac0]
            shl RAX,4
            mov R8,QWORD PTR [RDX+RAX*1+8]
.L_42afb0:

            movsx DX,BYTE PTR [RSP+43]
            lea RSI,QWORD PTR [RIP+.L_448c60]
            mov EDI,EDX
            imul EDX,EDX,103
            mov EAX,EDI
            mov ECX,EDI
            sar AL,7
            mov RDI,RBP
            sar DX,10
            sub EDX,EAX
            lea EAX,DWORD PTR [RDX+RDX*4]
            movsx EDX,DL
            add EAX,EAX
            sub ECX,EAX
            xor EAX,EAX
            movsx ECX,CL
            call .L_4326f0

            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [R12+24],RAX
.L_42afef:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_42b472

            add RSP,88
.L_42b00a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b018:

            mov R15,QWORD PTR [RBP+296]
            test R15,R15
            jne .L_42ac87

            mov R15,QWORD PTR [RBP+304]
            jmp .L_42ac87
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b038:

            lea R8,QWORD PTR [RIP+.L_447c02]
            jmp .L_42afb0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b048:

            mov R15,QWORD PTR [RBX+40]
            cmp R15,65536
            jg .L_42b421

            xor ESI,ESI
            mov RDI,R13
            call .L_439490

            xor EDX,EDX
            mov RSI,R15
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_42b453

            mov R8,QWORD PTR [RBP+296]
            test R8,R8
            je .L_42b2a0
.L_42b08d:

            mov RSI,QWORD PTR [RSP]
            mov RCX,R8
            mov RDX,R15
            mov RDI,R13
            mov QWORD PTR [RSP+8],R8
            call .L_439630

            test EAX,EAX
            je .L_42b0f2

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            mov R9,RAX
            mov R8,QWORD PTR [RSP+8]
            je .L_42b250

            cmp QWORD PTR [RBP+312],R8
            je .L_42b300
.L_42b0cb:

            mov RDI,R8
            mov R14D,4294967276
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_4488a0]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_42b0f2:

            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov RSI,R15
            mov RDI,R12
            call .L_404a20

            test RAX,RAX
            jns .L_42af47

            lea RDX,QWORD PTR [RIP+.L_4488d8]
.L_42b11d:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            nop
            nop
            nop
            nop
.L_42b130:

            mov R14D,4294967266
            jmp .L_42afef
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b140:

            and AX,4095
            or AX,32768
            mov WORD PTR [RBX+124],AX
            jmp .L_42ad5c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b158:

            mov EDX,DWORD PTR [RBP+320]
            test EDX,EDX
            jne .L_42ab71

            mov RDI,R12
            call .L_431850

            mov DWORD PTR [RBP+320],1
            mov QWORD PTR [RBP+304],RAX
            jmp .L_42ab71
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b188:

            cmp R8,RAX
            je .L_42aec8

            lea RDX,QWORD PTR [RIP+.L_448800]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967276
            call .L_432bc0

            jmp .L_42aec8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b1b8:

            cmp R8,RAX
            je .L_42aeb2

            lea RDX,QWORD PTR [RIP+.L_4487b0]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967276
            call .L_432bc0

            jmp .L_42aeb2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b1e8:

            cmp BYTE PTR [RBP+152],0
            jne .L_42ae9c

            cmp EAX,DWORD PTR [RSP+44]
            je .L_42ae9c

            lea RDX,QWORD PTR [RIP+.L_448c33]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967276
            call .L_432bc0

            jmp .L_42ae9c
.L_42b220:

            or AX,32768
            mov WORD PTR [RBX+124],AX
            jmp .L_42ae7c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b230:

            test AL,64
            je .L_42abe2

            mov ESI,1
            mov RDI,R13
            mov R14D,4294967266
            call .L_439730

            jmp .L_42afef
.L_42b250:

            lea RDX,QWORD PTR [RIP+.L_448878]
.L_42b257:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov R14D,4294967266
            jmp .L_42afef
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b278:

            cmp DX,16384
            je .L_42ad9d

            jmp .L_42ad5c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b290:

            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [RBP+112],RAX
            jmp .L_42af70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b2a0:

            mov RAX,QWORD PTR [RBP+104]
            test BYTE PTR [RAX+127],8
            je .L_42b2ba

            mov R8,QWORD PTR [RBP+312]
            test R8,R8
            jne .L_42b08d
.L_42b2ba:

            mov R8,QWORD PTR [RBP+304]
            jmp .L_42b08d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b2d0:

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov EDX,1
            mov RDI,R12
            call .L_431820

            test RAX,RAX
            mov R15,RAX
            mov QWORD PTR [RBP+312],RAX
            jne .L_42ac87

            jmp .L_42b130
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b300:

            mov RAX,QWORD PTR [RBP+104]
            test BYTE PTR [RAX+127],8
            jne .L_42b3c4
.L_42b30e:

            test BYTE PTR [RAX+127],8
            jne .L_42b0f2

            jmp .L_42b0cb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b320:

            mov RDI,R13
            call .L_438170

            test RAX,RAX
            mov R15,RAX
            je .L_42ae7c

            mov RDI,RAX
            call strlen@PLT

            test RAX,RAX
            je .L_42ae7c

            cmp BYTE PTR [R15+RAX*1-1],47
            je .L_42ae7c

            lea RDX,QWORD PTR [RSP+48]
            mov RSI,R15
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call .L_4312c0

            mov RDX,QWORD PTR [RSP]
            mov ESI,47
            mov RDI,RDX
            call .L_4312e0

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_439360

            jmp .L_42ae7c
.L_42b3a3:

            lea RDX,QWORD PTR [RIP+.L_448c05]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967266
            call .L_432bc0

            jmp .L_42afef
.L_42b3c4:

            mov RSI,QWORD PTR [RSP]
            xor ECX,ECX
            mov RDX,R15
            mov RDI,R13
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            call .L_439630

            mov R9,QWORD PTR [RSP+16]
            cmp DWORD PTR [R9],12
            je .L_42b250

            mov R8,QWORD PTR [RSP+8]
            cmp R8,QWORD PTR [RBP+312]
            jne .L_42b0cb

            mov RAX,QWORD PTR [RBP+104]
            jmp .L_42b30e
.L_42b409:

            lea RDX,QWORD PTR [RIP+.L_448c1f]
            jmp .L_42b11d
.L_42b415:

            lea RDX,QWORD PTR [RIP+.L_444a18]
            jmp .L_42b257
.L_42b421:

            lea RDX,QWORD PTR [RIP+.L_448850]
            jmp .L_42b11d
.L_42b42d:

            movzx ECX,WORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_448768]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967266
            call .L_432bc0

            jmp .L_42afef
.L_42b453:

            lea RDX,QWORD PTR [RIP+.L_448c4d]
            mov ESI,4294967295
            mov RDI,R12
            mov R14D,4294967266
            call .L_432bc0

            jmp .L_42afef
.L_42b472:

            call __stack_chk_fail@PLT
.L_42b477:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b480:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_42b490:

            mov DWORD PTR [RDI+16],327680
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI+24],0
            je .L_42b680
.L_42b4b2:

            mov RAX,QWORD PTR [RBX+2472]
            mov RBP,QWORD PTR [RAX]
            cmp DWORD PTR [RBP+48],-1
            jne .L_42b4c9

            mov DWORD PTR [RBP+48],0
.L_42b4c9:

            mov RAX,QWORD PTR [RBP+56]
            test RAX,RAX
            je .L_42b641
.L_42b4d6:

            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RBP+104],RAX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+136],0
            and RDI,-8
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+144]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            cmp BYTE PTR [RBP+480],0
            je .L_42b51b

            lea RDI,QWORD PTR [RBP+392]
            call QWORD PTR [RIP+.L_65ac58]
.L_42b51b:

            cmp BYTE PTR [RBP+496],0
            je .L_42b531

            lea RDI,QWORD PTR [RBP+488]
            call QWORD PTR [RIP+.L_65ad38]
.L_42b531:

            mov RDI,RBX
            mov BYTE PTR [RBP+496],0
            mov BYTE PTR [RBP+480],0
            mov BYTE PTR [RBP+388],0
            mov R12,RSP
            call .L_43d880

            mov RSI,QWORD PTR [RBP+96]
            mov RDI,RBX
            call .L_404a20

            mov QWORD PTR [RBP+96],0
            nop
            nop
            nop
.L_42b568:

            mov RDX,R12
            mov ESI,4
            mov RDI,RBX
            call .L_4049d0

            test RAX,RAX
            je .L_42b690

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RAX+4]
            lea RSI,QWORD PTR [RAX+RDX*1]
            cmp RSI,RCX
            jb .L_42b60f

            sub RDX,3
            xor ESI,ESI
            jmp .L_42b5a9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b5a0:

            add RSI,1
            cmp RSI,RDX
            je .L_42b618
.L_42b5a9:

            cmp BYTE PTR [RAX+RSI*1],80
            jne .L_42b5a0

            cmp BYTE PTR [RAX+RSI*1+1],75
            jne .L_42b5a0

            movzx ECX,BYTE PTR [RAX+RSI*1+2]
            cmp CL,3
            je .L_42b5f0

            cmp CL,1
            jne .L_42b628

            cmp BYTE PTR [RAX+RSI*1+3],2
            jne .L_42b5a0
.L_42b5cc:

            mov EAX,1
.L_42b5d1:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42b69a

            add RSP,24
.L_42b5e9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42b5f0:

            cmp BYTE PTR [RAX+RSI*1+3],4
            jne .L_42b5a0

            mov RDI,RBX
            call .L_404a20

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RBX
            call .L_42aaf0

            jmp .L_42b5d1
.L_42b60f:

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b618:

            mov RDI,RBX
            call .L_404a20

            jmp .L_42b568
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b628:

            sub ECX,5
            cmp CL,1
            ja .L_42b5a0

            cmp BYTE PTR [RAX+RSI*1+3],6
            jne .L_42b5a0

            jmp .L_42b5cc
.L_42b641:

            mov EDI,144
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+56],RAX
            jne .L_42b4d6

            lea RDX,QWORD PTR [RIP+.L_448c6f]
            mov ESI,12
            mov RDI,RBX
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42b5d1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b680:

            lea RAX,QWORD PTR [RIP+.L_444d04]
            mov QWORD PTR [RDI+24],RAX
            jmp .L_42b4b2
.L_42b690:

            mov EAX,4294967266
            jmp .L_42b5d1
.L_42b69a:

            call __stack_chk_fail@PLT
.L_42b69f:

            nop
.L_42b6a0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_42b6b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+32],RSI
            mov R13,QWORD PTR [RAX]
            cmp DWORD PTR [R13+48],-1
            jne .L_42b6e5

            mov DWORD PTR [R13+48],0
.L_42b6e5:

            cmp QWORD PTR [R15+24],0
            mov DWORD PTR [R15+16],327680
            je .L_42b9a0

            cmp QWORD PTR [R13+56],0
            je .L_42b9b6
.L_42b703:

            mov RSI,QWORD PTR [R13+104]
            test RSI,RSI
            je .L_42b968

            lea RDI,QWORD PTR [R13+64]
            mov EDX,1
            call .L_43d490

            mov QWORD PTR [R13+104],RAX
.L_42b722:

            test RAX,RAX
            je .L_42b968

            mov RSI,QWORD PTR [RAX+72]
            xor EBP,EBP
            test RSI,RSI
            je .L_42b742

            lea RDI,QWORD PTR [R13+80]
            call .L_43d170

            mov RBP,RAX
.L_42b742:

            cmp BYTE PTR [R13+480],0
            je .L_42b759

            lea RDI,QWORD PTR [R13+392]
            call QWORD PTR [RIP+.L_65ac58]
.L_42b759:

            cmp BYTE PTR [R13+496],0
            je .L_42b770

            lea RDI,QWORD PTR [R13+488]
            call QWORD PTR [RIP+.L_65ad38]
.L_42b770:

            mov RDI,R15
            mov BYTE PTR [R13+496],0
            mov BYTE PTR [R13+480],0
            mov BYTE PTR [R13+388],0
            call .L_43d880

            xor ESI,ESI
            mov RDI,R15
            call .L_432eb0

            mov RDX,QWORD PTR [R13+104]
            mov RSI,QWORD PTR [RDX+32]
            cmp RSI,RAX
            jg .L_42ba48

            je .L_42b7b7

            xor EDX,EDX
            mov RDI,R15
            call .L_404dc0
.L_42b7b7:

            mov RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [R13+96],0
            mov RDX,R13
            mov RDI,R15
            call .L_42aaf0

            test EAX,EAX
            mov EBX,EAX
            jne .L_42b96d

            test RBP,RBP
            je .L_42b96d

            mov RAX,QWORD PTR [R15+2472]
            xor ESI,ESI
            mov RDI,R15
            mov R13,QWORD PTR [RAX]
            call .L_432eb0

            movzx EDX,BYTE PTR [RBP+128]
            mov QWORD PTR [RSP+24],RAX
            test DL,DL
            je .L_42bab0

            xor ECX,ECX
            cmp DL,8
            lea RAX,QWORD PTR [RIP+.L_65aad0]
            jne .L_42ba72

            mov RDI,QWORD PTR [RBP+48]
.L_42b820:

            cmp RDI,4194304
            jg .L_42c1c3

            mov RCX,QWORD PTR [RBP+40]
            cmp RCX,4194304
            jg .L_42c1c6

            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_42c05c

            mov RSI,QWORD PTR [RBP+32]
            cmp QWORD PTR [RSP+24],RSI
            jl .L_42c142

            jne .L_42c0b4
.L_42b866:

            xor EDX,EDX
            mov ESI,30
            mov RDI,R15
            call .L_4049d0

            test RAX,RAX
            je .L_42c21e

            cmp DWORD PTR [RAX],67324752
            jne .L_42c1fc

            movzx EDX,WORD PTR [RAX+26]
            movzx EAX,WORD PTR [RAX+28]
            lea RSI,QWORD PTR [RDX+RAX*1+30]
.L_42b897:

            mov RDI,R15
            call .L_404a20

            mov R12,QWORD PTR [RBP+40]
            mov R14,QWORD PTR [RBP+48]
            test R12,R12
            je .L_42c1d2

            mov RAX,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+64],EBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+16],RAX
.L_42b8c8:

            mov RDX,QWORD PTR [RSP+16]
            mov ESI,1
            mov RDI,R15
            call .L_4049d0

            test RAX,RAX
            mov R8,RAX
            je .L_42c160

            cmp QWORD PTR [RSP+112],R12
            jbe .L_42b8f2

            mov QWORD PTR [RSP+112],R12
.L_42b8f2:

            movzx EAX,BYTE PTR [RBP+128]
            test AL,AL
            je .L_42bae0

            cmp AL,8
            je .L_42bb30

            test R12,R12
            setne BL
            xor ECX,ECX
.L_42b911:

            mov RSI,RCX
            mov RDI,R15
            call .L_404a20

            test BL,BL
            jne .L_42b8c8

            mov RDX,QWORD PTR [RBP+48]
            mov EBX,DWORD PTR [RSP+64]
            sub RDX,R14
.L_42b92b:

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+32]
            call .L_439780

            nop
            nop
            nop
            nop
            nop
            nop
.L_42b940:

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R15
            xor EDX,EDX
            call .L_404dc0

            mov RDI,QWORD PTR [RSP+40]
            mov BYTE PTR [R13+153],0
            call free@PLT

            jmp .L_42b96d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b968:

            mov EBX,1
.L_42b96d:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_42c23e

            add RSP,152
.L_42b98d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b9a0:

            cmp QWORD PTR [R13+56],0
            lea RAX,QWORD PTR [RIP+.L_444d04]
            mov QWORD PTR [R15+24],RAX
            jne .L_42b703
.L_42b9b6:

            mov RSI,QWORD PTR [R13+24]
            xor EDX,EDX
            mov RDI,R15
            call .L_404dc0

            test RAX,RAX
            js .L_42c070

            lea RBX,QWORD PTR [RSP+104]
.L_42b9d2:

            mov RDX,RBX
            mov ESI,20
            mov RDI,R15
            call .L_4049d0

            test RAX,RAX
            je .L_42c070

            mov RCX,QWORD PTR [RSP+104]
            xor ESI,ESI
            sub RCX,4
.L_42b9f6:

            cmp RCX,RSI
            jle .L_42ba38
.L_42b9fb:

            movzx EDX,BYTE PTR [RAX+RSI*1+3]
            cmp DL,5
            je .L_42bf98

            jle .L_42bbd8

            cmp DL,75
            je .L_42bfb8

            cmp DL,80
            je .L_42bfa8

            cmp DL,6
            je .L_42bf78
.L_42ba2a:

            add RSI,4
            cmp RCX,RSI
            jg .L_42b9fb

            nop
            nop
            nop
            nop
            nop
.L_42ba38:

            mov RDI,R15
            call .L_404a20

            jmp .L_42b9d2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ba48:

            sub RSI,RAX
            mov RDI,R15
            call .L_404a20

            jmp .L_42b7b7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ba60:

            add EBX,1
            cmp EBX,23
            je .L_42c154

            mov ECX,DWORD PTR [RAX]
            add RAX,16
.L_42ba72:

            cmp EDX,ECX
            jne .L_42ba60

            movsxd RBX,EBX
            lea RAX,QWORD PTR [RIP+.L_65aac0]
            shl RBX,4
            mov RCX,QWORD PTR [RAX+RBX*1+8]
.L_42ba89:

            lea RDX,QWORD PTR [RIP+.L_448960]
.L_42ba90:

            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967276
            jmp .L_42b96d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bab0:

            mov RDI,QWORD PTR [RBP+40]
            cmp QWORD PTR [RBP+48],RDI
            je .L_42b820

            lea RDX,QWORD PTR [RIP+.L_448928]
.L_42bac5:

            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_432bc0

            mov EBX,4294967266
            jmp .L_42b96d
          .byte 0x66
          .byte 0x90
.L_42bae0:

            mov RCX,QWORD PTR [RSP+112]
            cmp RCX,R14
            mov R9,RCX
            ja .L_42c080

            sub R14,RCX
            setne BL
            sub R12,RCX
            setne AL
            and EBX,EAX
.L_42baff:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R9
            mov RSI,R8
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+48],R9
            call memcpy@PLT

            mov R9,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+56]
            add QWORD PTR [RSP+8],R9
            jmp .L_42b911
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bb30:

            mov RSI,R13
            mov RDI,R15
            mov QWORD PTR [RSP+48],R8
            call .L_42a0c0

            cmp EAX,0
            jne .L_42c1b6

            mov RAX,QWORD PTR [RSP+112]
            mov R8,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R13+176]
            xor ESI,ESI
            mov QWORD PTR [R13+192],0
            mov DWORD PTR [R13+208],R14D
            mov QWORD PTR [R13+216],0
            mov DWORD PTR [R13+184],EAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13+176],R8
            mov QWORD PTR [R13+200],RAX
            call inflate@PLT

            test EAX,EAX
            je .L_42c13b

            cmp EAX,1
            je .L_42c116

            cmp EAX,-4
            je .L_42c0f6

            lea RDX,QWORD PTR [RIP+.L_448c8b]
            mov ECX,EAX
            mov ESI,4294967295
            mov RDI,R15
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_42b940
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42bbd8:

            cmp DL,1
            je .L_42bf98

            cmp DL,2
            jne .L_42ba2a

            cmp DWORD PTR [RAX+RSI*1],33639248
            jne .L_42ba2a
.L_42bbf7:

            mov RDI,R15
            call .L_404a20

            xor ESI,ESI
            mov RDI,R15
            call .L_432eb0

            sub RAX,QWORD PTR [R13+24]
            lea RSI,QWORD PTR [RIP+.L_65aab0]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [R13+64]
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_43d160

            lea RAX,QWORD PTR [R13+80]
            lea RSI,QWORD PTR [RIP+.L_65aaa0]
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            call .L_43d160

            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [R13+32],0
            mov QWORD PTR [RSP+8],R15
            mov QWORD PTR [RSP+40],RAX
.L_42bc59:

            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov ESI,4
            call .L_4049d0

            test RAX,RAX
            je .L_42c070

            cmp DWORD PTR [RAX],101075792
            je .L_42c098

            cmp DWORD PTR [RAX],101010256
            je .L_42c098

            cmp DWORD PTR [RAX],33639248
            jne .L_42c180

            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov ESI,46
            call .L_4049d0

            test RAX,RAX
            mov RBX,RAX
            je .L_42c070

            mov ESI,144
            mov EDI,1
            call calloc@PLT

            mov R14,RAX
            mov RAX,QWORD PTR [R13+56]
            or BYTE PTR [R14+130],2
            mov QWORD PTR [R14+24],RAX
            add QWORD PTR [R13+32],1
            mov QWORD PTR [R13+56],R14
            movzx EAX,BYTE PTR [RBX+5]
            mov BYTE PTR [R14+129],AL
            movzx EAX,WORD PTR [RBX+8]
            test AL,65
            mov WORD PTR [R14+126],AX
            je .L_42bcff

            mov DWORD PTR [R13+48],1
.L_42bcff:

            movzx EAX,WORD PTR [RBX+10]
            lea RDI,QWORD PTR [RBX+12]
            mov BYTE PTR [R14+128],AL
            call .L_42a010

            test BYTE PTR [R14+126],8
            mov QWORD PTR [R14+96],RAX
            mov EAX,DWORD PTR [RBX+16]
            mov DWORD PTR [R14+120],EAX
            je .L_42c030

            movzx EAX,BYTE PTR [RBX+13]
            mov BYTE PTR [R14+131],AL
.L_42bd34:

            mov EAX,DWORD PTR [RBX+20]
            mov QWORD PTR [R14+40],RAX
            mov EAX,DWORD PTR [RBX+24]
            mov QWORD PTR [R14+48],RAX
            movzx EAX,WORD PTR [RBX+32]
            movzx R12D,WORD PTR [RBX+28]
            movzx EBP,WORD PTR [RBX+30]
            mov EDX,DWORD PTR [RBX+38]
            mov QWORD PTR [RSP+64],RAX
            mov EAX,DWORD PTR [RBX+42]
            add RAX,QWORD PTR [RSP+24]
            mov WORD PTR [RSP+86],R12W
            mov RCX,RBP
            mov QWORD PTR [R14+32],RAX
            movzx EAX,BYTE PTR [R14+129]
            cmp AL,3
            je .L_42c040

            test AL,AL
            jne .L_42c050

            mov EAX,EDX
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            and AX,16311
            add AX,16893
            and EDX,1
            mov WORD PTR [R14+124],AX
            je .L_42bdb0

            and WORD PTR [R14+124],365
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bdb0:

            mov RBX,QWORD PTR [RSP+8]
            mov ESI,46
            mov DWORD PTR [RSP+56],ECX
            mov RDI,RBX
            call .L_404a20

            lea RAX,QWORD PTR [R12+RBP*1]
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,RAX
            mov QWORD PTR [RSP+72],RAX
            call .L_4049d0

            test RAX,RAX
            mov RBX,RAX
            mov ECX,DWORD PTR [RSP+56]
            je .L_42c1a5

            test CX,CX
            je .L_42be17

            cmp RBP,3
            jbe .L_42c1d9

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+R12*1]
            mov RCX,R14
            mov RDX,RBP
            call .L_42a570

            test EAX,EAX
            jne .L_42c070
.L_42be17:

            mov EAX,DWORD PTR [R13+324]
            test EAX,EAX
            je .L_42c015

            mov QWORD PTR [RSP+56],R13
            mov RBP,RBX
            mov R13,RBX
            jmp .L_42be3c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42be38:

            lea R13,QWORD PTR [RAX+1]
.L_42be3c:

            mov R15,R13
            mov RBX,R12
            mov ESI,47
            sub R15,RBP
            mov RDI,R13
            sub RBX,R15
            mov RDX,RBX
            call memchr@PLT

            test RAX,RAX
            jne .L_42be38

            cmp WORD PTR [RSP+86],8
            mov QWORD PTR [RSP+88],RBX
            mov RBX,RBP
            mov RBP,R13
            mov R13,QWORD PTR [RSP+56]
            jbe .L_42bfc8

            lea RSI,QWORD PTR [RIP+.L_448c7e]
            mov ECX,9
            mov RDI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42bfc8

            cmp BYTE PTR [RBX+R12*1-1],47
            je .L_42c0cd

            cmp R15,2
            jle .L_42beb3

            cmp BYTE PTR [RBP],46
            je .L_42c0c3
.L_42beb3:

            mov RSI,R14
            mov R14,QWORD PTR [RSP+16]
            mov RDI,R14
            call .L_43d2d0

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,R12
            mov RSI,RBX
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov R12,R14
            mov QWORD PTR [RSP+128],0
            call .L_431240

            mov RBP,QWORD PTR [RSP+48]
            jmp .L_42bf37

            nop
            nop
            nop
            nop
            nop
.L_42bf00:

            mov BYTE PTR [RAX],0
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,RBP
            call .L_43d170

            test RAX,RAX
            mov RBX,RAX
            je .L_42bf4b

            mov RSI,RAX
            mov RDI,RBP
            call .L_43d530

            lea RDI,QWORD PTR [RBX+72]
            call .L_42e240

            mov RSI,RBX
            mov RDI,R12
            call .L_43d2d0
.L_42bf37:

            mov RDI,QWORD PTR [RSP+112]
            mov ESI,47
            call strrchr@PLT

            test RAX,RAX
            jne .L_42bf00
.L_42bf4b:

            mov RDI,QWORD PTR [RSP+40]
            call .L_42e240

            nop
            nop
            nop
.L_42bf58:

            mov RSI,QWORD PTR [RSP+64]
            add RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_404a20

            jmp .L_42bc59
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bf78:

            lea RDX,QWORD PTR [RAX+RSI*1]
            cmp DWORD PTR [RDX],101010256
            je .L_42bbf7

            cmp DWORD PTR [RDX],101075792
            je .L_42bbf7

            nop
            nop
            nop
            nop
.L_42bf98:

            add RSI,1
            jmp .L_42b9f6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bfa8:

            add RSI,3
            jmp .L_42b9f6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bfb8:

            add RSI,2
            jmp .L_42b9f6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bfc8:

            lea R12,QWORD PTR [R14+72]
            lea RSI,QWORD PTR [RIP+.L_448c7e]
            mov EDX,9
            mov QWORD PTR [R14+80],0
            mov RDI,R12
            call .L_431240

            mov RDX,R15
            mov RSI,RBX
            mov RDI,R12
            call .L_431240

            lea RSI,QWORD PTR [RIP+.L_448c88]
            mov RDI,R12
            call .L_4312c0

            mov RDX,QWORD PTR [RSP+88]
            mov RSI,RBP
            mov RDI,R12
            call .L_431240
.L_42c015:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R14
            call .L_43d2d0

            jmp .L_42bf58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c030:

            movzx EAX,BYTE PTR [RBX+19]
            mov BYTE PTR [R14+131],AL
            jmp .L_42bd34
.L_42c040:

            shr EDX,16
            mov WORD PTR [R14+124],DX
            jmp .L_42bdb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c050:

            xor EDX,EDX
            mov WORD PTR [R14+124],DX
            jmp .L_42bdb0
.L_42c05c:

            lea RDX,QWORD PTR [RIP+.L_4489b8]
            mov ESI,12
            mov RDI,R15
            call .L_432bc0
.L_42c070:

            mov EBX,4294967266
            jmp .L_42b96d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c080:

            mov RCX,R14
            mov QWORD PTR [RSP+112],R14
            sub R12,R14
            mov R9,R14
            xor EBX,EBX
            xor R14D,R14D
            jmp .L_42baff
.L_42c098:

            mov RDI,QWORD PTR [RSP+16]
            xor EDX,EDX
            xor ESI,ESI
            mov R15,QWORD PTR [RSP+8]
            call .L_43d490

            mov QWORD PTR [R13+104],RAX
            jmp .L_42b722
.L_42c0b4:

            xor EDX,EDX
            mov RDI,R15
            call .L_404dc0

            jmp .L_42b866
.L_42c0c3:

            cmp BYTE PTR [RBP+1],95
            jne .L_42beb3
.L_42c0cd:

            lea RDI,QWORD PTR [R14+72]
            mov RSI,RBX
            mov QWORD PTR [R14+80],0
            mov RDX,R12
            call .L_431240

            mov RDI,QWORD PTR [RSP+48]
            mov RSI,R14
            call .L_43d2d0

            jmp .L_42bf58
.L_42c0f6:

            lea RDX,QWORD PTR [RIP+.L_4489e0]
            mov ESI,12
            mov RDI,R15
            xor EAX,EAX
            mov EBX,4294967266
            call .L_432bc0

            jmp .L_42b940
.L_42c116:

            xor EDX,EDX
.L_42c118:

            mov RAX,QWORD PTR [R13+216]
            mov RCX,QWORD PTR [R13+192]
            add QWORD PTR [RSP+8],RAX
            sub R14,RAX
            sub R12,RCX
            setne BL
            and EBX,EDX
            jmp .L_42b911
.L_42c13b:

            mov EDX,1
            jmp .L_42c118
.L_42c142:

            sub RSI,QWORD PTR [RSP+24]
            mov RDI,R15
            call .L_404a20

            jmp .L_42b866
.L_42c154:

            lea RCX,QWORD PTR [RIP+.L_447c02]
            jmp .L_42ba89
.L_42c160:

            lea RDX,QWORD PTR [RIP+.L_448c05]
            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            mov EBX,4294967276
            call .L_432bc0

            jmp .L_42b940
.L_42c180:

            mov R15,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_448900]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967266
            mov RDI,R15
            call .L_432bc0

            jmp .L_42b96d
.L_42c1a5:

            mov R15,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_448c05]
            jmp .L_42bac5
.L_42c1b6:

            mov EBX,0
            cmovle EBX,EAX
            jmp .L_42b940
.L_42c1c3:

            mov RCX,RDI
.L_42c1c6:

            lea RDX,QWORD PTR [RIP+.L_448988]
            jmp .L_42ba90
.L_42c1d2:

            xor EDX,EDX
            jmp .L_42b92b
.L_42c1d9:

            mov R15,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_448768]
            movzx ECX,CX
            mov ESI,84
            xor EAX,EAX
            mov RDI,R15
            call .L_432bc0

            jmp .L_42c070
.L_42c1fc:

            lea RDX,QWORD PTR [RIP+.L_448c1f]
            mov ESI,4294967295
            mov RDI,R15
            xor EAX,EAX
            call .L_432bc0

            mov RSI,-20
            jmp .L_42b897
.L_42c21e:

            lea RDX,QWORD PTR [RIP+.L_448c05]
            mov ESI,84
            mov RDI,R15
            call .L_432bc0

            mov RSI,-20
            jmp .L_42b897
.L_42c23e:

            call __stack_chk_fail@PLT
.L_42c243:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c250:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_42c267:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+160],0
            je .L_42c400
.L_42c28f:

            mov RSI,RBX
            mov RDI,RBP
            call .L_42a0c0

            test EAX,EAX
            mov R12D,EAX
            je .L_42c2d0
.L_42c2a1:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_42c755

            add RSP,56
.L_42c2bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c2d0:

            lea RDX,QWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBP
            call .L_4049d0

            mov R15,RAX
            mov RAX,QWORD PTR [RBX+104]
            movzx EAX,WORD PTR [RAX+126]
            and AX,8
            mov EDX,EAX
            je .L_42c448

            mov RAX,QWORD PTR [RSP+24]
.L_42c2fe:

            test RAX,RAX
            js .L_42c734

            movzx R10D,BYTE PTR [RBX+388]
            test R10B,R10B
            jne .L_42c320

            cmp BYTE PTR [RBX+480],0
            mov RSI,R15
            je .L_42c36e
.L_42c320:

            mov R8,QWORD PTR [RBX+360]
            mov R9,RAX
            mov RSI,QWORD PTR [RBX+344]
            cmp R8,RAX
            jae .L_42c366

            mov RDI,QWORD PTR [RBX+352]
            add RDI,QWORD PTR [RBX+336]
            lea RCX,QWORD PTR [RSI+R8*1]
            sub RDI,RCX
            cmp RAX,RDI
            jb .L_42c5c8

            test DX,DX
            je .L_42c630
.L_42c35d:

            test RDI,RDI
            jne .L_42c6a0
.L_42c366:

            mov RAX,R8
.L_42c369:

            mov QWORD PTR [RSP+24],RAX
.L_42c36e:

            mov DWORD PTR [RBX+184],EAX
            mov RAX,QWORD PTR [RBX+160]
            lea RDI,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+176],RSI
            mov QWORD PTR [RBX+192],0
            xor ESI,ESI
            mov QWORD PTR [RBX+216],0
            mov QWORD PTR [RBX+200],RAX
            mov RAX,QWORD PTR [RBX+168]
            mov DWORD PTR [RBX+208],EAX
            call inflate@PLT

            test EAX,EAX
            je .L_42c477

            cmp EAX,1
            je .L_42c470

            cmp EAX,-4
            je .L_42c5a0

            lea RDX,QWORD PTR [RIP+.L_448c8b]
            mov ECX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_42c2a1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c400:

            mov QWORD PTR [RBX+168],262144
            mov EDI,262144
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+160],RAX
            jne .L_42c28f

            lea RDX,QWORD PTR [RIP+.L_448a08]
            mov ESI,12
            mov RDI,RBP
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_42c2a1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c448:

            mov RCX,QWORD PTR [RBX+112]
            mov RAX,QWORD PTR [RSP+24]
            cmp RCX,RAX
            jge .L_42c2fe

            mov QWORD PTR [RSP+24],RCX
            mov RAX,RCX
            jmp .L_42c2fe
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c470:

            mov BYTE PTR [RBX+154],1
.L_42c477:

            cmp BYTE PTR [RBX+388],0
            mov RDX,QWORD PTR [RBX+192]
            mov RSI,RDX
            mov QWORD PTR [RSP+24],RDX
            jne .L_42c578

            cmp BYTE PTR [RBX+480],0
            jne .L_42c578
.L_42c4a0:

            cmp BYTE PTR [RBX+496],0
            je .L_42c4be

            mov RSI,R15
            lea RDI,QWORD PTR [RBX+488]
            call QWORD PTR [RIP+.L_65ad28]

            mov RSI,QWORD PTR [RSP+24]
.L_42c4be:

            mov RDI,RBP
            call .L_404a20

            mov RAX,QWORD PTR [RSP+24]
            sub QWORD PTR [RBX+112],RAX
            add QWORD PTR [RBX+120],RAX
            mov RAX,QWORD PTR [RBX+216]
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RBX+216]
            add QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RBX+160]
            mov QWORD PTR [R13],RAX
            cmp BYTE PTR [RBX+154],0
            je .L_42c2a1

            cmp BYTE PTR [RBX+496],0
            jne .L_42c680
.L_42c510:

            mov RAX,QWORD PTR [RBX+104]
            test BYTE PTR [RAX+126],8
            je .L_42c2a1

            xor EDX,EDX
            mov ESI,24
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            je .L_42c75a

            cmp BYTE PTR [RAX],80
            je .L_42c6e0
.L_42c53f:

            mov RDX,QWORD PTR [RBX+104]
            mov ESI,DWORD PTR [RAX]
            mov RCX,QWORD PTR [RBX+96]
            test BYTE PTR [RDX+130],1
            mov DWORD PTR [RDX+120],ESI
            jne .L_42c6b0

            mov ESI,DWORD PTR [RAX+4]
            add RCX,12
            mov QWORD PTR [RDX+40],RSI
            mov EAX,DWORD PTR [RAX+8]
            mov QWORD PTR [RDX+48],RAX
            mov QWORD PTR [RBX+96],RCX
            jmp .L_42c2a1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c578:

            sub QWORD PTR [RBX+360],RDX
            jne .L_42c620

            mov RAX,QWORD PTR [RBX+336]
            mov QWORD PTR [RBX+344],RAX
            jmp .L_42c4a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c5a0:

            lea RDX,QWORD PTR [RIP+.L_4489e0]
            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_42c2a1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c5c8:

            test DX,DX
            je .L_42c668
.L_42c5d1:

            test R10B,R10B
            jne .L_42c710

            mov QWORD PTR [RSP+32],R9
            mov RDX,R9
            mov QWORD PTR [RSP+8],R9
            lea RDI,QWORD PTR [RBX+392]
            lea R8,QWORD PTR [RSP+32]
            mov RSI,R15
            call QWORD PTR [RIP+.L_65ac50]

            mov R9,QWORD PTR [RSP+8]
.L_42c601:

            mov RAX,QWORD PTR [RBX+360]
            mov RSI,QWORD PTR [RBX+344]
            add RAX,R9
            mov QWORD PTR [RBX+360],RAX
            jmp .L_42c369
          .byte 0x66
          .byte 0x90
.L_42c620:

            add QWORD PTR [RBX+344],RDX
            jmp .L_42c4a0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c630:

            mov RDX,QWORD PTR [RBX+112]
            test RDX,RDX
            jle .L_42c35d
.L_42c63d:

            lea RAX,QWORD PTR [R8+RDI*1]
            cmp RAX,RDX
            jle .L_42c35d

            cmp R8,RDX
            mov RAX,R8
            jg .L_42c369

            sub RDX,R8
            mov RDI,RDX
            jmp .L_42c35d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c668:

            mov RDX,QWORD PTR [RBX+112]
            mov RDI,RAX
            test RDX,RDX
            jg .L_42c63d

            jmp .L_42c5d1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c680:

            xor ESI,ESI
            mov RDI,RBP
            call .L_429990

            test EAX,EAX
            jne .L_42c6d0

            cmp BYTE PTR [RBX+154],0
            jne .L_42c510

            jmp .L_42c2a1
.L_42c6a0:

            mov R9,RDI
            jmp .L_42c5d1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c6b0:

            mov RSI,QWORD PTR [RAX+4]
            add RCX,20
            mov QWORD PTR [RDX+40],RSI
            mov RAX,QWORD PTR [RAX+12]
            mov QWORD PTR [RDX+48],RAX
            mov QWORD PTR [RBX+96],RCX
            jmp .L_42c2a1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c6d0:

            mov R12D,EAX
            jmp .L_42c2a1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c6e0:

            cmp BYTE PTR [RAX+1],75
            jne .L_42c53f

            cmp BYTE PTR [RAX+2],7
            jne .L_42c53f

            cmp BYTE PTR [RAX+3],8
            jne .L_42c53f

            add RAX,4
            mov QWORD PTR [RBX+96],4
            jmp .L_42c53f
          .byte 0x90
.L_42c710:

            lea RDI,QWORD PTR [RBX+376]
            mov R8,R9
            mov RDX,R9
            mov RSI,R15
            mov QWORD PTR [RSP+8],R9
            call .L_429900

            mov R9,QWORD PTR [RSP+8]
            jmp .L_42c601
.L_42c734:

            lea RDX,QWORD PTR [RIP+.L_448ca9]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_42c2a1
.L_42c755:

            call __stack_chk_fail@PLT
.L_42c75a:

            lea RDX,QWORD PTR [RIP+.L_448a28]
            mov ESI,84
            mov RDI,RBP
            mov R12D,4294967266
            call .L_432bc0

            jmp .L_42c2a1
.L_42c779:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c780:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,40
.L_42c78d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+96]
            call .L_404a20

            test RAX,RAX
            mov QWORD PTR [RBX+96],0
            js .L_42c822

            cmp BYTE PTR [RBX+154],0
            jne .L_42c7eb

            mov RAX,QWORD PTR [RBX+104]
            movzx EDX,WORD PTR [RAX+126]
            test DL,8
            je .L_42c7da

            cmp QWORD PTR [RAX+40],0
            jle .L_42c830
.L_42c7da:

            mov RSI,QWORD PTR [RBX+112]
            mov RDI,R12
            call .L_404a20

            test RAX,RAX
            js .L_42c822
.L_42c7eb:

            xor EAX,EAX
.L_42c7ed:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42c9c9

            add RSP,40
.L_42c805:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42c80c:

            lea RDX,QWORD PTR [RIP+.L_448b7b]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_42c822:

            mov EAX,4294967266
            jmp .L_42c7ed
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c830:

            cmp BYTE PTR [RBX+328],0
            je .L_42c8ce

            and EDX,64
            mov DWORD PTR [RBX+48],1
            mov RDI,R12
            jne .L_42c9a2

            cmp BYTE PTR [RAX+128],99
            je .L_42c9ac

            call .L_42a340
.L_42c862:

            test EAX,EAX
            jne .L_42c7ed

            mov RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RBX+328],0
            cmp BYTE PTR [RAX+128],8
            jne .L_42c8d7

            cmp BYTE PTR [RBX+154],0
            jne .L_42c7eb
.L_42c887:

            lea RBP,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c898:

            mov RDX,RBP
            mov RSI,R13
            mov RDI,R12
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            call .L_42c250

            test EAX,EAX
            jne .L_42c7ed

            cmp BYTE PTR [RBX+154],0
            je .L_42c898

            jmp .L_42c7eb
.L_42c8ce:

            cmp BYTE PTR [RAX+128],8
            je .L_42c887
.L_42c8d7:

            lea RBP,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
.L_42c8e0:

            mov RDX,RBP
            mov ESI,16
            mov RDI,R12
            call .L_4049d0

            mov RDX,QWORD PTR [RSP+16]
            cmp RDX,15
            jle .L_42c80c

            lea RCX,QWORD PTR [RAX+RDX*1-16]
            mov RSI,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c910:

            cmp RSI,RCX
            ja .L_42c936
.L_42c915:

            movzx EDX,BYTE PTR [RSI+3]
            cmp DL,80
            je .L_42c948

            cmp DL,75
            je .L_42c950

            cmp DL,7
            je .L_42c960

            cmp DL,8
            je .L_42c970
.L_42c92d:

            add RSI,4
            cmp RSI,RCX
            jbe .L_42c915
.L_42c936:

            sub RSI,RAX
            mov RDI,R12
            call .L_404a20

            jmp .L_42c8e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c948:

            add RSI,3
            jmp .L_42c910
          .byte 0x66
          .byte 0x90
.L_42c950:

            add RSI,2
            jmp .L_42c910
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c960:

            add RSI,1
            jmp .L_42c910
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c970:

            cmp BYTE PTR [RSI+2],7
            jne .L_42c92d

            cmp BYTE PTR [RSI+1],75
            jne .L_42c92d

            cmp BYTE PTR [RSI],80
            jne .L_42c92d

            sub RSI,RAX
            mov RAX,QWORD PTR [RBX+104]
            test BYTE PTR [RAX+130],1
            je .L_42c9b6

            add RSI,24
            mov RDI,R12
            call .L_404a20

            jmp .L_42c7eb
.L_42c9a2:

            call .L_4293b0

            jmp .L_42c862
.L_42c9ac:

            call .L_429ce0

            jmp .L_42c862
.L_42c9b6:

            add RSI,16
            mov RDI,R12
            call .L_404a20

            xor EAX,EAX
            jmp .L_42c7ed
.L_42c9c9:

            call __stack_chk_fail@PLT
.L_42c9ce:

            nop
            nop
.L_42c9d0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,56
.L_42c9e7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp DWORD PTR [RBX+48],-1
            jne .L_42ca0e

            mov DWORD PTR [RBX+48],0
.L_42ca0e:

            mov RAX,QWORD PTR [RBX+128]
            mov QWORD PTR [RCX],RAX
            mov QWORD PTR [R12],0
            mov EAX,1
            mov QWORD PTR [R13],0
            cmp BYTE PTR [RBX+154],0
            jne .L_42ca4a

            mov RDX,QWORD PTR [RBX+104]
            movzx EDX,WORD PTR [RDX+124]
            and DX,61440
            cmp DX,32768
            je .L_42ca70
.L_42ca4a:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42cf75

            add RSP,56
.L_42ca62:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ca70:

            mov RSI,QWORD PTR [RBX+96]
            mov RDI,RBP
            call .L_404a20

            cmp BYTE PTR [RBX+328],0
            mov QWORD PTR [RBX+96],0
            je .L_42cac2

            mov RAX,QWORD PTR [RBX+104]
            mov DWORD PTR [RBX+48],1
            mov RDI,RBP
            test BYTE PTR [RAX+126],64
            jne .L_42cc10

            cmp BYTE PTR [RAX+128],99
            je .L_42ce20

            call .L_42a340
.L_42cab7:

            test EAX,EAX
            jne .L_42ca4a

            mov BYTE PTR [RBX+328],0
.L_42cac2:

            mov RAX,QWORD PTR [RBX+104]
            movzx ECX,BYTE PTR [RAX+128]
            test CL,CL
            je .L_42cc20

            cmp CL,8
            jne .L_42cbb0

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call .L_42c250

            test EAX,EAX
            jne .L_42ca4a

            nop
            nop
            nop
            nop
.L_42caf8:

            mov RDX,QWORD PTR [R12]
            test RDX,RDX
            je .L_42cb1b

            mov EDX,EDX
            mov RDI,QWORD PTR [RBX+136]
            mov RSI,QWORD PTR [R13]
            call QWORD PTR [RBX+144]

            mov QWORD PTR [RBX+136],RAX
.L_42cb1b:

            xor EAX,EAX
            cmp BYTE PTR [RBX+154],0
            je .L_42ca4a

            mov RDX,QWORD PTR [RBX+104]
            mov RCX,QWORD PTR [RBX+120]
            mov R8,QWORD PTR [RDX+40]
            cmp R8,RCX
            jne .L_42cf59

            mov R8,QWORD PTR [RDX+48]
            mov RCX,QWORD PTR [RBX+128]
            cmp R8D,ECX
            jne .L_42cf9a

            cmp BYTE PTR [RBX+496],0
            je .L_42cb69

            cmp DWORD PTR [RDX+132],2
            je .L_42ca4a
.L_42cb69:

            mov R8D,DWORD PTR [RDX+120]
            mov RCX,QWORD PTR [RBX+136]
            xor EAX,EAX
            cmp R8,RCX
            je .L_42ca4a

            cmp BYTE PTR [RBX+152],0
            jne .L_42ca4a

            lea RDX,QWORD PTR [RIP+.L_448ad0]
            or ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_42ca4a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cbb0:

            lea RDX,QWORD PTR [RIP+.L_65aad0]
            xor ESI,ESI
            xor EAX,EAX
            jmp .L_42cbd2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42cbc0:

            add EAX,1
            cmp EAX,23
            je .L_42ce30

            mov ESI,DWORD PTR [RDX]
            add RDX,16
.L_42cbd2:

            cmp ECX,ESI
            jne .L_42cbc0

            cdqe 
            lea RDX,QWORD PTR [RIP+.L_65aac0]
            shl RAX,4
            mov RCX,QWORD PTR [RDX+RAX*1+8]
.L_42cbe8:

            lea RDX,QWORD PTR [RIP+.L_448960]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_42ca4a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cc10:

            call .L_4293b0

            jmp .L_42cab7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cc20:

            mov RAX,QWORD PTR [RBP+2472]
            mov R14,QWORD PTR [RAX]
            mov RAX,QWORD PTR [R14+104]
            test BYTE PTR [RAX+126],8
            je .L_42cde0

            cmp BYTE PTR [R14+496],1
            lea RDX,QWORD PTR [RSP+24]
            mov RDI,RBP
            sbb RSI,RSI
            and RSI,-10
            add RSI,34
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RSI
            call .L_4049d0

            mov RSI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP]
            mov R15,RAX
            cmp RCX,RSI
            jg .L_42cf7a

            movzx R8D,BYTE PTR [R14+496]
            lea RAX,QWORD PTR [RAX+10]
            test R8B,R8B
            cmove RAX,R15
            cmp BYTE PTR [RAX],80
            mov RDX,RAX
            je .L_42ce77
.L_42cc95:

            lea RAX,QWORD PTR [RDX+1]
            lea RCX,QWORD PTR [R15+RSI*1-4]
            nop
            nop
.L_42cca0:

            cmp RAX,RCX
            jae .L_42ccd6
.L_42cca5:

            movzx EDX,BYTE PTR [RAX+3]
            cmp DL,80
            je .L_42cd78

            cmp DL,75
            je .L_42cd88

            cmp DL,7
            je .L_42cd98

            cmp DL,8
            je .L_42cda8
.L_42cccd:

            add RAX,4
            cmp RAX,RCX
            jb .L_42cca5
.L_42ccd6:

            sub RAX,R15
            mov QWORD PTR [RSP+24],RAX
.L_42ccde:

            cmp BYTE PTR [R14+388],0
            mov R9,RAX
            jne .L_42ce40

            cmp BYTE PTR [R14+480],0
            je .L_42cd54

            mov RAX,QWORD PTR [R14+352]
            lea RDI,QWORD PTR [R14+488]
            mov RSI,R15
            cmp R9,RAX
            cmova R9,RAX
            mov RDX,R9
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP],R9
            call QWORD PTR [RIP+.L_65ad28]

            mov R9,QWORD PTR [RSP]
            mov RCX,QWORD PTR [R14+336]
            lea RDI,QWORD PTR [R14+392]
            lea R8,QWORD PTR [RSP+32]
            mov RSI,R15
            mov RDX,R9
            call QWORD PTR [RIP+.L_65ac50]

            mov R9,QWORD PTR [RSP]
.L_42cd4a:

            mov R15,QWORD PTR [R14+336]
            mov RAX,R9
.L_42cd54:

            mov QWORD PTR [R12],R9
            sub QWORD PTR [R14+112],RAX
            add QWORD PTR [R14+128],RAX
            add QWORD PTR [R14+120],RAX
            add QWORD PTR [R14+96],R9
            mov QWORD PTR [R13],R15
            jmp .L_42caf8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42cd78:

            add RAX,3
            jmp .L_42cca0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cd88:

            add RAX,2
            jmp .L_42cca0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cd98:

            add RAX,1
            jmp .L_42cca0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cda8:

            cmp BYTE PTR [RAX+2],7
            jne .L_42cccd

            cmp BYTE PTR [RAX+1],75
            jne .L_42cccd

            cmp BYTE PTR [RAX],80
            jne .L_42cccd

            test R8B,R8B
            je .L_42ccd6

            sub RAX,10
            jmp .L_42ccd6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cde0:

            cmp QWORD PTR [R14+112],0
            jne .L_42cf20

            cmp BYTE PTR [R14+496],0
            mov BYTE PTR [R14+154],1
            je .L_42caf8

            xor ESI,ESI
            mov RDI,RBP
            call .L_429990

            test EAX,EAX
            jne .L_42ca4a

            jmp .L_42caf8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ce20:

            call .L_429ce0

            jmp .L_42cab7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ce30:

            lea RCX,QWORD PTR [RIP+.L_447c02]
            jmp .L_42cbe8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ce40:

            mov RAX,QWORD PTR [R14+352]
            mov RCX,QWORD PTR [R14+336]
            lea RDI,QWORD PTR [R14+376]
            mov RSI,R15
            cmp R9,RAX
            cmova R9,RAX
            mov R8,R9
            mov RDX,R9
            mov QWORD PTR [RSP],R9
            call .L_429900

            mov R9,QWORD PTR [RSP]
            jmp .L_42cd4a
.L_42ce77:

            cmp BYTE PTR [RAX+1],75
            jne .L_42cc95

            cmp BYTE PTR [RAX+2],7
            jne .L_42cc95

            cmp BYTE PTR [RAX+3],8
            jne .L_42cc95

            mov ECX,DWORD PTR [RAX+4]
            cmp RCX,QWORD PTR [R14+136]
            mov RAX,RCX
            je .L_42cfb8

            cmp BYTE PTR [R14+152],0
            jne .L_42cfb8

            test R8B,R8B
            je .L_42cc95

            mov RCX,QWORD PTR [R14+104]
            cmp DWORD PTR [RCX+132],2
            jne .L_42cc95
.L_42ced0:

            test BYTE PTR [RCX+130],1
            mov DWORD PTR [RCX+120],EAX
            je .L_42cfd9

            lea RDI,QWORD PTR [RDX+8]
            call .L_429150

            lea RDI,QWORD PTR [RDX+16]
            mov QWORD PTR [RCX+40],RAX
            call .L_429150

            mov QWORD PTR [RCX+48],RAX
            mov QWORD PTR [R14+96],24
.L_42cf02:

            test R8B,R8B
            jne .L_42cfc1
.L_42cf0b:

            mov BYTE PTR [R14+154],1
            jmp .L_42caf8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cf20:

            lea RDX,QWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBP
            call .L_4049d0

            mov R15,RAX
            mov RAX,QWORD PTR [RSP+24]
            test RAX,RAX
            jle .L_42cf7a

            mov RDX,QWORD PTR [R14+112]
            cmp RAX,RDX
            jle .L_42ccde

            mov QWORD PTR [RSP+24],RDX
            mov RAX,RDX
            jmp .L_42ccde
.L_42cf59:

            lea RDX,QWORD PTR [RIP+.L_448a50]
            or ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_42ca4a
.L_42cf75:

            call __stack_chk_fail@PLT
.L_42cf7a:

            lea RDX,QWORD PTR [RIP+.L_448b7b]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42ca4a
.L_42cf9a:

            lea RDX,QWORD PTR [RIP+.L_448a90]
            xor EAX,EAX
            or ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967276
            jmp .L_42ca4a
.L_42cfb8:

            mov RCX,QWORD PTR [R14+104]
            jmp .L_42ced0
.L_42cfc1:

            mov RSI,R15
            mov RDI,RBP
            call .L_429990

            test EAX,EAX
            jne .L_42ca4a

            jmp .L_42cf0b
.L_42cfd9:

            mov EAX,DWORD PTR [RDX+8]
            mov QWORD PTR [RCX+40],RAX
            mov EAX,DWORD PTR [RDX+12]
            mov QWORD PTR [RCX+48],RAX
            mov QWORD PTR [R14+96],16
            jmp .L_42cf02
.L_42cff4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d000:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_448af8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_42d01a:

            call .L_436df0

            cmp EAX,-30
            je .L_42d0c5

            mov ESI,552
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_42d0cc

            mov DWORD PTR [RAX+324],0
            mov DWORD PTR [RAX+48],4294967295
            lea RAX,QWORD PTR [RIP+.L_429980]
            lea R9,QWORD PTR [RIP+.L_42b480]
            lea R8,QWORD PTR [RIP+.L_429aa0]
            lea RCX,QWORD PTR [RIP+.L_429300]
            mov QWORD PTR [RBX+144],RAX
            lea RAX,QWORD PTR [RIP+.L_429170]
            lea RDX,QWORD PTR [RIP+.L_45054d]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
.L_42d08c:

            lea RAX,QWORD PTR [RIP+.L_4291a0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_429200]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42c780]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42c9d0]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_42d0c5

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_42d0c5:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_42d0cc:

            lea RDX,QWORD PTR [RIP+.L_448cc1]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42d0c5
.L_42d0e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d0f0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_448b18]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_42d10a:

            call .L_436df0

            cmp EAX,-30
            je .L_42d1a7

            mov ESI,552
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_42d1ae

            mov DWORD PTR [RAX+48],4294967295
            lea RAX,QWORD PTR [RIP+.L_429980]
            lea R9,QWORD PTR [RIP+.L_42b6a0]
            lea R8,QWORD PTR [RIP+.L_429aa0]
            lea RCX,QWORD PTR [RIP+.L_42a150]
            lea RDX,QWORD PTR [RIP+.L_45054d]
            mov QWORD PTR [RBX+144],RAX
            lea RAX,QWORD PTR [RIP+.L_429170]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
.L_42d16e:

            lea RAX,QWORD PTR [RIP+.L_42a560]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_429200]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4291e0]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42c9d0]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_42d1a7

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_42d1a7:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_42d1ae:

            lea RDX,QWORD PTR [RIP+.L_448cc1]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_42d1a7
.L_42d1cb:

            nop
            nop
            nop
            nop
            nop
.L_42d1d0:

            push RBX
            mov RBX,RDI
            call .L_42d000

            test EAX,EAX
            je .L_42d1e0

            pop RBX
            ret 
          .byte 0x90
.L_42d1e0:

            mov RDI,RBX
            pop RBX
            jmp .L_42d0f0
.L_42d1e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d1f0:

            cmp EDX,1114111
            ja .L_42d230

            cmp EDX,127
            jbe .L_42d268

            cmp EDX,2047
            ja .L_42d277

            xor EAX,EAX
            cmp RSI,1
            jbe .L_42d227

            mov EAX,EDX
            and EDX,63
            shr EAX,6
            or EDX,4294967168
            or EAX,4294967232
            mov BYTE PTR [RDI+1],DL
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RDI+2]
.L_42d224:

            sub RAX,RDI
.L_42d227:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d230:

            mov EDX,65533
.L_42d235:

            xor EAX,EAX
            cmp RSI,2
            jbe .L_42d227

            mov EAX,EDX
            shr EAX,12
            or EAX,4294967264
            mov BYTE PTR [RDI],AL
            mov EAX,EDX
            and EDX,63
            shr EAX,6
            or EDX,4294967168
            and EAX,63
            mov BYTE PTR [RDI+2],DL
            or EAX,4294967168
            mov BYTE PTR [RDI+1],AL
            lea RAX,QWORD PTR [RDI+3]
            jmp .L_42d224
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d268:

            xor EAX,EAX
            test RSI,RSI
            je .L_42d227

            lea RAX,QWORD PTR [RDI+1]
            mov BYTE PTR [RDI],DL
            jmp .L_42d224
.L_42d277:

            cmp EDX,65535
            jbe .L_42d235

            xor EAX,EAX
            cmp RSI,3
            jbe .L_42d227

            mov EAX,EDX
            shr EAX,18
            or EAX,4294967280
            mov BYTE PTR [RDI],AL
            mov EAX,EDX
            shr EAX,12
            and EAX,63
            or EAX,4294967168
            mov BYTE PTR [RDI+1],AL
            mov EAX,EDX
            and EDX,63
            shr EAX,6
            or EDX,4294967168
            and EAX,63
            mov BYTE PTR [RDI+3],DL
            or EAX,4294967168
            mov BYTE PTR [RDI+2],AL
            lea RAX,QWORD PTR [RDI+4]
            jmp .L_42d224
.L_42d2bf:

            nop
.L_42d2c0:

            mov EDX,417
            mov R8D,930
            xor ECX,ECX
            mov EAX,930
            lea R9,QWORD PTR [RIP+.L_44c8a0]
            jmp .L_42d310
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d2e0:

            jb .L_42d2f4

            movsxd RDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [R9+RDX*4]
            cmp DWORD PTR [RDX+4],ESI
            jb .L_42d316

            jbe .L_42d321
.L_42d2f4:

            lea R8D,DWORD PTR [RAX-1]
            cmp ECX,R8D
            jg .L_42d31e
.L_42d2fd:

            lea EAX,DWORD PTR [RCX+R8*1]
            mov EDX,EAX
            sar EDX,1
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov EDX,DWORD PTR [R9+RDX*4]
.L_42d310:

            sar EAX,1
            cmp EDI,EDX
            jbe .L_42d2e0
.L_42d316:

            lea ECX,DWORD PTR [RAX+1]
            cmp ECX,R8D
            jle .L_42d2fd
.L_42d31e:

            xor EAX,EAX
            ret 
.L_42d321:

            mov EAX,DWORD PTR [RDX+8]
            ret 
.L_42d325:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d330:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+72],0
            call free@PLT

            mov RDI,QWORD PTR [RBX+40]
            mov QWORD PTR [RBX+56],0
            cmp RDI,-1
            je .L_42d376

            call iconv_close@PLT
.L_42d376:

            mov RDI,QWORD PTR [RBX+48]
            cmp RDI,-1
            je .L_42d385

            call iconv_close@PLT
.L_42d385:

            mov RDI,RBX
            pop RBX

            jmp free@PLT
.L_42d38e:

            nop
            nop
.L_42d390:

            movzx ECX,BYTE PTR [RSI]
            xor EAX,EAX
            test CL,CL
            je .L_42d407

            lea R8,QWORD PTR [RIP+.L_448e40]
            movzx EAX,CL
            mov R9,RAX
            movsx EAX,BYTE PTR [R8+RAX*1]
            cmp EAX,EDX
            jle .L_42d410

            cmp EDX,1
            jle .L_42d3fd

            movsx ECX,BYTE PTR [RSI+1]
            mov EAX,4294967295
            and ECX,192
            add ECX,-128
            jne .L_42d401

            lea R9D,DWORD PTR [RDX-2]
            mov ECX,2
            add R9,2
            jmp .L_42d3f6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d3e0:

            movsx R8D,BYTE PTR [RSI+RCX*1]
            add RCX,1
            and R8D,192
            add R8D,-128
            jne .L_42d3ff
.L_42d3f6:

            cmp RCX,R9
            mov EAX,ECX
            jne .L_42d3e0
.L_42d3fd:

            mov EAX,EDX
.L_42d3ff:

            neg EAX
.L_42d401:

            mov DWORD PTR [RDI],65533
.L_42d407:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d410:

            cmp AL,2
            je .L_42d450

            jle .L_42d440

            cmp AL,3
            je .L_42d530

            cmp AL,4
            jne .L_42d480

            movsx EDX,BYTE PTR [RSI+1]
            mov ECX,EDX
            and ECX,192
            add ECX,-128
            je .L_42d580
.L_42d437:

            mov EAX,4294967295
            jmp .L_42d401
          .byte 0x66
          .byte 0x90
.L_42d440:

            cmp AL,1
            jne .L_42d480

            and ECX,127
            mov EAX,1
            mov DWORD PTR [RDI],ECX
            ret 
          .byte 0x90
.L_42d450:

            movzx EDX,BYTE PTR [RSI+1]
            mov EAX,4294967295
            mov ECX,EDX
            and ECX,192
            add ECX,-128
            jne .L_42d401

            shl R9D,6
            and EDX,63
            mov EAX,2
            and R9D,1984
            or EDX,R9D
            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0x90
.L_42d480:

            lea ECX,DWORD PTR [R9-192]
            mov EAX,2
            cmp ECX,1
            jbe .L_42d4d0

            lea ECX,DWORD PTR [R9-245]
            mov EAX,4
            cmp ECX,2
            jbe .L_42d4d0

            lea ECX,DWORD PTR [R9-248]
            mov EAX,5
            cmp ECX,3
            jbe .L_42d4d0

            sub R9D,252
            cmp R9D,2
            sbb EAX,EAX
            and EAX,5
            add EAX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d4d0:

            cmp EDX,EAX
            cmovg EDX,EAX
            cmp EDX,1
            jle .L_42d3fd

            movsx ECX,BYTE PTR [RSI+1]
            mov EAX,4294967295
            and ECX,192
            add ECX,-128
            jne .L_42d401

            lea R9D,DWORD PTR [RDX-2]
            mov ECX,2
            add R9,2
            jmp .L_42d522
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d508:

            movsx R8D,BYTE PTR [RSI+RCX*1]
            add RCX,1
            and R8D,192
            add R8D,-128
            jne .L_42d3ff
.L_42d522:

            cmp RCX,R9
            mov EAX,ECX
            jne .L_42d508

            mov EAX,EDX
            jmp .L_42d3ff
.L_42d530:

            movsx EDX,BYTE PTR [RSI+1]
            mov ECX,EDX
            and ECX,192
            add ECX,-128
            jne .L_42d437

            movzx ECX,BYTE PTR [RSI+2]
            mov ESI,ECX
            and ESI,192
            add ESI,-128
            jne .L_42d594

            shl EDX,6
            and ECX,63
            shl R9D,12
            and EDX,4032
            or EDX,ECX
            movzx ECX,R9W
            or EDX,ECX
            cmp EDX,2047
            jle .L_42d59e
.L_42d576:

            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d580:

            movsx ECX,BYTE PTR [RSI+2]
            mov R8D,ECX
            and R8D,192
            add R8D,-128
            je .L_42d5a8
.L_42d594:

            mov EAX,4294967294
            jmp .L_42d401
.L_42d59e:

            mov EAX,4294967293
            jmp .L_42d401
.L_42d5a8:

            movzx ESI,BYTE PTR [RSI+3]
            mov R8D,ESI
            and R8D,192
            add R8D,-128
            jne .L_42d59e

            shl EDX,12
            shl ECX,6
            and ESI,63
            and ECX,4032
            and EDX,258048
            or EDX,ECX
            mov ECX,R9D
            shl ECX,18
            or EDX,ESI
            and ECX,1835008
            or EDX,ECX
            lea ECX,DWORD PTR [RDX-65536]
            cmp ECX,1048575
            jbe .L_42d576

            mov EAX,4294967292
            jmp .L_42d401
.L_42d5fb:

            nop
            nop
            nop
            nop
            nop
.L_42d600:

            push RBX
            xor ECX,ECX
            mov R11,RDI
            sub RSP,16
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDX,RDX
            mov DWORD PTR [RSP],0
            jne .L_42d648
.L_42d626:

            mov DWORD PTR [R11],ECX
.L_42d629:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42d703

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d648:

            mov RDI,RSP
            mov RBX,RSI
            mov R10,RDX
            call .L_42d390

            cmp EAX,3
            mov ECX,DWORD PTR [RSP]
            jne .L_42d626

            lea EDX,DWORD PTR [RCX-55296]
            cmp EDX,1023
            ja .L_42d690

            lea RDX,QWORD PTR [R10-3]
            mov DWORD PTR [RSP+4],0
            cmp RDX,2
            ja .L_42d6b0
.L_42d67e:

            mov DWORD PTR [R11],65533
            mov EAX,4294967293
            jmp .L_42d629
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d690:

            lea EDX,DWORD PTR [RCX-56320]
            cmp EDX,1023
            ja .L_42d626

            mov DWORD PTR [R11],65533
            mov EAX,4294967293
            jmp .L_42d629
          .byte 0x90
.L_42d6b0:

            lea RSI,QWORD PTR [RBX+3]
            lea RDI,QWORD PTR [RSP+4]
            call .L_42d390

            cmp EAX,3
            je .L_42d6d6

            cdq 
            mov DWORD PTR [R11],65533
            xor EAX,EDX
            sub EDX,EAX
            mov EAX,EDX
            jmp .L_42d629
.L_42d6d6:

            mov EDX,DWORD PTR [RSP+4]
            lea EAX,DWORD PTR [RDX-56320]
            cmp EAX,1023
            ja .L_42d67e

            mov EAX,DWORD PTR [RSP]
            sub EAX,55296
            shl EAX,10
            lea ECX,DWORD PTR [RDX+RAX*1+9216]
            mov EAX,6
            jmp .L_42d626
.L_42d703:

            call __stack_chk_fail@PLT
.L_42d708:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d710:

            movzx EAX,WORD PTR [RSI]
            mov R8D,EAX
            rol R8W,8
            test ECX,ECX
            movzx R8D,R8W
            cmove R8D,EAX
            lea EAX,DWORD PTR [R8-55296]
            cmp EAX,1023
            ja .L_42d778

            cmp RDX,3
            jbe .L_42d77f

            movzx ESI,WORD PTR [RSI+2]
            mov EDX,ESI
            rol DX,8
            test ECX,ECX
            movzx R8D,DX
            movzx EDX,SI
            cmovne EDX,R8D
            lea ECX,DWORD PTR [RDX-56320]
            cmp ECX,1023
            ja .L_42d77f

            shl EAX,10
            lea R8D,DWORD PTR [RDX+RAX*1+9216]
            mov EAX,4
.L_42d76e:

            mov DWORD PTR [RDI],R8D
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d778:

            cmp EAX,2047
            ja .L_42d790
.L_42d77f:

            mov DWORD PTR [RDI],65533
            mov EAX,4294967294
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d790:

            mov EAX,2
            jmp .L_42d76e
.L_42d797:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d7a0:

            test RDX,RDX
            je .L_42d7b8

            cmp RDX,1
            je .L_42d7c0

            xor ECX,ECX
            jmp .L_42d710
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d7b8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d7c0:

            mov DWORD PTR [RDI],65533
            mov EAX,4294967295
            ret 
.L_42d7cc:

            nop
            nop
            nop
            nop
.L_42d7d0:

            test RDX,RDX
            je .L_42d7e8

            cmp RDX,1
            je .L_42d7f0

            mov ECX,1
            jmp .L_42d710
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d7e8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d7f0:

            mov DWORD PTR [RDI],65533
            mov EAX,4294967295
            ret 
.L_42d7fc:

            nop
            nop
            nop
            nop
.L_42d800:

            xor EAX,EAX
            cmp EDX,65535
            jbe .L_42d818

            cmp RSI,3
            ja .L_42d830
.L_42d810:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d818:

            cmp RSI,1
            jbe .L_42d810

            mov BYTE PTR [RDI],DH
            mov BYTE PTR [RDI+1],DL
            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d830:

            sub EDX,65536
            mov EAX,EDX
            and DX,1023
            shr EAX,10
            sub DX,9216
            and AX,1023
            mov BYTE PTR [RDI+3],DL
            sub AX,10240
            mov ECX,EAX
            mov BYTE PTR [RDI+1],AL
            mov EAX,EDX
            shr AX,8
            shr CX,8
            mov BYTE PTR [RDI+2],AL
            mov BYTE PTR [RDI],CL
            mov EAX,4
            ret 
.L_42d86a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42d870:

            xor EAX,EAX
            cmp EDX,65535
            jbe .L_42d888

            cmp RSI,3
            ja .L_42d8a0
.L_42d880:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d888:

            cmp RSI,1
            jbe .L_42d880

            mov BYTE PTR [RDI],DL
            mov BYTE PTR [RDI+1],DH
            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d8a0:

            sub EDX,65536
            mov EAX,EDX
            and DX,1023
            shr EAX,10
            sub DX,9216
            and AX,1023
            mov BYTE PTR [RDI+2],DL
            shr DX,8
            sub AX,10240
            mov BYTE PTR [RDI+3],DL
            mov BYTE PTR [RDI],AL
            shr AX,8
            mov BYTE PTR [RDI+1],AL
            mov EAX,4
            ret 
.L_42d8d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d8e0:

            mov EAX,DWORD PTR [RDI+36]
            mov DWORD PTR [RDI+96],0
            test AL,16
            jne .L_42d970

            test AH,20
            je .L_42d920

            test AH,2
            jne .L_42d9e0

            cmp QWORD PTR [RDI+40],-1
            je .L_42db50

            lea RAX,QWORD PTR [RIP+.L_430ae0]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0x66
          .byte 0x90
.L_42d920:

            test AH,40
            je .L_42d988

            test AL,128
            je .L_42daa8

            lea RCX,QWORD PTR [RIP+.L_42fc40]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RCX
.L_42d93f:

            test AH,1
            je .L_42da78

            test AL,192
            jne .L_42da38

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_42db9d

            lea EDX,DWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RIP+.L_430dd0]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RCX
            ret 
.L_42d970:

            lea RAX,QWORD PTR [RIP+.L_4310d0]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d988:

            mov EDX,EAX
            and EDX,512
            je .L_42da40

            test AL,128
            je .L_42dad0

            lea RCX,QWORD PTR [RIP+.L_42fc40]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RCX
.L_42d9b0:

            test AH,1
            je .L_42d9f8

            test AL,192
            jne .L_42da38

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_42db9d

            lea EDX,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_42e470]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d9e0:

            lea RAX,QWORD PTR [RIP+.L_430dd0]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d9f8:

            cmp QWORD PTR [RDI+40],-1
            je .L_42db80

            mov EDX,DWORD PTR [RDI+96]
            cmp EDX,1
            jg .L_42db9d

            lea ECX,DWORD PTR [RDX+1]
.L_42da12:

            lea R8,QWORD PTR [RIP+.L_430ae0]
            movsxd RSI,EDX
            mov DWORD PTR [RDI+96],ECX
            mov QWORD PTR [RDI+RSI*8+80],R8
            mov ESI,EAX
            and ESI,258
            cmp ESI,258
            je .L_42daf0
.L_42da38:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_42da40:

            cmp QWORD PTR [RDI+40],-1
            mov ECX,1
            jne .L_42da12

            movabs RAX,21474836479
            test QWORD PTR [RDI+32],RAX
            je .L_42db44

            xor EAX,EAX
.L_42da62:

            lea EDX,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_431310]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42da78:

            cmp QWORD PTR [RDI+40],-1
            je .L_42db20

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_42db9d

            lea EDX,DWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RIP+.L_430ae0]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RCX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42daa8:

            test AL,64
            je .L_42d93f

            lea RSI,QWORD PTR [RIP+.L_42e830]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RSI
            jmp .L_42d93f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dad0:

            test AL,64
            je .L_42d9b0

            lea RCX,QWORD PTR [RIP+.L_42e830]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RCX
            jmp .L_42d9b0
          .byte 0x90
.L_42daf0:

            test AL,128
            je .L_42da38

            cmp ECX,2
            je .L_42db9d

            lea RAX,QWORD PTR [RIP+.L_42fc40]
            add EDX,2
            movsxd RCX,ECX
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RCX*8+80],RAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42db20:

            mov EDX,EAX
            and EDX,2052
            cmp EDX,2052
            je .L_42dbb0

            and EAX,8196
            cmp EAX,8196
            je .L_42dbcc
.L_42db44:

            mov DWORD PTR [RDI+96],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42db50:

            test AL,4
            je .L_42da38

            test AH,4
            mov DWORD PTR [RDI+96],1
            je .L_42db70

            lea RAX,QWORD PTR [RIP+.L_430ad0]
            mov QWORD PTR [RDI+80],RAX
            ret 
.L_42db70:

            lea RAX,QWORD PTR [RIP+.L_430ac0]
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42db80:

            movabs RAX,21474836479
            test QWORD PTR [RDI+32],RAX
            je .L_42db44

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jle .L_42da62
.L_42db9d:

            sub RSP,8
.L_42dba1:

            call .L_402d90

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dbb0:

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_42db9d

            lea EDX,DWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RIP+.L_42e820]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RCX
            ret 
.L_42dbcc:

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_42db9d

            lea EDX,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_42e810]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RSI
            ret 
.L_42dbe8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dbf0:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_42dbf8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call strlen@PLT

            cmp RAX,15
            ja .L_42dd28

            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_42dd48

            mov R9,RSP
            mov RCX,RBX
            mov RDX,R9
            nop
            nop
            nop
            nop
            nop
.L_42dc30:

            lea R8D,DWORD PTR [RAX-97]
            lea EDI,DWORD PTR [RAX-32]
            add RCX,1
            cmp R8B,26
            cmovb EAX,EDI
            add RDX,1
            mov BYTE PTR [RDX-1],AL
            movzx EAX,BYTE PTR [RCX]
            test AL,AL
            jne .L_42dc30
.L_42dc50:

            lea RAX,QWORD PTR [RIP+.L_447012]
            mov BYTE PTR [RDX],0
            mov ECX,6
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            lea RDI,QWORD PTR [RIP+.L_448d97]
            mov ECX,5
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            lea RAX,QWORD PTR [RIP+.L_445293]
            mov ECX,9
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            lea RDI,QWORD PTR [RIP+.L_448d9c]
            mov ECX,8
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            lea RAX,QWORD PTR [RIP+.L_448d8e]
            mov ECX,9
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            lea RDI,QWORD PTR [RIP+.L_448da4]
            mov ECX,8
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            lea RAX,QWORD PTR [RIP+.L_448d88]
            mov ECX,6
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42dd2b

            nop
            nop
            nop
            nop
.L_42dd28:

            mov RAX,RBX
.L_42dd2b:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42dd53

            add RSP,32
.L_42dd3f:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dd48:

            mov R9,RSP
            mov RDX,R9
            jmp .L_42dc50
.L_42dd53:

            call __stack_chk_fail@PLT
.L_42dd58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dd60:

            push R15
            push R14
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDI
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,40
.L_42dd7a:

            test RDI,RDI
            je .L_42e10b

            mov R15,QWORD PTR [RDI+104]
            test R15,R15
            je .L_42ddbc

            nop
            nop
            nop
            nop
.L_42dd90:

            mov RDI,QWORD PTR [R15+8]
            mov RSI,RBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_42ddb4

            mov RDI,QWORD PTR [R15+16]
            mov RSI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42df8e
.L_42ddb4:

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_42dd90
.L_42ddbc:

            mov EAX,DWORD PTR [R12+96]
            mov DWORD PTR [RSP+20],EAX
.L_42ddc5:

            test RBP,RBP
            mov QWORD PTR [RSP+8],0
            je .L_42dde2

            cmp BYTE PTR [RBP],0
            mov QWORD PTR [RSP+8],RBP
            jne .L_42dfec
.L_42dde2:

            xor R14D,R14D
            test RBX,RBX
            je .L_42ddf6

            cmp BYTE PTR [RBX],0
            mov R14,RBX
            jne .L_42dfdc
.L_42ddf6:

            mov ESI,104
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_42e086

            mov QWORD PTR [RAX],0
            mov RDI,R14
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_42e07e

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R15+16],RAX
            mov RDX,QWORD PTR [RSP+24]
            je .L_42e076

            mov EAX,R13D
            mov QWORD PTR [R15+56],0
            mov QWORD PTR [R15+64],0
            and EAX,1
            mov QWORD PTR [R15+72],0
            mov DWORD PTR [RSP+24],EAX
            je .L_42dfa0

            mov EAX,DWORD PTR [RSP+20]
            mov DWORD PTR [R15+28],4294967295
            mov DWORD PTR [R15+24],EAX
.L_42de86:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            call strcmp@PLT

            test EAX,EAX
            je .L_42dfcf

            mov EAX,DWORD PTR [R15+24]
            cmp EAX,-1
            je .L_42deae

            cmp EAX,DWORD PTR [R15+28]
            je .L_42dfcf
.L_42deae:

            mov DWORD PTR [R15+32],0
.L_42deb6:

            lea RAX,QWORD PTR [RIP+.L_447012]
            mov RSI,QWORD PTR [RSP+8]
            mov ECX,6
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_42e030

            or R13D,256
.L_42dee1:

            mov RDI,RAX
            mov ECX,6
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42e000

            or R13D,512
.L_42df02:

            test R13B,2
            je .L_42df19

            test R13D,10752
            je .L_42e0ad

            or R13D,64
.L_42df19:

            mov RAX,-1
            test R13D,5376
            mov QWORD PTR [R15+48],RAX
            jne .L_42e060
.L_42df31:

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R14
            call iconv_open@PLT

            cmp RAX,-1
            mov QWORD PTR [R15+40],RAX
            je .L_42e122

            nop
            nop
            nop
            nop
.L_42df50:

            mov DWORD PTR [R15+36],R13D
            mov RDI,R15
            call .L_42d8e0

            mov EDX,DWORD PTR [R15+96]
            test EDX,EDX
            je .L_42e17d

            test R12,R12
            je .L_42df8e

            mov RDX,QWORD PTR [R12+104]
            test RDX,RDX
            jne .L_42df83

            jmp .L_42e118

            nop
            nop
            nop
            nop
.L_42df80:

            mov RDX,RAX
.L_42df83:

            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            jne .L_42df80
.L_42df8b:

            mov QWORD PTR [RDX],R15
.L_42df8e:

            add RSP,40
.L_42df92:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42dfa0:

            test R13B,2
            je .L_42de86

            mov EAX,DWORD PTR [RSP+20]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            mov DWORD PTR [R15+24],4294967295
            mov DWORD PTR [R15+28],EAX
            call strcmp@PLT

            test EAX,EAX
            jne .L_42deae
.L_42dfcf:

            mov DWORD PTR [R15+32],1
            jmp .L_42deb6
.L_42dfdc:

            mov RDI,RBX
            call .L_42dbf0

            mov R14,RAX
            jmp .L_42ddf6
.L_42dfec:

            mov RDI,RBP
            call .L_42dbf0

            mov QWORD PTR [RSP+8],RAX
            jmp .L_42dde2
          .byte 0x66
          .byte 0x90
.L_42e000:

            lea RDI,QWORD PTR [RIP+.L_445293]
            mov ECX,9
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42e0ba

            or R13D,2048
            jmp .L_42df02
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e030:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RIP+.L_445293]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_42e0e1

            or R13D,1024
            jmp .L_42dee1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e060:

            test R13D,10752
            je .L_42df31
.L_42e06d:

            mov QWORD PTR [R15+40],RAX
            jmp .L_42df50
.L_42e076:

            mov RDI,RDX
            call free@PLT
.L_42e07e:

            mov RDI,R15
            call free@PLT
.L_42e086:

            xor R15D,R15D
            test R12,R12
            je .L_42df8e

            lea RDX,QWORD PTR [RIP+.L_448db8]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_42df8e
.L_42e0ad:

            mov QWORD PTR [R15+48],-1
            jmp .L_42df31
.L_42e0ba:

            lea RDI,QWORD PTR [RIP+.L_448d8e]
            mov ECX,9
            mov RSI,R14
            mov EDX,R13D

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            or DH,32
            test AL,AL
            cmove R13D,EDX
            jmp .L_42df02
.L_42e0e1:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RIP+.L_448d8e]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov ECX,R13D
            seta DL
            sbb DL,0
            or CH,16
            test DL,DL
            cmove R13D,ECX
            jmp .L_42dee1
.L_42e10b:

            mov DWORD PTR [RSP+20],4294967295
            jmp .L_42ddc5
.L_42e118:

            lea RDX,QWORD PTR [R12+104]
            jmp .L_42df8b
.L_42e122:

            test BYTE PTR [R15+36],4
            je .L_42df50

            lea RAX,QWORD PTR [RIP+.L_448d88]
            mov RSI,QWORD PTR [RSP+8]
            mov ECX,6
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_42e1b5

            mov RDI,RAX
            mov ECX,6
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42df50

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_448dac]
            call iconv_open@PLT

            jmp .L_42e06d
.L_42e17d:

            test R12,R12
            je .L_42e1a5

            mov EAX,DWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_448df8]
            mov ESI,4294967295
            mov RDI,R12
            test EAX,EAX
            cmove RBP,RBX
            xor EAX,EAX
            mov RCX,RBP
            call .L_432bc0
.L_42e1a5:

            mov RDI,R15
            xor R15D,R15D
            call .L_42d330

            jmp .L_42df8e
.L_42e1b5:

            lea RDI,QWORD PTR [RIP+.L_448dac]
            mov RSI,R14
            call iconv_open@PLT

            mov QWORD PTR [R15+40],RAX
            jmp .L_42df50
.L_42e1cd:

            nop
            nop
            nop
.L_42e1d0:

            test RDI,RDI
            je .L_42e230

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI+88]
            test RBP,RBP
            je .L_42e1f8

            cmp BYTE PTR [RBP],0
            je .L_42e1f8
.L_42e1ea:

            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e1f8:

            mov RBX,RDI
            mov EDI,14
            call nl_langinfo@PLT

            cmp QWORD PTR [RBX+88],0
            mov RBP,RAX
            jne .L_42e1ea

            mov RDI,RAX
            call strdup@PLT

            mov QWORD PTR [RBX+96],-1
            mov QWORD PTR [RBX+88],RAX
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e230:

            mov EDI,14
            jmp nl_langinfo@PLT
.L_42e23a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e240:

            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov RDI,QWORD PTR [RDI]
            call free@PLT

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_42e265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e270:

            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov RDI,QWORD PTR [RDI]
            call free@PLT

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_42e295:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e2a0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_42e2ba

            cmp RDX,RSI
            jae .L_42e2e0
.L_42e2ba:

            cmp RDX,31
            ja .L_42e2f0

            mov EAX,32
.L_42e2c5:

            cmp RAX,RSI
            cmovae RSI,RAX
            mov RBP,RSI
            call realloc@PLT

            test RAX,RAX
            je .L_42e340

            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+16],RBP
.L_42e2e0:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e2f0:

            cmp RDX,8191
            ja .L_42e300

            lea RAX,QWORD PTR [RDX+RDX*1]
            jmp .L_42e2c5
          .byte 0x90
.L_42e300:

            mov RAX,RDX
            shr RAX,2
            add RAX,RDX
            jae .L_42e2c5

            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
.L_42e31c:

            call free@PLT

            mov QWORD PTR [RBX],0
            xor EBX,EBX
            call __errno_location@PLT

            mov DWORD PTR [RAX],12
            jmp .L_42e2e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e340:

            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RDI,QWORD PTR [RBX]
            jmp .L_42e31c
.L_42e355:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e360:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RAX,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov RBP,RDX
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_42e2a0

            test RAX,RAX
            je .L_42e3a4

            mov RDI,QWORD PTR [RBX+8]
            add RDI,QWORD PTR [RBX]
            mov RDX,RBP
            mov RSI,R12
            call memmove@PLT

            add RBP,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RAX,RBX
.L_42e3a4:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42e3a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3b0:

            jmp .L_42e360
.L_42e3b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3c0:

            sub RSP,8
            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call .L_42e360

            test RAX,RAX
            je .L_42e3da

            add RSP,8
            ret 
.L_42e3da:

            call .L_402da5
.L_42e3df:

            nop
.L_42e3e0:

            shl RSI,2
            jmp .L_42e2a0
.L_42e3e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3f0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
.L_42e3f7:

            mov RAX,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov RBP,RDX
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            shl RSI,2
            call .L_42e2a0

            test RAX,RAX
            je .L_42e43f

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov RSI,R12
            lea RDI,QWORD PTR [RAX+RDX*4]
            mov RDX,RBP
            call wmemmove@PLT

            add RBP,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],RBP
            mov DWORD PTR [RAX+RBP*4],0
            mov RAX,RBX
.L_42e43f:

            pop RBX
.L_42e440:

            pop RBP
            pop R12
            ret 
.L_42e444:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e450:

            sub RSP,8
            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call .L_42e3f0

            test RAX,RAX
            je .L_42e46a

            add RSP,8
            ret 
.L_42e46a:

            call .L_402da5
.L_42e46f:

            nop
.L_42e470:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,56
.L_42e487:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_42e2a0

            test RAX,RAX
            je .L_42e670

            mov RAX,QWORD PTR [R15]
            mov R10,QWORD PTR [R15+8]
            mov RDX,QWORD PTR [R15+16]
            mov DWORD PTR [RSP+20],0
            add R10,RAX
            lea RAX,QWORD PTR [RAX+RDX*1-1]
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+36]
            mov QWORD PTR [RSP+8],RAX
.L_42e4d7:

            test R13,R13
            jne .L_42e518
.L_42e4dc:

            mov RAX,R10
            sub RAX,QWORD PTR [R15]
            mov QWORD PTR [R15+8],RAX
            mov BYTE PTR [R10],0
.L_42e4ea:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+20]
            jne .L_42e6e5

            add RSP,56
.L_42e506:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e518:

            mov R12,RBP
            nop
            nop
            nop
            nop
            nop
.L_42e520:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            mov RSI,R12
            call .L_42d390

            movsxd RBX,EAX
            cmp EBX,3
            je .L_42e648

            test EBX,EBX
            jle .L_42e6d4
.L_42e544:

            add R12,RBX
            sub R13,RBX
            jne .L_42e520

            cmp RBP,R12
            jae .L_42e4dc

            xor EBX,EBX
.L_42e553:

            mov RDX,R12
            sub RDX,RBP
            lea R14,QWORD PTR [R10+RDX*1]
            cmp R14,QWORD PTR [RSP]
            jbe .L_42e5a9

            sub R10,QWORD PTR [R15]
            mov RAX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+24],RDX
            lea RSI,QWORD PTR [R13+RAX*1+1]
            mov QWORD PTR [R15+8],R10
            call .L_42e2a0

            test RAX,RAX
            je .L_42e670

            mov RAX,QWORD PTR [R15]
            mov R10,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R15+16]
            mov RDX,QWORD PTR [RSP+24]
            add R10,RAX
            lea RAX,QWORD PTR [RAX+RSI*1-1]
            lea R14,QWORD PTR [R10+RDX*1]
            mov QWORD PTR [RSP],RAX
.L_42e5a9:

            mov RSI,RBP
            mov RDI,R10
            call memcpy@PLT
.L_42e5b4:

            test EBX,EBX
            je .L_42e668

            cmp EBX,-3
            mov EDX,DWORD PTR [RSP+36]
            je .L_42e680

            neg EBX
.L_42e5cb:

            mov DWORD PTR [RSP+20],4294967295
            jmp .L_42e613
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e5d8:

            mov RAX,QWORD PTR [R15+16]
            mov R11,R14
            sub R11,QWORD PTR [R15]
            mov RDI,R15
            lea RSI,QWORD PTR [R13+RAX*1+1]
            mov QWORD PTR [R15+8],R11
            call .L_42e2a0

            test RAX,RAX
            je .L_42e670

            mov RAX,QWORD PTR [R15]
            mov RDX,QWORD PTR [R15+16]
            mov R14,QWORD PTR [R15+8]
            add R14,RAX
            lea RAX,QWORD PTR [RAX+RDX*1-1]
            mov EDX,DWORD PTR [RSP+36]
            mov QWORD PTR [RSP],RAX
.L_42e613:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R14
            sub RSI,R14
            call .L_42d1f0

            test RAX,RAX
            je .L_42e5d8

            lea R10,QWORD PTR [R14+RAX*1]
            movsxd RAX,EBX
            sub R13,RAX
            test EBX,EBX
            lea RBP,QWORD PTR [R12+RAX*1]
            jne .L_42e4d7

            jmp .L_42e4dc

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e648:

            mov EAX,DWORD PTR [RSP+36]
            sub EAX,55296
            cmp EAX,2047
            jbe .L_42e6b5

            mov EBX,3
            jmp .L_42e544
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e668:

            mov R10,R14
            jmp .L_42e4dc
.L_42e670:

            mov DWORD PTR [RSP+20],4294967295
            jmp .L_42e4ea
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e680:

            lea EAX,DWORD PTR [RDX-55296]
            mov EBX,3
            cmp EAX,2047
            ja .L_42e5cb
.L_42e696:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            mov RSI,R12
            call .L_42d600

            test EAX,EAX
            mov EBX,EAX
            js .L_42e6c4

            mov EDX,DWORD PTR [RSP+36]
            jmp .L_42e613
.L_42e6b5:

            cmp RBP,R12
            jae .L_42e6cf

            mov EBX,4294967293
            jmp .L_42e553
.L_42e6c4:

            neg EBX
            mov EDX,DWORD PTR [RSP+36]
            jmp .L_42e5cb
.L_42e6cf:

            mov R14,R10
            jmp .L_42e696
.L_42e6d4:

            cmp RBP,R12
            jb .L_42e553

            mov R14,R10
            jmp .L_42e5b4
.L_42e6e5:

            call __stack_chk_fail@PLT
.L_42e6ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e6f0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,16
.L_42e708:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_42e2a0

            test RAX,RAX
            je .L_42e800

            mov RAX,QWORD PTR [RBP]
            mov R9,QWORD PTR [RBP+8]
            xor R10D,R10D
            add R9,RAX
            test RBX,RBX
            je .L_42e769

            lea R11,QWORD PTR [RSP+4]
            mov R13D,4294967295
            nop
            nop
            nop
.L_42e750:

            cmp RBX,1
            jne .L_42e7a0

            add R9,1
            mov BYTE PTR [R9-1],63
            mov R10D,4294967295
.L_42e765:

            mov RAX,QWORD PTR [RBP]
.L_42e769:

            mov RCX,R9
            sub RCX,RAX
            mov QWORD PTR [RBP+8],RCX
            mov BYTE PTR [R9],0
.L_42e777:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_42e80b

            add RSP,16
.L_42e792:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e7a0:

            mov ECX,R12D
            mov RDX,RBX
            mov RSI,R14
            mov RDI,R11
            call .L_42d710

            test EAX,EAX
            je .L_42e765

            mov EDX,DWORD PTR [RSP+4]
            js .L_42e7e0

            cdqe 
            add R9,1
            sub RBX,RAX
            add R14,RAX
            cmp EDX,127
            ja .L_42e7f6
.L_42e7cc:

            mov BYTE PTR [R9-1],DL
.L_42e7d0:

            test RBX,RBX
            jne .L_42e750

            jmp .L_42e765
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e7e0:

            neg EAX
            add R9,1
            mov R10D,R13D
            cdqe 
            sub RBX,RAX
            add R14,RAX
            cmp EDX,127
            jbe .L_42e7cc
.L_42e7f6:

            mov BYTE PTR [R9-1],63
            mov R10D,R13D
            jmp .L_42e7d0
.L_42e800:

            mov R10D,4294967295
            jmp .L_42e777
.L_42e80b:

            call __stack_chk_fail@PLT
.L_42e810:

            xor ECX,ECX
            jmp .L_42e6f0
.L_42e817:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e820:

            mov ECX,1
            jmp .L_42e6f0
.L_42e82a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e830:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,264
.L_42e847:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP+8],RDX
            mov EDX,EAX
            and EDX,2048
            test AH,4
            je .L_42ec20

            xor EDI,EDI
            test EDX,EDX
            mov QWORD PTR [RSP+32],2
            sete DIL
            mov DWORD PTR [RSP+120],2
            mov DWORD PTR [RSP+108],EDI
            lea RDI,QWORD PTR [RIP+.L_42d800]
            mov QWORD PTR [RSP+80],RDI
.L_42e89c:

            test EDX,EDX
            jne .L_42ec56
.L_42e8a4:

            test AH,32
            je .L_42f227

            lea RAX,QWORD PTR [RIP+.L_42d7a0]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
.L_42e8cf:

            add RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+8]
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            mov DWORD PTR [RSP+104],0
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+152]
            mov QWORD PTR [RSP+96],RAX
.L_42e916:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+96]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            test EAX,EAX
            mov R12D,EAX
            je .L_42f077

            js .L_42ef30

            movzx EAX,BYTE PTR [RSP+108]
            and EAX,1
            cmp DWORD PTR [RSP+52],R12D
            mov BYTE PTR [RSP+64],AL
            je .L_42f0a8

            test AL,AL
            mov R15,RBP
            jne .L_42f0a8
.L_42e95d:

            movsxd RAX,R12D
            sub QWORD PTR [RSP+8],RAX
            add RBP,RAX
            lea RAX,QWORD PTR [RSP+156]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,RBX
            mov EBX,R12D
            mov R12,RAX
            jmp .L_42eb00
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e988:

            lea RAX,QWORD PTR [RIP+.L_44c6c0]
            cmp BYTE PTR [RAX+R11*1],0
            je .L_42eb62

            mov R10D,DWORD PTR [RSP+152]
            lea EAX,DWORD PTR [R10-4352]
            cmp EAX,18
            jbe .L_42edb0

            lea ESI,DWORD PTR [R10-44032]
            cmp ESI,11171
            jbe .L_42ee40
.L_42e9c5:

            mov ESI,R9D
            mov EDI,R10D
            mov DWORD PTR [RSP+88],R9D
            call .L_42d2c0

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+88]
            jne .L_42eee8

            cmp R9D,119364
            ja .L_42ea34

            lea RAX,QWORD PTR [RIP+.L_44bb20]
            lea RDI,QWORD PTR [RIP+.L_44bd00]
            mov ESI,R9D
            shr ESI,4
            mov EDX,R9D
            movzx EAX,BYTE PTR [RAX+R11*1]
            and ESI,15
            and EDX,15
            shl RAX,4
            add RAX,RDI
            lea RDI,QWORD PTR [RIP+.L_44bf80]
            movzx EAX,BYTE PTR [RAX+RSI*1]
            shl RAX,4
            add RAX,RDI
            movzx R11D,BYTE PTR [RAX+RDX*1]
            test R11D,R11D
            jne .L_42f470
.L_42ea34:

            test R15,R15
            je .L_42f0b0
.L_42ea3d:

            movsxd RAX,EBX
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jae .L_42ea97

            mov RAX,QWORD PTR [RSP+8]
            sub R13,QWORD PTR [R12]
            mov RDI,R12
            imul RAX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+24],RAX
.L_42ea97:

            cmp EBX,2
            je .L_42ef00

            jle .L_42ed10

            cmp EBX,3
            je .L_42eac0

            cmp EBX,4
            jne .L_42eaea

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_42eac0:

            movzx EAX,BYTE PTR [R15]
            lea RSI,QWORD PTR [R15+1]
            lea RDX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],AL
.L_42ead0:

            lea R15,QWORD PTR [RSI+1]
            movzx ESI,BYTE PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            mov BYTE PTR [RDX],SIL
            nop
            nop
.L_42eae0:

            movzx EDX,BYTE PTR [R15]
            lea R13,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],DL
.L_42eaea:

            mov EAX,DWORD PTR [RSP+156]
            mov R15,QWORD PTR [RSP+16]
            mov EBX,R14D
            mov DWORD PTR [RSP+152],EAX
.L_42eb00:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            cmp EAX,0
            mov R14D,EAX
            jle .L_42eff0

            cmp DWORD PTR [RSP+52],R14D
            je .L_42ecf8

            cmp BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RBP
            jne .L_42ecf8
.L_42eb3b:

            mov R9D,DWORD PTR [RSP+156]
            movsxd RAX,R14D
            sub QWORD PTR [RSP+8],RAX
            add RBP,RAX
            mov R11D,R9D
            shr R11D,8
            cmp R11D,466
            jbe .L_42e988
.L_42eb62:

            test R15,R15
            je .L_42ed28

            movsxd RAX,EBX
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jae .L_42ebc5

            mov RAX,QWORD PTR [RSP+8]
            sub R13,QWORD PTR [R12]
            mov RDI,R12
            imul RAX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+24],RAX
.L_42ebc5:

            cmp EBX,2
            je .L_42eda8

            jle .L_42ed10

            cmp EBX,3
            je .L_42ebf2

            cmp EBX,4
            jne .L_42eaea

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_42ebf2:

            movzx EAX,BYTE PTR [R15]
            lea RDX,QWORD PTR [R15+1]
            add R13,1
            mov BYTE PTR [R13-1],AL
.L_42ec02:

            lea R15,QWORD PTR [RDX+1]
            movzx EDX,BYTE PTR [RDX]
            lea RAX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],DL
            jmp .L_42eae0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec20:

            test AH,16
            je .L_42ec7d

            xor ECX,ECX
            lea RDI,QWORD PTR [RIP+.L_42d870]
            test AH,32
            sete CL
            test EDX,EDX
            mov QWORD PTR [RSP+32],2
            mov DWORD PTR [RSP+108],ECX
            mov QWORD PTR [RSP+80],RDI
            mov DWORD PTR [RSP+120],2
            je .L_42e8a4
.L_42ec56:

            lea RAX,QWORD PTR [RIP+.L_42d7d0]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
            jmp .L_42e8cf
.L_42ec7d:

            mov ECX,EAX
            and ECX,256
            mov DWORD PTR [RSP+108],ECX
            jne .L_42f253

            test EDX,EDX
            jne .L_42f31f

            and EAX,8192
            mov DWORD PTR [RSP+108],EAX
            je .L_42f20a

            lea RAX,QWORD PTR [RIP+.L_42d870]
            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+108],0
            mov QWORD PTR [RSP+32],2
            mov QWORD PTR [RSP+72],1
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_42d7a0]
            mov DWORD PTR [RSP+120],2
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
            jmp .L_42e8cf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ecf8:

            mov QWORD PTR [RSP+16],0
            jmp .L_42eb3b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ed10:

            cmp EBX,1
            mov RAX,R13
            je .L_42eae0

            jmp .L_42eaea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ed28:

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            imul R15,QWORD PTR [RSP+72]
.L_42ed38:

            mov RSI,RBX
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            sub RSI,R13
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            jne .L_42ed98

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_42ed38
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ed98:

            mov QWORD PTR [RSP+24],RBX
            add R13,RAX
            jmp .L_42eaea
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42eda8:

            mov RDX,R15
            jmp .L_42ec02
.L_42edb0:

            sub R9D,4449
            cmp R9D,20
            jbe .L_42ef10

            test R15,R15
            jne .L_42ea3d

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov EDX,R10D
            imul R15,QWORD PTR [RSP+72]
.L_42eddd:

            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            jne .L_42ed98

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+152]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_42eddd
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ee40:

            mov EDX,ESI
            mov EDI,613566757
            shr EDX,2
            mov EAX,EDX
            mul EDI
            imul EDX,EDX,28
            cmp ESI,EDX
            jne .L_42e9c5

            lea EAX,DWORD PTR [R9-4520]
            cmp EAX,26
            jbe .L_42f128

            test R15,R15
            jne .L_42ea3d

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov EDX,R10D
            imul R15,QWORD PTR [RSP+72]
.L_42ee85:

            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            jne .L_42ed98

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+152]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_42ee85
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42eee8:

            mov DWORD PTR [RSP+152],EAX
            xor R15D,R15D
            jmp .L_42eb00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ef00:

            mov RSI,R15
            mov RDX,R13
            jmp .L_42ead0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ef10:

            lea EDX,DWORD PTR [RAX+RAX*4]
            xor R15D,R15D
            lea EAX,DWORD PTR [RAX+RDX*4]
            add EAX,R9D
            imul EAX,EAX,28
            add EAX,44032
            mov DWORD PTR [RSP+152],EAX
            jmp .L_42eb00
.L_42ef30:

            mov R14,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RSP+24]
            imul R14,QWORD PTR [RSP+72]
.L_42ef40:

            mov RSI,R15
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            sub RSI,R13
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            je .L_42efb8

            neg R12D
            mov QWORD PTR [RSP+24],R15
            add R13,RAX
            movsxd R12,R12D
            mov DWORD PTR [RSP+104],4294967295
            sub QWORD PTR [RSP+8],R12
            add RBP,R12
            jmp .L_42e916
          .byte 0x90
.L_42ef80:

            mov DWORD PTR [RSP+104],4294967295
.L_42ef88:

            mov RDI,QWORD PTR [RSP+248]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+104]
            jne .L_42fc33

            add RSP,264
.L_42efaa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42efb8:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R13
            add RSI,R14
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov R15,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,R15
            sub R15,QWORD PTR [RSP+32]
            add R15,QWORD PTR [RBX+16]
            jmp .L_42ef40
.L_42eff0:

            mov RAX,R12
            mov R12D,EBX
            mov RBX,RAX
            jne .L_42f13f

            test R15,R15
            mov R14D,R12D
            mov R12,R15
            je .L_42f3f8

            movsxd RAX,R14D
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jb .L_42fbe8
.L_42f01f:

            cmp R14D,2
            je .L_42f059

            jle .L_42fbd2

            cmp R14D,3
            je .L_42f048

            cmp R14D,4
            jne .L_42f077

            movzx EAX,BYTE PTR [R12]
            add R13,1
            add R12,1
            mov BYTE PTR [R13-1],AL
.L_42f048:

            movzx EAX,BYTE PTR [R12]
            add R13,1
            add R12,1
            mov BYTE PTR [R13-1],AL
.L_42f059:

            movzx EAX,BYTE PTR [R12]
            add R13,1
            add R12,1
            mov BYTE PTR [R13-1],AL
.L_42f06a:

            movzx EAX,BYTE PTR [R12]
            add R13,1
            mov BYTE PTR [R13-1],AL
.L_42f077:

            mov RAX,R13
            sub RAX,QWORD PTR [RBX]
            cmp DWORD PTR [RSP+120],2
            mov QWORD PTR [RBX+8],RAX
            mov BYTE PTR [R13],0
            jne .L_42ef88

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            mov BYTE PTR [RDX+RAX*1+1],0
            jmp .L_42ef88
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f0a8:

            xor R15D,R15D
            jmp .L_42e95d
.L_42f0b0:

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov EDX,R10D
            imul R15,QWORD PTR [RSP+72]
.L_42f0c3:

            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            jne .L_42ed98

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+152]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_42f0c3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f128:

            lea EAX,DWORD PTR [R9+R10*1-4519]
            xor R15D,R15D
            mov DWORD PTR [RSP+152],EAX
            jmp .L_42eb00
.L_42f13f:

            mov RAX,QWORD PTR [RSP+8]
            imul RAX,QWORD PTR [RSP+72]
            test R15,R15
            mov QWORD PTR [RSP+16],RAX
            je .L_42f363

            movsxd RAX,R12D
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jb .L_42f282
.L_42f169:

            cmp R12D,2
            je .L_42f3ed

            jle .L_42f2c5

            cmp R12D,3
            je .L_42f199

            cmp R12D,4
            jne .L_42f2d2

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_42f199:

            movzx EAX,BYTE PTR [R15]
            lea RSI,QWORD PTR [R15+1]
            lea RDX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],AL
.L_42f1a9:

            lea R15,QWORD PTR [RSI+1]
            movzx ESI,BYTE PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            mov BYTE PTR [RDX],SIL
.L_42f1b7:

            movzx EDX,BYTE PTR [R15]
            mov R12,QWORD PTR [RSP+24]
            lea R13,QWORD PTR [RAX+1]
            mov R15,QWORD PTR [RSP+80]
            mov BYTE PTR [RAX],DL
.L_42f1cb:

            mov RSI,R12
            mov EDX,DWORD PTR [RSP+156]
            mov RDI,R13
            sub RSI,R13
            call R15

            test RAX,RAX
            je .L_42f2e1

            neg R14D
            add R13,RAX
            mov QWORD PTR [RSP+24],R12
            movsxd RAX,R14D
            mov DWORD PTR [RSP+104],4294967295
            sub QWORD PTR [RSP+8],RAX
            add RBP,RAX
            jmp .L_42e916
.L_42f20a:

            lea RAX,QWORD PTR [RIP+.L_42d1f0]
            mov QWORD PTR [RSP+32],1
            mov DWORD PTR [RSP+120],1
            mov QWORD PTR [RSP+80],RAX
.L_42f227:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+52],6
            imul RSI,RAX
            mov QWORD PTR [RSP+72],RAX
            lea RAX,QWORD PTR [RIP+.L_42d600]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_42e8cf
.L_42f253:

            xor EDI,EDI
            test AH,2
            mov QWORD PTR [RSP+32],1
            sete DIL
            mov DWORD PTR [RSP+120],1
            mov DWORD PTR [RSP+108],EDI
            lea RDI,QWORD PTR [RIP+.L_42d1f0]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_42e89c
.L_42f282:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            add RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RBX+8],R13
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_42f169
.L_42f2c5:

            cmp R12D,1
            mov RAX,R13
            je .L_42f1b7
.L_42f2d2:

            mov R15,QWORD PTR [RSP+80]
            mov R12,QWORD PTR [RSP+24]
            jmp .L_42f1cb
.L_42f2e1:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            add RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RBX+8],R13
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov R12,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,R12
            sub R12,QWORD PTR [RSP+32]
            add R12,QWORD PTR [RBX+16]
            jmp .L_42f1cb
.L_42f31f:

            lea RAX,QWORD PTR [RIP+.L_42d800]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],2
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+120],2
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_42d7d0]
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
            jmp .L_42e8cf
.L_42f363:

            mov R12,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+56],RBP
            mov DWORD PTR [RSP+24],R14D
            mov R15,QWORD PTR [RSP+32]
            mov R14,RBX
            mov RBP,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+80]
            jmp .L_42f3bc
.L_42f386:

            mov RSI,QWORD PTR [R14+16]
            mov R8,R13
            sub R8,QWORD PTR [R14]
            mov RDI,R14
            add RSI,R15
            add RSI,RBP
            mov QWORD PTR [R14+8],R8
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov R12,QWORD PTR [R14]
            mov R13,QWORD PTR [R14+8]
            add R13,R12
            sub R12,R15
            add R12,QWORD PTR [R14+16]
.L_42f3bc:

            mov RSI,R12
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            sub RSI,R13
            call RBX

            test RAX,RAX
            je .L_42f386

            mov RBX,R14
            mov RBP,QWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RSP+24]
            add R13,RAX
            mov R15,QWORD PTR [RSP+80]
            jmp .L_42f1cb
.L_42f3ed:

            mov RSI,R15
            mov RDX,R13
            jmp .L_42f1a9
.L_42f3f8:

            mov RBP,QWORD PTR [RSP+8]
            imul RBP,QWORD PTR [RSP+72]
            jmp .L_42f442
.L_42f405:

            sub R13,QWORD PTR [RBX]
            mov R15,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,QWORD PTR [RBX+16]
            add RSI,R15
            mov QWORD PTR [RBX+8],R13
            add RSI,RBP
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,RAX
            sub RAX,R15
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
.L_42f442:

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            je .L_42f405

            add R13,RAX
            jmp .L_42f077
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f470:

            mov RAX,R12
            mov R12D,EBX
            xor R14D,R14D
            mov RBX,RAX
            lea RAX,QWORD PTR [RSP+160]
            mov RDI,RBP
            mov ECX,1
            mov QWORD PTR [RSP+112],R13
            mov DWORD PTR [RSP+124],R12D
            mov QWORD PTR [RSP+128],R15
            mov QWORD PTR [RSP+136],RBX
            mov EBP,R14D
            mov DWORD PTR [RSP+160],R9D
            mov DWORD PTR [RSP+208],R11D
            mov R13D,R11D
            mov QWORD PTR [RSP+88],RAX
            mov R12,RCX
            mov RBX,QWORD PTR [RSP+8]
            mov R15,RAX
            mov R14,RDI
            jmp .L_42f502
.L_42f4d1:

            cmp R13D,228
            jne .L_42fa49

            xor EBP,EBP
.L_42f4e0:

            movsxd RDX,EAX
            mov DWORD PTR [RSP+R12*4+208],EBP
            add R12,1
            add R14,RDX
            sub RBX,RDX
            cmp R12,10
            mov R13D,EBP
            je .L_42fa89
.L_42f502:

            mov DWORD PTR [RSP+64],R12D
            mov QWORD PTR [RSP+16],R15
            lea RDI,QWORD PTR [R15+R12*4]
            mov RDX,RBX
            mov RSI,R14
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            test EAX,EAX
            jle .L_42f58e

            mov EDX,DWORD PTR [R15+R12*4]
            cmp EDX,119364
            ja .L_42f4d1

            lea RCX,QWORD PTR [RIP+.L_44bb20]
            mov EDI,EDX
            mov ESI,EDX
            shr EDX,8
            shr ESI,4
            and EDI,15
            movzx EDX,BYTE PTR [RCX+RDX*1]
            lea RCX,QWORD PTR [RIP+.L_44bd00]
            and ESI,15
            shl RDX,4
            add RDX,RCX
            lea RCX,QWORD PTR [RIP+.L_44bf80]
            movzx EDX,BYTE PTR [RDX+RSI*1]
            shl RDX,4
            add RDX,RCX
            movzx EBP,BYTE PTR [RDX+RDI*1]
            cmp EBP,R13D
            jg .L_42f4e0

            cmp R13D,228
            je .L_42f4e0

            cmp EBP,228
            je .L_42f4e0
.L_42f58e:

            mov R11D,R13D
            mov QWORD PTR [RSP+8],RBX
            mov R13,QWORD PTR [RSP+112]
            mov R12D,DWORD PTR [RSP+124]
            mov R15,QWORD PTR [RSP+128]
            mov RBX,QWORD PTR [RSP+136]
            mov DWORD PTR [RSP+56],EAX
            mov RAX,R14
            mov R14D,EBP
            mov RBP,RAX
.L_42f5bd:

            cmp DWORD PTR [RSP+64],1
            je .L_42f74a
.L_42f5c8:

            mov DWORD PTR [RSP+124],R12D
            mov R12D,R14D
            mov R14,RBX
            mov EBX,DWORD PTR [RSP+64]
            mov QWORD PTR [RSP+112],R13
            mov R10D,1
            mov R13D,R11D
.L_42f5e5:

            movsxd RAX,R10D
            mov EDI,DWORD PTR [RSP+152]
            mov ESI,DWORD PTR [RSP+RAX*4+160]
            call .L_42d2c0

            test EAX,EAX
            lea EDX,DWORD PTR [R10+1]
            je .L_42f727

            cmp EBX,EDX
            mov DWORD PTR [RSP+152],EAX
            jle .L_42f657

            lea EDI,DWORD PTR [RBX-2]
            movsxd RSI,EDX
            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RSI*4]
            sub EDI,R10D
            add RSI,RDI
            lea RAX,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RSP+RDX*1+204]
            lea RDI,QWORD PTR [RCX+RSI*4+4]
            nop
            nop
            nop
            nop
.L_42f640:

            mov ECX,DWORD PTR [RAX]
            add RAX,4
            add RDX,4
            mov DWORD PTR [RAX-8],ECX
            mov ECX,DWORD PTR [RDX]
            mov DWORD PTR [RDX-4],ECX
            cmp RDI,RAX
            jne .L_42f640
.L_42f657:

            lea R8D,DWORD PTR [RBX-1]
            test R8D,R8D
            jle .L_42fa3b

            cmp R10D,R8D
            jne .L_42fa3b

            mov EDX,DWORD PTR [RSP+56]
            test EDX,EDX
            jle .L_42fa7a

            cmp R13D,R12D
            jne .L_42fa7a

            lea EAX,DWORD PTR [RBX-2]
            movsxd R15,R8D
            mov QWORD PTR [RSP+64],R14
            cdqe 
            mov R13D,DWORD PTR [RSP+RAX*4+208]
            mov RAX,QWORD PTR [RSP+88]
            lea R9,QWORD PTR [RAX+R15*4]
            mov EAX,10
            mov R14D,R13D
            sub EAX,EBX
            mov RBX,RBP
            mov EBP,R12D
            lea RAX,QWORD PTR [R15+RAX*1+1]
            mov R13,R9
            mov QWORD PTR [RSP+56],RAX
.L_42f6bd:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+40]
            mov R12D,R15D
            call RAX

            test EAX,EAX
            jle .L_42facd

            mov EDX,DWORD PTR [R13]
            cmp R14D,228
            setne SIL
            cmp EDX,119364
            jbe .L_42f990

            test R14D,R14D
            js .L_42fa82

            test SIL,SIL
            je .L_42fa82

            mov R13D,R14D
            mov R14,QWORD PTR [RSP+64]
            mov RBP,RBX
            mov DWORD PTR [RSP+56],EAX
            mov EBX,R15D
            xor R12D,R12D
.L_42f71c:

            xor R10D,R10D
            xor R15D,R15D
            jmp .L_42f5e5
.L_42f727:

            mov R10D,EDX
.L_42f72a:

            cmp EBX,R10D
            jg .L_42f5e5

            mov DWORD PTR [RSP+64],EBX
            mov R11D,R13D
            mov RBX,R14
            mov R13,QWORD PTR [RSP+112]
            mov R14D,R12D
            mov R12D,DWORD PTR [RSP+124]
.L_42f74a:

            test R15,R15
            je .L_42fb52

            movsxd RAX,R12D
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jb .L_42fafc
.L_42f764:

            cmp R12D,2
            je .L_42fbc7

            jle .L_42faea

            cmp R12D,3
            je .L_42f790

            cmp R12D,4
            jne .L_42f7b8

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_42f790:

            movzx EAX,BYTE PTR [R15]
            lea RSI,QWORD PTR [R15+1]
            lea RDX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],AL
.L_42f7a0:

            lea R15,QWORD PTR [RSI+1]
            movzx ESI,BYTE PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            mov BYTE PTR [RDX],SIL
.L_42f7ae:

            movzx EDX,BYTE PTR [R15]
            lea R13,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],DL
.L_42f7b8:

            mov EAX,DWORD PTR [RSP+64]
            test EAX,EAX
            jle .L_42f870

            mov RDI,QWORD PTR [RSP+88]
            sub EAX,1
            mov R15,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+64],R11D
            imul R15,QWORD PTR [RSP+72]
            lea R12,QWORD PTR [RDI+RAX*4+4]
            mov RAX,RBX
            mov RBX,R13
            mov R13,RAX
            jmp .L_42f831

            nop
            nop
            nop
            nop
.L_42f7f0:

            mov RSI,QWORD PTR [RSP+32]
            mov RCX,RBX
            add RSI,QWORD PTR [R13+16]
            sub RCX,QWORD PTR [R13]
            mov RDI,R13
            add RSI,R15
            mov QWORD PTR [R13+8],RCX
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [R13]
            mov RBX,QWORD PTR [R13+8]
            add RBX,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+24],RAX
.L_42f831:

            mov RAX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBX
            sub RSI,RBX
            mov EDX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            je .L_42f7f0

            add QWORD PTR [RSP+16],4
            add RBX,RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp R12,RAX
            jne .L_42f831

            mov R11D,DWORD PTR [RSP+64]
            mov RAX,R13
            mov R13,RBX
            mov RBX,RAX
.L_42f870:

            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            jle .L_42e916

            cmp R14D,R11D
            jne .L_42e916

            cmp QWORD PTR [RSP+8],0
            je .L_42e916

            mov R12,QWORD PTR [RSP+8]
            mov R15D,R11D
.L_42f899:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            test EAX,EAX
            jle .L_42fc29

            mov EDX,DWORD PTR [RSP+160]
            xor R14D,R14D
            cmp EDX,119364
            ja .L_42f908

            lea R8,QWORD PTR [RIP+.L_44bb20]
            mov ECX,EDX
            mov ESI,EDX
            shr ECX,8
            shr ESI,4
            mov EDI,EDX
            movzx ECX,BYTE PTR [R8+RCX*1]
            lea R8,QWORD PTR [RIP+.L_44bd00]
            and ESI,15
            and EDI,15
            shl RCX,4
            add RCX,R8
            movzx ECX,BYTE PTR [RCX+RSI*1]
            lea RSI,QWORD PTR [RIP+.L_44bf80]
            shl RCX,4
            add RCX,RSI
            movzx R14D,BYTE PTR [RCX+RDI*1]
.L_42f908:

            cmp R15D,R14D
            jg .L_42fc29

            mov R15,QWORD PTR [RSP+72]
            cdqe 
            sub R12,RAX
            add RBP,RAX
            imul R15,R12
            jmp .L_42f96b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f928:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R13
            add RSI,R15
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            mov EDX,DWORD PTR [RSP+160]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
.L_42f96b:

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            je .L_42f928

            add R13,RAX
            mov R15D,R14D
            jmp .L_42f899
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f990:

            lea RCX,QWORD PTR [RIP+.L_44bb20]
            mov R9D,EDX
            mov EDI,EDX
            shr EDX,8
            shr EDI,4
            and R9D,15
            movzx EDX,BYTE PTR [RCX+RDX*1]
            lea RCX,QWORD PTR [RIP+.L_44bd00]
            and EDI,15
            shl RDX,4
            add RDX,RCX
            movzx EDX,BYTE PTR [RDX+RDI*1]
            lea RDI,QWORD PTR [RIP+.L_44bf80]
            shl RDX,4
            add RDX,RDI
            movzx EBP,BYTE PTR [RDX+R9*1]
            cmp EBP,R14D
            jg .L_42f9e8

            test SIL,SIL
            je .L_42f9e8

            cmp EBP,228
            jne .L_42facd
.L_42f9e8:

            movsxd RDX,EAX
            mov DWORD PTR [RSP+R15*4+208],EBP
            sub QWORD PTR [RSP+8],RDX
            add RBX,RDX
            add R15,1
            add R13,4
            cmp QWORD PTR [RSP+56],R15
            mov R14D,EBP
            jne .L_42f6bd

            mov R12D,EBP
            mov DWORD PTR [RSP+56],EAX
            mov RBP,RBX
            mov R14,QWORD PTR [RSP+64]
            mov R13D,R12D
            mov EBX,10
            xor R10D,R10D
            xor R15D,R15D
            mov DWORD PTR [RSP+104],4294967295
            jmp .L_42f5e5
.L_42fa3b:

            mov EBX,R8D
            xor R10D,R10D
            xor R15D,R15D
            jmp .L_42f72a
.L_42fa49:

            mov R11D,R13D
            mov RBP,R14
            mov QWORD PTR [RSP+8],RBX
            mov DWORD PTR [RSP+56],EAX
            mov R13,QWORD PTR [RSP+112]
            xor R14D,R14D
            mov R12D,DWORD PTR [RSP+124]
            mov R15,QWORD PTR [RSP+128]
            mov RBX,QWORD PTR [RSP+136]
            jmp .L_42f5bd
.L_42fa7a:

            mov EBX,R8D
            jmp .L_42f71c
.L_42fa82:

            xor EBP,EBP
            jmp .L_42f9e8
.L_42fa89:

            mov DWORD PTR [RSP+56],EAX
            mov RAX,R14
            mov R14D,EBP
            mov QWORD PTR [RSP+8],RBX
            mov R13,QWORD PTR [RSP+112]
            mov RBP,RAX
            mov R12D,DWORD PTR [RSP+124]
            mov R15,QWORD PTR [RSP+128]
            mov R11D,R14D
            mov RBX,QWORD PTR [RSP+136]
            mov DWORD PTR [RSP+64],10
            mov DWORD PTR [RSP+104],4294967295
            jmp .L_42f5c8
.L_42facd:

            mov DWORD PTR [RSP+56],EAX
            mov RAX,RBX
            mov R13D,R14D
            mov EBX,R12D
            mov R14,QWORD PTR [RSP+64]
            mov R12D,EBP
            mov RBP,RAX
            jmp .L_42f71c
.L_42faea:

            cmp R12D,1
            mov RAX,R13
            je .L_42f7ae

            jmp .L_42f7b8
.L_42fafc:

            mov RAX,QWORD PTR [RSP+8]
            sub R13,QWORD PTR [RBX]
            mov RDI,RBX
            imul RAX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+112],R11D
            mov QWORD PTR [RBX+8],R13
            add RSI,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            mov R11D,DWORD PTR [RSP+112]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_42f764
.L_42fb52:

            mov R12,QWORD PTR [RSP+8]
            mov R15D,R11D
            imul R12,QWORD PTR [RSP+72]
            jmp .L_42fb9e
.L_42fb62:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R13
            add RSI,R12
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
.L_42fb9e:

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            je .L_42fb62

            mov R11D,R15D
            add R13,RAX
            jmp .L_42f7b8
.L_42fbc7:

            mov RSI,R15
            mov RDX,R13
            jmp .L_42f7a0
.L_42fbd2:

            cmp R14D,1
            je .L_42f06a

            jmp .L_42f077
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fbe8:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+32]
            mov RCX,R13
            imul RAX,QWORD PTR [RSP+72]
            sub RCX,QWORD PTR [RBX]
            add RSI,QWORD PTR [RBX+16]
            mov RDI,RBX
            mov QWORD PTR [RBX+8],RCX
            add RSI,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_42ef80

            mov RCX,QWORD PTR [RBX+8]
            add RCX,QWORD PTR [RBX]
            mov R13,RCX
            jmp .L_42f01f
.L_42fc29:

            mov QWORD PTR [RSP+8],R12
            jmp .L_42e916
.L_42fc33:

            call __stack_chk_fail@PLT
.L_42fc38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fc40:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,232
.L_42fc54:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP],RSI
            mov EDX,EAX
            and EDX,2048
            test AH,4
            je .L_42feb0

            xor EBX,EBX
            test EDX,EDX
            mov R12D,2
            sete BL
            mov DWORD PTR [RSP+108],2
            mov DWORD PTR [RSP+96],EBX
            lea RBX,QWORD PTR [RIP+.L_42d800]
            mov QWORD PTR [RSP+80],RBX
.L_42fca9:

            test EDX,EDX
            je .L_42fee3
.L_42fcb1:

            lea RAX,QWORD PTR [RIP+.L_42d7d0]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
.L_42fcd3:

            add RSI,R12
            add RSI,QWORD PTR [R15+8]
            mov RDI,R15
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R15]
            mov RBX,QWORD PTR [R15+8]
            mov QWORD PTR [RSP+64],R12
            mov DWORD PTR [RSP+60],0
            add RBX,RAX
            sub RAX,R12
            add RAX,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+40],RBX
            mov R12,R15
            mov R13,RAX
            lea RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+48],RAX
.L_42fd1e:

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+32]
            call RAX

            test EAX,EAX
            mov DWORD PTR [RSP+56],EAX
            je .L_43076d

            movzx EAX,BYTE PTR [RSP+96]
            mov EDX,DWORD PTR [RSP+120]
            mov R14,R12
            and EAX,1
            mov BYTE PTR [RSP+107],AL
            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            js .L_43024b
.L_42fd5e:

            mov EBX,DWORD PTR [RSP+100]
            cmp DWORD PTR [RSP+56],EBX
            je .L_4302d8

            cmp BYTE PTR [RSP+107],0
            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RSP+24],RAX
            jne .L_4302d8
.L_42fd80:

            movsxd RAX,DWORD PTR [RSP+56]
            lea EBP,DWORD PTR [RDX-44032]
            add QWORD PTR [RSP],RAX
            sub QWORD PTR [RSP+16],RAX
            cmp EBP,11171
            mov QWORD PTR [RSP+88],RAX
            jbe .L_43079e

            mov EAX,EDX
            shr EAX,8
            cmp EAX,466
            ja .L_42fdd0

            lea RBX,QWORD PTR [RIP+.L_44c6c0]
            cmp BYTE PTR [RBX+RAX*1],0
            je .L_42fdd0

            cmp EDX,119364
            jbe .L_43057e

            nop
            nop
            nop
            nop
            nop
            nop
.L_42fdd0:

            lea EAX,DWORD PTR [RDX-8192]
            cmp EAX,4095
            jbe .L_42ff88

            lea EAX,DWORD PTR [RDX-63744]
            cmp EAX,511
            jbe .L_42ff88

            lea EAX,DWORD PTR [RDX-194560]
            xor R8D,R8D
            cmp EAX,767
            jbe .L_42ff90

            lea EAX,DWORD PTR [RDX-69786]
            and EAX,4294967293
            je .L_42ff88

            cmp EDX,69803
            je .L_42ff88

            mov R9,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+24]
            lea RBP,QWORD PTR [RIP+.L_44bf80]
            lea R12,QWORD PTR [RIP+.L_44bd00]
            lea RBX,QWORD PTR [RIP+.L_44bb20]
            mov R11D,4294967295
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe50:

            mov ECX,7773
            mov R10D,930
            xor ESI,ESI
            mov EAX,930
            jmp .L_42fe8a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42fe68:

            lea ESI,DWORD PTR [RAX+1]
            cmp R10D,ESI
            jl .L_42fe9f
.L_42fe70:

            lea EAX,DWORD PTR [R10+RSI*1]
            lea R15,QWORD PTR [RIP+.L_448f60]
            mov ECX,EAX
            sar ECX,1
            movsxd RCX,ECX
            lea RCX,QWORD PTR [RCX+RCX*2]
            mov ECX,DWORD PTR [R15+RCX*4]
.L_42fe8a:

            sar EAX,1
            cmp EDX,ECX
            ja .L_42fe68

            jae .L_430480

            lea R10D,DWORD PTR [RAX-1]
            cmp R10D,ESI
            jge .L_42fe70
.L_42fe9f:

            mov QWORD PTR [RSP+24],RDI
            jmp .L_42ff90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42feb0:

            test AH,16
            je .L_42ff13

            xor EBX,EBX
            test AH,32
            mov R12D,2
            sete BL
            test EDX,EDX
            mov DWORD PTR [RSP+108],2
            mov DWORD PTR [RSP+96],EBX
            lea RBX,QWORD PTR [RIP+.L_42d870]
            mov QWORD PTR [RSP+80],RBX
            jne .L_42fcb1
.L_42fee3:

            test AH,32
            je .L_430391

            lea RAX,QWORD PTR [RIP+.L_42d7a0]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
            jmp .L_42fcd3
.L_42ff13:

            mov EBX,EAX
            and EBX,256
            mov DWORD PTR [RSP+96],EBX
            jne .L_43044f

            test EDX,EDX
            jne .L_4306e2

            and EAX,8192
            mov DWORD PTR [RSP+96],EAX
            je .L_430377

            lea RAX,QWORD PTR [RIP+.L_42d870]
            mov RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+96],0
            mov R12D,2
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+108],2
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_42d7a0]
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
            jmp .L_42fcd3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ff88:

            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
.L_42ff90:

            lea RAX,QWORD PTR [RSP+124]
            mov R12,QWORD PTR [RSP+16]
            lea R15,QWORD PTR [RSP+128]
            movsxd RBP,R8D
            mov QWORD PTR [RSP+8],RAX
.L_42ffaa:

            mov RDX,R12
            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+32]
            mov EBX,EBP
            call RAX

            test EAX,EAX
            jle .L_4300c0

            mov EDI,DWORD PTR [RSP+124]
            cmp EDI,119364
            ja .L_4300c0

            lea R11,QWORD PTR [RIP+.L_44bb20]
            mov EDX,EDI
            mov ESI,EDI
            shr EDX,8
            shr ESI,4
            mov ECX,EDI
            movzx EDX,BYTE PTR [R11+RDX*1]
            lea R11,QWORD PTR [RIP+.L_44bd00]
            and ESI,15
            and ECX,15
            shl RDX,4
            add RDX,R11
            movzx EDX,BYTE PTR [RDX+RSI*1]
            lea RSI,QWORD PTR [RIP+.L_44bf80]
            shl RDX,4
            add RDX,RSI
            cmp EBP,9
            movzx EDX,BYTE PTR [RDX+RCX*1]
            jg .L_4300c0

            test EDX,EDX
            je .L_4300c0

            cdqe 
            add QWORD PTR [RSP],RAX
            sub R12,RAX
            test EBX,EBX
            je .L_43006b

            cmp EDX,DWORD PTR [RSP+132]
            jl .L_4302f0

            lea ECX,DWORD PTR [RBP-1]
            mov EAX,1
            mov R9,RCX
            add RCX,1
            jmp .L_430063
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430058:

            add RAX,1
            cmp DWORD PTR [R15+RAX*8-4],EDX
            jg .L_430080
.L_430063:

            cmp RCX,RAX
            movsxd RSI,EAX
            jne .L_430058
.L_43006b:

            mov DWORD PTR [R15+RBP*8+4],EDX
            mov DWORD PTR [R15+RBP*8],EDI
.L_430074:

            add RBP,1
            jmp .L_42ffaa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430080:

            cmp EBX,ESI
            jle .L_4300b0
.L_430084:

            movsxd RCX,R9D
            sub R9D,ESI
            shl RCX,3
            shl R9,3
            lea RAX,QWORD PTR [R15+RCX*1]
            add RCX,QWORD PTR [RSP+48]
            sub RCX,R9
            nop
            nop
.L_4300a0:

            mov R8,QWORD PTR [RAX]
            sub RAX,8
            mov QWORD PTR [RAX+16],R8
            cmp RCX,RAX
            jne .L_4300a0
.L_4300b0:

            mov DWORD PTR [RSP+RSI*8+132],EDX
            mov DWORD PTR [RSP+RSI*8+128],EDI
            jmp .L_430074
.L_4300c0:

            cmp QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+16],R12
            mov R12D,EAX
            je .L_4303b8

            mov RAX,QWORD PTR [RSP+88]
            add RAX,QWORD PTR [RSP+40]
            cmp R13,RAX
            jb .L_4302fb

            cmp DWORD PTR [RSP+56],2
            je .L_430353
.L_4300f2:

            jle .L_430362

            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,3
            je .L_43012b

            cmp EAX,4
            jne .L_43036d

            mov RDI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RDI]
            mov BYTE PTR [RCX],AL
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+40],RAX
.L_43012b:

            mov RDI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+40]
            movzx ESI,BYTE PTR [RDI]
            lea RDX,QWORD PTR [RDI+1]
            lea RAX,QWORD PTR [RCX+1]
            mov BYTE PTR [RCX],SIL
.L_430143:

            lea RDI,QWORD PTR [RDX+1]
            movzx EDX,BYTE PTR [RDX]
            mov QWORD PTR [RSP+24],RDI
            lea RDI,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],DL
            mov QWORD PTR [RSP+40],RDI
.L_43015a:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RAX]
            lea R15,QWORD PTR [RDI+1]
            mov BYTE PTR [RDI],AL
.L_43016d:

            test EBX,EBX
            je .L_4306d8

            mov RBX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+128]
            lea EAX,DWORD PTR [RBP-1]
            imul RBX,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RDI+RAX*8+8]
            mov DWORD PTR [RSP+56],R12D
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+24],RBP
            mov RBP,QWORD PTR [RSP+80]
            mov R12,RBX
            mov RBX,QWORD PTR [RSP+64]
.L_4301ac:

            mov RAX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RAX]
            mov DWORD PTR [RSP+120],EDX
            jmp .L_4301fa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4301c0:

            sub R15,QWORD PTR [R14]
            mov RSI,QWORD PTR [R14+16]
            mov RDI,R14
            add RSI,RBX
            add RSI,R12
            mov QWORD PTR [R14+8],R15
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R14]
            mov R15,QWORD PTR [R14+8]
            mov EDX,DWORD PTR [RSP+120]
            add R15,RAX
            sub RAX,RBX
            add RAX,QWORD PTR [R14+16]
            mov R13,RAX
.L_4301fa:

            mov RSI,R13
            mov RDI,R15
            sub RSI,R15
            call RBP

            test RAX,RAX
            je .L_4301c0

            add QWORD PTR [RSP+8],8
            add R15,RAX
            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+24],RAX
            jne .L_4301ac

            mov R12D,DWORD PTR [RSP+56]
            mov QWORD PTR [RSP+40],R15
.L_430229:

            test R12D,R12D
            je .L_430956

            mov EDX,DWORD PTR [RSP+124]
            test R12D,R12D
            mov DWORD PTR [RSP+56],R12D
            mov DWORD PTR [RSP+120],EDX
            jns .L_42fd5e

            mov R12,R14
.L_43024b:

            mov RBX,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+40]
            imul RBX,QWORD PTR [RSP+72]
.L_43025b:

            mov RSI,R13
            mov RDI,RBP
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,RBP
            call RAX

            test RAX,RAX
            je .L_430723

            add RBP,RAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+60],4294967295
            mov QWORD PTR [RSP+40],RBP
            neg EAX
            cdqe 
            add QWORD PTR [RSP],RAX
            sub QWORD PTR [RSP+16],RAX
            jmp .L_42fd1e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4302a0:

            mov DWORD PTR [RSP+60],4294967295
.L_4302a8:

            mov RBX,QWORD PTR [RSP+216]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+60]
            jne .L_43095e

            add RSP,232
.L_4302ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4302d8:

            mov QWORD PTR [RSP+24],0
            jmp .L_42fd80
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4302f0:

            xor ESI,ESI
            lea R9D,DWORD PTR [RBP-1]
            jmp .L_430084
.L_4302fb:

            mov RAX,QWORD PTR [RSP+40]
            sub RAX,QWORD PTR [R14]
            mov RDI,R14
            mov R15,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [R14+16]
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RSI,R15
            imul RAX,QWORD PTR [RSP+72]
            add RSI,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov R13,QWORD PTR [R14]
            mov RAX,QWORD PTR [R14+8]
            add RAX,R13
            sub R13,R15
            add R13,QWORD PTR [R14+16]
            cmp DWORD PTR [RSP+56],2
            mov QWORD PTR [RSP+40],RAX
            jne .L_4300f2
.L_430353:

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+40]
            jmp .L_430143
.L_430362:

            cmp DWORD PTR [RSP+56],1
            je .L_43015a
.L_43036d:

            mov R15,QWORD PTR [RSP+40]
            jmp .L_43016d
.L_430377:

            lea RAX,QWORD PTR [RIP+.L_42d1f0]
            mov R12D,1
            mov DWORD PTR [RSP+108],1
            mov QWORD PTR [RSP+80],RAX
.L_430391:

            mov RSI,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_42d600]
            mov QWORD PTR [RSP+72],R12
            mov DWORD PTR [RSP+100],6
            mov QWORD PTR [RSP+32],RAX
            imul RSI,R12
            jmp .L_42fcd3
.L_4303b8:

            mov R15,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RBP
            imul R15,QWORD PTR [RSP+72]
            mov DWORD PTR [RSP+24],EBX
            mov DWORD PTR [RSP+56],EAX
            mov R12,QWORD PTR [RSP+40]
            mov RBP,QWORD PTR [RSP+64]
            mov RBX,R15
            mov R15,QWORD PTR [RSP+80]
            jmp .L_43041e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4303e8:

            mov RSI,QWORD PTR [R14+16]
            mov R8,R12
            sub R8,QWORD PTR [R14]
            mov RDI,R14
            add RSI,RBP
            add RSI,RBX
            mov QWORD PTR [R14+8],R8
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov R13,QWORD PTR [R14]
            mov R12,QWORD PTR [R14+8]
            add R12,R13
            sub R13,RBP
            add R13,QWORD PTR [R14+16]
.L_43041e:

            mov RSI,R13
            mov EDX,DWORD PTR [RSP+120]
            mov RDI,R12
            sub RSI,R12
            call R15

            test RAX,RAX
            je .L_4303e8

            mov RDI,R12
            mov RBP,QWORD PTR [RSP+8]
            mov EBX,DWORD PTR [RSP+24]
            add RDI,RAX
            mov R12D,DWORD PTR [RSP+56]
            mov R15,RDI
            jmp .L_43016d
.L_43044f:

            xor EBX,EBX
            test AH,2
            mov R12D,1
            sete BL
            mov DWORD PTR [RSP+108],1
            mov DWORD PTR [RSP+96],EBX
            lea RBX,QWORD PTR [RIP+.L_42d1f0]
            mov QWORD PTR [RSP+80],RBX
            jmp .L_42fca9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430480:

            cdqe 
            lea RCX,QWORD PTR [RIP+.L_448f60]
            cmp R8D,10
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov EDX,DWORD PTR [RAX+4]
            mov R10D,DWORD PTR [RAX+8]
            je .L_42fe9f

            test R8D,R8D
            je .L_4304d0

            lea RSI,QWORD PTR [R9-8]
            mov EAX,R11D
            shl RAX,3
            sub RSI,RAX
            mov RAX,R9
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4304c0:

            mov RCX,QWORD PTR [RAX]
            sub RAX,8
            mov QWORD PTR [RAX+16],RCX
            cmp RAX,RSI
            jne .L_4304c0
.L_4304d0:

            xor EAX,EAX
            cmp R10D,119364
            ja .L_43050a

            mov EAX,R10D
            mov ESI,R10D
            mov ECX,R10D
            shr EAX,8
            shr ESI,4
            and ECX,15
            movzx EAX,BYTE PTR [RBX+RAX*1]
            and ESI,15
            shl RAX,4
            add RAX,R12
            movzx EAX,BYTE PTR [RAX+RSI*1]
            shl RAX,4
            add RAX,RBP
            movzx EAX,BYTE PTR [RAX+RCX*1]
.L_43050a:

            mov DWORD PTR [RSP+132],EAX
            lea EAX,DWORD PTR [RDX-8192]
            add R8D,1
            mov DWORD PTR [RSP+128],R10D
            mov DWORD PTR [RSP+120],EDX
            cmp EAX,4095
            jbe .L_430570

            lea EAX,DWORD PTR [RDX-63744]
            cmp EAX,511
            jbe .L_430570

            lea EAX,DWORD PTR [RDX-194560]
            cmp EAX,767
            jbe .L_430570

            lea EAX,DWORD PTR [RDX-69786]
            add R9,8
            add R11D,1
            xor EDI,EDI
            and EAX,4294967293
            je .L_430570

            cmp EDX,69803
            jne .L_42fe50

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430570:

            mov QWORD PTR [RSP+24],0
            jmp .L_42ff90
.L_43057e:

            lea R8,QWORD PTR [RIP+.L_44bb20]
            mov ESI,EDX
            mov EDI,EDX
            shr ESI,4
            and EDI,15
            movzx EAX,BYTE PTR [R8+RAX*1]
            and ESI,15
            shl RAX,4
            mov R8,RAX
            lea RAX,QWORD PTR [RIP+.L_44bd00]
            add RAX,R8
            movzx EAX,BYTE PTR [RAX+RSI*1]
            shl RAX,4
            mov RSI,RAX
            lea RAX,QWORD PTR [RIP+.L_44bf80]
            add RAX,RSI
            cmp BYTE PTR [RAX+RDI*1],0
            je .L_42fdd0

            cmp QWORD PTR [RSP+24],0
            mov R12,R14
            je .L_430973

            mov RAX,QWORD PTR [RSP+88]
            mov RBX,QWORD PTR [RSP+40]
            add RAX,RBX
            cmp R13,RAX
            jae .L_430636

            mov RAX,RBX
            sub RAX,QWORD PTR [R14]
            mov RBX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RSI,RBX
            imul RAX,QWORD PTR [RSP+72]
            add RSI,RAX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R14]
            mov RDI,QWORD PTR [R14+8]
            add RDI,RAX
            sub RAX,RBX
            add RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+40],RDI
            mov R13,RAX
.L_430636:

            cmp DWORD PTR [RSP+56],2
            je .L_430697

            jle .L_430963

            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,3
            je .L_430676

            cmp EAX,4
            jne .L_42fd1e

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RBX]
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+40],RAX
.L_430676:

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RBX]
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+40],RAX
.L_430697:

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RBX]
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+40],RAX
.L_4306b8:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RAX]
            mov BYTE PTR [RBX],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_42fd1e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4306d8:

            mov QWORD PTR [RSP+40],R15
            jmp .L_430229
.L_4306e2:

            lea RAX,QWORD PTR [RIP+.L_42d800]
            mov RSI,QWORD PTR [RSP+16]
            mov R12D,2
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+108],2
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_42d7d0]
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
            jmp .L_42fcd3
.L_430723:

            sub RBP,QWORD PTR [R12]
            mov R14,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R14
            mov QWORD PTR [R12+8],RBP
            add RSI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R12]
            mov RBP,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add RBP,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
            jmp .L_43025b
.L_43076d:

            mov R15,R12
.L_430770:

            mov RBX,QWORD PTR [RSP+40]
            mov RAX,RBX
            sub RAX,QWORD PTR [R15]
            cmp DWORD PTR [RSP+108],2
            mov QWORD PTR [R15+8],RAX
            mov BYTE PTR [RBX],0
            jne .L_4302a8

            mov RDX,QWORD PTR [R15]
            mov RAX,QWORD PTR [R15+8]
            mov BYTE PTR [RDX+RAX*1+1],0
            jmp .L_4302a8
.L_43079e:

            mov EDX,3739835469
            mov EAX,EBP
            mov R12,R14
            mul EDX
            mov RBX,QWORD PTR [RSP+16]
            mov R15,QWORD PTR [RSP+40]
            imul RBX,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+64]
            shr EDX,9
            add EDX,4352
            mov DWORD PTR [RSP+120],EDX
            jmp .L_430811
.L_4307ce:

            mov RSI,QWORD PTR [R12+16]
            mov RCX,R15
            sub RCX,QWORD PTR [R12]
            mov RDI,R12
            add RSI,R14
            add RSI,RBX
            mov QWORD PTR [R12+8],RCX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R12]
            mov R15,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add R15,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
.L_430811:

            mov RSI,R13
            mov RDI,R15
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R15
            call RAX

            test RAX,RAX
            je .L_4307ce

            mov R14,R15
            mov EDX,3739835469
            mov ESI,613566757
            add R14,RAX
            mov EAX,EBP
            mul EDX
            mov EAX,EDX
            mov EDX,EBP
            shr EAX,9
            imul EAX,EAX,588
            sub EDX,EAX
            shr EDX,2
            mov EAX,EDX
            mul ESI
            add EDX,4449
            mov DWORD PTR [RSP+120],EDX
            jmp .L_4308a1
.L_43085c:

            sub R14,QWORD PTR [R12]
            mov R15,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R15
            mov QWORD PTR [R12+8],R14
            add RSI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R12]
            mov R14,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add R14,RAX
            sub RAX,R15
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
.L_4308a1:

            mov RSI,R13
            mov RDI,R14
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R14
            call RAX

            test RAX,RAX
            je .L_43085c

            mov EDX,EBP
            mov RSI,RAX
            mov EDI,613566757
            shr EDX,2
            mov EAX,EDX
            mul EDI
            imul EDX,EDX,28
            sub EBP,EDX
            mov EDX,EBP
            lea RBP,QWORD PTR [R14+RSI*1]
            add EDX,4519
            cmp EDX,4519
            mov QWORD PTR [RSP+40],RBP
            je .L_42fd1e

            mov DWORD PTR [RSP+120],EDX
            jmp .L_430934
.L_4308ef:

            sub RBP,QWORD PTR [R12]
            mov R14,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R14
            mov QWORD PTR [R12+8],RBP
            add RSI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R12]
            mov RBP,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add RBP,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
.L_430934:

            mov RSI,R13
            mov RDI,RBP
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,RBP
            call RAX

            test RAX,RAX
            je .L_4308ef
.L_430949:

            add RBP,RAX
            mov QWORD PTR [RSP+40],RBP
            jmp .L_42fd1e
.L_430956:

            mov R15,R14
            jmp .L_430770
.L_43095e:

            call __stack_chk_fail@PLT
.L_430963:

            cmp DWORD PTR [RSP+56],1
            je .L_4306b8

            jmp .L_42fd1e
.L_430973:

            mov RBX,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+40]
            imul RBX,QWORD PTR [RSP+72]
.L_430983:

            mov RSI,R13
            mov EDX,DWORD PTR [RSP+120]
            mov RDI,RBP
            sub RSI,RBP
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            jne .L_430949

            sub RBP,QWORD PTR [R12]
            mov R14,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R14
            mov QWORD PTR [R12+8],RBP
            add RSI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_4302a0

            mov RAX,QWORD PTR [R12]
            mov RBP,QWORD PTR [R12+8]
            add RBP,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
            jmp .L_430983
.L_4309df:

            nop
.L_4309e0:

            push R14
            push R13
            lea R14,QWORD PTR [RDX+RDX*1+2]
            push R12
            mov R12,RSI
            push RBP
            push RBX
.L_4309f0:

            mov RSI,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov RBP,RDX
            mov R13D,ECX
            add RSI,R14
            call .L_42e2a0

            test RAX,RAX
            je .L_430ab4

            mov RDX,QWORD PTR [RBX]
            mov R9,QWORD PTR [RBX+8]
            add R9,RDX
            test RBP,RBP
            je .L_430ab0

            xor ESI,ESI
            xor EAX,EAX
            mov ECX,4294967293
            mov EDX,4294967295
            jmp .L_430a4a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430a38:

            mov BYTE PTR [R9+RSI*2],R8B
            mov BYTE PTR [R9+RSI*2+1],R10B
            add RSI,1
            cmp RBP,RSI
            je .L_430a82
.L_430a4a:

            movsx EDI,BYTE PTR [R12+RSI*1]
            mov R10D,ECX
            cmp EDI,127
            cmovbe R10D,EDI
            cmp EDI,128
            sbb R8D,R8D
            cmp EDI,127
            cmova EAX,EDX
            test R13D,R13D
            not R8D
            jne .L_430a38

            mov BYTE PTR [R9+RSI*2],R10B
            mov BYTE PTR [R9+RSI*2+1],R8B
            add RSI,1
            cmp RBP,RSI
            jne .L_430a4a
.L_430a82:

            mov RDX,QWORD PTR [RBX]
            lea R9,QWORD PTR [R9+R14*1-2]
.L_430a8a:

            mov RCX,R9
            sub RCX,RDX
            mov QWORD PTR [RBX+8],RCX
            mov BYTE PTR [R9],0
            mov RCX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBX+8]
            mov BYTE PTR [RCX+RDX*1+1],0
.L_430aa4:

            pop RBX
.L_430aa5:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430ab0:

            xor EAX,EAX
            jmp .L_430a8a
.L_430ab4:

            mov EAX,4294967295
            jmp .L_430aa4
.L_430abb:

            nop
            nop
            nop
            nop
            nop
.L_430ac0:

            xor ECX,ECX
            jmp .L_4309e0
.L_430ac7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430ad0:

            mov ECX,1
            jmp .L_4309e0
.L_430ada:

            nop
            nop
            nop
            nop
            nop
            nop
.L_430ae0:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_430af7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP],RDX
            mov ECX,EAX
            and ECX,5120
            cmp ECX,1
            sbb RDI,RDI
            add RDI,2
            cmp ECX,1
            sbb ECX,ECX
            xor EBP,EBP
            mov QWORD PTR [RSP+16],RDI
            add ECX,2
            test AH,40
            mov RAX,QWORD PTR [RBX+8]
            setne BPL
            mov DWORD PTR [RSP+28],ECX
            add EBP,1
            lea RSI,QWORD PTR [RAX+RDX*2]
            add RSI,RDI
            mov RDI,RBX
            call .L_42e2a0

            test RAX,RAX
            mov RDX,QWORD PTR [RSP]
            je .L_430db0

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+16]
            lea R13,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RBX]
            mov R14,QWORD PTR [R15+40]
            movsxd RBP,EBP
            mov QWORD PTR [RSP+40],R12
            lea R12,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+48],RDX
            sub RDI,RAX
            mov DWORD PTR [RSP+8],0
            add RCX,RAX
            mov RAX,RDI
            sub RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
.L_430bb0:

            cmp RBP,RDX
            ja .L_430c50
.L_430bb9:

            mov RDX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP+40]
            mov R8,R13
            mov RCX,R12
            mov RDI,R14
            call iconv@PLT

            cmp RAX,-1
            jne .L_430c50

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+56]
            cmp EDX,84
            je .L_430ca0

            cmp EDX,22
            je .L_430ca0

            sub RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+48]
            mov RDI,RBX
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RAX+RDX*2]
            call .L_42e2a0

            test RAX,RAX
            je .L_430db0

            mov RAX,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBX+16]
            add RDX,RAX
            sub RDI,RAX
            mov QWORD PTR [RSP+56],RDX
            mov RDX,QWORD PTR [RSP+48]
            mov RAX,RDI
            sub RAX,QWORD PTR [RSP+16]
            cmp RBP,RDX
            mov QWORD PTR [RSP+64],RAX
            jbe .L_430bb9

            nop
            nop
            nop
            nop
            nop
            nop
.L_430c50:

            mov RAX,QWORD PTR [RSP+56]
            mov RDX,RAX
            sub RDX,QWORD PTR [RBX]
            cmp DWORD PTR [RSP+28],2
            mov QWORD PTR [RBX+8],RDX
            mov BYTE PTR [RAX],0
            jne .L_430c75

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            mov BYTE PTR [RDX+RAX*1+1],0
.L_430c75:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+8]
            jne .L_430dbd

            add RSP,88
.L_430c91:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
.L_430ca0:

            mov EDX,DWORD PTR [R15+36]
            test DH,21
            je .L_430d10

            mov ESI,EDX
            xor ECX,ECX
            and ESI,256
            setne CL
            add RCX,2
            cmp QWORD PTR [RSP+64],RCX
            jb .L_430d28

            test ESI,ESI
            jne .L_430d8f
.L_430cc9:

            and EDX,1024
            cmp EDX,1
            sbb EDX,EDX
            and DX,510
            sub DX,513
            mov WORD PTR [RAX],DX
.L_430ce1:

            add QWORD PTR [RSP+56],RCX
            sub QWORD PTR [RSP+64],RCX
.L_430ceb:

            mov RDX,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+8],4294967295
            add QWORD PTR [RSP+40],RBP
            sub RDX,RBP
            mov QWORD PTR [RSP+48],RDX
            jmp .L_430bb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430d10:

            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RAX],63
            sub QWORD PTR [RSP+64],1
            jmp .L_430ceb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430d28:

            mov RSI,QWORD PTR [RSP+16]
            sub RAX,QWORD PTR [RBX]
            mov RDI,RBX
            imul RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RBX+8],RAX
            add RSI,QWORD PTR [RBX+16]
            add RSI,RCX
            call .L_42e2a0

            test RAX,RAX
            je .L_430db0

            mov RDX,QWORD PTR [RBX+8]
            mov RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RBX]
            sub RCX,RDX
            add RAX,RDX
            mov RDX,RCX
            sub RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RAX
            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+64],RDX
            mov EDX,DWORD PTR [R15+36]
            mov ESI,EDX
            and ESI,256
            test ESI,ESI
            je .L_430cc9
.L_430d8f:

            movzx EDX,WORD PTR [RIP+.L_448f40]
            movzx EDI,BYTE PTR [RIP+.L_448f42]
            mov WORD PTR [RAX],DX
            mov BYTE PTR [RAX+2],DIL
            jmp .L_430ce1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430db0:

            mov DWORD PTR [RSP+8],4294967295
            jmp .L_430c75
.L_430dbd:

            call __stack_chk_fail@PLT
.L_430dc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430dd0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_430de1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RSI
            mov EDX,EAX
            and EDX,2048
            test AH,4
            jne .L_430f40

            test AH,16
            je .L_430f88

            test EDX,EDX
            mov EBP,2
            lea R12,QWORD PTR [RIP+.L_42d870]
            mov DWORD PTR [RSP+60],2
            je .L_430f5c
.L_430e34:

            lea RAX,QWORD PTR [RIP+.L_42d7d0]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+40],1
            mov QWORD PTR [RSP+32],RAX
.L_430e4e:

            add RSI,RBP
            add RSI,QWORD PTR [R14+8]
            mov RDI,R14
            call .L_42e2a0

            test RAX,RAX
            je .L_430fd8

            mov RBX,QWORD PTR [R14]
            mov R15,QWORD PTR [R14+8]
            lea RAX,QWORD PTR [RSP+68]
            mov DWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            add R15,RBX
            sub RBX,RBP
            add RBX,QWORD PTR [R14+16]
            mov R14,R15
            mov R15,RAX
.L_430e92:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+32]
            call RAX

            test EAX,EAX
            je .L_431060

            jns .L_430ebc

            neg EAX
            mov DWORD PTR [RSP+56],4294967295
.L_430ebc:

            movsxd RCX,EAX
            sub QWORD PTR [RSP+8],RCX
            mov R13,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+48],RCX
            imul R13,RAX
            jmp .L_430f13
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430ee0:

            sub R14,QWORD PTR [R15]
            mov RSI,QWORD PTR [R15+16]
            mov RDI,R15
            add RSI,RBP
            add RSI,R13
            mov QWORD PTR [R15+8],R14
            call .L_42e2a0

            test RAX,RAX
            je .L_430fd8

            mov RBX,QWORD PTR [R15]
            mov R14,QWORD PTR [R15+8]
            add R14,RBX
            sub RBX,RBP
            add RBX,QWORD PTR [R15+16]
.L_430f13:

            mov RSI,RBX
            mov EDX,DWORD PTR [RSP+68]
            mov RDI,R14
            sub RSI,R14
            call R12

            test RAX,RAX
            je .L_430ee0

            mov RDX,QWORD PTR [RSP+48]
            add R14,RAX
            add QWORD PTR [RSP+16],RDX
            jmp .L_430e92
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430f40:

            lea R12,QWORD PTR [RIP+.L_42d800]
            mov EBP,2
            mov DWORD PTR [RSP+60],2
.L_430f54:

            test EDX,EDX
            jne .L_430e34
.L_430f5c:

            test AH,32
            je .L_431020

            lea RAX,QWORD PTR [RIP+.L_42d7a0]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+40],1
            mov QWORD PTR [RSP+32],RAX
            jmp .L_430e4e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430f88:

            test AH,1
            jne .L_431040

            test EDX,EDX
            jne .L_431093

            test AH,32
            je .L_431007

            lea RAX,QWORD PTR [RIP+.L_42d7a0]
            mov RSI,QWORD PTR [RSP+8]
            mov EBP,2
            mov QWORD PTR [RSP+40],1
            lea R12,QWORD PTR [RIP+.L_42d870]
            mov DWORD PTR [RSP+60],2
            mov QWORD PTR [RSP+32],RAX
            jmp .L_430e4e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430fd8:

            mov DWORD PTR [RSP+56],4294967295
.L_430fe0:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+56]
            jne .L_4310c6

            add RSP,88
.L_430ffc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_431007:

            lea R12,QWORD PTR [RIP+.L_42d1f0]
            mov EBP,1
            mov DWORD PTR [RSP+60],1
            nop
            nop
            nop
            nop
            nop
.L_431020:

            mov RSI,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_42d600]
            mov QWORD PTR [RSP+40],RBP
            mov QWORD PTR [RSP+32],RAX
            imul RSI,RBP
            jmp .L_430e4e
          .byte 0x90
.L_431040:

            mov EBP,1
            lea R12,QWORD PTR [RIP+.L_42d1f0]
            mov DWORD PTR [RSP+60],1
            jmp .L_430f54
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431060:

            mov RAX,R15
            mov R15,R14
            mov R14,RAX
            mov RAX,R15
            sub RAX,QWORD PTR [R14]
            cmp DWORD PTR [RSP+60],2
            mov QWORD PTR [R14+8],RAX
            mov BYTE PTR [R15],0
            jne .L_430fe0

            mov RDX,QWORD PTR [R14]
            mov RAX,QWORD PTR [R14+8]
            mov BYTE PTR [RDX+RAX*1+1],0
            jmp .L_430fe0
.L_431093:

            lea RAX,QWORD PTR [RIP+.L_42d7d0]
            mov RSI,QWORD PTR [RSP+8]
            mov EBP,2
            mov QWORD PTR [RSP+40],1
            lea R12,QWORD PTR [RIP+.L_42d800]
            mov DWORD PTR [RSP+60],2
            mov QWORD PTR [RSP+32],RAX
            jmp .L_430e4e
.L_4310c6:

            call __stack_chk_fail@PLT
.L_4310cb:

            nop
            nop
            nop
            nop
            nop
.L_4310d0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R13,RDI
            mov RBP,RDX
            sub RSP,72
.L_4310e7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+48],0
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_42e2a0

            test RAX,RAX
            je .L_431230

            mov R15,QWORD PTR [R13+16]
            mov R14,QWORD PTR [R13]
            mov RBX,QWORD PTR [R13+8]
            call __ctype_get_mb_cur_max@PLT

            sub R15,1
            sub R15,RAX
            add RBX,R14
            add R14,R15
            test RBP,RBP
            je .L_4311f8

            lea RAX,QWORD PTR [RSP+44]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_431192
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431158:

            test R15D,R15D
            mov ESI,DWORD PTR [RSP+44]
            jns .L_431169

            neg R15D
            mov ESI,63
.L_431169:

            movsxd RDX,R15D
            mov RDI,RBX
            add R12,RDX
            sub RBP,RDX
            mov RDX,QWORD PTR [RSP+16]
            call wcrtomb@PLT

            cmp EAX,-1
            je .L_431230

            cdqe 
            add RBX,RAX
            test RBP,RBP
            je .L_4311f8
.L_431192:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RBP
            mov RSI,R12
            call .L_42d390

            test EAX,EAX
            mov R15D,EAX
            je .L_4311f8

            cmp RBX,R14
            jb .L_431158

            sub RBX,QWORD PTR [R13]
            mov RDI,R13
            lea RSI,QWORD PTR [RBX+RBP*2+1]
            mov QWORD PTR [R13+8],RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_431230

            mov RCX,QWORD PTR [R13]
            mov R14,QWORD PTR [R13+16]
            mov RBX,RCX
            mov QWORD PTR [RSP+24],RCX
            add RBX,QWORD PTR [R13+8]
            call __ctype_get_mb_cur_max@PLT

            mov RCX,QWORD PTR [RSP+24]
            sub R14,1
            sub R14,RAX
            add R14,RCX
            jmp .L_431158
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4311f8:

            mov RAX,RBX
            sub RAX,QWORD PTR [R13]
            mov QWORD PTR [R13+8],RAX
            mov BYTE PTR [RBX],0
            xor EAX,EAX
.L_431208:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_431237

            add RSP,72
.L_43121c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431230:

            mov EAX,4294967295
            jmp .L_431208
.L_431237:

            call __stack_chk_fail@PLT
.L_43123c:

            nop
            nop
            nop
            nop
.L_431240:

            sub RSP,8
            xor EAX,EAX
            test RDX,RDX
            je .L_431267

            cmp BYTE PTR [RSI],0
            jne .L_43125e

            jmp .L_431267
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431258:

            cmp BYTE PTR [RSI+RAX*1],0
            je .L_431267
.L_43125e:

            add RAX,1
            cmp RDX,RAX
            jne .L_431258
.L_431267:

            mov RDX,RAX
            call .L_42e360

            test RAX,RAX
            je .L_431279

            add RSP,8
            ret 
.L_431279:

            call .L_402da5
.L_43127e:

            nop
            nop
.L_431280:

            sub RSP,8
            xor EAX,EAX
            test RDX,RDX
            je .L_4312a8

            mov R8D,DWORD PTR [RSI]
            test R8D,R8D
            jne .L_43129f

            jmp .L_4312a8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431298:

            mov ECX,DWORD PTR [RSI+RAX*4]
            test ECX,ECX
            je .L_4312a8
.L_43129f:

            add RAX,1
            cmp RDX,RAX
            jne .L_431298
.L_4312a8:

            mov RDX,RAX
            call .L_42e3f0

            test RAX,RAX
            je .L_4312ba

            add RSP,8
            ret 
.L_4312ba:

            call .L_402da5
.L_4312bf:

            nop
.L_4312c0:

            mov EDX,16777216
            jmp .L_431240
.L_4312ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4312d0:

            mov EDX,16777216
            jmp .L_431280
.L_4312d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4312e0:

            sub RSP,24
            mov EDX,1
            mov BYTE PTR [RSP+12],SIL
            lea RSI,QWORD PTR [RSP+12]
            call .L_42e360

            test RAX,RAX
            je .L_431302

            add RSP,24
            ret 
.L_431302:

            call .L_402da5
.L_431307:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431310:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,32
.L_431325:

            mov R14D,DWORD PTR [RCX+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test R14D,R14D
            jne .L_4313e8

            test RDX,RDX
            movsx ESI,BYTE PTR [RSI]
            je .L_4313ac

            test SIL,SIL
            mov R13,RCX
            mov EBP,4294967295
            jne .L_431393

            jmp .L_4313ac
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431360:

            test BYTE PTR [R13+37],1
            je .L_4313d0

            lea RSI,QWORD PTR [RIP+.L_448f40]
            mov EDX,3
            mov RDI,R12
            call .L_42e360

            test RAX,RAX
            je .L_431448

            mov R14D,EBP
.L_431387:

            add RBX,1
            movsx ESI,BYTE PTR [RBX]
            test SIL,SIL
            je .L_4313ac
.L_431393:

            test SIL,SIL
            js .L_431360

            add RBX,1
            mov RDI,R12
            call .L_4312e0

            movsx ESI,BYTE PTR [RBX]
            test SIL,SIL
            jne .L_431393
.L_4313ac:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_431459

            add RSP,32
.L_4313c7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4313d0:

            mov ESI,63
            mov RDI,R12
            mov R14D,EBP
            call .L_4312e0

            jmp .L_431387
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4313e8:

            call .L_42e360

            test RAX,RAX
            je .L_431434

            test RBP,RBP
            mov QWORD PTR [RSP+16],0
            lea R13,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+12]
            jne .L_43141d

            jmp .L_431440
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431410:

            test RAX,RAX
            je .L_431440

            add RBX,RAX
            sub RBP,RAX
            je .L_431440
.L_43141d:

            mov RCX,R13
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call mbrtowc@PLT

            cmp RAX,-2
            jb .L_431410
.L_431434:

            mov R14D,4294967295
            jmp .L_4313ac
          .byte 0x90
.L_431440:

            xor R14D,R14D
            jmp .L_4313ac
.L_431448:

            lea RSI,QWORD PTR [RIP+.L_44512a]
            mov EDI,1
            call .L_432cd0
.L_431459:

            call __stack_chk_fail@PLT
.L_43145e:

            nop
            nop
.L_431460:

            sub RSP,24
            mov EDX,1
            mov DWORD PTR [RSP+12],ESI
            lea RSI,QWORD PTR [RSP+12]
            call .L_42e3f0

            test RAX,RAX
            je .L_431481

            add RSP,24
            ret 
.L_431481:

            lea RSI,QWORD PTR [RIP+.L_44512a]
            mov EDI,1
            call .L_432cd0
.L_431492:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4314a0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            sub RSP,40
.L_4314b7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+16],0
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            shl RSI,2
            call .L_42e2a0

            test RAX,RAX
            je .L_431600

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            lea R13,QWORD PTR [RSP+16]
            mov R14,RBP
            mov DWORD PTR [RSP+12],0
            lea R15,QWORD PTR [RAX+RDX*4]
.L_431506:

            cmp BYTE PTR [R12],0
            je .L_431590
.L_431511:

            test R14,R14
            je .L_431590

            test RBP,RBP
            jne .L_431558

            mov RAX,R15
            sub RAX,QWORD PTR [RBX]
            mov RDI,RBX
            sar RAX,2
            lea RSI,QWORD PTR [R14+RAX*1+1]
            mov QWORD PTR [RBX+8],RAX
            mov DWORD PTR [R15],0
            shl RSI,2
            call .L_42e2a0

            test RAX,RAX
            je .L_431600

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov RBP,R14
            lea R15,QWORD PTR [RAX+RDX*4]
.L_431558:

            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,R15
            call mbrtowc@PLT

            cmp RAX,-2
            jae .L_4315d0

            test RAX,RAX
            je .L_431590

            cmp R14,RAX
            jb .L_431590

            add R12,RAX
            add R15,4
            sub RBP,1
            sub R14,RAX
            cmp BYTE PTR [R12],0
            jne .L_431511

            nop
            nop
.L_431590:

            mov RAX,R15
            sub RAX,QWORD PTR [RBX]
            sar RAX,2
            mov QWORD PTR [RBX+8],RAX
            mov DWORD PTR [R15],0
.L_4315a5:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_43160a

            add RSP,40
.L_4315bd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4315d0:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],84
            je .L_4315e8

            mov DWORD PTR [RSP+12],4294967295
            jmp .L_431590
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4315e8:

            add R12,1
            sub R14,1
            mov DWORD PTR [RSP+12],4294967295
            jmp .L_431506
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431600:

            mov DWORD PTR [RSP+12],4294967295
            jmp .L_4315a5
.L_43160a:

            call __stack_chk_fail@PLT
.L_43160f:

            nop
.L_431610:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,56
.L_431627:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+32],0
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_42e2a0

            test RAX,RAX
            je .L_4317b8

            mov R13,QWORD PTR [RBP+16]
            mov R12,QWORD PTR [RBP]
            mov R15,QWORD PTR [RBP+8]
            call __ctype_get_mb_cur_max@PLT

            mov EDX,DWORD PTR [R14]
            sub R13,1
            sub R13,RAX
            add R15,R12
            add R12,R13
            test EDX,EDX
            je .L_4317d1

            test RBX,RBX
            je .L_4317d1

            lea RAX,QWORD PTR [RSP+32]
            lea R13,QWORD PTR [RBX+RBX*1]
            mov DWORD PTR [RSP+28],0
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4316c2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4316a8:

            movsxd RDX,EAX
            mov EAX,DWORD PTR [R14]
            sub RBX,1
            add R15,RDX
            sub R13,2
            test EAX,EAX
            je .L_431720
.L_4316bd:

            test RBX,RBX
            je .L_431720
.L_4316c2:

            cmp R15,R12
            jae .L_431760
.L_4316cb:

            add R14,4
            mov ESI,DWORD PTR [R14-4]
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,R15
            call wcrtomb@PLT

            cmp EAX,-1
            jne .L_4316a8

            mov QWORD PTR [RSP+16],RAX
            call __errno_location@PLT

            cmp DWORD PTR [RAX],84
            mov RDX,QWORD PTR [RSP+16]
            jne .L_4317c8

            mov BYTE PTR [R15],63
            mov EAX,DWORD PTR [R14]
            add R15,1
            sub RBX,1
            sub R13,2
            mov DWORD PTR [RSP+28],EDX
            test EAX,EAX
            jne .L_4316bd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431720:

            mov RAX,R15
            sub RAX,QWORD PTR [RBP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [R15],0
.L_43172f:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+28]
            jne .L_4317de

            add RSP,56
.L_43174b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431760:

            mov RAX,R15
            sub RAX,QWORD PTR [RBP]
            mov RDI,RBP
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [R15],0
            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [R13+RAX*1+1]
            call .L_42e2a0

            test RAX,RAX
            je .L_4317b8

            mov RDX,QWORD PTR [RBP]
            mov R12,QWORD PTR [RBP+16]
            mov R15,RDX
            mov QWORD PTR [RSP+16],RDX
            add R15,QWORD PTR [RBP+8]
            call __ctype_get_mb_cur_max@PLT

            mov RDX,QWORD PTR [RSP+16]
            sub R12,1
            sub R12,RAX
            add R12,RDX
            jmp .L_4316cb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4317b8:

            mov DWORD PTR [RSP+28],4294967295
            jmp .L_43172f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4317c8:

            mov DWORD PTR [RSP+28],EDX
            jmp .L_431720
.L_4317d1:

            mov DWORD PTR [RSP+28],0
            jmp .L_431720
.L_4317de:

            call __stack_chk_fail@PLT
.L_4317e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4317f0:

            cmp EDX,1
            push R12
            push RBP
            push RBX
            sbb EBX,EBX
            mov R12,RSI
            and EBX,4294967292
            mov RBP,RDI
            add EBX,5
            call .L_42e1d0

            mov ECX,EBX
            mov RDX,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            mov RSI,RAX
            jmp .L_42dd60
.L_43181e:

            nop
            nop
.L_431820:

            cmp EDX,1
            push R12
            push RBP
            push RBX
            sbb EBX,EBX
            mov RBP,RDI
            and EBX,4294967292
            mov R12,RSI
            add EBX,6
            call .L_42e1d0

            mov ECX,EBX
            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            mov RDX,RAX
            jmp .L_42dd60
.L_43184e:

            nop
            nop
.L_431850:

            xor EAX,EAX
            ret 
.L_431853:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431860:

            xor EAX,EAX
            ret 
.L_431863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431870:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+104]
            test RDI,RDI
            je .L_431898

            nop
            nop
            nop
            nop
            nop
            nop
.L_431888:

            mov RBX,QWORD PTR [RDI]
            call .L_42d330

            test RBX,RBX
            mov RDI,RBX
            jne .L_431888
.L_431898:

            mov RDI,QWORD PTR [RBP+88]
            mov QWORD PTR [RBP+104],0
            call free@PLT

            mov QWORD PTR [RBP+88],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4318b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4318c0:

            test BYTE PTR [RDI+36],1
            mov RAX,QWORD PTR [RDI+16]
            cmove RAX,QWORD PTR [RDI+8]
            ret 
.L_4318ce:

            nop
            nop
.L_4318d0:

            cmp ESI,2
            je .L_431908

            cmp ESI,4
            jne .L_431900

            mov EAX,DWORD PTR [RDI+36]
            test AL,8
            jne .L_4318f0

            test AH,42
            je .L_4318f0

            test AH,21
            je .L_4318f4

            nop
            nop
            nop
            nop
            nop
.L_4318f0:

            test AL,128
            je .L_431920
.L_4318f4:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431900:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431908:

            mov EAX,DWORD PTR [RDI+36]
            test AL,64
            jne .L_4318f4

            and AL,127
            or EAX,64
            mov DWORD PTR [RDI+36],EAX
            jmp .L_42d8e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431920:

            and EAX,4294967231
            or AL,128
            mov DWORD PTR [RDI+36],EAX
            jmp .L_42d8e0
.L_43192d:

            nop
            nop
            nop
.L_431930:

            test RSI,RSI
            push R12
            push RBP
            mov RBP,RCX
            push RBX
.L_43193a:

            mov RBX,RDI
            je .L_431990

            test RDX,RDX
            je .L_431990

            test RCX,RCX
            je .L_4319e0

            mov ECX,DWORD PTR [RCX+36]
            test CH,40
            je .L_431a20

            xor EAX,EAX
            shr RDX,1
            je .L_431abd

            nop
            nop
            nop
            nop
.L_431968:

            cmp BYTE PTR [RSI+RAX*2],0
            jne .L_431979

            cmp BYTE PTR [RSI+RAX*2+1],0
            je .L_431ab8
.L_431979:

            add RAX,1
            cmp RDX,RAX
            jne .L_431968

            lea RAX,QWORD PTR [RDX+RDX*1]
            jmp .L_431a48
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431990:

            test RBP,RBP
            mov RSI,QWORD PTR [RBX+8]
            je .L_4319f0

            mov ECX,DWORD PTR [RBP+36]
.L_43199c:

            and CH,20
            je .L_4319f0

            add RSI,2
            mov RDI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_431aed

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            xor R12D,R12D
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX]
            mov BYTE PTR [RDX+RAX*1+1],0
            mov EAX,R12D
            pop RBX
.L_4319d4:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4319e0:

            xor EAX,EAX
            cmp BYTE PTR [RSI],0
            jne .L_431a30

            mov RSI,QWORD PTR [RBX+8]
            nop
            nop
            nop
            nop
            nop
.L_4319f0:

            add RSI,1
            mov RDI,RBX
            call .L_42e2a0

            test RAX,RAX
            je .L_431aed

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            xor R12D,R12D
            mov BYTE PTR [RDX+RAX*1],0
.L_431a13:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431a20:

            cmp BYTE PTR [RSI],0
            je .L_431abd

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_431a30:

            add RAX,1
            cmp RDX,RAX
            jbe .L_431a3f

            cmp BYTE PTR [RSI+RAX*1],0
            jne .L_431a30
.L_431a3f:

            test RBP,RBP
            je .L_431ad0
.L_431a48:

            cmp DWORD PTR [RBP+96],1
            mov R8,QWORD PTR [RBP+80]
            jle .L_431ab0

            mov QWORD PTR [RBP+64],0
            lea RDI,QWORD PTR [RBP+56]
            mov RCX,RBP
            mov RDX,RAX
            call R8

            test EAX,EAX
            mov R12D,EAX
            je .L_431a84

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_431a13

            test R12D,R12D
            mov EAX,0
            cmovg R12D,EAX
.L_431a84:

            mov RSI,QWORD PTR [RBP+56]
            mov RAX,QWORD PTR [RBP+64]
            mov R8,QWORD PTR [RBP+88]
.L_431a90:

            mov RCX,RBP
            mov RDI,RBX
            mov RDX,RAX
            call R8

            cmp R12D,EAX
            cmovg R12D,EAX
            mov EAX,R12D
            pop RBX
.L_431aa7:

            pop RBP
            pop R12
            ret 

            nop
            nop
            nop
            nop
            nop
.L_431ab0:

            xor R12D,R12D
            jmp .L_431a90
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431ab8:

            add RAX,RAX
            jne .L_431a48
.L_431abd:

            mov RSI,QWORD PTR [RBX+8]
            jmp .L_43199c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431ad0:

            mov RDX,RAX
            mov RDI,RBX
            xor R12D,R12D
            call .L_42e360

            test RAX,RAX
            sete R12B
            neg R12D
            jmp .L_431a13
.L_431aed:

            mov R12D,4294967295
            jmp .L_431a13
.L_431af8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431b00:

            mov QWORD PTR [RDI+8],0
            jmp .L_431930
.L_431b0d:

            nop
            nop
            nop
.L_431b10:

            push RBX

            mov RBX,RDI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+64],0
            mov RDI,QWORD PTR [RDI+48]
            call free@PLT

            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            call free@PLT

            mov RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            call free@PLT

            mov RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            call free@PLT

            mov QWORD PTR [RBX+72],0
            mov DWORD PTR [RBX+96],0
            pop RBX

            ret 
.L_431b9f:

            nop
.L_431ba0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RSI+96]
            mov QWORD PTR [RDI+8],0
            mov DWORD PTR [RDI+96],EAX
            call .L_42e3c0

            lea RSI,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+32],0
            call .L_42e3c0

            mov QWORD PTR [RBX+56],0
            add RSP,8
            lea RSI,QWORD PTR [RBP+48]
            lea RDI,QWORD PTR [RBX+48]
            pop RBX
            pop RBP
            jmp .L_42e450
.L_431bef:

            nop
.L_431bf0:

            mov EAX,DWORD PTR [RSI+96]
            test AL,2
            jne .L_431c08

            and EAX,1
            mov QWORD PTR [RDX],0
            jne .L_431c18

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431c08:

            mov RAX,QWORD PTR [RSI+24]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431c18:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,24
.L_431c2b:

            call .L_42e1d0

            lea RDX,QWORD PTR [RIP+.L_447012]
            mov ECX,5
            mov RSI,RAX
            mov RDI,R12
            call .L_42dd60

            test RAX,RAX
            mov R13,RAX
            je .L_431ca2

            mov RDX,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+32],0
            mov RCX,RAX
            call .L_431930

            test R12,R12
            je .L_431c90
.L_431c6f:

            test EAX,EAX
            jne .L_431ca2

            mov RDX,QWORD PTR [RBX+24]
            or DWORD PTR [RBX+96],2
            mov QWORD PTR [RBP],RDX
.L_431c7f:

            add RSP,24
.L_431c83:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431c90:

            mov RDI,R13
            mov DWORD PTR [RSP+12],EAX
            call .L_42d330

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_431c6f
.L_431ca2:

            mov EAX,4294967295
            jmp .L_431c7f
.L_431ca9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431cb0:

            mov EAX,DWORD PTR [RSI+96]
            test AL,1
            jne .L_431cc8

            and EAX,4
            mov QWORD PTR [RDX],0
            jne .L_431cd8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431cc8:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431cd8:

            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,8
            mov QWORD PTR [RSI+8],0
            mov RDX,QWORD PTR [RSI+56]
            mov RSI,QWORD PTR [RSI+48]
            mov RDI,RBX
            call .L_431610

            mov RDX,QWORD PTR [RBX]
            test EAX,EAX
            mov QWORD PTR [RBP],RDX
            jne .L_431d12

            or DWORD PTR [RBX+96],1
.L_431d0b:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_431d12:

            mov EAX,4294967295
            jmp .L_431d0b
.L_431d19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431d20:

            mov EAX,DWORD PTR [RSI+96]
            test AL,4
            jne .L_431d38

            and EAX,1
            mov QWORD PTR [RDX],0
            jne .L_431d48

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431d38:

            mov RAX,QWORD PTR [RSI+48]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431d48:

            push RBP
            push RBX
            lea RDI,QWORD PTR [RSI+48]
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,8
            mov QWORD PTR [RSI+56],0
            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call .L_4314a0

            test EAX,EAX
            jne .L_431d83

            mov RDX,QWORD PTR [RBX+48]
            or DWORD PTR [RBX+96],4
            mov QWORD PTR [RBP],RDX
.L_431d7c:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_431d83:

            mov EAX,4294967295
            jmp .L_431d7c
.L_431d8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_431d90:

            push R12
            push RBP
            mov RBP,RDX
            push RBX
            xor EAX,EAX
            mov RBX,RDI
            mov R12,RSI
            sub RSP,16
            mov EDX,DWORD PTR [RDI+96]
            and EDX,5
            cmp EDX,4
            je .L_431e40
.L_431db2:

            test BYTE PTR [RBX+96],1
            jne .L_431de0

            test RBP,RBP
            mov QWORD PTR [R12],0
            je .L_431dcd

            mov QWORD PTR [RBP],0
.L_431dcd:

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431de0:

            test RCX,RCX
            mov RSI,QWORD PTR [RBX]
            je .L_431e20

            mov RDX,QWORD PTR [RBX+8]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+80],0
            call .L_431930

            mov RDX,QWORD PTR [RBX+72]
            test RBP,RBP
            mov QWORD PTR [R12],RDX
            je .L_431dcd

            mov RDX,QWORD PTR [RBX+80]
            mov QWORD PTR [RBP],RDX
            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431e20:

            xor EAX,EAX
            test RBP,RBP
            mov QWORD PTR [R12],RSI
            je .L_431dcd

            mov RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBP],RDX
            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431e40:

            mov RDX,QWORD PTR [RDI+56]
            mov RSI,QWORD PTR [RDI+48]
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RSP+8],RCX
            call .L_431610

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_431e88

            mov QWORD PTR [RSP+8],RCX
            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            mov EAX,4294967295
            je .L_431dcd

            mov RCX,QWORD PTR [RSP+8]
            jmp .L_431db2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431e88:

            or DWORD PTR [RBX+96],1
            jmp .L_431db2
.L_431e91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ea0:

            test RSI,RSI
            je .L_431ef0

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,8
            call strlen@PLT

            mov DWORD PTR [RBX+96],1
            mov QWORD PTR [RBX+8],0
            mov RSI,RBP
            mov RDI,RBX
            mov RDX,RAX
            call .L_431240

            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+56],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_431ef0:

            mov DWORD PTR [RDI+96],0
            xor EAX,EAX
            ret 
.L_431efa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_431f00:

            test RSI,RSI
            je .L_431f38

            push RBX
            mov DWORD PTR [RDI+96],1
            mov RBX,RDI
            mov QWORD PTR [RDI+8],0
            call .L_431240

            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+56],0
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431f38:

            mov DWORD PTR [RDI+96],0
            xor EAX,EAX
            ret 
.L_431f42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431f50:

            push RBX
            xor EDX,EDX
            mov RBX,RDI
            sub RSP,16

            test RSI,RSI
            je .L_431f74

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call wcslen@PLT

            mov RSI,QWORD PTR [RSP+8]
            mov RDX,RAX
.L_431f74:

            lea RDI,QWORD PTR [RBX+48]
            mov DWORD PTR [RBX+96],4
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+56],0
            call .L_431280

            add RSP,16

            xor EAX,EAX
            pop RBX
            ret 
.L_431fa4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431fb0:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
.L_431fbc:

            mov DWORD PTR [RDI+96],2
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+32],0
            mov RDI,RSI
            call strlen@PLT

            lea RDI,QWORD PTR [RBX+24]
            mov RSI,RBP
            mov RDX,RAX
            call .L_431240

            mov RDI,RBP
            call strlen@PLT

            add RSP,8
.L_431ffe:

            pop RBX
            pop RBP
            ret 
.L_432001:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432010:

            sub RSP,8
            add RDI,48
            mov DWORD PTR [RDI+48],4
            mov QWORD PTR [RDI-40],0
            mov QWORD PTR [RDI-16],0
            mov QWORD PTR [RDI+8],0
            call .L_431280

            xor EAX,EAX
            add RSP,8
            ret 
.L_432043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432050:

            test RSI,RSI
            je .L_432088

            push RBX
            mov QWORD PTR [RDI+8],0
            mov RBX,RDI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+32],0
            call .L_431930

            xor EDX,EDX
            test EAX,EAX
            sete DL
            mov DWORD PTR [RBX+96],EDX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432088:

            mov DWORD PTR [RDI+96],0
            xor EAX,EAX
            ret 
.L_432092:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4320a0:

            test RDX,RDX
            je .L_432170

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,RDX
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,24
.L_4320bf:

            mov QWORD PTR [RSI+32],0
            call strlen@PLT

            lea RDI,QWORD PTR [RBX+24]
            mov RDX,RAX
            mov RSI,RBP
            call .L_431240

            mov RDI,R12
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+56],0
            mov DWORD PTR [RBX+96],2
            call .L_42e1d0

            lea RSI,QWORD PTR [RIP+.L_447012]
            mov ECX,6
            mov RDX,RAX
            mov RDI,R12
            call .L_42dd60

            test RAX,RAX
            mov R13,RAX
            je .L_432198

            mov RDI,RBP
            call strlen@PLT

            mov QWORD PTR [RBX+8],0
            mov RCX,R13
            mov RDX,RAX
            mov RSI,RBP
            mov RDI,RBX
            call .L_431930

            test R12,R12
            je .L_432180
.L_43213f:

            test EAX,EAX
            jne .L_432198

            mov RDX,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RBX+48]
            mov DWORD PTR [RBX+96],3
            call .L_4314a0

            test EAX,EAX
            jne .L_432198

            mov DWORD PTR [RBX+96],7
.L_432165:

            add RSP,24
.L_432169:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_432170:

            mov DWORD PTR [RSI+96],0
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432180:

            mov RDI,R13
            mov DWORD PTR [RSP+12],EAX
            call .L_42d330

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_43213f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432198:

            mov EAX,4294967295
            jmp .L_432165
.L_43219f:

            nop
.L_4321a0:

            push R12
            push RBP
            mov EBP,EDX
            cmp RBP,RSI
            push RBX
            mov R12,RDI
            mov RBX,RSI
            jbe .L_4321d0
.L_4321b1:

            mov RAX,RBX
            xor EDX,EDX
            mov RDI,R12
            div RBP
            lea RAX,QWORD PTR [RIP+.L_44f444]
            pop RBX
            pop RBP
            pop R12
            movsx ESI,BYTE PTR [RAX+RDX*1]
            jmp .L_4312e0
.L_4321d0:

            mov RAX,RSI
            xor EDX,EDX
            div RBP
            mov EDX,EBP
            mov RSI,RAX
            call .L_4321a0

            jmp .L_4321b1
.L_4321e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4321f0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov ESI,64
            push RBP
            push RBX
            mov R12,RDX
            mov RBX,RDI
            sub RSP,8
.L_43220c:

            call .L_42e2a0

            test RAX,RAX
            je .L_432676

            test R15,R15
            je .L_4325e8

            movsx ESI,BYTE PTR [R15]
            lea RBP,QWORD PTR [RIP+.L_44f5c8]
            test SIL,SIL
            je .L_4322f9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432240:

            cmp SIL,37
            lea R13,QWORD PTR [R15+1]
            jne .L_432315

            movzx EAX,BYTE PTR [R15+1]
            lea ECX,DWORD PTR [RAX-106]
            cmp CL,16
            ja .L_432348

            mov EDX,1
            shl RDX,CL
            test EDX,65541
            je .L_432348

            movzx ECX,BYTE PTR [R15+2]
            lea R14,QWORD PTR [R15+2]
            lea EDX,DWORD PTR [RCX-37]
            cmp DL,83
            ja .L_432310

            lea RDI,QWORD PTR [RIP+.L_44f478]
            movzx EDX,DL
            movsxd RDX,DWORD PTR [RDI+RDX*4]
            add RDX,RDI
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4322a0:

            cmp AL,108
            mov EDX,DWORD PTR [R12]
            je .L_4322b0

            cmp AL,122
            jne .L_4324f0
.L_4322b0:

            cmp EDX,47
            ja .L_432663

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_4322c7:

            mov R13,R14
            mov RSI,QWORD PTR [RAX]
            movzx EAX,BYTE PTR [R13]
            lea R15,QWORD PTR [R13+1]
            cmp AL,111
            jne .L_4324ce
.L_4322de:

            mov EDX,8
            mov RDI,RBX
            call .L_4321a0

            movsx ESI,BYTE PTR [R13+1]
            test SIL,SIL
            jne .L_432240
.L_4322f9:

            add RSP,8
.L_4322fd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432310:

            mov ESI,37
.L_432315:

            mov RDI,RBX
            call .L_4312e0

            mov RAX,R13
            mov R13,R15
            mov R15,RAX
.L_432326:

            movsx ESI,BYTE PTR [R13+1]
            test SIL,SIL
            jne .L_432240

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432348:

            sub EAX,37
            cmp AL,83
            ja .L_432310

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RBP+RAX*4]
            add RAX,RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432360:

            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_432368:

            mov EAX,DWORD PTR [R12]
            cmp EAX,47
            ja .L_4326c0

            mov EDX,EAX
            add RDX,QWORD PTR [R12+16]
            add EAX,8
            mov DWORD PTR [R12],EAX
.L_432383:

            movsx ESI,BYTE PTR [RDX]
            mov RDI,RBX
            lea R15,QWORD PTR [R13+1]
            call .L_4312e0

            jmp .L_432326
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432398:

            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_4323a0:

            mov EAX,DWORD PTR [R12]
            cmp EAX,47
            ja .L_4326ad

            mov EDX,EAX
            add RDX,QWORD PTR [R12+16]
            add EAX,8
            mov DWORD PTR [R12],EAX
.L_4323bb:

            mov R14,QWORD PTR [RDX]
            lea RAX,QWORD PTR [RIP+.L_44f45c]
            test R14,R14
            cmove R14,RAX
            mov RDI,R14
            call wcslen@PLT

            mov RSI,R14
            mov RDX,RAX
            mov RDI,RBX
            call .L_431610

            test EAX,EAX
            je .L_4323f4

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_432676
.L_4323f4:

            lea R15,QWORD PTR [R13+1]
            jmp .L_432326
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432400:

            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_432408:

            mov ESI,37
            mov RDI,RBX
            lea R15,QWORD PTR [R13+1]
            call .L_4312e0

            jmp .L_432326
          .byte 0x66
          .byte 0x90
.L_432420:

            mov EDX,DWORD PTR [R12]
.L_432424:

            cmp EDX,47
            ja .L_43269a

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43243b:

            mov RSI,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_44f455]
            mov RDI,RBX
            lea R15,QWORD PTR [R13+1]
            test RSI,RSI
            cmove RSI,RAX
            call .L_4312c0

            jmp .L_432326
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432460:

            mov EDX,DWORD PTR [R12]
.L_432464:

            cmp EDX,47
            ja .L_432687

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43247b:

            movsxd R15,DWORD PTR [RAX]
            mov R14,R13
            test R15,R15
            jns .L_43253a

            mov ESI,45
            mov RDI,RBX
            call .L_4312e0

            jmp .L_432624
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4324a0:

            mov EDX,DWORD PTR [R12]
.L_4324a4:

            cmp EDX,47
            ja .L_4326d3

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_4324bb:

            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [R13]
            lea R15,QWORD PTR [R13+1]
            cmp AL,111
            je .L_4322de
.L_4324ce:

            cmp AL,117
            jne .L_4325d0

            mov EDX,10
            mov RDI,RBX
            call .L_4321a0

            jmp .L_432326
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4324f0:

            cmp AL,106
            je .L_4322b0

            mov R13,R14
            jmp .L_4324a4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432500:

            cmp AL,108
            mov EDX,DWORD PTR [R12]
            je .L_432517

            cmp AL,122
            je .L_432517

            cmp AL,106
            mov R13,R14
            jne .L_432464
.L_432517:

            cmp EDX,47
            ja .L_43263d

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43252e:

            mov R15,QWORD PTR [RAX]
            test R15,R15
            js .L_432608
.L_43253a:

            mov RSI,R15
            mov R13,R14
.L_432540:

            mov EDX,10
            mov RDI,RBX
            lea R15,QWORD PTR [R14+1]
            call .L_4321a0

            jmp .L_432326
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432560:

            cmp AL,108
            mov EDX,DWORD PTR [R12]
            jne .L_4325fd

            cmp EDX,47
            ja .L_432650

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_432583:

            mov R13,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_44f45c]
            test R13,R13
            cmove R13,RAX
            mov RDI,R13
            call wcslen@PLT

            mov RSI,R13
            mov RDX,RAX
            mov RDI,RBX
            call .L_431610

            test EAX,EAX
            je .L_4325bc

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_432676
.L_4325bc:

            add R15,3
            mov R13,R14
            jmp .L_432326
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4325d0:

            mov EDX,16
            mov RDI,RBX
            call .L_4321a0

            jmp .L_432326
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4325e8:

            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [RAX],0
            add RSP,8
.L_4325f2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4325fd:

            mov R13,R14
            jmp .L_432424
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432608:

            mov ESI,45
            mov RDI,RBX
            call .L_4312e0

            movabs RAX,-9223372036854775808
            cmp R15,RAX
            je .L_432632
.L_432624:

            mov RSI,R15
            mov R13,R14
            neg RSI
            jmp .L_432540
.L_432632:

            mov R13,R14
            mov RSI,R15
            jmp .L_432540
.L_43263d:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43252e
.L_432650:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_432583
.L_432663:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_4322c7
.L_432676:

            lea RSI,QWORD PTR [RIP+.L_44512a]
            mov EDI,1
            call .L_432cd0
.L_432687:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43247b
.L_43269a:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43243b
.L_4326ad:

            mov RDX,QWORD PTR [R12+8]
            lea RAX,QWORD PTR [RDX+8]
            mov QWORD PTR [R12+8],RAX
            jmp .L_4323bb
.L_4326c0:

            mov RDX,QWORD PTR [R12+8]
            lea RAX,QWORD PTR [RDX+8]
            mov QWORD PTR [R12+8],RAX
            jmp .L_432383
.L_4326d3:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_4324bb
.L_4326e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4326f0:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_432746

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_432746:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_4321f0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43279c

            add RSP,216

            ret 
.L_43279c:

            call __stack_chk_fail@PLT
.L_4327a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4327b0:

            xor EAX,EAX
            cmp ESI,1
            jbe .L_432958

            push R15
            push R14
            xor R15D,R15D
            push R13
            push R12
            xor R14D,R14D
            push RBP
            push RBX
            xor EBP,EBP
            lea RBX,QWORD PTR [RDI+8]
            xor R13D,R13D
            sub RSP,40
.L_4327d8:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDI
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [RSI-2]
            lea RAX,QWORD PTR [RDI+RAX*8+16]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_43282c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4327f8:

            lea ESI,DWORD PTR [RBP+1]
            mov RDI,R14
            mov DWORD PTR [RSP+4],ESI
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov EDX,DWORD PTR [RSP+4]
            je .L_432930

            add RBX,8
            cmp RBX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+RBP*8],R12
            mov R14,RAX
            mov EBP,EDX
            je .L_432876
.L_43282c:

            mov R12,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R12
            call strcmp@PLT

            test EAX,EAX
            jns .L_4327f8

            lea ESI,DWORD PTR [R13+1]
            mov RDI,R15
            mov DWORD PTR [RSP+4],ESI
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov EDX,DWORD PTR [RSP+4]
            je .L_432930

            add RBX,8
            cmp RBX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+R13*8],R12
            mov R15,RAX
            mov R13D,EDX
            jne .L_43282c
.L_432876:

            mov ESI,R13D
            mov RDI,R15
            call .L_4327b0

            test R13D,R13D
            mov EBX,EAX
            je .L_4328b6

            lea EAX,DWORD PTR [R13-1]
            lea RCX,QWORD PTR [RAX*8+8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4328a0:

            mov RDX,QWORD PTR [R15+RAX*1]
            mov RDI,QWORD PTR [RSP+24]
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp RAX,RCX
            jne .L_4328a0
.L_4328b6:

            mov RDI,R15
            call free@PLT

            mov RDI,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+24]
            mov EAX,R13D
            mov ESI,EBP
            mov QWORD PTR [RCX+RAX*8],RDI
            mov RDI,R14
            call .L_4327b0

            test EBP,EBP
            mov R12D,EAX
            je .L_43290a

            lea EDX,DWORD PTR [R13+1]
            lea R8D,DWORD PTR [R13+RBP*1+1]
            mov RCX,R14
            nop
            nop
            nop
            nop
.L_4328f0:

            mov RDI,QWORD PTR [RCX]
            mov RAX,QWORD PTR [RSP+24]
            mov ESI,EDX
            add EDX,1
            add RCX,8
            cmp R8D,EDX
            mov QWORD PTR [RAX+RSI*8],RDI
            jne .L_4328f0
.L_43290a:

            mov RDI,R14
            call free@PLT

            cmp EBX,R12D
            mov EAX,R12D
            cmovle EAX,EBX
            add RSP,40
.L_43291f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432930:

            mov RDI,R14
            call free@PLT

            mov RDI,R15
            call free@PLT

            add RSP,40
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432958:

            ret 
.L_43295a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_432960:

            push RBX
            xor EAX,EAX
            mov ESI,1
            mov EBX,EDI
            call fcntl@PLT

            cmp EAX,-1
            je .L_432978

            test AL,1
            je .L_432980
.L_432978:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432980:

            mov EDI,EBX
            or EAX,1
            mov ESI,2
            pop RBX
            mov EDX,EAX
            xor EAX,EAX
            jmp fcntl@PLT
.L_432994:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4329a0:

            sub RSP,8
            call .L_431870

            xor EAX,EAX
            add RSP,8
            ret 
.L_4329b0:

            mov EAX,3002002
            ret 
.L_4329b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4329c0:

            lea RAX,QWORD PTR [RIP+.L_44f718]
            ret 
.L_4329c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4329d0:

            push RBP
            push RBX
            sub RSP,8
.L_4329d6:

            call BZ2_bzlibVersion@PLT

            lea RSI,QWORD PTR [RIP+.L_44f718]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            mov RBX,RAX
            mov QWORD PTR [RIP+.L_65bc50],0
            mov QWORD PTR [RIP+.L_65bc58],0
            mov QWORD PTR [RIP+.L_65bc60],0
            call .L_4312c0

            lea RSI,QWORD PTR [RIP+.L_44f729]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_4312c0

            lea RSI,QWORD PTR [RIP+.L_443a68]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_4312c0

            lea RSI,QWORD PTR [RIP+.L_44f730]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_4312c0

            lea RSI,QWORD PTR [RIP+.L_44f73a]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_4312c0

            test RBX,RBX
            je .L_432aa0

            mov ESI,44
            mov RDI,RBX
            call strchr@PLT

            test RAX,RAX
            mov RBP,RAX
            je .L_432ab0
.L_432a78:

            lea RSI,QWORD PTR [RIP+.L_44f740]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_4312c0

            mov RDX,RBP
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            mov RSI,RBX
            sub RDX,RBX
            call .L_431240
.L_432aa0:

            mov RAX,QWORD PTR [RIP+.L_65bc50]
            add RSP,8
.L_432aab:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_432ab0:

            mov RDI,RBX
            call strlen@PLT

            lea RBP,QWORD PTR [RBX+RAX*1]
            jmp .L_432a78
.L_432abe:

            nop
            nop
.L_432ac0:

            lea RAX,QWORD PTR [RIP+.L_443a68]
            ret 
.L_432ac8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ad0:

            lea RAX,QWORD PTR [RIP+.L_44f73a]
            ret 
.L_432ad8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ae0:

            jmp BZ2_bzlibVersion@PLT
.L_432ae5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432af0:

            xor EAX,EAX
            ret 
.L_432af3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b00:

            mov EAX,DWORD PTR [RDI+52]
            ret 
.L_432b04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b10:

            mov RAX,QWORD PTR [RDI+56]
            test RAX,RAX
            je .L_432b25

            cmp BYTE PTR [RAX],0
            mov EDX,0
            cmove RAX,RDX
.L_432b25:

            ret 
.L_432b27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b30:

            mov EAX,DWORD PTR [RDI+48]
            ret 
.L_432b34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b40:

            mov EAX,DWORD PTR [RDI+16]
            ret 
.L_432b44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b50:

            mov RAX,QWORD PTR [RDI+24]
            ret 
.L_432b55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b60:

            xor ESI,ESI
            jmp .L_432e80
.L_432b67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b70:

            xor ESI,ESI
            jmp .L_432ea0
.L_432b77:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b80:

            mov ESI,4294967295
            jmp .L_432eb0
.L_432b8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_432b90:

            xor ESI,ESI
            jmp .L_432eb0
.L_432b97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ba0:

            mov QWORD PTR [RDI+72],0
            mov QWORD PTR [RDI+56],0
            mov DWORD PTR [RDI+52],0
            ret 
.L_432bb8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432bc0:

            push RBX
            mov R10,RDX
            mov RBX,RDI
            sub RSP,208
.L_432bce:

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_432c18

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_432c18:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test R10,R10
            mov DWORD PTR [RBX+52],ESI
            je .L_432c90

            lea RAX,QWORD PTR [RSP+224]
            lea RDI,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+72],0
            mov RDX,RSP
            mov RSI,R10
            mov DWORD PTR [RSP],24
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_4321f0

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+56],RAX
.L_432c75:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_432c9a

            add RSP,208
.L_432c8c:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_432c90:

            mov QWORD PTR [RBX+56],0
            jmp .L_432c75
.L_432c9a:

            call __stack_chk_fail@PLT
.L_432c9f:

            nop
.L_432ca0:

            push RBX
            mov EAX,DWORD PTR [RSI+52]
            mov RBX,RDI
            mov QWORD PTR [RDI+72],0
            lea RDI,QWORD PTR [RDI+64]
            add RSI,64
            mov DWORD PTR [RDI-12],EAX
            call .L_42e3c0

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+56],RAX
            pop RBX
            ret 
.L_432cc9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432cd0:

            push RBP
            push RBX
            mov RBX,RSI
            lea RSI,QWORD PTR [RIP+.L_44f768]
            mov EDX,36
            mov EBP,EDI
            sub RSP,8
            mov EDI,2
            call write@PLT

            mov RDI,RBX
            call strlen@PLT

            mov RSI,RBX
            mov RDX,RAX
            mov EDI,2
            call write@PLT

            lea RSI,QWORD PTR [RIP+.L_446121]
            mov EDI,2
            mov EDX,1
            call write@PLT

            mov EDI,EBP
            call exit@PLT
.L_432d26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432d30:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_432d39:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            je .L_432df8
.L_432d6c:

            mov RDI,RBP
            mov RBX,RSP
            call strlen@PLT

            mov RSI,RBP
            mov RDX,RAX
            mov RDI,RBX
            call .L_431240

            mov RDX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+8]
            cmp BYTE PTR [RDX+RAX*1-1],47
            je .L_432da2

            mov ESI,47
            mov RDI,RBX
            call .L_4312e0
.L_432da2:

            lea RSI,QWORD PTR [RIP+.L_44f755]
            mov RDI,RBX
            call .L_4312c0

            mov RDI,QWORD PTR [RSP]
            call mkstemp@PLT

            test EAX,EAX
            mov EBP,EAX
            js .L_432dd0

            mov EDI,EAX
            call .L_432960

            mov RDI,QWORD PTR [RSP]
            call unlink@PLT
.L_432dd0:

            mov RDI,RBX
            call .L_42e240

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_432e23

            add RSP,40
.L_432dee:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432df8:

            lea RDI,QWORD PTR [RIP+.L_44f74e]
            call getenv@PLT

            mov RBP,RAX
            test RAX,RAX
            lea RAX,QWORD PTR [RIP+.L_44f749]
            mov QWORD PTR [RSP+8],0
            cmove RBP,RAX
            jmp .L_432d6c
.L_432e23:

            call __stack_chk_fail@PLT
.L_432e28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432e30:

            test EDI,EDI
            js .L_432e40

            jmp .L_432960
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432e40:

            ret 
.L_432e42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432e50:

            xor ESI,ESI
            cmp QWORD PTR [RDI],0
            je .L_432e6d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432e60:

            lea EAX,DWORD PTR [RSI+1]
            cmp QWORD PTR [RDI+RAX*8],0
            mov RSI,RAX
            jne .L_432e60
.L_432e6d:

            jmp .L_4327b0
.L_432e72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432e80:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+88]
.L_432e87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432e90:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+72]
.L_432e97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ea0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+96]
.L_432ea7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432eb0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+80]
.L_432eb7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ec0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX]
.L_432ec6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ed0:

            jmp .L_432ec0
.L_432ed2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ee0:

            mov DWORD PTR [RDI+4],32768
            mov EAX,32768
            ret 
.L_432eed:

            nop
            nop
            nop
.L_432ef0:

            test RDI,RDI
            je .L_432f00

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+8]
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432f00:

            xor EAX,EAX
            ret 
.L_432f03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f10:

            jmp .L_432ef0
.L_432f12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f20:

            jmp .L_432ef0
.L_432f22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f30:

            jmp .L_432ef0
.L_432f32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f40:

            jmp .L_432ef0
.L_432f42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f50:

            mov RAX,QWORD PTR [RDI+8]
            add DWORD PTR [RDI+48],1
            jmp QWORD PTR [RAX+16]
.L_432f5b:

            nop
            nop
            nop
            nop
            nop
.L_432f60:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+24]
.L_432f67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f70:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+32]
.L_432f77:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432f80:

            mov RAX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_432f8f

            jmp RAX
.L_432f8f:

            push RBX
            lea RDX,QWORD PTR [RIP+.L_44f790]
            mov RBX,RDI
            xor EAX,EAX
            or ESI,4294967295
            call .L_432bc0

            mov DWORD PTR [RBX+4],32768
            mov RAX,-30
            pop RBX
            ret 
.L_432fb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432fc0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+48]
.L_432fc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432fd0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+56]
.L_432fd7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432fe0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+64]
.L_432fe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ff0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R13,RDX
            push RBX
            mov RBX,RDI
            add RSP,-128
.L_433005:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_437290

            test RAX,RAX
            mov R12,RAX
            je .L_43321b

            mov RSI,RBX
            mov RDI,RAX
            call .L_437130

            test EAX,EAX
            jne .L_43321b

            lea RDI,QWORD PTR [RSP+16]
            call pipe@PLT

            cmp EAX,-1
            je .L_43321b

            cmp DWORD PTR [RSP+16],1
            je .L_433230
.L_433057:

            lea RDI,QWORD PTR [RSP+24]
            call pipe@PLT

            cmp EAX,-1
            je .L_433209

            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_4331b0
.L_433076:

            lea RBP,QWORD PTR [RSP+32]
            mov RDI,RBP
            call posix_spawn_file_actions_init@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_433258

            mov ESI,DWORD PTR [RSP+20]
            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_4331e8

            mov ESI,DWORD PTR [RSP+24]
            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_4331e8

            mov ESI,DWORD PTR [RSP+16]
            xor EDX,EDX
            mov RDI,RBP
            call posix_spawn_file_actions_adddup2@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_4331e8

            mov ESI,DWORD PTR [RSP+16]
            test ESI,ESI
            jne .L_4331d0
.L_4330dd:

            mov ESI,DWORD PTR [RSP+28]
            mov EDX,1
            mov RDI,RBP
            call posix_spawn_file_actions_adddup2@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_4331e8

            mov ESI,DWORD PTR [RSP+28]
            cmp ESI,1
            je .L_433113

            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_4331e8
.L_433113:

            mov R8,QWORD PTR [R12+8]
            mov RSI,QWORD PTR [R12]
            lea RDI,QWORD PTR [RSP+12]
            xor R9D,R9D
            xor ECX,ECX
            mov RDX,RBP
            call posix_spawnp@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_4331e8

            mov RDI,RBP
            call posix_spawn_file_actions_destroy@PLT

            mov EDI,DWORD PTR [RSP+16]
            call close@PLT

            mov EDI,DWORD PTR [RSP+28]
            call close@PLT

            mov EDI,DWORD PTR [RSP+20]
            mov EDX,2048
            mov ESI,4
            xor EAX,EAX
            mov DWORD PTR [R14],EDI
            call fcntl@PLT

            mov EDI,DWORD PTR [RSP+24]
            mov EDX,2048
            mov ESI,4
            xor EAX,EAX
            mov DWORD PTR [R13],EDI
            call fcntl@PLT

            mov RDI,R12
            call .L_4372a0

            mov EAX,DWORD PTR [RSP+12]
.L_43318f:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            jne .L_433261

            sub RSP,-128
.L_4331a7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4331b0:

            xor EDI,EDI
            call dup@PLT

            cmp EAX,-1
            mov EBX,EAX
            je .L_4331f7

            mov EDI,DWORD PTR [RSP+28]
            call close@PLT

            mov DWORD PTR [RSP+28],EBX
            jmp .L_433076
.L_4331d0:

            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            je .L_4330dd

            nop
            nop
            nop
            nop
            nop
            nop
.L_4331e8:

            call __errno_location@PLT

            mov RDI,RBP
            mov DWORD PTR [RAX],EBX
            call posix_spawn_file_actions_destroy@PLT
.L_4331f7:

            mov EDI,DWORD PTR [RSP+24]
            call close@PLT

            mov EDI,DWORD PTR [RSP+28]
            call close@PLT
.L_433209:

            mov EDI,DWORD PTR [RSP+16]
            call close@PLT

            mov EDI,DWORD PTR [RSP+20]
            call close@PLT
.L_43321b:

            mov RDI,R12
            call .L_4372a0

            mov EAX,4294967295
            jmp .L_43318f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433230:

            mov EDI,1
            call dup@PLT

            cmp EAX,-1
            mov EBX,EAX
            je .L_433209

            mov EDI,DWORD PTR [RSP+16]
            call close@PLT

            mov DWORD PTR [RSP+16],EBX
            jmp .L_433057
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433258:

            call __errno_location@PLT

            mov DWORD PTR [RAX],EBX
            jmp .L_4331f7
.L_433261:

            call __stack_chk_fail@PLT
.L_433266:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433270:

            sub RSP,40
.L_433274:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp EDI,-1
            je .L_43329b

            mov DWORD PTR [RSP],EDI
            mov EDI,4
            mov EAX,1
            mov WORD PTR [RSP+4],DI
.L_43329b:

            cmp ESI,-1
            je .L_4332b3

            movsxd RDX,EAX
            mov ECX,1
            add EAX,1
            mov DWORD PTR [RSP+RDX*8],ESI
            mov WORD PTR [RSP+RDX*8+4],CX
.L_4332b3:

            movsxd RSI,EAX
            mov RDI,RSP
            mov ECX,16
            mov EDX,4294967295
            call __poll_chk@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4332dd

            add RSP,40
.L_4332dc:

            ret 
.L_4332dd:

            call __stack_chk_fail@PLT
.L_4332e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4332f0:

            push RBP
            push RBX
            xor EBX,EBX
            mov RBP,RDI
            sub RSP,8
.L_4332fb:

            test ESI,ESI
            js .L_433324

            mov EAX,ESI
            mov EDX,1717986919
            imul EDX
            mov EAX,ESI
            sar EAX,31
            sar EDX,2
            mov EBX,EDX
            sub EBX,EAX
            lea EAX,DWORD PTR [RBX+RBX*4]
            mov EDX,EBX
            mov EBX,ESI
            add EAX,EAX
            sub EBX,EAX
            cmp ESI,9
            jg .L_433350
.L_433324:

            mov RAX,QWORD PTR [RBP]
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RBP],RDX
            lea RDX,QWORD PTR [RIP+.L_44f7b8]
            mov EDX,DWORD PTR [RDX+RBX*4]
            mov DWORD PTR [RAX],EDX
            add RSP,8
.L_433343:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433350:

            mov ESI,EDX
            call .L_4332f0

            jmp .L_433324
.L_433359:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433360:

            push RBP
            push RBX
            mov EBP,48
            mov RBX,RDI
            sub RSP,8
.L_43336e:

            test ESI,ESI
            js .L_4333a1

            mov EAX,ESI
            mov EDX,1717986919
            mov EDI,ESI
            imul EDX
            mov EAX,ESI
            lea RCX,QWORD PTR [RIP+.L_44f838]
            sar EAX,31
            sar EDX,2
            sub EDX,EAX
            lea EAX,DWORD PTR [RDX+RDX*4]
            add EAX,EAX
            sub EDI,EAX
            cmp ESI,9
            movsxd RAX,EDI
            movzx EBP,BYTE PTR [RCX+RAX*1]
            jg .L_4333b8
.L_4333a1:

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],BPL
            add RSP,8
.L_4333b2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4333b8:

            mov ESI,EDX
            mov RDI,RBX
            call .L_433360

            jmp .L_4333a1
.L_4333c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4333d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            sub RSP,24
            and EBP,15360
            je .L_433418

            test DWORD PTR [RDI+48],4294951935
            jne .L_433400

            test EDX,2164195334
            je .L_433431

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433400:

            xor EAX,EAX
.L_433402:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433418:

            test ESI,768
            je .L_433400

            test DWORD PTR [RDI+48],4294966527
            jne .L_433400

            test EDX,4294967288
            jne .L_433400
.L_433431:

            cmp ECX,10006
            jg .L_433538

            cmp ECX,10005
            jge .L_433558

            cmp ECX,10001
            jl .L_433400
.L_433451:

            mov R15,RDI
            mov RDI,QWORD PTR [RDI+32]
            mov R14D,R8D
            mov R13D,ECX
            mov DWORD PTR [RSP+12],EDX
            mov R12D,ESI
            test RDI,RDI
            je .L_433477

            call free@PLT

            mov QWORD PTR [R15+32],0
.L_433477:

            mov RDI,QWORD PTR [R15+40]
            test RDI,RDI
            je .L_43348d

            call free@PLT

            mov QWORD PTR [R15+40],0
.L_43348d:

            mov RBX,QWORD PTR [R15+8]
            test RBX,RBX
            je .L_433569

            mov EDX,R13D
            and EDX,4294967293
            jmp .L_4334b3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4334a8:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_4334f0

            mov RBX,RAX
.L_4334b3:

            test EBP,EBP
            jne .L_4334a8

            cmp DWORD PTR [RBX+8],R12D
            jne .L_4334a8

            cmp DWORD PTR [RBX+12],R13D
            jne .L_4334a8

            cmp DWORD PTR [RBX+20],R14D
            jne .L_4334a8

            cmp R14D,-1
            jne .L_4334d7

            cmp EDX,10001
            je .L_4334a8
.L_4334d7:

            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RBX+16],EAX
            mov RAX,RBX
            jmp .L_433402
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4334f0:

            mov ESI,128
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_433400

            mov QWORD PTR [RBX],RAX
.L_43350b:

            mov ECX,DWORD PTR [RSP+12]
            mov DWORD PTR [RAX+8],R12D
            mov DWORD PTR [RAX+12],R13D
            mov DWORD PTR [RAX+20],R14D
            or DWORD PTR [R15+48],R12D
            mov DWORD PTR [RAX+16],ECX
            add RSP,24
.L_433526:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433538:

            cmp ECX,10107
            jne .L_433400

            test ESI,4294951935
            je .L_433451

            jmp .L_433400
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433558:

            test ESI,4294966527
            je .L_433451

            jmp .L_433400
.L_433569:

            mov ESI,128
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_433400

            mov QWORD PTR [R15+8],RAX
            jmp .L_43350b
.L_433587:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433590:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov EBP,ECX
            mov RBX,RDI
            sub RSP,24
.L_4335a9:

            test RSI,RSI
            mov RCX,QWORD PTR [RDI]
            mov DWORD PTR [RSP+4],R8D
            mov R14D,DWORD PTR [RSP+80]
            mov R13D,DWORD PTR [RSP+88]
            je .L_4335e4

            mov RDI,RCX
            call wcscpy@PLT

            mov RCX,QWORD PTR [RBX]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call wcslen@PLT

            mov RCX,QWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RCX+RAX*4]
            mov QWORD PTR [RBX],RCX
.L_4335e4:

            cmp EBP,10004
            je .L_433b20

            jle .L_433698

            cmp EBP,10006
            je .L_433ab0

            jl .L_433800

            cmp EBP,10107
            jne .L_4336c4

            lea RSI,QWORD PTR [RIP+.L_44f7e8]
            mov RDI,RCX
            call wcscpy@PLT
.L_433623:

            mov R15,QWORD PTR [RBX]
            mov RDI,R15
            call wcslen@PLT

            lea RAX,QWORD PTR [R15+RAX*4]
            mov ECX,R12D
            and ECX,768
            lea R15,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],R15
            mov DWORD PTR [RAX],58
            jne .L_433688

            mov EAX,EBP
            mov R13D,4294967295
            and EAX,4294967293
            cmp EAX,10001
            jne .L_43381b
.L_433660:

            mov ESI,R13D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_4332f0

            test R12D,15360
            mov R15,QWORD PTR [RBX]
            mov ECX,DWORD PTR [RSP+8]
            jne .L_433731

            nop
            nop
            nop
            nop
            nop
.L_433688:

            mov R13D,4294967295
            jmp .L_433731
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433698:

            cmp EBP,10002
            je .L_433ac8

            jg .L_4337e1

            cmp EBP,10001
            jne .L_4336c4
.L_4336b2:

            lea RSI,QWORD PTR [RIP+.L_44f8a8]
            mov RDI,RCX
            call wcscpy@PLT

            mov RCX,QWORD PTR [RBX]
.L_4336c4:

            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call wcslen@PLT

            mov RCX,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ECX,R12D
            and ECX,768
            lea RDI,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],RDI
            mov DWORD PTR [RAX],58
            jne .L_433a60

            mov EAX,EBP
            and EAX,4294967293
            cmp EAX,10001
            jne .L_433818

            test R15,R15
            je .L_433660
.L_43370f:

            mov RSI,R15
            mov DWORD PTR [RSP+8],ECX
            call wcscpy@PLT

            mov R15,QWORD PTR [RBX]
            mov RDI,R15
            call wcslen@PLT

            mov ECX,DWORD PTR [RSP+8]
            lea R15,QWORD PTR [R15+RAX*4]
            mov QWORD PTR [RBX],R15
.L_433731:

            test BYTE PTR [RSP+4],4
            je .L_433746

            sub EBP,10005
            mov RDI,R15
            cmp EBP,1
            jbe .L_433754
.L_433746:

            lea RDI,QWORD PTR [R15+4]
            mov QWORD PTR [RBX],RDI
            mov DWORD PTR [R15],58
.L_433754:

            test ECX,ECX
            je .L_43381e

            mov EAX,R14D
            mov EDX,R14D
            and EAX,292
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967227
            add EAX,114
            mov DWORD PTR [RDI],EAX
            mov EAX,R14D
            and EAX,146
            cmp EAX,1
            sbb EAX,EAX
            and EDX,73
            and EAX,4294967222
            add EAX,119
            cmp EDX,1
            lea RDX,QWORD PTR [RDI+12]
            mov DWORD PTR [RDI+4],EAX
            sbb EAX,EAX
            and EAX,4294967221
            mov QWORD PTR [RBX],RDX
            add EAX,120
            cmp R13D,-1
            mov DWORD PTR [RDI+8],EAX
            je .L_433a4c
.L_4337ac:

            mov RAX,QWORD PTR [RBX]
            mov ESI,R13D
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],RDX
            mov DWORD PTR [RAX],58
            add RSP,24
.L_4337c6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4332f0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4337d8:

            mov R13D,4294967295
            xor R15D,R15D
.L_4337e1:

            lea RSI,QWORD PTR [RIP+.L_44f8d8]
            mov RDI,RCX
            call wcscpy@PLT

            mov RCX,QWORD PTR [RBX]
            jmp .L_4336c4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433800:

            lea RSI,QWORD PTR [RIP+.L_44f8f0]
            mov RDI,RCX
            call wcscpy@PLT

            jmp .L_433623
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433818:

            mov R15,QWORD PTR [RBX]
.L_43381b:

            mov RDI,R15
.L_43381e:

            mov EAX,R14D
            mov EDX,R14D
            lea RBP,QWORD PTR [RDI+92]
            and EAX,8
            mov DWORD PTR [RDI+56],58
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967227
            add EAX,114
            mov DWORD PTR [RDI],EAX
            mov EAX,R14D
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967222
            add EAX,119
            mov DWORD PTR [RDI+4],EAX
            mov EAX,R14D
            and EAX,1
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967221
            add EAX,120
            mov DWORD PTR [RDI+8],EAX
            mov EAX,R14D
            and EAX,32
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967229
            add EAX,112
            mov DWORD PTR [RDI+12],EAX
            mov EAX,R14D
            and EAX,2048
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967241
            add EAX,100
            mov DWORD PTR [RDI+16],EAX
            mov EAX,R14D
            and EAX,256
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967273
            add EAX,68
            mov DWORD PTR [RDI+20],EAX
            mov EAX,R14D
            and EAX,512
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967244
            add EAX,97
            mov DWORD PTR [RDI+24],EAX
            mov EAX,R14D
            and EAX,1024
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967276
            add EAX,65
            mov DWORD PTR [RDI+28],EAX
            mov EAX,R14D
            and EAX,64
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967259
            add EAX,82
            mov DWORD PTR [RDI+32],EAX
            mov EAX,R14D
            and EAX,128
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967254
            add EAX,87
            mov DWORD PTR [RDI+36],EAX
            mov EAX,R14D
            and EAX,4096
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967242
            add EAX,99
            mov DWORD PTR [RDI+40],EAX
            mov EAX,R14D
            and EAX,8192
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967274
            add EAX,67
            mov DWORD PTR [RDI+44],EAX
            mov EAX,R14D
            and EAX,16384
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967230
            add EAX,111
            mov DWORD PTR [RDI+48],EAX
            mov EAX,R14D
            and EAX,32768
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967226
            add EAX,115
            mov DWORD PTR [RDI+52],EAX
            mov EAX,R14D
            and EAX,33554432
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967239
            add EAX,102
            mov DWORD PTR [RDI+60],EAX
            mov EAX,R14D
            and EAX,67108864
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967241
            add EAX,100
            mov DWORD PTR [RDI+64],EAX
            mov EAX,R14D
            and EAX,268435456
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967236
            add EAX,105
            mov DWORD PTR [RDI+68],EAX
            mov EAX,R14D
            and EAX,134217728
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967231
            add EAX,110
            mov DWORD PTR [RDI+72],EAX
            mov EAX,R14D
            and EAX,536870912
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967258
            add EAX,83
            mov DWORD PTR [RDI+76],EAX
            mov EAX,R14D
            and EAX,1073741824
            cmp EAX,1
            sbb EAX,EAX
            and EDX,16777216
            and EAX,4294967271
            add EAX,70
            cmp EDX,1
            mov DWORD PTR [RDI+80],EAX
            sbb EAX,EAX
            and EAX,4294967268
            add EAX,73
            cmp R12D,2048
            mov DWORD PTR [RDI+84],EAX
            mov QWORD PTR [RBX],RBP
            mov DWORD PTR [RDI+88],58
            je .L_433b60

            jle .L_433a90

            cmp R12D,4096
            je .L_433b40

            cmp R12D,8192
            jne .L_433a32

            lea RSI,QWORD PTR [RIP+.L_44f960]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
.L_433a32:

            mov RDI,RBP
            call wcslen@PLT

            lea RAX,QWORD PTR [RBP+RAX*4]
            cmp R13D,-1
            mov QWORD PTR [RBX],RAX
            jne .L_4337ac
.L_433a4c:

            add RSP,24
.L_433a50:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433a60:

            test R15,R15
            jne .L_43370f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433a70:

            mov EAX,EBP
            and EAX,4294967293
            cmp EAX,10001
            je .L_433660

            mov R15,QWORD PTR [RBX]
            jmp .L_433731
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433a90:

            cmp R12D,1024
            jne .L_433a32

            lea RSI,QWORD PTR [RIP+.L_44f91c]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
            jmp .L_433a32
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433ab0:

            lea RSI,QWORD PTR [RIP+.L_44f904]
            mov RDI,RCX
            call wcscpy@PLT

            jmp .L_433623
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433ac8:

            test R12D,15360
            je .L_433b80

            lea RSI,QWORD PTR [RIP+.L_44f88c]
            mov RDI,RCX
            call wcscpy@PLT
.L_433ae4:

            mov R15,QWORD PTR [RBX]
            mov R13D,4294967295
            mov RDI,R15
            call wcslen@PLT

            lea RAX,QWORD PTR [R15+RAX*4]
            mov ECX,R12D
            and ECX,768
            lea RDI,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],RDI
            mov DWORD PTR [RAX],58
            jne .L_433a70

            jmp .L_43381e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433b20:

            test R12D,15360
            je .L_4337d8

            lea RSI,QWORD PTR [RIP+.L_44f8bc]
            mov RDI,RCX
            call wcscpy@PLT

            jmp .L_433ae4
          .byte 0x66
          .byte 0x90
.L_433b40:

            lea RSI,QWORD PTR [RIP+.L_44f948]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
            jmp .L_433a32
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433b60:

            lea RSI,QWORD PTR [RIP+.L_44f934]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
            jmp .L_433a32
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433b80:

            mov R13D,4294967295
            xor R15D,R15D
            jmp .L_4336b2
.L_433b8e:

            nop
            nop
.L_433b90:

            push R15
            push R14
            mov R15D,R8D
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ECX
            mov RBX,RDI
            sub RSP,24
.L_433baa:

            test RSI,RSI
            mov RDX,QWORD PTR [RDI]
            mov EBP,DWORD PTR [RSP+80]
            mov R14D,DWORD PTR [RSP+88]
            je .L_433be6

            mov RDI,RDX
            mov QWORD PTR [RSP+8],R9
            call strcpy@PLT

            mov RDX,QWORD PTR [RBX]
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            add RDX,RAX
            mov QWORD PTR [RBX],RDX
.L_433be6:

            cmp R12D,10004
            je .L_433c90

            jle .L_433c68

            cmp R12D,10006
            je .L_4341b8

            jl .L_434128

            cmp R12D,10107
            jne .L_433cba

            movabs RAX,7308901812669871717
            mov EDI,64
            mov QWORD PTR [RDX],RAX
            mov WORD PTR [RDX+8],DI
.L_433c2b:

            mov R14,QWORD PTR [RBX]
            mov RDI,R14
            call strlen@PLT

            add R14,RAX
            mov R8D,R13D
            lea RAX,QWORD PTR [R14+1]
            and R8D,768
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [R14],58
            je .L_433d40

            mov R14D,4294967295
.L_433c5a:

            mov RAX,QWORD PTR [RBX]
            jmp .L_434077
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433c68:

            cmp R12D,10002
            je .L_434188

            jg .L_433ca6

            cmp R12D,10001
            jne .L_433cba
.L_433c80:

            mov DWORD PTR [RDX],1919251317
            mov BYTE PTR [RDX+4],0
            mov RDX,QWORD PTR [RBX]
            jmp .L_433cba
          .byte 0x90
.L_433c90:

            xor R9D,R9D
            test R13D,15360
            mov R14D,4294967295
            jne .L_434208
.L_433ca6:

            mov R10D,112
            mov DWORD PTR [RDX],1970238055
            mov WORD PTR [RDX+4],R10W
            mov RDX,QWORD PTR [RBX]
.L_433cba:

            mov RDI,RDX
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP]
            mov R8D,R13D
            mov R9,QWORD PTR [RSP+8]
            add RDX,RAX
            and R8D,768
            lea RAX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [RDX],58
            jne .L_434040

            mov EAX,R12D
            and EAX,4294967293
            cmp EAX,10001
            jne .L_433d53

            test R9,R9
            jne .L_434049

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433d10:

            mov ESI,R14D
            mov RDI,RBX
            mov DWORD PTR [RSP],R8D
            call .L_433360

            test R13D,15360
            mov RAX,QWORD PTR [RBX]
            mov R8D,DWORD PTR [RSP]
            jne .L_434077

            mov R14D,4294967295
            jmp .L_434077
          .byte 0x66
          .byte 0x90
.L_433d40:

            mov EAX,R12D
            mov R14D,4294967295
            and EAX,4294967293
            cmp EAX,10001
            je .L_433d10
.L_433d53:

            mov RAX,QWORD PTR [RBX]
.L_433d56:

            mov EDX,EBP
            lea RCX,QWORD PTR [RAX+1]
            and EDX,8
            cmp EDX,1
            mov QWORD PTR [RBX],RCX
            sbb EDX,EDX
            and EDX,4294967227
            add EDX,114
            mov BYTE PTR [RAX],DL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967222
            add EAX,119
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,1
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967221
            add EAX,120
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,32
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967229
            add EAX,112
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,2048
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967241
            add EAX,100
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,256
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967273
            add EAX,68
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,512
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967244
            add EAX,97
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,1024
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967276
            add EAX,65
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,64
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967259
            add EAX,82
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,128
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967254
            add EAX,87
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,4096
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967242
            add EAX,99
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,8192
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967274
            add EAX,67
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,16384
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967230
            add EAX,111
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,32768
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967226
            add EAX,115
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,33554432
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967239
            add EAX,102
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,67108864
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967241
            add EAX,100
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,268435456
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967236
            add EAX,105
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,134217728
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967231
            add EAX,110
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,536870912
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967258
            add EAX,83
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,1073741824
            cmp EAX,1
            sbb EAX,EAX
            and EBP,16777216
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967271
            add EAX,70
            cmp EBP,1
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            sbb EAX,EAX
            mov RDX,QWORD PTR [RBX]
            and EAX,4294967268
            add EAX,73
            cmp R13D,2048
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            je .L_4341d0

            jle .L_434160

            cmp R13D,4096
            je .L_434140

            cmp R13D,8192
            jne .L_434013

            mov RAX,QWORD PTR [RBX]
            mov EDX,109
            mov DWORD PTR [RAX],1918987361
            mov WORD PTR [RAX+4],DX
.L_434013:

            mov RBP,QWORD PTR [RBX]
            mov RDI,RBP
            call strlen@PLT

            add RBP,RAX
            cmp R14D,-1
            mov QWORD PTR [RBX],RBP
            jne .L_4340fe
.L_43402e:

            add RSP,24
.L_434032:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434040:

            test R9,R9
            je .L_4341ee
.L_434049:

            mov RDI,QWORD PTR [RBX]
            mov RSI,R9
            mov DWORD PTR [RSP+8],R8D
            call strcpy@PLT

            mov RDX,QWORD PTR [RBX]
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP]
            mov R8D,DWORD PTR [RSP+8]
            add RAX,RDX
            mov QWORD PTR [RBX],RAX
.L_434077:

            and R15D,4
            je .L_43408a

            sub R12D,10005
            cmp R12D,1
            jbe .L_434097
.L_43408a:

            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            mov RAX,QWORD PTR [RBX]
.L_434097:

            test R8D,R8D
            je .L_433d56

            mov EDX,EBP
            lea RCX,QWORD PTR [RAX+1]
            and EDX,292
            cmp EDX,1
            mov QWORD PTR [RBX],RCX
            sbb EDX,EDX
            and EDX,4294967227
            add EDX,114
            mov BYTE PTR [RAX],DL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,146
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EBP,73
            and EAX,4294967222
            add EAX,119
            mov QWORD PTR [RBX],RCX
            cmp EBP,1
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBX]
            sbb EAX,EAX
            and EAX,4294967221
            add EAX,120
            cmp R14D,-1
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            je .L_43402e
.L_4340fe:

            mov RAX,QWORD PTR [RBX]
            mov ESI,R14D
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            add RSP,24
.L_434115:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_433360
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434128:

            mov DWORD PTR [RDX],1802723693
            mov BYTE PTR [RDX+4],0
            jmp .L_433c2b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434140:

            mov RAX,QWORD PTR [RBX]
            mov ECX,116
            mov DWORD PTR [RAX],1768191329
            mov WORD PTR [RAX+4],CX
            jmp .L_434013
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434160:

            cmp R13D,1024
            jne .L_434013

            mov RAX,QWORD PTR [RBX]
            mov ESI,119
            mov DWORD PTR [RAX],1869376609
            mov WORD PTR [RAX+4],SI
            jmp .L_434013
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434188:

            xor R9D,R9D
            test R13D,15360
            mov R14D,4294967295
            je .L_433c80

            mov R14D,16498
            mov DWORD PTR [RDX],1701738351
            mov BYTE PTR [RDX+6],0
            mov WORD PTR [RDX+4],R14W
            jmp .L_43421d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4341b8:

            mov R8D,114
            mov DWORD PTR [RDX],1701344367
            mov WORD PTR [RDX+4],R8W
            jmp .L_433c2b
          .byte 0x66
          .byte 0x90
.L_4341d0:

            mov RAX,QWORD PTR [RBX]
            mov DWORD PTR [RAX],2037278052
            mov BYTE PTR [RAX+4],0
            jmp .L_434013

            nop
            nop
            nop
            nop
            nop
            nop
.L_4341e8:

            mov R14D,4294967295
.L_4341ee:

            mov EAX,R12D
            and EAX,4294967293
            cmp EAX,10001
            jne .L_433c5a

            jmp .L_433d10
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434208:

            mov R11D,16496
            mov DWORD PTR [RDX],1970238055
            mov BYTE PTR [RDX+6],0
            mov WORD PTR [RDX+4],R11W
.L_43421d:

            mov R14,QWORD PTR [RBX]
            mov RDI,R14
            call strlen@PLT

            add R14,RAX
            mov R8D,R13D
            lea RAX,QWORD PTR [R14+1]
            and R8D,768
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [R14],58
            jne .L_4341e8

            mov RAX,QWORD PTR [RBX]
            mov R14D,4294967295
            jmp .L_433d56
.L_434250:

            cmp ESI,256
            mov EAX,1
            je .L_434260

            ret 
          .byte 0x90
.L_434260:

            mov EAX,EDX
            and EAX,4294967288
            jne .L_43427f

            cmp ECX,10004
            je .L_434288

            cmp ECX,10006
            je .L_4342b0

            cmp ECX,10002
            je .L_434298
.L_43427f:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434288:

            mov ECX,DWORD PTR [RDI]
            shl EDX,3
            and ECX,4294967239
            or EDX,ECX
            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434298:

            mov ECX,DWORD PTR [RDI]
            shl EDX,6
            and ECX,4294966847
            or EDX,ECX
            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4342b0:

            mov ECX,DWORD PTR [RDI]
            and ECX,4294967288
            or EDX,ECX
            mov DWORD PTR [RDI],EDX
            ret 
.L_4342ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4342c0:

            cmp RSI,RDI
            jbe .L_434328

            mov ECX,DWORD PTR [RDI]
            xor EAX,EAX
            lea R8D,DWORD PTR [RCX-48]
            cmp R8D,9
            jbe .L_434300

            jmp .L_434330
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4342d8:

            cmp ECX,55
            jle .L_4342e4

            cmp EAX,214748364
            je .L_434307
.L_4342e4:

            lea EAX,DWORD PTR [RAX+RAX*4]
            add RDI,4
            cmp RDI,RSI
            lea EAX,DWORD PTR [R8+RAX*2]
            jae .L_434315
.L_4342f4:

            mov ECX,DWORD PTR [RDI]
            lea R8D,DWORD PTR [RCX-48]
            cmp R8D,9
            ja .L_434320
.L_434300:

            cmp EAX,214748364
            jle .L_4342d8
.L_434307:

            add RDI,4
            mov EAX,2147483647
            cmp RDI,RSI
            jb .L_4342f4
.L_434315:

            mov DWORD PTR [RDX],EAX
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434320:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434328:

            xor EAX,EAX
            jmp .L_434315
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434330:

            ret 
.L_434332:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434340:

            cmp RSI,RDI
            mov DWORD PTR [RDX],0
            jbe .L_434378
.L_43434b:

            add RDI,4
            mov EAX,DWORD PTR [RDI-4]
            cmp EAX,88
            je .L_434370

            jg .L_434380

            cmp EAX,82
            je .L_43438f

            cmp EAX,87
            je .L_4343a0

            cmp EAX,45
            je .L_434373
.L_434368:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434370:

            or DWORD PTR [RDX],1
.L_434373:

            cmp RDI,RSI
            jb .L_43434b
.L_434378:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_434380:

            cmp EAX,119
            je .L_4343a0

            cmp EAX,120
            je .L_434370

            cmp EAX,114
            jne .L_434368
.L_43438f:

            or DWORD PTR [RDX],4
            cmp RDI,RSI
            jb .L_43434b

            jmp .L_434378
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4343a0:

            or DWORD PTR [RDX],2
            cmp RDI,RSI
            jb .L_43434b

            jmp .L_434378
.L_4343aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4343b0:

            cmp RSI,RDI
            jbe .L_434418

            movsx EAX,BYTE PTR [RDI]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            ja .L_434410

            xor ECX,ECX
            jmp .L_4343f1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4343c8:

            cmp AL,55
            jle .L_4343d4

            cmp ECX,214748364
            je .L_4343f9
.L_4343d4:

            lea ECX,DWORD PTR [RCX+RCX*4]
            add RDI,1
            cmp RDI,RSI
            lea ECX,DWORD PTR [RAX+RCX*2-48]
            je .L_434407
.L_4343e4:

            movsx EAX,BYTE PTR [RDI]
            lea R8D,DWORD PTR [RAX-48]
            cmp R8B,9
            ja .L_434410
.L_4343f1:

            cmp ECX,214748364
            jle .L_4343c8
.L_4343f9:

            add RDI,1
            mov ECX,2147483647
            cmp RDI,RSI
            jne .L_4343e4
.L_434407:

            mov DWORD PTR [RDX],ECX
            mov EAX,1
            ret 
          .byte 0x90
.L_434410:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434418:

            xor ECX,ECX
            jmp .L_434407
.L_43441c:

            nop
            nop
            nop
            nop
.L_434420:

            cmp RSI,RDI
            mov DWORD PTR [RDX],0
            jbe .L_434458
.L_43442b:

            add RDI,1
            movzx EAX,BYTE PTR [RDI-1]
            cmp AL,88
            je .L_434450

            jg .L_434460

            cmp AL,82
            je .L_43446c

            cmp AL,87
            je .L_434480

            cmp AL,45
            je .L_434453
.L_434445:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434450:

            or DWORD PTR [RDX],1
.L_434453:

            cmp RDI,RSI
            jne .L_43442b
.L_434458:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_434460:

            cmp AL,119
            je .L_434480

            cmp AL,120
            je .L_434450

            cmp AL,114
            jne .L_434445
.L_43446c:

            or DWORD PTR [RDX],4
            cmp RDI,RSI
            jne .L_43442b

            jmp .L_434458
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434480:

            or DWORD PTR [RDX],2
            cmp RDI,RSI
            jne .L_43442b

            jmp .L_434458
.L_43448a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434490:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            sub RSP,88
.L_4344a4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RDI,RDI
            mov DWORD PTR [RSP+4],ECX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP+16],R9
            je .L_4347ea

            lea RAX,QWORD PTR [RSP+64]
            mov RBX,RDI
            xor ECX,ECX
            xor R15D,R15D
            mov EBP,3435973837
            mov R12D,EDX
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_4345d4
          .byte 0x66
          .byte 0x90
.L_434500:

            cmp EAX,10002
            je .L_4347b0

            jg .L_4346a8

            cmp EAX,10001
            jne .L_434632
.L_43451c:

            add RCX,4
.L_434520:

            mov ESI,EAX
            lea R13,QWORD PTR [RCX+1]
            and ESI,4294967293
            cmp ESI,10001
            jne .L_43463b

            mov EAX,DWORD PTR [RSP+4]
            lea RDI,QWORD PTR [RBX+24]
            test EAX,EAX
            je .L_4346f0

            mov RSI,RDI
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+8]
            call .L_431d20

            test EAX,EAX
            jne .L_4346d0

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_4346e0

            call wcslen@PLT

            add R13,RAX
            nop
            nop
            nop
.L_434578:

            mov EAX,DWORD PTR [RBX+12]
            add R13,1
.L_43457f:

            mov ESI,EAX
            and ESI,4294967293
            test R12B,4
            je .L_43459f

            test R14D,768
            je .L_43459f
.L_434593:

            sub EAX,10005
            cmp EAX,2
            sbb R13,0
.L_43459f:

            cmp R14D,15360
            je .L_4346b8
.L_4345ac:

            lea RCX,QWORD PTR [R13+3]
.L_4345b0:

            add RCX,1
            cmp ESI,10001
            jne .L_4345c8

            mov ESI,R12D
            and ESI,1
            jne .L_434730
.L_4345c8:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_434768
.L_4345d4:

            mov EDX,DWORD PTR [RBX+8]
            test EDX,R14D
            je .L_4345c8

            cmp EDX,256
            mov EAX,DWORD PTR [RBX+12]
            je .L_434670

            add R15D,1
            test R14D,512
            je .L_434603

            lea RSI,QWORD PTR [RCX+8]
            test DH,2
            cmovne RCX,RSI
.L_434603:

            cmp EAX,10004
            je .L_43469b
.L_43460e:

            jle .L_434500

            cmp EAX,10006
            je .L_4346a8

            jl .L_43451c

            lea RSI,QWORD PTR [RCX+9]
            cmp EAX,10107
            cmove RCX,RSI
.L_434632:

            mov ESI,EAX
            lea R13,QWORD PTR [RCX+1]
            and ESI,4294967293
.L_43463b:

            mov EDI,R12D
            and EDI,4
            cmp R14D,15360
            je .L_4346bb

            test EDI,EDI
            lea R13,QWORD PTR [RCX+2]
            je .L_4345ac

            test R14D,768
            jne .L_434593

            jmp .L_4345ac
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434670:

            mov ESI,EAX
            and ESI,4294967291
            cmp ESI,10002
            je .L_4345c8

            cmp EAX,10004
            je .L_4345c8

            add R15D,1
            cmp EAX,10004
            jne .L_43460e
.L_43469b:

            cmp R14D,15360
            je .L_4347bd
.L_4346a8:

            add RCX,5
            jmp .L_434520
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4346b8:

            mov EDX,DWORD PTR [RBX+8]
.L_4346bb:

            xor ECX,ECX
            and DH,8
            sete CL
            lea RCX,QWORD PTR [R13+RCX*1+27]
            jmp .L_4345b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4346d0:

            jns .L_4346e0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4347d5
.L_4346e0:

            add R13,13
            jmp .L_434578
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4346f0:

            mov RCX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+32]
            call .L_431d90

            test EAX,EAX
            jne .L_4347d5

            mov RAX,QWORD PTR [RSP+64]
            test RAX,RAX
            je .L_4346e0

            cmp QWORD PTR [RSP+48],0
            je .L_4346e0

            add R13,RAX
            jmp .L_434578
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434730:

            mov EDX,DWORD PTR [RBX+20]
            cmp EDX,9
            jle .L_4347e0

            nop
            nop
            nop
            nop
.L_434740:

            mov EAX,EDX
            add ESI,1
            mul EBP
            shr EDX,3
            cmp EDX,9
            jg .L_434740

            movsxd RSI,ESI
.L_434752:

            mov RBX,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RSI+RCX*1+1]
            test RBX,RBX
            jne .L_4345d4

            nop
            nop
            nop
            nop
            nop
.L_434768:

            and R14D,256
            mov R13D,R12D
            je .L_4347d0
.L_434774:

            mov RAX,RCX
            xor ECX,ECX
            and R13D,4
            sete CL
            lea RCX,QWORD PTR [RCX+RAX*1+31]
.L_434785:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            mov RAX,RCX
            jne .L_4347fa

            add RSP,88
.L_43479c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4347b0:

            cmp R14D,15360
            jne .L_43451c
.L_4347bd:

            lea R13,QWORD PTR [RCX+6]
            add R13,1
            jmp .L_43457f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4347d0:

            test R15D,R15D
            jne .L_434785
.L_4347d5:

            xor ECX,ECX
            jmp .L_434785
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4347e0:

            mov ESI,1
            jmp .L_434752
.L_4347ea:

            and R14D,256
            je .L_4347d5

            xor ECX,ECX
            jmp .L_434774
.L_4347fa:

            call __stack_chk_fail@PLT
.L_4347ff:

            nop
.L_434800:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_434809:

            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_434839

            nop
            nop
            nop
            nop
            nop
            nop
.L_434818:

            mov RBP,QWORD PTR [RDI]
            add RDI,24
            call .L_431b10

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            test RBP,RBP
            mov QWORD PTR [RBX+8],RBP
            mov RDI,RBP
            jne .L_434818
.L_434839:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_43484f

            call free@PLT

            mov QWORD PTR [RBX+32],0
.L_43484f:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_434865

            call free@PLT

            mov QWORD PTR [RBX+40],0
.L_434865:

            mov QWORD PTR [RBX+16],0
            mov DWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+24],0
            add RSP,8
.L_43487f:

            pop RBX
            pop RBP
            ret 
.L_434882:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434890:

            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
.L_43489c:

            call .L_434800

            mov EAX,DWORD PTR [RBX]
            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            mov DWORD PTR [RBP],EAX
            je .L_4348df

            nop
.L_4348b0:

            mov ECX,DWORD PTR [RBX+12]
            mov EDX,DWORD PTR [RBX+16]
            mov RDI,RBP
            mov ESI,DWORD PTR [RBX+8]
            mov R8D,DWORD PTR [RBX+20]
            call .L_4333d0

            test RAX,RAX
            je .L_4348d7

            lea RSI,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [RAX+24]
            call .L_431ba0
.L_4348d7:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_4348b0
.L_4348df:

            add RSP,8
.L_4348e3:

            pop RBX
            pop RBP
            ret 
.L_4348e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4348f0:

            push R12
            push RBP
            mov EBP,ECX
            push RBX
            mov EBX,EDX
            call .L_434250

            test EAX,EAX
            jne .L_434910
.L_434901:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434910:

            mov ECX,EBP
            mov EDX,EBX
            mov R12,R9
            call .L_4333d0

            test RAX,RAX
            je .L_43494c

            test R12,R12
            lea RDI,QWORD PTR [RAX+24]
            je .L_434931

            cmp BYTE PTR [R12],0
            jne .L_434940
.L_434931:

            call .L_431b10

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434940:

            mov RSI,R12
            call .L_431ea0

            xor EAX,EAX
            jmp .L_434901
.L_43494c:

            mov EAX,4294967271
            jmp .L_434901
.L_434953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434960:

            push R12
            push RBP
            mov EBP,ECX
            push RBX
            mov EBX,EDX
            call .L_434250

            test EAX,EAX
            jne .L_434980
.L_434971:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434980:

            mov ECX,EBP
            mov EDX,EBX
            mov R12,R9
            call .L_4333d0

            test RAX,RAX
            je .L_4349d1

            test R12,R12
            lea RDI,QWORD PTR [RAX+24]
            je .L_4349aa

            mov EAX,DWORD PTR [R12]
            test EAX,EAX
            je .L_4349aa

            cmp QWORD PTR [RSP+32],0
            jne .L_4349c0
.L_4349aa:

            call .L_431b10

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4349c0:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,R12
            call .L_432010

            xor EAX,EAX
            jmp .L_434971
.L_4349d1:

            mov EAX,4294967271
            jmp .L_434971
.L_4349d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4349e0:

            mov RDX,QWORD PTR [RDI+8]
            xor EAX,EAX
            test RDX,RDX
            je .L_434a18

            nop
            nop
            nop
            nop
            nop
.L_4349f0:

            mov ECX,DWORD PTR [RDX+8]
            mov RDX,QWORD PTR [RDX]
            and ECX,ESI
            cmp ECX,1
            sbb EAX,-1
            test RDX,RDX
            jne .L_4349f0

            test EAX,EAX
            je .L_434a18

            lea EDX,DWORD PTR [RAX+3]
            and ESI,256
            cmovne EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434a18:

            ret 
.L_434a1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434a20:

            mov EAX,DWORD PTR [RDI+48]
            ret 
.L_434a24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434a30:

            mov R8,QWORD PTR [RDI+8]
            test R8,R8
            je .L_434a70

            mov RDX,R8
            xor EAX,EAX
            nop
            nop
.L_434a40:

            mov ECX,DWORD PTR [RDX+8]
            mov RDX,QWORD PTR [RDX]
            and ECX,ESI
            cmp ECX,1
            sbb EAX,-1
            test RDX,RDX
            jne .L_434a40

            test EAX,EAX
            je .L_434a70

            lea EDX,DWORD PTR [RAX+3]
            and ESI,256
            mov DWORD PTR [RDI+24],10002
            mov QWORD PTR [RDI+16],R8
            cmovne EAX,EDX
            ret 
          .byte 0x90
.L_434a70:

            mov DWORD PTR [RDI+24],0
            xor EAX,EAX
            mov QWORD PTR [RDI+16],R8
            ret 
.L_434a7e:

            nop
            nop
.L_434a80:

            push RBP
            push RBX
            sub RSP,8
.L_434a86:

            mov R11,QWORD PTR [RSP+32]
            mov RBX,QWORD PTR [RSP+40]
            mov QWORD PTR [RBX],0
            mov DWORD PTR [R11],4294967295
            mov EAX,DWORD PTR [RSI+24]
            test EAX,EAX
            je .L_434c20

            test DH,1
            jne .L_434b20
.L_434aae:

            mov RAX,QWORD PTR [RSI+16]
            test RAX,RAX
            je .L_434ae5

            mov R10D,DWORD PTR [RAX+8]
            test R10D,EDX
            je .L_434ad5

            jmp .L_434b74
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434ac8:

            mov R10D,DWORD PTR [RAX+8]
            test R10D,EDX
            jne .L_434b70
.L_434ad5:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_434ac8

            mov QWORD PTR [RSI+16],0
.L_434ae5:

            mov DWORD PTR [RSI+24],0
            mov DWORD PTR [RCX],0
            mov EAX,1
            mov DWORD PTR [R8],0
            mov DWORD PTR [R9],0
            mov DWORD PTR [R11],4294967295
            mov QWORD PTR [RBX],0
            add RSP,8
.L_434b17:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434b20:

            cmp EAX,10004
            je .L_434bf8

            cmp EAX,10006
            je .L_434bc8

            cmp EAX,10002
            jne .L_434aae

            mov EAX,DWORD PTR [RSI]
            shr EAX,6
            and EAX,7
            mov DWORD PTR [R8],EAX
            mov DWORD PTR [RCX],256
            xor EAX,EAX
            mov DWORD PTR [R9],10002
            mov DWORD PTR [RSI+24],10004
            add RSP,8
.L_434b66:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434b70:

            mov QWORD PTR [RSI+16],RAX
.L_434b74:

            mov DWORD PTR [RCX],R10D
            mov EDX,DWORD PTR [RAX+16]
            mov RBP,RSI
            lea RSI,QWORD PTR [RAX+24]
            mov DWORD PTR [R8],EDX
            mov EDX,DWORD PTR [RAX+12]
            mov DWORD PTR [R9],EDX
            mov EDX,DWORD PTR [RAX+20]
            mov DWORD PTR [R11],EDX
            mov RDX,RBX
            call .L_431cb0

            test EAX,EAX
            je .L_434bb1

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_434c27

            mov QWORD PTR [RBX],0
.L_434bb1:

            mov RAX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+16],RAX
            xor EAX,EAX
.L_434bbe:

            add RSP,8
.L_434bc2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434bc8:

            mov EAX,DWORD PTR [RSI]
            and EAX,7
            mov DWORD PTR [R8],EAX
            mov RAX,QWORD PTR [RSI+8]
            mov DWORD PTR [RCX],256
            mov DWORD PTR [R9],10006
            mov DWORD PTR [RSI+24],4294967295
            mov QWORD PTR [RSI+16],RAX
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434bf8:

            mov EAX,DWORD PTR [RSI]
            shr EAX,3
            and EAX,7
            mov DWORD PTR [R8],EAX
            mov DWORD PTR [RCX],256
            xor EAX,EAX
            mov DWORD PTR [R9],10004
            mov DWORD PTR [RSI+24],10006
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_434c20:

            mov EAX,4294967276
            jmp .L_434bbe
.L_434c27:

            mov EAX,4294967266
            jmp .L_434bbe
.L_434c2e:

            nop
            nop
.L_434c30:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RCX
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,88
.L_434c46:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+48]
            mov QWORD PTR [RSP+32],RSI
            test AH,60
            je .L_434e70

            test AH,3
            mov EBX,15360
            jne .L_434dc0
.L_434c75:

            mov RDI,QWORD PTR [R15+8]
            xor R9D,R9D
            mov ECX,1
            mov R8,R14
            mov EDX,EBP
            mov ESI,EBX
            call .L_434490

            test RAX,RAX
            mov RCX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_434dc0

            mov EAX,EBP
            lea RDI,QWORD PTR [RCX*4]
            and EAX,8
            cmp EAX,1
            sbb R13D,R13D
            and R13D,4294967262
            call malloc@PLT

            add R13D,44
            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_434ec0

            mov R12D,EBX
            and R12D,256
            jne .L_434ee0
.L_434ce1:

            mov R15,QWORD PTR [R15+8]
            test R15,R15
            je .L_434e30

            lea RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+28],R13D
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_434d6d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434d10:

            test R12D,R12D
            je .L_434d29

            mov RAX,QWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+64],RDX
            mov DWORD PTR [RAX],EDI
.L_434d29:

            test BPL,1
            mov EAX,4294967295
            je .L_434d38

            mov EAX,DWORD PTR [R15+20]
.L_434d38:

            mov EDX,DWORD PTR [R15+8]
            mov ECX,DWORD PTR [R15+12]
            mov R8D,EBP
            push RAX
.L_434d44:

            mov EAX,DWORD PTR [R15+16]
            mov RSI,R13
            add R12D,1
            push RAX
            mov R9,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            call .L_433590

            pop RAX
            pop RDX
.L_434d61:

            mov R15,QWORD PTR [R15]
            test R15,R15
            je .L_434e30
.L_434d6d:

            mov EAX,DWORD PTR [R15+8]
            test EAX,EBX
            je .L_434d61

            cmp EAX,256
            je .L_434df8

            xor R13D,R13D
            cmp EAX,512
            jne .L_434d95

            lea RAX,QWORD PTR [RIP+.L_44f810]
            test BPL,2
            cmovne R13,RAX
.L_434d95:

            mov RDX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R15+24]
            mov RDI,R14
            call .L_431d20

            test EAX,EAX
            je .L_434d10

            jns .L_434d61

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_434d61

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434dc0:

            mov QWORD PTR [RSP+8],0
.L_434dc9:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+8]
            jne .L_434f83

            add RSP,88
.L_434de6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434df8:

            mov EAX,DWORD PTR [R15+12]
            mov EDX,EAX
            and EDX,4294967291
            cmp EDX,10002
            je .L_434d61

            xor R13D,R13D
            cmp EAX,10004
            jne .L_434d95

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_434d6d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434e30:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+64],RDX
            mov DWORD PTR [RAX],0
            call wcslen@PLT

            cmp RAX,QWORD PTR [RSP+40]
            jge .L_434f88

            mov RBX,QWORD PTR [RSP+32]
            test RBX,RBX
            je .L_434dc9

            mov QWORD PTR [RBX],RAX
            jmp .L_434dc9
          .byte 0x90
.L_434e70:

            mov EAX,EDX
            and EAX,512
            test DH,1
            je .L_434ea0

            test EAX,EAX
            mov EBX,256
            je .L_434c75

            or EBP,2
            mov EBX,768
            jmp .L_434c75
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434ea0:

            test EAX,EAX
            mov EBX,512
            jne .L_434c75

            or EBP,2
            mov EBX,768
            jmp .L_434c75
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434ec0:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_434dc0

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0

            nop
.L_434ee0:

            lea R12,QWORD PTR [RSP+64]
            push -1
.L_434ee7:

            mov EAX,DWORD PTR [R15]
            xor R9D,R9D
            mov R8D,EBP
            mov ECX,10002
            mov RDI,R12
            mov EDX,256
            xor ESI,ESI
            and EAX,448
            push RAX
            call .L_433590

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,R12
            xor R9D,R9D
            mov R8D,EBP
            mov ECX,10004
            xor ESI,ESI
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+80],RDX
            mov DWORD PTR [RAX],R13D
            mov EDX,256
            push -1
            mov EAX,DWORD PTR [R15]
            and EAX,56
            push RAX
            call .L_433590

            mov RAX,QWORD PTR [RSP+96]
            mov ECX,10006
            xor ESI,ESI
            mov RDI,R12
            xor R9D,R9D
            mov R8D,EBP
            mov R12D,3
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+96],RDX
            add RSP,32
            mov DWORD PTR [RAX],R13D
            push -1
            mov EAX,DWORD PTR [R15]
            mov EDX,256
            and EAX,7
            push RAX
            call .L_433590

            pop RCX
            pop RSI
            jmp .L_434ce1
.L_434f83:

            call __stack_chk_fail@PLT
.L_434f88:

            lea RSI,QWORD PTR [RIP+.L_44f843]
            mov EDI,1
            call .L_432cd0
.L_434f99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434fa0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov EBX,EDX
            sub RSP,104
.L_434fb3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+48]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+8],RCX
            test AH,60
            je .L_4351a0

            test AH,3
            mov R12D,15360
            jne .L_435166
.L_434fe8:

            mov RDI,QWORD PTR [R15+8]
            mov R9,QWORD PTR [RSP+8]
            xor R8D,R8D
            xor ECX,ECX
            mov EDX,EBX
            mov ESI,R12D
            call .L_434490

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RSP+56],RAX
            je .L_435166

            mov EAX,EBX
            and EAX,8
            cmp EAX,1
            sbb R13D,R13D
            and R13D,4294967262
            call malloc@PLT

            add R13D,44
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+80],RAX
            je .L_435158

            mov EBP,R12D
            and EBP,256
            jne .L_435270
.L_43504b:

            mov R15,QWORD PTR [R15+8]
            test R15,R15
            je .L_4351f0

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,R15
            mov R15D,R13D
            mov R13,RAX
            jmp .L_43511d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435088:

            xor R14D,R14D
            cmp EAX,512
            jne .L_4350a0

            lea RAX,QWORD PTR [RIP+.L_44f852]
            test BL,2
            cmovne R14,RAX
.L_4350a0:

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R13+24]
            mov RSI,QWORD PTR [RSP+24]
            call .L_431d90

            test EAX,EAX
            jne .L_435166

            test EBP,EBP
            je .L_4350d5

            mov RAX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+80],RDX
            mov BYTE PTR [RAX],R15B
.L_4350d5:

            mov R9,QWORD PTR [RSP+72]
            test R9,R9
            je .L_4350e9

            test BL,1
            mov EAX,4294967295
            je .L_4350ed
.L_4350e9:

            mov EAX,DWORD PTR [R13+20]
.L_4350ed:

            mov EDX,DWORD PTR [R13+8]
            mov ECX,DWORD PTR [R13+12]
            mov R8D,EBX
            push RAX
.L_4350f9:

            mov EAX,DWORD PTR [R13+16]
            mov RSI,R14
            add EBP,1
            push RAX
            mov RDI,QWORD PTR [RSP+48]
            call .L_433b90

            pop RAX
            pop RDX
.L_435110:

            mov R13,QWORD PTR [R13]
            test R13,R13
            je .L_4351f0
.L_43511d:

            mov EAX,DWORD PTR [R13+8]
            test EAX,R12D
            je .L_435110

            cmp EAX,256
            jne .L_435088

            mov EAX,DWORD PTR [R13+12]
            mov EDX,EAX
            and EDX,4294967291
            cmp EDX,10002
            je .L_435110

            xor R14D,R14D
            cmp EAX,10004
            jne .L_4350a0

            jmp .L_435110
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435158:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_435328
.L_435166:

            mov QWORD PTR [RSP+40],0
.L_43516f:

            mov RSI,QWORD PTR [RSP+88]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+40]
            jne .L_435312

            add RSP,104
.L_43518c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4351a0:

            mov EAX,EDX
            and EAX,512
            test DH,1
            je .L_4351d0

            test EAX,EAX
            mov R12D,256
            je .L_434fe8

            or EBX,2
            mov R12D,768
            jmp .L_434fe8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4351d0:

            test EAX,EAX
            mov R12D,512
            jne .L_434fe8

            or EBX,2
            mov R12D,768
            jmp .L_434fe8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4351f0:

            mov RAX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+80],RDX
            mov RDX,QWORD PTR [RSP+40]
            mov BYTE PTR [RAX],0
.L_435206:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_435206

            mov ECX,EAX
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            mov ESI,EAX
            cmove RDX,RCX
            add SIL,AL
            sbb RDX,3
            sub RDX,QWORD PTR [RSP+40]
            cmp RDX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+64],RDX
            jge .L_435317

            mov RAX,QWORD PTR [RSP+48]
            test RAX,RAX
            je .L_43516f

            mov QWORD PTR [RAX],RDX
            jmp .L_43516f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435270:

            lea RBP,QWORD PTR [RSP+80]
            push -1
.L_435277:

            mov EAX,DWORD PTR [R15]
            xor R9D,R9D
            mov R8D,EBX
            mov ECX,10002
            mov RDI,RBP
            mov EDX,256
            xor ESI,ESI
            and EAX,448
            push RAX
            call .L_433b90

            mov RAX,QWORD PTR [RSP+96]
            mov RDI,RBP
            xor R9D,R9D
            mov R8D,EBX
            mov ECX,10004
            xor ESI,ESI
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+96],RDX
            mov BYTE PTR [RAX],R13B
            mov EDX,256
            push -1
            mov EAX,DWORD PTR [R15]
            and EAX,56
            push RAX
            call .L_433b90

            mov RAX,QWORD PTR [RSP+112]
            mov ECX,10006
            xor ESI,ESI
            mov RDI,RBP
            xor R9D,R9D
            mov R8D,EBX
            mov EBP,3
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+112],RDX
            add RSP,32
            mov BYTE PTR [RAX],R13B
            push -1
            mov EAX,DWORD PTR [R15]
            mov EDX,256
            and EAX,7
            push RAX
            call .L_433b90

            pop RCX
            pop RSI
            jmp .L_43504b
.L_435312:

            call __stack_chk_fail@PLT
.L_435317:

            lea RSI,QWORD PTR [RIP+.L_44f843]
            mov EDI,1
            call .L_432cd0
.L_435328:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_435339:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435340:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,216
.L_435354:

            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+20],EDX
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RDI
            xor EDI,EDI
            cmp EDX,512
            je .L_435f69

            jle .L_435f61

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,768
            je .L_435495

            cmp EAX,15360
            mov R14D,6
            jne .L_435f57
.L_4353a2:

            test RBX,RBX
            je .L_4354ac
.L_4353ab:

            mov EAX,DWORD PTR [RBX]
            mov DWORD PTR [RSP+28],0
            test EAX,EAX
            je .L_4354b4

            lea RDI,QWORD PTR [RSP+96]
            xor R12D,R12D
            mov QWORD PTR [RSP+8],RDI
            lea EDI,DWORD PTR [R14-1]
            mov DWORD PTR [RSP+24],EDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_4353d8:

            mov R8,QWORD PTR [RSP+8]
            mov RCX,RBX
            xor EBP,EBP
            jmp .L_4353ee
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4353e8:

            add RCX,4
            mov EAX,DWORD PTR [RCX]
.L_4353ee:

            lea EDX,DWORD PTR [RAX-9]
            cmp EDX,1
            jbe .L_4353e8

            cmp EAX,32
            je .L_4353e8

            test EAX,EAX
            je .L_435761

            cmp EAX,44
            je .L_435761

            cmp EAX,58
            je .L_435761

            mov RBX,RCX
            jmp .L_435434
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435420:

            add RBX,4
            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            je .L_435439

            cmp EAX,44
            je .L_435439

            cmp EAX,58
            je .L_435439
.L_435434:

            cmp EAX,10
            jne .L_435420
.L_435439:

            mov ESI,DWORD PTR [RBX-4]
            lea RDX,QWORD PTR [RBX-4]
            lea EDI,DWORD PTR [RSI-9]
            cmp EDI,1
            ja .L_43545e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435450:

            sub RDX,4
            mov ESI,DWORD PTR [RDX]
            lea EDI,DWORD PTR [RSI-9]
            cmp EDI,1
            jbe .L_435450
.L_43545e:

            cmp ESI,32
            je .L_435450

            add RDX,4
            test EAX,EAX
            je .L_4354c0

            add RBX,4
            cmp EBP,R14D
            jge .L_43547b
.L_435474:

            mov QWORD PTR [R8],RCX
            mov QWORD PTR [R8+8],RDX
.L_43547b:

            add EBP,1
            add R8,16
            cmp EAX,58
            jne .L_435700

            mov EAX,DWORD PTR [RBX]
            mov RCX,RBX
            jmp .L_4353ee
.L_435495:

            test RBX,RBX
            mov R14D,5
            mov DWORD PTR [RSP+20],256
            jne .L_4353ab
.L_4354ac:

            mov DWORD PTR [RSP+28],0
.L_4354b4:

            xor EBX,EBX
            jmp .L_4356c2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4354c0:

            cmp EBP,R14D
            jl .L_435474

            add EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4354d0:

            mov RCX,QWORD PTR [RSP+96]
            test RCX,RCX
            je .L_4354e3

            cmp DWORD PTR [RCX],35
            je .L_4356b0
.L_4354e3:

            mov R15,QWORD PTR [RSP+104]
            mov EAX,DWORD PTR [RSP+20]
            mov DWORD PTR [RSP+92],4294967295
            mov DWORD PTR [RSP+88],0
            mov R11,R15
            sub R11,RCX
            sar R11,2
            cmp EAX,15360
            je .L_435769

            cmp DWORD PTR [RCX],100
            mov R10,QWORD PTR [RSP+120]
            mov R13,QWORD PTR [RSP+112]
            je .L_435ba8

            lea R8,QWORD PTR [RCX+4]
            mov R15D,EAX
            mov R9D,1
            mov DWORD PTR [RSP+16],0
.L_435539:

            cmp R10,R13
            ja .L_435c41
.L_435542:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,3
            cmp EAX,EBP
            jge .L_43559e

            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp RSI,RDI
            jbe .L_43559e

            lea RDX,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+72],R10
            mov QWORD PTR [RSP+64],R8
            mov DWORD PTR [RSP+56],R9D
            mov QWORD PTR [RSP+48],R11
            mov QWORD PTR [RSP+40],RCX
            call .L_4342c0

            mov R10,QWORD PTR [RSP+72]
            mov R8,QWORD PTR [RSP+64]
            mov R9D,DWORD PTR [RSP+56]
            mov R11,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+40]
.L_43559e:

            mov EAX,DWORD PTR [RCX]
            cmp EAX,109
            je .L_435c99
.L_4355a9:

            jle .L_435d20

            cmp EAX,111
            je .L_435d8c

            cmp EAX,117
            jne .L_435756

            cmp R11,1
            je .L_435601

            cmp R11,4
            mov QWORD PTR [RSP+48],R10
            mov DWORD PTR [RSP+40],R9D
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f8ac]
            mov EDX,3
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+40]
            mov R10,QWORD PTR [RSP+48]
            jne .L_435756
.L_435601:

            cmp DWORD PTR [RSP+92],-1
            jne .L_435f3f

            cmp R10,R13
            ja .L_435f3f

            xor EBP,EBP
            xor R13D,R13D
            mov ECX,10002
            xor EAX,EAX
.L_435621:

            mov EDX,DWORD PTR [RSP+88]
            test EDX,EDX
            jne .L_43566d

            mov R8D,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+40],ECX
            add R8D,2
            sub R8D,EAX
            movsxd RAX,R8D
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp RSI,RDI
            jbe .L_435756

            lea RDX,QWORD PTR [RSP+88]
            call .L_434340

            test EAX,EAX
            je .L_435756

            mov EDX,DWORD PTR [RSP+88]
            mov ECX,DWORD PTR [RSP+40]
.L_43566d:

            mov R10,RBP
            sub RSP,8
.L_435674:

            mov R9,R13
            sub R10,R13
            mov ESI,R15D
            sar R10,2
            push R10
            mov R8D,DWORD PTR [RSP+108]
            mov RDI,QWORD PTR [RSP+48]
            call .L_434960

            cmp EAX,-20
            pop RDX
            pop RCX
.L_435697:

            jl .L_435ff9

            test EAX,EAX
            mov EAX,4294967276
            cmovne R12D,EAX
            or DWORD PTR [RSP+28],R15D
            nop
            nop
            nop
.L_4356b0:

            test RBX,RBX
            je .L_4356bf

            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            jne .L_4353d8
.L_4356bf:

            mov EBX,R12D
.L_4356c2:

            mov ESI,DWORD PTR [RSP+28]
            mov RDI,QWORD PTR [RSP+32]
            call .L_434a30
.L_4356d0:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+200]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43602e

            add RSP,216
.L_4356f0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435700:

            cmp EBP,R14D
            jge .L_4354d0

            mov EDX,DWORD PTR [RSP+24]
            movsxd RCX,EBP
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,RCX
            shl RAX,4
            sub EDX,EBP
            lea RAX,QWORD PTR [RDI+RAX*1+8]
            add RDX,RCX
            shl RDX,4
            lea RDX,QWORD PTR [RDI+RDX*1+24]
            nop
.L_435730:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX-8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_435730

            jmp .L_4354d0
.L_43574d:

            test SIL,SIL
            jne .L_43604d
.L_435756:

            mov R12D,4294967276
            jmp .L_4356b0
.L_435761:

            mov RBX,RCX
            jmp .L_435439
.L_435769:

            cmp R11,5
            je .L_435e7e

            jle .L_435e15

            cmp R11,6
            je .L_435ea6

            cmp R11,9
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f7e8]
            mov EDX,9
            mov RDI,RCX
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            jne .L_435756

            mov R11D,1
            mov ECX,10107
            xor EBP,EBP
            xor R13D,R13D
.L_4357b5:

            movsxd RAX,R11D
            shl RAX,4
            mov R8,QWORD PTR [RSP+RAX*1+104]
            mov RSI,QWORD PTR [RSP+RAX*1+96]
            cmp R8,RSI
            jbe .L_435756

            mov EDX,DWORD PTR [RSP+88]
            xor EDI,EDI
.L_4357d1:

            add RSI,4
            mov EAX,DWORD PTR [RSI-4]
            sub EAX,45
            cmp EAX,75
            ja .L_435b90

            lea R9,QWORD PTR [RIP+.L_44f994]
            movsxd RAX,DWORD PTR [R9+RAX*4]
            add RAX,R9
            jmp RAX
.L_4357f4:

            or DH,128
            mov EDI,1
.L_4357fc:

            cmp R8,RSI
            ja .L_4357d1
.L_435801:

            test DIL,DIL
            jne .L_436025
.L_43580a:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,2
            cdqe 
            shl RAX,4
            mov R8,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp R8,RDI
            jbe .L_435756

            mov EAX,DWORD PTR [RSP+88]
            xor ESI,ESI
.L_435830:

            add RDI,4
            mov EDX,DWORD PTR [RDI-4]
            sub EDX,45
            cmp EDX,65
            ja .L_43574d

            lea R15,QWORD PTR [RIP+.L_44fac4]
            movsxd RDX,DWORD PTR [R15+RDX*4]
            add RDX,R15
            jmp RDX
.L_435853:

            or EDX,1
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435870:

            or EDX,8
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435890:

            or EDX,32
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4358b0:

            or DH,64
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4358d0:

            or EDX,16
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4358f0:

            or DH,8
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435910:

            or DH,16
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435930:

            or DH,2
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435950:

            or DL,128
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435970:

            or EDX,64
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435990:

            or DH,1
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4359b0:

            or DH,32
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4359d0:

            or DH,4
            cmp R8,RSI
            mov EDI,1
            ja .L_4357d1

            jmp .L_435801
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4359f0:

            or EAX,16777216
            mov ESI,1
.L_4359fa:

            cmp R8,RDI
            ja .L_435830
.L_435a03:

            test SIL,SIL
            jne .L_43601c
.L_435a0c:

            mov EAX,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+40],ECX
            add EAX,3
            cdqe 
            shl RAX,4
            mov R15,QWORD PTR [RSP+RAX*1+96]
            mov RAX,QWORD PTR [RSP+RAX*1+104]
            sub RAX,R15
            sar RAX,2
            cmp RAX,4
            je .L_435f9d

            cmp RAX,5
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f91c]
            mov EDX,5
            mov RDI,R15
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_435fd3

            lea RSI,QWORD PTR [RIP+.L_44f948]
            mov EDX,5
            mov RDI,R15
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_435fc8

            lea RSI,QWORD PTR [RIP+.L_44f960]
            mov EDX,5
            mov RDI,R15
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_435756

            mov ECX,DWORD PTR [RSP+40]
            mov R15D,8192
.L_435aa8:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,4
            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp RSI,RDI
            ja .L_435fde

            mov EDX,DWORD PTR [RSP+88]
            jmp .L_43566d
.L_435ad1:

            or EAX,134217728
            cmp R8,RDI
            mov ESI,1
            ja .L_435830

            jmp .L_435a03
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435af0:

            or EAX,1073741824
            cmp R8,RDI
            mov ESI,1
            ja .L_435830

            jmp .L_435a03
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b10:

            or EAX,268435456
            cmp R8,RDI
            mov ESI,1
            ja .L_435830

            jmp .L_435a03
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b30:

            or EAX,33554432
            cmp R8,RDI
            mov ESI,1
            ja .L_435830

            jmp .L_435a03
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b50:

            or EAX,67108864
            cmp R8,RDI
            mov ESI,1
            ja .L_435830

            jmp .L_435a03
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b70:

            or EAX,536870912
            cmp R8,RDI
            mov ESI,1
            ja .L_435830

            jmp .L_435a03
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435b90:

            test DIL,DIL
            je .L_435756

            mov DWORD PTR [RSP+88],EDX
            jmp .L_435756
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435ba8:

            cmp R11,1
            je .L_435f05

            cmp R11,6
            lea R8,QWORD PTR [RCX+4]
            jbe .L_435dfd

            lea RSI,QWORD PTR [RIP+.L_44f978]
            mov RDI,R8
            mov EDX,6
            mov QWORD PTR [RSP+64],R10
            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+40],R8
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            mov R8,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+56]
            mov R10,QWORD PTR [RSP+64]
            jne .L_435dfd

            cmp R11,7
            je .L_435f05

            lea RAX,QWORD PTR [RCX+28]
            lea R8,QWORD PTR [RCX+32]
            mov R9D,1
            sub R15,RAX
            mov QWORD PTR [RSP+96],RAX
            mov RCX,RAX
            mov R11,R15
            mov R15D,512
            sar R11,2
            cmp R10,R13
            jbe .L_435542
.L_435c41:

            lea RDX,QWORD PTR [RSP+92]
            mov RSI,R10
            mov RDI,R13
            mov QWORD PTR [RSP+72],R8
            mov DWORD PTR [RSP+64],R9D
            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+40],R10
            call .L_4342c0

            cmp DWORD PTR [RSP+92],-1
            mov R10,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+56]
            mov R9D,DWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+72]
            je .L_435542

            mov EAX,DWORD PTR [RCX]
            cmp EAX,109
            jne .L_4355a9
.L_435c99:

            cmp R11,1
            je .L_435f7e

            cmp R11,4
            mov QWORD PTR [RSP+40],R10
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f8f4]
            mov EDX,3
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_435756

            mov EAX,DWORD PTR [RSP+16]
            mov ECX,10005
            mov R10,QWORD PTR [RSP+40]
            add EAX,2
            cmp EAX,EBP
            jne .L_435dda
.L_435ce7:

            cmp R10,R13
            jbe .L_435df1

            lea RDX,QWORD PTR [RSP+88]
            mov RSI,R10
            mov RDI,R13
            mov DWORD PTR [RSP+40],ECX
            call .L_434340

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_436000

            xor EBP,EBP
            xor R13D,R13D
            mov EAX,1
            jmp .L_435621
          .byte 0x90
.L_435d20:

            cmp EAX,103
            jne .L_435756

            cmp R11,1
            je .L_435d69

            cmp R11,5
            mov QWORD PTR [RSP+48],R10
            mov DWORD PTR [RSP+40],R9D
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f8dc]
            mov EDX,4
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+40]
            mov R10,QWORD PTR [RSP+48]
            jne .L_435756
.L_435d69:

            cmp DWORD PTR [RSP+92],-1
            je .L_436033
.L_435d74:

            movsxd RAX,R9D
            mov ECX,10003
            shl RAX,4
            mov RBP,QWORD PTR [RSP+RAX*1+104]
            xor EAX,EAX
            jmp .L_435621
.L_435d8c:

            cmp R11,1
            je .L_435f74

            cmp R11,5
            mov QWORD PTR [RSP+40],R10
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f908]
            mov EDX,4
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,10006
            mov R10,QWORD PTR [RSP+40]
            jne .L_435756
.L_435dcb:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,2
            cmp EAX,EBP
            je .L_435ce7
.L_435dda:

            cmp DWORD PTR [RSP+16],1
            sbb EAX,EAX
            add EAX,4
            cmp EAX,EBP
            jne .L_435df1

            cmp R10,R13
            ja .L_435756
.L_435df1:

            xor EBP,EBP
            xor R13D,R13D
            xor EAX,EAX
            jmp .L_435621
.L_435dfd:

            mov R15D,DWORD PTR [RSP+20]
            mov R9D,1
            mov DWORD PTR [RSP+16],0
            jmp .L_435539
.L_435e15:

            cmp R11,4
            jne .L_435756

            lea RSI,QWORD PTR [RIP+.L_44f8a8]
            mov RDI,RCX
            mov EDX,4
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,10001
            jne .L_435756
.L_435e40:

            mov R13,QWORD PTR [RSP+112]
            mov RBP,QWORD PTR [RSP+120]
            mov R11D,2
            mov DWORD PTR [RSP+16],1
            cmp RBP,R13
            jbe .L_4357b5

            lea RDX,QWORD PTR [RSP+92]
            mov RSI,RBP
            mov RDI,R13
            mov DWORD PTR [RSP+40],ECX
            call .L_4342c0

            mov ECX,DWORD PTR [RSP+40]
            jmp .L_4357b5
.L_435e7e:

            lea RSI,QWORD PTR [RIP+.L_44f8d8]
            mov RDI,RCX
            mov EDX,5
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,10003
            je .L_435e40

            mov R12D,4294967276
            jmp .L_4356b0
.L_435ea6:

            lea RSI,QWORD PTR [RIP+.L_44f88c]
            mov EDX,6
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            je .L_435f88

            mov RCX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RIP+.L_44f8bc]
            mov EDX,6
            mov RDI,RCX
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            jne .L_435756

            mov R11D,1
            mov ECX,10004
            xor EBP,EBP
            xor R13D,R13D
            jmp .L_4357b5
.L_435f05:

            sub R10,R13
            lea R8,QWORD PTR [R13+4]
            mov RCX,R13
            sar R10,2
            mov R13,QWORD PTR [RSP+128]
            mov R9D,2
            mov R11,R10
            mov R15D,512
            mov R10,QWORD PTR [RSP+136]
            mov DWORD PTR [RSP+16],1
            jmp .L_435539
.L_435f3f:

            movsxd RAX,R9D
            mov ECX,10001
            shl RAX,4
            mov RBP,QWORD PTR [RSP+RAX*1+104]
            xor EAX,EAX
            jmp .L_435621
.L_435f57:

            mov EBX,4294967266
            jmp .L_4356d0
.L_435f61:

            cmp EDX,256
            jne .L_435f57
.L_435f69:

            mov R14D,5
            jmp .L_4353a2
.L_435f74:

            mov ECX,10006
            jmp .L_435dcb
.L_435f7e:

            mov ECX,10005
            jmp .L_435dcb
.L_435f88:

            mov R11D,1
            mov ECX,10002
            xor EBP,EBP
            xor R13D,R13D
            jmp .L_4357b5
.L_435f9d:

            lea RSI,QWORD PTR [RIP+.L_44f934]
            mov RDI,R15
            mov EDX,4
            mov R15D,2048
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_435aa8

            jmp .L_435756
.L_435fc8:

            mov R15D,4096
            jmp .L_435aa8
.L_435fd3:

            mov R15D,1024
            jmp .L_435aa8
.L_435fde:

            lea RDX,QWORD PTR [RSP+92]
            mov DWORD PTR [RSP+16],ECX
            call .L_4342c0

            mov EDX,DWORD PTR [RSP+88]
            mov ECX,DWORD PTR [RSP+16]
            jmp .L_43566d
.L_435ff9:

            mov EBX,EAX
            jmp .L_4356d0
.L_436000:

            cmp DWORD PTR [RSP+16],1
            sbb EDX,EDX
            add EDX,4
            cmp EBP,EDX
            je .L_435756

            xor EBP,EBP
            xor R13D,R13D
            jmp .L_435621
.L_43601c:

            mov DWORD PTR [RSP+88],EAX
            jmp .L_435a0c
.L_436025:

            mov DWORD PTR [RSP+88],EDX
            jmp .L_43580a
.L_43602e:

            call __stack_chk_fail@PLT
.L_436033:

            cmp R10,R13
            ja .L_435d74

            xor EBP,EBP
            xor R13D,R13D
            mov ECX,10004
            xor EAX,EAX
            jmp .L_435621
.L_43604d:

            mov DWORD PTR [RSP+88],EAX
            jmp .L_435756
.L_436056:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436060:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,200
.L_436074:

            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+20],EDX
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RDI
            xor EDI,EDI
            cmp EDX,512
            mov QWORD PTR [RSP+56],RCX
            je .L_436b21

            jle .L_436b19

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,768
            je .L_4361ad

            cmp EAX,15360
            mov EBP,6
            jne .L_436b2b
.L_4360c6:

            test RBX,RBX
            je .L_4361c3
.L_4360cf:

            movzx EAX,BYTE PTR [RBX]
            xor R13D,R13D
            mov DWORD PTR [RSP+28],0
            test AL,AL
            je .L_4361ce

            lea R14,QWORD PTR [RSP+80]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4360f0:

            mov R8,R14
            mov RCX,RBX
            xor R9D,R9D
            jmp .L_436107
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436100:

            add RCX,1
            movzx EAX,BYTE PTR [RCX]
.L_436107:

            lea EDX,DWORD PTR [RAX-9]
            cmp DL,1
            jbe .L_436100

            cmp AL,32
            je .L_436100

            cmp AL,44
            je .L_43637d

            test AL,AL
            je .L_43637d

            cmp AL,58
            je .L_43637d

            mov RBX,RCX
            jmp .L_436143
.L_436130:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_436147

            cmp AL,44
            je .L_436147

            cmp AL,58
            je .L_436147
.L_436143:

            cmp AL,10
            jne .L_436130
.L_436147:

            movzx ESI,BYTE PTR [RBX-1]
            lea RDX,QWORD PTR [RBX-1]
            lea EDI,DWORD PTR [RSI-9]
            cmp DIL,1
            ja .L_436170

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436160:

            sub RDX,1
            movzx ESI,BYTE PTR [RDX]
            lea EDI,DWORD PTR [RSI-9]
            cmp DIL,1
            jbe .L_436160
.L_436170:

            cmp SIL,32
            je .L_436160

            add RDX,1
            test AL,AL
            je .L_436210

            add RBX,1
            cmp EBP,R9D
            jle .L_436192
.L_43618b:

            mov QWORD PTR [R8],RCX
            mov QWORD PTR [R8+8],RDX
.L_436192:

            add R9D,1
            add R8,16
            cmp AL,58
            jne .L_436330

            movzx EAX,BYTE PTR [RBX]
            mov RCX,RBX
            jmp .L_436107
.L_4361ad:

            test RBX,RBX
            mov EBP,5
            mov DWORD PTR [RSP+20],256
            jne .L_4360cf
.L_4361c3:

            mov DWORD PTR [RSP+28],0
            xor R13D,R13D
.L_4361ce:

            mov ESI,DWORD PTR [RSP+28]
            mov RDI,QWORD PTR [RSP+32]
            call .L_434a30
.L_4361dc:

            mov RBX,QWORD PTR [RSP+184]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_436c8e

            add RSP,200
.L_4361fd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436210:

            cmp EBP,R9D
            jg .L_43618b

            add R9D,1
            nop
            nop
            nop
.L_436220:

            mov R10,QWORD PTR [RSP+80]
            test R10,R10
            je .L_436234

            cmp BYTE PTR [R10],35
            je .L_43630e
.L_436234:

            mov RAX,QWORD PTR [RSP+88]
            mov R15D,DWORD PTR [RSP+20]
            mov DWORD PTR [RSP+76],4294967295
            mov DWORD PTR [RSP+72],0
            mov R11,RAX
            sub R11,R10
            cmp R15D,15360
            je .L_436385

            cmp BYTE PTR [R10],100
            mov R12,QWORD PTR [RSP+96]
            mov R8,QWORD PTR [RSP+104]
            je .L_4363e8

            lea RAX,QWORD PTR [R10+1]
            mov DWORD PTR [RSP+24],1
            xor ECX,ECX
            mov QWORD PTR [RSP+8],RAX
.L_436288:

            cmp R8,R12
            ja .L_436427
.L_436291:

            lea EAX,DWORD PTR [RCX+3]
            cmp EAX,R9D
            jge .L_4362ca

            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+88]
            mov RDI,QWORD PTR [RSP+RAX*1+80]
            cmp RSI,RDI
            jbe .L_4362ca

            lea RDX,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+48],R8
            mov DWORD PTR [RSP+40],ECX
            call .L_4343b0

            mov R8,QWORD PTR [RSP+48]
            mov ECX,DWORD PTR [RSP+40]
.L_4362ca:

            movzx EAX,BYTE PTR [R10]
            cmp AL,109
            je .L_436460
.L_4362d6:

            jle .L_4364d8

            cmp AL,111
            je .L_4365a0

            cmp AL,117
            jne .L_436308

            cmp R11,1
            je .L_436a9a

            cmp R11,4
            jne .L_436308

            mov RAX,QWORD PTR [RSP+8]
            cmp WORD PTR [RAX],25971
            je .L_436a90
.L_436308:

            mov R13D,4294967276
.L_43630e:

            test RBX,RBX
            je .L_4361ce

            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_4360f0

            jmp .L_4361ce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436330:

            cmp EBP,R9D
            jle .L_436220

            lea EDX,DWORD PTR [RBP-1]
            movsxd RCX,R9D
            mov RAX,RCX
            sub EDX,R9D
            shl RAX,4
            add RDX,RCX
            lea RAX,QWORD PTR [R14+RAX*1+8]
            shl RDX,4
            lea RDX,QWORD PTR [R14+RDX*1+24]
            nop
            nop
            nop
            nop
            nop
            nop
.L_436360:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX-8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_436360

            jmp .L_436220
.L_43637d:

            mov RBX,RCX
            jmp .L_436147
.L_436385:

            cmp R11,5
            je .L_436af6

            jle .L_4365fa

            cmp R11,6
            je .L_436a4f

            cmp R11,9
            jne .L_436308

            movabs RAX,7308901812669871717
            cmp QWORD PTR [R10],RAX
            jne .L_436308

            cmp BYTE PTR [R10+8],64
            jne .L_436308

            xor R10D,R10D
            mov R15D,1
            mov R11D,10107
            xor R9D,R9D
            xor R12D,R12D
            jmp .L_436636
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4363e8:

            cmp R11,1
            je .L_436ac1

            lea RDI,QWORD PTR [R10+1]
            cmp R11,6
            mov QWORD PTR [RSP+8],RDI
            jbe .L_43640f

            cmp DWORD PTR [R10+1],1969317477
            je .L_436b7b
.L_43640f:

            xor ECX,ECX
            cmp R8,R12
            mov R15D,DWORD PTR [RSP+20]
            mov DWORD PTR [RSP+24],1
            jbe .L_436291
.L_436427:

            lea RDX,QWORD PTR [RSP+76]
            mov RSI,R8
            mov RDI,R12
            mov DWORD PTR [RSP+48],ECX
            mov QWORD PTR [RSP+40],R8
            call .L_4343b0

            cmp DWORD PTR [RSP+76],-1
            mov R8,QWORD PTR [RSP+40]
            mov ECX,DWORD PTR [RSP+48]
            je .L_436291

            movzx EAX,BYTE PTR [R10]
            cmp AL,109
            jne .L_4362d6
.L_436460:

            cmp R11,1
            je .L_43648a

            cmp R11,4
            jne .L_436308

            mov RAX,QWORD PTR [RSP+8]
            cmp WORD PTR [RAX],29537
            jne .L_436308

            cmp BYTE PTR [RAX+2],107
            jne .L_436308
.L_43648a:

            lea EAX,DWORD PTR [RCX+2]
            mov R11D,10005
            cmp EAX,R9D
            jne .L_4365d7
.L_43649c:

            cmp R8,R12
            jbe .L_4365ed

            lea RDX,QWORD PTR [RSP+72]
            mov RSI,R8
            mov RDI,R12
            mov DWORD PTR [RSP+8],ECX
            call .L_434420

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+8]
            je .L_436bff

            xor R9D,R9D
            xor R12D,R12D
            mov EAX,1
            jmp .L_436522
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4364d8:

            cmp AL,103
            jne .L_436308

            cmp R11,1
            je .L_436501

            cmp R11,5
            jne .L_436308

            mov RAX,QWORD PTR [RSP+8]
            cmp DWORD PTR [RAX],1886744434
            jne .L_436308
.L_436501:

            cmp DWORD PTR [RSP+76],-1
            je .L_436c9c
.L_43650c:

            movsxd RAX,DWORD PTR [RSP+24]
            mov R11D,10003
            shl RAX,4
            mov R9,QWORD PTR [RSP+RAX*1+88]
            xor EAX,EAX
.L_436522:

            mov R10D,DWORD PTR [RSP+72]
            test R10D,R10D
            jne .L_43656c

            add ECX,2
            mov QWORD PTR [RSP+8],R9
            sub ECX,EAX
            movsxd RAX,ECX
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+88]
            mov RDI,QWORD PTR [RSP+RAX*1+80]
            cmp RSI,RDI
            jbe .L_436308

            lea RDX,QWORD PTR [RSP+72]
            call .L_434420

            test EAX,EAX
            je .L_436308
.L_436562:

            mov R10D,DWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+8]
.L_43656c:

            mov RDI,QWORD PTR [RSP+32]
            mov ECX,R11D
            mov EDX,R10D
            mov ESI,R15D
            mov QWORD PTR [RSP+8],R9
            mov R8D,DWORD PTR [RSP+76]
            call .L_434250

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_436a00
.L_436596:

            or DWORD PTR [RSP+28],R15D
            jmp .L_43630e
.L_4365a0:

            cmp R11,1
            je .L_436b51

            cmp R11,5
            jne .L_436308

            mov RAX,QWORD PTR [RSP+8]
            mov R11D,10006
            cmp DWORD PTR [RAX],1919248500
            jne .L_436308
.L_4365cb:

            lea EAX,DWORD PTR [RCX+2]
            cmp EAX,R9D
            je .L_43649c
.L_4365d7:

            cmp ECX,1
            sbb EAX,EAX
            add EAX,4
            cmp EAX,R9D
            jne .L_4365ed

            cmp R8,R12
            ja .L_436308
.L_4365ed:

            xor R9D,R9D
            xor R12D,R12D
            xor EAX,EAX
            jmp .L_436522
.L_4365fa:

            cmp R11,4
            jne .L_436308

            cmp DWORD PTR [R10],1919251317
            mov R11D,10001
            jne .L_436308
.L_436617:

            mov R12,QWORD PTR [RSP+96]
            mov R9,QWORD PTR [RSP+104]
            mov R15D,2
            mov R10D,1
            cmp R12,R9
            jb .L_436b5c
.L_436636:

            movsxd RAX,R15D
            shl RAX,4
            mov RDI,QWORD PTR [RSP+RAX*1+88]
            mov RCX,QWORD PTR [RSP+RAX*1+80]
            cmp RDI,RCX
            jbe .L_436308

            mov EDX,DWORD PTR [RSP+72]
            xor ESI,ESI
.L_436656:

            add RCX,1
            movzx EAX,BYTE PTR [RCX-1]
            sub EAX,45
            cmp AL,75
            ja .L_4369d0

            lea R15,QWORD PTR [RIP+.L_44fbcc]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
.L_43667c:

            or DH,128
            mov ESI,1
.L_436684:

            cmp RDI,RCX
            jne .L_436656
.L_436689:

            test SIL,SIL
            jne .L_436c93
.L_436692:

            lea EAX,DWORD PTR [R10+2]
            cdqe 
            shl RAX,4
            mov RDI,QWORD PTR [RSP+RAX*1+88]
            mov RSI,QWORD PTR [RSP+RAX*1+80]
            cmp RDI,RSI
            jbe .L_436308

            mov EAX,DWORD PTR [RSP+72]
            xor ECX,ECX
.L_4366b5:

            add RSI,1
            movzx EDX,BYTE PTR [RSI-1]
            sub EDX,45
            cmp DL,65
            ja .L_4369e8

            lea R15,QWORD PTR [RIP+.L_44fcfc]
            movzx EDX,DL
            movsxd RDX,DWORD PTR [R15+RDX*4]
            add RDX,R15
            jmp RDX
.L_4366dc:

            or EDX,1
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x90
.L_4366f0:

            or DH,8
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436710:

            or DH,16
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436730:

            or DH,2
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436750:

            or DL,128
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436770:

            or EDX,64
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436790:

            or DH,1
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367b0:

            or DH,32
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367d0:

            or DH,4
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367f0:

            or EDX,8
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436810:

            or EDX,32
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436830:

            or DH,64
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436850:

            or EDX,16
            cmp RDI,RCX
            mov ESI,1
            jne .L_436656

            jmp .L_436689
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436870:

            or EAX,16777216
            mov ECX,1
.L_43687a:

            cmp RDI,RSI
            jne .L_4366b5
.L_436883:

            test CL,CL
            jne .L_436cb8
.L_43688b:

            lea EDX,DWORD PTR [R10+3]
            movsxd RDX,EDX
            shl RDX,4
            mov RAX,QWORD PTR [RSP+RDX*1+80]
            mov RDX,QWORD PTR [RSP+RDX*1+88]
            sub RDX,RAX
            cmp RDX,4
            je .L_436bc1

            cmp RDX,5
            jne .L_436308

            cmp DWORD PTR [RAX],1869376609
            je .L_436c5d

            cmp DWORD PTR [RAX],1768191329
            je .L_436c79
.L_4368cf:

            cmp DWORD PTR [RAX],1918987361
            jne .L_436308

            cmp BYTE PTR [RAX+4],109
            jne .L_436308

            mov R15D,8192
.L_4368eb:

            lea EAX,DWORD PTR [R10+4]
            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+88]
            mov RDI,QWORD PTR [RSP+RAX*1+80]
            cmp RSI,RDI
            ja .L_436c49

            mov R10D,DWORD PTR [RSP+72]
            jmp .L_43656c
.L_436912:

            or EAX,134217728
            cmp RDI,RSI
            mov ECX,1
            jne .L_4366b5

            jmp .L_436883
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436930:

            or EAX,1073741824
            cmp RDI,RSI
            mov ECX,1
            jne .L_4366b5

            jmp .L_436883
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436950:

            or EAX,268435456
            cmp RDI,RSI
            mov ECX,1
            jne .L_4366b5

            jmp .L_436883
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436970:

            or EAX,33554432
            cmp RDI,RSI
            mov ECX,1
            jne .L_4366b5

            jmp .L_436883
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436990:

            or EAX,67108864
            cmp RDI,RSI
            mov ECX,1
            jne .L_4366b5

            jmp .L_436883
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4369b0:

            or EAX,536870912
            cmp RDI,RSI
            mov ECX,1
            jne .L_4366b5

            jmp .L_436883
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4369d0:

            test SIL,SIL
            je .L_436308

            mov DWORD PTR [RSP+72],EDX
            jmp .L_436308
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4369e8:

            test CL,CL
            je .L_436308

            mov DWORD PTR [RSP+72],EAX
            jmp .L_436308
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436a00:

            mov RDI,QWORD PTR [RSP+32]
            mov ECX,R11D
            mov EDX,R10D
            mov ESI,R15D
            mov QWORD PTR [RSP+8],R9
            call .L_4333d0

            test RAX,RAX
            je .L_436cc1

            test R12,R12
            lea RDI,QWORD PTR [RAX+24]
            je .L_436a45

            mov R9,QWORD PTR [RSP+8]
            mov RDX,R9
            sub RDX,R12
            cmp BYTE PTR [R12],0
            je .L_436a45

            test RDX,RDX
            jne .L_436c1b
.L_436a45:

            call .L_431b10

            jmp .L_436596
.L_436a4f:

            cmp DWORD PTR [R10],1701738351
            je .L_436bd8
.L_436a5c:

            cmp DWORD PTR [R10],1970238055
            jne .L_436308

            cmp WORD PTR [R10+4],16496
            jne .L_436308

            xor R10D,R10D
            mov R15D,1
            mov R11D,10004
            xor R9D,R9D
            xor R12D,R12D
            jmp .L_436636
.L_436a90:

            cmp BYTE PTR [RAX+2],114
            jne .L_436308
.L_436a9a:

            cmp DWORD PTR [RSP+76],-1
            jne .L_436b36

            cmp R8,R12
            ja .L_436b36

            xor R9D,R9D
            xor R12D,R12D
            mov R11D,10002
            xor EAX,EAX
            jmp .L_436522
.L_436ac1:

            lea RAX,QWORD PTR [R12+1]
            mov R11,R8
            mov R10,R12
            sub R11,R12
            mov R8,QWORD PTR [RSP+120]
            mov R12,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+8],RAX
            mov DWORD PTR [RSP+24],2
            mov R15D,512
            mov ECX,1
            jmp .L_436288
.L_436af6:

            cmp DWORD PTR [R10],1970238055
            jne .L_436308

            cmp BYTE PTR [R10+4],112
            mov R11D,10003
            jne .L_436308

            jmp .L_436617
.L_436b19:

            cmp EDX,256
            jne .L_436b2b
.L_436b21:

            mov EBP,5
            jmp .L_4360c6
.L_436b2b:

            mov R13D,4294967266
            jmp .L_4361dc
.L_436b36:

            movsxd RAX,DWORD PTR [RSP+24]
            mov R11D,10001
            shl RAX,4
            mov R9,QWORD PTR [RSP+RAX*1+88]
            xor EAX,EAX
            jmp .L_436522
.L_436b51:

            mov R11D,10006
            jmp .L_4365cb
.L_436b5c:

            lea RDX,QWORD PTR [RSP+76]
            mov RSI,R9
            mov RDI,R12
            mov QWORD PTR [RSP+8],R9
            call .L_4343b0

            mov R9,QWORD PTR [RSP+8]
            jmp .L_436636
.L_436b7b:

            cmp WORD PTR [RDI+4],29804
            jne .L_43640f

            xor ECX,ECX
            cmp R11,7
            je .L_436ac1

            lea RDX,QWORD PTR [R10+7]
            lea RDI,QWORD PTR [R10+8]
            mov DWORD PTR [RSP+24],1
            mov R15D,512
            sub RAX,RDX
            mov QWORD PTR [RSP+80],RDX
            mov QWORD PTR [RSP+8],RDI
            mov R11,RAX
            mov R10,RDX
            jmp .L_436288
.L_436bc1:

            cmp DWORD PTR [RAX],2037278052
            mov R15D,2048
            je .L_4368eb

            jmp .L_436308
.L_436bd8:

            cmp WORD PTR [R10+4],16498
            jne .L_436a5c

            xor R10D,R10D
            mov R15D,1
            mov R11D,10002
            xor R9D,R9D
            xor R12D,R12D
            jmp .L_436636
.L_436bff:

            cmp ECX,1
            sbb EDX,EDX
            add EDX,4
            cmp R9D,EDX
            je .L_436308

            xor R9D,R9D
            xor R12D,R12D
            jmp .L_436522
.L_436c1b:

            mov RCX,QWORD PTR [RSP+56]
            mov RSI,R12
            call .L_432050

            test EAX,EAX
            je .L_436596

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_436b2b

            mov R13D,4294967276
            jmp .L_436596
.L_436c49:

            lea RDX,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+8],R9
            call .L_4343b0

            jmp .L_436562
.L_436c5d:

            cmp BYTE PTR [RAX+4],119
            mov R15D,1024
            je .L_4368eb

            cmp DWORD PTR [RAX],1768191329
            jne .L_4368cf
.L_436c79:

            cmp BYTE PTR [RAX+4],116
            mov R15D,4096
            jne .L_4368cf

            jmp .L_4368eb
.L_436c8e:

            call __stack_chk_fail@PLT
.L_436c93:

            mov DWORD PTR [RSP+72],EDX
            jmp .L_436692
.L_436c9c:

            cmp R8,R12
            ja .L_43650c

            xor R9D,R9D
            xor R12D,R12D
            mov R11D,10004
            xor EAX,EAX
            jmp .L_436522
.L_436cb8:

            mov DWORD PTR [RSP+72],EAX
            jmp .L_43688b
.L_436cc1:

            mov R13D,4294967271
            jmp .L_4361dc
.L_436ccc:

            nop
            nop
            nop
            nop
.L_436cd0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_447c02]
            push RBP
            push RBX
            lea RBP,QWORD PTR [RIP+.L_44fe08]
            lea RBX,QWORD PTR [RIP+.L_445300]
            lea R12,QWORD PTR [RIP+.L_44fe0f]
            mov R14D,ESI
            sub RSP,8
.L_436d00:

            mov BYTE PTR [RDI],0
.L_436d03:

            mov EAX,R14D
            neg EAX
            and EAX,R14D
            je .L_436dab
.L_436d11:

            mov EDX,EAX
            mov RSI,RBX
            not EDX
            and R14D,EDX
            cmp EAX,4
            je .L_436d50

            jbe .L_436dc0

            cmp EAX,32
            mov RSI,RBP
            je .L_436d50

            cmp EAX,32768
            mov RSI,R12
            je .L_436d50

            cmp EAX,16
            lea RSI,QWORD PTR [RIP+.L_44fe04]
            je .L_436d50
.L_436d44:

            mov RSI,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436d50:

            mov RDI,R15
.L_436d53:

            mov EDX,DWORD PTR [RDI]
            add RDI,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_436d53

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RDI+2]
            mov ECX,EAX
            cmove RDI,RDX
            add CL,AL
            sbb RDI,3
            call stpcpy@PLT

            test R14D,R14D
            je .L_436d03

            mov EDX,47
            mov WORD PTR [RAX],DX
            mov EAX,R14D
            neg EAX
            and EAX,R14D
            jne .L_436d11
.L_436dab:

            add RSP,8
.L_436daf:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436dc0:

            cmp EAX,1
            lea RSI,QWORD PTR [RIP+.L_448d55]
            je .L_436d50

            cmp EAX,2
            lea RSI,QWORD PTR [RIP+.L_444c26]
            je .L_436d50

            jmp .L_436d44
.L_436de1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436df0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,168
.L_436dfc:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI]
            cmp EAX,212668873
            je .L_436eb0

            jbe .L_436e70

            cmp EAX,2965749982
            je .L_436ea0

            cmp EAX,3221336261
            jne .L_436ebc

            lea R8,QWORD PTR [RIP+.L_44fe30]
.L_436e37:

            cmp EAX,ESI
            jne .L_436f50

            mov EAX,DWORD PTR [RBX+4]
            test EAX,EDX
            je .L_436ef0

            xor EAX,EAX
.L_436e4c:

            mov RDI,QWORD PTR [RSP+152]
            xor RDI,QWORD PTR FS:[40]
            jne .L_436f77

            add RSP,168
.L_436e6a:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436e70:

            cmp EAX,14594245
            je .L_436e90

            cmp EAX,195932357
            jne .L_436ebc

            lea R8,QWORD PTR [RIP+.L_44fe43]
            jmp .L_436e37
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436e90:

            lea R8,QWORD PTR [RIP+.L_44fe23]
            jmp .L_436e37
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436ea0:

            lea R8,QWORD PTR [RIP+.L_44fe15]
            jmp .L_436e37
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436eb0:

            lea R8,QWORD PTR [RIP+.L_44fe55]
            jmp .L_436e37
.L_436ebc:

            lea RDI,QWORD PTR [RIP+.L_44fe63]
            mov QWORD PTR [RSP+8],RCX
            call .L_402dba

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RCX
            call .L_402dba

            lea RDI,QWORD PTR [RIP+.L_44fe80]
            call .L_402dba

            call abort@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436ef0:

            cmp EAX,32768
            mov QWORD PTR [RSP+8],RCX
            je .L_436f39

            lea RDI,QWORD PTR [RSP+80]
            mov ESI,EDX
            call .L_436cd0

            mov ESI,DWORD PTR [RBX+4]
            lea RDI,QWORD PTR [RSP+16]
            mov RBP,RAX
            call .L_436cd0

            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44ff00]
            mov R8,RAX
            mov R9,RBP
            mov ESI,4294967295
            mov RDI,RBX
            xor EAX,EAX
            call .L_432bc0
.L_436f39:

            mov DWORD PTR [RBX+4],32768
            mov EAX,4294967266
            jmp .L_436e4c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436f50:

            lea RDX,QWORD PTR [RIP+.L_44fea8]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBX
            call .L_432bc0

            mov DWORD PTR [RBX+4],32768
            mov EAX,4294967266
            jmp .L_436e4c
.L_436f77:

            call __stack_chk_fail@PLT
.L_436f7c:

            nop
            nop
            nop
            nop
.L_436f80:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov QWORD PTR [RDI+8],0
            mov RBX,RDI
            movsx ESI,BYTE PTR [RSI]
            mov R12,RBP
            cmp SIL,32
            jne .L_436feb

            nop
            nop
            nop
            nop
            nop
            nop
.L_436fa8:

            add R12,1
            movsx ESI,BYTE PTR [R12]
            cmp SIL,32
            je .L_436fa8

            test SIL,223
            jne .L_436ff1

            nop
            nop
            nop
.L_436fc0:

            mov RAX,R12
            sub RAX,RBP
.L_436fc6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_436fd0:

            cmp SIL,34
            lea R14,QWORD PTR [R12+1]
            je .L_437010

            mov RDI,RBX
            mov R12,R14
            call .L_4312e0
.L_436fe6:

            movsx ESI,BYTE PTR [R12]
.L_436feb:

            test SIL,223
            je .L_436fc0
.L_436ff1:

            cmp SIL,92
            jne .L_436fd0

            movsx ESI,BYTE PTR [R12+1]
            test SIL,SIL
            je .L_437080

            mov RDI,RBX
            add R12,2
            call .L_4312e0

            jmp .L_436fe6
.L_437010:

            movsx ESI,BYTE PTR [R12+1]
.L_437016:

            test SIL,SIL
            je .L_437040
.L_43701b:

            cmp SIL,92
            je .L_437050

            cmp SIL,34
            lea R13,QWORD PTR [R14+1]
            je .L_437070

            mov RDI,RBX
            call .L_4312e0

            movsx ESI,BYTE PTR [R14+1]
            mov R14,R13
            test SIL,SIL
            jne .L_43701b
.L_437040:

            pop RBX
.L_437041:

            mov RAX,-25
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_437050:

            movsx ESI,BYTE PTR [R14+1]
            test SIL,SIL
            je .L_437040

            mov RDI,RBX
            add R14,2
            call .L_4312e0

            movsx ESI,BYTE PTR [R14]
            jmp .L_437016
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437070:

            cmp R13,R12
            js .L_437040

            mov R12,R13
            jmp .L_436fe6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437080:

            add R12,1
            mov RAX,R12
            sub RAX,RBP
            jmp .L_436fc6
.L_43708f:

            nop
.L_437090:

            cmp QWORD PTR [RDI],0
            je .L_437120

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
.L_4370ae:

            mov EAX,DWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI+8]
            add EAX,2
            cdqe 
            lea RSI,QWORD PTR [RAX*8]
            call realloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_437118

            movsxd R15,DWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            mov RDI,RBP
            call strdup@PLT

            test RAX,RAX
            mov R13,R15
            lea R14,QWORD PTR [R15*8]
            mov QWORD PTR [R12+R15*8],RAX
            je .L_437118

            add R13D,1
            xor EAX,EAX
            mov DWORD PTR [RBX+16],R13D
            mov QWORD PTR [R12+R14*1+8],0
.L_437106:

            add RSP,8
.L_43710a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437118:

            mov EAX,4294967266
            jmp .L_437106
          .byte 0x90
.L_437120:

            mov EAX,4294967271
            ret 
.L_437126:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437130:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,RSI
            sub RSP,32
.L_437142:

            mov R12,RSP
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov RDI,R12
            mov QWORD PTR [RSP+16],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_436f80

            test RAX,RAX
            js .L_43723a

            cmp QWORD PTR [RSP+8],0
            je .L_43723a

            mov R13,QWORD PTR [RSP]
            mov R14,RAX
            mov RDI,R13
            call strlen@PLT

            mov RDI,QWORD PTR [RBP]
            lea RSI,QWORD PTR [RAX+1]
            call realloc@PLT

            test RAX,RAX
            je .L_437275

            mov RSI,R13
            mov RDI,RAX
            mov QWORD PTR [RBP],RAX
            call strcpy@PLT

            mov R13,QWORD PTR [RSP]
            mov ESI,47
            mov RDI,R13
            call strrchr@PLT

            lea RDX,QWORD PTR [RAX+1]
            test RAX,RAX
            mov RDI,RBP
            cmovne R13,RDX
            mov RSI,R13
            call .L_437090

            test EAX,EAX
            mov R13D,EAX
            jne .L_437240

            add RBX,R14
            mov RDI,R12
            mov RSI,RBX
            call .L_436f80

            test RAX,RAX
            js .L_43723a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437208:

            je .L_437240

            add RBX,RAX
            cmp QWORD PTR [RSP+8],0
            jne .L_43721a

            cmp BYTE PTR [RBX],0
            je .L_437240
.L_43721a:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            call .L_437090

            test EAX,EAX
            jne .L_437270

            mov RSI,RBX
            mov RDI,R12
            call .L_436f80

            test RAX,RAX
            jns .L_437208
.L_43723a:

            mov R13D,4294967271
.L_437240:

            mov RDI,R12
            call .L_42e240

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_43727d

            add RSP,32
.L_43725f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437270:

            mov R13D,EAX
            jmp .L_437240
.L_437275:

            mov R13D,4294967266
            jmp .L_437240
.L_43727d:

            call __stack_chk_fail@PLT
.L_437282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437290:

            mov ESI,24
            mov EDI,1
            jmp calloc@PLT
.L_43729f:

            nop
.L_4372a0:

            test RDI,RDI
            je .L_437300

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_4372ae:

            mov RDI,QWORD PTR [RDI]
            call free@PLT

            mov RAX,QWORD PTR [RBP+8]
            test RAX,RAX
            je .L_4372ee

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_4372e6

            mov EBX,8
            nop
            nop
            nop
            nop
.L_4372d0:

            call free@PLT

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RAX+RBX*1]
            add RBX,8
            test RDI,RDI
            jne .L_4372d0
.L_4372e6:

            mov RDI,RAX
            call free@PLT
.L_4372ee:

            mov RDI,RBP
            call free@PLT

            add RSP,8
.L_4372fa:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_437300:

            xor EAX,EAX
            ret 
.L_437303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437310:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call EVP_CIPHER_CTX_free@PLT

            mov EDX,DWORD PTR [RBX+48]
            lea RDI,QWORD PTR [RBX+16]
            xor ESI,ESI
            call memset@PLT

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RBX+52],XMM0
            pop RBX
            ret 
.L_437336:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437340:

            push RBX
            lea RCX,QWORD PTR [RDI+16]
            mov RBX,RDI
            xor R8D,R8D
            xor EDX,EDX
            sub RSP,16
.L_437351:

            mov RSI,QWORD PTR [RDI+8]
            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            call EVP_EncryptInit_ex@PLT

            test EAX,EAX
            je .L_4373c0

            mov RDI,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RBX+52]
            lea RDX,QWORD PTR [RSP+4]
            lea RSI,QWORD PTR [RBX+68]
            mov R8D,16
            call EVP_EncryptUpdate@PLT

            test EAX,EAX
            je .L_4373c0

            xor EAX,EAX
            cmp DWORD PTR [RSP+4],16
            setne AL
            neg EAX
.L_4373a4:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4373c7

            add RSP,16
.L_4373b8:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4373c0:

            mov EAX,4294967295
            jmp .L_4373a4
.L_4373c7:

            call __stack_chk_fail@PLT
.L_4373cc:

            nop
            nop
            nop
            nop
.L_4373d0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov EBX,EDX
            sub RSP,40
.L_4373e3:

            mov RCX,QWORD PTR [R8]
            mov EAX,DWORD PTR [RDI+84]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+24],R8
            cmp RCX,RDX
            cmovbe EBX,ECX
            test EBX,EBX
            mov DWORD PTR [RSP+20],EBX
            je .L_43752d

            lea RCX,QWORD PTR [RDI+52]
            mov R12,RSI
            lea R14,QWORD PTR [RDI+68]
            xor R15D,R15D
            mov QWORD PTR [RSP+8],RCX
            jmp .L_437446
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437420:

            mov EDI,EAX
            add EAX,1
            add RDI,R14
.L_437428:

            mov R9D,R15D
            add R15D,1
            movzx EDX,BYTE PTR [R12+R9*1]
            xor DL,BYTE PTR [RDI]
            cmp DWORD PTR [RSP+20],R15D
            mov BYTE PTR [R13+R9*1],DL
            jbe .L_43750d
.L_437446:

            cmp EAX,16
            jne .L_437420

            mov RAX,QWORD PTR [RSP]
            lea RBP,QWORD PTR [RAX+60]
            mov RAX,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437460:

            movzx ESI,BYTE PTR [RAX]
            lea EDX,DWORD PTR [RSI+1]
            test DL,DL
            mov BYTE PTR [RAX],DL
            jne .L_437475

            add RAX,1
            cmp RAX,RBP
            jne .L_437460
.L_437475:

            mov RDI,QWORD PTR [RSP]
            call .L_437340

            test EAX,EAX
            jne .L_4374e3

            mov EBX,DWORD PTR [RSP+20]
            sub EBX,R15D
            and EBX,4294967280
            add EBX,R15D
            nop
.L_437490:

            cmp R15D,EBX
            je .L_4374f7

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4374a0:

            lea EDI,DWORD PTR [R15+RAX*1]
            movzx EDX,BYTE PTR [R12+RDI*1]
            xor DL,BYTE PTR [R14+RAX*1]
            add RAX,1
            cmp RAX,16
            mov BYTE PTR [R13+RDI*1],DL
            jne .L_4374a0

            mov RDX,QWORD PTR [RSP+8]
            add R15D,16
            nop
            nop
            nop
.L_4374c8:

            add BYTE PTR [RDX],1
            jne .L_4374d6

            add RDX,1
            cmp RDX,RBP
            jne .L_4374c8
.L_4374d6:

            mov RDI,QWORD PTR [RSP]
            call .L_437340

            test EAX,EAX
            je .L_437490
.L_4374e3:

            add RSP,40
.L_4374e7:

            mov EAX,4294967295
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4374f7:

            cmp R15D,DWORD PTR [RSP+20]
            jae .L_43750b

            mov RDI,R14
            mov EAX,1
            jmp .L_437428
.L_43750b:

            xor EAX,EAX
.L_43750d:

            mov RCX,QWORD PTR [RSP]
            mov DWORD PTR [RCX+84],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],R15
            add RSP,40
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43752d:

            xor R15D,R15D
            jmp .L_43750d
.L_437532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437540:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            call EVP_CIPHER_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4375e3

            cmp RBP,24
            je .L_4375d8

            cmp RBP,32
            je .L_437588

            cmp RBP,16
            je .L_4375c8

            mov QWORD PTR [RBX+8],0
            mov EAX,4294967295
.L_43757d:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437588:

            call EVP_aes_256_ecb@PLT

            mov QWORD PTR [RBX+8],RAX
.L_437591:

            lea RDI,QWORD PTR [RBX+16]
            mov DWORD PTR [RBX+48],EBP
            mov RDX,RBP
            mov RSI,R12
            call memcpy@PLT

            pxor XMM0,XMM0
            mov RDI,QWORD PTR [RBX]
            mov DWORD PTR [RBX+84],16
            movups XMMWORD PTR [RBX+52],XMM0
            call EVP_CIPHER_CTX_reset@PLT

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4375c8:

            call EVP_aes_128_ecb@PLT

            mov QWORD PTR [RBX+8],RAX
            jmp .L_437591
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4375d8:

            call EVP_aes_192_ecb@PLT

            mov QWORD PTR [RBX+8],RAX
            jmp .L_437591
.L_4375e3:

            mov EAX,4294967295
            jmp .L_43757d
.L_4375ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4375f0:

            sub RSP,16
            push R9
            mov R9D,DWORD PTR [RSP+32]
            call PKCS5_PBKDF2_HMAC_SHA1@PLT

            xor EAX,EAX
            add RSP,24
            ret 
.L_437607:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437610:

            xor EAX,EAX
            ret 
.L_437613:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437620:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            je .L_437650

            push RBX
            xor EDX,EDX
            mov RBX,RDI
            mov RDI,RAX
            call EVP_DigestFinal@PLT

            mov RDI,QWORD PTR [RBX]
            call EVP_MD_CTX_free@PLT

            mov QWORD PTR [RBX],0
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437650:

            xor EAX,EAX
            ret 
.L_437653:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437660:

            jmp .L_437620
.L_437662:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437670:

            jmp .L_437620
.L_437672:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437680:

            jmp .L_437620
.L_437682:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437690:

            jmp .L_437620
.L_437692:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4376a0:

            jmp .L_437620
.L_4376a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4376b0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_4376c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4376d0:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4376f8

            call EVP_sha512@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4376f8:

            mov EAX,4294967271
            pop RBX
            ret 
.L_4376ff:

            nop
.L_437700:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_437728

            call EVP_sha384@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437728:

            mov EAX,4294967271
            pop RBX
            ret 
.L_43772f:

            nop
.L_437730:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_437758

            call EVP_sha256@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437758:

            mov EAX,4294967271
            pop RBX
            ret 
.L_43775f:

            nop
.L_437760:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_437788

            call EVP_sha1@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437788:

            mov EAX,4294967271
            pop RBX
            ret 
.L_43778f:

            nop
.L_437790:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4377b8

            call EVP_ripemd160@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4377b8:

            mov EAX,4294967271
            pop RBX
            ret 
.L_4377bf:

            nop
.L_4377c0:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4377e8

            call EVP_md5@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4377e8:

            mov EAX,4294967271
            pop RBX
            ret 
.L_4377ef:

            nop
.L_4377f0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_437803:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437810:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_437823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437830:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_437843:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437850:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_437863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437870:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_437883:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437890:

            mov EDX,DWORD PTR [RDI]
            mov EAX,1
            test DH,3
            je .L_4378b8

            test DH,4
            je .L_4378a6

            or EDX,1
            mov DWORD PTR [RDI],EDX
.L_4378a6:

            mov EAX,EDX
            or EAX,2
            test DH,8
            cmovne EDX,EAX
            xor EAX,EAX
            or EDX,8
            mov DWORD PTR [RDI],EDX
.L_4378b8:

            ret 
.L_4378ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4378c0:

            test RDI,RDI
            push RBX

            mov RBX,RDI
            je .L_437996

            lea RDI,QWORD PTR [RDI+200]
            call .L_431b10

            lea RDI,QWORD PTR [RBX+320]
            call .L_431b10

            lea RDI,QWORD PTR [RBX+424]
            call .L_431b10

            lea RDI,QWORD PTR [RBX+528]
            call .L_431b10

            lea RDI,QWORD PTR [RBX+840]
            call .L_431b10

            lea RDI,QWORD PTR [RBX+632]
            call .L_431b10

            lea RDI,QWORD PTR [RBX+736]
            call .L_431b10

            mov RDI,QWORD PTR [RBX+952]
            call free@PLT

            lea RDI,QWORD PTR [RBX+968]
            mov QWORD PTR [RBX+952],0
            mov QWORD PTR [RBX+960],0
            call .L_434800

            mov RDI,RBX
            call .L_43a590

            mov RDI,RBX
            call .L_43a380

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RCX,RBX
            xor EAX,EAX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+1072],0
            and RDI,-8
            sub RCX,RDI
            add ECX,1080
            shr ECX,3

            rep stosq QWORD PTR [RDI]
.L_437996:

            mov RAX,RBX
            pop RBX

            ret 
.L_43799b:

            nop
            nop
            nop
            nop
            nop
.L_4379a0:

            push RBX
            mov RBX,RDI
            call .L_4378c0

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_4379b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4379c0:

            sub RSP,8
            mov ESI,1080
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_4379df

            mov QWORD PTR [RAX],0
.L_4379df:

            add RSP,8
            ret 
.L_4379e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4379f0:

            push RBX
            mov ESI,1080
            mov RBX,RDI
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_437a0b

            mov QWORD PTR [RAX],RBX
.L_437a0b:

            pop RBX
            ret 
.L_437a0d:

            nop
            nop
            nop
.L_437a10:

            mov RAX,QWORD PTR [RDI+24]
            ret 
.L_437a15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a20:

            mov EAX,DWORD PTR [RDI+32]
            ret 
.L_437a24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a30:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,4
            ret 
.L_437a3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_437a40:

            mov RAX,QWORD PTR [RDI+72]
            ret 
.L_437a45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a50:

            mov EAX,DWORD PTR [RDI+80]
            ret 
.L_437a54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a60:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,32
            ret 
.L_437a6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_437a70:

            mov RAX,QWORD PTR [RDI+40]
            ret 
.L_437a75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a80:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,8
            ret 
.L_437a8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_437a90:

            mov EAX,DWORD PTR [RDI+48]
            ret 
.L_437a94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437aa0:

            mov EAX,DWORD PTR [RDI+128]
            test EAX,EAX
            jne .L_437ab8

            mov RAX,QWORD PTR [RDI+136]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437ab8:

            mov RCX,QWORD PTR [RDI+144]
            mov RDX,QWORD PTR [RDI+152]
            movabs RSI,-17592186044416
            mov RAX,RCX
            shl RCX,32
            shl RAX,8
            and RCX,RSI
            movabs RSI,17592184995840
            and EAX,1048320
            or RAX,RCX
            mov RCX,RDX
            shl RCX,12
            and RCX,RSI
            or RCX,RAX
            movzx EAX,DL
            or RAX,RCX
            ret 
.L_437b04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437b10:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,256
            ret 
.L_437b1c:

            nop
            nop
            nop
            nop
.L_437b20:

            mov EAX,DWORD PTR [RDI+128]
            test EAX,EAX
            jne .L_437b50

            mov RDX,QWORD PTR [RDI+136]
            mov RAX,RDX
            shr RAX,8
            mov ECX,EAX
            mov RAX,RDX
            shr RAX,32
            and ECX,4095
            and EAX,4294963200
            or EAX,ECX
            ret 
          .byte 0x90
.L_437b50:

            mov RAX,QWORD PTR [RDI+144]
            ret 
.L_437b58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437b60:

            mov EAX,DWORD PTR [RDI+128]
            test EAX,EAX
            jne .L_437b80

            mov RDX,QWORD PTR [RDI+136]
            mov RAX,RDX
            movzx ECX,DL
            shr RAX,12
            xor AL,AL
            or EAX,ECX
            ret 
.L_437b80:

            mov RAX,QWORD PTR [RDI+152]
            ret 
.L_437b88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437b90:

            mov EAX,DWORD PTR [RDI+968]
            and EAX,61440
            ret 
.L_437b9c:

            nop
            nop
            nop
            nop
.L_437ba0:

            mov RAX,QWORD PTR [RDI+304]
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RDI+312]
            mov QWORD PTR [RDX],RAX
            ret 
.L_437bb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437bc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_437bd1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+200]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RSP+32]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+24],RDX
            call .L_431cb0

            test EAX,EAX
            jne .L_437c38

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            je .L_437c46
.L_437c10:

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            jne .L_437dba

            add RSP,56
.L_437c28:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437c38:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437dbf
.L_437c46:

            mov R14,QWORD PTR [RBP+304]
            mov R13,QWORD PTR [RBP+312]
            test R14,R14
            jne .L_437c62

            test R13,R13
            je .L_437d94
.L_437c62:

            mov RBX,QWORD PTR [RIP+.L_65bc80]
            mov RCX,R14
            or RCX,R13
            test RBX,RBX
            je .L_437d94

            lea RDX,QWORD PTR [RIP+.L_65bc80]
            mov RDI,RBX
            xor R12D,R12D
            nop
            nop
            nop
.L_437c88:

            mov R15,QWORD PTR [RDX+16]
            or R15,QWORD PTR [RDX+24]
            test R15,RCX
            je .L_437cb7

            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            not R15
            call strlen@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            lea R12,QWORD PTR [R12+RAX*1+1]
            and RCX,R15
.L_437cb7:

            add RDX,32
            mov RDI,QWORD PTR [RDX]
            test RDI,RDI
            jne .L_437c88

            test R12,R12
            je .L_437d94

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_437d94

            lea RDI,QWORD PTR [RIP+.L_65bc80]
            mov RCX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_437cf0:

            mov RAX,QWORD PTR [RDI+16]
            mov RDX,QWORD PTR [RDI+24]
            test RAX,R14
            jne .L_437da0

            test RDX,R13
            jne .L_437da0

            test RDX,R14
            jne .L_437d18

            test RAX,R13
            je .L_437d4e

            nop
            nop
            nop
            nop
.L_437d18:

            or RAX,RDX
            not RAX
            and R14,RAX
            and R13,RAX
            cmp R15,RCX
            jae .L_437d3b

            mov BYTE PTR [RCX],44
            add RCX,1
            jmp .L_437d3b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437d38:

            mov RCX,RDX
.L_437d3b:

            add RBX,1
            movzx EAX,BYTE PTR [RBX-1]
            lea RDX,QWORD PTR [RCX+1]
            test AL,AL
            mov BYTE PTR [RDX-1],AL
            jne .L_437d38
.L_437d4e:

            add RDI,32
            mov RBX,QWORD PTR [RDI]
            test RBX,RBX
            jne .L_437cf0

            mov RBX,QWORD PTR [RSP+16]
            mov BYTE PTR [RCX],0
            mov RSI,R15
            mov RDI,RBX
            call .L_431ea0

            mov RDI,R15
            call free@PLT

            mov RDX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            mov RSI,RBX
            call .L_431cb0

            test EAX,EAX
            je .L_437db0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437dbf
.L_437d94:

            xor EAX,EAX
            jmp .L_437c10
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437da0:

            add RBX,2
            jmp .L_437d18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437db0:

            mov RAX,QWORD PTR [RSP+32]
            jmp .L_437c10
.L_437dba:

            call __stack_chk_fail@PLT
.L_437dbf:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_437dd0:

            mov RAX,QWORD PTR [RDI+88]
            ret 
.L_437dd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437de0:

            sub RSP,24
.L_437de4:

            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431cb0

            test EAX,EAX
            je .L_437e30

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437e3b

            xor EAX,EAX
.L_437e16:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_437e36

            add RSP,24
.L_437e2a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437e30:

            mov RAX,QWORD PTR [RSP]
            jmp .L_437e16
.L_437e36:

            call __stack_chk_fail@PLT
.L_437e3b:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_437e4c:

            nop
            nop
            nop
            nop
.L_437e50:

            sub RSP,24
.L_437e54:

            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431bf0

            test EAX,EAX
            je .L_437ea0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437eab

            xor EAX,EAX
.L_437e86:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_437ea6

            add RSP,24
.L_437e9a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437ea0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_437e86
.L_437ea6:

            call __stack_chk_fail@PLT
.L_437eab:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_437ebc:

            nop
            nop
            nop
            nop
.L_437ec0:

            sub RSP,24
.L_437ec4:

            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431d20

            test EAX,EAX
            je .L_437f10

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437f1b

            xor EAX,EAX
.L_437ef6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_437f16

            add RSP,24
.L_437f0a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437f10:

            mov RAX,QWORD PTR [RSP]
            jmp .L_437ef6
.L_437f16:

            call __stack_chk_fail@PLT
.L_437f1b:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_437f2c:

            nop
            nop
            nop
            nop
.L_437f30:

            add RDI,320
            jmp .L_431d90
.L_437f3c:

            nop
            nop
            nop
            nop
.L_437f40:

            sub RSP,24
.L_437f44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],1
            je .L_437f7d

            lea RSI,QWORD PTR [RDI+424]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_431cb0

            test EAX,EAX
            je .L_437f98

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437f9e
.L_437f7d:

            xor EAX,EAX
.L_437f7f:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_437faf

            add RSP,24
.L_437f93:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437f98:

            mov RAX,QWORD PTR [RSP]
            jmp .L_437f7f
.L_437f9e:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_437faf:

            call __stack_chk_fail@PLT
.L_437fb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437fc0:

            sub RSP,24
.L_437fc4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],1
            je .L_437ffd

            lea RSI,QWORD PTR [RDI+424]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_431bf0

            test EAX,EAX
            je .L_438018

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43801e
.L_437ffd:

            xor EAX,EAX
.L_437fff:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43802f

            add RSP,24
.L_438013:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438018:

            mov RAX,QWORD PTR [RSP]
            jmp .L_437fff
.L_43801e:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43802f:

            call __stack_chk_fail@PLT
.L_438034:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438040:

            sub RSP,24
.L_438044:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],1
            je .L_43807d

            lea RSI,QWORD PTR [RDI+424]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_431d20

            test EAX,EAX
            je .L_438098

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43809e
.L_43807d:

            xor EAX,EAX
.L_43807f:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4380af

            add RSP,24
.L_438093:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438098:

            mov RAX,QWORD PTR [RSP]
            jmp .L_43807f
.L_43809e:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_4380af:

            call __stack_chk_fail@PLT
.L_4380b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4380c0:

            test BYTE PTR [RDI+192],1
            jne .L_4380e0

            mov QWORD PTR [RSI],0
            xor EAX,EAX
            mov QWORD PTR [RDX],0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4380e0:

            add RDI,424
            jmp .L_431d90
.L_4380ec:

            nop
            nop
            nop
            nop
.L_4380f0:

            mov RAX,QWORD PTR [RDI+96]
            ret 
.L_4380f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438100:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,128
            ret 
.L_43810c:

            nop
            nop
            nop
            nop
.L_438110:

            mov RAX,QWORD PTR [RDI+96]
            ret 
.L_438115:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438120:

            mov EAX,DWORD PTR [RDI+968]
            ret 
.L_438127:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438130:

            mov RAX,QWORD PTR [RDI+56]
            ret 
.L_438135:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438140:

            mov EAX,DWORD PTR [RDI+64]
            ret 
.L_438144:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438150:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,16
            ret 
.L_43815a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438160:

            mov EAX,DWORD PTR [RDI+104]
            ret 
.L_438164:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438170:

            sub RSP,24
.L_438174:

            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431cb0

            test EAX,EAX
            je .L_4381c0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4381cb

            xor EAX,EAX
.L_4381a6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4381c6

            add RSP,24
.L_4381ba:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4381c0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4381a6
.L_4381c6:

            call __stack_chk_fail@PLT
.L_4381cb:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_4381dc:

            nop
            nop
            nop
            nop
.L_4381e0:

            sub RSP,24
.L_4381e4:

            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431bf0

            test EAX,EAX
            je .L_438230

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43823b

            xor EAX,EAX
.L_438216:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_438236

            add RSP,24
.L_43822a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438230:

            mov RAX,QWORD PTR [RSP]
            jmp .L_438216
.L_438236:

            call __stack_chk_fail@PLT
.L_43823b:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43824c:

            nop
            nop
            nop
            nop
.L_438250:

            sub RSP,24
.L_438254:

            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431d20

            test EAX,EAX
            je .L_4382a0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4382ab

            xor EAX,EAX
.L_438286:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4382a6

            add RSP,24
.L_43829a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4382a0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_438286
.L_4382a6:

            call __stack_chk_fail@PLT
.L_4382ab:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_4382bc:

            nop
            nop
            nop
            nop
.L_4382c0:

            add RDI,528
            jmp .L_431d90
.L_4382cc:

            nop
            nop
            nop
            nop
.L_4382d0:

            mov EAX,DWORD PTR [RDI+968]
            and AH,15
            ret 
.L_4382da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4382e0:

            mov EAX,DWORD PTR [RDI+160]
            test EAX,EAX
            jne .L_4382f8

            mov RAX,QWORD PTR [RDI+168]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4382f8:

            mov RCX,QWORD PTR [RDI+176]
            mov RDX,QWORD PTR [RDI+184]
            movabs RSI,-17592186044416
            mov RAX,RCX
            shl RCX,32
            shl RAX,8
            and RCX,RSI
            movabs RSI,17592184995840
            and EAX,1048320
            or RAX,RCX
            mov RCX,RDX
            shl RCX,12
            and RCX,RSI
            or RCX,RAX
            movzx EAX,DL
            or RAX,RCX
            ret 
.L_438344:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438350:

            mov EAX,DWORD PTR [RDI+160]
            test EAX,EAX
            jne .L_438380

            mov RDX,QWORD PTR [RDI+168]
            mov RAX,RDX
            shr RAX,8
            mov ECX,EAX
            mov RAX,RDX
            shr RAX,32
            and ECX,4095
            and EAX,4294963200
            or EAX,ECX
            ret 
          .byte 0x90
.L_438380:

            mov RAX,QWORD PTR [RDI+176]
            ret 
.L_438388:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438390:

            mov EAX,DWORD PTR [RDI+160]
            test EAX,EAX
            jne .L_4383b0

            mov RDX,QWORD PTR [RDI+168]
            mov RAX,RDX
            movzx ECX,DL
            shr RAX,12
            xor AL,AL
            or EAX,ECX
            ret 
.L_4383b0:

            mov RAX,QWORD PTR [RDI+184]
            ret 
.L_4383b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383c0:

            mov RAX,QWORD PTR [RDI+112]
            ret 
.L_4383c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383d0:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,64
            ret 
.L_4383da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4383e0:

            sub RSP,24
.L_4383e4:

            lea RSI,QWORD PTR [RDI+840]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431cb0

            test EAX,EAX
            je .L_438430

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43843b

            xor EAX,EAX
.L_438416:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_438436

            add RSP,24
.L_43842a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438430:

            mov RAX,QWORD PTR [RSP]
            jmp .L_438416
.L_438436:

            call __stack_chk_fail@PLT
.L_43843b:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43844c:

            nop
            nop
            nop
            nop
.L_438450:

            sub RSP,24
            lea RSI,QWORD PTR [RDI+840]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431d20

            test EAX,EAX
            jne .L_438498

            mov RAX,QWORD PTR [RSP]
.L_43847e:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43849c

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438498:

            xor EAX,EAX
            jmp .L_43847e
.L_43849c:

            call __stack_chk_fail@PLT
.L_4384a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4384b0:

            sub RSP,24
.L_4384b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],2
            je .L_4384ed

            lea RSI,QWORD PTR [RDI+632]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_431cb0

            test EAX,EAX
            je .L_438508

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43850e
.L_4384ed:

            xor EAX,EAX
.L_4384ef:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43851f

            add RSP,24
.L_438503:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438508:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4384ef
.L_43850e:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43851f:

            call __stack_chk_fail@PLT
.L_438524:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438530:

            sub RSP,24
.L_438534:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],2
            je .L_43856d

            lea RSI,QWORD PTR [RDI+632]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_431bf0

            test EAX,EAX
            je .L_438588

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43858e
.L_43856d:

            xor EAX,EAX
.L_43856f:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43859f

            add RSP,24
.L_438583:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438588:

            mov RAX,QWORD PTR [RSP]
            jmp .L_43856f
.L_43858e:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43859f:

            call __stack_chk_fail@PLT
.L_4385a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4385b0:

            sub RSP,24
.L_4385b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],2
            je .L_4385ed

            lea RSI,QWORD PTR [RDI+632]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_431d20

            test EAX,EAX
            je .L_438608

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43860e
.L_4385ed:

            xor EAX,EAX
.L_4385ef:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43861f

            add RSP,24
.L_438603:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438608:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4385ef
.L_43860e:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43861f:

            call __stack_chk_fail@PLT
.L_438624:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438630:

            test BYTE PTR [RDI+192],2
            jne .L_438650

            mov QWORD PTR [RSI],0
            xor EAX,EAX
            mov QWORD PTR [RDX],0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438650:

            add RDI,632
            jmp .L_431d90
.L_43865c:

            nop
            nop
            nop
            nop
.L_438660:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_438665:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438670:

            sub RSP,24
.L_438674:

            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431cb0

            test EAX,EAX
            je .L_4386c0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4386cb

            xor EAX,EAX
.L_4386a6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4386c6

            add RSP,24
.L_4386ba:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4386c0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4386a6
.L_4386c6:

            call __stack_chk_fail@PLT
.L_4386cb:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_4386dc:

            nop
            nop
            nop
            nop
.L_4386e0:

            sub RSP,24
.L_4386e4:

            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431bf0

            test EAX,EAX
            je .L_438730

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43873b

            xor EAX,EAX
.L_438716:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_438736

            add RSP,24
.L_43872a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438730:

            mov RAX,QWORD PTR [RSP]
            jmp .L_438716
.L_438736:

            call __stack_chk_fail@PLT
.L_43873b:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43874c:

            nop
            nop
            nop
            nop
.L_438750:

            sub RSP,24
.L_438754:

            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_431d20

            test EAX,EAX
            je .L_4387a0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4387ab

            xor EAX,EAX
.L_438786:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4387a6

            add RSP,24
.L_43879a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4387a0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_438786
.L_4387a6:

            call __stack_chk_fail@PLT
.L_4387ab:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_4387bc:

            nop
            nop
            nop
            nop
.L_4387c0:

            add RDI,736
            jmp .L_431d90
.L_4387cc:

            nop
            nop
            nop
            nop
.L_4387d0:

            movzx EAX,BYTE PTR [RDI+944]
            and EAX,1
            ret 
.L_4387db:

            nop
            nop
            nop
            nop
            nop
.L_4387e0:

            movzx EAX,BYTE PTR [RDI+944]
            shr AL,1
            and EAX,1
            ret 
.L_4387ed:

            nop
            nop
            nop
.L_4387f0:

            movzx EAX,BYTE PTR [RDI+944]
            and EAX,3
            ret 
.L_4387fb:

            nop
            nop
            nop
            nop
            nop
.L_438800:

            mov EAX,DWORD PTR [RDI+968]
            and ESI,61440
            mov DWORD PTR [RDI+16],0
            and AH,15
            or ESI,EAX
            mov DWORD PTR [RDI+968],ESI
            ret 
.L_43881f:

            nop
.L_438820:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            lea RDI,QWORD PTR [RDI+200]
            mov RBP,RDX
            call .L_431b10

            mov QWORD PTR [RBX+304],R12
            mov QWORD PTR [RBX+312],RBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_43884c:

            nop
            nop
            nop
            nop
.L_438850:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_438864:

            mov QWORD PTR [RSP+40],RDI
            add RDI,200
            call .L_431ea0

            movzx R15D,BYTE PTR [R12]
            mov RAX,RBX
            lea RCX,QWORD PTR [RBX+312]
            add RAX,304
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RAX
            cmp R15B,44
            ja .L_4388bd

            movabs RAX,17596481012224
            nop
            nop
            nop
            nop
.L_4388a8:

            bt RAX,R15
            jae .L_4388bd

            add R12,1
            movzx R15D,BYTE PTR [R12]
            cmp R15B,44
            jbe .L_4388a8
.L_4388bd:

            mov RAX,QWORD PTR [RIP+.L_65bc80]
            test R15B,R15B
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            je .L_4389da

            nop
            nop
            nop
.L_4388f0:

            cmp R15B,44
            mov R14,R12
            ja .L_438910

            movabs RAX,17596481012224
            xor EBP,EBP
            bt RAX,R15
            jb .L_438934

            nop
            nop
            nop
            nop
            nop
.L_438910:

            add R14,1
            movzx R15D,BYTE PTR [R14]
            cmp R15B,44
            ja .L_438910

            movabs RAX,17596481012225
            bt RAX,R15
            jae .L_438910

            mov RBP,R14
            sub RBP,R12
.L_438934:

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            je .L_438a5c

            mov QWORD PTR [RSP],R14
            lea RBX,QWORD PTR [RIP+.L_65bc80]
            mov R14,RAX
            mov R13,RBP
            jmp .L_438975
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438958:

            sub RBP,2
            cmp RBP,R13
            je .L_438a20
.L_438965:

            add RBX,32
            mov R14,QWORD PTR [RBX]
            test R14,R14
            je .L_438a58
.L_438975:

            mov RDI,R14
            call strlen@PLT

            cmp RAX,R13
            mov RBP,RAX
            jne .L_438958

            mov RDX,R13
            mov RSI,R14
            mov RDI,R12
            call memcmp@PLT

            test EAX,EAX
            jne .L_438958

            mov RCX,QWORD PTR [RBX+16]
            or QWORD PTR [RSP+24],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+32],RCX
            mov R14,QWORD PTR [RSP]
            nop
            nop
            nop
.L_4389b0:

            movabs RAX,17596481012224
            bt RAX,R15
            jae .L_4389ce

            add R14,1
            movzx R15D,BYTE PTR [R14]
            cmp R15B,44
            jbe .L_4389b0
.L_4389ce:

            test R15B,R15B
            mov R12,R14
            jne .L_4388f0
.L_4389da:

            cmp QWORD PTR [RSP+56],0
            je .L_4389f3

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+304],RCX
.L_4389f3:

            cmp QWORD PTR [RSP+48],0
            je .L_438a0c

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+312],RCX
.L_438a0c:

            mov RAX,QWORD PTR [RSP+8]
            add RSP,72
.L_438a15:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_438a20:

            lea RSI,QWORD PTR [R14+2]
            mov RDX,R13
            mov RDI,R12
            call memcmp@PLT

            test EAX,EAX
            jne .L_438965

            mov RCX,QWORD PTR [RBX+16]
            mov R14,QWORD PTR [RSP]
            or QWORD PTR [RSP+32],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+24],RCX
            jmp .L_4389b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438a58:

            mov R14,QWORD PTR [RSP]
.L_438a5c:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            cmovne R12,RAX
            mov QWORD PTR [RSP+8],R12
            jmp .L_4389b0
.L_438a72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438a80:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_438a94:

            mov QWORD PTR [RSP+40],RDI
            add RDI,200
            call .L_431f50

            mov R15D,DWORD PTR [R12]
            mov RAX,RBX
            lea RCX,QWORD PTR [RBX+312]
            add RAX,304
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RAX
            cmp R15D,44
            ja .L_438aec

            movabs RAX,17596481012224
            nop
            nop
            nop
            nop
            nop
.L_438ad8:

            bt RAX,R15
            jae .L_438aec

            add R12,4
            mov R15D,DWORD PTR [R12]
            cmp R15D,44
            jbe .L_438ad8
.L_438aec:

            mov RAX,QWORD PTR [RIP+.L_65bc88]
            test R15D,R15D
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            je .L_438c19

            nop
            nop
            nop
            nop
.L_438b20:

            cmp R15D,44
            mov R14,R12
            ja .L_438b40

            movabs RAX,17596481012224
            xor EBP,EBP
            bt RAX,R15
            jb .L_438b67

            nop
            nop
            nop
            nop
            nop
.L_438b40:

            add R14,4
            mov R15D,DWORD PTR [R14]
            cmp R15D,44
            ja .L_438b40

            movabs RAX,17596481012225
            bt RAX,R15
            jae .L_438b40

            mov RBP,R14
            sub RBP,R12
            sar RBP,2
.L_438b67:

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            je .L_438c9c

            mov QWORD PTR [RSP],R14
            lea RBX,QWORD PTR [RIP+.L_65bc80]
            mov R14,RAX
            mov R13,RBP
            jmp .L_438bae
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438b90:

            sub RBP,2
            cmp R13,RBP
            je .L_438c60
.L_438b9d:

            add RBX,32
            mov R14,QWORD PTR [RBX+8]
            test R14,R14
            je .L_438c98
.L_438bae:

            mov RDI,R14
            call wcslen@PLT

            cmp R13,RAX
            mov RBP,RAX
            jne .L_438b90

            mov RDX,R13
            mov RSI,R14
            mov RDI,R12
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_438b90

            mov RCX,QWORD PTR [RBX+16]
            or QWORD PTR [RSP+24],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+32],RCX
            mov R14,QWORD PTR [RSP]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438bf0:

            movabs RAX,17596481012224
            bt RAX,R15
            jae .L_438c0d

            add R14,4
            mov R15D,DWORD PTR [R14]
            cmp R15D,44
            jbe .L_438bf0
.L_438c0d:

            test R15D,R15D
            mov R12,R14
            jne .L_438b20
.L_438c19:

            cmp QWORD PTR [RSP+56],0
            je .L_438c32

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+304],RCX
.L_438c32:

            cmp QWORD PTR [RSP+48],0
            je .L_438c4b

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+312],RCX
.L_438c4b:

            mov RAX,QWORD PTR [RSP+8]
            add RSP,72
.L_438c54:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_438c60:

            lea RSI,QWORD PTR [R14+8]
            mov RDX,R13
            mov RDI,R12
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_438b9d

            mov RCX,QWORD PTR [RBX+16]
            mov R14,QWORD PTR [RSP]
            or QWORD PTR [RSP+32],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+24],RCX
            jmp .L_438bf0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438c98:

            mov R14,QWORD PTR [RSP]
.L_438c9c:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            cmovne R12,RAX
            mov QWORD PTR [RSP+8],R12
            jmp .L_438bf0
.L_438cb2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438cc0:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+88],RSI
            ret 
.L_438ccc:

            nop
            nop
            nop
            nop
.L_438cd0:

            add RDI,320
            jmp .L_431ea0
.L_438cdc:

            nop
            nop
            nop
            nop
.L_438ce0:

            add RDI,320
            jmp .L_431fb0
.L_438cec:

            nop
            nop
            nop
            nop
.L_438cf0:

            add RDI,320
            jmp .L_431ea0
.L_438cfc:

            nop
            nop
            nop
            nop
.L_438d00:

            add RDI,320
            jmp .L_431f50
.L_438d0c:

            nop
            nop
            nop
            nop
.L_438d10:

            sub RSP,8
            mov RDX,RSI
            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            call .L_4320a0

            test EAX,EAX
            je .L_438d40

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_438d4a

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438d40:

            mov EAX,1
            add RSP,8
            ret 
.L_438d4a:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_438d5b:

            nop
            nop
            nop
            nop
            nop
.L_438d60:

            add RDI,320
            jmp .L_432050
.L_438d6c:

            nop
            nop
            nop
            nop
.L_438d70:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],128
            mov QWORD PTR [RDI+96],RSI
            ret 
.L_438d86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438d90:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],128
            mov QWORD PTR [RDI+96],RSI
            ret 
.L_438da6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438db0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_431ea0

            test RBP,RBP
            je .L_438de0

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438de0:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_438dee:

            nop
            nop
.L_438df0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_431fb0

            test RBP,RBP
            je .L_438e20

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438e20:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_438e2e:

            nop
            nop
.L_438e30:

            jmp .L_438db0
.L_438e35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438e40:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_431f50

            test RBP,RBP
            je .L_438e70

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438e70:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_438e7e:

            nop
            nop
.L_438e80:

            sub RSP,8
.L_438e84:

            mov EAX,DWORD PTR [RDI+192]
            mov RDX,RSI
            mov ECX,EAX
            or EAX,1
            and ECX,4294967294
            test RSI,RSI
            lea RSI,QWORD PTR [RDI+424]
            cmove EAX,ECX
            mov DWORD PTR [RDI+192],EAX
            mov RDI,QWORD PTR [RDI]
            call .L_4320a0

            test EAX,EAX
            je .L_438ec8

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_438ed2

            xor EAX,EAX
            add RSP,8
.L_438ec4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438ec8:

            mov EAX,1
            add RSP,8
            ret 
.L_438ed2:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_438ee3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438ef0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_432050

            test RBP,RBP
            je .L_438f20

            test EAX,EAX
            jne .L_438f20

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_438f20:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_438f2e:

            nop
            nop
.L_438f30:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_438f6b

            sub RSI,1
            add RCX,1000000000
.L_438f6b:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],4
            mov QWORD PTR [RDI+24],RSI
            mov DWORD PTR [RDI+32],ECX
            ret 
.L_438f81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438f90:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+32],0
            and EAX,4294967291
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_438fb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438fc0:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_438ffb

            sub RSI,1
            add RCX,1000000000
.L_438ffb:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],32
            mov QWORD PTR [RDI+72],RSI
            mov DWORD PTR [RDI+80],ECX
            ret 
.L_439011:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439020:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+72],0
            mov DWORD PTR [RDI+80],0
            and EAX,4294967263
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_439046:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439050:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_43908b

            sub RSI,1
            add RCX,1000000000
.L_43908b:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],8
            mov QWORD PTR [RDI+40],RSI
            mov DWORD PTR [RDI+48],ECX
            ret 
.L_4390a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4390b0:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+40],0
            mov DWORD PTR [RDI+48],0
            and EAX,4294967287
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_4390d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4390e0:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],256
            mov DWORD PTR [RDI+128],0
            mov QWORD PTR [RDI+136],RSI
            ret 
.L_439103:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439110:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],256
            mov DWORD PTR [RDI+128],1
            mov QWORD PTR [RDI+144],RSI
            ret 
.L_439133:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439140:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],256
            mov DWORD PTR [RDI+128],1
            mov QWORD PTR [RDI+152],RSI
            ret 
.L_439163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439170:

            test BYTE PTR [RDI+192],2
            jne .L_439188

            add RDI,424
            jmp .L_431ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439188:

            add RDI,632
            jmp .L_431ea0
.L_439194:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4391a0:

            test BYTE PTR [RDI+192],2
            jne .L_4391b8

            add RDI,424
            jmp .L_431fb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4391b8:

            add RDI,632
            jmp .L_431fb0
.L_4391c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4391d0:

            jmp .L_439170
.L_4391d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4391e0:

            test BYTE PTR [RDI+192],2
            jne .L_4391f8

            add RDI,424
            jmp .L_431f50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4391f8:

            add RDI,632
            jmp .L_431f50
.L_439204:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439210:

            mov RAX,RDI
            sub RSP,8
            mov RDX,RSI
            test BYTE PTR [RAX+192],2
            mov RDI,QWORD PTR [RDI]
            je .L_439250

            lea RSI,QWORD PTR [RAX+632]
            call .L_4320a0

            test EAX,EAX
            je .L_439260
.L_439236:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43926a

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439250:

            lea RSI,QWORD PTR [RAX+424]
            call .L_4320a0

            test EAX,EAX
            jne .L_439236
.L_439260:

            mov EAX,1
            add RSP,8
            ret 
.L_43926a:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43927b:

            nop
            nop
            nop
            nop
            nop
.L_439280:

            test BYTE PTR [RDI+192],2
            jne .L_439298

            add RDI,424
            jmp .L_432050
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439298:

            add RDI,632
            jmp .L_432050
.L_4392a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4392b0:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+968],ESI
            ret 
.L_4392be:

            nop
            nop
.L_4392c0:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_4392fb

            sub RSI,1
            add RCX,1000000000
.L_4392fb:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],16
            mov QWORD PTR [RDI+56],RSI
            mov DWORD PTR [RDI+64],ECX
            ret 
.L_439311:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439320:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+56],0
            mov DWORD PTR [RDI+64],0
            and EAX,4294967279
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_439346:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439350:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+104],ESI
            ret 
.L_43935b:

            nop
            nop
            nop
            nop
            nop
.L_439360:

            add RDI,528
            jmp .L_431ea0
.L_43936c:

            nop
            nop
            nop
            nop
.L_439370:

            add RDI,528
            jmp .L_431fb0
.L_43937c:

            nop
            nop
            nop
            nop
.L_439380:

            add RDI,528
            jmp .L_431ea0
.L_43938c:

            nop
            nop
            nop
            nop
.L_439390:

            add RDI,528
            jmp .L_431f50
.L_43939c:

            nop
            nop
            nop
            nop
.L_4393a0:

            sub RSP,8
            mov RDX,RSI
            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            call .L_4320a0

            test EAX,EAX
            je .L_4393d0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4393da

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4393d0:

            mov EAX,1
            add RSP,8
            ret 
.L_4393da:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_4393eb:

            nop
            nop
            nop
            nop
            nop
.L_4393f0:

            add RDI,528
            jmp .L_432050
.L_4393fc:

            nop
            nop
            nop
            nop
.L_439400:

            mov EAX,DWORD PTR [RDI+968]
            and ESI,4294905855
            mov DWORD PTR [RDI+16],0
            and EAX,61440
            or ESI,EAX
            mov DWORD PTR [RDI+968],ESI
            ret 
.L_439421:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439430:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+168],RSI
            mov DWORD PTR [RDI+160],0
            ret 
.L_439449:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439450:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+160],1
            mov QWORD PTR [RDI+176],RSI
            ret 
.L_439469:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439470:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+160],1
            mov QWORD PTR [RDI+184],RSI
            ret 
.L_439489:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439490:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+112],RSI
            or DWORD PTR [RDI+192],64
            ret 
.L_4394a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4394b0:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+112],0
            and DWORD PTR [RDI+192],4294967231
            ret 
.L_4394c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4394d0:

            add RDI,840
            jmp .L_431ea0
.L_4394dc:

            nop
            nop
            nop
            nop
.L_4394e0:

            add RDI,840
            jmp .L_431f50
.L_4394ec:

            nop
            nop
            nop
            nop
.L_4394f0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_431ea0

            test RBP,RBP
            je .L_439520

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439520:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43952e:

            nop
            nop
.L_439530:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_431fb0

            test RBP,RBP
            je .L_439560

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439560:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43956e:

            nop
            nop
.L_439570:

            jmp .L_4394f0
.L_439575:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439580:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_431f50

            test RBP,RBP
            je .L_4395b0

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4395b0:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4395be:

            nop
            nop
.L_4395c0:

            sub RSP,8
.L_4395c4:

            mov EAX,DWORD PTR [RDI+192]
            mov RDX,RSI
            mov ECX,EAX
            or EAX,2
            and ECX,4294967293
            test RSI,RSI
            lea RSI,QWORD PTR [RDI+632]
            cmove EAX,ECX
            mov DWORD PTR [RDI+192],EAX
            mov RDI,QWORD PTR [RDI]
            call .L_4320a0

            test EAX,EAX
            je .L_439608

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_439612

            xor EAX,EAX
            add RSP,8
.L_439604:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439608:

            mov EAX,1
            add RSP,8
            ret 
.L_439612:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_439623:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439630:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_432050

            test RBP,RBP
            je .L_439660

            test EAX,EAX
            jne .L_439660

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_439660:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43966e:

            nop
            nop
.L_439670:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+120],RSI
            ret 
.L_43967c:

            nop
            nop
            nop
            nop
.L_439680:

            add RDI,736
            jmp .L_431ea0
.L_43968c:

            nop
            nop
            nop
            nop
.L_439690:

            add RDI,736
            jmp .L_431fb0
.L_43969c:

            nop
            nop
            nop
            nop
.L_4396a0:

            add RDI,736
            jmp .L_431ea0
.L_4396ac:

            nop
            nop
            nop
            nop
.L_4396b0:

            add RDI,736
            jmp .L_431f50
.L_4396bc:

            nop
            nop
            nop
            nop
.L_4396c0:

            sub RSP,8
            mov RDX,RSI
            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            call .L_4320a0

            test EAX,EAX
            je .L_4396f0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4396fa

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4396f0:

            mov EAX,1
            add RSP,8
            ret 
.L_4396fa:

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_43970b:

            nop
            nop
            nop
            nop
            nop
.L_439710:

            movzx EAX,BYTE PTR [RDI+944]
            mov EDX,EAX
            or EAX,1
            and EDX,4294967294
            test SIL,SIL
            cmove EAX,EDX
            mov BYTE PTR [RDI+944],AL
            ret 
.L_43972c:

            nop
            nop
            nop
            nop
.L_439730:

            movzx EAX,BYTE PTR [RDI+944]
            mov EDX,EAX
            or EAX,2
            and EDX,4294967293
            test SIL,SIL
            cmove EAX,EDX
            mov BYTE PTR [RDI+944],AL
            ret 
.L_43974c:

            nop
            nop
            nop
            nop
.L_439750:

            add RDI,736
            jmp .L_432050
.L_43975c:

            nop
            nop
            nop
            nop
.L_439760:

            mov RAX,QWORD PTR [RDI+960]
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RDI+952]
            ret 
.L_439772:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439780:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+952]
            mov RBP,RDX
            call free@PLT

            test R12,R12
            je .L_4397d0

            test RBP,RBP
            je .L_4397d0

            mov QWORD PTR [RBX+960],RBP
            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+952],RAX
            je .L_4397eb

            pop RBX
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RAX
            pop RBP
            pop R12
            jmp memcpy@PLT
.L_4397d0:

            mov QWORD PTR [RBX+952],0
            mov QWORD PTR [RBX+960],0
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4397eb:

            call abort@PLT
.L_4397f0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4397f7:

            mov ESI,1080
            mov RBP,QWORD PTR [RDI]
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4399f9

            movdqu XMM0,XMMWORD PTR [R12+24]
            lea RSI,QWORD PTR [R12+200]
            lea RDI,QWORD PTR [RBX+200]
            mov QWORD PTR [RAX],RBP
            movups XMMWORD PTR [RAX+24],XMM0
            movdqu XMM0,XMMWORD PTR [R12+40]
            movups XMMWORD PTR [RAX+40],XMM0
            movdqu XMM0,XMMWORD PTR [R12+56]
            movups XMMWORD PTR [RAX+56],XMM0
            movdqu XMM0,XMMWORD PTR [R12+72]
            movups XMMWORD PTR [RAX+72],XMM0
            movdqu XMM0,XMMWORD PTR [R12+88]
            movups XMMWORD PTR [RAX+88],XMM0
            movdqu XMM0,XMMWORD PTR [R12+104]
            movups XMMWORD PTR [RAX+104],XMM0
            movdqu XMM0,XMMWORD PTR [R12+120]
            movups XMMWORD PTR [RAX+120],XMM0
            movdqu XMM0,XMMWORD PTR [R12+136]
            movups XMMWORD PTR [RAX+136],XMM0
            movdqu XMM0,XMMWORD PTR [R12+152]
            movups XMMWORD PTR [RAX+152],XMM0
            movdqu XMM0,XMMWORD PTR [R12+168]
            movups XMMWORD PTR [RAX+168],XMM0
            mov RAX,QWORD PTR [R12+184]
            mov QWORD PTR [RBX+184],RAX
            mov RAX,QWORD PTR [R12+304]
            mov QWORD PTR [RBX+304],RAX
            mov RAX,QWORD PTR [R12+312]
            mov QWORD PTR [RBX+312],RAX
            call .L_431ba0

            lea RSI,QWORD PTR [R12+320]
            lea RDI,QWORD PTR [RBX+320]
            call .L_431ba0

            lea RSI,QWORD PTR [R12+424]
            lea RDI,QWORD PTR [RBX+424]
            call .L_431ba0

            lea RSI,QWORD PTR [R12+528]
            lea RDI,QWORD PTR [RBX+528]
            call .L_431ba0

            lea RSI,QWORD PTR [R12+840]
            lea RDI,QWORD PTR [RBX+840]
            call .L_431ba0

            lea RSI,QWORD PTR [R12+632]
            lea RDI,QWORD PTR [RBX+632]
            call .L_431ba0

            mov EAX,DWORD PTR [R12+192]
            lea RSI,QWORD PTR [R12+736]
            lea RDI,QWORD PTR [RBX+736]
            mov DWORD PTR [RBX+192],EAX
            call .L_431ba0

            movzx EAX,BYTE PTR [R12+944]
            lea RSI,QWORD PTR [R12+968]
            lea RDI,QWORD PTR [RBX+968]
            mov BYTE PTR [RBX+944],AL
            call .L_434890

            mov RDX,QWORD PTR [R12+960]
            mov RSI,QWORD PTR [R12+952]
            mov RDI,RBX
            call .L_439780

            mov RBP,QWORD PTR [R12+1024]
            test RBP,RBP
            je .L_4399cd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4399b0:

            mov RCX,QWORD PTR [RBP+24]
            mov RDX,QWORD PTR [RBP+16]
            mov RDI,RBX
            mov RSI,QWORD PTR [RBP+8]
            call .L_43a600

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            jne .L_4399b0
.L_4399cd:

            mov RBP,QWORD PTR [R12+1040]
            test RBP,RBP
            je .L_4399f9

            nop
            nop
            nop
            nop
            nop
            nop
.L_4399e0:

            mov RDX,QWORD PTR [RBP+16]
            mov RSI,QWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_43a3d0

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            jne .L_4399e0
.L_4399f9:

            mov RAX,RBX
            pop RBX
.L_4399fd:

            pop RBP
            pop R12
            ret 
.L_439a01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439a10:

            lea RAX,QWORD PTR [RDI+968]
            ret 
.L_439a18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439a20:

            add RDI,968
            jmp .L_434800
.L_439a2c:

            nop
            nop
            nop
            nop
.L_439a30:

            add RDI,968
            jmp .L_4348f0
.L_439a3c:

            nop
            nop
            nop
            nop
.L_439a40:

            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,R9
            mov EBP,ESI
            mov R12D,EDX
            sub RSP,24
            mov DWORD PTR [RSP+12],R8D
            mov QWORD PTR [RSP],R9
            call wcslen@PLT

            sub RSP,8
            lea RDI,QWORD PTR [RBX+968]
            mov ECX,R13D
            push RAX
            mov R9,QWORD PTR [RSP+16]
            mov EDX,R12D
            mov R8D,DWORD PTR [RSP+28]
            mov ESI,EBP
            call .L_434960

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_439a94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439aa0:

            add RDI,968
            jmp .L_434a20
.L_439aac:

            nop
            nop
            nop
            nop
.L_439ab0:

            add RDI,968
            jmp .L_4349e0
.L_439abc:

            nop
            nop
            nop
            nop
.L_439ac0:

            add RDI,968
            jmp .L_434a30
.L_439acc:

            nop
            nop
            nop
            nop
.L_439ad0:

            push RBX
            mov EAX,ESI
            lea RSI,QWORD PTR [RDI+968]
            mov RDI,QWORD PTR [RDI]
            push QWORD PTR [RSP+16]
            push R9
            mov R9,R8
            mov R8,RCX
            mov RCX,RDX
            mov EDX,EAX
            call .L_434a80

            cmp EAX,-30
            mov EBX,EAX
            pop RDX
            pop RCX
            je .L_439b00
.L_439afc:

            mov EAX,EBX
            pop RBX
            ret 
.L_439b00:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_439afc

            lea RSI,QWORD PTR [RIP+.L_44529c]
            mov EDI,1
            call .L_432cd0
.L_439b1b:

            nop
            nop
            nop
            nop
            nop
.L_439b20:

            mov RAX,RDI
            lea RDI,QWORD PTR [RDI+968]
            mov RCX,QWORD PTR [RAX]
            jmp .L_434c30
.L_439b32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439b40:

            add RDI,968
            xor ECX,ECX
            jmp .L_434fa0
.L_439b4e:

            nop
            nop
.L_439b50:

            add RDI,968
            jmp .L_434fa0
.L_439b5c:

            nop
            nop
            nop
            nop
.L_439b60:

            add RDI,968
            jmp .L_435340
.L_439b6c:

            nop
            nop
            nop
            nop
.L_439b70:

            add RDI,968
            xor ECX,ECX
            jmp .L_436060
.L_439b7e:

            nop
            nop
.L_439b80:

            add RDI,968
            jmp .L_436060
.L_439b8c:

            nop
            nop
            nop
            nop
.L_439b90:

            push RBX
            mov RBX,RDI
            sub RSP,16
            mov RDI,QWORD PTR [RDI+1000]
            mov DWORD PTR [RSP+12],ESI
            test RDI,RDI
            je .L_439bb8

            call free@PLT

            mov QWORD PTR [RBX+1000],0
.L_439bb8:

            lea RDI,QWORD PTR [RSP+12]
            call .L_437890

            test EAX,EAX
            je .L_439bd8

            mov RAX,QWORD PTR [RBX+1000]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439bd8:

            mov RCX,QWORD PTR [RBX]
            mov EDX,DWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RBX+968]
            xor ESI,ESI
            call .L_434c30

            mov QWORD PTR [RBX+1000],RAX
            add RSP,16
            pop RBX
            ret 
.L_439bfa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_439c00:

            push RBX
            mov RBX,RDI
            sub RSP,16
            mov RDI,QWORD PTR [RDI+1008]
            mov DWORD PTR [RSP+12],ESI
            test RDI,RDI
            je .L_439c28

            call free@PLT

            mov QWORD PTR [RBX+1008],0
.L_439c28:

            lea RDI,QWORD PTR [RSP+12]
            call .L_437890

            test EAX,EAX
            je .L_439c48

            mov RAX,QWORD PTR [RBX+1008]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439c48:

            mov EDX,DWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RBX+968]
            xor ECX,ECX
            xor ESI,ESI
            call .L_434fa0

            mov QWORD PTR [RBX+1008],RAX
            add RSP,16
            pop RBX
            ret 
.L_439c69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439c70:

            push R13
            push R12
            mov R13,R8
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RDX
            mov R12,RCX
            sub RSP,24
            mov RDI,QWORD PTR [RDI+1008]
            mov DWORD PTR [RSP+12],ESI
            test RDI,RDI
            je .L_439ca6

            call free@PLT

            mov QWORD PTR [RBX+1008],0
.L_439ca6:

            lea RDI,QWORD PTR [RSP+12]
            call .L_437890

            test EAX,EAX
            je .L_439cd0

            mov RAX,QWORD PTR [RBX+1008]
.L_439cbb:

            mov QWORD PTR [RBP],RAX
            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_439cd0:

            mov EDX,DWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RBX+968]
            mov RCX,R13
            mov RSI,R12
            call .L_434fa0

            mov QWORD PTR [RBX+1008],RAX
            jmp .L_439cbb
.L_439cef:

            nop
.L_439cf0:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
.L_439cfb:

            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_439d2b

            mov RDI,QWORD PTR [RAX+16]
            call .L_4379a0

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RAX+24]
            call .L_4379a0

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov QWORD PTR [RBX+8],0
.L_439d2b:

            mov RCX,QWORD PTR [RBX+24]
            test RCX,RCX
            je .L_439da0

            mov RSI,QWORD PTR [RBX]
            mov EDX,EBP
            xor EDI,EDI
            and EDX,2
            and EBP,1
.L_439d41:

            mov RAX,QWORD PTR [RSI]
            test RAX,RAX
            je .L_439d8c
.L_439d49:

            cmp QWORD PTR [RAX+24],0
            je .L_439d80

            test EBP,EBP
            je .L_439d84
.L_439d54:

            mov RCX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_439d68

            mov QWORD PTR [RCX+8],RDX
            mov RDX,QWORD PTR [RAX+8]
.L_439d68:

            test RDX,RDX
            je .L_439da8

            mov QWORD PTR [RDX],RCX
.L_439d70:

            sub QWORD PTR [RBX+16],1
            mov QWORD PTR [RBX+8],RAX
.L_439d79:

            add RSP,8
.L_439d7d:

            pop RBX
            pop RBP
            ret 
.L_439d80:

            test EDX,EDX
            jne .L_439d54
.L_439d84:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_439d49
.L_439d8c:

            add RDI,1
            add RSI,8
            cmp RCX,RDI
            jne .L_439d41

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439da0:

            xor EAX,EAX
            jmp .L_439d79
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_439da8:

            mov QWORD PTR [RSI],RCX
            jmp .L_439d70
.L_439dad:

            nop
            nop
            nop
.L_439db0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_439dc4:

            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_439df7

            mov RDI,QWORD PTR [RAX+16]
            call .L_4379a0

            mov RAX,QWORD PTR [R12+8]
            mov RDI,QWORD PTR [RAX+24]
            call .L_4379a0

            mov RDI,QWORD PTR [R12+8]
            call free@PLT

            mov QWORD PTR [R12+8],0
.L_439df7:

            mov RDI,RBX
            call .L_437aa0

            mov RDI,RBX
            mov R13,RAX
            call .L_438110

            mov RBP,RAX
            mov R14,RAX
            mov RAX,QWORD PTR [R12+24]
            mov RDX,QWORD PTR [R12]
            xor RBP,R13
            sub RAX,1
            and RAX,RBP
            mov RBX,QWORD PTR [RDX+RAX*8]
            lea R15,QWORD PTR [RAX*8]
            test RBX,RBX
            jne .L_439e48

            jmp .L_439ea8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439e40:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_439ea8
.L_439e48:

            cmp QWORD PTR [RBX+32],RBP
            jne .L_439e40

            mov RDI,QWORD PTR [RBX+16]
            call .L_437aa0

            cmp RAX,R13
            jne .L_439e40

            mov RDI,QWORD PTR [RBX+16]
            call .L_438110

            cmp RAX,R14
            jne .L_439e40

            sub DWORD PTR [RBX+40],1
            jne .L_439eaa

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            test RDX,RDX
            je .L_439e82

            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RBX]
.L_439e82:

            test RAX,RAX
            je .L_439e8b

            mov QWORD PTR [RAX+8],RDX
.L_439e8b:

            add R15,QWORD PTR [R12]
            cmp QWORD PTR [R15],RBX
            jne .L_439e97

            mov QWORD PTR [R15],RAX
.L_439e97:

            sub QWORD PTR [R12+16],1
            mov QWORD PTR [R12+8],RBX
            jmp .L_439eaa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_439ea8:

            xor EBX,EBX
.L_439eaa:

            add RSP,8
.L_439eae:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_439ebc:

            nop
            nop
            nop
            nop
.L_439ec0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov EDI,1
            mov ESI,48
            sub RSP,8
.L_439ede:

            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_439f6f

            mov RDI,RBP
            call .L_4397f0

            mov R15,QWORD PTR [R12+24]
            mov QWORD PTR [RBX+16],RAX
            lea R14,QWORD PTR [R15+R15*1]
            cmp QWORD PTR [R12+16],R14
            jbe .L_439f10

            cmp R15,R14
            jbe .L_439f88
.L_439f10:

            mov RDI,RBP
            call .L_437aa0

            mov RDI,RBP
            mov R13,RAX
            call .L_438110

            mov RDI,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [R12]
            xor RAX,R13
            lea RDX,QWORD PTR [RDI-1]
            and RDX,RAX
            lea RCX,QWORD PTR [RCX+RDX*8]
            mov RDX,QWORD PTR [RCX]
            test RDX,RDX
            je .L_439f49

            mov QWORD PTR [RDX+8],RBX
            mov RDX,QWORD PTR [RCX]
.L_439f49:

            add QWORD PTR [R12+16],1
            mov QWORD PTR [RBX],RDX
            mov RDI,RBP
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RCX],RBX
            mov QWORD PTR [RBX+32],RAX
            call .L_438160

            sub EAX,1
            mov DWORD PTR [RBX+40],EAX
.L_439f6f:

            add RSP,8
.L_439f73:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439f88:

            mov ESI,8
            mov RDI,R14
            call calloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_439f10

            test R15,R15
            mov RDI,QWORD PTR [R12]
            je .L_43a000

            mov R8,RDI
            lea R9,QWORD PTR [RDI+R15*8]
            lea RAX,QWORD PTR [R14-1]
            jmp .L_439fef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439fc0:

            mov RCX,QWORD PTR [RDX]
            mov QWORD PTR [R8],RCX
            mov RCX,QWORD PTR [RDX+32]
            and RCX,RAX
            lea RSI,QWORD PTR [R13+RCX*8]
            mov RCX,QWORD PTR [RSI]
            test RCX,RCX
            je .L_439fe1

            mov QWORD PTR [RCX+8],RDX
            mov RCX,QWORD PTR [RSI]
.L_439fe1:

            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDX+8],0
            mov QWORD PTR [RSI],RDX
.L_439fef:

            mov RDX,QWORD PTR [R8]
            test RDX,RDX
            jne .L_439fc0

            add R8,8
            cmp R9,R8
            jne .L_439fef
.L_43a000:

            call free@PLT

            mov QWORD PTR [R12],R13
            mov QWORD PTR [R12+24],R14
            jmp .L_439f10
.L_43a013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a020:

            push RBX
            mov ESI,40
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_43a057

            mov QWORD PTR [RAX+24],1024
            mov ESI,8
            mov EDI,1024
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43a060
.L_43a057:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a060:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_43a057
.L_43a06c:

            nop
            nop
            nop
            nop
.L_43a070:

            mov EAX,ESI
            and EAX,16711680
            cmp EAX,196608
            je .L_43a0b7

            jle .L_43a0c0

            cmp EAX,524288
            jne .L_43a090

            mov DWORD PTR [RDI+32],1
            ret 
          .byte 0x90
.L_43a090:

            cmp EAX,655360
            je .L_43a0b7

            cmp EAX,262144
            je .L_43a0b7
.L_43a09e:

            mov DWORD PTR [RDI+32],2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a0b0:

            cmp EAX,131072
            jne .L_43a09e
.L_43a0b7:

            mov DWORD PTR [RDI+32],0
            ret 
          .byte 0x90
.L_43a0c0:

            cmp EAX,65536
            jne .L_43a0b0

            sub ESI,65540
            cmp ESI,1
            ja .L_43a09e

            mov DWORD PTR [RDI+32],3
            ret 
.L_43a0da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43a0e0:

            test RDI,RDI
            je .L_43a120

            push RBX
            mov RBX,RDI
            jmp .L_43a0f9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a0f0:

            mov RDI,QWORD PTR [RAX+24]
            call .L_4379a0
.L_43a0f9:

            mov ESI,3
            mov RDI,RBX
            call .L_439cf0

            test RAX,RAX
            jne .L_43a0f0

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            pop RBX
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a120:

            ret 
.L_43a122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a130:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_43a140:

            mov QWORD PTR [RDX],0
            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            je .L_43a260

            mov RBP,RDX
            call .L_438160

            cmp EAX,1
            je .L_43a251

            mov RDI,QWORD PTR [RBX]
            call .L_437b90

            cmp EAX,16384
            je .L_43a251

            mov RDI,QWORD PTR [RBX]
            call .L_437b90

            cmp EAX,24576
            je .L_43a251

            mov RDI,QWORD PTR [RBX]
            call .L_437b90

            cmp EAX,8192
            je .L_43a251

            mov EAX,DWORD PTR [R12+32]
            cmp EAX,1
            je .L_43a290

            cmp EAX,3
            je .L_43a1f8

            test EAX,EAX
            jne .L_43a251

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_439db0

            test RAX,RAX
            mov RBP,RAX
            je .L_43a2b0

            mov RDI,QWORD PTR [RBX]
            call .L_4394b0

            mov RDI,QWORD PTR [RBP+16]
.L_43a1db:

            call .L_438170

            mov RDI,QWORD PTR [RBX]
            add RSP,8
.L_43a1e7:

            mov RSI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_438e30
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a1f8:

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_439db0

            test RAX,RAX
            mov R13,RAX
            je .L_43a2c5

            mov RDX,QWORD PTR [R13+24]
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX],RDX
            mov QWORD PTR [R13+24],RAX
            mov RDI,QWORD PTR [RBX]
            call .L_4394b0

            mov RDI,QWORD PTR [R13+16]
            call .L_438170

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call .L_438e30

            mov EAX,DWORD PTR [R13+40]
            test EAX,EAX
            jne .L_43a251

            mov RAX,QWORD PTR [R13+24]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [R13+24],0
.L_43a251:

            add RSP,8
.L_43a255:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a260:

            mov ESI,1
            mov RDI,R12
            call .L_439cf0

            test RAX,RAX
            je .L_43a251

            mov RDX,QWORD PTR [RAX+24]
            mov QWORD PTR [RBX],RDX
            mov QWORD PTR [RAX+24],0
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a290:

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_439db0

            test RAX,RAX
            je .L_43a2b0

            mov RDI,QWORD PTR [RAX+16]
            jmp .L_43a1db
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a2b0:

            mov RSI,QWORD PTR [RBX]
            add RSP,8
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_439ec0
.L_43a2c5:

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_439ec0

            test RAX,RAX
            je .L_43a251

            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RBX],0
            jmp .L_43a251
.L_43a2ec:

            nop
            nop
            nop
            nop
.L_43a2f0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_43a2fc:

            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_43a32c

            mov RDI,QWORD PTR [RAX+16]
            call .L_4379a0

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RAX+24]
            call .L_4379a0

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov QWORD PTR [RBX+8],0
.L_43a32c:

            mov ESI,2
            mov RDI,RBX
            call .L_439cf0

            test RAX,RAX
            mov RDX,RAX
            je .L_43a360

            test RBP,RBP
            mov RAX,QWORD PTR [RAX+16]
            je .L_43a350

            mov ECX,DWORD PTR [RDX+40]
            mov DWORD PTR [RBP],ECX
.L_43a350:

            mov QWORD PTR [RDX+16],0
.L_43a358:

            add RSP,8
.L_43a35c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_43a360:

            xor EAX,EAX
            test RBP,RBP
            je .L_43a358

            mov DWORD PTR [RBP],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43a375:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a380:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+1040]
            test RDI,RDI
            je .L_43a3af

            nop
            nop
            nop
.L_43a398:

            mov RBX,QWORD PTR [RDI]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+1040],RBX
            mov RDI,RBX
            jne .L_43a398
.L_43a3af:

            mov QWORD PTR [RBP+1048],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43a3c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a3d0:

            test RSI,RSI
            js .L_43a3ec

            test RDX,RDX
            js .L_43a3ec

            movabs RAX,9223372036854775807
            sub RAX,RDX
            cmp RAX,RSI
            jge .L_43a3f0
.L_43a3ec:

            ret 
          .byte 0x66
          .byte 0x90
.L_43a3f0:

            push R13
            push R12
            lea R13,QWORD PTR [RSI+RDX*1]
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            mov R12,RDI
            sub RSP,8
            call .L_4383c0

            cmp R13,RAX
            jg .L_43a437

            mov R13,QWORD PTR [R12+1048]
            test R13,R13
            je .L_43a448

            mov RDX,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [R13+8]
            add RAX,RDX
            cmp RAX,RBX
            jg .L_43a437

            jne .L_43a448

            add RDX,RBP
            mov QWORD PTR [R13+16],RDX
.L_43a437:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a448:

            mov EDI,24
            call malloc@PLT

            test RAX,RAX
            je .L_43a437

            cmp QWORD PTR [R12+1040],0
            mov QWORD PTR [RAX+8],RBX
            mov QWORD PTR [RAX+16],RBP
            mov QWORD PTR [RAX],0
            je .L_43a484

            test R13,R13
            je .L_43a47a

            mov QWORD PTR [R13],RAX
.L_43a47a:

            mov QWORD PTR [R12+1048],RAX
            jmp .L_43a437
.L_43a484:

            mov QWORD PTR [R12+1048],RAX
            mov QWORD PTR [R12+1040],RAX
            jmp .L_43a437
.L_43a496:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a4a0:

            push R12
            push RBP
            push RBX
            mov RDX,QWORD PTR [RDI+1040]
            test RDX,RDX
            je .L_43a520

            mov RAX,RDX
            xor EBX,EBX
            nop
            nop
            nop
.L_43a4b8:

            mov RAX,QWORD PTR [RAX]
            add EBX,1
            test RAX,RAX
            jne .L_43a4b8

            cmp EBX,1
            je .L_43a4d0
.L_43a4c8:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_43a4d0:

            cmp QWORD PTR [RDX+8],0
            jne .L_43a4c8

            mov R12,QWORD PTR [RDX+16]
            mov RBP,RDI
            call .L_4383c0

            cmp R12,RAX
            jl .L_43a4c8

            mov RDI,QWORD PTR [RBP+1040]
            test RDI,RDI
            je .L_43a50f

            nop
            nop
            nop
            nop
.L_43a4f8:

            mov RBX,QWORD PTR [RDI]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+1040],RBX
            mov RDI,RBX
            jne .L_43a4f8
.L_43a50f:

            mov QWORD PTR [RBP+1048],0
            xor EBX,EBX
            jmp .L_43a4c8
          .byte 0x66
          .byte 0x90
.L_43a520:

            xor EBX,EBX
            mov EAX,EBX
            pop RBX
.L_43a525:

            pop RBP
            pop R12
            ret 
.L_43a529:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a530:

            mov RAX,QWORD PTR [RDI+1040]
            mov QWORD PTR [RDI+1056],RAX
            jmp .L_43a4a0
.L_43a543:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a550:

            mov RAX,QWORD PTR [RDI+1056]
            test RAX,RAX
            je .L_43a577

            mov RCX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSI],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDI+1056],RAX
            xor EAX,EAX
            ret 
.L_43a577:

            mov QWORD PTR [RSI],0
            mov EAX,4294967276
            mov QWORD PTR [RDX],0
            ret 
.L_43a58b:

            nop
            nop
            nop
            nop
            nop
.L_43a590:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_43a599:

            mov RAX,QWORD PTR [RDI+1024]
            test RAX,RAX
            je .L_43a5df

            nop
            nop
            nop
.L_43a5a8:

            mov RDI,QWORD PTR [RAX+8]
            mov RBP,QWORD PTR [RAX]
            call free@PLT

            mov RAX,QWORD PTR [RBX+1024]
            mov RDI,QWORD PTR [RAX+16]
            call free@PLT

            mov RDI,QWORD PTR [RBX+1024]
            call free@PLT

            test RBP,RBP
            mov QWORD PTR [RBX+1024],RBP
            mov RAX,RBP
            jne .L_43a5a8
.L_43a5df:

            mov QWORD PTR [RBX+1024],0
            add RSP,8
.L_43a5ee:

            pop RBX
            pop RBP
            ret 
.L_43a5f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a600:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_43a60e:

            mov EDI,32
            mov R13,RDX
            mov R12,RCX
            call malloc@PLT

            test RAX,RAX
            je .L_43a684

            mov RDI,R14
            mov RBX,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_43a684

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            jne .L_43a670

            mov QWORD PTR [RBX+24],0
.L_43a650:

            mov RAX,QWORD PTR [RBP+1024]
            mov QWORD PTR [RBP+1024],RBX
            mov QWORD PTR [RBX],RAX
            pop RBX
.L_43a662:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a670:

            mov RDX,R12
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov QWORD PTR [RBX+24],R12
            jmp .L_43a650
.L_43a684:

            lea RSI,QWORD PTR [RIP+.L_44512a]
            mov EDI,1
            call .L_432cd0
.L_43a695:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a6a0:

            mov RDX,QWORD PTR [RDI+1024]
            xor EAX,EAX
            test RDX,RDX
            je .L_43a6c0

            nop
            nop
.L_43a6b0:

            mov RDX,QWORD PTR [RDX]
            add EAX,1
            test RDX,RDX
            jne .L_43a6b0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a6c0:

            ret 
.L_43a6c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a6d0:

            mov RDX,QWORD PTR [RDI+1024]
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RDI+1032],RDX
            je .L_43a6f8

            nop
            nop
            nop
.L_43a6e8:

            mov RDX,QWORD PTR [RDX]
            add EAX,1
            test RDX,RDX
            jne .L_43a6e8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a6f8:

            ret 
.L_43a6fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43a700:

            mov RAX,QWORD PTR [RDI+1032]
            test RAX,RAX
            je .L_43a735

            mov R8,QWORD PTR [RAX+8]
            mov QWORD PTR [RSI],R8
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RDI+1032]
            mov RDX,QWORD PTR [RAX+24]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RCX],RDX
            mov QWORD PTR [RDI+1032],RAX
            xor EAX,EAX
            ret 
.L_43a735:

            mov QWORD PTR [RSI],0
            mov EAX,4294967276
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RCX],0
            ret 
.L_43a750:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call HMAC_CTX_free@PLT

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_43a765:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a770:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX]
            lea RDX,QWORD PTR [RSP+4]
            mov DWORD PTR [RSP+4],EAX
            call HMAC_Final@PLT

            mov EAX,DWORD PTR [RSP+4]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43a7b9

            add RSP,16
            pop RBX
            ret 
.L_43a7b9:

            call __stack_chk_fail@PLT
.L_43a7be:

            nop
            nop
.L_43a7c0:

            mov RDI,QWORD PTR [RDI]
            jmp HMAC_Update@PLT
.L_43a7c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a7d0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            call HMAC_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43a810

            call EVP_sha1@PLT

            mov RDI,QWORD PTR [RBX]
            xor R8D,R8D
            mov RCX,RAX
            mov EDX,R12D
            mov RSI,RBP
            call HMAC_Init_ex@PLT

            xor EAX,EAX
.L_43a805:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a810:

            mov EAX,4294967295
            jmp .L_43a805
.L_43a817:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a820:

            xor EAX,EAX
            ret 
.L_43a823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a830:

            cmp EDI,2
            je .L_43a848

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43a841:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a848:

            mov R8,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            movabs RDI,-17592186044416
            mov RAX,RSI
            mov RCX,RSI
            shl RAX,8
            shl RCX,32
            and RCX,RDI
            and EAX,1048320
            movabs RDI,17592184995840
            or RAX,RCX
            mov RCX,R8
            shl RCX,12
            and RCX,RDI
            or RCX,RAX
            movzx EAX,R8B
            or RAX,RCX
            mov RCX,RAX
            shr RCX,8
            mov EDI,ECX
            mov RCX,RAX
            shr RCX,32
            and EDI,4095
            and ECX,4294963200
            or ECX,EDI
            cmp RSI,RCX
            je .L_43a8c0

            lea RSI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RSI
            ret 
          .byte 0x66
          .byte 0x90
.L_43a8c0:

            mov RCX,RAX
            movzx ESI,AL
            shr RCX,12
            xor CL,CL
            or ECX,ESI
            cmp R8,RCX
            je .L_43a841

            lea RSI,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RSI
            ret 
.L_43a8e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a8f0:

            cmp EDI,2
            je .L_43a908

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43a901:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a908:

            mov RDI,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RCX,RSI
            shl RAX,8
            shl RCX,12
            and ECX,4293918720
            and EAX,1048320
            or RAX,RCX
            movzx ECX,SIL
            or RAX,RCX
            mov RCX,RAX
            shr RCX,8
            and ECX,4095
            cmp RDI,RCX
            je .L_43a950

            lea RSI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RSI
            ret 
          .byte 0x90
.L_43a950:

            mov RCX,RAX
            movzx EDI,AL
            shr RCX,12
            and ECX,1048320
            or ECX,EDI
            cmp RSI,RCX
            je .L_43a901

            lea RSI,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RSI
            ret 
.L_43a972:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a980:

            cmp EDI,2
            je .L_43a998

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43a991:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a998:

            mov RCX,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSI+8]
            mov RAX,RCX
            mov RDI,RSI
            shl RAX,8
            and EDI,4294902015
            movzx EAX,AX
            or RAX,RDI
            movzx EDI,AH
            cmp RCX,RDI
            je .L_43a9c7

            lea RCX,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RCX
.L_43a9c7:

            mov ECX,EAX
            xor CH,AH
            movsxd RCX,ECX
            cmp RSI,RCX
            je .L_43a991

            lea RSI,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RSI
            ret 
.L_43a9de:

            nop
            nop
.L_43a9e0:

            cmp EDI,2
            je .L_43a9f8

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43a9f1:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a9f8:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            movzx ESI,CL
            shl RAX,8
            movzx EAX,AX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,8
            cmp RDI,RSI
            je .L_43aa25

            lea RDI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RDI
.L_43aa25:

            movzx ESI,AL
            cmp RCX,RSI
            je .L_43a9f1

            lea RCX,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RCX
            ret 
.L_43aa38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43aa40:

            cmp EDI,2
            je .L_43aa58

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43aa51:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43aa58:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,20
            and ESI,1048575
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,20
            cmp RDI,RSI
            je .L_43aa8a

            lea RDI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RDI
.L_43aa8a:

            mov RSI,RAX
            and ESI,1048575
            cmp RCX,RSI
            je .L_43aa51

            lea RCX,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RCX
            ret 
.L_43aaa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43aab0:

            cmp EDI,2
            je .L_43aac8

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43aac1:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43aac8:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,18
            and ESI,262143
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,18
            cmp RDI,RSI
            je .L_43aafa

            lea RDI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RDI
.L_43aafa:

            mov RSI,RAX
            and ESI,262143
            cmp RCX,RSI
            je .L_43aac1

            lea RCX,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RCX
            ret 
.L_43ab13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ab20:

            cmp EDI,2
            je .L_43ab38

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43ab31:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ab38:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,24
            and ESI,16777215
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,24
            cmp RDI,RSI
            je .L_43ab6a

            lea RDI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RDI
.L_43ab6a:

            mov RSI,RAX
            and ESI,16777215
            cmp RCX,RSI
            je .L_43ab31

            lea RCX,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RCX
            ret 
.L_43ab83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ab90:

            cmp EDI,2
            je .L_43ac20

            cmp EDI,3
            je .L_43abb0

            lea RAX,QWORD PTR [RIP+.L_44fff0]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_43abaa:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43abb0:

            mov R8,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI+16]
            mov RAX,R8
            mov RCX,RDI
            shl RAX,20
            shl RCX,8
            and ECX,1048320
            mov EAX,EAX
            or RAX,RCX
            movzx ECX,SIL
            or RAX,RCX
            mov RCX,RAX
            shr RCX,20
            cmp R8,RCX
            je .L_43abf1

            lea RCX,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RCX
.L_43abf1:

            mov RCX,RAX
            shr RCX,8
            and ECX,4095
            cmp RDI,RCX
            je .L_43ac0d

            lea RDI,QWORD PTR [RIP+.L_44ff64]
            mov QWORD PTR [RDX],RDI
.L_43ac0d:

            movzx ECX,AL
            cmp RSI,RCX
            je .L_43abaa

            lea RCX,QWORD PTR [RIP+.L_44ff78]
            mov QWORD PTR [RDX],RCX
            ret 
.L_43ac20:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,20
            and ESI,1048575
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,20
            cmp RDI,RSI
            je .L_43ac52

            lea RDI,QWORD PTR [RIP+.L_450030]
            mov QWORD PTR [RDX],RDI
.L_43ac52:

            mov RSI,RAX
            and ESI,1048575
            cmp RCX,RSI
            je .L_43abaa

            lea RDI,QWORD PTR [RIP+.L_450010]
            mov QWORD PTR [RDX],RDI
            ret 
.L_43ac6f:

            nop
.L_43ac70:

            push R15
            push R14
            mov R15D,16
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            xor R12D,R12D
            lea R13,QWORD PTR [RIP+.L_65b5e0]
            sub RSP,8
.L_43ac91:

            jmp .L_43aca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ac98:

            cmp RBX,R12
            jbe .L_43ace8
.L_43ac9d:

            mov R15,RBX
.L_43aca0:

            lea RBX,QWORD PTR [R12+R15*1]
            mov RDI,R14
            shr RBX,1
            mov RBP,RBX
            shl RBP,4
            add RBP,R13
            mov RSI,QWORD PTR [RBP]
            call strcmp@PLT

            test EAX,EAX
            js .L_43ac98

            je .L_43acd1

            lea R12,QWORD PTR [RBX+1]
            cmp R12,R15
            jae .L_43ace8

            mov RBX,R15
            jmp .L_43ac9d
.L_43acd1:

            mov RAX,QWORD PTR [RBP+8]
            add RSP,8
.L_43acd9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ace8:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43acf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ad00:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+64]
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            mov DWORD PTR [RBX+52],0
            mov QWORD PTR [RBX+64],0
            pop RBX
            ret 
.L_43ad22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ad30:

            push R12
            mov R12D,ESI
            push RBP
            push RBX
.L_43ad37:

            mov RSI,QWORD PTR [RDI+64]
            test RSI,RSI
            je .L_43ad4b

            cmp DWORD PTR [RDI+52],R12D
            mov EAX,1
            je .L_43ad99
.L_43ad4b:

            cmp R12D,11
            jbe .L_43ada0

            mov RBX,RDI
            mov RBP,RDX
            mov RDI,RDX
            call QWORD PTR [RDX+8]

            mov EDX,R12D
            mov EAX,4
            mov DWORD PTR [RBX+52],0
            and EDX,3
            mov QWORD PTR [RBX+64],0
            mov RDI,RBP
            sub EAX,EDX
            mov DWORD PTR [RBX+104],EAX
            lea ESI,DWORD PTR [RAX+R12*1+12]
            call QWORD PTR [RBP]

            test RAX,RAX
            mov QWORD PTR [RBX+64],RAX
            je .L_43ada0

            mov DWORD PTR [RBX+52],R12D
            mov EAX,1
.L_43ad99:

            pop RBX
.L_43ad9a:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_43ada0:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_43ada7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43adb0:

            mov ECX,ECX
            mov EDX,EDX
            mov R9,QWORD PTR [RDI+64]
            movzx EAX,BYTE PTR [RDI+RCX*1+108]
            movzx EDX,BYTE PTR [RDI+RDX*1+108]
            sub EDX,EAX
            lea EAX,DWORD PTR [RAX+RAX*2]
            shl EAX,2
            add RSI,RAX
            lea EAX,DWORD PTR [RDX-1]
            movzx ECX,BYTE PTR [RDI+RAX*1+146]
            mov R8,RAX
            movzx R10D,BYTE PTR [RDI+RCX*1+108]
            cmp R10D,EDX
            je .L_43ae11

            lea ECX,DWORD PTR [RCX-1]
            movzx EDX,BYTE PTR [RDI+RCX*1+108]
            sub R8D,EDX
            lea EAX,DWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RDI+R8*4]
            shl EAX,2
            mov R8D,DWORD PTR [RDX+276]
            add RAX,RSI
            mov DWORD PTR [RAX],R8D
            sub RAX,R9
            mov DWORD PTR [RDX+276],EAX
.L_43ae11:

            lea RAX,QWORD PTR [RDI+RCX*4]
            mov EDX,DWORD PTR [RAX+276]
            mov DWORD PTR [RSI],EDX
            sub RSI,R9
            mov DWORD PTR [RAX+276],ESI
            ret 
.L_43ae27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ae30:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_43ae41:

            mov R9,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+64]
            mov RDX,QWORD PTR [RDI+16]
            mov EBP,DWORD PTR [R9+4]
            mov QWORD PTR [RSP+8],RAX
            movzx R10D,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            movzx R8D,WORD PTR [RDX+2]
            movzx EDI,WORD PTR [RDX+4]
            mov DWORD PTR [RSP+20],EBP
            add RBP,RAX
            cmp RBP,RDX
            je .L_43aec9

            lea RAX,QWORD PTR [RDX-6]
            movabs R11,3074457345618258603
            mov RCX,RAX
            sub RCX,RBP
            shr RCX,1
            imul RCX,R11
            movabs R11,9223372036854775807
            and RCX,R11
            add RCX,1
            lea R11,QWORD PTR [RCX*4]
            sub RCX,R11
            lea R11,QWORD PTR [RDX+RCX*2]
            jmp .L_43aeb4
          .byte 0x90
.L_43aeb0:

            sub RAX,6
.L_43aeb4:

            mov ECX,DWORD PTR [RDX-6]
            cmp RAX,R11
            mov DWORD PTR [RDX],ECX
            movzx ECX,WORD PTR [RDX-2]
            mov WORD PTR [RDX+4],CX
            mov RDX,RAX
            jne .L_43aeb0
.L_43aec9:

            movzx EBX,WORD PTR [R9+2]
            movzx EAX,SIL
            lea R11D,DWORD PTR [RSI+4]
            mov WORD PTR [RDX+4],DI
            xor EDI,EDI
            mov BYTE PTR [RDX],R10B
            movzx R11D,R11B
            mov WORD PTR [RDX+2],R8W
            sub EBX,EAX
            mov EAX,DWORD PTR [R12+24]
            test EAX,EAX
            setne DIL
            add R11D,EDI
            shr R11D,1
            mov BYTE PTR [RDX+1],R11B
            movzx R10D,WORD PTR [R9]
            mov EAX,R11D
            lea ECX,DWORD PTR [R10-2]
            mov WORD PTR [RSP+18],R10W
            lea RCX,QWORD PTR [RCX+RCX*2+3]
            lea R8,QWORD PTR [RDX+RCX*2]
            jmp .L_43af29
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43af20:

            cmp R8,RDX
            je .L_43af96
.L_43af25:

            movzx EAX,BYTE PTR [RDX+1]
.L_43af29:

            add RDX,6
            movzx ECX,BYTE PTR [RDX+1]
            sub EBX,ECX
            add ECX,EDI
            shr ECX,1
            add R11D,ECX
            cmp AL,CL
            mov ESI,ECX
            mov BYTE PTR [RDX+1],CL
            jae .L_43af20

            movzx R15D,BYTE PTR [RDX]
            movzx R14D,WORD PTR [RDX+2]
            mov RAX,RDX
            movzx R13D,WORD PTR [RDX+4]
            mov QWORD PTR [RSP],RDX
            jmp .L_43af66
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43af60:

            cmp SIL,BYTE PTR [RAX-5]
            jbe .L_43af7d
.L_43af66:

            mov EDX,DWORD PTR [RAX-6]
            sub RAX,6
            mov DWORD PTR [RAX+6],EDX
            movzx EDX,WORD PTR [RAX+4]
            mov WORD PTR [RAX+10],DX
            cmp RBP,RAX
            jne .L_43af60
.L_43af7d:

            mov RDX,QWORD PTR [RSP]
            mov BYTE PTR [RAX],R15B
            mov BYTE PTR [RAX+1],CL
            mov WORD PTR [RAX+2],R14W
            mov WORD PTR [RAX+4],R13W
            cmp R8,RDX
            jne .L_43af25
.L_43af96:

            cmp BYTE PTR [RDX+1],0
            jne .L_43afd8

            xor EAX,EAX
            nop
            nop
.L_43afa0:

            sub RDX,6
            add EAX,1
            cmp BYTE PTR [RDX+1],0
            je .L_43afa0

            movzx EDI,WORD PTR [RSP+18]
            add EBX,EAX
            add R10D,1
            shr R10D,1
            sub EDI,EAX
            movzx EAX,DI
            cmp AX,1
            mov WORD PTR [R9],AX
            je .L_43b000

            add EAX,1
            sar EAX,1
            cmp EAX,R10D
            jne .L_43b070
.L_43afd8:

            add R11D,EBX
            shr EBX,1
            sub R11D,EBX
            mov WORD PTR [R9+2],R11W
            mov QWORD PTR [R12+16],RBP
            add RSP,24
.L_43afee:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b000:

            movzx EDI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            movzx ESI,WORD PTR [RBP+2]
            movzx ECX,WORD PTR [RBP+4]
.L_43b010:

            mov EDX,EAX
            shr EBX,1
            shr DL,1
            sub EAX,EDX
            cmp EBX,1
            ja .L_43b010

            lea EDX,DWORD PTR [R10-1]
            mov EBX,DWORD PTR [RSP+20]
            movzx EDX,BYTE PTR [R12+RDX*1+146]
            lea RDX,QWORD PTR [R12+RDX*4]
            mov R8D,DWORD PTR [RDX+276]
            mov DWORD PTR [RBP],R8D
            mov DWORD PTR [RDX+276],EBX
            lea RDX,QWORD PTR [R9+2]
            mov QWORD PTR [R12+16],RDX
            mov BYTE PTR [R9+2],DIL
            mov BYTE PTR [R9+3],AL
            mov WORD PTR [R9+4],SI
            mov WORD PTR [R9+6],CX
            add RSP,24
.L_43b062:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b070:

            lea EDX,DWORD PTR [R10-1]
            lea R8D,DWORD PTR [RAX-1]
            movzx EDX,BYTE PTR [R12+RDX*1+146]
            movzx ECX,BYTE PTR [R12+R8*1+146]
            cmp EDX,ECX
            mov RDI,RDX
            je .L_43b100

            lea R10,QWORD PTR [R12+RCX*4]
            mov EAX,DWORD PTR [R10+276]
            test EAX,EAX
            je .L_43b116

            mov RSI,QWORD PTR [RSP+8]
            add RSI,RAX
            mov EAX,DWORD PTR [RSI]
            mov RDX,RSI
            mov DWORD PTR [R10+276],EAX
            lea RAX,QWORD PTR [R8+R8*2+3]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov RAX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b0c8:

            mov ECX,DWORD PTR [RAX]
            add RAX,12
            add RDX,12
            mov DWORD PTR [RDX-12],ECX
            mov ECX,DWORD PTR [RAX-8]
            mov DWORD PTR [RDX-8],ECX
            mov ECX,DWORD PTR [RAX-4]
            mov DWORD PTR [RDX-4],ECX
            cmp RAX,R8
            jne .L_43b0c8

            lea RAX,QWORD PTR [R12+RDI*4]
            mov EDI,DWORD PTR [RSP+20]
            mov EDX,DWORD PTR [RAX+276]
            mov DWORD PTR [RBP],EDX
            mov DWORD PTR [RAX+276],EDI
            mov RBP,RSI
.L_43b100:

            mov RAX,QWORD PTR [RSP+8]
            sub RBP,RAX
            mov DWORD PTR [R9+4],EBP
            mov EBP,EBP
            add RBP,RAX
            jmp .L_43afd8
.L_43b116:

            mov RSI,RBP
            mov RDI,R12
            call .L_43adb0

            mov RAX,QWORD PTR [R12+64]
            mov R9,QWORD PTR [R12]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_43b100
.L_43b131:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b140:

            mov R8,QWORD PTR [RDI]
            movzx EAX,WORD PTR [R8]
            cmp AX,256
            je .L_43b1e0

            mov R10D,EAX
            push RBX

            mov R11,QWORD PTR [RDI+64]
            sub R10D,ESI
            lea ECX,DWORD PTR [R10-1]
            movzx R9D,BYTE PTR [RDI+RCX*1+428]
            mov ECX,DWORD PTR [R8+8]
            movzx R8D,WORD PTR [R8+2]
            movzx ECX,WORD PTR [R11+RCX*1]
            shl R9,6
            xor R11D,R11D
            sub ECX,EAX
            cmp ECX,R10D
            mov ECX,DWORD PTR [RDI+40]
            seta R11B
            cmp ESI,R10D
            lea ESI,DWORD PTR [RAX+RAX*4]
            lea ESI,DWORD PTR [RAX+RSI*2]
            lea RBX,QWORD PTR [RCX+4]
            cmova RCX,RBX
            cmp R8D,ESI
            lea RAX,QWORD PTR [RCX+2]
            cmovl RCX,RAX
            shl RCX,2
            lea RAX,QWORD PTR [RCX+R11*4]
            lea RAX,QWORD PTR [R9+RAX*1+1200]
            add RAX,RDI
            movzx ESI,WORD PTR [RAX]
            movzx ECX,BYTE PTR [RAX+2]
            mov EDI,ESI
            sar ESI,CL
            mov ECX,ESI
            sub EDI,ESI
            xor ESI,ESI
            test ECX,ECX
            mov WORD PTR [RAX],DI
            sete SIL
            add ECX,ESI
            mov DWORD PTR [RDX],ECX
            pop RBX

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b1e0:

            lea RAX,QWORD PTR [RDI+1196]
            mov DWORD PTR [RDX],1
            ret 
.L_43b1ee:

            nop
            nop
.L_43b1f0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_43b1f7:

            mov EBX,DWORD PTR [RDI+28]
            mov EBP,4
            mov QWORD PTR [RDI+32],0
            mov DWORD PTR [RDI+24],4294967295
.L_43b20e:

            mov RAX,QWORD PTR [R12+40]
            shl EBX,8
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            movzx EAX,AL
            or EBX,EAX
            sub EBP,1
            mov DWORD PTR [R12+28],EBX
            jne .L_43b20e

            xor EAX,EAX
            cmp EBX,-1
            je .L_43b240

            mov DWORD PTR [R12+36],32768
            mov EAX,1
.L_43b240:

            pop RBX
.L_43b241:

            pop RBP
            pop R12
            ret 
.L_43b245:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b250:

            mov EAX,DWORD PTR [RDI+24]
            xor EDX,EDX
            mov ECX,DWORD PTR [RDI+28]
            sub ECX,DWORD PTR [RDI+32]
            div ESI
            xor EDX,EDX
            mov ESI,EAX
            mov DWORD PTR [RDI+24],EAX
            mov EAX,ECX
            div ESI
            ret 
.L_43b269:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b270:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_43b279:

            mov EAX,DWORD PTR [RDI+32]
            mov EDX,DWORD PTR [RDI+24]
            jmp .L_43b2b2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b288:

            mov EBP,DWORD PTR [RBX+28]
            mov RAX,QWORD PTR [RBX+40]
            shl EBP,8
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            movzx EAX,AL
            mov EDX,DWORD PTR [RBX+24]
            or EAX,EBP
            mov DWORD PTR [RBX+28],EAX
            mov EAX,DWORD PTR [RBX+32]
            shl EDX,8
            mov DWORD PTR [RBX+24],EDX
            shl EAX,8
            mov DWORD PTR [RBX+32],EAX
.L_43b2b2:

            lea ECX,DWORD PTR [RAX+RDX*1]
            xor ECX,EAX
            cmp ECX,16777215
            jbe .L_43b288

            mov ECX,DWORD PTR [RBX+36]
            cmp ECX,EDX
            jbe .L_43b2d8

            neg EAX
            sub ECX,1
            and EAX,ECX
            mov DWORD PTR [RBX+24],EAX
            jmp .L_43b288
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b2d8:

            add RSP,8
.L_43b2dc:

            pop RBX
            pop RBP
            ret 
.L_43b2df:

            nop
.L_43b2e0:

            mov EAX,DWORD PTR [RDI+24]
            imul ESI,EAX
            sub DWORD PTR [RDI+28],ESI
            imul EAX,EDX
            mov DWORD PTR [RDI+24],EAX
            jmp .L_43b270
.L_43b2f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b300:

            mov EAX,DWORD PTR [RDI+24]
            imul ESI,EAX
            add DWORD PTR [RDI+32],ESI
            imul EAX,EDX
            mov DWORD PTR [RDI+24],EAX
            jmp .L_43b270
.L_43b314:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b320:

            mov EDX,DWORD PTR [RDI+24]
            push RBX
            mov EAX,EDX
            shr EAX,14
            imul ESI,EAX
            mov EAX,DWORD PTR [RDI+28]
            cmp EAX,ESI
            jb .L_43b350

            sub EAX,ESI
            sub EDX,ESI
            mov EBX,1
            mov DWORD PTR [RDI+28],EAX
            mov DWORD PTR [RDI+24],EDX
            call .L_43b270

            mov EAX,EBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b350:

            xor EBX,EBX
            mov DWORD PTR [RDI+24],ESI
            call .L_43b270

            mov EAX,EBX
            pop RBX
            ret 
.L_43b35e:

            nop
            nop
.L_43b360:

            lea RAX,QWORD PTR [RIP+.L_43b250]
            mov QWORD PTR [RDI],RAX
            lea RAX,QWORD PTR [RIP+.L_43b2e0]
            mov QWORD PTR [RDI+8],RAX
            lea RAX,QWORD PTR [RIP+.L_43b320]
            mov QWORD PTR [RDI+16],RAX
            ret 
.L_43b381:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b390:

            lea RAX,QWORD PTR [RIP+.L_43b250]
            mov QWORD PTR [RDI],RAX
            lea RAX,QWORD PTR [RIP+.L_43b300]
            mov QWORD PTR [RDI+8],RAX
            lea RAX,QWORD PTR [RIP+.L_43bd80]
            mov QWORD PTR [RDI+16],RAX
            ret 
.L_43b3b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b3c0:

            mov QWORD PTR [RDI],0
            mov DWORD PTR [RDI+8],4294967295
            mov BYTE PTR [RDI+12],0
            mov QWORD PTR [RDI+16],1
            ret 
.L_43b3db:

            nop
            nop
            nop
            nop
            nop
.L_43b3e0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_43b3e9:

            mov RAX,QWORD PTR [RDI]
            cmp EAX,4278190079
            jbe .L_43b3ff

            mov RCX,RAX
            shr RCX,32
            test RCX,RCX
            je .L_43b460
.L_43b3ff:

            movzx ESI,BYTE PTR [RBX+12]
            mov EBP,4294967295
            jmp .L_43b415
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b410:

            mov RAX,QWORD PTR [RBX]
            mov ESI,EBP
.L_43b415:

            mov RDX,QWORD PTR [RBX+24]
            shr RAX,32
            add ESI,EAX
            movzx ESI,SIL
            mov RDI,RDX
            call QWORD PTR [RDX+8]

            mov RAX,QWORD PTR [RBX+16]
            sub RAX,1
            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            jne .L_43b410

            mov RCX,QWORD PTR [RBX]
            mov EDX,ECX
            shr ECX,24
            mov BYTE PTR [RBX+12],CL
.L_43b445:

            add RAX,1
            shl EDX,8
            mov QWORD PTR [RBX+16],RAX
            mov EAX,EDX
            mov QWORD PTR [RBX],RAX
            add RSP,8
.L_43b459:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43b460:

            mov EDX,EAX
            mov RAX,QWORD PTR [RDI+16]
            jmp .L_43b445
.L_43b468:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b470:

            push RBX
            mov RBX,RDI
            call .L_43b3e0

            mov RDI,RBX
            call .L_43b3e0

            mov RDI,RBX
            call .L_43b3e0

            mov RDI,RBX
            call .L_43b3e0

            mov RDI,RBX
            pop RBX
            jmp .L_43b3e0
.L_43b49a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43b4a0:

            mov R8,RDI
            mov QWORD PTR [RDI+64],0
            xor ESI,ESI
            xor EAX,EAX
            mov R9D,4
            nop
            nop
            nop
.L_43b4b8:

            mov ECX,ESI
            mov EDI,ESI
            mov EDX,EAX
            shr ECX,2
            add ECX,1
            cmp RSI,12
            cmovae ECX,R9D
            add ECX,EAX
.L_43b4ce:

            add EAX,1
            mov BYTE PTR [R8+RDX*1+146],DIL
            cmp ECX,EAX
            mov EDX,EAX
            jne .L_43b4ce

            mov BYTE PTR [R8+RSI*1+108],CL
            add RSI,1
            cmp RSI,38
            jne .L_43b4b8

            lea RDI,QWORD PTR [R8+703]
            mov EDX,R8D
            mov EAX,512
            mov WORD PTR [R8+684],AX
            movabs RAX,289360691352306692
            mov BYTE PTR [R8+694],4
            and RDI,-8
            mov QWORD PTR [R8+686],RAX
            movabs RAX,434041037028460038
            sub EDX,EDI
            mov QWORD PTR [R8+695],RAX
            mov QWORD PTR [R8+932],RAX
            lea ECX,DWORD PTR [RDX+940]
            lea RSI,QWORD PTR [R8+684]
            mov EDX,256
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            lea RAX,QWORD PTR [R8+431]
            mov WORD PTR [R8+428],DX
            mov BYTE PTR [R8+430],2
            mov ECX,3
            mov EDX,1
            nop
            nop
            nop
.L_43b578:

            sub EDX,1
            mov BYTE PTR [RAX],CL
            jne .L_43b585

            lea EDX,DWORD PTR [RCX-1]
            add ECX,1
.L_43b585:

            add RAX,1
            cmp RSI,RAX
            jne .L_43b578

            pxor XMM0,XMM0
            movups XMMWORD PTR [R8+940],XMM0
            movups XMMWORD PTR [R8+956],XMM0
            movups XMMWORD PTR [R8+972],XMM0
            movups XMMWORD PTR [R8+988],XMM0
            movdqa XMM0,XMMWORD PTR [RIP+.L_450070]
            movups XMMWORD PTR [R8+1004],XMM0
            movups XMMWORD PTR [R8+1020],XMM0
            movups XMMWORD PTR [R8+1036],XMM0
            movups XMMWORD PTR [R8+1052],XMM0
            movups XMMWORD PTR [R8+1068],XMM0
            movups XMMWORD PTR [R8+1084],XMM0
            movups XMMWORD PTR [R8+1100],XMM0
            movups XMMWORD PTR [R8+1116],XMM0
            movups XMMWORD PTR [R8+1132],XMM0
            movups XMMWORD PTR [R8+1148],XMM0
            movups XMMWORD PTR [R8+1164],XMM0
            movups XMMWORD PTR [R8+1180],XMM0
            ret 
.L_43b61b:

            nop
            nop
            nop
            nop
            nop
.L_43b620:

            mov R8,RDI
            push RBX

            lea RDI,QWORD PTR [RDI+284]
            mov QWORD PTR [RDI-8],0
            mov QWORD PTR [RDI+136],0
            mov EAX,R8D
            and RDI,-8
            mov R9D,257
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+428]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [R8+56],0
            mov DWORD PTR [R8+32],0
            mov ECX,DWORD PTR [R8+104]
            mov EDX,DWORD PTR [R8+52]
            mov RSI,QWORD PTR [R8+64]
            mov EDI,DWORD PTR [R8+36]
            add RCX,RSI
            mov RAX,RDX
            mov DWORD PTR [R8+24],EDI
            mov QWORD PTR [R8+88],RCX
            add RCX,RDX
            mov EDX,2863311531
            mul EDX
            mov RBX,RCX
            mov EAX,EDX
            mov EDX,EDI
            shr EAX,6
            not EDX
            imul EAX,EAX,84
            sub RBX,RAX
            cmp EDI,12
            mov EDI,4294967283
            cmovae EDX,EDI
            mov EDI,256
            mov QWORD PTR [R8+96],RBX
            mov DWORD PTR [R8+48],EDX
            mov DWORD PTR [R8+44],EDX
            lea RDX,QWORD PTR [RCX-12]
            mov RAX,RBX
            mov QWORD PTR [R8+80],RDX
            mov QWORD PTR [R8+8],RDX
            mov QWORD PTR [R8],RDX
            lea RDX,QWORD PTR [RBX+1536]
            mov DWORD PTR [RCX-4],0
            mov WORD PTR [RCX-12],DI
            mov WORD PTR [RCX-10],R9W
            mov QWORD PTR [R8+72],RDX
            mov RDX,RBX
            mov QWORD PTR [R8+16],RBX
            sub RDX,RSI
            mov DWORD PTR [RCX-8],EDX
            xor EDX,EDX
            nop
            nop
            nop
.L_43b700:

            mov BYTE PTR [RAX],DL
            xor ECX,ECX
            xor ESI,ESI
            add EDX,1
            mov BYTE PTR [RAX+1],1
            mov WORD PTR [RAX+2],CX
            mov WORD PTR [RAX+4],SI
            add RAX,6
            cmp EDX,256
            jne .L_43b700

            lea RBX,QWORD PTR [R8+2800]
            mov R9D,2
            mov R11D,16384
            nop
            nop
            nop
            nop
.L_43b738:

            lea RDI,QWORD PTR [RIP+.L_450060]
            lea R10,QWORD PTR [RBX+16]
            mov RSI,RBX
            mov EAX,15581
            nop
            nop
            nop
            nop
            nop
.L_43b750:

            xor EDX,EDX
            mov ECX,R11D
            div R9D
            lea RDX,QWORD PTR [RSI+128]
            sub ECX,EAX
            mov RAX,RSI
            nop
            nop
            nop
            nop
.L_43b768:

            mov WORD PTR [RAX],CX
            add RAX,16
            cmp RDX,RAX
            jne .L_43b768

            add RSI,2
            add RDI,2
            cmp R10,RSI
            je .L_43b790

            movzx EAX,WORD PTR [RDI]
            jmp .L_43b750
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b790:

            add R9D,1
            sub RBX,-128
            cmp R9D,130
            jne .L_43b738

            lea RAX,QWORD PTR [R8+1200]
            mov EDX,80
.L_43b7ad:

            lea RCX,QWORD PTR [RAX+64]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b7b8:

            mov BYTE PTR [RAX+2],3
            mov WORD PTR [RAX],DX
            add RAX,4
            mov BYTE PTR [RAX-1],4
            cmp RAX,RCX
            jne .L_43b7b8

            add EDX,40
            cmp DX,1080
            jne .L_43b7ad

            pop RBX

            ret 
.L_43b7d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b7e0:

            push RBX
            mov DWORD PTR [RDI+36],ESI
            mov RBX,RDI
            call .L_43b620

            mov DWORD PTR [RBX+1196],1074200576
            pop RBX
            ret 
.L_43b7f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b800:

            push R14
            push RBP
            push RBX
            sub RSP,8
.L_43b808:

            mov EAX,DWORD PTR [RDI+56]
            test EAX,EAX
            je .L_43b868
.L_43b80f:

            mov EDX,ESI
            jmp .L_43b82c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b818:

            mov R8D,EDX
            add R8,68
            mov EAX,DWORD PTR [RDI+R8*4+4]
            test EAX,EAX
            jne .L_43ba88
.L_43b82c:

            add EDX,1
            cmp EDX,38
            jne .L_43b818

            mov ESI,ESI
            movzx EAX,BYTE PTR [RDI+RSI*1+108]
            sub DWORD PTR [RDI+56],1
            lea EDX,DWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RDI+96]
            shl EDX,2
            mov RCX,RAX
            sub RCX,QWORD PTR [RDI+88]
            cmp EDX,ECX
            jae .L_43baae

            sub RAX,RDX
            mov QWORD PTR [RDI+96],RAX
.L_43b85f:

            add RSP,8
.L_43b863:

            pop RBX
            pop RBP
            pop R14
            ret 
.L_43b868:

            mov ECX,DWORD PTR [RDI+52]
            add ECX,DWORD PTR [RDI+104]
            xor EBP,EBP
            mov R10,QWORD PTR [RDI+64]
            mov DWORD PTR [RDI+56],255
            mov R11D,ECX
            mov EDX,ECX
            add R11,R10
            nop
            nop
            nop
            nop
            nop
.L_43b888:

            mov R8D,DWORD PTR [RDI+RBP*4+276]
            movzx EBX,BYTE PTR [RDI+RBP*1+108]
            mov DWORD PTR [RDI+RBP*4+276],0
            test R8D,R8D
            jne .L_43b8b3

            jmp .L_43ba70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b8b0:

            mov R8D,R9D
.L_43b8b3:

            mov EAX,R8D
            xor R14D,R14D
            add RAX,R10
            mov DWORD PTR [RAX+4],EDX
            mov DWORD PTR [R10+RDX*1+8],R8D
            mov EDX,R8D
            mov R9D,DWORD PTR [RAX]
            mov WORD PTR [RAX],R14W
            mov WORD PTR [RAX+2],BX
            test R9D,R9D
            jne .L_43b8b0

            add RBP,1
            cmp RBP,38
            jne .L_43b888
.L_43b8e1:

            mov R9D,1
            mov DWORD PTR [R11+4],EDX
            mov WORD PTR [R11],R9W
            mov DWORD PTR [RAX+8],ECX
            mov RAX,QWORD PTR [RDI+72]
            cmp RAX,QWORD PTR [RDI+80]
            je .L_43b906

            mov R8D,1
            mov WORD PTR [RAX],R8W
.L_43b906:

            cmp ECX,EDX
            je .L_43ba40

            nop
            nop
.L_43b910:

            lea RBX,QWORD PTR [R10+RDX*1]
            movzx R8D,WORD PTR [RBX+2]
            mov RAX,R8
            jmp .L_43b945
          .byte 0x66
          .byte 0x90
.L_43b920:

            cmp R8D,65535
            ja .L_43b95e

            mov EBP,DWORD PTR [RAX+8]
            mov R14D,DWORD PTR [RAX+4]
            mov DWORD PTR [R10+RBP*1+4],R14D
            mov EAX,DWORD PTR [RAX+4]
            mov DWORD PTR [R10+RAX*1+8],EBP
            mov WORD PTR [RBX+2],R8W
            mov EAX,R8D
.L_43b945:

            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RDX+RAX*4]
            add RAX,R10
            movzx R9D,WORD PTR [RAX+2]
            add R8D,R9D
            cmp WORD PTR [RAX],0
            je .L_43b920
.L_43b95e:

            mov EDX,DWORD PTR [RBX+4]
            cmp ECX,EDX
            jne .L_43b910

            mov EBX,DWORD PTR [R11+4]
            cmp EDX,EBX
            je .L_43ba40

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b978:

            mov EAX,EBX
            add RAX,R10
            movzx EBP,WORD PTR [RAX+2]
            mov EBX,DWORD PTR [RAX+4]
            cmp EBP,128
            jbe .L_43b9d9

            lea R11D,DWORD PTR [RBP-129]
            mov R8D,DWORD PTR [RDI+424]
            shr R11D,7
            mov ECX,R11D
            lea R9,QWORD PTR [RCX+RCX*2+3]
            shl R9,9
            add R9,RAX
            nop
            nop
            nop
.L_43b9b0:

            mov DWORD PTR [RAX],R8D
            mov RCX,RAX
            add RAX,1536
            sub RCX,R10
            cmp RAX,R9
            mov R8D,ECX
            mov DWORD PTR [RDI+424],ECX
            jne .L_43b9b0

            neg R11D
            shl R11D,7
            lea EBP,DWORD PTR [RBP+R11*1-128]
.L_43b9d9:

            lea ECX,DWORD PTR [RBP-1]
            mov R8,RCX
            movzx ECX,BYTE PTR [RDI+RCX*1+146]
            movzx R11D,BYTE PTR [RDI+RCX*1+108]
            cmp R11D,EBP
            je .L_43ba21

            lea ECX,DWORD PTR [RCX-1]
            movzx R9D,BYTE PTR [RDI+RCX*1+108]
            mov R11,R9
            lea R9,QWORD PTR [R9+R9*2]
            sub R8D,R11D
            lea R8,QWORD PTR [RDI+R8*4]
            lea R9,QWORD PTR [RAX+R9*4]
            mov R11D,DWORD PTR [R8+276]
            mov DWORD PTR [R9],R11D
            sub R9,R10
            mov DWORD PTR [R8+276],R9D
.L_43ba21:

            lea RCX,QWORD PTR [RDI+RCX*4]
            mov R8D,DWORD PTR [RCX+276]
            mov DWORD PTR [RAX],R8D
            sub RAX,R10
            cmp EDX,EBX
            mov DWORD PTR [RCX+276],EAX
            jne .L_43b978
.L_43ba40:

            mov EAX,ESI
            lea RDX,QWORD PTR [RDI+RAX*4]
            mov EAX,DWORD PTR [RDX+276]
            test EAX,EAX
            je .L_43b80f

            add RAX,R10
            mov ECX,DWORD PTR [RAX]
            mov DWORD PTR [RDX+276],ECX
            add RSP,8
.L_43ba63:

            pop RBX
            pop RBP
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ba70:

            mov EAX,EDX
            add RBP,1
            add RAX,R10
            cmp RBP,38
            jne .L_43b888

            jmp .L_43b8e1
.L_43ba88:

            add RAX,QWORD PTR [RDI+64]
            mov ECX,ESI
            mov ESI,DWORD PTR [RAX]
            mov QWORD PTR [RSP],RAX
            mov DWORD PTR [RDI+R8*4+4],ESI
            mov RSI,RAX
            call .L_43adb0

            mov RAX,QWORD PTR [RSP]
            add RSP,8
            pop RBX
            pop RBP
            pop R14
            ret 
.L_43baae:

            xor EAX,EAX
            jmp .L_43b85f
.L_43bab5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bac0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,552
.L_43bad4:

            mov R10,QWORD PTR [RDI+16]
            mov R12,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            xor EDI,EDI
            test ESI,ESI
            mov R13D,DWORD PTR [R10+2]
            jne .L_43bb02

            mov QWORD PTR [RSP+16],R10
            mov EDI,1
.L_43bb02:

            mov EAX,DWORD PTR [R12+8]
            mov R8,QWORD PTR [RBP+64]
            test EAX,EAX
            je .L_43bd0b

            nop
            nop
            nop
            nop
            nop
.L_43bb18:

            lea R12,QWORD PTR [R8+RAX*1]
            movzx R9D,WORD PTR [R12]
            mov ESI,DWORD PTR [R12+4]
            lea RCX,QWORD PTR [R12+2]
            cmp R9W,1
            je .L_43bb57

            mov EDX,ESI
            movzx EAX,BYTE PTR [R10]
            add RDX,R8
            cmp AL,BYTE PTR [RDX]
            jne .L_43bb4b

            jmp .L_43bcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43bb48:

            mov RDX,RCX
.L_43bb4b:

            cmp BYTE PTR [RDX+6],AL
            lea RCX,QWORD PTR [RDX+6]
            jne .L_43bb48

            mov ESI,DWORD PTR [RDX+8]
.L_43bb57:

            cmp R13D,ESI
            jne .L_43bb78

            mov EAX,DWORD PTR [R12+8]
            lea ESI,DWORD PTR [RDI+1]
            mov QWORD PTR [RSP+RDI*8+16],RCX
            test EAX,EAX
            je .L_43bb8e

            mov EDI,ESI
            jmp .L_43bb18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bb78:

            mov EAX,ESI
            add RAX,R8
            test EDI,EDI
            je .L_43bc98

            movzx R9D,WORD PTR [RAX]
            mov ESI,EDI
            mov R12,RAX
.L_43bb8e:

            mov EAX,R13D
            add R13D,1
            mov R15D,R13D
            shr R13D,16
            cmp R9W,1
            movzx R14D,BYTE PTR [R8+RAX*1]
            je .L_43bd00

            mov EAX,DWORD PTR [R12+4]
            add RAX,R8
            cmp BYTE PTR [RAX],R14B
            je .L_43bbc9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bbc0:

            add RAX,6
            cmp R14B,BYTE PTR [RAX]
            jne .L_43bbc0
.L_43bbc9:

            movzx EDX,BYTE PTR [RAX+1]
            movzx EAX,WORD PTR [R12+2]
            sub EDX,1
            sub EAX,R9D
            lea ECX,DWORD PTR [RDX+RDX*1]
            sub EAX,EDX
            cmp ECX,EAX
            jbe .L_43bc80

            lea EDI,DWORD PTR [RAX+RAX*1]
            xor EDX,EDX
            add EAX,EDI
            lea EAX,DWORD PTR [RCX+RAX*1-1]
            div EDI
            lea ECX,DWORD PTR [RAX+1]
.L_43bbf6:

            test ESI,ESI
            je .L_43bc90

            lea EAX,DWORD PTR [RSI-1]
            lea R9,QWORD PTR [RSP+8]
            lea RBX,QWORD PTR [RSP+RAX*8+16]
            jmp .L_43bc58
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bc10:

            sub RAX,12
            mov QWORD PTR [RBP+80],RAX
.L_43bc18:

            mov RSI,QWORD PTR [RBX]
            mov EDX,1
            sub R12,R8
            mov WORD PTR [RAX],DX
            mov RDX,RAX
            sub RBX,8
            sub RDX,R8
            mov DWORD PTR [RAX+8],R12D
            mov BYTE PTR [RAX+2],R14B
            mov BYTE PTR [RAX+3],CL
            mov WORD PTR [RAX+4],R15W
            mov R12,RAX
            mov WORD PTR [RAX+6],R13W
            mov WORD PTR [RSI+2],DX
            shr EDX,16
            cmp RBX,R9
            mov WORD PTR [RSI+4],DX
            je .L_43bc98
.L_43bc58:

            mov RAX,QWORD PTR [RBP+80]
            cmp RAX,QWORD PTR [RBP+72]
            jne .L_43bc10

            mov EAX,DWORD PTR [RBP+276]
            test EAX,EAX
            je .L_43bcc0

            add RAX,R8
            mov EDX,DWORD PTR [RAX]
            mov DWORD PTR [RBP+276],EDX
            jmp .L_43bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bc80:

            lea EDX,DWORD PTR [RDX+RDX*4]
            cmp EDX,EAX
            seta CL
            add ECX,1
            jmp .L_43bbf6
.L_43bc90:

            mov RAX,R12
            nop
            nop
            nop
            nop
            nop
.L_43bc98:

            mov RBX,QWORD PTR [RSP+536]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43bd17

            add RSP,552
.L_43bcb2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bcc0:

            xor ESI,ESI
            mov RDI,RBP
            mov QWORD PTR [RSP+8],R9
            mov BYTE PTR [RSP+7],CL
            call .L_43b800

            test RAX,RAX
            je .L_43bc98

            mov R8,QWORD PTR [RBP+64]
            mov R9,QWORD PTR [RSP+8]
            movzx ECX,BYTE PTR [RSP+7]
            jmp .L_43bc18
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bcf0:

            mov ESI,DWORD PTR [RDX+2]
            mov RCX,RDX
            jmp .L_43bb57
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bd00:

            movzx ECX,BYTE PTR [R12+3]
            jmp .L_43bbf6
.L_43bd0b:

            movzx R9D,WORD PTR [R12]
            mov ESI,EDI
            jmp .L_43bb8e
.L_43bd17:

            call __stack_chk_fail@PLT
.L_43bd1c:

            nop
            nop
            nop
            nop
.L_43bd20:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_43bd27:

            mov RAX,QWORD PTR [RDI+40]
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            xor EDX,EDX
            test AL,AL
            jne .L_43bd72

            mov EBX,DWORD PTR [RBP+28]
            mov QWORD PTR [RBP+32],0
            mov R12D,4
            mov DWORD PTR [RBP+24],4294967295
.L_43bd4f:

            mov RAX,QWORD PTR [RBP+40]
            shl EBX,8
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            movzx EAX,AL
            or EBX,EAX
            sub R12D,1
            mov DWORD PTR [RBP+28],EBX
            jne .L_43bd4f

            xor EDX,EDX
            cmp EBX,-1
            setne DL
.L_43bd72:

            pop RBX
.L_43bd73:

            mov EAX,EDX
            pop RBP
            pop R12
            ret 
.L_43bd79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bd80:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov ESI,16384
            sub RSP,8
            call QWORD PTR [RDI]

            cmp EAX,EBP
            jb .L_43bdb8

            mov EDX,16384
            mov ESI,EBP
            mov RDI,RBX
            sub EDX,EBP
            call QWORD PTR [RBX+8]

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bdb8:

            mov EDX,EBP
            mov RDI,RBX
            xor ESI,ESI
            call QWORD PTR [RBX+8]

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_43bdcb:

            nop
            nop
            nop
            nop
            nop
.L_43bdd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_43bde1:

            mov RAX,QWORD PTR [RDI+16]
            cmp BYTE PTR [RAX+1],30
            mov ESI,DWORD PTR [RAX+2]
            mov DWORD PTR [RSP+4],ESI
            ja .L_43be00

            mov RDX,QWORD PTR [RDI]
            mov ECX,DWORD PTR [RDX+8]
            test ECX,ECX
            jne .L_43c040
.L_43be00:

            mov EDX,DWORD PTR [RBP+24]
            test EDX,EDX
            je .L_43c1f0

            mov RDX,QWORD PTR [RBP+88]
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBP+88],RCX
            movzx EAX,BYTE PTR [RAX]
            mov BYTE PTR [RDX],AL
            mov RAX,QWORD PTR [RBP+88]
            cmp RAX,QWORD PTR [RBP+96]
            jae .L_43c0d0

            mov RSI,QWORD PTR [RBP+64]
            mov EDI,DWORD PTR [RSP+4]
            sub RAX,RSI
            test EDI,EDI
            mov R8D,EAX
            je .L_43c2a0

            cmp EDI,EAX
            jbe .L_43c300
.L_43be48:

            mov EAX,DWORD PTR [RBP+24]
            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+16]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBP+24],EAX
            je .L_43c2c8
.L_43be65:

            movzx R14D,WORD PTR [RDX]
            movzx EAX,WORD PTR [RDX+2]
            movzx ECX,BYTE PTR [RCX+1]
            sub EAX,R14D
            sub EAX,ECX
            cmp RDX,RBX
            lea R10D,DWORD PTR [RAX+1]
            je .L_43c372

            mov EAX,R8D
            shr EAX,16
            mov R9D,EAX
            nop
            nop
            nop
            nop
.L_43be90:

            movzx R13D,WORD PTR [RBX]
            cmp R13D,1
            mov R12D,R13D
            je .L_43c148

            test R13B,1
            jne .L_43c0f0

            mov EAX,R13D
            shr EAX,1
            lea EDX,DWORD PTR [RAX-1]
            movzx R15D,BYTE PTR [RBP+RDX*1+146]
            cmp R15B,BYTE PTR [RBP+RAX*1+146]
            je .L_43c0f0

            movzx ESI,R15B
            lea EDI,DWORD PTR [RSI+1]
            lea RCX,QWORD PTR [RBP+RDI*4]
            mov RSI,RDI
            mov EAX,DWORD PTR [RCX+276]
            test EAX,EAX
            je .L_43c230

            mov RSI,QWORD PTR [RBP+64]
            add RAX,RSI
            mov EDI,DWORD PTR [RAX]
            mov DWORD PTR [RCX+276],EDI
.L_43bef6:

            mov ECX,DWORD PTR [RBX+4]
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            mov QWORD PTR [RSP+16],RAX
            lea R11,QWORD PTR [RAX+RDX*4]
            mov RDX,RAX
            mov RDI,RCX
            add RCX,RSI
            mov QWORD PTR [RSP+8],RCX
            nop
            nop
            nop
.L_43bf18:

            mov EAX,DWORD PTR [RCX]
            add RDX,12
            add RCX,12
            mov DWORD PTR [RDX-12],EAX
            mov EAX,DWORD PTR [RCX-8]
            mov DWORD PTR [RDX-8],EAX
            mov EAX,DWORD PTR [RCX-4]
            mov DWORD PTR [RDX-4],EAX
            cmp RDX,R11
            jne .L_43bf18

            lea RDX,QWORD PTR [RBP+R15*4]
            mov RAX,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RDX+276]
            sub RAX,RSI
            mov DWORD PTR [R11],ECX
            mov DWORD PTR [RDX+276],EDI
            mov EDI,EAX
            mov DWORD PTR [RBX+4],EAX
.L_43bf5c:

            movzx R11D,WORD PTR [RBX+2]
            lea EDX,DWORD PTR [R13*4]
            lea ECX,DWORD PTR [R13*8]
            cmp EDX,R14D
            setbe DL
            cmp R11D,ECX
            mov EAX,R11D
            setbe CL
            add R13D,R13D
            and EDX,ECX
            cmp R13D,R14D
            movzx EDX,DL
            adc AX,0
            lea EAX,DWORD PTR [RAX+RDX*2]
            mov WORD PTR [RBX+2],AX
.L_43bf96:

            mov R11,QWORD PTR [RBP+16]
            movzx EDX,AX
            lea R13D,DWORD PTR [RDX+6]
            add EDX,R10D
            movzx ECX,BYTE PTR [R11+1]
            add ECX,ECX
            imul ECX,R13D
            lea R13D,DWORD PTR [RDX+RDX*2]
            lea R15D,DWORD PTR [R13+R13*1]
            cmp R15D,ECX
            jbe .L_43c100

            xor R13D,R13D
            cmp ECX,EDX
            seta R13B
            shl EDX,2
            cmp EDX,ECX
            setbe DL
            add EAX,3
            movzx EDX,DL
            mov WORD PTR [RBX+2],AX
            lea EDX,DWORD PTR [R13+RDX*1+1]
.L_43bfe1:

            movzx EAX,R12W
            add R12D,1
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RDI+RAX*2]
            add RAX,RSI
            mov WORD PTR [RAX+2],R8W
            mov WORD PTR [RAX+4],R9W
            movzx ECX,BYTE PTR [R11]
            mov BYTE PTR [RAX+1],DL
            mov BYTE PTR [RAX],CL
            mov WORD PTR [RBX],R12W
            mov EBX,DWORD PTR [RBX+8]
            add RBX,RSI
            cmp QWORD PTR [RBP],RBX
            jne .L_43be90
.L_43c01b:

            mov EAX,DWORD PTR [RSP+4]
            add RSI,RAX
            mov QWORD PTR [RBP],RSI
            mov QWORD PTR [RBP+8],RSI
            add RSP,40
.L_43c02e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c040:

            mov RDX,QWORD PTR [RDI+64]
            lea RSI,QWORD PTR [RDX+RCX*1]
            cmp WORD PTR [RSI],1
            je .L_43c2e0

            mov ECX,DWORD PTR [RSI+4]
            movzx EDI,BYTE PTR [RAX]
            add RDX,RCX
            cmp BYTE PTR [RDX],DIL
            jne .L_43c06b

            jmp .L_43c365
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c068:

            mov RDX,RCX
.L_43c06b:

            cmp DIL,BYTE PTR [RDX+6]
            lea RCX,QWORD PTR [RDX+6]
            jne .L_43c068

            movzx R8D,BYTE PTR [RCX+1]
            cmp R8B,BYTE PTR [RDX+1]
            jb .L_43c0ae

            mov R11D,DWORD PTR [RDX]
            movzx R10D,WORD PTR [RCX+2]
            movzx R9D,WORD PTR [RCX+4]
            mov DWORD PTR [RCX],R11D
            movzx R11D,WORD PTR [RDX+4]
            mov WORD PTR [RCX+4],R11W
            mov BYTE PTR [RDX],DIL
            mov RCX,RDX
            mov BYTE PTR [RDX+1],R8B
            mov WORD PTR [RDX+2],R10W
            mov WORD PTR [RDX+4],R9W
.L_43c0ae:

            cmp R8B,114
            ja .L_43be00

            add R8D,2
            mov BYTE PTR [RCX+1],R8B
            add WORD PTR [RSI+2],2
            jmp .L_43be00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c0d0:

            add RSP,40
.L_43c0d4:

            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_43b620
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c0f0:

            mov EDI,DWORD PTR [RBX+4]
            mov RSI,QWORD PTR [RBP+64]
            jmp .L_43bf5c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c100:

            lea R15D,DWORD PTR [RDX+RDX*8]
            cmp R15D,ECX
            setbe R15B
            shl R13D,2
            cmp R13D,ECX
            movzx R15D,R15B
            setbe R13B
            movzx R13D,R13B
            lea R15D,DWORD PTR [R15+R13*1+4]
            mov R13D,EDX
            shl R13D,4
            sub R13D,EDX
            xor EDX,EDX
            cmp R13D,ECX
            setbe DL
            add EDX,R15D
            add EAX,EDX
            mov WORD PTR [RBX+2],AX
            jmp .L_43bfe1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c148:

            mov EAX,DWORD PTR [RBP+276]
            test EAX,EAX
            je .L_43c1b8

            mov RSI,QWORD PTR [RBP+64]
            add RAX,RSI
            mov EDX,DWORD PTR [RAX]
            mov DWORD PTR [RBP+276],EDX
.L_43c161:

            mov EDX,DWORD PTR [RBX+2]
            mov DWORD PTR [RAX],EDX
            movzx EDX,WORD PTR [RBX+6]
            mov WORD PTR [RAX+4],DX
            mov RDX,RAX
            sub RDX,RSI
            mov EDI,EDX
            mov DWORD PTR [RBX+4],EDX
            movzx EDX,BYTE PTR [RAX+1]
            cmp DL,29
            ja .L_43c1a8

            add EDX,EDX
            mov BYTE PTR [RAX+1],DL
            movzx EDX,DL
.L_43c18a:

            xor EAX,EAX
            cmp R14D,3
            seta AL
            add AX,WORD PTR [RBP+28]
            add EAX,EDX
            mov WORD PTR [RBX+2],AX
            jmp .L_43bf96
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c1a8:

            mov BYTE PTR [RAX+1],120
            mov EDX,120
            jmp .L_43c18a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c1b8:

            movzx EAX,BYTE PTR [RBP+108]
            mov RCX,QWORD PTR [RBP+80]
            lea EDX,DWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RBP+72]
            shl EDX,2
            sub RCX,RAX
            cmp EDX,ECX
            ja .L_43c270

            add RDX,RAX
            mov QWORD PTR [RBP+72],RDX
.L_43c1dc:

            test RAX,RAX
            je .L_43c0d0

            mov RSI,QWORD PTR [RBP+64]
            jmp .L_43c161
          .byte 0x66
          .byte 0x90
.L_43c1f0:

            mov ESI,1
            mov RDI,RBP
            call .L_43bac0

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            mov QWORD PTR [RBP],RAX
            je .L_43c0d0

            sub RAX,QWORD PTR [RBP+64]
            mov RDX,QWORD PTR [RBP+16]
            mov WORD PTR [RDX+2],AX
            shr EAX,16
            mov WORD PTR [RDX+4],AX
            add RSP,40
.L_43c225:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43c230:

            movzx EAX,BYTE PTR [RBP+RDI*1+108]
            mov RDI,QWORD PTR [RBP+80]
            lea ECX,DWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RBP+72]
            shl ECX,2
            sub RDI,RAX
            cmp ECX,EDI
            ja .L_43c330

            add RCX,RAX
            mov QWORD PTR [RBP+72],RCX
.L_43c255:

            test RAX,RAX
            je .L_43c0d0

            mov RSI,QWORD PTR [RBP+64]
            jmp .L_43bef6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c270:

            xor ESI,ESI
            mov RDI,RBP
            mov DWORD PTR [RSP+24],R9D
            mov DWORD PTR [RSP+16],R10D
            mov DWORD PTR [RSP+8],R8D
            call .L_43b800

            mov R9D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+16]
            mov R8D,DWORD PTR [RSP+8]
            jmp .L_43c1dc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c2a0:

            mov RCX,QWORD PTR [RBP+16]
            mov RDX,QWORD PTR [RBP]
            mov RBX,QWORD PTR [RBP+8]
            mov WORD PTR [RCX+2],AX
            shr EAX,16
            mov WORD PTR [RCX+4],AX
            mov EAX,EDX
            sub EAX,ESI
            mov DWORD PTR [RSP+4],EAX
            jmp .L_43be65
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c2c8:

            xor EAX,EAX
            cmp RBX,RDX
            mov R8D,DWORD PTR [RSP+4]
            setne AL
            sub QWORD PTR [RBP+88],RAX
            jmp .L_43be65
          .byte 0x66
          .byte 0x90
.L_43c2e0:

            movzx EDX,BYTE PTR [RSI+3]
            cmp DL,31
            ja .L_43be00

            add EDX,1
            mov BYTE PTR [RSI+3],DL
            jmp .L_43be00
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c300:

            xor ESI,ESI
            mov RDI,RBP
            mov DWORD PTR [RSP+8],EAX
            call .L_43bac0

            test RAX,RAX
            je .L_43c0d0

            sub EAX,DWORD PTR [RBP+64]
            mov R8D,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+4],EAX
            jmp .L_43be48
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c330:

            mov RDI,RBP
            mov DWORD PTR [RSP+28],R9D
            mov DWORD PTR [RSP+24],R10D
            mov DWORD PTR [RSP+16],R8D
            mov QWORD PTR [RSP+8],RDX
            call .L_43b800

            mov R9D,DWORD PTR [RSP+28]
            mov R10D,DWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            jmp .L_43c255
.L_43c365:

            movzx R8D,BYTE PTR [RDX+1]
            mov RCX,RDX
            jmp .L_43c0ae
.L_43c372:

            mov RSI,QWORD PTR [RBP+64]
            jmp .L_43c01b
.L_43c37b:

            nop
            nop
            nop
            nop
            nop
.L_43c380:

            mov EDX,DWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDI+16]
            test EDX,EDX
            jne .L_43c398

            mov EAX,DWORD PTR [RAX+2]
            add RAX,QWORD PTR [RDI+64]
            cmp QWORD PTR [RDI+88],RAX
            jb .L_43c3a0
.L_43c398:

            jmp .L_43bdd0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c3a0:

            mov QWORD PTR [RDI+8],RAX
            mov QWORD PTR [RDI],RAX
            ret 
.L_43c3a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c3b0:

            push RBX
.L_43c3b1:

            mov RAX,QWORD PTR [RDI+16]
            mov RBX,RDI
            movzx ESI,BYTE PTR [RAX+1]
            lea EDX,DWORD PTR [RSI+4]
            mov BYTE PTR [RAX+1],DL
            mov RCX,QWORD PTR [RDI]
            add WORD PTR [RCX+2],4
            cmp DL,BYTE PTR [RAX-5]
            jbe .L_43c407

            mov R8D,DWORD PTR [RAX-6]
            movzx EDI,BYTE PTR [RAX]
            sub RAX,6
            movzx ESI,WORD PTR [RAX+8]
            movzx ECX,WORD PTR [RAX+10]
            mov BYTE PTR [RAX+1],DL
            mov DWORD PTR [RAX+6],R8D
            movzx R8D,WORD PTR [RAX+4]
            mov BYTE PTR [RAX],DIL
            mov WORD PTR [RAX+2],SI
            mov WORD PTR [RAX+4],CX
            mov WORD PTR [RAX+10],R8W
            cmp DL,124
            mov QWORD PTR [RBX+16],RAX
            ja .L_43c410
.L_43c407:

            mov RDI,RBX
            pop RBX
.L_43c40b:

            jmp .L_43c380
.L_43c410:

            mov RDI,RBX
            call .L_43ae30

            mov RDI,RBX
            pop RBX
            jmp .L_43c380
.L_43c421:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c430:

            push RBX

            mov RSI,QWORD PTR [RDI+16]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            movzx ECX,BYTE PTR [RSI+1]
            movzx R8D,WORD PTR [RDI+2]
            mov EAX,ECX
            add ECX,ECX
            cmp ECX,R8D
            mov EDX,R8D
            setg CL
            add EAX,4
            add EDX,4
            movzx ECX,CL
            add DWORD PTR [RBX+44],ECX
            cmp AL,124
            mov DWORD PTR [RBX+32],ECX
            mov WORD PTR [RDI+2],DX
            mov BYTE PTR [RSI+1],AL
            jbe .L_43c473

            mov RDI,RBX
            call .L_43ae30
.L_43c473:

            mov RDI,RBX
            pop RBX

            jmp .L_43c380
.L_43c47c:

            nop
            nop
            nop
            nop
.L_43c480:

            mov RDX,QWORD PTR [RDI+16]
            movzx ECX,BYTE PTR [RDX+1]
            mov EAX,ECX
            not EAX
            shr AL,7
            add EAX,ECX
            mov BYTE PTR [RDX+1],AL
            add DWORD PTR [RDI+44],1
            mov DWORD PTR [RDI+32],1
            jmp .L_43c380
.L_43c4a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c4b0:

            push RBX
            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            mov RDX,QWORD PTR [RDI+16]
            add WORD PTR [RAX+2],4
            movzx EAX,BYTE PTR [RDX+1]
            add EAX,4
            cmp AL,124
            mov BYTE PTR [RDX+1],AL
            jbe .L_43c4d3

            call .L_43ae30
.L_43c4d3:

            mov EAX,DWORD PTR [RBX+48]
            mov RDI,RBX
            mov DWORD PTR [RBX+44],EAX
            pop RBX
            jmp .L_43bdd0
.L_43c4e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c4f0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,2360
.L_43c507:

            mov RBP,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+2344],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI]
            cmp WORD PTR [RAX],1
            je .L_43c590

            mov EDX,DWORD PTR [RAX+4]
            movzx ESI,WORD PTR [RAX+2]
            mov RDI,R13
            add RBP,RDX
            call QWORD PTR [R13]

            movzx ESI,BYTE PTR [RBP+1]
            cmp EAX,ESI
            jae .L_43c790

            mov EDX,ESI
            mov RDI,R13
            xor ESI,ESI
            call QWORD PTR [R13+8]

            mov QWORD PTR [RBX+16],RBP
            movzx EBP,BYTE PTR [RBP]
            mov RDI,RBX
            call .L_43c430

            movzx EAX,BPL
.L_43c563:

            mov RCX,QWORD PTR [RSP+2344]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43c963

            add RSP,2360
.L_43c581:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c590:

            mov EDX,DWORD PTR [RAX+8]
            movzx ECX,BYTE PTR [RAX+3]
            movzx EDX,WORD PTR [RBP+RDX*1]
            sub ECX,1
            sub EDX,1
            movsxd RDX,EDX
            movzx EDI,BYTE PTR [RDI+RDX*1+684]
            mov RDX,QWORD PTR [RBX+16]
            movzx EDX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RBX+RDX*1+940]
            mov EDX,DWORD PTR [RBX+44]
            sar EDX,26
            mov DWORD PTR [RBX+40],ESI
            movzx EAX,BYTE PTR [RAX+2]
            and EDX,32
            add EDX,DWORD PTR [RBX+32]
            movzx EAX,BYTE PTR [RBX+RAX*1+940]
            add EDX,ESI
            lea EAX,DWORD PTR [RDX+RAX*2]
            lea EDX,DWORD PTR [RAX+RDI*1]
            movsxd RAX,ECX
            mov RDI,R13
            shl RAX,6
            add RAX,RDX
            lea RBP,QWORD PTR [RBX+RAX*2]
            movzx ESI,WORD PTR [RBP+2800]
            call QWORD PTR [R13+16]

            test EAX,EAX
            je .L_43c7f0

            movzx EDX,WORD PTR [RBP+2800]
            lea RCX,QWORD PTR [RSP+288]
            mov EAX,EDX
            add EDX,32
            sar EDX,7
            sub EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_450050]
            mov WORD PTR [RBP+2800],AX
            shr AX,10
            and EAX,63
            movzx EAX,BYTE PTR [RDX+RAX*1]
            mov RDX,-1
            mov DWORD PTR [RBX+28],EAX
            lea RAX,QWORD PTR [RSP+32]
.L_43c644:

            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            add RAX,64
            mov QWORD PTR [RAX-48],RDX
            mov QWORD PTR [RAX-40],RDX
            mov QWORD PTR [RAX-32],RDX
            mov QWORD PTR [RAX-24],RDX
            mov QWORD PTR [RAX-16],RDX
            mov QWORD PTR [RAX-8],RDX
            cmp RCX,RAX
            jne .L_43c644

            mov RAX,QWORD PTR [RBX]
            movzx EDX,BYTE PTR [RAX+2]
            movzx ESI,WORD PTR [RAX]
            mov DWORD PTR [RBX+32],0
            mov BYTE PTR [RSP+RDX*1+32],0
.L_43c682:

            lea RCX,QWORD PTR [RSP+28]
            lea R14,QWORD PTR [RSP+280]
            mov QWORD PTR [RSP],RCX
            lea RCX,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+8],RCX
.L_43c6a0:

            mov EDX,DWORD PTR [RBX+24]
            jmp .L_43c6ba
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c6a8:

            mov RDI,QWORD PTR [RBX+64]
            add RAX,RDI
            movzx ECX,WORD PTR [RAX]
            mov QWORD PTR [RBX],RAX
            cmp CX,SI
            jne .L_43c6d8
.L_43c6ba:

            mov EAX,DWORD PTR [RAX+8]
            add EDX,1
            test EAX,EAX
            jne .L_43c6a8

            mov DWORD PTR [RBX+24],EDX
            mov EAX,4294967295
            jmp .L_43c563
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c6d8:

            mov EAX,DWORD PTR [RAX+4]
            sub ECX,ESI
            mov DWORD PTR [RBX+24],EDX
            mov EBP,ECX
            xor EDX,EDX
            xor R12D,R12D
            add RAX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c6f0:

            movzx R9D,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            movsx R9D,BYTE PTR [RSP+R9*1+32]
            and EDI,R9D
            add R12D,EDI
            mov EDI,EDX
            sub EDX,R9D
            mov QWORD PTR [RSP+RDI*8+288],RAX
            add RAX,6
            cmp EBP,EDX
            jne .L_43c6f0

            mov RDX,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_43b140

            mov ESI,DWORD PTR [RSP+28]
            mov R15,RAX
            mov RDI,R13
            add ESI,R12D
            mov DWORD PTR [RSP+28],ESI
            call QWORD PTR [R13]

            cmp R12D,EAX
            ja .L_43c8d7

            mov EDX,DWORD PTR [RSP+28]
            cmp EDX,EAX
            jbe .L_43c953

            sub EDX,R12D
            mov ESI,R12D
            mov RDI,R13
            call QWORD PTR [R13+8]

            mov RCX,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RSP+28]
            add WORD PTR [R15],AX
            lea EAX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [RCX+RAX*8]
.L_43c770:

            mov RDX,QWORD PTR [RAX]
            sub RAX,8
            cmp R14,RAX
            movzx EDX,BYTE PTR [RDX]
            mov BYTE PTR [RSP+RDX*1+32],0
            jne .L_43c770

            mov RAX,QWORD PTR [RBX]
            movzx ESI,WORD PTR [RAX]
            jmp .L_43c6a0
          .byte 0x90
.L_43c790:

            mov R8,QWORD PTR [RBX]
            mov DWORD PTR [RBX+32],0
            movzx EDX,WORD PTR [R8]
            sub EDX,2
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            lea RDI,QWORD PTR [RBP+RDX*2]
            jmp .L_43c7b7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c7b0:

            cmp RBP,RDI
            mov ESI,ECX
            je .L_43c830
.L_43c7b7:

            add RBP,6
            movzx EDX,BYTE PTR [RBP+1]
            lea ECX,DWORD PTR [RDX+RSI*1]
            cmp EAX,ECX
            jae .L_43c7b0

            mov RDI,R13
            call QWORD PTR [R13+8]

            mov QWORD PTR [RBX+16],RBP
            movzx EBP,BYTE PTR [RBP]
            mov RDI,RBX
            call .L_43c3b0

            movzx EAX,BPL
            jmp .L_43c563
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c7f0:

            movzx EAX,WORD PTR [RBP+2800]
            mov RDI,RBX
            lea EDX,DWORD PTR [RAX+128]
            add EAX,32
            sar EAX,7
            sub EDX,EAX
            mov RAX,QWORD PTR [RBX]
            mov WORD PTR [RBP+2800],DX
            lea RDX,QWORD PTR [RAX+2]
            mov QWORD PTR [RBX+16],RDX
            movzx EBP,BYTE PTR [RAX+2]
            call .L_43c480

            movzx EAX,BPL
            jmp .L_43c563
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c830:

            movzx EDX,WORD PTR [R8+2]
            cmp EDX,EAX
            jbe .L_43c953

            mov RAX,QWORD PTR [RBX+16]
            sub EDX,ECX
            mov RDI,R13
            movzx EAX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RBX+RAX*1+940]
            mov DWORD PTR [RBX+40],EAX
            call QWORD PTR [R13+8]

            lea RAX,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RSP+288]
            mov RDX,-1
.L_43c86c:

            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            add RAX,64
            mov QWORD PTR [RAX-48],RDX
            mov QWORD PTR [RAX-40],RDX
            mov QWORD PTR [RAX-32],RDX
            mov QWORD PTR [RAX-24],RDX
            mov QWORD PTR [RAX-16],RDX
            mov QWORD PTR [RAX-8],RDX
            cmp RCX,RAX
            jne .L_43c86c

            movzx EAX,BYTE PTR [RBP]
            mov BYTE PTR [RSP+RAX*1+32],0
            mov RAX,QWORD PTR [RBX]
            movzx EDX,WORD PTR [RAX]
            mov ESI,EDX
            sub EDX,2
            add RDX,1
            lea RCX,QWORD PTR [RDX*4]
            sub RDX,RCX
            lea RCX,QWORD PTR [RBP+RDX*2]
            nop
            nop
            nop
            nop
.L_43c8c0:

            sub RBP,6
            movzx EDX,BYTE PTR [RBP]
            cmp RBP,RCX
            mov BYTE PTR [RSP+RDX*1+32],0
            jne .L_43c8c0

            jmp .L_43c682
.L_43c8d7:

            mov RBP,QWORD PTR [RSP+288]
            movzx ESI,BYTE PTR [RBP+1]
            cmp ESI,EAX
            ja .L_43c95d

            lea RCX,QWORD PTR [RSP+288]
            jmp .L_43c8fa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c8f8:

            mov ESI,EDI
.L_43c8fa:

            add RCX,8
            mov RBP,QWORD PTR [RCX]
            movzx EDX,BYTE PTR [RBP+1]
            lea EDI,DWORD PTR [RSI+RDX*1]
            cmp EAX,EDI
            jae .L_43c8f8
.L_43c90c:

            mov RDI,R13
            call QWORD PTR [R13+8]

            movzx ECX,BYTE PTR [R15+2]
            cmp CL,6
            ja .L_43c93a

            sub BYTE PTR [R15+3],1
            jne .L_43c93a

            lea EAX,DWORD PTR [RCX+1]
            shl WORD PTR [R15],1
            mov BYTE PTR [R15+2],AL
            mov EAX,3
            shl EAX,CL
            mov BYTE PTR [R15+3],AL
.L_43c93a:

            mov QWORD PTR [RBX+16],RBP
            movzx EBP,BYTE PTR [RBP]
            mov RDI,RBX
            call .L_43c4b0

            movzx EAX,BPL
            jmp .L_43c563
.L_43c953:

            mov EAX,4294967294
            jmp .L_43c563
.L_43c95d:

            mov EDX,ESI
            xor ESI,ESI
            jmp .L_43c90c
.L_43c963:

            call __stack_chk_fail@PLT
.L_43c968:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c970:

            push R15
            push R14
            mov R14D,EDX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,344
.L_43c98a:

            mov RBX,QWORD PTR [RDI]
            mov R13,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+328],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RBP+8]
            movzx ESI,WORD PTR [RBX]
            cmp SI,1
            je .L_43cac0

            mov EDX,DWORD PTR [RBX+4]
            movzx EDI,WORD PTR [RBX+2]
            add R13,RDX
            xor EDX,EDX
            div EDI
            movzx EDX,BYTE PTR [R13]
            movzx R8D,BYTE PTR [R13+1]
            cmp EDX,R14D
            je .L_43ca80

            movzx EDX,SI
            mov DWORD PTR [R12+32],0
            lea R10D,DWORD PTR [RDX-2]
            add R10,1
            lea RDX,QWORD PTR [R10+R10*2]
            lea RCX,QWORD PTR [R13+RDX*2]
            jmp .L_43ca04
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c9f8:

            add R8D,EDX
            cmp R13,RCX
            je .L_43cba8
.L_43ca04:

            add R13,6
            movzx EDX,BYTE PTR [R13]
            cmp EDX,R14D
            mov R9,RDX
            movzx EDX,BYTE PTR [R13+1]
            jne .L_43c9f8

            imul R8D,EAX
            add QWORD PTR [RBP],R8
            imul EAX,EDX
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_43ca48

            nop
.L_43ca30:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_43b3e0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_43ca30
.L_43ca48:

            mov QWORD PTR [R12+16],R13
            mov RDI,R12
            call .L_43c3b0
.L_43ca55:

            mov RAX,QWORD PTR [RSP+328]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43cf28

            add RSP,344
.L_43ca73:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_43ca80:

            imul EAX,R8D
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_43caa8

            nop
            nop
.L_43ca90:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_43b3e0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_43ca90
.L_43caa8:

            mov QWORD PTR [R12+16],R13
            mov RDI,R12
            call .L_43c430

            jmp .L_43ca55
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cac0:

            movzx EDX,BYTE PTR [RBX+3]
            mov R15,RBX
            lea ECX,DWORD PTR [RDX-1]
            mov EDX,DWORD PTR [RBX+8]
            movzx EDX,WORD PTR [R13+RDX*1]
            sub EDX,1
            movsxd RDX,EDX
            movzx R8D,BYTE PTR [RDI+RDX*1+684]
            mov RDX,QWORD PTR [RDI+16]
            movzx EDX,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDI+RDX*1+940]
            mov EDX,DWORD PTR [R12+44]
            sar EDX,26
            mov DWORD PTR [R12+40],EDI
            and EDX,32
            movzx ESI,BYTE PTR [RBX+2]
            add EDX,DWORD PTR [R12+32]
            add EDX,EDI
            movsxd RDI,ESI
            movzx EDI,BYTE PTR [R12+RDI*1+940]
            lea EDX,DWORD PTR [RDX+RDI*2]
            lea EDI,DWORD PTR [RDX+R8*1]
            movsxd RDX,ECX
            shl RDX,6
            add RDX,RDI
            lea R13,QWORD PTR [R12+RDX*2]
            mov EDX,EAX
            shr EDX,14
            movzx EDI,WORD PTR [R13+2800]
            imul EDX,EDI
            cmp ESI,R14D
            mov ECX,EDI
            jne .L_43cdf8

            cmp EDX,16777215
            mov DWORD PTR [RBP+8],EDX
            ja .L_43cb7b

            nop
            nop
            nop
            nop
            nop
.L_43cb58:

            shl EDX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EDX
            call .L_43b3e0

            mov EDX,DWORD PTR [RBP+8]
            cmp EDX,16777215
            jbe .L_43cb58

            movzx EDI,WORD PTR [R13+2800]
            mov ECX,EDI
.L_43cb7b:

            add EDI,32
            sub CX,-128
            add R15,2
            sar EDI,7
            sub ECX,EDI
            mov RDI,R12
            mov WORD PTR [R13+2800],CX
            mov QWORD PTR [R12+16],R15
            call .L_43c480

            jmp .L_43ca55
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cba8:

            mov RDX,QWORD PTR [R12+16]
            lea RCX,QWORD PTR [RSP+64]
            lea R11,QWORD PTR [RCX+256]
            mov QWORD PTR [RSP+16],RCX
            movzx EDX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [R12+RDX*1+940]
            mov DWORD PTR [R12+40],EDX
            mov RDX,-1
.L_43cbd6:

            mov QWORD PTR [RCX],RDX
            mov QWORD PTR [RCX+8],RDX
            add RCX,64
            mov QWORD PTR [RCX-48],RDX
            mov QWORD PTR [RCX-40],RDX
            mov QWORD PTR [RCX-32],RDX
            mov QWORD PTR [RCX-24],RDX
            mov QWORD PTR [RCX-16],RDX
            mov QWORD PTR [RCX-8],RDX
            cmp R11,RCX
            jne .L_43cbd6

            lea RDX,QWORD PTR [R10*4]
            mov BYTE PTR [RSP+R9*1+64],0
            sub R10,RDX
            lea RCX,QWORD PTR [R13+R10*2]
            nop
            nop
            nop
            nop
.L_43cc18:

            sub R13,6
            movzx EDX,BYTE PTR [R13]
            cmp R13,RCX
            mov BYTE PTR [RSP+RDX*1+64],0
            jne .L_43cc18

            sub EDI,R8D
            mov EDX,R8D
            imul EDX,EAX
            add QWORD PTR [RBP],RDX
            imul EAX,EDI
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_43cc67

            nop
            nop
            nop
.L_43cc48:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_43b3e0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_43cc48

            mov RBX,QWORD PTR [R12]
            movzx ESI,WORD PTR [RBX]
.L_43cc67:

            lea RAX,QWORD PTR [RSP+60]
            mov QWORD PTR [RSP+8],RAX
.L_43cc71:

            mov EAX,DWORD PTR [R12+24]
            add EAX,1
            jmp .L_43cc93
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cc80:

            add RBX,QWORD PTR [R12+64]
            lea EDX,DWORD PTR [RAX+1]
            cmp WORD PTR [RBX],SI
            mov QWORD PTR [R12],RBX
            jne .L_43cca8

            mov EAX,EDX
.L_43cc93:

            mov EBX,DWORD PTR [RBX+8]
            test EBX,EBX
            jne .L_43cc80

            mov DWORD PTR [R12+24],EAX
            jmp .L_43ca55
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43cca8:

            mov RDX,QWORD PTR [RSP+8]
            mov DWORD PTR [R12+24],EAX
            mov RDI,R12
            call .L_43b140

            mov RBX,QWORD PTR [R12]
            mov QWORD PTR [RSP+24],RAX
            xor R8D,R8D
            movzx R9D,WORD PTR [RBX]
            mov R13D,DWORD PTR [RBX+4]
            add R13,QWORD PTR [R12+64]
            mov QWORD PTR [RSP+32],RBX
            mov RBX,QWORD PTR [RSP+16]
            lea EAX,DWORD PTR [R9-1]
            mov ESI,R9D
            mov WORD PTR [RSP+46],SI
            mov R9,RAX
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            lea RAX,QWORD PTR [R13+RAX*2]
            mov RSI,RAX
            jmp .L_43cd16
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cd00:

            cmp RSI,R10
            mov BYTE PTR [RCX],0
            mov R13,R10
            mov R8D,R15D
            je .L_43cec0

            sub R9D,1
.L_43cd16:

            movzx ECX,BYTE PTR [R13]
            movzx R11D,BYTE PTR [R13+1]
            lea R10,QWORD PTR [R13+6]
            mov RDX,RCX
            add RCX,RBX
            mov R15D,R11D
            movsx EDI,BYTE PTR [RCX]
            mov EAX,R11D
            and R15D,EDI
            add R15D,R8D
            cmp R14D,EDX
            jne .L_43cd00

            lea RDX,QWORD PTR [R9+R9*2+3]
            mov ECX,R8D
            mov ESI,EDI
            lea R9,QWORD PTR [R13+RDX*2]
            mov RDX,R13
            jmp .L_43cd64
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cd58:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            movsx ESI,BYTE PTR [RSP+RSI*1+64]
.L_43cd64:

            movzx EDI,AL
            add RDX,6
            and EDI,ESI
            add ECX,EDI
            cmp RDX,R9
            jne .L_43cd58

            add ECX,DWORD PTR [RSP+60]
            mov EAX,DWORD PTR [RBP+8]
            xor EDX,EDX
            div ECX
            imul R8D,EAX
            add QWORD PTR [RBP],R8
            imul EAX,R11D
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_43cdb0

            nop
            nop
            nop
.L_43cd98:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_43b3e0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_43cd98
.L_43cdb0:

            mov RSI,QWORD PTR [RSP+24]
            movzx ECX,BYTE PTR [RSI+2]
            cmp CL,6
            ja .L_43cde3

            movzx EAX,BYTE PTR [RSI+3]
            mov BYTE PTR [RSP+8],AL
            sub EAX,1
            test AL,AL
            mov BYTE PTR [RSI+3],AL
            jne .L_43cde3

            lea EAX,DWORD PTR [RCX+1]
            shl WORD PTR [RSI],1
            mov BYTE PTR [RSI+2],AL
            mov EAX,3
            shl EAX,CL
            mov BYTE PTR [RSI+3],AL
.L_43cde3:

            mov QWORD PTR [R12+16],R13
            mov RDI,R12
            call .L_43c4b0

            jmp .L_43ca55
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cdf8:

            sub EAX,EDX
            mov ESI,EDX
            add QWORD PTR [RBP],RSI
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_43ce36

            nop
            nop
            nop
            nop
            nop
            nop
.L_43ce10:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_43b3e0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_43ce10

            movzx EDI,WORD PTR [R13+2800]
            mov R15,QWORD PTR [R12]
            mov ECX,EDI
.L_43ce36:

            add EDI,32
            lea RAX,QWORD PTR [RIP+.L_450050]
            mov RDX,-1
            sar EDI,7
            sub ECX,EDI
            mov WORD PTR [R13+2800],CX
            shr CX,10
            and ECX,63
            movzx EAX,BYTE PTR [RAX+RCX*1]
            mov DWORD PTR [R12+28],EAX
            lea RAX,QWORD PTR [RSP+64]
            lea RCX,QWORD PTR [RAX+256]
            mov QWORD PTR [RSP+16],RAX
.L_43ce75:

            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            add RAX,64
            mov QWORD PTR [RAX-48],RDX
            mov QWORD PTR [RAX-40],RDX
            mov QWORD PTR [RAX-32],RDX
            mov QWORD PTR [RAX-24],RDX
            mov QWORD PTR [RAX-16],RDX
            mov QWORD PTR [RAX-8],RDX
            cmp RCX,RAX
            jne .L_43ce75

            movzx EAX,BYTE PTR [RBX+2]
            mov DWORD PTR [R12+32],0
            mov RBX,R15
            mov BYTE PTR [RSP+RAX*1+64],0
            movzx ESI,WORD PTR [R15]
            jmp .L_43cc67
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cec0:

            mov ECX,DWORD PTR [RSP+60]
            mov EAX,DWORD PTR [RBP+8]
            xor EDX,EDX
            mov RBX,QWORD PTR [RSP+32]
            movzx ESI,WORD PTR [RSP+46]
            lea EDI,DWORD PTR [RCX+R15*1]
            div EDI
            imul R8D,EAX
            add QWORD PTR [RBP],R8
            imul EAX,ECX
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_43cf13

            nop
            nop
.L_43cef0:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_43b3e0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_43cef0

            mov RBX,QWORD PTR [R12]
            mov ECX,DWORD PTR [RSP+60]
            movzx ESI,WORD PTR [RBX]
.L_43cf13:

            mov RAX,QWORD PTR [RSP+24]
            add R15W,WORD PTR [RAX]
            add R15D,ECX
            mov WORD PTR [RAX],R15W
            jmp .L_43cc71
.L_43cf28:

            call __stack_chk_fail@PLT
.L_43cf2d:

            nop
            nop
            nop
.L_43cf30:

            mov EAX,ESI
            lea RCX,QWORD PTR [RDI+RAX*8]
            mov RDX,QWORD PTR [RCX]
            test RDX,RDX
            je .L_43cfd0

            mov RAX,QWORD PTR [RDI+16]
            mov R8,RAX
            shr RAX,1
            and R8,-4
            and EAX,1
            mov QWORD PTR [R8+RAX*8],RDX
            mov EAX,ESI
            xor EAX,1
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov R9,QWORD PTR [RAX]
            mov QWORD PTR [RCX],R9
            mov QWORD PTR [RAX],RDI
            mov RAX,QWORD PTR [RDX+16]
            and EAX,3
            or RAX,R8
            mov QWORD PTR [RDX+16],RAX
            mov RAX,QWORD PTR [RDI+16]
            and EAX,3
            or RAX,RDX
            mov QWORD PTR [RDI+16],RAX
            mov R8,QWORD PTR [RDX+16]
            xor RAX,R8
            and EAX,3
            xor R8,RAX
            mov QWORD PTR [RDX+16],R8
            xor RAX,QWORD PTR [RDI+16]
            cmp ESI,1
            mov QWORD PTR [RDI+16],RAX
            je .L_43cfd8

            or RAX,2
            mov QWORD PTR [RDI+16],RAX
            mov RAX,QWORD PTR [RCX]
            test RAX,RAX
            je .L_43d008

            mov RDX,QWORD PTR [RAX+16]
            and EDX,3
            or RDI,RDX
            test ESI,ESI
            jne .L_43d010

            and RDI,-3
            mov QWORD PTR [RAX+16],RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cfd0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cfd8:

            and RAX,-3
            mov QWORD PTR [RDI+16],RAX
            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_43d000

            mov RDX,QWORD PTR [RAX+16]
            and EDX,3
            or RDI,RDX
            mov QWORD PTR [RAX+16],RDI
.L_43cff7:

            or RDI,2
            mov QWORD PTR [RAX+16],RDI
            ret 
.L_43d000:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d008:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d010:

            mov QWORD PTR [RAX+16],RDI
            jmp .L_43cff7
.L_43d016:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d020:

            mov EAX,EDX
            mov R10,RSI
            mov RAX,QWORD PTR [RSI+RAX*8]
            test RAX,RAX
            je .L_43d034

            test BYTE PTR [RAX+16],1
            jne .L_43d0b2
.L_43d034:

            push RBX
            sub RSP,8
.L_43d039:

            mov EBX,EDX
            xor EBX,1
            mov R11D,EBX
            mov RAX,QWORD PTR [R10+R11*8]
            test RAX,RAX
            je .L_43d0ac

            mov RCX,QWORD PTR [R10+16]
            test CL,1
            jne .L_43d128

            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            je .L_43d065

            test BYTE PTR [RCX+16],1
            jne .L_43d0dc
.L_43d065:

            mov RCX,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_43d074

            test BYTE PTR [RCX+16],1
            jne .L_43d0dc
.L_43d074:

            mov RCX,QWORD PTR [RAX+16]
            test CL,1
            jne .L_43d0b8

            or RCX,1
            cmp R10,QWORD PTR [RDI]
            mov QWORD PTR [RAX+16],RCX
            je .L_43d0ac

            mov R10,QWORD PTR [R10+16]
            mov RDX,R10
            and R10,-4
            shr RDX,1
            and EDX,1
            mov EAX,EDX
            mov RAX,QWORD PTR [R10+RAX*8]
            test RAX,RAX
            je .L_43d039

            test BYTE PTR [RAX+16],1
            je .L_43d039
.L_43d0ac:

            add RSP,8
.L_43d0b0:

            pop RBX
            ret 
.L_43d0b2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d0b8:

            mov ESI,EBX
            mov RDI,R10
            mov DWORD PTR [RSP+4],EDX
            call .L_43cf30

            mov RAX,QWORD PTR [R10+R11*8]
            mov EDX,DWORD PTR [RSP+4]
            test RAX,RAX
            je .L_43d0ac

            mov RCX,QWORD PTR [R10+16]
            test CL,1
            jne .L_43d128
.L_43d0dc:

            mov RCX,QWORD PTR [RAX+R11*8]
            test RCX,RCX
            je .L_43d0ef

            mov RSI,QWORD PTR [RCX+16]
            test SIL,1
            jne .L_43d10a
.L_43d0ef:

            mov RDI,RAX
            mov ESI,EDX
            call .L_43cf30

            mov RAX,QWORD PTR [R10+R11*8]
            mov RCX,QWORD PTR [RAX+R11*8]
            test RCX,RCX
            je .L_43d0ac

            mov RSI,QWORD PTR [RCX+16]
.L_43d10a:

            and RSI,-2
            mov RDI,R10
            mov QWORD PTR [RCX+16],RSI
            add RSP,8
.L_43d119:

            mov ESI,EBX
            pop RBX
            jmp .L_43cf30
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d128:

            test BYTE PTR [RAX+16],1
            jne .L_43d0dc

            mov RSI,QWORD PTR [RAX]
            test RSI,RSI
            je .L_43d13c

            test BYTE PTR [RSI+16],1
            jne .L_43d0dc
.L_43d13c:

            mov RSI,QWORD PTR [RAX+8]
            test RSI,RSI
            je .L_43d14b

            test BYTE PTR [RSI+16],1
            jne .L_43d0dc
.L_43d14b:

            and RCX,-2
            mov QWORD PTR [R10+16],RCX
            or QWORD PTR [RAX+16],1
            jmp .L_43d0ac
.L_43d15d:

            nop
            nop
            nop
.L_43d160:

            mov QWORD PTR [RDI+8],RSI
            mov QWORD PTR [RDI],0
            ret 
.L_43d16c:

            nop
            nop
            nop
            nop
.L_43d170:

            push R12
            push RBP
            push RBX
            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov RBP,QWORD PTR [RAX+8]
            je .L_43d1b8

            mov R12,RSI
            jmp .L_43d19f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d190:

            setg AL
            movzx EAX,AL
            mov RBX,QWORD PTR [RBX+RAX*8]
            test RBX,RBX
            je .L_43d1b8
.L_43d19f:

            mov RSI,R12
            mov RDI,RBX
            call RBP

            cmp EAX,0
            jne .L_43d190

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d1b8:

            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_43d1c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d1d0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_43d1da:

            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov R13,QWORD PTR [RAX+8]
            je .L_43d219

            mov R12,RSI
            xor EBP,EBP
            jmp .L_43d20b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d1f8:

            setg AL
            cmovl RBP,RBX
            movzx EAX,AL
            mov RBX,QWORD PTR [RBX+RAX*8]
            test RBX,RBX
            je .L_43d230
.L_43d20b:

            mov RSI,R12
            mov RDI,RBX
            call R13

            cmp EAX,0
            jne .L_43d1f8
.L_43d219:

            add RSP,8
.L_43d21d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d230:

            add RSP,8
            mov RBX,RBP
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43d241:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d250:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_43d25a:

            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov R13,QWORD PTR [RAX+8]
            je .L_43d299

            mov R12,RSI
            xor EBP,EBP
            jmp .L_43d28b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d278:

            setg AL
            cmovg RBP,RBX
            movzx EAX,AL
            mov RBX,QWORD PTR [RBX+RAX*8]
            test RBX,RBX
            je .L_43d2b0
.L_43d28b:

            mov RSI,R12
            mov RDI,RBX
            call R13

            cmp EAX,0
            jne .L_43d278
.L_43d299:

            add RSP,8
.L_43d29d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d2b0:

            add RSP,8
            mov RBX,RBP
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43d2c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d2d0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov R12,QWORD PTR [RAX]
            jne .L_43d30a

            jmp .L_43d378
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d2f8:

            setg CL
            movzx ECX,CL
            mov RDX,QWORD PTR [RBX+RCX*8]
            test RDX,RDX
            je .L_43d328

            mov RBX,RDX
.L_43d30a:

            mov RSI,RBP
            mov RDI,RBX
            call R12

            cmp EAX,0
            jne .L_43d2f8

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d328:

            mov R10,QWORD PTR [RBP+16]
            and R10D,3
            or R10,RBX
            test EAX,EAX
            jle .L_43d388

            or R10,2
            cmp R13,RBX
            mov QWORD PTR [RBP+16],R10
            jne .L_43d395
.L_43d344:

            lea RAX,QWORD PTR [R13+RCX*8]
            and R10,-2
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+16],R10
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+8],RDX
            mov QWORD PTR [RAX],RBP
            add RSP,8
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d378:

            mov R10,QWORD PTR [RSI+16]
            mov RBX,RDI
            xor ECX,ECX
            and R10D,3
            or R10,RDI
.L_43d388:

            and R10,-3
            cmp R13,RBX
            mov QWORD PTR [RBP+16],R10
            je .L_43d344
.L_43d395:

            mov RAX,R10
            or RAX,1
            mov QWORD PTR [RBP+16],RAX
            test BYTE PTR [RBX+16],1
            je .L_43d460

            lea RAX,QWORD PTR [RBX+RCX*8]
            mov QWORD PTR [RBP],0
            and R10,-4
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+8],RDX
            mov QWORD PTR [RAX],RBP
            mov RAX,QWORD PTR [R10+16]
            jmp .L_43d411
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d3d0:

            mov RAX,QWORD PTR [RDX+16]
            test AL,1
            je .L_43d430

            and RAX,-2
            mov QWORD PTR [RDX+16],RAX
            and QWORD PTR [R10+16],-2
            cmp R11,QWORD PTR [R13]
            je .L_43d450

            mov RAX,QWORD PTR [R11+16]
            mov RDX,RAX
            and RAX,-4
            or RDX,1
            test RAX,RAX
            mov R10,RAX
            mov QWORD PTR [R11+16],RDX
            je .L_43d450

            mov RAX,QWORD PTR [RAX+16]
            mov RBP,R11
            test AL,1
            je .L_43d450
.L_43d411:

            and RAX,-4
            xor ECX,ECX
            mov RBX,QWORD PTR [RAX+8]
            mov R11,RAX
            cmp R10,RBX
            setne CL
            mov RDX,QWORD PTR [RAX+RCX*8]
            mov RSI,RCX
            test RDX,RDX
            jne .L_43d3d0
.L_43d430:

            cmp QWORD PTR [R10+RCX*8],RBP
            je .L_43d486
.L_43d436:

            xor ESI,ESI
            cmp R10,RBX
            mov RDI,R11
            sete SIL
            call .L_43cf30

            mov RAX,QWORD PTR [R13]
            and QWORD PTR [RAX+16],-2
.L_43d450:

            add RSP,8
.L_43d454:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43d460:

            lea RAX,QWORD PTR [RBX+RCX*8]
            mov QWORD PTR [RBP],0
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+8],RDX
            mov QWORD PTR [RAX],RBP
            add RSP,8
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
.L_43d486:

            mov RDI,R10
            call .L_43cf30

            jmp .L_43d436
.L_43d490:

            test RSI,RSI
            je .L_43d500

            mov R8D,EDX
            mov EDX,EDX
            mov RAX,QWORD PTR [RSI+RDX*8]
            xor R8D,1
            mov ECX,R8D
            test RAX,RAX
            jne .L_43d4f3

            mov RDI,QWORD PTR [RDI]
            cmp RSI,RDI
            je .L_43d4fc

            mov RDX,QWORD PTR [RSI+16]
            mov RCX,RDX
            shr RCX,1
            and ECX,1
            cmp R8D,ECX
            jne .L_43d4e2

            jmp .L_43d520
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d4d0:

            mov RDX,QWORD PTR [RDX+16]
            mov RCX,RDX
            shr RCX,1
            and ECX,1
            cmp ECX,R8D
            je .L_43d520
.L_43d4e2:

            and RDX,-4
            cmp RDX,RDI
            jne .L_43d4d0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d4f0:

            mov RAX,RDX
.L_43d4f3:

            mov RDX,QWORD PTR [RAX+RCX*8]
            test RDX,RDX
            jne .L_43d4f0
.L_43d4fc:

            ret 
          .byte 0x66
          .byte 0x90
.L_43d500:

            mov RAX,QWORD PTR [RDI]
            mov EDX,EDX
            test RAX,RAX
            jne .L_43d513

            jmp .L_43d4fc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d510:

            mov RAX,RCX
.L_43d513:

            mov RCX,QWORD PTR [RAX+RDX*8]
            test RCX,RCX
            jne .L_43d510

            ret 
          .byte 0x66
          .byte 0x90
.L_43d520:

            mov RAX,RDX
            and RAX,-4
            ret 
.L_43d528:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d530:

            mov RCX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RSI+16]
            mov RDX,QWORD PTR [RSI+8]
            test RCX,RCX
            je .L_43d628

            test RDX,RDX
            je .L_43d690

            shr RAX,1
            push RBX
.L_43d551:

            mov R9,RSI
            mov RDX,RAX
            mov R10,RDI
            not EDX
            and EDX,1
            call .L_43d490

            mov R8,QWORD PTR [RAX+16]
            mov RCX,R8
            mov RBX,R8
            not R8
            shr RCX,1
            and RBX,-4
            and R8D,1
            mov EDX,ECX
            not ECX
            mov RSI,RBX
            and EDX,1
            and ECX,1
            cmp R9,RBX
            je .L_43d6a8

            mov RDI,QWORD PTR [RAX+RCX*8]
            test RDI,RDI
            je .L_43d5a9

            mov R11,QWORD PTR [RDI+16]
            test R11B,1
            jne .L_43d6d0
.L_43d5a9:

            mov R11D,EDX
            mov QWORD PTR [RBX+R11*8],RDI
            mov RDI,QWORD PTR [R9+RCX*8]
            mov QWORD PTR [RAX+RCX*8],RDI
            mov RCX,QWORD PTR [RDI+16]
            and ECX,3
            or RCX,RAX
            mov QWORD PTR [RDI+16],RCX
            mov ECX,EDX
.L_43d5c8:

            mov RDI,QWORD PTR [R9+RCX*8]
            mov QWORD PTR [RAX+RCX*8],RDI
            mov RCX,QWORD PTR [RDI+16]
            and ECX,3
            or RCX,RAX
            mov QWORD PTR [RDI+16],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov RDI,QWORD PTR [R9+16]
            xor RDI,RCX
            and EDI,3
            xor RDI,RCX
            mov QWORD PTR [RAX+16],RDI
            mov RCX,QWORD PTR [R9+16]
            and EDI,3
            and RCX,-4
            or RCX,RDI
            mov QWORD PTR [RAX+16],RCX
            mov RDI,RCX
            shr RCX,1
            and RDI,-4
            and ECX,1
            test R8D,R8D
            mov QWORD PTR [RDI+RCX*8],RAX
            jne .L_43d6c0

            pop RBX
.L_43d620:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d628:

            mov R8,RAX
            and R8,-4
            test RDX,RDX
            je .L_43d668
.L_43d634:

            xor EDX,EDX
            test RCX,RCX
            sete DL
            mov RDX,QWORD PTR [RSI+RDX*8]
            mov RSI,QWORD PTR [RDX+16]
            xor RAX,RSI
            and EAX,3
            xor RAX,RSI
            mov RCX,RAX
            and EAX,3
            shr RCX,1
            or RAX,R8
            and ECX,1
            mov QWORD PTR [R8+RCX*8],RDX
            mov QWORD PTR [RDX+16],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d668:

            mov RDX,RAX
            shr RDX,1
            and EDX,1
            test AL,1
            jne .L_43d6a0

            cmp QWORD PTR [RDI],RSI
            je .L_43d6a0

            mov EAX,EDX
            mov RSI,R8
            mov QWORD PTR [R8+RAX*8],0
            jmp .L_43d020
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d690:

            mov R8,RAX
            and R8,-4
            jmp .L_43d634
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d6a0:

            mov QWORD PTR [R8+RDX*8],RCX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d6a8:

            mov ESI,EDX
            mov RSI,QWORD PTR [RAX+RSI*8]
            test RSI,RSI
            jne .L_43d700
.L_43d6b3:

            mov RSI,RAX
            jmp .L_43d5c8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d6c0:

            pop RBX
            mov RDI,R10
            jmp .L_43d020
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d6d0:

            and R11D,2
            or R11,RBX
            test EDX,EDX
            mov QWORD PTR [RDI+16],R11
            je .L_43d6f0

            or R11,2
            xor R8D,R8D
            mov QWORD PTR [RDI+16],R11
            jmp .L_43d5a9
          .byte 0x90
.L_43d6f0:

            and R11,-3
            xor R8D,R8D
            mov QWORD PTR [RDI+16],R11
            jmp .L_43d5a9
.L_43d700:

            mov RDI,QWORD PTR [RSI+16]
            test DIL,1
            je .L_43d6b3

            and RDI,-2
            xor R8D,R8D
            mov QWORD PTR [RSI+16],RDI
            mov RSI,RAX
            jmp .L_43d5c8
.L_43d71d:

            nop
            nop
            nop
.L_43d720:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EDI,16
            mov RBP,RSI
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_43d758

            mov RDI,RBP
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43d770
.L_43d74c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d758:

            lea RDX,QWORD PTR [RIP+.L_443dae]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_43d74c
.L_43d770:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_443dae]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_43d74c
.L_43d792:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d7a0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_450080]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
.L_43d7ba:

            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_43d830

            test RBP,RBP
            je .L_43d810

            cmp BYTE PTR [RBP],0
            je .L_43d810

            mov RSI,RBP
            mov RDI,RBX
            call .L_43d720

            test RAX,RAX
            je .L_43d830

            mov RDX,QWORD PTR [RBX+2504]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+2504],RDX
            mov QWORD PTR [RAX+8],0
            xor EAX,EAX
.L_43d801:

            add RSP,8
.L_43d805:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d810:

            lea RDX,QWORD PTR [RIP+.L_4500a0]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBX
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_43d801
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d830:

            mov EAX,4294967266
            jmp .L_43d801
.L_43d837:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d840:

            push R12
            lea RCX,QWORD PTR [RIP+.L_4500c8]
            push RBP
            push RBX
            mov RBP,RSI
            mov R12,RDX
            mov ESI,14594245
            mov EDX,1
            mov RBX,RDI
            call .L_436df0

            cmp EAX,-30
            je .L_43d878

            mov QWORD PTR [RBX+2520],R12
            mov QWORD PTR [RBX+2528],RBP
            xor EAX,EAX
.L_43d878:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_43d87d:

            nop
            nop
            nop
.L_43d880:

            mov DWORD PTR [RDI+2512],4294967295
            ret 
.L_43d88b:

            nop
            nop
            nop
            nop
            nop
.L_43d890:

            push RBP
            push RBX
            sub RSP,8
.L_43d896:

            mov EAX,DWORD PTR [RDI+2512]
            test EAX,EAX
            js .L_43d960

            cmp EAX,1
            jle .L_43d900

            sub EAX,1
            mov DWORD PTR [RDI+2512],EAX
            mov RAX,QWORD PTR [RDI+2496]
            test RAX,RAX
            je .L_43d8c9

            mov RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RDI+2496],RDX
.L_43d8c9:

            mov RDX,QWORD PTR [RDI+2504]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RDI+2496]
            mov QWORD PTR [RDI+2504],RDX
            mov QWORD PTR [RAX+8],0
.L_43d8ed:

            test RCX,RCX
            je .L_43d906

            mov RBP,QWORD PTR [RCX]
            add RSP,8
.L_43d8f9:

            pop RBX
            mov RAX,RBP
            pop RBP
            ret 
          .byte 0x90
.L_43d900:

            je .L_43d9a0
.L_43d906:

            mov RAX,QWORD PTR [RDI+2520]
            test RAX,RAX
            je .L_43d990

            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+2528]
            call RAX

            test RAX,RAX
            mov RBP,RAX
            je .L_43d990

            mov RSI,RAX
            mov RDI,RBX
            call .L_43d720

            test RAX,RAX
            je .L_43d990

            mov RDX,QWORD PTR [RBX+2496]
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RBX+2496],RAX
            mov RAX,RBP
            mov DWORD PTR [RBX+2512],1
            add RSP,8
.L_43d959:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d960:

            mov RCX,QWORD PTR [RDI+2496]
            test RCX,RCX
            je .L_43d9f0

            mov RAX,RCX
            xor EDX,EDX
            nop
            nop
            nop
.L_43d978:

            mov RAX,QWORD PTR [RAX+8]
            add EDX,1
            test RAX,RAX
            jne .L_43d978
.L_43d984:

            mov DWORD PTR [RDI+2512],EDX
            jmp .L_43d8ed
          .byte 0x90
.L_43d990:

            xor EBP,EBP
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d9a0:

            mov RAX,QWORD PTR [RDI+2496]
            mov DWORD PTR [RDI+2512],0
            mov RDX,QWORD PTR [RAX+8]
            test RDX,RDX
            je .L_43d906

            mov QWORD PTR [RDI+2496],RDX
            mov RDX,QWORD PTR [RDI+2504]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RDI+2504],RDX
            mov QWORD PTR [RAX+8],0
            jmp .L_43d906
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d9f0:

            xor EDX,EDX
            jmp .L_43d984
.L_43d9f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43da00:

            mov EAX,3
            ret 
.L_43da06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43da10:

            test RDI,RDI
            je .L_43da30

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_43da30

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_43da30

            mov EAX,DWORD PTR [RAX+20728]
            ret 
.L_43da30:

            mov EAX,4294967295
            ret 
.L_43da36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43da40:

            mov RDX,QWORD PTR [RDI+56]
            mov RAX,QWORD PTR [RDI+16]
            lea ESI,DWORD PTR [RDX-1]
            lea R8D,DWORD PTR [RAX-1]
            movsxd RDX,EDX
            sub RDX,1
            mov R9D,EAX
            shl R8,4
            test ESI,ESI
            js .L_43daab
.L_43da61:

            test R9D,R9D
            je .L_43da8f

            mov RAX,QWORD PTR [RDI+24]
            cmp QWORD PTR [RAX+8],RDX
            je .L_43daa0

            add RAX,24
            lea RCX,QWORD PTR [RAX+R8*1]
            jmp .L_43da8a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43da80:

            add RAX,16
            cmp QWORD PTR [RAX-16],RDX
            je .L_43daa0
.L_43da8a:

            cmp RAX,RCX
            jne .L_43da80
.L_43da8f:

            mov RAX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RAX+RDX*8]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43daa0:

            sub ESI,1
            sub RDX,1
            test ESI,ESI
            jns .L_43da61
.L_43daab:

            xor EAX,EAX
            ret 
.L_43daae:

            nop
            nop
.L_43dab0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_43dabe:

            mov RCX,QWORD PTR [RDI+20032]
            mov R13D,DWORD PTR [RDI+19972]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+20064]
            mov R15,QWORD PTR [RDI+20112]
            mov RBX,QWORD PTR [RDI+20088]
            mov R12,QWORD PTR [RDI+20104]
            mov R11,QWORD PTR [RDI+20016]
            mov R9,QWORD PTR [RDI+20040]
            mov QWORD PTR [RSP+40],RAX
            mov RAX,QWORD PTR [RDI+20072]
            mov R10,QWORD PTR [RDI+20024]
            mov R8,QWORD PTR [RDI+20048]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RDI+20056]
            mov R14,RAX
            sub R14,QWORD PTR [RDI+20080]
            add RAX,RCX
            mov QWORD PTR [RSP+8],RAX
            add R14,RCX
            test R13D,R13D
            jne .L_43dbd6

            lea RAX,QWORD PTR [RDI+20120]
            lea RCX,QWORD PTR [RDI+20636]
            mov BYTE PTR [RDI+20636],0
            nop
            nop
.L_43db60:

            mov EBP,1024
            add RAX,2
            mov WORD PTR [RAX-2],BP
            cmp RCX,RAX
            jne .L_43db60

            cmp R14,QWORD PTR [RSP+8]
            mov EAX,4294967295
            mov QWORD PTR [RDI+20640],RAX
            je .L_43de42

            movzx EAX,BYTE PTR [R14]
            mov RCX,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [R14+1]
            add R14,5
            mov DWORD PTR [RDI+20644],EAX
.L_43dba0:

            cmp RCX,RBP
            je .L_43de42

            add RBP,1
            mov EAX,DWORD PTR [RDI+20644]
            movzx R13D,BYTE PTR [RBP-1]
            shl EAX,8
            or EAX,R13D
            cmp RBP,R14
            mov DWORD PTR [RDI+20644],EAX
            jne .L_43dba0

            mov DWORD PTR [RDI+19972],1
            mov R14,RBP
.L_43dbd6:

            cmp QWORD PTR [RDI+19976],0
            je .L_43dfe1

            test RDX,RDX
            je .L_43dfe1

            xor ECX,ECX
            jmp .L_43dbfd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dbf8:

            cmp RDX,RCX
            jbe .L_43dc17
.L_43dbfd:

            add RCX,1
            movzx EAX,BYTE PTR [RDI+RCX*1+19983]
            mov BYTE PTR [RSI+RCX*1-1],AL
            sub QWORD PTR [RDI+19976],1
            jne .L_43dbf8
.L_43dc17:

            sub R9,QWORD PTR [RSP+40]
            sub R12,R15
            sub R8,QWORD PTR [RSP]
            add R12,RBX
            lea RBX,QWORD PTR [RDI+20632]
            mov QWORD PTR [RSP+16],RBX
            lea RBX,QWORD PTR [RDI+20634]
            lea RAX,QWORD PTR [R11+R9*1]
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RBX
            lea RBX,QWORD PTR [RDI+20120]
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [R10+R8*1]
            mov QWORD PTR [RSP+48],RBX
            mov QWORD PTR [RSP+32],RAX
            mov EAX,DWORD PTR [RDI+19972]
            jmp .L_43dccc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dc70:

            mov R10D,2048
            mov DWORD PTR [RDI+20640],EAX
            sub R10D,EBX
            shr R10D,5
            add R11D,R10D
            cmp EAX,16777215
            mov WORD PTR [R13],R11W
            ja .L_43dcbd

            cmp R14,QWORD PTR [RSP+8]
            je .L_43de42

            shl EAX,8
            shl R9D,8
            add R14,1
            mov DWORD PTR [RDI+20640],EAX
            movzx EAX,BYTE PTR [R14-1]
            or R9D,EAX
            mov DWORD PTR [RDI+20644],R9D
.L_43dcbd:

            mov BYTE PTR [RDI+20636],BPL
            mov EAX,1
.L_43dcc9:

            mov R11,R8
.L_43dccc:

            mov R8,R15
            mov R9,RDX
            sub R8,R11
            sub R9,RCX
            cmp R9,R8
            cmova R9,R8
            cmp EAX,1
            je .L_43dea0
.L_43dce8:

            test R9,R9
            je .L_43df9c

            cmp RCX,RDX
            je .L_43df9c

            mov DWORD PTR [RDI+19972],1
            movzx EBP,BYTE PTR [R12+R11*1]
            lea R8,QWORD PTR [R11+1]
            cmp BPL,232
            je .L_43de88

            cmp BPL,233
            mov R13,QWORD PTR [RSP+16]
            cmovne R13,QWORD PTR [RSP+24]
.L_43dd26:

            mov R10D,DWORD PTR [RDI+20640]
            movzx EBX,WORD PTR [R13]
            mov R9D,DWORD PTR [RDI+20644]
            mov EAX,R10D
            shr EAX,11
            mov R11D,EBX
            imul EAX,EBX
            cmp R9D,EAX
            jb .L_43dc70

            sub R10D,EAX
            shr EBX,5
            sub R9D,EAX
            sub R11D,EBX
            cmp R10D,16777215
            mov DWORD PTR [RDI+20640],R10D
            mov DWORD PTR [RDI+20644],R9D
            mov WORD PTR [R13],R11W
            ja .L_43dda3

            cmp R14,QWORD PTR [RSP+8]
            je .L_43de42

            shl R10D,8
            shl R9D,8
            add R14,1
            mov DWORD PTR [RDI+20640],R10D
            movzx EAX,BYTE PTR [R14-1]
            or R9D,EAX
            mov DWORD PTR [RDI+20644],R9D
.L_43dda3:

            cmp BPL,232
            je .L_43df30

            mov RAX,QWORD PTR [RSP]
            cmp RAX,3
            jbe .L_43de42

            mov RBX,QWORD PTR [RSP+32]
            sub RAX,4
            mov QWORD PTR [RSP],RAX
            mov RAX,RBX
            add RBX,4
            mov QWORD PTR [RSP+32],RBX
.L_43ddd4:

            mov EAX,DWORD PTR [RAX]
            bswap EAX
            mov R9D,EAX
            mov EAX,4294967292
            sub EAX,DWORD PTR [RDI+20648]
            sub EAX,ECX
            add EAX,R9D
            mov R10D,EAX
            mov R9D,EAX
            mov BYTE PTR [RSP+68],AL
            shr R10D,16
            mov BYTE PTR [RSP+69],AH
            shr EAX,24
            cmp RCX,RDX
            mov BYTE PTR [RSP+70],R10B
            mov BYTE PTR [RDI+20636],AL
            mov BYTE PTR [RSP+71],AL
            jae .L_43df60

            mov EAX,1
            nop
            nop
            nop
.L_43de20:

            add RCX,1
            cmp EAX,3
            mov R10D,EAX
            mov BYTE PTR [RSI+RCX*1-1],R9B
            ja .L_43de70

            cmp RDX,RCX
            jbe .L_43de70

            movzx R9D,BYTE PTR [RSP+RAX*1+68]
            add RAX,1
            jmp .L_43de20
.L_43de42:

            mov RAX,-25
.L_43de49:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            jne .L_43e00f

            add RSP,88
.L_43de61:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43de70:

            cmp R10D,4
            jne .L_43dff2

            mov EAX,DWORD PTR [RDI+19972]
            jmp .L_43dcc9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43de88:

            movzx EAX,BYTE PTR [RDI+20636]
            mov RBX,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RBX+RAX*2]
            jmp .L_43dd26
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43dea0:

            test R9,R9
            je .L_43df9c

            movzx R10D,BYTE PTR [R12+R11*1]
            lea RAX,QWORD PTR [RCX+1]
            mov R8D,R10D
            mov BYTE PTR [RSI+RCX*1],R10B
            and R8D,4294967294
            cmp R8B,232
            mov R8,R11
            je .L_43df15

            sub RCX,R11
            add RCX,RSI
            jmp .L_43deff
          .byte 0x66
          .byte 0x90
.L_43ded0:

            add R8,1
            sub R9,1
            mov BYTE PTR [RDI+20636],R10B
            je .L_43dfa8

            movzx R10D,BYTE PTR [R12+R8*1]
            add RAX,1
            mov R11D,R10D
            mov BYTE PTR [RCX+R8*1],R10B
            and R11D,4294967294
            cmp R11B,232
            je .L_43df15
.L_43deff:

            cmp BYTE PTR [RDI+20636],15
            jne .L_43ded0

            mov R11D,R10D
            and R11D,4294967280
            cmp R11B,128
            jne .L_43ded0
.L_43df15:

            mov DWORD PTR [RDI+19972],2
            mov RCX,RAX
            mov R11,R8
            jmp .L_43dce8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43df30:

            mov RAX,QWORD PTR [RSP+40]
            cmp RAX,3
            jbe .L_43de42

            mov RBX,QWORD PTR [RSP+56]
            sub RAX,4
            mov QWORD PTR [RSP+40],RAX
            mov RAX,RBX
            add RBX,4
            mov QWORD PTR [RSP+56],RBX
            jmp .L_43ddd4
          .byte 0x66
          .byte 0x90
.L_43df60:

            mov EDX,4
            xor R10D,R10D
            xor EAX,EAX
.L_43df6a:

            lea ESI,DWORD PTR [R10+1]
            mov QWORD PTR [RDI+19976],RDX
            mov RDX,RDI
            sub RDX,RAX
            sub RSI,RAX
            lea RSI,QWORD PTR [RSP+RSI*1+68]
.L_43df83:

            mov BYTE PTR [RDX+RAX*1+19984],R9B
            add RAX,1
            cmp EAX,3
            ja .L_43dfed

            movzx R9D,BYTE PTR [RSI+RAX*1-1]
            jmp .L_43df83
.L_43df9c:

            mov RAX,RCX
            mov R8,R11
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dfa8:

            mov RSI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+8]
            sub QWORD PTR [RDI+20112],R8
            add QWORD PTR [RDI+20648],RAX
            mov QWORD PTR [RDI+20064],RSI
            mov RSI,QWORD PTR [RSP]
            sub RDX,R14
            mov QWORD PTR [RDI+20072],RSI
            mov QWORD PTR [RDI+20080],RDX
            jmp .L_43de49
.L_43dfe1:

            test RDX,RDX
            jne .L_43e008

            xor EAX,EAX
            jmp .L_43de49
.L_43dfed:

            mov RAX,RCX
            jmp .L_43dfa8
.L_43dff2:

            mov EDX,4
            mov EAX,R10D
            sub EDX,R10D
            movzx R9D,BYTE PTR [RSP+RAX*1+68]
            jmp .L_43df6a
.L_43e008:

            xor ECX,ECX
            jmp .L_43dc17
.L_43e00f:

            call __stack_chk_fail@PLT
.L_43e014:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e020:

            cmp ESI,10
            ja .L_43e0d8

            lea RDX,QWORD PTR [RIP+.L_450300]
            mov ESI,ESI
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e040:

            lea RDX,QWORD PTR [RIP+.L_4445b8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e058:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e060:

            lea RDX,QWORD PTR [RIP+.L_4444d8]
            mov ESI,12
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e078:

            lea RDX,QWORD PTR [RIP+.L_444508]
            mov ESI,12
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e090:

            lea RDX,QWORD PTR [RIP+.L_444530]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e0a8:

            lea RDX,QWORD PTR [RIP+.L_444560]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e0c0:

            lea RDX,QWORD PTR [RIP+.L_444588]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e0d8:

            lea RDX,QWORD PTR [RIP+.L_4445e8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_432bc0
.L_43e0eb:

            nop
            nop
            nop
            nop
            nop
.L_43e0f0:

            push RBX
.L_43e0f1:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RBX+19920]
            test RDX,RDX
            je .L_43e138

            mov RAX,QWORD PTR [RBX+19912]
            sub RDX,1
            lea RCX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX+19912],RCX
            movzx EAX,BYTE PTR [RAX]
            add QWORD PTR [RBX+19928],1
            mov QWORD PTR [RBX+19920],RDX
            pop RBX
.L_43e133:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e138:

            lea RDX,QWORD PTR [RIP+.L_44668e]
            xor EAX,EAX
            mov ESI,84
            call .L_432bc0

            mov DWORD PTR [RBX+19960],1
            xor EAX,EAX
            pop RBX
            ret 
.L_43e159:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e160:

            mov RDI,RSI
            jmp free@PLT
.L_43e168:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e170:

            mov RDI,RSI
            jmp malloc@PLT
.L_43e178:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e180:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+288]
            test RSI,RSI
            jne .L_43e1a0

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e1a0:

            call .L_404a20

            mov RAX,QWORD PTR [RBX+288]
            add QWORD PTR [RBX+248],RAX
            mov QWORD PTR [RBX+288],0
            pop RBX
            ret 
.L_43e1c0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_43e1d1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+32],RSI
            mov R13,QWORD PTR [RAX]
            cmp QWORD PTR [R13+296],0
            jne .L_43e208

            cmp QWORD PTR [R13+304],-1
            je .L_43e9b0
.L_43e208:

            mov RDI,QWORD PTR [R13+216]
            test RDI,RDI
            je .L_43e8e0

            mov RAX,QWORD PTR [RSP+32]
            cmp QWORD PTR [R13+232],RAX
            jae .L_43e290

            mov RAX,QWORD PTR [R13+224]
            mov ESI,0
            mov RBX,RAX
            sub RBX,RDI
            test RAX,RAX
            mov RAX,QWORD PTR [RSP+32]
            cmove RBX,RSI
            lea RBP,QWORD PTR [RAX+1023]
            and RBP,-1024
            mov RSI,RBP
            call realloc@PLT

            test RAX,RAX
            je .L_43e914

            test RBX,RBX
            mov QWORD PTR [R13+216],RAX
            mov QWORD PTR [R13+232],RBP
            je .L_43e2a8
.L_43e276:

            mov RDI,QWORD PTR [R13+216]
            mov RDX,QWORD PTR [R13+240]
            lea RSI,QWORD PTR [RDI+RBX*1]
            call memmove@PLT

            jmp .L_43e2a8
          .byte 0x90
.L_43e290:

            cmp QWORD PTR [R13+240],RAX
            jb .L_43ea30
.L_43e29d:

            mov QWORD PTR [R13+240],0
.L_43e2a8:

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],R14
            mov QWORD PTR [R13+224],0
            mov R14,R13
            mov QWORD PTR [RSP+8],RAX
.L_43e2c4:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4049d0

            mov RBX,QWORD PTR [RSP+64]
            mov R15,RAX
            test RBX,RBX
            jle .L_43ee60

            mov R9,QWORD PTR [R14+232]
            mov RAX,QWORD PTR [R14+240]
            mov RDX,QWORD PTR [R14+280]
            mov R12,QWORD PTR [R14+216]
            mov RCX,QWORD PTR [R14+304]
            mov RBP,R9
            add R12,RAX
            sub RBP,RAX
            cmp RBX,RDX
            cmova RBX,RDX
            cmp QWORD PTR [R14+296],33
            je .L_43e3d8

            cmp RCX,50528515
            mov R13,RBP
            mov RDI,R12
            je .L_43e420
.L_43e33c:

            cmp RCX,50528539
            mov QWORD PTR [RSP+16],R13
            mov QWORD PTR [RSP+24],RDI
            je .L_43e3f5
.L_43e353:

            mov RAX,QWORD PTR [R14+296]
            cmp RAX,196865
            je .L_43e640

            jbe .L_43e468

            cmp RAX,262408
            je .L_43e890

            cmp RAX,262658
            je .L_43e818

            cmp RAX,197633
            je .L_43e6b0
.L_43e390:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4503f2]
.L_43e39b:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_432bc0

            mov RAX,-30
.L_43e3b1:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            jne .L_43eef6

            add RSP,88
.L_43e3c9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e3d8:

            cmp RCX,50528539
            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],R12
            mov RDI,R12
            mov R13,RBP
            jne .L_43e640
.L_43e3f5:

            mov R13,QWORD PTR [R14+20112]
            test R13,R13
            jne .L_43eae0
.L_43e405:

            mov RDI,QWORD PTR [R14+20088]
            mov R13,QWORD PTR [R14+20096]
            jmp .L_43e353
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e420:

            test RBX,RBX
            mov RCX,QWORD PTR [R14+19976]
            je .L_43e940

            cmp RBP,4
            ja .L_43e940

            xor R11D,R11D
            test RCX,RCX
            jne .L_43ea90
.L_43e446:

            test R13,R13
            je .L_43eb5b

            test R11B,R11B
            jne .L_43eb5b

            mov RCX,QWORD PTR [R14+304]
            jmp .L_43e33c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e468:

            test RAX,RAX
            jne .L_43e630

            cmp R13,RBX
            mov RCX,RBX
            mov RSI,R15
            cmovbe RCX,R13
            mov RDX,RCX
            mov QWORD PTR [RSP+40],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+40]
            mov RDI,RBX
            mov R10,R13
            xor R11D,R11D
            mov RSI,RBP
            sub R10,RCX
            sub RDI,RCX
            test RBX,RBX
            sete R11B
            sub RSI,R10
.L_43e4ac:

            mov R13,RBX
            mov RAX,QWORD PTR [R14+304]
            sub R13,RDI
            cmp QWORD PTR [R14+296],33
            je .L_43e4cf

            cmp RAX,50528515
            je .L_43eb88
.L_43e4cf:

            cmp RAX,50528539
            je .L_43e5b0
.L_43e4db:

            mov RDX,QWORD PTR [R14+280]
            mov RAX,QWORD PTR [R14+240]
            cmp R11D,1
            mov R9,QWORD PTR [R14+232]
            mov ECX,0
            cmovne R11D,ECX
.L_43e4fd:

            mov RCX,QWORD PTR [R14+264]
            sub RDX,R13
            mov QWORD PTR [R14+280],RDX
            cmp RCX,RSI
            cmovbe RSI,RCX
.L_43e515:

            add RAX,RSI
            sub RCX,RSI
            mov QWORD PTR [R14+288],R13
            cmp RAX,R9
            mov QWORD PTR [R14+264],RCX
            mov QWORD PTR [R14+240],RAX
            je .L_43ee98

            cmp QWORD PTR [R14+304],50528515
            je .L_43e570
.L_43e546:

            or RCX,RDX
            je .L_43e583

            test R11D,R11D
            jne .L_43ee50

            or RSI,R13
            je .L_43ee50

            mov RDI,QWORD PTR [RSP]
            call .L_43e180

            jmp .L_43e2c4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e570:

            cmp QWORD PTR [R14+19976],0
            je .L_43e546

            lea RDI,QWORD PTR [RAX+5]
            cmp RDI,R9
            jbe .L_43e546
.L_43e583:

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            mov R9,RAX
.L_43e58d:

            cmp QWORD PTR [RSP+32],R9
            ja .L_43ee54

            mov RAX,QWORD PTR [R13+216]
            mov QWORD PTR [R13+224],RAX
            xor EAX,EAX
            jmp .L_43e3b1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e5b0:

            mov RAX,QWORD PTR [R14+20096]
            mov RDX,QWORD PTR [R14+20008]
            sub RAX,R10
            cmp RAX,RDX
            mov QWORD PTR [R14+20104],RAX
            ja .L_43e9a0
.L_43e5d1:

            mov RBX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R14
            mov QWORD PTR [R14+20112],RAX
            mov DWORD PTR [RSP+40],R11D
            mov RDX,RBX
            call .L_43dab0

            test RAX,RAX
            js .L_43eea4

            mov RDX,QWORD PTR [R14+20112]
            add RDX,QWORD PTR [R14+20008]
            sub RBX,RAX
            sub RDX,QWORD PTR [R14+20104]
            mov RSI,RBP
            mov R11D,DWORD PTR [RSP+40]
            sub RSI,RBX
            mov QWORD PTR [R14+20008],RDX
            jmp .L_43e4db
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e630:

            cmp RAX,33
            jne .L_43e390

            nop
            nop
            nop
            nop
            nop
            nop
.L_43e640:

            mov QWORD PTR [R14+344],R13
            lea R13,QWORD PTR [R14+312]
            mov QWORD PTR [R14+336],RDI
            xor ESI,ESI
            mov QWORD PTR [R14+312],R15
            mov QWORD PTR [R14+320],RBX
            mov RDI,R13
            call lzma_code@PLT

            test EAX,EAX
            je .L_43ead0

            cmp EAX,1
            jne .L_43edc8

            mov RDI,R13
            call lzma_end@PLT

            mov DWORD PTR [R14+448],0
            mov R11D,1
.L_43e697:

            mov R10,QWORD PTR [R14+344]
            mov RSI,RBP
            mov RDI,QWORD PTR [R14+320]
            sub RSI,R10
            jmp .L_43e4ac
.L_43e6b0:

            mov EDX,DWORD PTR [R14+19968]
            test EDX,EDX
            je .L_43e390

            mov EAX,DWORD PTR [R14+660]
            test EAX,EAX
            js .L_43e390

            test R13,R13
            je .L_43e390

            test EAX,EAX
            mov QWORD PTR [R14+19912],R15
            mov QWORD PTR [R14+19920],RBX
            mov QWORD PTR [R14+19936],RDI
            mov QWORD PTR [R14+19944],R13
            lea R15,QWORD PTR [R14+19848]
            jne .L_43e750

            mov RAX,QWORD PTR [RSP]
            mov RDI,R15
            mov QWORD PTR [R14+19896],RAX
            lea RAX,QWORD PTR [RIP+.L_43e0f0]
            mov QWORD PTR [R14+19904],RAX
            lea RAX,QWORD PTR [R14+19896]
            mov QWORD PTR [R14+19888],RAX
            call QWORD PTR [RIP+.L_65ad70]

            test EAX,EAX
            je .L_43eeb4

            mov EAX,DWORD PTR [R14+19960]
            test EAX,EAX
            jne .L_43edf0

            mov DWORD PTR [R14+660],1
.L_43e750:

            xor R13D,R13D
            test RBX,RBX
            je .L_43ea58
.L_43e75c:

            lea RAX,QWORD PTR [R14+664]
            mov QWORD PTR [RSP+40],RBX
            mov RBX,R13
            mov R13,RAX
            jmp .L_43e7cf
.L_43e770:

            mov R11D,DWORD PTR [R14+19960]
            test R11D,R11D
            jne .L_43edf0

            mov RCX,QWORD PTR [R14+19936]
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [R14+19936],RSI
            mov BYTE PTR [RCX],AL
            mov RAX,QWORD PTR [R14+19944]
            add QWORD PTR [R14+19952],1
            mov RDI,QWORD PTR [R14+19920]
            sub RAX,1
            cmp RBX,1
            adc RBX,-1
            test RAX,RAX
            mov QWORD PTR [R14+19944],RAX
            je .L_43ee10

            or RDI,RBX
            je .L_43ee70
.L_43e7cf:

            mov RSI,R15
            mov RDI,R13
            call QWORD PTR [RIP+.L_65ad80]

            test EAX,EAX
            jns .L_43e770

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_45040f]
            mov DWORD PTR [R13+660],4294967295
.L_43e7f8:

            xor EAX,EAX
            mov ESI,84
            mov RDI,R14
            call .L_432bc0

            mov RAX,-30
            jmp .L_43e3b1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e818:

            mov DWORD PTR [R14+488],R13D
            lea R13,QWORD PTR [R14+456]
            mov QWORD PTR [R14+480],RDI
            mov QWORD PTR [R14+456],R15
            mov DWORD PTR [R14+464],EBX
            mov RDI,R13
            call BZ2_bzDecompress@PLT

            test EAX,EAX
            mov R11D,EAX
            je .L_43e874

            cmp EAX,4
            jne .L_43ede0

            mov RDI,R13
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            jne .L_43eee6

            mov DWORD PTR [R14+536],0
            mov R11D,1
.L_43e874:

            mov R10D,DWORD PTR [R14+488]
            mov RSI,RBP
            mov EDI,DWORD PTR [R14+464]
            sub RSI,R10
            jmp .L_43e4ac
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e890:

            mov QWORD PTR [R14+568],RDI
            lea RDI,QWORD PTR [R14+544]
            xor ESI,ESI
            mov QWORD PTR [R14+544],R15
            mov DWORD PTR [R14+552],EBX
            mov DWORD PTR [R14+576],R13D
            call inflate@PLT

            cmp EAX,1
            mov R11D,EAX
            ja .L_43eaa8

            mov R10D,DWORD PTR [R14+576]
            mov RSI,RBP
            mov EDI,DWORD PTR [R14+552]
            sub RSI,R10
            jmp .L_43e4ac
          .byte 0x90
.L_43e8e0:

            cmp QWORD PTR [RSP+32],65536
            ja .L_43ea68

            mov QWORD PTR [R13+232],65536
            mov EDI,65536
.L_43e8ff:

            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R13+216],RAX
            jne .L_43e29d
.L_43e914:

            lea RDX,QWORD PTR [RIP+.L_4500f0]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R14
            call .L_432bc0

            mov RAX,-30
            jmp .L_43e3b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e940:

            test RBX,RBX
            sete R11B
            test RCX,RCX
            je .L_43eefb

            test RBP,RBP
            lea RCX,QWORD PTR [R14+19984]
            mov R13,RBP
            mov RDI,R12
            jne .L_43e97d

            jmp .L_43eb75
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e970:

            add RCX,1
            test R13,R13
            je .L_43eb60
.L_43e97d:

            movzx EAX,BYTE PTR [RCX]
            add RDI,1
            sub R13,1
            mov BYTE PTR [RDI-1],AL
            sub QWORD PTR [R14+19976],1
            jne .L_43e970

            jmp .L_43e446
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e9a0:

            mov QWORD PTR [R14+20104],RDX
            mov RAX,RDX
            jmp .L_43e5d1
          .byte 0x90
.L_43e9b0:

            test RSI,RSI
            mov EAX,1
            lea RDX,QWORD PTR [RSP+64]
            cmovne RAX,RSI
            mov RSI,RAX
            call .L_4049d0

            test RAX,RAX
            je .L_43ee64

            mov RDX,QWORD PTR [RSP+64]
            test RDX,RDX
            jle .L_43ee64

            mov RAX,QWORD PTR [R13+280]
            xor ESI,ESI
            cmp RDX,RAX
            mov RCX,RAX
            jg .L_43e9fd

            sub RAX,RDX
            mov RCX,RDX
            mov RSI,RAX
            mov RAX,RDX
.L_43e9fd:

            mov RDX,QWORD PTR [R13+264]
            mov QWORD PTR [R13+280],RSI
            xor ESI,ESI
            cmp RDX,RCX
            jl .L_43ea1b

            sub RDX,RAX
            mov RSI,RDX
            mov RDX,RAX
.L_43ea1b:

            mov QWORD PTR [R13+264],RSI
            mov QWORD PTR [R13+240],RDX
            xor EAX,EAX
            jmp .L_43e3b1
.L_43ea30:

            mov RAX,QWORD PTR [R13+224]
            mov RBX,RAX
            sub RBX,RDI
            test RAX,RAX
            je .L_43e2a8

            test RBX,RBX
            je .L_43e2a8

            jmp .L_43e276
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ea58:

            mov R13,QWORD PTR [R14+264]
            jmp .L_43e75c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ea68:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RAX+1023]
            and RDI,-1024
            mov QWORD PTR [R13+232],RDI
            jmp .L_43e8ff
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ea90:

            mov RCX,QWORD PTR [R14+264]
            xor R13D,R13D
            xor R11D,R11D
            xor ESI,ESI
            jmp .L_43e515
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43eaa8:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_447790]
            mov ECX,EAX
.L_43eab5:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_432bc0

            mov RAX,-30
            jmp .L_43e3b1
.L_43ead0:

            xor R11D,R11D
            jmp .L_43e697
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43eae0:

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R14
            call .L_43dab0

            test RAX,RAX
            js .L_43eea4

            mov RDX,QWORD PTR [R14+20112]
            mov RCX,RDX
            sub RCX,R13
            add QWORD PTR [R14+20008],RCX
            test RBX,RBX
            sete CL
            sub QWORD PTR [RSP+16],RAX
            je .L_43eb29

            add QWORD PTR [RSP+24],RAX
            test CL,CL
            je .L_43e405
.L_43eb29:

            xor R11D,R11D
            mov RSI,RBP
            sub RSI,QWORD PTR [RSP+16]
            test RDX,RDX
            mov RAX,QWORD PTR [R14+240]
            setne R11B
            mov RDX,QWORD PTR [R14+280]
            xor R13D,R13D
            and R11D,ECX
            mov R9,QWORD PTR [R14+232]
            jmp .L_43e4fd
.L_43eb5b:

            sub RBP,R13
            nop
            nop
.L_43eb60:

            mov RDX,QWORD PTR [R14+280]
            mov RAX,QWORD PTR [R14+240]
            mov R9,QWORD PTR [R14+232]
.L_43eb75:

            movzx R11D,R11B
            mov RSI,RBP
            xor R13D,R13D
            jmp .L_43e4fd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43eb88:

            cmp RSI,4
            jbe .L_43ee40

            mov EAX,DWORD PTR [R14+20004]
            mov RDX,QWORD PTR [R14+19992]
            lea R15,QWORD PTR [R12+RSI*1-4]
            mov R8D,DWORD PTR [R14+20000]
            mov DWORD PTR [RSP+40],R11D
            mov DWORD PTR [RSP+56],EAX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ebc0:

            add RAX,R12
            cmp RAX,R15
            jb .L_43ebdd

            jmp .L_43ee88
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ebd0:

            add RAX,1
            cmp RAX,R15
            je .L_43ecf0
.L_43ebdd:

            movzx ECX,BYTE PTR [RAX]
            and ECX,4294967294
            cmp CL,232
            jne .L_43ebd0

            mov RDI,RAX
            sub RDI,R12
            mov RCX,RDI
            sub RCX,RDX
            cmp RCX,3
            ja .L_43ee20

            sub ECX,1
            shl R8D,CL
            and R8D,7
            je .L_43ed80

            lea RDX,QWORD PTR [RIP+.L_450368]
            mov ECX,R8D
            lea R11,QWORD PTR [RIP+.L_450360]
            movzx R9D,BYTE PTR [RDX+RCX*1]
            mov EDX,4
            sub EDX,R9D
            cmp BYTE PTR [R11+RCX*1],0
            movsxd RDX,EDX
            movzx EDX,BYTE PTR [RAX+RDX*1]
            je .L_43ec50

            sub EDX,1
            cmp DL,253
            ja .L_43ec50

            movzx EDX,BYTE PTR [RAX+4]
            sub EDX,1
            cmp DL,253
            ja .L_43ec67

            nop
            nop
.L_43ec50:

            add R8D,R8D
            lea RAX,QWORD PTR [RDI+1]
            and R8D,6
            or R8D,1
.L_43ec5f:

            mov RDX,RDI
            jmp .L_43ebc0
.L_43ec67:

            mov EDX,DWORD PTR [RSP+56]
            lea ECX,DWORD PTR [R9*8]
            mov R9D,ECX
            mov ECX,24
            lea R11D,DWORD PTR [RDX+RDI*1]
            mov EDX,DWORD PTR [RAX+1]
            sub ECX,R9D
            mov DWORD PTR [RSP+48],R9D
            mov DWORD PTR [RSP+60],ECX
            sub EDX,R11D
            mov R9D,EDX
            shr R9D,CL
            mov ECX,R9D
            sub ECX,1
            cmp CL,253
            jbe .L_43ed9d

            mov R9D,32
            sub R9D,DWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],RBP
            mov ECX,R9D
            mov R9D,1
            shl R9D,CL
            mov ECX,DWORD PTR [RSP+60]
            sub R9D,1
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ecd0:

            xor EDX,R9D
            sub EDX,R11D
            mov EBP,EDX
            shr EBP,CL
            sub EBP,1
            cmp BPL,253
            ja .L_43ecd0

            mov RBP,QWORD PTR [RSP+48]
            jmp .L_43ed9d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ecf0:

            mov R11D,DWORD PTR [RSP+40]
.L_43ecf5:

            sub R15,R12
            add DWORD PTR [R14+20004],R15D
            mov QWORD PTR [R14+19992],RDX
            mov RDX,RSI
            mov DWORD PTR [R14+20000],R8D
            sub RDX,R15
.L_43ed13:

            lea RAX,QWORD PTR [RDX-1]
            mov QWORD PTR [R14+19976],RDX
            cmp RAX,3
            ja .L_43ed68

            test RBX,RBX
            je .L_43ed68

            test R11B,1
            jne .L_43ed68

            lea RSI,QWORD PTR [R12+R15*1]
            lea RDI,QWORD PTR [R14+19984]
            mov DWORD PTR [RSP+56],R11D
            mov QWORD PTR [RSP+40],R10
            call memcpy@PLT

            mov RAX,QWORD PTR [R14+304]
            mov RSI,R15
            mov R10,QWORD PTR [RSP+40]
            mov R11D,DWORD PTR [RSP+56]
            jmp .L_43e4cf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ed68:

            mov QWORD PTR [R14+19976],0
            mov RAX,QWORD PTR [R14+304]
            jmp .L_43e4cf
          .byte 0x90
.L_43ed80:

            movzx EDX,BYTE PTR [RAX+4]
            sub EDX,1
            cmp DL,253
            jbe .L_43ec50
.L_43ed90:

            mov EDX,DWORD PTR [RSP+56]
            mov ECX,DWORD PTR [RAX+1]
            add EDX,EDI
            sub ECX,EDX
            mov EDX,ECX
.L_43ed9d:

            mov ECX,EDX
            mov BYTE PTR [RAX+2],DH
            mov BYTE PTR [RAX+1],DL
            shr ECX,24
            and ECX,1
            neg ECX
            mov BYTE PTR [RAX+4],CL
            mov ECX,EDX
            shr ECX,16
            mov BYTE PTR [RAX+3],CL
            lea RAX,QWORD PTR [RDI+5]
            jmp .L_43ec5f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43edc8:

            mov R14,QWORD PTR [RSP]
            mov ECX,EAX
            lea RDX,QWORD PTR [RIP+.L_4503d9]
            jmp .L_43eab5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ede0:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_443863]
            jmp .L_43e39b
.L_43edf0:

            mov DWORD PTR [R14+660],4294967295
            mov RAX,-30
            jmp .L_43e3b1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ee10:

            mov RBX,QWORD PTR [RSP+40]
            mov RSI,RBP
            xor R10D,R10D
            jmp .L_43e4ac
.L_43ee20:

            movzx EDX,BYTE PTR [RAX+4]
            xor R8D,R8D
            sub EDX,1
            cmp DL,253
            jbe .L_43ec50

            jmp .L_43ed90
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ee40:

            mov RDX,RSI
            xor R15D,R15D
            jmp .L_43ed13
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ee50:

            mov R14,QWORD PTR [RSP]
.L_43ee54:

            lea RDX,QWORD PTR [RIP+.L_450425]
            jmp .L_43e39b
.L_43ee60:

            mov R14,QWORD PTR [RSP]
.L_43ee64:

            lea RDX,QWORD PTR [RIP+.L_4503a8]
            jmp .L_43e7f8
.L_43ee70:

            mov RSI,RBP
            mov RBX,QWORD PTR [RSP+40]
            mov R10,RAX
            sub RSI,RAX
            xor EDI,EDI
            jmp .L_43e4ac
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ee88:

            mov R11D,DWORD PTR [RSP+40]
            mov R15,RAX
            jmp .L_43ecf5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ee98:

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            jmp .L_43e58d
.L_43eea4:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4503c2]
            jmp .L_43e39b
.L_43eeb4:

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450118]
            mov DWORD PTR [R13+660],4294967295
            mov ESI,4294967295
            mov RDI,R14
            call .L_432bc0

            mov RAX,-30
            jmp .L_43e3b1
.L_43eee6:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4438b0]
            jmp .L_43e39b
.L_43eef6:

            call __stack_chk_fail@PLT
.L_43eefb:

            test RBP,RBP
            je .L_43ef1a

            test R11B,R11B
            jne .L_43ef1a

            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],R12
            mov R13,RBP
            mov RDI,R12
            jmp .L_43e353
.L_43ef1a:

            xor EBP,EBP
            jmp .L_43eb75
.L_43ef21:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ef30:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RDX
            sub RSP,24
.L_43ef43:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+296],0
            jne .L_43ef75

            cmp QWORD PTR [RBX+304],-1
            je .L_43f000
.L_43ef75:

            mov RDI,QWORD PTR [RBX+224]
            test RDI,RDI
            je .L_43f049

            mov RDX,QWORD PTR [RBX+240]
            cmp RDX,RCX
            jb .L_43efe0
.L_43ef91:

            cmp RBP,RDX
            ja .L_43efd8

            mov RCX,RDX
            mov RAX,RBP
            mov RDX,RBP
            sub RCX,RBP
.L_43efa2:

            mov QWORD PTR [R13],RDI
            add QWORD PTR [RBX+224],RDX
.L_43efad:

            mov QWORD PTR [RBX+240],RCX
.L_43efb4:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_43f099

            add RSP,24
.L_43efcc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43efd8:

            mov RAX,RDX
            xor ECX,ECX
            jmp .L_43efa2
          .byte 0x90
.L_43efe0:

            mov RSI,RCX
            mov RDI,R12
            call .L_43e1c0

            test RAX,RAX
            js .L_43f06b

            mov RDX,QWORD PTR [RBX+240]
            mov RDI,QWORD PTR [RBX+224]
            jmp .L_43ef91
.L_43f000:

            mov RDX,RSP
            mov ESI,1
            call .L_4049d0

            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            jle .L_43f077

            mov RCX,QWORD PTR [RBX+240]
            mov RDX,RAX
            cmp RCX,RAX
            jae .L_43f02f

            mov RAX,RCX
            mov RDX,RCX
.L_43f02f:

            cmp RBP,RDX
            jae .L_43f03a

            mov RAX,RBP
            mov RDX,RBP
.L_43f03a:

            mov QWORD PTR [RBX+288],RDX
            sub RCX,RDX
            jmp .L_43efad
.L_43f049:

            lea RDX,QWORD PTR [RIP+.L_450425]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R12
            call .L_432bc0

            mov RAX,-30
            jmp .L_43efb4
.L_43f06b:

            mov RAX,-30
            jmp .L_43efb4
.L_43f077:

            lea RDX,QWORD PTR [RIP+.L_45043b]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R12
            call .L_432bc0

            mov RAX,-30
            jmp .L_43efb4
.L_43f099:

            call __stack_chk_fail@PLT
.L_43f09e:

            nop
            nop
.L_43f0a0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_43f0ad:

            mov RDI,QWORD PTR [RDI+16]
            call free@PLT

            mov RDI,QWORD PTR [R12+40]
            call free@PLT

            mov RDI,QWORD PTR [R12+24]
            call free@PLT

            mov RDI,QWORD PTR [R12+32]
            call free@PLT

            mov RDI,QWORD PTR [R12+56]
            test RDI,RDI
            je .L_43f165

            cmp QWORD PTR [R12+48],0
            je .L_43f160

            xor R13D,R13D
            xor EAX,EAX
            nop
.L_43f0f0:

            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RDX*4]
            lea RBX,QWORD PTR [RDI+RAX*8]
            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_43f132

            cmp QWORD PTR [RBX],0
            je .L_43f12d

            xor EBP,EBP
            xor EAX,EAX
            nop
.L_43f110:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RDI,QWORD PTR [RDI+RAX*8+32]
            call free@PLT

            lea EAX,DWORD PTR [RBP+1]
            cmp RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            jb .L_43f110
.L_43f12d:

            call free@PLT
.L_43f132:

            mov RDI,QWORD PTR [RBX+24]
            call free@PLT

            mov RDI,QWORD PTR [RBX+40]
            call free@PLT

            mov RDI,QWORD PTR [RBX+64]
            call free@PLT

            lea EAX,DWORD PTR [R13+1]
            cmp RAX,QWORD PTR [R12+48]
            mov RDI,QWORD PTR [R12+56]
            mov R13,RAX
            jb .L_43f0f0
.L_43f160:

            call free@PLT
.L_43f165:

            mov RDI,QWORD PTR [R12+80]
            call free@PLT

            mov RDI,QWORD PTR [R12+88]
            call free@PLT

            mov RDI,QWORD PTR [R12+96]
            add RSP,8
.L_43f182:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp free@PLT
.L_43f18d:

            nop
            nop
            nop
.L_43f190:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_43f199:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDI,RBX
            call .L_43f0a0

            mov RDI,QWORD PTR [RBX+160]
            call free@PLT

            mov RDI,QWORD PTR [RBX+176]
            call free@PLT

            mov ESI,DWORD PTR [RBX+448]
            test ESI,ESI
            jne .L_43f270

            mov ECX,DWORD PTR [RBX+536]
            test ECX,ECX
            jne .L_43f28a
.L_43f1df:

            mov EDX,DWORD PTR [RBX+656]
            test EDX,EDX
            jne .L_43f2b2
.L_43f1ed:

            mov EAX,DWORD PTR [RBX+19968]
            test EAX,EAX
            je .L_43f20b

            lea RDI,QWORD PTR [RBX+664]
            lea RSI,QWORD PTR [RIP+.L_65b6e0]
            call QWORD PTR [RIP+.L_65ad50]
.L_43f20b:

            mov RDI,QWORD PTR [RBX+216]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20016]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20024]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20032]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20088]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_43f261:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f270:

            lea RDI,QWORD PTR [RBX+312]
            call lzma_end@PLT

            mov ECX,DWORD PTR [RBX+536]
            test ECX,ECX
            je .L_43f1df
.L_43f28a:

            lea RDI,QWORD PTR [RBX+456]
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            jne .L_43f2f0
.L_43f29a:

            mov EDX,DWORD PTR [RBX+656]
            mov DWORD PTR [RBX+536],0
            test EDX,EDX
            je .L_43f1ed
.L_43f2b2:

            lea RDI,QWORD PTR [RBX+544]
            call inflateEnd@PLT

            test EAX,EAX
            jne .L_43f2d8
.L_43f2c2:

            mov DWORD PTR [RBX+656],0
            jmp .L_43f1ed
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f2d8:

            lea RDX,QWORD PTR [RIP+.L_4453e8]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_43f2c2
.L_43f2f0:

            lea RDX,QWORD PTR [RIP+.L_447740]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_43f29a
.L_43f308:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f310:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,RSI
            sub RSP,144
.L_43f325:

            mov R8,QWORD PTR [RDX]
            mov QWORD PTR [RSI+304],-1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            cmp R8,197633
            mov QWORD PTR [RSI+296],R8
            je .L_43f429

            jbe .L_43f420

            cmp R8,262408
            je .L_43f429

            cmp R8,262658
            je .L_43f429
.L_43f37a:

            cmp R8,50528539
            je .L_43f800

            ja .L_43f4e0

            cmp R8,196865
            je .L_43f6b0

            jbe .L_43f490

            cmp R8,262408
            je .L_43f810

            jbe .L_43f578

            cmp R8,262658
            jne .L_43f7f0

            mov ECX,DWORD PTR [RBX+536]
            lea R12,QWORD PTR [RBX+456]
            test ECX,ECX
            jne .L_43f8d8
.L_43f3d5:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R12
            call BZ2_bzDecompressInit@PLT

            cmp EAX,-3
            je .L_43f978
.L_43f3ea:

            test EAX,EAX
            jne .L_43fae4

            mov DWORD PTR [RBX+536],1
            mov QWORD PTR [RBX+468],0
            mov QWORD PTR [RBX+492],0
            jmp .L_43f4b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f420:

            test R8,R8
            jne .L_43f37a
.L_43f429:

            test RCX,RCX
            je .L_43f37a

            mov RAX,QWORD PTR [RCX]
            cmp RAX,50528515
            je .L_43f449

            cmp RAX,50528539
            jne .L_43f8af
.L_43f449:

            cmp RAX,50528515
            mov QWORD PTR [RBX+304],RAX
            mov DWORD PTR [RBX+19972],0
            jne .L_43f37a

            movabs RAX,21474836480
            mov QWORD PTR [RBX+19992],-1
            mov QWORD PTR [RBX+20000],RAX
            jmp .L_43f37a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f490:

            cmp R8,3
            je .L_43f800

            cmp R8,33
            je .L_43f6b0

            xor EAX,EAX
            test R8,R8
            jne .L_43f697

            nop
.L_43f4b0:

            mov RSI,QWORD PTR [RSP+136]
            xor RSI,QWORD PTR FS:[40]
            jne .L_43fb4b

            add RSP,144
.L_43f4ce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f4e0:

            cmp R8,50530049
            je .L_43f800

            jbe .L_43f670

            cmp R8,116457729
            je .L_43f518

            jbe .L_43f960

            cmp R8,116458243
            je .L_43f518

            cmp R8,116459265
            jne .L_43f697
.L_43f518:

            mov RDI,QWORD PTR [RBP+160]
            test RDI,RDI
            je .L_43f550

            mov ESI,1
            call .L_439730

            mov RDI,QWORD PTR [RBP+160]
            mov ESI,1
            call .L_439710

            mov R8,QWORD PTR [RBX+296]
            mov DWORD PTR [RBX+20728],1
.L_43f550:

            lea RDX,QWORD PTR [RIP+.L_450190]
            mov RCX,R8
.L_43f55a:

            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_43f569:

            mov EAX,4294967271
            jmp .L_43f4b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f578:

            cmp R8,197633
            jne .L_43f697

            mov EAX,DWORD PTR [RBX+19968]
            test EAX,EAX
            je .L_43f5b5

            mov QWORD PTR [RSP],RDX
            lea RDI,QWORD PTR [RBX+664]
            lea RSI,QWORD PTR [RIP+.L_65b6e0]
            call QWORD PTR [RIP+.L_65ad50]

            mov RDX,QWORD PTR [RSP]
            mov DWORD PTR [RBX+19968],0
.L_43f5b5:

            cmp QWORD PTR [RDX+24],4
            jbe .L_43fac4

            mov RAX,QWORD PTR [RDX+32]
            movzx R13D,BYTE PTR [RAX]
            mov R14D,DWORD PTR [RAX+1]
            lea EAX,DWORD PTR [R13-2]
            cmp EAX,62
            ja .L_43fac4

            lea EAX,DWORD PTR [R14-2048]
            cmp EAX,4294965211
            ja .L_43fac4

            lea R12,QWORD PTR [RBX+664]
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad40]

            lea RDX,QWORD PTR [RIP+.L_65b6e0]
            mov ESI,R14D
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad48]

            test EAX,EAX
            je .L_43fb50

            mov ESI,R13D
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad58]

            lea RDI,QWORD PTR [RBX+19848]
            call QWORD PTR [RIP+.L_65ad60]

            mov DWORD PTR [RBX+19968],1
            mov DWORD PTR [RBX+660],0
            xor EAX,EAX
            mov DWORD PTR [RBX+19960],0
            mov QWORD PTR [RBX+19928],0
            mov QWORD PTR [RBX+19952],0
            jmp .L_43f4b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f670:

            cmp R8,50529281
            je .L_43f800

            cmp R8,50529537
            je .L_43f800

            cmp R8,50528773
            je .L_43f800
.L_43f697:

            mov RCX,R8
            lea RDX,QWORD PTR [RIP+.L_450487]
            jmp .L_43f55a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f6b0:

            mov ESI,DWORD PTR [RBX+448]
            test ESI,ESI
            jne .L_43f8f0
.L_43f6be:

            test RCX,RCX
            je .L_43f950

            mov RCX,QWORD PTR [RCX]
            mov QWORD PTR [RSP+72],0
            cmp RCX,50528773
            mov QWORD PTR [RBX+304],RCX
            je .L_43fa98

            jbe .L_43f870

            cmp RCX,50529537
            je .L_43fa5e

            jbe .L_43f990

            cmp RCX,50530049
            je .L_43fa7b

            cmp RCX,50530309
            jne .L_43f894

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],9
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f738:

            cmp QWORD PTR [RBX+296],33
            je .L_43f938
.L_43f746:

            movsxd R12,R13D
            movabs RSI,4611686018427387905
            mov RAX,R12
            shl RAX,4
            mov QWORD PTR [RSP+RAX*1+64],RSI
.L_43f75f:

            mov RCX,QWORD PTR [RDX+24]
            mov RDX,QWORD PTR [RDX+32]
            shl R12,4
            xor ESI,ESI
            mov QWORD PTR [RSP+R12*1+72],0
            call lzma_properties_decode@PLT

            test EAX,EAX
            jne .L_43fab5

            lea EAX,DWORD PTR [R13+1]
            lea RDI,QWORD PTR [RBX+312]
            mov RSI,R14
            cdqe 
            shl RAX,4
            mov QWORD PTR [RSP+RAX*1+64],-1
            mov QWORD PTR [RSP+RAX*1+72],0
            call lzma_raw_decoder@PLT

            mov RDI,QWORD PTR [RSP+R12*1+72]
            mov DWORD PTR [RSP],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            jne .L_43fab5

            mov DWORD PTR [RBX+448],1
            mov QWORD PTR [RBX+328],0
            mov QWORD PTR [RBX+352],0
            jmp .L_43f4b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f7f0:

            cmp R8,50528515
            jne .L_43f697

            nop
            nop
            nop
.L_43f800:

            mov RCX,R8
            lea RDX,QWORD PTR [RIP+.L_450455]
            jmp .L_43f55a
          .byte 0x90
.L_43f810:

            mov EDX,DWORD PTR [RBX+656]
            lea RDI,QWORD PTR [RBX+544]
            test EDX,EDX
            je .L_43f858

            call inflateReset@PLT
.L_43f826:

            test EAX,EAX
            jne .L_43fb34

            mov DWORD PTR [RBX+656],1
            mov QWORD PTR [RBX+560],0
            mov QWORD PTR [RBX+584],0
            jmp .L_43f4b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f858:

            lea RDX,QWORD PTR [RIP+.L_443a68]
            mov ECX,112
            mov ESI,4294967281
            call inflateInit2_@PLT

            jmp .L_43f826
.L_43f870:

            cmp RCX,50528515
            je .L_43fa1a

            cmp RCX,50528539
            je .L_43fa00

            cmp RCX,3
            je .L_43f9ba
.L_43f894:

            lea RDX,QWORD PTR [RIP+.L_450455]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0

            jmp .L_43f569
.L_43f8af:

            lea RDX,QWORD PTR [RIP+.L_450148]
            mov RCX,RAX
            mov ESI,4294967295
            xor EAX,EAX
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_43f4b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f8d8:

            mov RDI,R12
            call BZ2_bzDecompressEnd@PLT

            mov DWORD PTR [RBX+536],0
            jmp .L_43f3d5
          .byte 0x90
.L_43f8f0:

            lea RDI,QWORD PTR [RBX+312]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call lzma_end@PLT

            mov DWORD PTR [RBX+448],0
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            jmp .L_43f6be
.L_43f91d:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],4
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            nop
            nop
            nop
.L_43f938:

            movsxd R12,R13D
            mov RAX,R12
            shl RAX,4
            mov QWORD PTR [RSP+RAX*1+64],33
            jmp .L_43f75f
.L_43f950:

            lea R14,QWORD PTR [RSP+64]
            xor R13D,R13D
            mov RDI,R14
            jmp .L_43f738
.L_43f960:

            cmp R8,50530309
            je .L_43f800

            jmp .L_43f697
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f978:

            mov EDX,1
            xor ESI,ESI
            mov RDI,R12
            call BZ2_bzDecompressInit@PLT

            jmp .L_43f3ea
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43f990:

            cmp RCX,50529281
            jne .L_43f894

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],6
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_43f738
.L_43f9ba:

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+16]
            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],3
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+72],RAX
            mov R13D,1
            movaps XMMWORD PTR [RSP+16],XMM0
            lea RDI,QWORD PTR [R14+16]
            mov DWORD PTR [RSP+20],1
            movaps XMMWORD PTR [RSP+32],XMM0
            jmp .L_43f738
.L_43fa00:

            lea R14,QWORD PTR [RSP+64]
            mov DWORD PTR [RBX+19972],0
            xor R13D,R13D
            mov RDI,R14
            jmp .L_43f738
.L_43fa1a:

            cmp QWORD PTR [RBX+296],33
            je .L_43f91d

            lea R14,QWORD PTR [RSP+64]
            movabs RAX,21474836480
            mov DWORD PTR [RBX+19972],0
            mov QWORD PTR [RBX+19992],-1
            mov QWORD PTR [RBX+20000],RAX
            xor R13D,R13D
            mov RDI,R14
            jmp .L_43f746
.L_43fa5e:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],7
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_43f738
.L_43fa7b:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],8
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_43f738
.L_43fa98:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],5
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_43f738
.L_43fab5:

            mov ESI,EAX
            mov RDI,RBP
            call .L_43e020

            jmp .L_43f569
.L_43fac4:

            lea RDX,QWORD PTR [RIP+.L_45046e]
.L_43facb:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967271
            jmp .L_43f4b0
.L_43fae4:

            cmp EAX,-3
            je .L_43fb3d

            cmp EAX,-2
            mov ESI,4294967295
            lea RCX,QWORD PTR [RIP+.L_443812]
            je .L_43fb0f

            cmp EAX,-9
            lea RCX,QWORD PTR [RIP+.L_44382a]
            lea RAX,QWORD PTR [RIP+.L_447c02]
            cmovne RCX,RAX
.L_43fb0f:

            lea RDX,QWORD PTR [RIP+.L_4477d8]
            xor EAX,EAX
            mov RDI,RBP
            call .L_432bc0

            mov DWORD PTR [RBX+536],0
            mov EAX,4294967271
            jmp .L_43f4b0
.L_43fb34:

            lea RDX,QWORD PTR [RIP+.L_4477b0]
            jmp .L_43facb
.L_43fb3d:

            mov ESI,12
            lea RCX,QWORD PTR [RIP+.L_44383f]
            jmp .L_43fb0f
.L_43fb4b:

            call __stack_chk_fail@PLT
.L_43fb50:

            lea RDX,QWORD PTR [RIP+.L_450168]
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_43f4b0
.L_43fb6e:

            nop
            nop
.L_43fb70:

            push RBP
            push RBX
            sub RSP,8
.L_43fb76:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RBX+276]
            test EAX,EAX
            je .L_43fbfb

            mov ECX,DWORD PTR [RBX+272]
            mov RSI,QWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RSI+RCX*8]
            mov RDX,RCX
            mov QWORD PTR [RBX+280],RSI
            mov RSI,QWORD PTR [RBX+40]
            mov RBP,QWORD PTR [RSI+RCX*8]
            cmp QWORD PTR [RBX+248],RBP
            jne .L_43fbd0
.L_43fbb3:

            sub EAX,1
            add EDX,1
            mov DWORD PTR [RBX+276],EAX
            mov DWORD PTR [RBX+272],EDX
            xor EAX,EAX
.L_43fbc7:

            add RSP,8
.L_43fbcb:

            pop RBX
            pop RBP
            ret 

            nop
            nop
.L_43fbd0:

            mov RSI,QWORD PTR [RBX+136]
            xor EDX,EDX
            add RSI,RBP
            call .L_404dc0

            test RAX,RAX
            js .L_43fc13

            mov QWORD PTR [RBX+248],RBP
            mov EDX,DWORD PTR [RBX+272]
            mov EAX,DWORD PTR [RBX+276]
            jmp .L_43fbb3
.L_43fbfb:

            lea RDX,QWORD PTR [RIP+.L_450425]
            mov ESI,4294967295
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_43fbc7
.L_43fc13:

            mov EAX,4294967266
            jmp .L_43fbc7
.L_43fc1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43fc20:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_45049d]
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,216
.L_43fc3e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            test EDX,EDX
            mov RBX,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_447dc2]
            cmovne R13,RAX
            lea R12,QWORD PTR [RBX+20016]
            lea R14,QWORD PTR [RBX+20040]
.L_43fc76:

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_43fc84

            call free@PLT
.L_43fc84:

            mov QWORD PTR [R12],0
            add R12,8
            cmp R12,R14
            jne .L_43fc76

            mov R11,QWORD PTR [R15+32]
            mov EAX,DWORD PTR [R15+88]
            mov RDI,R15
            mov DWORD PTR [RBX+276],R11D
            mov DWORD PTR [RBX+272],EAX
            call .L_43da40

            mov RCX,QWORD PTR [R15]
            mov QWORD PTR [RBX+264],RAX
            mov QWORD PTR [RBX+240],0
            mov R14,QWORD PTR [R15+8]
            test RCX,RCX
            je .L_43fea0

            xor ESI,ESI
            xor EDX,EDX
            xor EAX,EAX
.L_43fcda:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+RAX*8]
            cmp RAX,116457729
            je .L_43fe24

            ja .L_43fe10

            cmp RAX,50528539
            sete AL
            movzx EAX,AL
            add ESI,EAX
.L_43fd02:

            lea EAX,DWORD PTR [RDX+1]
            cmp RAX,RCX
            mov RDX,RAX
            jb .L_43fcda

            cmp DWORD PTR [RBX+20728],-1
            jne .L_43fd20

            mov DWORD PTR [RBX+20728],0
.L_43fd20:

            cmp RCX,2
            jbe .L_4401b8

            test ESI,ESI
            je .L_4401d8

            cmp ESI,1
            jg .L_4401d8

            xor R8D,R8D
.L_43fd3e:

            lea RAX,QWORD PTR [RIP+.L_450380]
            cmp RCX,4
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+88],RAX
            mov QWORD PTR [RSP+96],RAX
            mov RAX,-1
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+152],RAX
            mov QWORD PTR [RSP+160],RAX
            movabs RAX,4294967296
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+68],RAX
            mov DWORD PTR [RSP+76],2
            je .L_440140
.L_43fdd6:

            test R8,R8
            je .L_43fdee

            cmp QWORD PTR [R8],50528539
            jne .L_43fdee

            cmp R11D,4
            je .L_43fed4
.L_43fdee:

            lea RDX,QWORD PTR [RIP+.L_450240]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_43fe73
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fe10:

            cmp RAX,116458243
            je .L_43fe24

            cmp RAX,116459265
            jne .L_43fd02
.L_43fe24:

            mov RDI,QWORD PTR [RBP+160]
            mov DWORD PTR [RBX+20728],1
            test RDI,RDI
            je .L_43fe55

            mov ESI,1
            call .L_439710

            mov RDI,QWORD PTR [RBP+160]
            mov ESI,1
            call .L_439730
.L_43fe55:

            lea RDX,QWORD PTR [RIP+.L_4501c0]
            mov RCX,R13
.L_43fe5f:

            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_432bc0
.L_43fe6e:

            mov EAX,4294967266
.L_43fe73:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            jne .L_440277

            add RSP,216
.L_43fe91:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43fea0:

            xor R8D,R8D
            cmp DWORD PTR [RBX+20728],-1
            je .L_43fec8
.L_43feac:

            mov RCX,R8
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBP
            call .L_43f310

            test EAX,EAX
            je .L_43fe73

            jmp .L_43fe6e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fec8:

            mov DWORD PTR [RBX+20728],0
            jmp .L_43feac
.L_43fed4:

            cmp QWORD PTR [R15+48],5
            jne .L_43fdee

            cmp QWORD PTR [R15+56],2
            jne .L_43fdee

            mov RAX,QWORD PTR [R15+64]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+20008],RAX
.L_43fef8:

            mov RDI,RBP
            mov QWORD PTR [RSP],R8
            call .L_43fb70

            test EAX,EAX
            js .L_43fe73

            mov RAX,QWORD PTR [RBX+280]
            mov RDI,RBP
            lea R13,QWORD PTR [RSP+176]
            xor R12D,R12D
            mov QWORD PTR [RBX+288],RAX
            call .L_43e180

            lea RAX,QWORD PTR [RSP+80]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+16],RAX
.L_43ff45:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            mov RDX,QWORD PTR [RAX+R12*1]
            mov QWORD PTR [RSP],RDX
            call .L_43fb70

            test EAX,EAX
            mov RDX,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+24]
            js .L_440204

            mov RAX,QWORD PTR [RSP+R12*1+144]
            cmp RAX,-1
            je .L_4401f1

            mov QWORD PTR [RBX+264],RAX
.L_43ff89:

            xor ECX,ECX
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP],R8
            call .L_43f310

            test EAX,EAX
            mov R8,QWORD PTR [RSP]
            jne .L_440326

            mov RDI,QWORD PTR [RBX+264]
            mov QWORD PTR [RSP+24],R8
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+R12*1+112],RAX
            mov R8,QWORD PTR [RSP+24]
            jne .L_44006c

            jmp .L_4402e5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ffd8:

            xor ESI,ESI
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            call .L_43e1c0

            test EAX,EAX
            mov R8,QWORD PTR [RSP+24]
            js .L_440204

            mov RDX,QWORD PTR [RBX+240]
            mov RSI,QWORD PTR [RSP+16]
            xor ECX,ECX
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            call .L_43ef30

            test RAX,RAX
            mov RCX,RAX
            mov R8,QWORD PTR [RSP+24]
            js .L_440247

            mov R11,QWORD PTR [R13]
            mov RAX,QWORD PTR [RSP]
            mov RDX,RCX
            mov RSI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP+24],RCX
            lea RDI,QWORD PTR [RAX+R11*1]
            mov QWORD PTR [RSP+32],R11
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+40]
            add RCX,R11
            cmp QWORD PTR [RBX+288],0
            mov QWORD PTR [R13],RCX
            jne .L_440230
.L_44006c:

            cmp QWORD PTR [RBX+280],0
            jne .L_43ffd8

            add R12,8
            add R13,8
            cmp R12,24
            jne .L_43ff45

            lea RCX,QWORD PTR [RSP+68]
            xor EAX,EAX
.L_440093:

            movsxd RDX,DWORD PTR [RCX+RAX*4]
            mov RSI,QWORD PTR [RSP+RDX*8+112]
            mov RDX,QWORD PTR [RSP+RDX*8+176]
            mov QWORD PTR [RBX+RAX*8+20016],RSI
            mov QWORD PTR [RBX+RAX*8+20040],RDX
            mov QWORD PTR [RBX+RAX*8+20064],RDX
            add RAX,1
            cmp RAX,3
            jne .L_440093

            cmp QWORD PTR [RBX+20088],0
            je .L_440351
.L_4400d4:

            mov EAX,DWORD PTR [R15+88]
            mov QWORD PTR [RBX+20104],0
            mov RDI,R15
            mov QWORD PTR [RBX+20112],0
            mov QWORD PTR [RBX+19976],0
            mov QWORD PTR [RBX+20648],0
            mov DWORD PTR [RBX+276],1
            mov DWORD PTR [RBX+272],EAX
            mov QWORD PTR [RSP],R8
            call .L_43da40

            mov QWORD PTR [RBX+240],0
            mov QWORD PTR [RBX+264],RAX
            mov R8,QWORD PTR [RSP]
            jmp .L_43feac
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440140:

            cmp QWORD PTR [R14+120],50528539
            jne .L_43fdd6

            cmp QWORD PTR [R15+48],7
            jne .L_43fdd6

            cmp QWORD PTR [R15+56],4
            jne .L_43fdd6

            cmp R11D,4
            jne .L_43fdd6

            mov RAX,QWORD PTR [R15+24]
            cmp QWORD PTR [RAX],5
            je .L_44029c

            cmp QWORD PTR [R14],0
            mov RAX,QWORD PTR [R14+40]
            jne .L_44027c

            test RAX,RAX
            jne .L_44039c

            mov RAX,QWORD PTR [R15+64]
            lea RDX,QWORD PTR [R14+80]
.L_44019b:

            mov RAX,QWORD PTR [RAX+16]
            lea R8,QWORD PTR [R14+120]
            mov R14,RDX
            mov QWORD PTR [RBX+20008],RAX
            jmp .L_43fef8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4401b8:

            cmp ESI,1
            jg .L_4401d8

            cmp RCX,2
            jne .L_4401e7

            lea R8,QWORD PTR [R14+40]
.L_4401c7:

            test ESI,ESI
            jne .L_43fd3e

            jmp .L_43feac
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4401d8:

            mov RCX,R13
            lea RDX,QWORD PTR [RIP+.L_4501f8]
            jmp .L_43fe5f
.L_4401e7:

            mov ECX,1
            xor R8D,R8D
            jmp .L_4401c7
.L_4401f1:

            mov RAX,QWORD PTR [RBX+280]
            mov QWORD PTR [RBX+264],RAX
            jmp .L_43ff89
.L_440204:

            mov RDI,QWORD PTR [RSP+112]
            mov DWORD PTR [RSP],EAX
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov EAX,DWORD PTR [RSP]
            jmp .L_43fe73
.L_440230:

            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            call .L_43e180

            mov R8,QWORD PTR [RSP+24]
            jmp .L_44006c
.L_440247:

            mov RDI,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP],RAX
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov RCX,QWORD PTR [RSP]
            mov EAX,ECX
            jmp .L_43fe73
.L_440277:

            call __stack_chk_fail@PLT
.L_44027c:

            test RAX,RAX
            jne .L_43fdee

            cmp QWORD PTR [R14+80],0
            jne .L_43fdee

            mov RDX,R14
            mov RAX,QWORD PTR [R15+64]
            jmp .L_44019b
.L_44029c:

            movabs RAX,8589934593
            mov DWORD PTR [RSP+76],0
            mov QWORD PTR [RSP+96],R14
            mov QWORD PTR [RSP+68],RAX
            lea RAX,QWORD PTR [R14+40]
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [R15+64]
            mov RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+160],RDX
            lea RDX,QWORD PTR [R14+80]
            jmp .L_44019b
.L_4402e5:

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_4500f0]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_43fe73
.L_440326:

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov EAX,4294967266
            jmp .L_43fe73
.L_440351:

            mov QWORD PTR [RBX+20096],32768
            mov EDI,32768
            mov QWORD PTR [RSP],R8
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+20088],RAX
            mov R8,QWORD PTR [RSP]
            jne .L_4400d4

            lea RDX,QWORD PTR [RIP+.L_4500f0]
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_43fe73
.L_44039c:

            cmp QWORD PTR [R14+80],0
            jne .L_43fdee

            lea RDX,QWORD PTR [R14+40]
            mov RAX,QWORD PTR [R15+64]
            jmp .L_44019b
.L_4403b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4403c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4403ce:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+240],0
            jne .L_4404bc

            cmp QWORD PTR [RBX+280],0
            mov R15,RCX
            mov R14,RDX
            mov R12,RSI
            mov RBP,RDI
            jne .L_440490

            mov R13,QWORD PTR [RBX+264]
            test R13,R13
            jne .L_440490

            mov R8D,DWORD PTR [RBX+276]
            test R8D,R8D
            jne .L_4404f9

            mov EDI,DWORD PTR [RBX+104]
            test EDI,EDI
            jne .L_4405b9

            mov EAX,DWORD PTR [RBX+256]
            test EAX,EAX
            jne .L_44046c

            mov RAX,QWORD PTR [RBX+168]
            mov RSI,QWORD PTR [RBX+56]
            mov EAX,DWORD PTR [RAX+16]
            lea RDX,QWORD PTR [RAX+RAX*2]
            test EAX,EAX
            mov RCX,RAX
            lea RDX,QWORD PTR [RAX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*8]
            mov RDX,QWORD PTR [RDX+96]
            jne .L_440463

            test RDX,RDX
            je .L_440590
.L_440463:

            mov DWORD PTR [RBX+256],ECX
            mov R13,RDX
.L_44046c:

            cmp QWORD PTR [RBX+48],RAX
            ja .L_4404d0

            mov QWORD PTR [R12],0
            add RSP,8
.L_44047e:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
.L_440490:

            xor ESI,ESI
            mov RDI,RBP
            call .L_43e1c0

            test RAX,RAX
            jns .L_4404b0
.L_44049f:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4404b0:

            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
.L_4404bc:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_43ef30
          .byte 0x90
.L_4404d0:

            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RDI,RBP
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [RBX+56]
            lea RSI,QWORD PTR [RAX+RDX*8]
            xor EDX,EDX
            call .L_43fc20

            test EAX,EAX
            jne .L_4405db

            add DWORD PTR [RBX+256],1
.L_4404f9:

            mov RDI,RBP
            call .L_43fb70

            cdqe 
            test RAX,RAX
            js .L_44049f

            xor ESI,ESI
            mov RDI,RBP
            call .L_43e1c0

            test RAX,RAX
            js .L_44049f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440520:

            test R13,R13
            je .L_4404b0

            cmp QWORD PTR [RBX+240],0
            jne .L_440556

            cmp QWORD PTR [RBX+280],0
            jne .L_440543

            cmp QWORD PTR [RBX+264],0
            je .L_440597
.L_440543:

            xor ESI,ESI
            mov RDI,RBP
            call .L_43e1c0

            test RAX,RAX
            js .L_44049f
.L_440556:

            xor ECX,ECX
            mov RDX,R13
            mov RSI,R12
            mov RDI,RBP
            call .L_43ef30

            test RAX,RAX
            js .L_44049f

            sub R13,RAX
            cmp QWORD PTR [RBX+288],0
            je .L_440520

            mov RDI,RBP
            call .L_43e180

            jmp .L_440520
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440590:

            xor EAX,EAX
            jmp .L_44046c
.L_440597:

            lea RDX,QWORD PTR [RIP+.L_4503a8]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov RAX,-30
            jmp .L_44049f
.L_4405b9:

            lea RDX,QWORD PTR [RIP+.L_4504aa]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_432bc0

            mov RAX,-30
            jmp .L_44049f
.L_4405db:

            mov RAX,-30
            jmp .L_44049f
.L_4405e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4405f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_440601:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            cmp QWORD PTR [R12+288],0
            jne .L_4406c8
.L_44062a:

            xor EAX,EAX
            cmp BYTE PTR [R12+208],0
            je .L_440660
.L_440637:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_440748

            add RSP,24
.L_44064f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440660:

            mov RAX,QWORD PTR [RBP+2472]
            mov R15,QWORD PTR [R12+192]
            mov R13,QWORD PTR [RAX]
            mov EAX,DWORD PTR [R13+256]
            test EAX,EAX
            je .L_4406d8

            test R15,R15
            mov RBX,R15
            mov R14,RSP
            jne .L_440695

            jmp .L_4406f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440690:

            test RBX,RBX
            je .L_4406f3
.L_440695:

            xor ECX,ECX
            mov RDX,RBX
            mov RSI,R14
            mov RDI,RBP
            call .L_4403c0

            test RAX,RAX
            js .L_440718

            je .L_440728

            sub RBX,RAX
            cmp QWORD PTR [R13+288],0
            je .L_440690

            mov RDI,RBP
            call .L_43e180

            jmp .L_440690
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4406c8:

            call .L_43e180

            jmp .L_44062a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4406d8:

            mov RAX,QWORD PTR [R13+168]
            mov EAX,DWORD PTR [RAX+16]
            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [R13+56]
            add QWORD PTR [RAX+RDX*8+96],R15
.L_4406f3:

            test R15,R15
            js .L_440718
.L_4406f8:

            mov QWORD PTR [R12+192],0
            xor EAX,EAX
            mov BYTE PTR [R12+208],1
            jmp .L_440637
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440718:

            mov EAX,4294967266
            jmp .L_440637
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440728:

            lea RDX,QWORD PTR [RIP+.L_4503a8]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_440637
.L_440748:

            call __stack_chk_fail@PLT
.L_44074d:

            nop
            nop
            nop
.L_440750:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov R14,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,24
.L_44076a:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp DWORD PTR [RBX+20728],-1
            jne .L_440787

            mov DWORD PTR [RBX+20728],0
.L_440787:

            cmp QWORD PTR [RBX+288],0
            jne .L_440830
.L_440795:

            mov RAX,QWORD PTR [RBX+184]
            mov R13D,1
            mov QWORD PTR [R14],RAX
            mov QWORD PTR [R15],0
            mov QWORD PTR [R12],0
            cmp BYTE PTR [RBX+208],0
            je .L_4407d0
.L_4407bd:

            add RSP,24
.L_4407c1:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4407d0:

            mov RDX,QWORD PTR [RBX+192]
            xor ECX,ECX
            mov RSI,R12
            mov RDI,RBP
            call .L_4403c0

            test RAX,RAX
            mov R9,RAX
            mov R13D,EAX
            js .L_4407bd

            je .L_4408b3

            sub QWORD PTR [RBX+192],RAX
            jne .L_440805

            mov BYTE PTR [RBX+208],1
.L_440805:

            mov RAX,QWORD PTR [RBX+168]
            xor R13D,R13D
            test BYTE PTR [RAX+24],8
            jne .L_440840
.L_440815:

            mov QWORD PTR [R15],R9
            mov RAX,QWORD PTR [RBX+184]
            mov QWORD PTR [R14],RAX
            add QWORD PTR [RBX+184],R9
            jmp .L_4407bd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440830:

            mov RDI,RBP
            call .L_43e180

            jmp .L_440795
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440840:

            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [R12]
            mov EDX,R9D
            mov QWORD PTR [RSP+8],R9
            call crc32@PLT

            cmp BYTE PTR [RBX+208],0
            mov QWORD PTR [RBX+200],RAX
            mov R9,QWORD PTR [RSP+8]
            je .L_440815

            mov RDX,QWORD PTR [RBX+168]
            test BYTE PTR [RDX+24],8
            je .L_440815

            mov ECX,DWORD PTR [RDX+20]
            mov RDX,QWORD PTR [RBX+96]
            mov R8D,DWORD PTR [RDX+RCX*4]
            cmp RAX,R8
            je .L_440815

            lea RDX,QWORD PTR [RIP+.L_450268]
            mov RCX,RAX
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967276
            call .L_432bc0

            mov R9,QWORD PTR [RSP+8]
            jmp .L_440815
.L_4408b3:

            lea RDX,QWORD PTR [RIP+.L_4503a8]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967266
            call .L_432bc0

            jmp .L_4407bd
.L_4408d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4408e0:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_4408e8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+112],RSI
            jb .L_4409a8

            cmp QWORD PTR [RBX+288],0
            mov R12,RDI
            mov RBP,RSI
            jne .L_440998
.L_44091c:

            mov EAX,DWORD PTR [RBX+108]
            test EAX,EAX
            je .L_440970

            mov RSI,RSP
            mov RCX,RBP
            mov RDX,RBP
            mov RDI,R12
            call .L_4403c0

            test RAX,RAX
            jle .L_4409a8

            sub QWORD PTR [RBX+112],RAX
            mov R12,QWORD PTR [RSP]
.L_440941:

            mov RDI,QWORD PTR [RBX+120]
            mov EDX,EBP
            mov RSI,R12
            call crc32@PLT

            mov QWORD PTR [RBX+120],RAX
.L_440953:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_4409ad

            add RSP,16
.L_44096a:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_440970:

            xor EDX,EDX
            mov RDI,R12
            mov RSI,RBP
            call .L_4049d0

            test RAX,RAX
            mov R12,RAX
            je .L_4409a8

            sub QWORD PTR [RBX+112],RBP
            mov QWORD PTR [RBX+288],RBP
            jmp .L_440941
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440998:

            call .L_43e180

            jmp .L_44091c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4409a8:

            xor R12D,R12D
            jmp .L_440953
.L_4409ad:

            call __stack_chk_fail@PLT
.L_4409b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4409c0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov ESI,1
            push RBX
.L_4409d0:

            mov R12,RDI
            call .L_4408e0

            test RAX,RAX
            je .L_440a50

            movzx R13D,BYTE PTR [RAX]
            xor EBX,EBX
            mov QWORD PTR [R14],0
            mov EBP,4294967168
            nop
.L_4409f0:

            test R13B,BPL
            je .L_440a30

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_440a50

            movzx EAX,BYTE PTR [RAX]
            lea ECX,DWORD PTR [RBX*8]
            add EBX,1
            shr BPL,1
            shl RAX,CL
            or QWORD PTR [R14],RAX
            cmp EBX,8
            jne .L_4409f0
.L_440a22:

            xor EAX,EAX
.L_440a24:

            pop RBX
.L_440a25:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440a30:

            sub EBP,1
            lea ECX,DWORD PTR [RBX*8]
            and EBP,R13D
            movzx EAX,BPL
            shl RAX,CL
            add QWORD PTR [R14],RAX
            jmp .L_440a22
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440a50:

            mov EAX,4294967295
            jmp .L_440a24
.L_440a57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440a60:

            test RDX,RDX
            je .L_440ade

            push R14
            xor EAX,EAX
            push R13
            mov R14,RSI
            push R12
            mov R13,RDI
            push RBP
            mov R12,RDX
            push RBX
.L_440a78:

            xor EDX,EDX
            xor EBP,EBP
            xor EBX,EBX
            jmp .L_440a96
.L_440a80:

            mov ECX,EAX
            shr EAX,1
.L_440a84:

            test ECX,EDX
            setne BYTE PTR [R14+RBX*1]
            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,R12
            mov RBP,RBX
            jae .L_440ac0
.L_440a96:

            test EAX,EAX
            jne .L_440a80

            mov ESI,1
            mov RDI,R13
            call .L_4408e0

            test RAX,RAX
            je .L_440ad0

            movzx EDX,BYTE PTR [RAX]
            mov ECX,128
            mov EAX,64
            jmp .L_440a84
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440ac0:

            pop RBX
.L_440ac1:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440ad0:

            pop RBX
            mov EAX,4294967295
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_440ade:

            xor EAX,EAX
            ret 
.L_440ae1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440af0:

            test RDX,RDX
            je .L_440be1

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RDI,RDX
            push RBX
.L_440b07:

            mov QWORD PTR [RSI+8],0
            mov R12,RSI
            mov R13,RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            je .L_440bd3

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440bd3

            cmp BYTE PTR [RAX],0
            mov RDI,QWORD PTR [R12]
            mov RDX,R13
            je .L_440bc0

            mov ESI,1
            call memset@PLT
.L_440b53:

            mov ESI,4
            mov RDI,R13
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+8],RAX
            je .L_440bd3

            xor EBP,EBP
            xor EBX,EBX
            jmp .L_440b7b
.L_440b70:

            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,R13
            mov RBP,RBX
            jae .L_440bac
.L_440b7b:

            mov RAX,QWORD PTR [R12]
            cmp BYTE PTR [RAX+RBX*1],0
            je .L_440b70

            mov ESI,4
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440bd3

            mov EDX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [R12+8]
            mov DWORD PTR [RAX+RBX*4],EDX
            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,R13
            mov RBP,RBX
            jb .L_440b7b
.L_440bac:

            pop RBX
.L_440bad:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440bc0:

            mov RSI,RDI
            mov RDI,R14
            call .L_440a60

            test EAX,EAX
            jns .L_440b53
.L_440bd3:

            pop RBX
            mov EAX,4294967295
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_440be1:

            mov EAX,4294967295
            ret 
.L_440be7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440bf0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RCX,RSI
            push RBP
            push RBX
            lea RBP,QWORD PTR [RSI+8]
            mov R13,RSI
            sub RSP,104
.L_440c0b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RDI,RBP
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            mov RBX,QWORD PTR [RAX]
            xor EAX,EAX
            shr ECX,3
            mov QWORD PTR [RSI],0
            mov QWORD PTR [RSI+96],0

            rep stosq QWORD PTR [RDI]

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            cmp AL,6
            je .L_440cc0

            cmp AL,7
            je .L_440e58
.L_440c6a:

            cmp AL,8
            je .L_440fc0
.L_440c72:

            test AL,AL
            setne AL
            movzx EAX,AL
            neg EAX
.L_440c7c:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            jne .L_441a27

            add RSP,104
.L_440c94:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_440c9f:

            mov RDI,QWORD PTR [RSP+64]
            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT

            nop
            nop
            nop
            nop
            nop
.L_440cb8:

            mov EAX,4294967295
            jmp .L_440c7c
          .byte 0x90
.L_440cc0:

            pxor XMM0,XMM0
            mov RSI,R13
            mov RDI,R14
            movups XMMWORD PTR [R13],XMM0
            movups XMMWORD PTR [R13+16],XMM0
            movups XMMWORD PTR [R13+32],XMM0
            call .L_4409c0

            test EAX,EAX
            js .L_440cb8

            mov RSI,RBP
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440cb8

            mov RAX,QWORD PTR [R13+8]
            sub RAX,1
            cmp RAX,99999999
            ja .L_440cb8

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_440dd4

            cmp AL,9
            jne .L_440cb8

            mov RBP,QWORD PTR [R13+8]
            mov ESI,8
            mov RDI,RBP
            call calloc@PLT

            mov ESI,8
            mov QWORD PTR [R13+16],RAX
            mov RDI,RBP
            mov R12,RAX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R13+40],RAX
            je .L_440cb8

            test R12,R12
            je .L_440cb8

            test RBP,RBP
            je .L_44174f

            xor EBP,EBP
            xor EAX,EAX
            jmp .L_440d84
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440d70:

            lea EAX,DWORD PTR [RBP+1]
            cmp RAX,QWORD PTR [R13+8]
            mov RBP,RAX
            jae .L_44174f

            mov R12,QWORD PTR [R13+16]
.L_440d84:

            lea RSI,QWORD PTR [R12+RAX*8]
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            jns .L_440d70

            jmp .L_440cb8
.L_440d99:

            mov R12,QWORD PTR [R13+8]
            mov ESI,1
            mov RDI,R12
            call calloc@PLT

            mov ESI,4
            mov RBP,RAX
            mov QWORD PTR [R13+24],RAX
            mov RDI,R12
            call calloc@PLT

            test RBP,RBP
            mov QWORD PTR [R13+32],RAX
            je .L_440cb8

            test RAX,RAX
            je .L_440cb8
.L_440dd4:

            mov RSI,QWORD PTR [R13+40]
            test RSI,RSI
            je .L_440cb8

            mov RDI,QWORD PTR [R13+16]
            test RDI,RDI
            je .L_440cb8

            cmp QWORD PTR [R13+8],0
            mov RAX,QWORD PTR [R13]
            je .L_440e31

            mov QWORD PTR [RSI],RAX
            add RAX,QWORD PTR [RDI]
            cmp QWORD PTR [RBX+128],RAX
            jb .L_440cb8

            xor ECX,ECX
            jmp .L_440e25
.L_440e10:

            mov QWORD PTR [RSI+RDX*8],RAX
            add RAX,QWORD PTR [RDI+RDX*8]
            cmp QWORD PTR [RBX+128],RAX
            jb .L_440cb8
.L_440e25:

            lea EDX,DWORD PTR [RCX+1]
            cmp RDX,QWORD PTR [R13+8]
            mov RCX,RDX
            jb .L_440e10
.L_440e31:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            cmp AL,7
            jne .L_440c6a

            nop
            nop
            nop
            nop
            nop
            nop
.L_440e58:

            pxor XMM0,XMM0
            mov QWORD PTR [R13+64],0
            mov ESI,1
            mov RDI,R14
            lea RBX,QWORD PTR [R13+48]
            movups XMMWORD PTR [R13+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            cmp BYTE PTR [RAX],11
            jne .L_440f98

            mov RSI,RBX
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440f98

            cmp QWORD PTR [R13+48],100000000
            ja .L_440cb8

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_441375

            cmp AL,1
            jne .L_44135a

            lea RSI,QWORD PTR [R13+64]
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440cb8

            cmp QWORD PTR [R13+64],100000000
            ja .L_440cb8

            cmp QWORD PTR [R13+48],0
            jne .L_44135a
.L_440f08:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            cmp BYTE PTR [RAX],12
            jne .L_440f98

            cmp QWORD PTR [R13+48],0
            je .L_4411bb

            xor R12D,R12D
            xor EAX,EAX
.L_440f2f:

            lea RDX,QWORD PTR [RAX+RAX*2]
            mov ESI,8
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [R13+56]
            lea RBP,QWORD PTR [RAX+RDX*8]
            mov RBX,QWORD PTR [RBP+56]
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+64],RAX
            je .L_440f98

            test RBX,RBX
            je .L_4411a9

            xor EBX,EBX
            xor EDX,EDX
            jmp .L_440f84
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440f70:

            lea EDX,DWORD PTR [RBX+1]
            cmp RDX,QWORD PTR [RBP+56]
            mov RBX,RDX
            jae .L_4411a9

            mov RAX,QWORD PTR [RBP+64]
.L_440f84:

            lea RSI,QWORD PTR [RAX+RDX*8]
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            jns .L_440f70

            nop
            nop
            nop
            nop
.L_440f98:

            mov RDI,QWORD PTR [RSP+64]
            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT

            mov EAX,4294967295
            jmp .L_440c7c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440fc0:

            mov RBX,QWORD PTR [R13+48]
            pxor XMM0,XMM0
            mov RBP,QWORD PTR [R13+56]
            test RBX,RBX
            movups XMMWORD PTR [R13+72],XMM0
            movups XMMWORD PTR [R13+88],XMM0
            je .L_440ffc

            xor EDX,EDX
            xor EAX,EAX
            nop
.L_440fe0:

            lea RCX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RCX*4]
            mov QWORD PTR [RBP+RAX*8+80],1
            lea EAX,DWORD PTR [RDX+1]
            cmp RBX,RAX
            mov RDX,RAX
            ja .L_440fe0
.L_440ffc:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            mov QWORD PTR [RSP+32],RBX
            cmp EAX,13
            mov DWORD PTR [RSP+8],EAX
            je .L_4412e6
.L_441027:

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            mov QWORD PTR [R13+72],RAX
            jne .L_4417b8

            mov R15,QWORD PTR [R13+80]
.L_44103d:

            test RBX,RBX
            je .L_4410f9

            xor EDI,EDI
            mov QWORD PTR [RSP+40],R13
            xor EAX,EAX
            mov R13,R15
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+24],R14
            mov R15D,EDI
            jmp .L_441089
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441068:

            mov RDI,R14
            add R13,8
            call .L_43da40

            sub RAX,R12
            mov QWORD PTR [R13-8],RAX
.L_44107b:

            lea EAX,DWORD PTR [R15+1]
            cmp QWORD PTR [RSP+16],RAX
            mov R15,RAX
            jbe .L_4410ea
.L_441089:

            lea RCX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RCX*4]
            lea R14,QWORD PTR [RBP+RAX*8]
            mov RAX,QWORD PTR [R14+80]
            test RAX,RAX
            je .L_44107b

            xor R12D,R12D
            cmp DWORD PTR [RSP+8],9
            jne .L_441068

            cmp RAX,1
            jbe .L_441068

            mov EBX,1
            jmp .L_4410d4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4410c0:

            add R13,8
            lea EAX,DWORD PTR [RBX+1]
            add R12,QWORD PTR [R13-8]
            cmp RAX,QWORD PTR [R14+80]
            mov RBX,RAX
            jae .L_441068
.L_4410d4:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R13
            call .L_4409c0

            test EAX,EAX
            jns .L_4410c0

            jmp .L_440cb8
.L_4410ea:

            mov RBX,QWORD PTR [RSP+16]
            mov R14,QWORD PTR [RSP+24]
            mov R13,QWORD PTR [RSP+40]
.L_4410f9:

            cmp DWORD PTR [RSP+8],9
            je .L_4419c0
.L_441104:

            mov RSI,QWORD PTR [RSP+32]
            test RSI,RSI
            je .L_441136

            xor EDX,EDX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_441118:

            mov RCX,QWORD PTR [R13+88]
            mov BYTE PTR [RCX+RAX*1],0
            mov RCX,QWORD PTR [R13+96]
            mov DWORD PTR [RCX+RAX*4],0
            lea EAX,DWORD PTR [RDX+1]
            cmp RSI,RAX
            mov RDX,RAX
            ja .L_441118
.L_441136:

            test RBX,RBX
            je .L_441a0e

            xor EDX,EDX
            xor EDI,EDI
            xor EAX,EAX
            nop
            nop
            nop
.L_441148:

            lea RCX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RCX*4]
            lea RCX,QWORD PTR [RBP+RAX*8]
            mov RAX,QWORD PTR [RCX+80]
            cmp RAX,1
            je .L_4411a1
.L_44115f:

            add EDI,EAX
.L_441161:

            lea EAX,DWORD PTR [RDX+1]
            cmp RBX,RAX
            mov RDX,RAX
            ja .L_441148
.L_44116c:

            cmp DWORD PTR [RSP+8],10
            je .L_4418c0
.L_441177:

            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            jne .L_440cb8

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            jmp .L_440c72
.L_4411a1:

            cmp BYTE PTR [RCX+72],0
            jne .L_441161

            jmp .L_44115f
.L_4411a9:

            lea EAX,DWORD PTR [R12+1]
            cmp RAX,QWORD PTR [R13+48]
            mov R12,RAX
            jb .L_440f2f
.L_4411bb:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_441271

            cmp AL,10
            jne .L_440f98

            mov RDX,QWORD PTR [R13+48]
            lea RSI,QWORD PTR [RSP+64]
            mov RDI,R14
            call .L_440af0

            test EAX,EAX
            js .L_440f98

            mov RCX,QWORD PTR [R13+48]
            test RCX,RCX
            je .L_44123e

            mov R9,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [R13+56]
            xor EDX,EDX
            mov RDI,QWORD PTR [RSP+72]
            xor EAX,EAX
.L_441218:

            lea RSI,QWORD PTR [RAX+RAX*2]
            movzx R10D,BYTE PTR [R9+RAX*1]
            lea RSI,QWORD PTR [RAX+RSI*4]
            lea RSI,QWORD PTR [R8+RSI*8]
            mov BYTE PTR [RSI+72],R10B
            mov EAX,DWORD PTR [RDI+RAX*4]
            mov DWORD PTR [RSI+76],EAX
            lea EAX,DWORD PTR [RDX+1]
            cmp RAX,RCX
            mov RDX,RAX
            jb .L_441218
.L_44123e:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            cmp BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+64]
            jne .L_440f98

            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT
.L_441271:

            mov R8,QWORD PTR [R13+48]
            mov RDI,QWORD PTR [R13+56]
            test R8,R8
            je .L_4412c8

            mov RAX,QWORD PTR [RDI+32]
            mov R9,QWORD PTR [R13+8]
            mov DWORD PTR [RDI+88],0
            mov EDX,EAX
            mov EAX,EAX
            cmp RAX,R9
            ja .L_440cb8

            xor ECX,ECX
            jmp .L_4412bd
          .byte 0x66
          .byte 0x90
.L_4412a0:

            lea RSI,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RSI*4]
            lea RAX,QWORD PTR [RDI+RAX*8]
            mov DWORD PTR [RAX+88],EDX
            add EDX,DWORD PTR [RAX+32]
            mov EAX,EDX
            cmp RAX,R9
            ja .L_440cb8
.L_4412bd:

            lea EAX,DWORD PTR [RCX+1]
            cmp RAX,R8
            mov RCX,RAX
            jb .L_4412a0
.L_4412c8:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            jmp .L_440c6a
.L_4412e6:

            test RBX,RBX
            je .L_441a20

            xor R15D,R15D
            mov QWORD PTR [RSP+8],R13
            xor R12D,R12D
            xor EAX,EAX
            mov R13D,R15D
            jmp .L_441338
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441308:

            mov RAX,QWORD PTR [R15+80]
            cmp RAX,100000000
            ja .L_440cb8

            cmp R12,-100000001
            ja .L_440cb8

            add R12,RAX
            lea EAX,DWORD PTR [R13+1]
            cmp RBX,RAX
            mov R13,RAX
            jbe .L_4419e2
.L_441338:

            lea RCX,QWORD PTR [RAX+RAX*2]
            mov RDI,R14
            lea RAX,QWORD PTR [RAX+RCX*4]
            lea R15,QWORD PTR [RBP+RAX*8]
            lea RSI,QWORD PTR [R15+80]
            call .L_4409c0

            test EAX,EAX
            jns .L_441308

            jmp .L_440cb8
.L_44135a:

            lea RDX,QWORD PTR [RIP+.L_4504aa]
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            call .L_432bc0

            jmp .L_440f98
.L_441375:

            mov RBX,QWORD PTR [R13+48]
            mov ESI,104
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R13+56],RAX
            je .L_440cb8

            test RBX,RBX
            je .L_440f08

            mov DWORD PTR [RSP+40],0
            xor EDX,EDX
            mov QWORD PTR [RSP+56],R13
            nop
            nop
            nop
            nop
            nop
.L_4413b0:

            lea RCX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RDX+RCX*4]
            lea RBP,QWORD PTR [RAX+RDX*8]
            mov RAX,QWORD PTR [R14+2472]
            lea RDI,QWORD PTR [RBP+8]
            mov RCX,RBP
            mov RSI,RBP
            mov RAX,QWORD PTR [RAX]
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            mov QWORD PTR [RSP+48],RAX
            xor EAX,EAX
            shr ECX,3
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+96],0

            rep stosq QWORD PTR [RDI]

            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440f98

            mov RBX,QWORD PTR [RBP]
            cmp RBX,4
            ja .L_440f98

            mov ESI,40
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_440f98

            test RBX,RBX
            je .L_440f98

            xor R12D,R12D
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+8],0
            xor EBX,EBX
            nop
.L_441450:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            movzx EAX,BYTE PTR [RAX]
            mov R13D,EAX
            mov EDI,EAX
            mov ESI,EAX
            and R13D,15
            and EDI,16
            and ESI,32
            test AL,AL
            movzx R15D,R13B
            mov BYTE PTR [RSP+16],DIL
            mov BYTE PTR [RSP+32],SIL
            js .L_440f98

            mov RSI,R15
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440f98

            lea RBX,QWORD PTR [RBX+RBX*4]
            mov RSI,QWORD PTR [RBP+8]
            shl RBX,3
            add RSI,RBX
            test R13B,R13B
            je .L_4416d0

            xor EDI,EDI
            xor ECX,ECX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4414c8:

            movzx ECX,BYTE PTR [RAX+RCX*1]
            shl RDX,8
            add RDX,RCX
            lea ECX,DWORD PTR [RDI+1]
            cmp R15,RCX
            mov RDI,RCX
            ja .L_4414c8
.L_4414de:

            cmp BYTE PTR [RSP+16],0
            mov QWORD PTR [RSI],RDX
            jne .L_4415f8

            cmp BYTE PTR [RSP+32],0
            mov QWORD PTR [RSI+8],1
            mov QWORD PTR [RSI+16],1
            jne .L_441655
.L_441507:

            mov R13,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RSP+24]
            lea EBX,DWORD PTR [R12+1]
            add R13,QWORD PTR [RSI+8]
            add R15,QWORD PTR [RSI+16]
            cmp RBX,QWORD PTR [RBP]
            mov R12,RBX
            mov QWORD PTR [RSP+8],R13
            mov QWORD PTR [RSP+24],R15
            jb .L_441450

            test R15,R15
            mov RDI,R15
            je .L_440f98

            sub RDI,1
            cmp R13,RDI
            jb .L_440f98

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RBP+16],RDI
            cmp RDI,QWORD PTR [RAX+112]
            ja .L_440f98

            test RDI,RDI
            jne .L_441832

            mov RBX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+24],0
            xor EDX,EDX
.L_441579:

            mov QWORD PTR [RBP+32],RBX
            mov ESI,8
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RDX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+40],RAX
            je .L_440f98

            cmp RBX,1
            mov RDX,QWORD PTR [RSP+8]
            je .L_4416d7

            xor EDX,EDX
            xor R12D,R12D
            test RBX,RBX
            je .L_441726

            mov EBX,EDX
            jmp .L_4415e0
.L_4415bd:

            mov RAX,QWORD PTR [RBP+40]
            cmp QWORD PTR [RAX+R12*8],100000000
            ja .L_440f98

            lea R12D,DWORD PTR [RBX+1]
            cmp R12,QWORD PTR [RBP+32]
            mov RBX,R12
            jae .L_441726
.L_4415e0:

            lea RSI,QWORD PTR [RAX+R12*8]
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            jns .L_4415bd

            jmp .L_440f98
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4415f8:

            add RSI,8
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440f98

            mov RSI,QWORD PTR [RBP+8]
            add RSI,RBX
            cmp QWORD PTR [RSI+8],100000000
            ja .L_440f98

            add RSI,16
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440f98

            mov RSI,QWORD PTR [RBP+8]
            add RSI,RBX
            cmp QWORD PTR [RSI+16],100000000
            ja .L_440f98

            cmp BYTE PTR [RSP+32],0
            je .L_441507
.L_441655:

            add RSI,24
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440f98

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,R14
            mov RSI,QWORD PTR [RAX+RBX*1+24]
            call .L_4408e0

            test RAX,RAX
            mov R13,RAX
            je .L_440f98

            mov R15,QWORD PTR [RBP+8]
            add R15,RBX
            mov RDX,QWORD PTR [R15+24]
            mov RDI,RDX
            mov QWORD PTR [RSP+16],RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R15+32],RAX
            je .L_440f98

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            add RBX,QWORD PTR [RBP+8]
            mov RSI,RBX
            jmp .L_441507
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4416d0:

            xor EDX,EDX
            jmp .L_4414de
.L_4416d7:

            test R13,R13
            je .L_440f98

            xor R9D,R9D
            xor EDI,EDI
.L_4416e5:

            test RDX,RDX
            je .L_44171a

            mov R8,QWORD PTR [RBP+24]
            cmp RDI,QWORD PTR [R8]
            je .L_44170e

            xor ESI,ESI
            jmp .L_441701
.L_4416f7:

            shl RCX,4
            cmp QWORD PTR [R8+RCX*1],RDI
            je .L_44170e
.L_441701:

            lea ECX,DWORD PTR [RSI+1]
            cmp RCX,RDX
            mov RSI,RCX
            jb .L_4416f7

            je .L_44171a
.L_44170e:

            lea EDI,DWORD PTR [R9+1]
            cmp R13,RDI
            mov R9,RDI
            ja .L_4416e5
.L_44171a:

            cmp R13,RDI
            je .L_440f98

            mov QWORD PTR [RAX],RDI
.L_441726:

            mov RAX,QWORD PTR [RSP+56]
            add DWORD PTR [RSP+40],1
            mov EDX,DWORD PTR [RSP+40]
            mov QWORD PTR [RBP+48],R13
            mov QWORD PTR [RBP+56],R15
            cmp RDX,QWORD PTR [RAX+48]
            jae .L_441828

            mov RAX,QWORD PTR [RAX+56]
            jmp .L_4413b0
.L_44174f:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_440d99

            cmp AL,9
            jne .L_440cb8

            mov RDX,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [R13+24]
            mov RDI,R14
            call .L_440af0

            test EAX,EAX
            js .L_440cb8

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            cmp BYTE PTR [RAX],0
            je .L_440dd4

            jmp .L_440cb8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4417b8:

            mov R12,QWORD PTR [RSP+32]
            mov ESI,8
            mov RDI,R12
            call calloc@PLT

            mov RDI,R12
            mov ESI,1
            mov QWORD PTR [R13+80],RAX
            mov R15,RAX
            mov QWORD PTR [RSP+32],R12
            call calloc@PLT

            mov RDI,QWORD PTR [RSP+32]
            mov ESI,4
            mov QWORD PTR [R13+88],RAX
            mov R12,RAX
            call calloc@PLT

            test R15,R15
            mov QWORD PTR [R13+96],RAX
            sete SIL
            test R12,R12
            sete CL
            or SIL,CL
            jne .L_440cb8

            test RAX,RAX
            jne .L_44103d

            jmp .L_440cb8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441828:

            mov R13,QWORD PTR [RSP+56]
            jmp .L_440f08
.L_441832:

            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            mov RSI,RAX
            mov QWORD PTR [RBP+24],RAX
            je .L_440f98

            xor R12D,R12D
            xor EBX,EBX
            jmp .L_4418a8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441858:

            mov RSI,QWORD PTR [RBP+24]
            add RSI,RBX
            cmp QWORD PTR [RSI],100000000
            ja .L_440f98

            add RSI,8
            mov RDI,R14
            call .L_4409c0

            test EAX,EAX
            js .L_440f98

            mov RSI,QWORD PTR [RBP+24]
            cmp QWORD PTR [RSI+RBX*1+8],100000000
            ja .L_440f98

            mov RDX,QWORD PTR [RBP+16]
            lea EBX,DWORD PTR [R12+1]
            mov R12,RBX
            cmp RBX,RDX
            jae .L_441a15
.L_4418a8:

            shl RBX,4
            mov RDI,R14
            add RSI,RBX
            call .L_4409c0

            test EAX,EAX
            jns .L_441858

            jmp .L_440f98
.L_4418c0:

            pxor XMM0,XMM0
            lea RSI,QWORD PTR [RSP+64]
            mov EDX,EDI
            mov RDI,R14
            mov R15,QWORD PTR [R13+88]
            mov R12,QWORD PTR [R13+96]
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_440af0

            test EAX,EAX
            js .L_440c9f

            test RBX,RBX
            je .L_44198a

            xor ECX,ECX
            xor R9D,R9D
            xor EAX,EAX
            jmp .L_441920
.L_4418fa:

            cmp BYTE PTR [RSI+72],0
            je .L_44193c

            mov BYTE PTR [R15],1
            mov EAX,DWORD PTR [RSI+76]
            add R12,4
            add R15,1
            mov DWORD PTR [R12-4],EAX
.L_441914:

            lea EAX,DWORD PTR [R9+1]
            cmp RBX,RAX
            mov R9,RAX
            jbe .L_44198a
.L_441920:

            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RDX*4]
            lea RSI,QWORD PTR [RBP+RAX*8]
            mov RAX,QWORD PTR [RSI+80]
            cmp RAX,1
            je .L_4418fa

            test RAX,RAX
            je .L_441914
.L_44193c:

            movsxd RDI,ECX
            mov RAX,R15
            lea R8,QWORD PTR [RDI*4]
            sub RDI,R15
            sub R8,R12
.L_441950:

            lea RDX,QWORD PTR [RAX+RDI*1]
            add RDX,QWORD PTR [RSP+64]
            add RAX,1
            add ECX,1
            movzx EDX,BYTE PTR [RDX]
            mov BYTE PTR [RAX-1],DL
            lea RDX,QWORD PTR [R12+R8*1]
            add RDX,QWORD PTR [RSP+72]
            add R12,4
            mov EDX,DWORD PTR [RDX]
            mov DWORD PTR [R12-4],EDX
            mov EDX,EAX
            sub EDX,R15D
            cmp RDX,QWORD PTR [RSI+80]
            jb .L_441950

            mov R15,RAX
            jmp .L_441914
.L_44198a:

            mov RDI,QWORD PTR [RSP+64]
            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_441177
.L_4419c0:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_441104
.L_4419e2:

            mov R13,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],R12
.L_4419ec:

            mov ESI,1
            mov RDI,R14
            call .L_4408e0

            test RAX,RAX
            je .L_440cb8

            movzx EAX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_441027
.L_441a0e:

            xor EDI,EDI
            jmp .L_44116c
.L_441a15:

            mov RBX,R13
            sub RBX,RDX
            jmp .L_441579
.L_441a20:

            mov QWORD PTR [RSP+32],RBX
            jmp .L_4419ec
.L_441a27:

            call __stack_chk_fail@PLT
.L_441a2c:

            nop
            nop
            nop
            nop
.L_441a30:

            push RBP
            push RBX
            sub RSP,8
            movzx EAX,BYTE PTR [RDI+5]
            cmp AL,55
            je .L_441ac0

            jbe .L_441a70

            cmp AL,175
            mov EBX,2
            je .L_441a64

            cmp AL,188
            mov EBX,3
            je .L_441a64

            cmp AL,122
            mov EBX,4
            je .L_441a64
.L_441a5f:

            mov EBX,6
.L_441a64:

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441a70:

            cmp AL,28
            je .L_441a90

            cmp AL,39
            mov EBX,1
            jne .L_441a5f

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441a90:

            cmp DWORD PTR [RDI],2948364855
            jne .L_441a5f

            cmp WORD PTR [RDI+4],7207
            jne .L_441a5f

            lea RSI,QWORD PTR [RDI+12]
            mov RBP,RDI
            mov EDX,20
            xor EDI,EDI
            xor EBX,EBX
            call crc32@PLT

            mov EDX,DWORD PTR [RBP+8]
            cmp RAX,RDX
            je .L_441a64

            jmp .L_441a5f
          .byte 0x90
.L_441ac0:

            mov EBX,5
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_441ace:

            nop
            nop
.L_441ad0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_441adc:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,32
            jg .L_441bf0

            xor EDX,EDX
            mov ESI,6
            mov RBP,RDI
            call .L_4049d0

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_441b98

            cmp DWORD PTR [RDX],2948364855
            je .L_441bb8
.L_441b1e:

            cmp BYTE PTR [RDX],77
            je .L_441be0
.L_441b27:

            xor EAX,EAX
            cmp DWORD PTR [RDX],1179403647
            jne .L_441b98
.L_441b31:

            mov EBX,159744
            mov R12D,4096
            mov ESI,163840
            mov R13,RSP
.L_441b44:

            mov RDX,R13
            mov RDI,RBP
            call .L_4049d0

            test RAX,RAX
            mov R14,RAX
            je .L_441bd0

            add RBX,RAX
            jmp .L_441b71
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441b60:

            mov RDI,RBX
            call .L_441a30

            test EAX,EAX
            je .L_441bc4

            cdqe 
            add RBX,RAX
.L_441b71:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RBX+32]
            add RAX,R14
            cmp RDX,RAX
            jb .L_441b60

            sub RBX,R14
.L_441b84:

            lea RSI,QWORD PTR [RBX+R12*1]
            cmp RSI,393216
            jle .L_441b44

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_441b98:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_441bf7

            add RSP,16
.L_441bac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441bb8:

            cmp WORD PTR [RDX+4],7207
            jne .L_441b1e
.L_441bc4:

            mov EAX,48
            jmp .L_441b98
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441bd0:

            sar R12,1
            cmp R12,63
            jg .L_441b84

            xor EAX,EAX
            jmp .L_441b98
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441be0:

            cmp BYTE PTR [RDX+1],90
            jne .L_441b27

            jmp .L_441b31
          .byte 0x90
.L_441bf0:

            mov EAX,4294967295
            jmp .L_441b98
.L_441bf7:

            call __stack_chk_fail@PLT
.L_441bfc:

            nop
            nop
            nop
            nop
.L_441c00:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,152
.L_441c14:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP],RSI
            mov R15,QWORD PTR [RAX]
            cmp DWORD PTR [R15+20728],-1
            jne .L_441c4a

            mov DWORD PTR [R15+20728],0
.L_441c4a:

            cmp QWORD PTR [R12+24],0
            mov DWORD PTR [R12+16],917504
            je .L_441e90

            cmp QWORD PTR [R15+160],0
            je .L_441eaa
.L_441c6d:

            mov RAX,QWORD PTR [R15+168]
            lea RBX,QWORD PTR [RAX+88]
            mov RAX,QWORD PTR [R15+144]
            mov QWORD PTR [R15+168],RBX
.L_441c86:

            test RAX,RAX
            je .L_441c90

            test RBX,RBX
            jne .L_441cc8
.L_441c90:

            mov DWORD PTR [RSP+8],1
.L_441c98:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+8]
            jne .L_443188

            add RSP,152
.L_441cba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441cc8:

            sub RAX,1
            xor EDX,EDX
            xor ESI,ESI
            xor EDI,EDI
            mov QWORD PTR [R15+144],RAX
            mov QWORD PTR [R15+184],0
            mov BYTE PTR [R15+208],0
            call crc32@PLT

            cmp QWORD PTR [R15+20656],0
            mov QWORD PTR [R15+200],RAX
            je .L_442240
.L_441d06:

            mov EAX,DWORD PTR [RBX+16]
            cmp RAX,QWORD PTR [R15+48]
            jae .L_441d88

            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [R15+56]
            lea R13,QWORD PTR [RAX+RDX*8]
            test R13,R13
            je .L_441d88

            cmp QWORD PTR [R13],0
            je .L_441d88

            xor R14D,R14D
            xor EBP,EBP
            jmp .L_441d56
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441d38:

            cmp RAX,116459265
            je .L_441d66

            cmp RAX,116457729
            je .L_441d66
.L_441d48:

            add RBP,1
            add R14,40
            cmp QWORD PTR [R13],RBP
            jbe .L_441d88
.L_441d56:

            mov RAX,QWORD PTR [R13+8]
            mov RAX,QWORD PTR [RAX+R14*1]
            cmp RAX,116458243
            jne .L_441d38
.L_441d66:

            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_439710

            mov DWORD PTR [R15+20728],1
            jmp .L_441d48
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441d88:

            cmp DWORD PTR [R15+20728],-1
            je .L_442050
.L_441d96:

            mov RCX,QWORD PTR [R15+20656]
            mov RSI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RSP]
            call .L_4393f0

            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            je .L_441df0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_443013

            mov RDI,QWORD PTR [R15+20656]
            call .L_4318c0

            lea RDX,QWORD PTR [RIP+.L_444a40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov DWORD PTR [RSP+8],4294967276
.L_441df0:

            mov ESI,DWORD PTR [RBX+80]
            mov RDI,QWORD PTR [RSP]
            call .L_4392b0

            mov EAX,DWORD PTR [RBX+24]
            test AL,1
            jne .L_4420a0
.L_441e07:

            test AL,4
            jne .L_442080
.L_441e0f:

            test AL,2
            jne .L_4420c0
.L_441e17:

            mov EAX,DWORD PTR [RBX+20]
            cmp EAX,-1
            je .L_442060

            mov RDX,QWORD PTR [R15+80]
            mov RDI,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [R15+192],RSI
            call .L_439490
.L_441e3b:

            mov ESI,DWORD PTR [RBX+80]
            mov EAX,ESI
            and EAX,61440
            cmp QWORD PTR [R15+192],0
            jne .L_4420e0

            cmp EAX,40960
            mov BYTE PTR [R15+208],1
            je .L_442d49
.L_441e66:

            lea RAX,QWORD PTR [R15+20664]
            mov EDX,112
            mov DWORD PTR [R15+20664],1767517495
            mov WORD PTR [R15+20668],DX
            mov QWORD PTR [R12+24],RAX
            jmp .L_441c98
          .byte 0x90
.L_441e90:

            cmp QWORD PTR [R15+160],0
            lea RAX,QWORD PTR [RIP+.L_4504c9]
            mov QWORD PTR [R12+24],RAX
            jne .L_441c6d
.L_441eaa:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RSP+80]
            mov ESI,32
            mov RDI,R12
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            call .L_4049d0

            test RAX,RAX
            mov RBX,RAX
            je .L_442014

            cmp BYTE PTR [RAX],77
            je .L_4421a0
.L_441ef0:

            cmp DWORD PTR [RBX],1179403647
            jne .L_441fea
.L_441efc:

            cmp QWORD PTR [RSP+80],159744
            jg .L_4421b0

            xor EDX,EDX
            mov ESI,159744
            mov RDI,R12
            call .L_404dc0

            test RAX,RAX
            js .L_442014
.L_441f23:

            lea R14,QWORD PTR [RSP+88]
            xor R13D,R13D
            mov EBP,1
            mov ESI,1
            mov QWORD PTR [RSP+24],R15
.L_441f3a:

            mov RDX,R14
            mov RDI,R12
            call .L_4049d0

            test RAX,RAX
            mov R15,RAX
            je .L_442230

            mov RBX,QWORD PTR [RSP+88]
            cmp RBX,5
            jle .L_4421e8

            add RBX,RAX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RAX+32]
            cmp RBX,RAX
            ja .L_441f92

            jmp .L_442d20
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441f80:

            cdqe 
            add R15,RAX
            lea RAX,QWORD PTR [R15+32]
            cmp RBX,RAX
            jbe .L_4421c8
.L_441f92:

            mov RDI,R15
            call .L_441a30

            test EAX,EAX
            jne .L_441f80

            mov R14,R15
            sub R14,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [R12+2472]
            mov RDI,R12
            mov R15,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RAX]
            mov RSI,R14
            call .L_404a20

            lea RAX,QWORD PTR [R14+R13*1+159744]
            mov RDX,QWORD PTR [RSP+16]
            mov ESI,32
            mov RDI,R12
            mov QWORD PTR [RBX+136],RAX
            call .L_4049d0

            test RAX,RAX
            mov RBX,RAX
            je .L_442014
.L_441fea:

            add QWORD PTR [R15+136],32
            cmp DWORD PTR [RBX],2948364855
            je .L_4422e0
.L_441ffe:

            lea RDX,QWORD PTR [RIP+.L_4504cf]
.L_442005:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_442014:

            mov DWORD PTR [RSP+8],4294967266
.L_44201c:

            mov RDI,QWORD PTR [RSP+104]
            call free@PLT

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            jmp .L_441c98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442050:

            mov DWORD PTR [R15+20728],0
            jmp .L_441d96
.L_442060:

            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [R15+192],0
            xor ESI,ESI
            call .L_439490

            jmp .L_441e3b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442080:

            mov RDX,QWORD PTR [RBX+72]
            mov RSI,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RSP]
            call .L_439050

            mov EAX,DWORD PTR [RBX+24]
            jmp .L_441e0f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4420a0:

            mov RDX,QWORD PTR [RBX+56]
            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RSP]
            call .L_4392c0

            mov EAX,DWORD PTR [RBX+24]
            jmp .L_441e07
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4420c0:

            mov RDX,QWORD PTR [RBX+64]
            mov RSI,QWORD PTR [RBX+40]
            mov RDI,QWORD PTR [RSP]
            call .L_438f30

            jmp .L_441e17
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4420e0:

            cmp EAX,40960
            jne .L_441e66

            lea RAX,QWORD PTR [RSP+80]
            xor EBP,EBP
            xor R13D,R13D
            mov QWORD PTR [RSP+48],RBX
            mov QWORD PTR [RSP+24],R12
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_442166
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442120:

            mov R12,QWORD PTR [RSP+88]
            mov RDI,R13
            lea RBX,QWORD PTR [R12+RBP*1]
            lea RSI,QWORD PTR [RBX+1]
            call realloc@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_442278

            mov RSI,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+RBP*1]
            mov RDX,R12
            mov R13,R14
            mov RBP,RBX
            call memcpy@PLT

            cmp QWORD PTR [R15+192],0
            je .L_4422a0
.L_442166:

            mov RCX,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            call .L_440750

            cmp EAX,-20
            jge .L_442120

            mov RDI,R13
            mov DWORD PTR [RSP],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_441c98

            nop
            nop
            nop
            nop
            nop
.L_4421a0:

            cmp BYTE PTR [RAX+1],90
            jne .L_441ef0

            jmp .L_441efc
          .byte 0x90
.L_4421b0:

            mov ESI,159744
            mov RDI,R12
            call .L_404a20

            jmp .L_441f23
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4421c8:

            mov RSI,R15
            sub RSI,QWORD PTR [RSP+8]
            add R13,RSI
.L_4421d3:

            mov RDI,R12
            call .L_404a20

            cmp RBP,1
            jne .L_442239

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4421e8:

            mov ESI,4096
            mov EBP,4096
.L_4421f2:

            lea RAX,QWORD PTR [R13+RSI*1]
            cmp RAX,233472
            jbe .L_441f3a
.L_442203:

            lea RDX,QWORD PTR [RIP+.L_450290]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            mov DWORD PTR [RSP+8],4294967266
            jmp .L_44201c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442230:

            sar RBP,1
            cmp RBP,63
            jle .L_442203
.L_442239:

            mov RSI,RBP
            jmp .L_4421f2
          .byte 0x66
          .byte 0x90
.L_442240:

            lea RSI,QWORD PTR [RIP+.L_448d8e]
            mov EDX,1
            mov RDI,R12
            call .L_431820

            test RAX,RAX
            mov QWORD PTR [R15+20656],RAX
            jne .L_441d06

            nop
            nop
            nop
            nop
.L_442268:

            mov DWORD PTR [RSP+8],4294967266
            jmp .L_441c98
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442278:

            mov RDI,R13
            mov R12,QWORD PTR [RSP+24]
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_4502b0]
.L_44228c:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_442268
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4422a0:

            test RBP,RBP
            mov RBX,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+24]
            je .L_442c98

            mov RDI,QWORD PTR [RSP]
            mov BYTE PTR [R14+RBP*1],0
            mov RSI,R14
            call .L_439570
.L_4422c4:

            mov RDI,R14
            call free@PLT

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_439490

            jmp .L_441e66
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4422e0:

            cmp WORD PTR [RBX+4],7207
            jne .L_441ffe

            lea RSI,QWORD PTR [RBX+12]
            mov EDX,20
            xor EDI,EDI
            mov DWORD PTR [RSP+60],0
            call crc32@PLT

            mov EDX,DWORD PTR [RBX+8]
            cmp RAX,RDX
            jne .L_442fff

            mov R13,QWORD PTR [RBX+20]
            test R13,R13
            je .L_4424b0

            mov RBP,QWORD PTR [RBX+12]
            test RBP,RBP
            js .L_44301f

            mov EAX,DWORD PTR [RBX+28]
            mov ESI,32
            mov RDI,R12
            mov DWORD PTR [RSP+16],EAX
            call .L_404a20

            test RBP,RBP
            je .L_442359

            cmp RBP,QWORD PTR [RSP+80]
            mov RSI,RBP
            jg .L_4424c0

            mov RDI,R12
            call .L_404a20
.L_442359:

            mov QWORD PTR [R15+248],RBP
            mov QWORD PTR [R15+128],RBP
            mov ESI,1
            mov QWORD PTR [R15+112],R13
            mov QWORD PTR [R15+120],0
            mov RDI,R12
            mov QWORD PTR [R15+104],1
            mov DWORD PTR [R15+20728],0
            call .L_4408e0

            test RAX,RAX
            je .L_44319a

            movzx ECX,BYTE PTR [RAX]
            cmp CL,1
            je .L_442500

            cmp CL,23
            jne .L_4424e0

            mov RAX,QWORD PTR [R12+2472]
            mov RBX,QWORD PTR [RAX]
            call __errno_location@PLT

            mov RSI,R15
            mov DWORD PTR [RAX],0
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_440bf0

            test EAX,EAX
            js .L_442dd9

            cmp QWORD PTR [R15+8],0
            je .L_442de7

            cmp QWORD PTR [R15+48],0
            je .L_442de7

            mov RDX,QWORD PTR [R15+16]
            mov RAX,QWORD PTR [R15]
            mov RDX,QWORD PTR [RDX]
            lea RCX,QWORD PTR [RAX+RDX*1]
            cmp QWORD PTR [RBX+128],RCX
            jb .L_443158

            test RCX,RCX
            js .L_443158

            test RDX,RDX
            je .L_443158

            test RAX,RAX
            js .L_443158

            mov EAX,DWORD PTR [RSP+16]
            cmp QWORD PTR [R15+120],RAX
            je .L_442d51

            lea RDX,QWORD PTR [RIP+.L_450425]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0
.L_44244f:

            mov RDI,R15
            call .L_43f0a0

            lea RDI,QWORD PTR [R15+8]
            mov RCX,R15
            xor EAX,EAX
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+96],0
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RSP+104]
            call free@PLT

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            jmp .L_442268
          .byte 0x90
.L_4424b0:

            mov DWORD PTR [RSP+8],1
            jmp .L_44201c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4424c0:

            add RSI,QWORD PTR [R15+136]
            xor EDX,EDX
            mov RDI,R12
            call .L_404dc0

            test RAX,RAX
            jns .L_442359

            jmp .L_442014
          .byte 0x90
.L_4424e0:

            lea RDX,QWORD PTR [RIP+.L_450517]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_442014
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442500:

            call __errno_location@PLT

            mov DWORD PTR [RSP+32],1
            mov QWORD PTR [RSP+8],RAX
.L_442512:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],0
            mov R8D,DWORD PTR [R15+108]
            mov RAX,QWORD PTR [R12+2472]
            test R8D,R8D
            mov R13,QWORD PTR [RAX]
            je .L_442550

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            cmp BYTE PTR [RAX],1
            jne .L_442650
.L_442550:

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            movzx EAX,BYTE PTR [RAX]
            cmp AL,2
            je .L_442cc0
.L_442571:

            cmp AL,4
            je .L_442e02
.L_442579:

            test AL,AL
            je .L_442be0

            cmp AL,5
            jne .L_442650

            lea RSI,QWORD PTR [R13+152]
            mov RDI,R12
            call .L_4409c0

            test EAX,EAX
            js .L_442650

            mov RDI,QWORD PTR [R13+152]
            cmp RDI,100000000
            ja .L_442650

            mov ESI,88
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [R13+160],RAX
            je .L_442650

            mov QWORD PTR [RSP+64],R15
            mov DWORD PTR [RSP+24],0
            mov R15,R13
.L_4425e3:

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            movzx EBX,BYTE PTR [RAX]
            test BL,BL
            je .L_442af0

            lea RSI,QWORD PTR [RSP+88]
            mov RDI,R12
            call .L_4409c0

            test EAX,EAX
            js .L_442650

            mov RBP,QWORD PTR [RSP+88]
            cmp QWORD PTR [R15+112],RBP
            jb .L_442650

            lea EAX,DWORD PTR [RBX-14]
            cmp AL,11
            ja .L_44263b

            lea RCX,QWORD PTR [RIP+.L_45032c]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_442636:

            test RBP,RBP
            je .L_4425e3
.L_44263b:

            mov RSI,RBP
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            jne .L_4425e3

            nop
            nop
            nop
            nop
            nop
.L_442650:

            mov RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_4504e6]
            cmp DWORD PTR [RAX],12
            je .L_442005

            lea RDX,QWORD PTR [RIP+.L_450425]
            jmp .L_442005
.L_442671:

            mov ESI,2
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            cmp QWORD PTR [RSP+128],0
            movzx EBP,BYTE PTR [RAX]
            jne .L_442650

            mov RBX,QWORD PTR [R15+152]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+128],RAX
            je .L_442650

            test BPL,BPL
            mov RDX,RBX
            je .L_442e9d

            mov ESI,1
            mov RDI,RAX
            call memset@PLT
.L_4426cb:

            xor EBP,EBP
            xor EBX,EBX
            cmp QWORD PTR [R15+152],0
            mov R13,QWORD PTR [RSP+48]
            jne .L_4426fb

            jmp .L_4425e3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4426e8:

            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,QWORD PTR [R15+152]
            mov RBP,RBX
            jae .L_4425e3
.L_4426fb:

            mov RAX,QWORD PTR [RSP+128]
            cmp BYTE PTR [RAX+RBX*1],0
            je .L_4426e8

            mov ESI,4
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            mov EDX,DWORD PTR [RAX]
            lea RAX,QWORD PTR [RBX+RBX*4]
            lea RAX,QWORD PTR [RBX+RAX*2]
            mov DWORD PTR [R13+RAX*8+84],EDX
            jmp .L_4426e8
.L_442730:

            mov RAX,QWORD PTR [R12+2472]
            mov ESI,1
            mov RBP,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBP+160]
            mov RDI,QWORD PTR [RBP+152]
            mov QWORD PTR [RSP+40],RAX
            call calloc@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_442650

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442e90

            cmp BYTE PTR [RAX],0
            mov RDX,QWORD PTR [RBP+152]
            je .L_442e7d

            mov ESI,1
            mov RDI,R14
            call memset@PLT
.L_442797:

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442e90

            cmp BYTE PTR [RAX],0
            jne .L_442efe
.L_4427b6:

            xor ECX,ECX
            xor R13D,R13D
            cmp QWORD PTR [RBP+152],0
            je .L_442e3b

            mov QWORD PTR [RSP+72],R15
            mov R15,R14
            mov R14,RBP
            mov EBP,EBX
            mov EBX,ECX
            jmp .L_442824
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4427e0:

            cmp BPL,20
            jne .L_442d27

            cmp RAX,RDX
            ja .L_442f30

            mov QWORD PTR [RCX+32],0
            mov QWORD PTR [RCX+56],0
.L_442803:

            or DWORD PTR [RCX+24],1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442810:

            lea R13D,DWORD PTR [RBX+1]
            cmp R13,QWORD PTR [R14+152]
            mov RBX,R13
            jae .L_442e33
.L_442824:

            cmp BYTE PTR [R15+R13*1],0
            je .L_442810

            mov ESI,8
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_44300b

            lea RDX,QWORD PTR [R13+R13*4]
            mov RCX,QWORD PTR [RSP+40]
            cmp BPL,19
            mov RAX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [R13+RDX*2]
            lea RCX,QWORD PTR [RCX+RDX*8]
            movabs RDX,116444735999999999
            jne .L_4427e0

            cmp RAX,RDX
            ja .L_442fba

            mov QWORD PTR [RCX+40],0
            mov QWORD PTR [RCX+64],0
.L_442884:

            or DWORD PTR [RCX+24],2
            jmp .L_442810
.L_44288a:

            mov EDI,DWORD PTR [RSP+24]
            test EDI,EDI
            je .L_442e48

            cmp QWORD PTR [RSP+112],0
            jne .L_442650

            movsxd RBX,DWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+112],RAX
            je .L_442650
.L_4428c2:

            mov RDX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_440a60

            test EAX,EAX
            jns .L_4425e3

            jmp .L_442650
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4428e0:

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            lea RCX,QWORD PTR [RBP-1]
            mov R13,RCX
            mov RBP,RCX
            mov QWORD PTR [RSP+40],RCX
            and R13D,1
            jne .L_442650

            mov RBX,QWORD PTR [R15+152]
            lea RAX,QWORD PTR [RBX*4]
            cmp RCX,RAX
            jb .L_442650

            cmp QWORD PTR [R15+176],0
            jne .L_442650

            mov RDI,RCX
            call malloc@PLT

            test RAX,RAX
            mov R14,RAX
            mov QWORD PTR [R15+176],RAX
            je .L_442650

            test RBP,RBP
            je .L_443171

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442960:

            cmp RBP,65536
            mov EBX,65536
            mov RDI,R12
            cmovbe RBX,RBP
            mov RSI,RBX
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            mov RDI,R14
            mov RDX,RBX
            mov RSI,RAX
            call memcpy@PLT

            add R14,RBX
            sub RBP,RBX
            jne .L_442960

            mov R9,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+176]
            test R9,R9
            je .L_4425e3

            mov R10,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+40]
            xor EDI,EDI
            nop
            nop
            nop
.L_4429c0:

            lea RAX,QWORD PTR [R13+R13*4]
            cmp RDX,1
            lea RAX,QWORD PTR [R13+RAX*2]
            lea R8,QWORD PTR [R10+RAX*8]
            mov QWORD PTR [R8+8],RSI
            jbe .L_442650

            sub RDX,2
            mov RAX,RSI
            mov RCX,RDX
            and ECX,1
            jmp .L_442a01
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4429f0:

            add RAX,2
            cmp RCX,RDX
            je .L_442650

            sub RDX,2
.L_442a01:

            cmp BYTE PTR [RAX],0
            jne .L_4429f0

            cmp BYTE PTR [RAX+1],0
            jne .L_4429f0

            lea R13D,DWORD PTR [RDI+1]
            mov RCX,RAX
            sub RCX,RSI
            lea RSI,QWORD PTR [RAX+2]
            cmp R13,R9
            mov QWORD PTR [R8],RCX
            mov RDI,R13
            jb .L_4429c0

            jmp .L_4425e3
.L_442a2a:

            cmp QWORD PTR [RSP+104],0
            jne .L_442650

            mov RBX,QWORD PTR [R15+152]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+104],RAX
            je .L_442650

            mov RDX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_440a60

            test EAX,EAX
            js .L_442650

            mov RCX,QWORD PTR [R15+152]
            test RCX,RCX
            je .L_442e5c

            mov RSI,QWORD PTR [RSP+104]
            xor EDI,EDI
            xor EDX,EDX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442a90:

            cmp BYTE PTR [RSI+RAX*1],0
            je .L_442a99

            add EDI,1
.L_442a99:

            lea EAX,DWORD PTR [RDX+1]
            cmp RAX,RCX
            mov RDX,RAX
            jb .L_442a90

            mov DWORD PTR [RSP+24],EDI
            jmp .L_4425e3
.L_442aad:

            mov ESI,DWORD PTR [RSP+24]
            test ESI,ESI
            je .L_442e48

            cmp QWORD PTR [RSP+120],0
            jne .L_442650

            movsxd RBX,DWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+120],RAX
            jne .L_4428c2

            jmp .L_442650
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442af0:

            mov R13,R15
            mov R15,QWORD PTR [RSP+64]
            cmp QWORD PTR [R13+152],0
            mov R10,QWORD PTR [R13+56]
            je .L_442be0

            xor R14D,R14D
            xor EDX,EDX
            xor EBP,EBP
            xor EBX,EBX
            xor ECX,ECX
.L_442b15:

            lea RAX,QWORD PTR [RCX+RCX*4]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+RAX*2]
            test RDI,RDI
            lea RAX,QWORD PTR [RSI+RAX*8]
            mov ESI,DWORD PTR [RAX+24]
            mov R8D,ESI
            je .L_44302b

            cmp BYTE PTR [RDI+RCX*1],0
            je .L_44302b

            mov R11D,DWORD PTR [RAX+84]
            mov R9D,ESI
            mov ECX,R11D
            mov EDI,R11D
            shr ECX,16
            and R9D,16
            mov DWORD PTR [RAX+80],ECX
            jne .L_443045

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_4430e5

            movsxd R8,DWORD PTR [RSP+60]
            mov R9,R8
            add R9D,1
            cmp BYTE PTR [RDI+R8*1],0
            mov DWORD PTR [RSP+60],R9D
            je .L_4430e5

            test ECX,ECX
            jne .L_443102

            mov DWORD PTR [RAX+80],33206
.L_442b9a:

            and ESI,16
            mov DWORD PTR [RAX+20],4294967295
            mov EDI,R11D
            mov R9D,ESI
.L_442baa:

            and EDI,1
            je .L_442bb6

            and DWORD PTR [RAX+80],4294967149
.L_442bb6:

            test R9D,R9D
            jne .L_443084

            test EBX,EBX
            mov ECX,4294967295
            cmovne ECX,EDX
            mov DWORD PTR [RAX+16],ECX
.L_442bcc:

            lea ECX,DWORD PTR [RBP+1]
            cmp RCX,QWORD PTR [R13+152]
            mov RBP,RCX
            jb .L_442b15

            nop
.L_442be0:

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_44301f

            cmp BYTE PTR [RAX],0
            jne .L_44301f

            mov ECX,DWORD PTR [RSP+32]
            test ECX,ECX
            je .L_442c15

            mov EAX,DWORD PTR [RSP+16]
            cmp QWORD PTR [R15+120],RAX
            jne .L_44301f
.L_442c15:

            mov QWORD PTR [R15+264],0
            mov QWORD PTR [R15+272],0
            mov RDI,QWORD PTR [RSP+104]
            mov QWORD PTR [R15+240],0
            mov QWORD PTR [R15+288],0
            mov DWORD PTR [R15+104],0
            call free@PLT

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov RAX,QWORD PTR [R15+152]
            mov RBX,QWORD PTR [R15+160]
            mov QWORD PTR [R15+144],RAX
            mov QWORD PTR [R15+168],RBX
            jmp .L_441c86
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442c98:

            mov ESI,DWORD PTR [RBX+80]
.L_442c9b:

            and ESI,4294905855
            mov RDI,QWORD PTR [RSP]
            or ESI,32768
            mov DWORD PTR [RBX+80],ESI
            call .L_4392b0

            jmp .L_4422c4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442cc0:

            lea RBX,QWORD PTR [RSP+88]
            jmp .L_442ce3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442cd0:

            mov RSI,RBX
            mov RDI,R12
            call .L_4409c0

            test EAX,EAX
            js .L_442650
.L_442ce3:

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            cmp BYTE PTR [RAX],0
            jne .L_442cd0

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            movzx EAX,BYTE PTR [RAX]
            jmp .L_442571
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442d20:

            xor ESI,ESI
            jmp .L_4421d3
.L_442d27:

            cmp RAX,RDX
            ja .L_442f75

            mov QWORD PTR [RCX+48],0
            mov QWORD PTR [RCX+72],0
.L_442d40:

            or DWORD PTR [RCX+24],4
            jmp .L_442810
.L_442d49:

            xor R14D,R14D
            jmp .L_442c9b
.L_442d51:

            mov RSI,QWORD PTR [R15+56]
            cmp BYTE PTR [RSI+72],0
            jne .L_442e69

            mov DWORD PTR [RSP+32],0
.L_442d67:

            cmp QWORD PTR [R15+288],0
            jne .L_442ed3
.L_442d75:

            mov EDX,1
            mov RDI,R12
            call .L_43fc20

            test EAX,EAX
            mov EBX,EAX
            je .L_442ee4
.L_442d8c:

            mov RDI,R15
            call .L_43f0a0

            lea RDI,QWORD PTR [R15+8]
            mov RCX,R15
            xor EAX,EAX
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+96],0
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            shr ECX,3
            test EBX,EBX

            rep stosq QWORD PTR [RDI]

            js .L_442014

            mov DWORD PTR [R15+108],1
            mov QWORD PTR [R15+120],0
            jmp .L_442512
.L_442dd9:

            mov RAX,QWORD PTR [RSP+8]
            cmp DWORD PTR [RAX],12
            je .L_442eb8
.L_442de7:

            lea RDX,QWORD PTR [RIP+.L_4504aa]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_44244f
.L_442e02:

            mov RSI,R13
            mov RDI,R12
            call .L_440bf0

            test EAX,EAX
            js .L_442650

            mov ESI,1
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650

            movzx EAX,BYTE PTR [RAX]
            jmp .L_442579
.L_442e33:

            mov R14,R15
            mov R15,QWORD PTR [RSP+72]
.L_442e3b:

            mov RDI,R14
            call free@PLT

            jmp .L_4425e3
.L_442e48:

            mov RSI,RBP
            mov RDI,R12
            call .L_4408e0

            test RAX,RAX
            je .L_442650
.L_442e5c:

            mov DWORD PTR [RSP+24],0
            jmp .L_4425e3
.L_442e69:

            mov EAX,DWORD PTR [RSI+76]
            mov DWORD PTR [RSP+32],1
            mov DWORD PTR [RSP+16],EAX
            jmp .L_442d67
.L_442e7d:

            mov RSI,R14
            mov RDI,R12
            call .L_440a60

            test EAX,EAX
            jns .L_442797
.L_442e90:

            mov RDI,R14
            call free@PLT

            jmp .L_442650
.L_442e9d:

            mov RSI,RAX
            mov RDI,R12
            call .L_440a60

            test EAX,EAX
            jns .L_4426cb

            jmp .L_442650
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442eb8:

            lea RDX,QWORD PTR [RIP+.L_4504e6]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_44244f
.L_442ed3:

            mov RDI,R12
            call .L_43e180

            mov RSI,QWORD PTR [R15+56]
            jmp .L_442d75
.L_442ee4:

            mov RAX,QWORD PTR [R15+264]
            mov RDI,R12
            mov QWORD PTR [R15+112],RAX
            call .L_43fb70

            mov EBX,EAX
            jmp .L_442d8c
.L_442efe:

            lea RSI,QWORD PTR [RSP+96]
            mov RDI,R12
            call .L_4409c0

            test EAX,EAX
            js .L_442e90

            cmp QWORD PTR [RSP+96],100000000
            jbe .L_4427b6

            jmp .L_442e90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442f30:

            movabs RDX,-116444736000000000
            lea RSI,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RSI
            mov RAX,RSI
            shr RDX,23
            mov QWORD PTR [RCX+32],RDX
            imul RDX,RDX,10000000
            sub RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RCX+56],RAX
            jmp .L_442803
.L_442f75:

            movabs RDX,-116444736000000000
            lea RSI,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RSI
            mov RAX,RSI
            shr RDX,23
            mov QWORD PTR [RCX+48],RDX
            imul RDX,RDX,10000000
            sub RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RCX+72],RAX
            jmp .L_442d40
.L_442fba:

            movabs RDX,-116444736000000000
            lea RSI,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RSI
            mov RAX,RSI
            shr RDX,23
            mov QWORD PTR [RCX+40],RDX
            imul RDX,RDX,10000000
            sub RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RCX+64],RAX
            jmp .L_442884
.L_442fff:

            lea RDX,QWORD PTR [RIP+.L_4465a3]
            jmp .L_442005
.L_44300b:

            mov R14,R15
            jmp .L_442e90
.L_443013:

            lea RDX,QWORD PTR [RIP+.L_444a18]
            jmp .L_44228c
.L_44301f:

            lea RDX,QWORD PTR [RIP+.L_4504aa]
            jmp .L_442005
.L_44302b:

            mov EDI,DWORD PTR [RAX+84]
            or ESI,16
            mov R9D,16
            mov R8D,ESI
            mov DWORD PTR [RAX+24],ESI
            mov ECX,EDI
            shr ECX,16
            mov DWORD PTR [RAX+80],ECX
.L_443045:

            movsxd RSI,R14D
            cmp RSI,QWORD PTR [R13+72]
            jae .L_442650

            test ECX,ECX
            jne .L_44305d

            mov DWORD PTR [RAX+80],33206
.L_44305d:

            mov RCX,QWORD PTR [R13+88]
            cmp BYTE PTR [RCX+RSI*1],0
            je .L_443077

            mov ECX,R8D
            mov R9D,R8D
            or ECX,8
            and R9D,16
            mov DWORD PTR [RAX+24],ECX
.L_443077:

            mov DWORD PTR [RAX+20],R14D
            add R14D,1
            jmp .L_442baa
.L_443084:

            test EBX,EBX
            mov ECX,EDX
            jne .L_4430bf

            mov RDI,QWORD PTR [R13+48]
            cmp RCX,RDI
            jb .L_4430af

            jmp .L_442650
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4430a0:

            lea ECX,DWORD PTR [RDX+1]
            cmp RCX,RDI
            mov RDX,RCX
            jae .L_442650
.L_4430af:

            lea RSI,QWORD PTR [RCX+RCX*2]
            lea RSI,QWORD PTR [RCX+RSI*4]
            cmp QWORD PTR [R10+RSI*8+80],0
            je .L_4430a0
.L_4430bf:

            mov DWORD PTR [RAX+16],EDX
            lea RAX,QWORD PTR [RCX+RCX*2]
            lea ESI,DWORD PTR [RBX+1]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov RBX,RSI
            cmp RSI,QWORD PTR [R10+RAX*8+80]
            jb .L_442bcc

            add EDX,1
            xor EBX,EBX
            jmp .L_442bcc
.L_4430e5:

            test ECX,ECX
            je .L_44314f

            mov EDI,ECX
            and EDI,61440
            cmp EDI,16384
            je .L_443117

            and CH,15
            or CH,64
            mov DWORD PTR [RAX+80],ECX
.L_443102:

            mov ECX,DWORD PTR [RAX+80]
            and ECX,61440
            cmp ECX,16384
            jne .L_442b9a
.L_443117:

            mov RCX,QWORD PTR [RAX]
            cmp RCX,1
            jbe .L_442b9a

            mov RDI,QWORD PTR [RAX+8]
            cmp BYTE PTR [RDI+RCX*1-2],47
            je .L_44318d
.L_44312f:

            mov BYTE PTR [RDI+RCX*1],47
            mov RSI,QWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RAX]
            mov BYTE PTR [RSI+RCX*1+1],0
            add QWORD PTR [RAX],2
            mov ESI,DWORD PTR [RAX+24]
            mov R11D,DWORD PTR [RAX+84]
            jmp .L_442b9a
.L_44314f:

            mov DWORD PTR [RAX+80],16895
            jmp .L_443117
.L_443158:

            lea RDX,QWORD PTR [RIP+.L_4504ff]
            or ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_432bc0

            jmp .L_44244f
.L_443171:

            test RBX,RBX
            je .L_4425e3

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RAX+8],R14
            jmp .L_442650
.L_443188:

            call __stack_chk_fail@PLT
.L_44318d:

            cmp BYTE PTR [RDI+RCX*1-1],0
            je .L_442b9a

            jmp .L_44312f
.L_44319a:

            lea RDX,QWORD PTR [RIP+.L_4503a8]
            mov ESI,84
            mov RDI,R12
            call .L_432bc0

            mov DWORD PTR [RSP+8],4294967266
            jmp .L_44201c
.L_4431bb:

            nop
            nop
            nop
            nop
            nop
.L_4431c0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4502d8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_4431da:

            call .L_436df0

            cmp EAX,-30
            je .L_443268

            mov ESI,20736
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_44326f

            mov DWORD PTR [RAX+20728],4294967295
            lea RAX,QWORD PTR [RIP+.L_43da10]
            lea R9,QWORD PTR [RIP+.L_441c00]
            lea RCX,QWORD PTR [RIP+.L_441ad0]
            lea RDX,QWORD PTR [RIP+.L_45054c]
            xor R8D,R8D
            push RAX
.L_443229:

            lea RAX,QWORD PTR [RIP+.L_43da00]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_43f190]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4405f0]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_440750]
            push RAX
            call .L_404810

            add RSP,48
            test EAX,EAX
            je .L_443268

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_443268:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44326f:

            lea RDX,QWORD PTR [RIP+.L_450533]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_432bc0

            mov EAX,4294967266
            jmp .L_443268
.L_44328c:

            nop
            nop
            nop
            nop
.L_443290:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_65aa70]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_65aa78]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4203912

            test RBP,RBP
            je .L_4432e6

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4432d0:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_4432d0
.L_4432e6:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4432f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443300:

            ret 
.L_443302:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_443324:
          .string "rb"
.L_443327:
          .string "malloc error!\n"
.L_443336:
          .string "read error!\n"
          .zero 5
.L_443348:
          .string "Current client reader does not support seeking a device"
.L_443380:
          .string "Internal error: No format->read_data function registered"
          .zero 7
.L_4433c0:
          .string "Unable to allocate copy buffer"
          .zero 1
.L_4433e0:
          .string "Truncated input file (needed %jd bytes, only %jd available)"
          .zero 4
.L_443420:
          .string "archive_read_extract_set_skip_file"
          .zero 5
.L_443448:
          .string "archive_read_set_open_callback"
          .zero 1
.L_443468:
          .string "archive_read_set_read_callback"
          .zero 1
.L_443488:
          .string "archive_read_set_skip_callback"
          .zero 1
.L_4434a8:
          .string "archive_read_set_seek_callback"
          .zero 1
.L_4434c8:
          .string "archive_read_set_close_callback"
.L_4434e8:
          .string "archive_read_set_switch_callback"
          .zero 7
.L_443510:
          .string "archive_read_set_callback_data2"
.L_443530:
          .string "archive_read_add_callback_data"
          .zero 1
.L_443550:
          .string "Encountered out-of-order sparse blocks"
          .zero 1
.L_443578:
          .string "Internal error: No format_seek_data_block function registered"
          .zero 2
.L_4435b8:
          .string "__archive_read_register_format"
          .zero 1
.L_4435d8:
          .string "Not enough slots for format registration"
          .zero 7
.L_443608:
          .string "Not enough slots for filter registration"
          .zero 7
.L_443638:
          .string "No reader function provided to archive_read_open"
          .zero 7
.L_443670:
          .string "Input requires too many filters for decoding"
.L_44369d:
          .string "archive_read_close"
.L_4436b0:
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x5f
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x5f
.L_4436c2:
          .string "block"
.L_4436c8:
          .string "Negative skip requested."
.L_4436e1:
          .string "No memory."
.L_4436ec:
          .string "Invalid index specified."
.L_443705:
          .string "archive_read_header_position"
.L_443722:
          .string "archive_read_data_skip"
.L_443739:
          .string "archive_read_next_header"
.L_443752:
          .string "Premature end-of-file."
.L_443769:
          .string "archive_seek_data_block"
.L_443781:
          .string "archive_read_free"
.L_443793:
          .string "archive_read_open"
.L_4437a5:
          .string "none"
.L_4437aa:
          .string "No formats registered"
.L_4437c0:
          .string "Unrecognized archive format"
          .zero 4
.L_4437e0:
          .string "archive_read_support_filter_all"
          .byte 0x42
          .byte 0x5a
          .byte 0x68
          .byte 0x0
          .byte 0x31
          .byte 0x41
          .byte 0x59
          .byte 0x26
          .byte 0x53
          .byte 0x59
          .byte 0x0
          .byte 0x17
          .byte 0x72
          .byte 0x45
          .byte 0x38
          .byte 0x50
          .byte 0x90
          .byte 0x0
.L_443812:
          .string "invalid setup parameter"
.L_44382a:
          .string "mis-compiled library"
.L_44383f:
          .string "out of memory"
.L_44384d:
          .string "truncated bzip2 input"
.L_443863:
          .string "bzip decompression failed"
          .zero 3
.L_443880:
          .string "Can\'t allocate data for bzip2 decompression"
          .zero 4
.L_4438b0:
          .string "Failed to clean up decompressor"
.L_4438d0:
          .string "Internal error initializing decompressor%s%s"
          .zero 3
.L_443900:
          .string "archive_read_support_filter_bzip2"
.L_443922:
          .string "Invalid compressed data"
.L_44393a:
          .string "compress (.Z)"
.L_443948:
          .string "Can\'t allocate data for %s decompression"
          .zero 7
.L_443978:
          .string "archive_read_support_filter_compress"
          .zero 3
.L_4439a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
.L_4439e4:
          .string "grzip -d"
.L_4439ed:
          .string "grzip"
          .zero 5
.L_4439f8:
          .string "archive_read_support_filter_grzip"
          .zero 6
.L_443a20:
          .string "Using external grzip program for grzip decompression"
          .zero 3
.L_443a58:
          .string "GRZipII"
.L_443a60:
          .byte 0x2
          .byte 0x4
          .byte 0x3a
          .byte 0x29
          .byte 0x1f
          .byte 0x8b
          .byte 0x8
.L_443a67:
          .zero 1
.L_443a68:
          .byte 0x31
          .byte 0x2e
          .byte 0x32
          .byte 0x2e
          .byte 0x31
          .byte 0x31
          .byte 0x0
.L_443a6f:
          .string "truncated gzip input"
.L_443a84:
          .string "gzip decompression failed"
          .zero 2
.L_443aa0:
          .string "Can\'t allocate data for gzip decompression"
          .zero 5
.L_443ad0:
          .string "Failed to clean up gzip compressor"
          .zero 5
.L_443af8:
          .string "Internal error initializing compression library: invalid setup parameter"
          .zero 7
.L_443b48:
          .string "Internal error initializing compression library: out of memory"
          .zero 1
.L_443b88:
          .string "Internal error initializing compression library: invalid library version"
          .zero 7
.L_443bd8:
          .string "Internal error initializing compression library:  Zlib error %d"
.L_443c18:
          .string "Failed to clean up gzip decompressor"
          .zero 3
.L_443c40:
          .string "archive_read_support_filter_gzip"
.L_443c61:
          .string "lrzip -d -q"
.L_443c6d:
          .string "lrzip"
          .zero 5
.L_443c78:
          .string "archive_read_support_filter_lrzip"
          .zero 6
.L_443ca0:
          .string "Using external lrzip program for lrzip decompression"
.L_443cd5:
          .string "lz4 -d -q"
.L_443cdf:
          .string "lz4"
.L_443ce3:
          .string "Using external lz4 program"
          .zero 2
.L_443d00:
          .string "archive_read_support_filter_lz4"
.L_443d20:
          .string "lzop -d"
.L_443d28:
          .string "lzop"
.L_443d2d:
          .byte 0x89
          .byte 0x4c
          .byte 0x5a
          .byte 0x4f
          .byte 0x0
          .byte 0xd
          .byte 0xa
          .byte 0x1a
.L_443d35:
          .byte 0xa
          .byte 0x0
          .byte 0x0
.L_443d38:
          .string "archive_read_support_filter_lzop"
          .zero 7
.L_443d60:
          .string "Using external lzop program for lzop decompression"
.L_443d93:
          .string "Child process exited badly"
.L_443dae:
          .string "Can\'t allocate memory"
.L_443dc4:
          .string "Can\'t allocate input data"
.L_443dde:
          .byte 0x50
          .byte 0x72
          .byte 0x6f
          .byte 0x67
          .byte 0x72
          .byte 0x61
          .byte 0x6d
.L_443de5:
          .string ": "
.L_443de8:
          .string "Child process exited with signal %d"
          .zero 4
.L_443e10:
          .string "Child process exited with status %d"
          .zero 4
.L_443e38:
          .string "Can\'t initialize filter; unable to run program \"%s\""
.L_443e6c:
          .string "Unrecoginized rpm header"
.L_443e85:
          .byte 0x43
          .byte 0x61
          .byte 0x6e
          .byte 0x27
          .byte 0x74
          .byte 0x20
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
.L_443e9d:
          .string "rpm"
          .zero 3
.L_443ea4:
          .long .L_4076e0-.L_443ea4
          .long .L_407590-.L_443ea4
          .long .L_407640-.L_443ea4
          .long .L_407700-.L_443ea4
          .long .L_407690-.L_443ea4
.L_443eb8:
          .string "archive_read_support_filter_rpm"
.L_443ed8:
          .string "uu"
          .byte 0x62
          .byte 0x65
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x0
          .byte 0x62
          .byte 0x65
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x2d
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x65
          .byte 0x36
          .byte 0x34
          .byte 0x20
          .byte 0x0
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0xa
          .byte 0x0
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0xd
          .byte 0xa
          .byte 0x0
.L_443efd:
          .string "Insufficient compressed data"
.L_443f1a:
          .string "Missing format data"
.L_443f2e:
          .string "Invalid format data"
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x20
          .byte 0x0
          .byte 0x0
.L_443f48:
          .string "Can\'t allocate data for uudecode"
          .zero 7
.L_443f70:
          .string "archive_read_support_filter_uu"
          .zero 17
.L_443fa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4441a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4442a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4443a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x37
          .byte 0x7a
          .byte 0x58
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4444a8:
          .long .L_408db0-.L_4444a8
          .long .L_408db0-.L_4444a8
          .long .L_408e50-.L_4444a8
          .long .L_408e50-.L_4444a8
          .long .L_408e50-.L_4444a8
          .long .L_408db8-.L_4444a8
          .long .L_408dd0-.L_4444a8
          .long .L_408df0-.L_4444a8
          .long .L_408e10-.L_4444a8
          .long .L_408e30-.L_4444a8
          .long .L_408d90-.L_4444a8
          .zero 4
.L_4444d8:
          .string "Lzma library error: Cannot allocate memory"
          .zero 5
.L_444508:
          .string "Lzma library error: Out of memory"
          .zero 6
.L_444530:
          .string "Lzma library error: format not recognized"
          .zero 6
.L_444560:
          .string "Lzma library error: Invalid options"
          .zero 4
.L_444588:
          .string "Lzma library error: Corrupted input data"
          .zero 7
.L_4445b8:
          .string "Lzma library error:  No progress is possible"
          .zero 3
.L_4445e8:
          .string "Lzma decompression failed:  Unknown error"
          .zero 6
.L_444618:
          .string "Can\'t allocate data for xz decompression"
          .zero 7
.L_444648:
          .string "Lzip: Remaining data is less bytes"
          .zero 5
.L_444670:
          .string "archive_read_support_filter_xz"
          .zero 1
.L_444690:
          .string "archive_read_support_filter_lzma"
          .zero 7
.L_4446b8:
          .string "archive_read_support_filter_lzip"
.L_4446d9:
          .string "lzip"
.L_4446de:
          .string "truncated input"
.L_4446ee:
          .string "Lzip: CRC32 error"
.L_444700:
          .string "Lzip: Uncompressed size error"
.L_44471e:
          .string "Lzip: Member size error"
          .zero 2
.L_444738:
          .string "archive_read_support_format_all"
.L_444758:
          .string "Truncated ar archive"
.L_44476d:
          .byte 0x60
          .byte 0xa
          .byte 0x0
.L_444770:
          .byte 0x23
          .byte 0x31
          .byte 0x2f
          .byte 0x0
.L_444774:
          .string "__.SYMDEF"
.L_44477e:
          .string "ar (GNU/SVR4)"
.L_44478c:
          .string "Filename table too large"
.L_4447a5:
          .string "Invalid string table"
.L_4447ba:
          .byte 0x42
          .byte 0x61
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x70
          .byte 0x75
          .byte 0x74
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
.L_4447c9:
          .string "size"
.L_4447ce:
          .string "Truncated input file"
.L_4447e3:
          .string "Can\'t allocate fname buffer"
.L_4447ff:
          .string "ar (BSD)"
.L_444808:
          .string "Can\'t allocate ar data"
          .zero 1
.L_444820:
          .string "Truncated ar archive- failed consuming padding"
          .zero 1
.L_444850:
          .string "Incorrect file header signature"
.L_444870:
          .string "Found entry with empty filename"
.L_444890:
          .string "More than one string tables exist"
          .zero 6
.L_4448b8:
          .string "Can\'t allocate filename table buffer"
          .zero 3
.L_4448e0:
          .string "Can\'t find long filename for GNU/SVR4 archive entry"
          .zero 4
.L_444918:
          .string "archive_read_support_format_ar"
          .zero 1
.L_444938:
          .string "Invalid offset of CFDATA in folder(%d) %jd < %jd"
          .zero 7
.L_444970:
          .string "Can\'t allocate memory for CAB data"
          .zero 5
.L_444998:
          .string "Checksum error CFDATA[%d] %x:%x in %d bytes"
          .zero 4
.L_4449c8:
          .string "Invalid offset of CFFILE %jd < %jd"
          .zero 5
.L_4449f0:
          .string "Multivolume cabinet file is unsupported"
.L_444a18:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_444a40:
          .string "Pathname cannot be converted from %s to current locale."
.L_444a78:
          .string "cab: hdrcharset option needs a character-set name"
          .zero 6
.L_444ab0:
          .string "Can\'t initialize deflate decompression."
.L_444ad8:
          .string "CFDATA incorrect(no MSZIP signature)"
          .zero 3
.L_444b00:
          .string "Invalid uncompressed size (%d < %d)"
          .zero 4
.L_444b28:
          .string "Out of memory for deflate decompression"
.L_444b50:
          .string "Deflate decompression failed (%d)"
          .zero 6
.L_444b78:
          .string "Can\'t initialize LZX decompression."
          .zero 4
.L_444ba0:
          .string "Unsupported CAB compression : %s"
          .zero 7
.L_444bc8:
          .string "Cannot restore this file split in multivolume."
          .zero 1
.L_444bf8:
          .string "archive_read_support_format_cab"
.L_444c18:
          .byte 0x54
          .byte 0x72
          .byte 0x75
          .byte 0x6e
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x43
          .byte 0x41
          .byte 0x42
          .byte 0x20
.L_444c26:
          .string "header"
.L_444c2d:
          .string "Invalid CFDATA"
.L_444c3c:
          .string "CAB"
.L_444c40:
          .string "Couldn\'t find out CAB header"
.L_444c5d:
          .string "UNKNOWN"
.L_444c65:
          .string "Invalid CAB header"
.L_444c78:
          .string "CAB %d.%d (%s)"
.L_444c87:
          .string "hdrcharset"
.L_444c92:
          .string "No memory for CAB reader"
.L_444cab:
          .string "Truncated CAB file data"
.L_444cc3:
          .string "LZX decompression failed (%d)"
.L_444ce1:
          .string "Can\'t allocate CAB data"
.L_444cf9:
          .string "cab"
.L_444cfd:
          .string "NONE"
.L_444d02:
          .byte 0x4d
          .byte 0x53
.L_444d04:
          .string "ZIP"
.L_444d08:
          .string "Quantum"
.L_444d10:
          .string "LZX"
          .zero 12
.L_444d20:
          .long .L_40d0ee-.L_444d20
          .long .L_40d016-.L_444d20
          .long .L_40d192-.L_444d20
          .long .L_40d11a-.L_444d20
          .long .L_40d160-.L_444d20
          .long .L_40ce53-.L_444d20
          .long .L_40ce53-.L_444d20
          .long .L_40ce53-.L_444d20
          .long .L_40cd2c-.L_444d20
          .long .L_40cfb8-.L_444d20
          .long .L_40ca3b-.L_444d20
          .long .L_40cb00-.L_444d20
          .long .L_40cb0c-.L_444d20
          .long .L_40cb81-.L_444d20
          .long .L_40cbbb-.L_444d20
          .long .L_40cc27-.L_444d20
          .long .L_40cca4-.L_444d20
          .long .L_40ccdd-.L_444d20
.L_444d68:
          .long .L_40d740-.L_444d68
          .long .L_40d414-.L_444d68
          .long .L_40d471-.L_444d68
          .long .L_40d720-.L_444d68
          .long .L_40d610-.L_444d68
          .zero 4
.L_444d80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444e20:
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x32
          .byte 0x37
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x31
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x32
          .byte 0x0
.L_444e68:
          .string "cpio (little-endian binary)"
.L_444e84:
          .string "cpio (big-endian binary)"
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x0
.L_444ea3:
          .string "ASCII cpio (SVR4 with no CRC)"
.L_444ec1:
          .string "ASCII cpio (SVR4 with CRC)"
.L_444edc:
          .string "TRAILER!!!"
.L_444ee7:
          .string "compat-2x"
.L_444ef1:
          .byte 0x50
          .byte 0x4f
          .byte 0x53
          .byte 0x49
          .byte 0x58
          .byte 0x20
          .byte 0x6f
          .byte 0x63
          .byte 0x74
          .byte 0x65
          .byte 0x74
          .byte 0x2d
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
.L_444f06:
          .string "cpio"
.L_444f0b:
          .string "afio large ASCII"
.L_444f1c:
          .string "Can\'t allocate cpio data"
          .zero 3
.L_444f38:
          .string "End of file trying to read next cpio header"
          .zero 4
.L_444f68:
          .string "Skipped %d bytes before finding valid header"
          .zero 3
.L_444f98:
          .string "Pathname can\'t be converted from %s to current locale."
          .zero 1
.L_444fd0:
          .string "Rejecting malformed cpio archive: symlink contents exceed 1 megabyte"
          .zero 3
.L_445018:
          .string "Can\'t allocate memory for Linkname"
          .zero 5
.L_445040:
          .string "Linkname can\'t be converted from %s to current locale."
          .zero 1
.L_445078:
          .string "Out of memory adding file to list"
          .zero 6
.L_4450a0:
          .string "cpio: hdrcharset option needs a character-set name"
          .zero 5
.L_4450d8:
          .string "archive_read_support_format_cpio"
.L_4450f9:
          .string "Empty file"
          .zero 4
.L_445108:
          .string "archive_read_support_format_empty"
.L_44512a:
          .string "Out of memory"
.L_445138:
          .string "Truncated zisofs file body"
.L_445153:
          .string "Illegal zisofs file body"
.L_44516c:
          .string "Illegal zisofs block pointers"
.L_44518a:
          .string "joliet"
.L_445191:
          .byte 0x6f
          .byte 0x66
          .byte 0x66
          .byte 0x0
.L_445195:
          .string "ignore"
.L_44519c:
          .string "disable"
.L_4451a4:
          .string "rockridge"
.L_4451ae:
          .string "Rockridge"
          .byte 0x43
          .byte 0x44
          .byte 0x30
          .byte 0x30
          .byte 0x31
          .byte 0x0
.L_4451be:
          .byte 0x2e
.L_4451bf:
          .byte 0x2e
          .byte 0x0
.L_4451c1:
          .string "ROOT"
.L_4451c6:
          .string "hostname"
.L_4451cf:
          .string "No memory for file entry"
.L_4451e8:
          .byte 0x4e
          .byte 0x6f
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
.L_4451fb:
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x0
          .byte 0x53
          .byte 0x50
          .byte 0x7
          .byte 0x1
          .byte 0xbe
          .byte 0xef
          .byte 0x0
.L_445207:
          .byte 0x2e
.L_445208:
          .string "rr_moved"
.L_445211:
          .string "Invalid Rockridge RE"
.L_445226:
          .string "Invalid Rockridge RE and CL"
.L_445242:
          .string "Invalid Rockridge CL"
.L_445257:
          .string "No memory for multi extent"
.L_445272:
          .string "Malformed CE information"
.L_44528b:
          .string "ISO9660"
.L_445293:
          .string "UTF-16BE"
.L_44529c:
          .string "No memory"
.L_4452a6:
          .string "Pathname is too long"
.L_4452bb:
          .byte 0x4e
          .byte 0x6f
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
.L_4452c9:
          .string "Pathname"
.L_4452d2:
          .byte 0x4e
          .byte 0x6f
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
.L_4452e0:
          .string "Linkname"
.L_4452e9:
          .byte 0x43
          .byte 0x61
          .byte 0x6e
          .byte 0x27
          .byte 0x74
          .byte 0x20
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x6f
          .byte 0x39
          .byte 0x36
          .byte 0x36
          .byte 0x30
          .byte 0x20
.L_445300:
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x0
.L_445305:
          .string "iso9660"
          .zero 3
.L_445310:
          .string "Ignoring out-of-order file (%s) %jd < %jd"
          .zero 6
.L_445340:
          .string "No memory for zisofs decompression"
          .zero 5
.L_445368:
          .string "Illegal zisofs block pointers(cannot seek)"
          .zero 5
.L_445398:
          .string "Can\'t initialize zisofs decompression."
          .zero 1
.L_4453c0:
          .string "zisofs decompression failed (%d)"
          .zero 7
.L_4453e8:
          .string "Failed to clean up zlib decompressor"
          .zero 3
.L_445410:
          .string "Invalid parameter in SUSP \"CE\" extension"
          .zero 7
.L_445440:
          .string "Invalid length of directory record"
          .zero 5
.L_445468:
          .string "Invalid length of file identifier"
          .zero 6
.L_445490:
          .string "Invalid location of extent of file"
          .zero 5
.L_4454b8:
          .string "Directory structure contains loop"
          .zero 6
.L_4454e0:
          .string "Ignoring out-of-order directory (%s) %jd > %jd"
          .zero 1
.L_445510:
          .string "Directory is beyond end-of-media: %s"
          .zero 3
.L_445538:
          .string "Failed to read full block when scanning ISO9660 directory list"
          .zero 1
.L_445578:
          .string "Failed to connect \'CL\' pointer to \'RE\' rr_moved pointer of Rockridge extensions: current position = %jd, CL offset = %jd"
          .zero 7
.L_4455f8:
          .string "ISO9660 with Rockridge extensions"
          .zero 6
.L_445620:
          .string "File is beyond end-of-media: %s"
.L_445640:
          .string "Linkname cannot be converted from %s to current locale."
.L_445678:
          .string "Ignoring out-of-order file @%jx (%s) %jd < %jd"
          .zero 1
.L_4456a8:
          .string "archive_read_support_format_iso9660"
          .zero 4
.L_4456d0:
          .long .L_412118-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_412090-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411f40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411f20-.L_4456d0
          .long .L_411ee8-.L_4456d0
          .long .L_411d98-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d40-.L_4456d0
          .long .L_411d30-.L_4456d0
.L_445730:
          .long .L_412553-.L_445730
          .long .L_412590-.L_445730
          .long .L_412543-.L_445730
          .long .L_4124da-.L_445730
          .long .L_412533-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_41250b-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124f3-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124da-.L_445730
          .long .L_4124a5-.L_445730
          .zero 4
.L_4457b8:
          .byte 0x37
          .byte 0xe4
          .byte 0x53
          .byte 0x96
          .byte 0xc9
          .byte 0xdb
          .byte 0xd6
          .byte 0x7
.L_4457c0:
          .long .L_414650-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414608-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414660-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414610-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414670-.L_4457c0
          .long .L_414608-.L_4457c0
.L_4458f8:
          .long .L_415c90-.L_4458f8
          .long .L_415c60-.L_4458f8
          .long .L_415bd0-.L_4458f8
          .long .L_415957-.L_4458f8
          .long .L_415bb0-.L_4458f8
          .long .L_415868-.L_4458f8
          .long .L_415bc8-.L_4458f8
          .long .L_415761-.L_4458f8
          .long .L_41582e-.L_4458f8
          .long .L_415a5c-.L_4458f8
.L_445920:
          .zero 32
.L_445940:
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xe
          .byte 0xe
          .byte 0xe
          .byte 0xe
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x0
.L_445d40:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_445d68:
          .string "LHa data CRC error"
.L_445d7b:
          .string "Truncated LHa file body"
.L_445d93:
          .string "Bad lzh data"
.L_445da0:
          .string "Truncated LHa file data"
.L_445db8:
          .string "Truncated LHa header"
.L_445dcd:
          .string "CP%d"
.L_445dd2:
          .string "Invalid extended LHa header"
.L_445dee:
          .string "lha"
.L_445df2:
          .string "Couldn\'t find out LHa header"
.L_445e0f:
          .string "Bad LHa file"
          .byte 0x6c
          .byte 0x68
          .byte 0x64
          .byte 0x0
          .byte 0x6c
          .byte 0x68
          .byte 0x30
          .byte 0x0
.L_445e24:
          .string "Invalid LHa header"
.L_445e37:
          .string "LHa header sum error"
.L_445e4c:
          .string "Invalid LHa header size"
.L_445e64:
          .string "LHa header CRC error"
.L_445e79:
          .string "Unknown symlink-name"
.L_445e8e:
          .string "lha -%c%c%c-"
.L_445e9b:
          .string "Can\'t allocate lha data"
          .zero 5
.L_445eb8:
          .string "lha: hdrcharset option needs a character-set name"
          .zero 6
.L_445ef0:
          .string "Unsupported lzh compression method -%c%c%c-"
          .zero 4
.L_445f20:
          .string "Couldn\'t allocate memory for lzh decompression"
          .zero 1
.L_445f50:
          .string "Unsupported LHa header level %d"
.L_445f70:
          .string "archive_read_support_format_lha"
.L_445f90:
          .string "Can\'t read"
.L_445f9b:
          .string "checkfs"
.L_445fa3:
          .string "Unknown format `%s\'"
.L_445fb7:
          .string "Missing number"
.L_445fc6:
          .string "Too many arguments"
.L_445fd9:
          .string ","
.L_445fdb:
          .string "Not enough arguments"
.L_445ff0:
          .string "nochange"
.L_445ff9:
          .string "optional"
.L_446002:
          .string "Malformed attribute \"%s\" (%d)"
.L_446020:
          .string "contents"
.L_446029:
          .byte 0x67
.L_44602a:
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_44602d:
          .string "gname"
.L_446033:
          .string "inode"
.L_446039:
          .byte 0x6d
          .byte 0x64
          .byte 0x35
          .byte 0x0
.L_44603d:
          .string "md5digest"
.L_446047:
          .byte 0x6d
          .byte 0x6f
          .byte 0x64
          .byte 0x65
          .byte 0x0
.L_44604c:
          .byte 0x72
          .byte 0x65
          .byte 0x73
.L_44604f:
          .string "device"
.L_446056:
          .byte 0x72
          .byte 0x6d
          .byte 0x64
          .byte 0x31
          .byte 0x36
.L_44605b:
          .byte 0x30
          .byte 0x0
.L_44605d:
          .string "rmd160digest"
.L_44606a:
          .byte 0x73
          .byte 0x68
          .byte 0x61
          .byte 0x31
          .byte 0x0
.L_44606f:
          .string "sha1digest"
.L_44607a:
          .string "sha256"
.L_446081:
          .string "sha256digest"
.L_44608e:
          .string "sha384"
.L_446095:
          .string "sha384digest"
.L_4460a2:
          .string "sha512"
.L_4460a9:
          .string "sha512digest"
.L_4460b6:
          .byte 0x74
          .byte 0x61
          .byte 0x67
          .byte 0x73
          .byte 0x0
.L_4460bb:
          .byte 0x63
          .byte 0x68
.L_4460bd:
          .string "ar"
.L_4460c0:
          .byte 0x66
          .byte 0x69
          .byte 0x66
          .byte 0x6f
          .byte 0x0
.L_4460c5:
          .byte 0x75
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_4460c9:
          .string "uname"
.L_4460cf:
          .string "Unrecognized key %s=%s"
.L_4460e6:
          .byte 0x2f
          .byte 0x73
          .byte 0x65
          .byte 0x74
          .byte 0x0
.L_4460eb:
          .string "/unset"
.L_4460f2:
          .string "Line too long"
.L_446100:
          .string "Can\'t allocate working buffer"
.L_44611e:
          .byte 0x20
          .byte 0x9
          .byte 0xd
.L_446121:
          .string "\n"
.L_446123:
          .string "/unset shall not contain `=\'"
.L_446140:
          .string "Can\'t parse line %ju"
.L_446155:
          .string "Can\'t open %s"
.L_446163:
          .string "Could not fstat %s"
          .byte 0x23
.L_446177:
          .string "mtree"
.L_44617d:
          .string "Can\'t allocate mtree data"
          .zero 9
.L_4461a0:
          .long .L_418428-.L_4461a0
          .long .L_4183b0-.L_4461a0
          .long .L_418440-.L_4461a0
          .long .L_4183b0-.L_4461a0
          .long .L_4184c8-.L_4461a0
          .long .L_418440-.L_4461a0
          .long .L_4184b8-.L_4461a0
          .long .L_418440-.L_4461a0
          .long .L_418440-.L_4461a0
          .long .L_4184b8-.L_4461a0
          .long .L_4184a8-.L_4461a0
          .long .L_418498-.L_4461a0
          .long .L_418498-.L_4461a0
          .long .L_418440-.L_4461a0
          .long .L_418440-.L_4461a0
          .long .L_418488-.L_4461a0
          .long .L_418478-.L_4461a0
          .long .L_418468-.L_4461a0
          .long .L_418458-.L_4461a0
.L_4461ec:
          .long .L_418c40-.L_4461ec
          .long .L_418b50-.L_4461ec
          .long .L_418b50-.L_4461ec
          .long .L_418b50-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418c30-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418c20-.L_4461ec
          .long .L_418c10-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418c00-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418be8-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418bd8-.L_4461ec
          .long .L_418bc8-.L_4461ec
          .long .L_418bb8-.L_4461ec
          .long .L_418b60-.L_4461ec
          .long .L_418ba8-.L_4461ec
.L_446308:
          .long .L_41914a-.L_446308
          .long .L_419596-.L_446308
          .long .L_419717-.L_446308
          .long .L_419228-.L_446308
          .long .L_41924a-.L_446308
          .long .L_419717-.L_446308
          .long .L_41928e-.L_446308
          .long .L_419717-.L_446308
          .long .L_419717-.L_446308
          .long .L_4192b0-.L_446308
          .long .L_4192d2-.L_446308
          .long .L_419363-.L_446308
          .long .L_419717-.L_446308
          .long .L_419717-.L_446308
          .long .L_419717-.L_446308
          .long .L_419385-.L_446308
          .long .L_4193df-.L_446308
          .long .L_4195f6-.L_446308
          .long .L_419530-.L_446308
.L_446354:
          .long .L_41988f-.L_446354
          .long .L_419858-.L_446354
          .long .L_419821-.L_446354
          .long .L_4198c6-.L_446354
          .long .L_4197cf-.L_446354
          .long .L_4198c6-.L_446354
          .long .L_4198c6-.L_446354
          .long .L_4198c6-.L_446354
          .long .L_4198c6-.L_446354
          .long .L_4198c6-.L_446354
          .long .L_41978d-.L_446354
.L_446380:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446480:
          .string "Symbolic mode \"%s\" unsupported"
          .zero 1
.L_4464a0:
          .string "Unrecognized file type \"%s\"; assuming \"file\""
          .zero 3
.L_4464d0:
          .string "Missing type keyword in mtree specification"
          .zero 4
.L_446500:
          .string "mtree specification has different type for %s"
          .zero 2
.L_446530:
          .string "archive_read_support_format_mtree"
.L_446552:
          .string "Huffman tree was not created."
.L_446570:
          .string "Bad RAR file data"
.L_446582:
          .string "Prefix found"
.L_44658f:
          .string "Invalid header size"
.L_4465a3:
          .string "Header CRC error"
.L_4465b4:
          .string "Invalid sizes specified."
.L_4465cd:
          .string "Invalid filename size"
.L_4465e3:
          .string "Couldn\'t allocate memory."
.L_4465fd:
          .string "Invalid filename"
.L_44660e:
          .string "RAR"
.L_446612:
          .string "Couldn\'t find out RAR header"
.L_44662f:
          .string "Invalid marker header"
.L_446645:
          .byte 0x49
          .byte 0x6e
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x68
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x6f
          .byte 0x20
          .byte 0x73
          .byte 0x6d
.L_44665f:
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x0
.L_446663:
          .byte 0x42
          .byte 0x61
          .byte 0x64
          .byte 0x20
          .byte 0x52
          .byte 0x41
          .byte 0x52
          .byte 0x20
.L_44666b:
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_446670:
          .string "Error during seek of RAR file"
.L_44668e:
          .string "Truncated RAR file data"
.L_4466a6:
          .string "Invalid zero dictionary size"
.L_4466c3:
          .string "Invalid PPMd sequence"
.L_4466d9:
          .string "File CRC error"
.L_4466e8:
          .string "Invalid symbol"
.L_4466f7:
          .string "Can\'t allocate rar data"
.L_44670f:
          .string "rar"
          .zero 5
.L_446718:
          .string "Invalid location to Huffman tree specified."
          .zero 4
.L_446748:
          .string "Unable to allocate memory for uncompressed data."
          .zero 7
.L_446780:
          .string "rar: hdrcharset option needs a character-set name"
          .zero 6
.L_4467b8:
          .string "Unable to allocate memory for node data."
          .zero 7
.L_4467e8:
          .string "RAR solid archive support unavailable."
          .zero 1
.L_446810:
          .string "RAR encryption support unavailable."
          .zero 4
.L_446838:
          .string "Unknown file attributes from RAR file\'s host OS"
.L_446868:
          .string "Can\'t allocate memory for link"
          .zero 1
.L_446888:
          .string "link cannot be converted from %s to current locale."
          .zero 4
.L_4468c0:
          .string "Attempt to seek past beginning of RAR data block"
          .zero 7
.L_4468f8:
          .string "Seeking of compressed RAR files is unsupported"
          .zero 1
.L_446928:
          .string "Invalid prefix code in bitstream"
          .zero 7
.L_446950:
          .string "Unable to initialize PPMd range decoder"
.L_446978:
          .string "Internal error extracting RAR file."
          .zero 4
.L_4469a0:
          .string "Parsing filters is unsupported."
.L_4469c0:
          .string "Internal error extracting RAR file"
          .zero 5
.L_4469e8:
          .string "Unsupported compression method for RAR file."
          .zero 3
.L_446a18:
          .string "archive_read_support_format_rar"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x61
          .byte 0x72
          .byte 0x21
          .byte 0x1a
          .byte 0x7
          .byte 0x0
          .byte 0x0
.L_446a48:
          .long .L_41c990-.L_446a48
          .long .L_41cb58-.L_446a48
          .long .L_41cbe0-.L_446a48
          .long .L_41ca80-.L_446a48
          .long .L_41ca80-.L_446a48
          .long .L_41ca80-.L_446a48
          .long .L_41ca80-.L_446a48
          .long .L_41ca80-.L_446a48
          .long .L_41cc00-.L_446a48
          .long .L_41ca80-.L_446a48
.L_446a70:
          .long .L_41e740-.L_446a70
          .long .L_41e498-.L_446a70
          .long .L_41e730-.L_446a70
          .long .L_41e6f0-.L_446a70
          .long .L_41e620-.L_446a70
          .long .L_41e750-.L_446a70
          .zero 24
.L_446aa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x5
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0xa
          .byte 0xb
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xd
          .byte 0xd
          .byte 0xe
          .byte 0xe
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446ae0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
.L_446bd0:
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x6
.L_446bd8:
          .byte 0x0
          .byte 0x4
          .byte 0x8
          .byte 0x10
          .byte 0x20
          .byte 0x40
          .byte 0x80
          .byte 0xc0
.L_446be0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446c00:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0xa
          .byte 0xc
          .byte 0xe
          .byte 0x10
          .byte 0x14
          .byte 0x18
          .byte 0x1c
          .byte 0x20
          .byte 0x28
          .byte 0x30
          .byte 0x38
          .byte 0x40
          .byte 0x50
          .byte 0x60
          .byte 0x70
          .byte 0x80
          .byte 0xa0
          .byte 0xc0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446c20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_446cb0:
          .string "Truncated tar archive"
.L_446cc6:
          .string "mac-ext"
.L_446cce:
          .string "read_concatenated_archives"
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x20
          .byte 0x0
.L_446cf0:
          .string "Malformed sparse map data"
.L_446d0a:
          .byte 0x53
          .byte 0x43
          .byte 0x48
          .byte 0x49
          .byte 0x4c
          .byte 0x59
          .byte 0x2e
          .byte 0x61
          .byte 0x63
          .byte 0x6c
          .byte 0x2e
.L_446d15:
          .string "access"
.L_446d1c:
          .byte 0x53
          .byte 0x43
          .byte 0x48
          .byte 0x49
          .byte 0x4c
          .byte 0x59
          .byte 0x2e
          .byte 0x61
          .byte 0x63
          .byte 0x6c
          .byte 0x2e
.L_446d27:
          .string "default"
.L_446d2f:
          .string "SCHILY.acl.ace"
.L_446d3e:
          .string "Unknown ACL type: %d"
.L_446d53:
          .string "Can\'t allocate memory for "
.L_446d6e:
          .string "%s %s"
.L_446d74:
          .string "Parse error: "
.L_446d82:
          .string "Special header too large"
.L_446d9b:
          .string "Can\'t allocate memory for %s"
.L_446db8:
          .string "Tar entry has negative size"
.L_446dd4:
          .string "Tar entry size overflow"
.L_446dec:
          .string "Damaged tar archive"
.L_446e00:
          .string "Too many special headers"
.L_446e19:
          .byte 0x53
          .byte 0x6f
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x69
          .byte 0x73
          .byte 0x20
.L_446e21:
          .string "tar"
.L_446e25:
          .string "Can\'t allocate memory for ACL"
.L_446e43:
          .string "POSIX pax interchange format"
.L_446e60:
          .string "GNU tar format"
.L_446e6f:
          .string "Uname"
.L_446e75:
          .string "Gname"
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x0
.L_446e81:
          .string "POSIX ustar format"
.L_446e94:
          .string "tar (non-POSIX)"
.L_446ea4:
          .string "GNU.sparse"
.L_446eaf:
          .string "GNU.sparse.numblocks"
.L_446ec4:
          .string "GNU.sparse.offset"
.L_446ed6:
          .string "GNU.sparse.numbytes"
.L_446eea:
          .string "GNU.sparse.size"
.L_446efa:
          .string "GNU.sparse.map"
.L_446f09:
          .byte 0x47
          .byte 0x4e
          .byte 0x55
          .byte 0x2e
          .byte 0x73
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x2e
.L_446f14:
          .string "major"
.L_446f1a:
          .byte 0x47
          .byte 0x4e
          .byte 0x55
          .byte 0x2e
          .byte 0x73
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x2e
.L_446f25:
          .string "minor"
.L_446f2b:
          .string "GNU.sparse.realsize"
.L_446f3f:
          .string "LIBARCHIVE.creationtime"
          .byte 0x4c
          .byte 0x49
          .byte 0x42
          .byte 0x41
          .byte 0x52
          .byte 0x43
          .byte 0x48
          .byte 0x49
          .byte 0x56
          .byte 0x45
          .byte 0x2e
          .byte 0x78
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x72
          .byte 0x2e
          .byte 0x0
.L_446f69:
          .string "SCHILY.devmajor"
.L_446f79:
          .string "SCHILY.devminor"
.L_446f89:
          .byte 0x53
          .byte 0x43
          .byte 0x48
          .byte 0x49
          .byte 0x4c
          .byte 0x59
          .byte 0x2e
          .byte 0x66
.L_446f91:
          .string "flags"
.L_446f97:
          .string "SCHILY.dev"
.L_446fa2:
          .string "SCHILY.ino"
.L_446fad:
          .byte 0x53
          .byte 0x43
          .byte 0x48
          .byte 0x49
          .byte 0x4c
          .byte 0x59
          .byte 0x2e
.L_446fb4:
          .string "nlink"
.L_446fba:
          .string "SCHILY.realsize"
.L_446fca:
          .string "SCHILY.xattr."
.L_446fd8:
          .byte 0x50
          .byte 0x61
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
.L_446fe5:
          .string "SUN.holesdata"
.L_446ff3:
          .string "ctime"
.L_446ff9:
          .string "BINARY"
.L_447000:
          .byte 0x49
          .byte 0x53
          .byte 0x4f
          .byte 0x2d
          .byte 0x49
          .byte 0x52
          .byte 0x20
          .byte 0x31
          .byte 0x30
          .byte 0x36
          .byte 0x34
          .byte 0x36
          .byte 0x20
          .byte 0x32
          .byte 0x30
          .byte 0x30
          .byte 0x30
          .byte 0x20
.L_447012:
          .string "UTF-8"
.L_447018:
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
.L_44701c:
          .byte 0x70
          .byte 0x61
          .byte 0x74
          .byte 0x68
          .byte 0x0
.L_447021:
          .string "mtime"
.L_447027:
          .string "GNU.sparse.name"
.L_447037:
          .string "Can\'t allocate tar data"
          .zero 1
.L_447050:
          .string "tar: hdrcharset option needs a character-set name"
          .zero 6
.L_447088:
          .string "%s can\'t be converted from %s to current locale."
          .zero 7
.L_4470c0:
          .string "Malformed Solaris ACL attribute (invalid digit)"
.L_4470f0:
          .string "Malformed Solaris ACL attribute (count too large)"
          .zero 6
.L_447128:
          .string "Malformed Solaris ACL attribute (unsupported type %o)"
          .zero 2
.L_447160:
          .string "Malformed Solaris ACL attribute (body overflow)"
.L_447190:
          .string "Malformed Solaris ACL attribute (unparsable)"
          .zero 3
.L_4471c0:
          .string "POSIX pax interchange format (Sun variant)"
          .zero 5
.L_4471f0:
          .string "Truncated tar archive detected while reading sparse file data"
          .zero 2
.L_447230:
          .string "Unrecognized GNU sparse file format"
          .zero 4
.L_447258:
          .string "Ignoring malformed pax extended attributes"
          .zero 5
.L_447288:
          .string "Rejecting pax extended attribute > 1MB"
          .zero 1
.L_4472b0:
          .string "Ignoring malformed pax extended attribute"
          .zero 6
.L_4472e0:
          .string "Invalid pax extended attributes"
.L_447300:
          .string "Non-regular file cannot be sparse"
          .zero 6
.L_447328:
          .string "archive_read_support_format_tar"
.L_447348:
          .string "archive_read_support_format_gnutar"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447388:
          .long .L_420690-.L_447388
          .long .L_4206e8-.L_447388
          .long .L_420798-.L_447388
          .long .L_420868-.L_447388
          .long .L_420800-.L_447388
          .long .L_420838-.L_447388
          .long .L_420840-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_420850-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_4206e0-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_42069c-.L_447388
          .long .L_420690-.L_447388
.L_447418:
          .long .L_420b25-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420b8e-.L_447418
          .long .L_420c3d-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d2a-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420cc8-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420cdb-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420d42-.L_447418
          .long .L_420a14-.L_447418
.L_4474f8:
          .long .L_422128-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421fea-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_422611-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_4225ac-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_422547-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_4224d0-.L_4474f8
          .long .L_4228f6-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_4228a8-.L_4474f8
          .long .L_422970-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421f9f-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421e76-.L_4474f8
          .long .L_421d00-.L_4474f8
          .long .L_421f11-.L_4474f8
          .zero 12
.L_4475c0:
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x46
          .byte 0x47
          .byte 0x48
          .byte 0x49
          .byte 0x4a
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x52
          .byte 0x53
          .byte 0x54
          .byte 0x55
          .byte 0x56
          .byte 0x57
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x2b
          .byte 0x2f
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0xd
          .byte 0xa
          .byte 0x0
.L_447606:
          .string "Bad record header"
.L_447618:
          .string "Unsupported record version"
.L_447633:
          .byte 0x42
          .byte 0x61
          .byte 0x64
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x20
.L_44763f:
          .string "length"
.L_447646:
          .byte 0x42
          .byte 0x61
          .byte 0x64
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x72
          .byte 0x64
          .byte 0x20
.L_447651:
          .byte 0x74
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x0
.L_447656:
          .string "WARC/%u.%u"
          .byte 0x72
          .byte 0x65
          .byte 0x71
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x74
          .byte 0x0
.L_447669:
          .byte 0x3a
.L_44766a:
          .byte 0x2f
.L_44766b:
          .byte 0x2f
          .byte 0x0
          .byte 0x66
          .byte 0x74
          .byte 0x70
          .byte 0x0
.L_447671:
          .string "Can\'t allocate warc data"
.L_44768a:
          .string "warc"
          .zero 1
.L_447690:
          .string "archive_read_support_format_warc"
          .zero 15
.L_4476c0:
          .string "\r\nLast-Modified:"
          .zero 15
.L_4476e0:
          .string "\r\nWARC-Target-URI:"
          .zero 5
.L_4476f8:
          .string "\r\nWARC-Type:"
          .zero 3
.L_447708:
          .string "\r\nWARC-Date:"
          .zero 11
.L_447720:
          .string "\r\nContent-Length:"
          .byte 0x57
          .byte 0x41
          .byte 0x52
          .byte 0x43
          .byte 0x2f
          .byte 0x0
.L_447738:
          .string "\r\n\r\n"
          .zero 3
.L_447740:
          .string "Failed to clean up bzip2 decompressor"
          .zero 2
.L_447768:
          .string "Couldn\'t allocate memory for out buffer"
.L_447790:
          .string "File decompression failed (%d)"
          .zero 1
.L_4477b0:
          .string "Couldn\'t initialize zlib stream."
          .zero 7
.L_4477d8:
          .string "Internal error initializing decompressor: %s"
          .zero 3
.L_447808:
          .string "Internal error initializing compression library: Cannot allocate memory"
.L_447850:
          .string "Internal error initializing compression library: Invalid or unsupported options"
.L_4478a0:
          .string "Internal error initializing lzma library"
          .zero 7
.L_4478d0:
          .string "%s compression not supported on this platform"
          .zero 2
.L_447900:
          .string "Unsupported header version(%d)"
          .zero 1
.L_447920:
          .string "Couldn\'t allocate memory for xml parser"
.L_447948:
          .string "Can\'t allocate memory for Gname"
.L_447968:
          .string "Gname cannot be converted from %s to current locale."
          .zero 3
.L_4479a0:
          .string "Can\'t allocate memory for Uname"
.L_4479c0:
          .string "Uname cannot be converted from %s to current locale."
          .zero 3
.L_4479f8:
          .string "archive_read_support_format_xar"
.L_447a18:
          .byte 0x78
          .byte 0x61
          .byte 0x72
          .byte 0x0
.L_447a1c:
          .byte 0x74
          .byte 0x6f
          .byte 0x63
          .byte 0x0
.L_447a20:
          .string "creation-time"
.L_447a2e:
          .string "encoding"
.L_447a37:
          .string "archived-checksum"
.L_447a49:
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x72
          .byte 0x61
          .byte 0x63
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x2d
.L_447a53:
          .byte 0x63
          .byte 0x68
          .byte 0x65
.L_447a56:
          .string "cksum"
.L_447a5c:
          .byte 0x65
          .byte 0x61
          .byte 0x0
.L_447a5f:
          .string "fstype"
.L_447a66:
          .string "group"
.L_447a6c:
          .byte 0x75
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x0
.L_447a71:
          .string "deviceno"
.L_447a7a:
          .byte 0x61
          .byte 0x63
          .byte 0x6c
          .byte 0x0
.L_447a7e:
          .string "appleextended"
.L_447a8c:
          .byte 0x55
          .byte 0x73
          .byte 0x65
          .byte 0x72
.L_447a90:
          .string "NoDump"
.L_447a97:
          .string "UserImmutable"
.L_447aa5:
          .string "UserAppend"
.L_447ab0:
          .string "UserOpaque"
.L_447abb:
          .string "UserNoUnlink"
.L_447ac8:
          .string "SystemArchived"
.L_447ad7:
          .byte 0x53
          .byte 0x79
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x6d
.L_447add:
          .string "Immutable"
.L_447ae7:
          .string "SystemAppend"
.L_447af4:
          .string "SystemNoUnlink"
.L_447b03:
          .string "SystemSnapshot"
.L_447b12:
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x32
          .byte 0x0
.L_447b17:
          .string "SecureDeletion"
.L_447b26:
          .string "Undelete"
.L_447b2f:
          .string "Compress"
.L_447b38:
          .string "Synchronous"
.L_447b44:
          .string "AppendOnly"
.L_447b4f:
          .string "NoAtime"
.L_447b57:
          .string "CompDirty"
.L_447b61:
          .byte 0x4e
          .byte 0x6f
.L_447b63:
          .string "CompBlock"
.L_447b6d:
          .string "CompError"
.L_447b77:
          .string "BTree"
.L_447b7d:
          .string "HashIndexed"
.L_447b89:
          .string "iMagic"
.L_447b90:
          .string "Journaled"
.L_447b9a:
          .string "NoTail"
.L_447ba1:
          .string "DirSync"
.L_447ba9:
          .string "TopDir"
.L_447bb0:
          .string "Reserved"
.L_447bb9:
          .string "Truncated archive file"
.L_447bd0:
          .string "%s decompression failed(%d)"
.L_447bec:
          .byte 0x58
          .byte 0x4d
          .byte 0x4c
          .byte 0x20
          .byte 0x50
          .byte 0x61
          .byte 0x72
          .byte 0x73
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
.L_447bff:
          .string "%s"
.L_447c02:
          .string "??"
.L_447c05:
          .string "Sumcheck error"
.L_447c14:
          .string "Decompressed size error"
.L_447c2c:
          .string "style"
.L_447c32:
          .string "application/octet-stream"
.L_447c4b:
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x2f
          .byte 0x78
          .byte 0x2d
.L_447c59:
          .string "gzip"
.L_447c5e:
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x2f
          .byte 0x78
          .byte 0x2d
.L_447c6c:
          .string "bzip2"
.L_447c72:
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x2f
          .byte 0x78
          .byte 0x2d
.L_447c80:
          .string "lzma"
.L_447c85:
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x6c
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x2f
          .byte 0x78
          .byte 0x2d
.L_447c93:
          .string "xz"
.L_447c96:
          .string "Cannot seek."
.L_447ca3:
          .byte 0x68
          .byte 0x61
          .byte 0x72
          .byte 0x64
.L_447ca7:
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
.L_447cac:
          .string "directory"
.L_447cb6:
          .string "symlink"
.L_447cbe:
          .string "character special"
.L_447cd0:
          .string "block special"
.L_447cde:
          .string "socket"
.L_447ce5:
          .string "nodump"
.L_447cec:
          .string "uimmutable"
.L_447cf7:
          .string "uappend"
.L_447cff:
          .string "opaque"
.L_447d06:
          .string "nouunlink"
.L_447d10:
          .string "archived"
.L_447d19:
          .string "simmutable"
.L_447d24:
          .string "sappend"
.L_447d2c:
          .string "nosunlink"
.L_447d36:
          .string "snapshot"
.L_447d3f:
          .string "securedeletion"
.L_447d4e:
          .string "compress"
.L_447d57:
          .byte 0x6e
          .byte 0x6f
.L_447d59:
          .string "atime"
.L_447d5f:
          .string "compdirty"
.L_447d69:
          .byte 0x6e
          .byte 0x6f
.L_447d6b:
          .string "comprblk"
.L_447d74:
          .string "comperr"
.L_447d7c:
          .string "btree"
.L_447d82:
          .string "hashidx"
.L_447d8a:
          .string "imagic"
.L_447d91:
          .string "journal"
.L_447d99:
          .string "notail"
.L_447da0:
          .byte 0x64
          .byte 0x69
          .byte 0x72
.L_447da3:
          .string "sync"
.L_447da8:
          .byte 0x74
          .byte 0x6f
          .byte 0x70
.L_447dab:
          .byte 0x64
          .byte 0x69
          .byte 0x72
          .byte 0x0
.L_447daf:
          .string "reserved"
.L_447db8:
          .byte 0x54
          .byte 0x72
          .byte 0x75
          .byte 0x6e
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
.L_447dc2:
          .string "archive header"
.L_447dd1:
          .string "Invalid header magic"
.L_447de6:
          .string "original"
.L_447def:
          .byte 0x65
          .byte 0x6e
          .byte 0x63
.L_447df2:
          .byte 0x74
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x0
.L_447df7:
          .string "base64"
.L_447dfe:
          .string "TOC uncompressed size error"
.L_447e1a:
          .string "Can\'t allocate xar data"
          .zero 14
.L_447e40:
          .long .L_424441-.L_447e40
          .long .L_425250-.L_447e40
          .long .L_425220-.L_447e40
          .long .L_4251f0-.L_447e40
          .long .L_4251c0-.L_447e40
          .long .L_425190-.L_447e40
          .long .L_425168-.L_447e40
          .long .L_425110-.L_447e40
          .long .L_4250e0-.L_447e40
          .long .L_4250b0-.L_447e40
          .long .L_425080-.L_447e40
          .long .L_425050-.L_447e40
          .long .L_425020-.L_447e40
          .long .L_424ff0-.L_447e40
          .long .L_424fc0-.L_447e40
          .long .L_424f98-.L_447e40
          .long .L_424f60-.L_447e40
          .long .L_424f30-.L_447e40
          .long .L_424f00-.L_447e40
          .long .L_424ed0-.L_447e40
          .long .L_424ea0-.L_447e40
          .long .L_424e70-.L_447e40
          .long .L_424e40-.L_447e40
          .long .L_424e10-.L_447e40
          .long .L_424de0-.L_447e40
          .long .L_424db0-.L_447e40
          .long .L_424d80-.L_447e40
          .long .L_424d50-.L_447e40
          .long .L_424d20-.L_447e40
          .long .L_424cf0-.L_447e40
          .long .L_424cc0-.L_447e40
          .long .L_424c90-.L_447e40
          .long .L_424c60-.L_447e40
          .long .L_424c30-.L_447e40
          .long .L_424c00-.L_447e40
          .long .L_424bd0-.L_447e40
          .long .L_424ba0-.L_447e40
          .long .L_424b70-.L_447e40
          .long .L_424b40-.L_447e40
          .long .L_424b10-.L_447e40
          .long .L_424ae0-.L_447e40
          .long .L_424ab0-.L_447e40
          .long .L_424a80-.L_447e40
          .long .L_424a50-.L_447e40
          .long .L_424a20-.L_447e40
          .long .L_4249f0-.L_447e40
          .long .L_4249c0-.L_447e40
          .long .L_424990-.L_447e40
          .long .L_424960-.L_447e40
          .long .L_424930-.L_447e40
          .long .L_424900-.L_447e40
          .long .L_4248d0-.L_447e40
          .long .L_4248a0-.L_447e40
          .long .L_424870-.L_447e40
          .long .L_424840-.L_447e40
          .long .L_424810-.L_447e40
          .long .L_4247e0-.L_447e40
          .long .L_4247b0-.L_447e40
          .long .L_424780-.L_447e40
          .long .L_424750-.L_447e40
          .long .L_424720-.L_447e40
          .long .L_4246f0-.L_447e40
          .long .L_4246c0-.L_447e40
          .long .L_424690-.L_447e40
          .long .L_424660-.L_447e40
          .long .L_424630-.L_447e40
          .long .L_424600-.L_447e40
          .long .L_4245d0-.L_447e40
          .long .L_4245a0-.L_447e40
          .long .L_424570-.L_447e40
          .long .L_424540-.L_447e40
          .long .L_424510-.L_447e40
          .long .L_4244e0-.L_447e40
          .long .L_4244b0-.L_447e40
          .long .L_424490-.L_447e40
          .long .L_424470-.L_447e40
          .long .L_424450-.L_447e40
          .long .L_424400-.L_447e40
.L_447f78:
          .long .L_425892-.L_447f78
          .long .L_425840-.L_447f78
          .long .L_425930-.L_447f78
          .long .L_4258c0-.L_447f78
          .long .L_4258c0-.L_447f78
.L_447f8c:
          .long .L_426c19-.L_447f8c
          .long .L_426bc9-.L_447f8c
          .long .L_426b79-.L_447f8c
          .long .L_426593-.L_447f8c
          .long .L_426b62-.L_447f8c
          .long .L_426b48-.L_447f8c
          .long .L_426593-.L_447f8c
          .long .L_426593-.L_447f8c
          .long .L_426af8-.L_447f8c
          .long .L_426aa8-.L_447f8c
          .long .L_426a4f-.L_447f8c
          .long .L_426593-.L_447f8c
          .long .L_426a2a-.L_447f8c
          .long .L_426a02-.L_447f8c
          .long .L_4269d9-.L_447f8c
          .long .L_4269aa-.L_447f8c
          .long .L_42698c-.L_447f8c
          .long .L_42696e-.L_447f8c
          .long .L_426e73-.L_447f8c
          .long .L_426e4c-.L_447f8c
          .long .L_426e03-.L_447f8c
          .long .L_426ddc-.L_447f8c
          .long .L_426d8f-.L_447f8c
          .long .L_426d1c-.L_447f8c
          .long .L_426593-.L_447f8c
          .long .L_426ccc-.L_447f8c
          .long .L_426c77-.L_447f8c
          .long .L_426f0b-.L_447f8c
          .long .L_426e91-.L_447f8c
          .long .L_426ee4-.L_447f8c
          .long .L_42679b-.L_447f8c
          .long .L_426628-.L_447f8c
          .long .L_426593-.L_447f8c
          .long .L_426c69-.L_447f8c
          .long .L_426c69-.L_447f8c
          .long .L_426c69-.L_447f8c
.L_44801c:
          .long .L_427ceb-.L_44801c
          .long .L_427cc0-.L_44801c
          .long .L_427c3e-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_4281c8-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427fd8-.L_44801c
          .long .L_428218-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427e60-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427df6-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427d1e-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427f68-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427da0-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .long .L_427c03-.L_44801c
          .zero 12
.L_448160:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_448560:
          .string "Unsupported encryption format version: %u"
          .zero 6
.L_448590:
          .string "Unknown encryption algorithm: %u"
          .zero 7
.L_4485b8:
          .string "zip: hdrcharset option needs a character-set name"
          .zero 6
.L_4485f0:
          .string "Passphrase required for this entry"
          .zero 5
.L_448618:
          .string "Decryption is unsupported due to lack of crypto library"
.L_448650:
          .string "Too many incorrect passphrases"
          .zero 1
.L_448670:
          .string "Failed to initialize HMAC-SHA1"
          .zero 1
.L_448690:
          .string "Can\'t initialize ZIP decompression."
          .zero 4
.L_4486b8:
          .string "Truncated Zip encrypted body: only %jd bytes available"
          .zero 1
.L_4486f0:
          .string "Extra data overflow: Need %d bytes but only found %d bytes"
          .zero 5
.L_448730:
          .string "Malformed extra data: Consumed %d bytes of %d bytes"
          .zero 4
.L_448768:
          .string "Too-small extra data: Need at least 4 bytes, but only found %d bytes"
          .zero 3
.L_4487b0:
          .string "Inconsistent compressed size: %jd in central directory, %jd in local header"
          .zero 4
.L_448800:
          .string "Inconsistent uncompressed size: %jd in central directory, %jd in local header"
          .zero 2
.L_448850:
          .string "Zip file with oversized link entry"
          .zero 5
.L_448878:
          .string "Can\'t allocate memory for Symlink"
          .zero 6
.L_4488a0:
          .string "Symlink cannot be converted from %s to current locale."
          .zero 1
.L_4488d8:
          .string "Read error skipping symlink target name"
.L_448900:
          .string "Invalid central directory signature"
          .zero 4
.L_448928:
          .string "Malformed OS X metadata entry: inconsistent size"
          .zero 7
.L_448960:
          .string "Unsupported ZIP compression method (%s)"
.L_448988:
          .string "Mac metadata is too large: %jd > 4M bytes"
          .zero 6
.L_4489b8:
          .string "Can\'t allocate memory for Mac metadata"
          .zero 1
.L_4489e0:
          .string "Out of memory for ZIP decompression"
          .zero 4
.L_448a08:
          .string "No memory for ZIP decompression"
.L_448a28:
          .string "Truncated ZIP end-of-file record"
          .zero 7
.L_448a50:
          .string "ZIP compressed data is wrong size (read %jd, expected %jd)"
          .zero 5
.L_448a90:
          .string "ZIP uncompressed data is wrong size (read %jd, expected %jd)\n"
          .zero 2
.L_448ad0:
          .string "ZIP bad CRC: 0x%lx should be 0x%lx"
          .zero 5
.L_448af8:
          .string "archive_read_support_format_zip"
.L_448b18:
          .string "archive_read_support_format_zip_seekable"
.L_448b41:
          .string "Unknown encryption flag: %u"
.L_448b5d:
          .string "Encrypted file is unsupported"
.L_448b7b:
          .string "Truncated ZIP file data"
.L_448b93:
          .string "Corrupted ZIP file data"
.L_448bab:
          .string "No memory for ZIP decryption"
.L_448bc8:
          .string "ZIP bad Authentication code"
.L_448be4:
          .string "ignorecrc32"
.L_448bf0:
          .string "Incorrect passphrase"
.L_448c05:
          .string "Truncated ZIP file header"
.L_448c1f:
          .string "Damaged Zip archive"
.L_448c33:
          .string "Inconsistent CRC32 values"
.L_448c4d:
          .string "Truncated Zip file"
.L_448c60:
          .string "ZIP %d.%d (%s)"
.L_448c6f:
          .string "Out  of memory"
.L_448c7e:
          .string "__MACOSX/"
.L_448c88:
          .string "._"
.L_448c8b:
          .string "ZIP decompression failed (%d)"
.L_448ca9:
          .string "Truncated ZIP file body"
.L_448cc1:
          .string "Can\'t allocate zip data"
.L_448cd9:
          .string "uncompressed"
.L_448ce6:
          .string "shrinking"
.L_448cf0:
          .string "reduced-1"
.L_448cfa:
          .string "reduced-2"
.L_448d04:
          .string "reduced-3"
.L_448d0e:
          .string "reduced-4"
.L_448d18:
          .string "imploded"
.L_448d21:
          .string "deflation"
.L_448d2b:
          .string "deflation-64-bit"
.L_448d3c:
          .string "ibm-terse"
.L_448d46:
          .string "bzip"
.L_448d4b:
          .byte 0x69
          .byte 0x62
          .byte 0x6d
          .byte 0x2d
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x2d
.L_448d55:
          .string "new"
.L_448d59:
          .string "ibm-lz777"
.L_448d63:
          .string "wav-pack"
.L_448d6c:
          .string "ppmd-1"
.L_448d73:
          .string "aes"
.L_448d77:
          .string "Programing error"
.L_448d88:
          .string "CP932"
.L_448d8e:
          .string "UTF-16LE"
.L_448d97:
          .byte 0x55
          .byte 0x54
          .byte 0x46
          .byte 0x38
          .byte 0x0
.L_448d9c:
          .string "UTF16BE"
.L_448da4:
          .string "UTF16LE"
.L_448dac:
          .string "SJIS"
          .zero 7
.L_448db8:
          .string "Could not allocate memory for a string conversion object"
          .zero 7
.L_448df8:
          .string "iconv_open failed : Cannot handle ``%s\'\'"
          .zero 31
.L_448e40:
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448f40:
          .byte 0xef
          .byte 0xbf
.L_448f42:
          .byte 0xbd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448f60:
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x99
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bb20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bd00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xf
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x14
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x42
          .byte 0x0
          .byte 0x43
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x5c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bf80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe8
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe8
          .byte 0xd8
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xca
          .byte 0xca
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xca
          .byte 0xca
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xf0
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe8
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe9
          .byte 0xea
          .byte 0xea
          .byte 0xe9
          .byte 0xea
          .byte 0xea
          .byte 0xe9
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xde
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xde
          .byte 0xe4
          .byte 0xe6
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0x19
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x67
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x6b
          .byte 0x6b
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x7a
          .byte 0x7a
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x82
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x82
          .byte 0x82
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x9
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x9
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x1
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xea
          .byte 0xd6
          .byte 0xdc
          .byte 0xca
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0x1
          .byte 0x1
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0x1
          .byte 0x1
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xe4
          .byte 0xe8
          .byte 0xde
          .byte 0xe0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0xd8
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xd8
          .byte 0xd8
          .byte 0xd8
          .byte 0xd8
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c6c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c8a0:
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x10
          .byte 0x1
          .byte 0x0
.L_44f444:
          .string "0123456789abcdef"
.L_44f455:
          .string "(null)"
.L_44f45c:
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f478:
          .long .L_432400-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432398-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_4322a0-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432360-.L_44f478
          .long .L_432500-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_4322a0-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432560-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_4322a0-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_432310-.L_44f478
          .long .L_4322a0-.L_44f478
.L_44f5c8:
          .long .L_432408-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_4323a0-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_4324a0-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432368-.L_44f5c8
          .long .L_432460-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_4324a0-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432420-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_4324a0-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_432310-.L_44f5c8
          .long .L_4324a0-.L_44f5c8
.L_44f718:
          .string "libarchive 3.2.2"
.L_44f729:
          .string " zlib/"
.L_44f730:
          .string " liblzma/"
.L_44f73a:
          .string "5.2.2"
.L_44f740:
          .string " bz2lib/"
.L_44f749:
          .string "/tmp"
.L_44f74e:
          .string "TMPDIR"
.L_44f755:
          .string "libarchive_XXXXXX"
          .zero 1
.L_44f768:
          .string "Fatal Internal Error in libarchive: "
          .zero 3
.L_44f790:
          .string "archive_write_data_block not supported"
          .zero 1
.L_44f7b8:
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f7e8:
          .string "e"
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f810:
          .string "d"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f838:
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x0
.L_44f843:
          .string "Buffer overrun"
.L_44f852:
          .string "default:"
          .byte 0x61
          .byte 0x73
          .byte 0x6b
          .byte 0x0
          .byte 0x6f
          .byte 0x77
          .byte 0x6e
          .byte 0x65
          .byte 0x72
          .byte 0x40
          .byte 0x0
          .byte 0x67
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x70
          .byte 0x40
          .byte 0x0
          .byte 0x65
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x79
          .byte 0x6f
          .byte 0x6e
          .byte 0x65
          .byte 0x40
          .byte 0x0
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x77
          .byte 0x0
          .byte 0x61
          .byte 0x75
          .byte 0x64
          .byte 0x69
          .byte 0x74
          .byte 0x0
          .byte 0x61
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f88c:
          .string "o"
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f8a8:
          .string "u"
          .zero 2
.L_44f8ac:
          .string "s"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f8bc:
          .string "g"
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f8d8:
          .string "g"
          .zero 2
.L_44f8dc:
          .string "r"
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f8f0:
          .string "m"
          .zero 2
.L_44f8f4:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f904:
          .string "o"
          .zero 2
.L_44f908:
          .string "t"
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f91c:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f934:
          .string "d"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f948:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f960:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f978:
          .string "e"
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f994:
          .long .L_4357fc-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_4359d0-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_4359b0-.L_44f994
          .long .L_435990-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435970-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435950-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435930-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435910-.L_44f994
          .long .L_4358f0-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_4358b0-.L_44f994
          .long .L_435890-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435870-.L_44f994
          .long .L_4357f4-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_435b90-.L_44f994
          .long .L_4358d0-.L_44f994
          .long .L_435853-.L_44f994
.L_44fac4:
          .long .L_4359fa-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_435af0-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_4359f0-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_435b70-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_435b50-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_435b30-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_435b10-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_43574d-.L_44fac4
          .long .L_435ad1-.L_44fac4
.L_44fbcc:
          .long .L_436684-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4367d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4367b0-.L_44fbcc
          .long .L_436790-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_436770-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_436750-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_436730-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_436710-.L_44fbcc
          .long .L_4366f0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_436830-.L_44fbcc
          .long .L_436810-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4367f0-.L_44fbcc
          .long .L_43667c-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_4369d0-.L_44fbcc
          .long .L_436850-.L_44fbcc
          .long .L_4366dc-.L_44fbcc
.L_44fcfc:
          .long .L_43687a-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_436930-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_436870-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369b0-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_436990-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_436970-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_436950-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_4369e8-.L_44fcfc
          .long .L_436912-.L_44fcfc
.L_44fe04:
          .string "eof"
.L_44fe08:
          .string "closed"
.L_44fe0f:
          .string "fatal"
.L_44fe15:
          .string "archive_write"
.L_44fe23:
          .string "archive_read"
.L_44fe30:
          .string "archive_write_disk"
.L_44fe43:
          .string "archive_read_disk"
.L_44fe55:
          .string "archive_match"
.L_44fe63:
          .string "PROGRAMMER ERROR: Function "
          .zero 1
.L_44fe80:
          .string " invoked with invalid archive handle.\n"
          .zero 1
.L_44fea8:
          .string "PROGRAMMER ERROR: Function \'%s\' invoked on \'%s\' archive object, which is not supported."
.L_44ff00:
          .string "INTERNAL ERROR: Function \'%s\' invoked with archive structure in state \'%s\', should be in state \'%s\'"
.L_44ff64:
          .string "invalid unit number"
.L_44ff78:
          .string "invalid subunit number"
.L_44ff8f:
          .string "386bsd"
.L_44ff96:
          .string "4bsd"
.L_44ff9b:
          .string "bsdos"
.L_44ffa1:
          .string "freebsd"
.L_44ffa9:
          .string "hpux"
.L_44ffae:
          .string "isc"
.L_44ffb2:
          .string "linux"
.L_44ffb8:
          .string "native"
.L_44ffbf:
          .string "netbsd"
.L_44ffc6:
          .string "osf1"
.L_44ffcb:
          .string "sco"
.L_44ffcf:
          .string "solaris"
.L_44ffd7:
          .string "sunos"
.L_44ffdd:
          .string "svr3"
.L_44ffe2:
          .string "svr4"
.L_44ffe7:
          .string "ultrix"
          .zero 2
.L_44fff0:
          .string "too many fields for format"
          .zero 5
.L_450010:
          .string "invalid minor number"
          .zero 11
.L_450030:
          .string "invalid major number"
          .zero 11
.L_450050:
          .byte 0x19
          .byte 0xe
          .byte 0x9
          .byte 0x7
          .byte 0x5
          .byte 0x5
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
.L_450060:
          .byte 0xdd
          .byte 0x3c
          .byte 0x3f
          .byte 0x1f
          .byte 0xbf
          .byte 0x59
          .byte 0xf3
          .byte 0x48
          .byte 0xa1
          .byte 0x64
          .byte 0xbc
          .byte 0x5a
          .byte 0x32
          .byte 0x66
          .byte 0x51
          .byte 0x60
.L_450070:
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
.L_450080:
          .string "archive_read_add_passphrase"
          .zero 4
.L_4500a0:
          .string "Empty passphrase is unacceptable"
          .zero 7
.L_4500c8:
          .string "archive_read_set_passphrase_callback"
          .zero 3
.L_4500f0:
          .string "No memory for 7-Zip decompression"
          .zero 6
.L_450118:
          .string "Failed to initialize PPMd range decorder"
          .zero 7
.L_450148:
          .string "Unsupported filter %lx for %lx"
          .zero 1
.L_450168:
          .string "Coludn\'t allocate memory for PPMd"
          .zero 6
.L_450190:
          .string "Crypto codec not supported yet (ID: 0x%lX)"
          .zero 5
.L_4501c0:
          .string "The %s is encrypted, but currently not supported"
          .zero 7
.L_4501f8:
          .string "The %s is encoded with many filters, but currently not supported"
          .zero 7
.L_450240:
          .string "Unsupported form of BCJ2 streams"
          .zero 7
.L_450268:
          .string "7-Zip bad CRC: 0x%lx should be 0x%lx"
          .zero 3
.L_450290:
          .string "Couldn\'t find out 7-Zip header"
          .zero 1
.L_4502b0:
          .string "Can\'t allocate memory for Symname"
          .zero 6
.L_4502d8:
          .string "archive_read_support_format_7zip"
          .zero 7
.L_450300:
          .long .L_43e058-.L_450300
          .long .L_43e058-.L_450300
          .long .L_43e0d8-.L_450300
          .long .L_43e0d8-.L_450300
          .long .L_43e0d8-.L_450300
          .long .L_43e060-.L_450300
          .long .L_43e078-.L_450300
          .long .L_43e090-.L_450300
          .long .L_43e0a8-.L_450300
          .long .L_43e0c0-.L_450300
          .long .L_43e040-.L_450300
.L_45032c:
          .long .L_442a2a-.L_45032c
          .long .L_44288a-.L_45032c
          .long .L_442aad-.L_45032c
          .long .L_4428e0-.L_45032c
          .long .L_442730-.L_45032c
          .long .L_442730-.L_45032c
          .long .L_442730-.L_45032c
          .long .L_442671-.L_45032c
          .long .L_44263b-.L_45032c
          .long .L_44263b-.L_45032c
          .long .L_44263b-.L_45032c
          .long .L_442636-.L_45032c
          .zero 4
.L_450360:
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450368:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450380:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4503a8:
          .string "Truncated 7-Zip file body"
.L_4503c2:
          .string "BCJ2 conversion Failed"
.L_4503d9:
          .string "Decompression failed(%d)"
.L_4503f2:
          .string "Decompression internal error"
.L_45040f:
          .string "Failed to decode PPMd"
.L_450425:
          .string "Damaged 7-Zip archive"
.L_45043b:
          .string "Truncated 7-Zip file data"
.L_450455:
          .string "Unexpected codec ID: %lX"
.L_45046e:
          .string "Malformed PPMd parameter"
.L_450487:
          .string "Unknown codec ID: %lX"
.L_45049d:
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
.L_4504a2:
          .string "content"
.L_4504aa:
          .string "Malformed 7-Zip archive"
          .byte 0x37
          .byte 0x7a
          .byte 0xbc
          .byte 0xaf
          .byte 0x27
          .byte 0x1c
          .byte 0x0
.L_4504c9:
          .string "7-Zip"
.L_4504cf:
          .string "Not 7-Zip archive file"
.L_4504e6:
          .string "Couldn\'t allocate memory"
.L_4504ff:
          .byte 0x4d
          .byte 0x61
          .byte 0x6c
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x48
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x65
          .byte 0x72
          .byte 0x20
.L_450510:
          .string "offset"
.L_450517:
          .string "Unexpected Property ID = %X"
.L_450533:
          .string "Can\'t allocate 7zip data"
.L_45054c:
          .byte 0x37
.L_45054d:
          .string "zip"
#===================================
# end section .rodata
#===================================

#===================================
.section .gcc_except_table ,"a",@progbits
.align 8
#===================================

.L_459e28:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_459e3b-.L_459e2c
.L_459e2c:
          .uleb128 .L_403010-.L_402ff0
          .uleb128 .L_403065-.L_403010
          .zero 2
          .uleb128 .L_40308e-.L_402ff0
          .uleb128 .L_4030c1-.L_40308e
          .uleb128 .L_4030eb-.L_402ff0
          .zero 1
          .uleb128 .L_4030fe-.L_402ff0
          .uleb128 .L_403103-.L_4030fe
          .zero 2
.L_459e3b:
#===================================
# end section .gcc_except_table
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_65aa70:
          .quad .L_402fc0
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_65aa78:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_65aa80:
          .quad .L_444cfd
          .quad .L_444d02
          .quad .L_444d08
          .quad .L_444d10
.L_65aaa0:
          .quad .L_429c60
          .quad .L_429c50
.L_65aab0:
          .quad .L_4291b0
          .quad .L_4291d0
.L_65aac0:
          .zero 8
          .quad .L_448cd9
.L_65aad0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448ce6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448cf0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448cfa
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d04
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d0e
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d18
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447daf
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d21
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d2b
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d3c
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447daf
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447daf
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447c80
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447daf
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447daf
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447daf
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d4b
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d59
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d63
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d73
          .zero 16
.L_65ac40:
          .quad .L_4375f0
.L_65ac48:
          .quad .L_437540
.L_65ac50:
          .quad .L_4373d0
.L_65ac58:
          .quad .L_437310
          .quad .L_437540
          .quad .L_4373d0
          .quad .L_437310
          .zero 8
.L_65ac80:
          .quad .L_4377c0
.L_65ac88:
          .quad .L_4376b0
.L_65ac90:
          .quad .L_437620
          .quad .L_437790
          .quad .L_437810
          .quad .L_437660
.L_65acb0:
          .quad .L_437760
.L_65acb8:
          .quad .L_437830
.L_65acc0:
          .quad .L_437670
          .quad .L_437730
          .quad .L_437850
          .quad .L_437680
          .quad .L_437700
          .quad .L_437870
          .quad .L_437690
          .quad .L_4376d0
          .quad .L_4377f0
          .quad .L_4376a0
          .zero 16
.L_65ad20:
          .quad .L_43a7d0
.L_65ad28:
          .quad .L_43a7c0
.L_65ad30:
          .quad .L_43a770
.L_65ad38:
          .quad .L_43a750
.L_65ad40:
          .quad .L_43b4a0
.L_65ad48:
          .quad .L_43ad30
.L_65ad50:
          .quad .L_43ad00
.L_65ad58:
          .quad .L_43b7e0
.L_65ad60:
          .quad .L_43b360
.L_65ad68:
          .quad .L_43b390
.L_65ad70:
          .quad .L_43bd20
.L_65ad78:
          .quad .L_43b1f0
.L_65ad80:
          .quad .L_43c4f0
          .quad .L_43b3c0
          .quad .L_43b470
          .quad .L_43c970
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 16
.L_65b430:
          .quad __gxx_personality_v0
          .zero 8
.L_65b440:
          .quad .L_4460c5
          .quad .L_4460c9
          .zero 16
.L_65b460:
          .quad .L_4460b6
          .quad .L_447651
          .quad .L_447df2
          .zero 8
.L_65b480:
          .quad .L_44606a
          .quad .L_44606f
          .quad .L_44607a
          .quad .L_446081
          .quad .L_44608e
          .quad .L_446095
          .quad .L_4460a2
          .quad .L_4460a9
          .quad .L_4447c9
          .zero 24
.L_65b4e0:
          .quad .L_44604c
          .quad .L_446056
          .quad .L_44605d
          .zero 8
.L_65b500:
          .quad .L_446fb4
          .quad .L_445ff0
          .quad .L_445ff9
          .zero 8
.L_65b520:
          .quad .L_446039
          .quad .L_44603d
          .quad .L_446047
          .zero 8
.L_65b540:
          .quad .L_445195
          .quad .L_446033
          .quad .L_447ca7
          .zero 8
.L_65b560:
          .quad .L_446029
          .quad .L_44602d
          .zero 16
.L_65b580:
          .quad .L_44604f
          .quad .L_446f91
          .zero 16
.L_65b5a0:
          .quad .L_4504a2
          .quad .L_446020
          .quad .L_447a56
          .zero 8
.L_65b5c0:
          .quad .L_41b320
          .quad .L_41b310
          .zero 16
.L_65b5e0:
          .quad .L_44ff8f
          .quad .L_43a9e0
          .quad .L_44ff96
          .quad .L_43a9e0
          .quad .L_44ff9b
          .quad .L_43ab90
          .quad .L_44ffa1
          .quad .L_43a980
          .quad .L_44ffa9
          .quad .L_43ab20
          .quad .L_44ffae
          .quad .L_43a9e0
          .quad .L_44ffb2
          .quad .L_43a9e0
          .quad .L_44ffb8
          .quad .L_43a830
          .quad .L_44ffbf
          .quad .L_43a8f0
          .quad .L_44ffc6
          .quad .L_43aa40
          .quad .L_44ffcb
          .quad .L_43a9e0
          .quad .L_44ffcf
          .quad .L_43aab0
          .quad .L_44ffd7
          .quad .L_43a9e0
          .quad .L_44ffdd
          .quad .L_43a9e0
          .quad .L_44ffe2
          .quad .L_43aab0
          .quad .L_44ffe7
          .quad .L_43a9e0
.L_65b6e0:
          .quad .L_43e170
          .quad .L_43e160
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_65b700:
          .zero 32
.L_65b720:
          .zero 8
.L_65b728:
          .zero 40
.L_65b750:
          .zero 8
.L_65b758:
          .zero 8
.L_65b760:
          .zero 8
.L_65b768:
          .zero 8
.L_65b770:
          .zero 8
.L_65b778:
          .zero 8
.L_65b780:
          .zero 8
.L_65b788:
          .zero 4
.L_65b78c:
          .zero 20
.L_65b7a0:
          .zero 32
.L_65b7c0:
          .zero 1024
.L_65bbc0:
          .zero 66
.L_65bc02:
          .zero 62
.L_65bc40:
          .zero 4
.L_65bc44:
          .zero 12
.L_65bc50:
          .zero 8
.L_65bc58:
          .zero 8
.L_65bc60:
          .zero 32
.L_65bc80:
          .zero 8
.L_65bc88:
          .zero 24
#-----------------------------------
.align 16
.globl _end
.type _end, @notype
#-----------------------------------
_end:
#===================================
# end section .bss
#===================================
